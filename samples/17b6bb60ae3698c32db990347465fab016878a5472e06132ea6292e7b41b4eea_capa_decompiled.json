{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00403ed5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl\nfcn.00403ed5(int32_t noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_8h\n            , uint arg_ch, uint arg_10h)\n\n{\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    int32_t var_ch;\n    \n    if ((~*(noname_0 + 0x14) & 1) == 0) {\n        iVar1 = noname_2;\n        if (noname_2 != 0) {\n            do {\n                fcn.00403c28(noname_0, var_ch, noname_0, unaff_ESI, unaff_EBP, unaff_retaddr, noname_0, var_ch, noname_2\n                             , noname_3, noname_4, noname_5, arg_8h, arg_ch);\n                var_ch = var_ch + 0x10;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else if (noname_2 != 0) {\n        do {\n            fcn.00403456(var_ch);\n            fcn.00403a5e();\n            var_ch = var_ch + 0x10;\n            noname_2 = noname_2 + -1;\n        } while (noname_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "00406388": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406388(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.0040f4c0(&var_20h, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1003, 0, &var_20h);\n    if ((arg_8h != NULL) && ((uVar1 & 1) != 0)) {\n        puVar2 = fcn.00427499(&var_20h, 0xffffffff);\n        *arg_8h = *puVar2;\n    }\n    if ((arg_ch != NULL) && ((uVar1 & 2) != 0)) {\n        puVar2 = fcn.00427499(&var_10h, 0xffffffff);\n        *arg_ch = *puVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 250
    },
    "004063fc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004063fc(ulong *arg_8h, ulong *arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.0040f4c0(&var_30h, 0, 0x20);\n    var_4h = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1003, 0, &var_30h);\n    if (arg_8h != NULL) {\n        if ((var_4h & 1) == 0) {\n            *(arg_8h + 1) = 2;\n        }\n        else {\n            fcn.0040520a(&var_30h);\n            *arg_8h = _var_10h;\n            *(arg_8h + 1) = var_8h;\n        }\n    }\n    if (arg_ch != NULL) {\n        if ((var_4h & 2) == 0) {\n            *(arg_ch + 1) = 2;\n        }\n        else {\n            fcn.0040520a(&var_20h);\n            *arg_ch = _var_10h;\n            *(arg_ch + 1) = var_8h;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 335
    },
    "00406af9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00406af9(ulong *arg_8h, ulong *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f4c0(&var_2ch, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1011, 0, &var_2ch);\n    if (((uVar1 & 1) != 0) && (arg_8h != NULL)) {\n        fcn.0040520a(&var_2ch);\n        *arg_8h = _var_ch;\n        *(arg_8h + 1) = var_4h;\n    }\n    if (((uVar1 & 2) != 0) && (arg_ch != NULL)) {\n        fcn.0040520a(&var_1ch);\n        *arg_ch = _var_ch;\n        *(arg_ch + 1) = var_4h;\n    }\n    return uVar1;\n}\n",
        "token_count": 281
    },
    "00406b77": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406b77(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.0040f4c0(&var_20h, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1011, 0, &var_20h);\n    if (((uVar1 & 1) != 0) && (arg_8h != 0)) {\n        fcn.0040f660(arg_8h, &var_20h, 0x10);\n    }\n    if (((uVar1 & 2) != 0) && (arg_ch != 0)) {\n        fcn.0040f660(arg_ch, &var_10h, 0x10);\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "00406c3a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406c3a(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.0040f4c0(&var_20h, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1011, 0, &var_20h);\n    if (((uVar1 & 1) != 0) && (arg_8h != NULL)) {\n        puVar2 = fcn.00427499(&var_20h, 0xffffffff);\n        *arg_8h = *puVar2;\n    }\n    if (((uVar1 & 2) != 0) && (arg_ch != NULL)) {\n        puVar2 = fcn.00427499(&var_10h, 0xffffffff);\n        *arg_ch = *puVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 252
    },
    "00409396": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409396(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (((*(in_ECX + 0x71) & 0x10) != 0) && ((*(in_ECX + 0x6c) & 1) != arg_8h)) {\n        arg_8h = NULL;\n        *(in_ECX + 0x6c) = *(in_ECX + 0x6c) ^ 1;\n        iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x449d20, &arg_8h);\n        if (-1 < iVar1) {\n            (**(*arg_8h + 0x14))(arg_8h, 0xfffffd37);\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0040d6fb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040d6fb(int32_t noname_0, int32_t noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint hWnd)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint noname_3_00;\n    uint noname_4_00;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    uint32_t noname_2_00;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (noname_1 == 0) {\ncode_r0x0040d7aa:\n        noname_2_00 = 0x40d7b3;\n        uVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(*(noname_0 + 0x1c));\n        iVar3 = fcn.0042b601();\n        if (iVar3 == 0) {\n            return noname_0;\n        }\n    }\n    else {\n        noname_2_00 = *(noname_1 + 0x1c);\n        uVar2 = (*_sym.imp.USER32.dll_GetWindow)(noname_2_00, 2);\n        noname_0 = unaff_ESI;\n        iVar3 = fcn.0042b601(uVar2);\n        while (iVar3 == 0) {\n            in_stack_ffffffe4 = *(noname_1 + 0x1c);\n            in_stack_ffffffe0 = 0x40d72f;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)();\n            uVar2 = fcn.0042b601(uVar2);\n            noname_1 = fcn.0040d6a2(noname_0, uVar2);\n            if ((noname_1 == 0) || (noname_1 == noname_0)) goto code_r0x0040d7aa;\n            noname_2_00 = *(noname_1 + 0x1c);\n            uVar2 = (*pcVar1)(noname_2_00, 2);\n            iVar3 = fcn.0042b601(uVar2);\n        }\n        in_stack_ffffffe0 = *(noname_1 + 0x1c);\n        in_stack_ffffffe4 = 2;\n        uVar2 = (*pcVar1)();\n        iVar3 = fcn.0042b601();\n    }\n    noname_4_00 = 0xffffffec;\n    noname_3_00 = *(iVar3 + 0x1c);\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar4 & 0x10000) != 0) {\n        if ((((noname_2_00 & 1) == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c)),  iVar5 != 0))\n           && (((noname_2_00 & 2) == 0 || (iVar5 = fcn.0042eb69(),  iVar5 != 0)))) {\n            noname_0 = iVar3;\n            iVar3 = 0;\n        }\n        iVar3 = fcn.0040d6fb(noname_0, iVar3, noname_2_00, noname_3_00, noname_4_00, unaff_EBX, uVar2, in_stack_ffffffe0\n                             , in_stack_ffffffe4);\n    }\n    return iVar3;\n}\n",
        "token_count": 851
    },
    "0040da8a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.0040da8a(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (param_1 == 0) {\n        return param_1;\n    }\n    iVar1 = *(param_1 + 0x38);\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x71) & 0x10) != 0) {\n            return (-((*(iVar1 + 0x6c) & 1) != 0) & 0xfffffff0) + 0x20;\n        }\n        return 0;\n    }\n    uVar2 = fcn.0040d646(param_1, 0);\n    return uVar2 & 0x30;\n}\n",
        "token_count": 177
    },
    "004109ee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004109ee(uint8_t *arg_8h, int32_t arg_ch, uint8_t **arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t **arg_10h_00;\n    uint32_t *arg_14h_00;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    arg_14h_00 = arg_14h;\n    arg_10h_00 = arg_10h;\n    uVar1 = *arg_8h;\n    do {\n        if ((uVar1 == 0) || (*arg_14h_00 == 0)) {\n            return;\n        }\n        *0x45af0c = 0;\n        uVar1 = *arg_8h;\n        uVar5 = 0;\n        puVar3 = arg_8h + 1;\n        do {\n            arg_10h = puVar3;\n            uVar4 = uVar5;\n            uVar5 = uVar4 + 1;\n            puVar3 = arg_10h + 1;\n        } while (*arg_10h == uVar1);\n        arg_14h._1_3_ = arg_14h >> 8;\n        if (uVar1 < 'e') {\n            if (uVar1 == 100) {\n                if (uVar4 == 0) {\n                    *0x45af0c = 1;\n                }\n                else if (uVar4 != 1) {\n                    if (uVar4 == 2) {\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x61);\n                    }\n                    else {\n                        if (uVar4 != 3) goto code_r0x00410a72;\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x41);\n                    }\n                    goto code_r0x00410ca8;\n                }\n                arg_14h = CONCAT31(arg_14h._1_3_, 100);\n                goto code_r0x00410ca8;\n            }\n            if (uVar1 != 0x27) {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x48) {\n                        if (uVar4 == 0) {\n                            *0x45af0c = 1;\n                        }\n                        else if (uVar5 != 2) goto code_r0x00410a72;\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x48);\n                        goto code_r0x00410ca8;\n                    }\n                    if (uVar1 == 0x4d) {\n                        if (uVar4 == 0) {\n                            *0x45af0c = 1;\n                        }\n                        else if (uVar4 != 1) {\n                            if (uVar4 == 2) {\n                                arg_14h = CONCAT31(arg_14h._1_3_, 0x62);\n                            }\n                            else {\n                                if (uVar4 != 3) goto code_r0x00410a72;\n                                arg_14h = CONCAT31(arg_14h._1_3_, 0x42);\n                            }\n                            goto code_r0x00410ca8;\n                        }\n                        arg_14h = CONCAT31(arg_14h._1_3_, 0x6d);\n                        goto code_r0x00410ca8;\n                    }\n                    if (uVar1 != 0x61) goto code_r0x00410a72;\n                }\n                iVar2 = fcn.00416fc0(arg_8h, \"am/pm\");\n                if (iVar2 == 0) {\n                    arg_10h = arg_8h + 5;\n                }\n                else {\n                    iVar2 = fcn.00416fc0(arg_8h, 0x4480e4);\n                    if (iVar2 == 0) {\n                        arg_10h = arg_8h + 3;\n                    }\n                }\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x70);\n                goto code_r0x00410ca8;\n            }\n            if ((uVar5 & 1) == 0) {\n                arg_10h = arg_8h + uVar5;\n            }\n            else {\n                arg_10h = arg_8h + uVar5;\n                while( true ) {\n                    uVar1 = *arg_10h;\n                    if ((uVar1 == 0) || (*arg_14h_00 == 0)) goto code_r0x00410a98;\n                    if (uVar1 == 0x27) break;\n                    if (((*(*0x455c8c + 1 + uVar1 * 2) & 0x80) != 0) && (1 < *arg_14h_00)) {\n                        **arg_10h_00 = uVar1;\n                        *arg_10h_00 = *arg_10h_00 + 1;\n                        arg_10h = arg_10h + 1;\n                        *arg_14h_00 = *arg_14h_00 - 1;\n                    }\n                    **arg_10h_00 = *arg_10h;\n                    *arg_10h_00 = *arg_10h_00 + 1;\n                    arg_10h = arg_10h + 1;\n                    *arg_14h_00 = *arg_14h_00 - 1;\n                }\n                arg_10h = arg_10h + 1;\n            }\n        }\n        else {\n            if (uVar1 == 0x68) {\n                if (uVar4 == 0) {\n                    *0x45af0c = 1;\n                }\n                else if (uVar5 != 2) goto code_r0x00410a72;\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x49);\n            }\n            else if (uVar1 == 0x6d) {\n                if (uVar4 == 0) {\n                    *0x45af0c = 1;\n                }\n                else if (uVar5 != 2) goto code_r0x00410a72;\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x4d);\n            }\n            else if (uVar1 == 0x73) {\n                if (uVar4 == 0) {\n                    *0x45af0c = 1;\n                }\n                else if (uVar5 != 2) goto code_r0x00410a72;\n                arg_14h = CONCAT31(arg_14h._1_3_, 0x53);\n            }\n            else {\n                if (uVar1 == 0x74) {\n                    if (*(arg_ch + 8) < 0xc) {\n                        puVar3 = *(arg_18h + 0x98);\n                    }\n                    else {\n                        puVar3 = *(arg_18h + 0x9c);\n                    }\n                    while ((0 < uVar5 && (*arg_14h_00 != 0))) {\n                        if (((*(*0x455c8c + 1 + *puVar3 * 2) & 0x80) != 0) && (1 < *arg_14h_00)) {\n                            **arg_10h_00 = *puVar3;\n                            *arg_10h_00 = *arg_10h_00 + 1;\n                            puVar3 = puVar3 + 1;\n                            *arg_14h_00 = *arg_14h_00 - 1;\n                        }\n                        **arg_10h_00 = *puVar3;\n                        *arg_10h_00 = *arg_10h_00 + 1;\n                        puVar3 = puVar3 + 1;\n                        *arg_14h_00 = *arg_14h_00 - 1;\n                        uVar5 = uVar5 - 1;\n                    }\n                    goto code_r0x00410a98;\n                }\n                if (uVar1 != 0x79) {\ncode_r0x00410a72:\n                    if ((*(*0x455c8c + 1 + uVar1 * 2) & 0x80) != 0) {\n                        **arg_10h_00 = uVar1;\n                        *arg_10h_00 = *arg_10h_00 + 1;\n                        *arg_14h_00 = *arg_14h_00 - 1;\n                        arg_8h = arg_8h + 1;\n                    }\n                    **arg_10h_00 = *arg_8h;\n                    *arg_10h_00 = *arg_10h_00 + 1;\n                    arg_10h = arg_8h + 1;\n                    *arg_14h_00 = *arg_14h_00 - 1;\n                    goto code_r0x00410a98;\n                }\n                if (uVar4 == 1) {\n                    arg_14h = CONCAT31(arg_14h._1_3_, 0x79);\n                }\n                else {\n                    if (uVar4 != 3) goto code_r0x00410a72;\n                    arg_14h = CONCAT31(arg_14h._1_3_, 0x59);\n                }\n            }\ncode_r0x00410ca8:\n            fcn.00410520(arg_14h, arg_ch, arg_10h_00, arg_14h_00, arg_18h);\n        }\ncode_r0x00410a98:\n        uVar1 = *arg_10h;\n        arg_8h = arg_10h;\n    } while( true );\n}\n",
        "token_count": 2207
    },
    "0041390c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041390c(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = arg_8h[4];\n    iVar6 = *(arg_ch - 4);\n    piVar10 = arg_ch - 4;\n    uVar11 = arg_ch - arg_8h[3] >> 0xf;\n    uVar7 = *(arg_ch - 8);\n    var_ch = iVar6 + -1;\n    piVar3 = uVar11 * 0x204 + 0x144 + uVar5;\n    uVar13 = *(var_ch + piVar10);\n    if ((uVar13 & 1) == 0) {\n        arg_ch = (uVar13 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        if (*(iVar6 + 3 + piVar10) == *(iVar6 + 7 + piVar10)) {\n            if (arg_ch < 0x20) {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    *arg_8h = *arg_8h & uVar12;\n                }\n            }\n            else {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar12;\n                }\n            }\n        }\n        *(*(iVar6 + 7 + piVar10) + 4) = *(iVar6 + 3 + piVar10);\n        var_ch = var_ch + uVar13;\n        *(*(iVar6 + 3 + piVar10) + 8) = *(iVar6 + 7 + piVar10);\n    }\n    uVar13 = (var_ch >> 4) - 1;\n    if (0x3f < uVar13) {\n        uVar13 = 0x3f;\n    }\n    if ((uVar7 & 1) == 0) {\n        piVar10 = piVar10 - uVar7;\n        arg_ch = (uVar7 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        var_ch = var_ch + uVar7;\n        uVar13 = (var_ch >> 4) - 1;\n        if (0x3f < uVar13) {\n            uVar13 = 0x3f;\n        }\n        if (arg_ch != uVar13) {\n            if (piVar10[1] == piVar10[2]) {\n                if (arg_ch < 0x20) {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                    puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        *arg_8h = *arg_8h & uVar12;\n                    }\n                }\n                else {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                    puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar12;\n                    }\n                }\n            }\n            *(piVar10[2] + 4) = piVar10[1];\n            *(piVar10[1] + 8) = piVar10[2];\n        }\n    }\n    if (((uVar7 & 1) != 0) || (arg_ch != uVar13)) {\n        piVar10[1] = piVar3[uVar13 * 2 + 1];\n        piVar10[2] = piVar3 + uVar13 * 2;\n        (piVar3 + uVar13 * 2)[1] = piVar10;\n        *(piVar10[1] + 8) = piVar10;\n        if (piVar10[1] == piVar10[2]) {\n            cVar4 = *(uVar13 + 4 + uVar5);\n            *(uVar13 + 4 + uVar5) = cVar4 + '\\x01';\n            uVar9 = uVar13;\n            if (uVar13 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n            }\n        }\n    }\n    *piVar10 = var_ch;\n    *(var_ch + -4 + piVar10) = var_ch;\n    *piVar3 = *piVar3 + -1;\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n    uVar5 = *0x45acc8;\n    puVar2 = *0x45acd0;\n    if ((*piVar3 == 0) && (uVar5 = uVar11,  puVar2 = arg_8h,  *0x45acd0 != NULL)) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(*0x45acc8 * 0x8000 + (*0x45acd0)[3], 0x8000, 0x4000);\n        (*0x45acd0)[2] = (*0x45acd0)[2] | 0x80000000U >> (*0x45acc8 & 0x1f);\n        *((*0x45acd0)[4] + 0xc4 + *0x45acc8 * 4) = 0;\n        *((*0x45acd0)[4] + 0x43) = *((*0x45acd0)[4] + 0x43) + -1;\n        if (*((*0x45acd0)[4] + 0x43) == '\\0') {\n            (*0x45acd0)[1] = (*0x45acd0)[1] & 0xfffffffe;\n        }\n        puVar2 = arg_8h;\n        if ((*0x45acd0)[2] == 0xffffffff) {\n            (*pcVar8)((*0x45acd0)[3], 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x45acdc, 0, (*0x45acd0)[4]);\n            fcn.00411960(*0x45acd0, *0x45acd0 + 5, (*0x45acd4 * 0x14 - *0x45acd0) + -0x14 + *0x45acd8);\n            *0x45acd4 = *0x45acd4 + -1;\n            if (*0x45acd0 < arg_8h) {\n                arg_8h = arg_8h + -5;\n            }\n            *0x45accc = *0x45acd8;\n            puVar2 = arg_8h;\n        }\n    }\n    *0x45acd0 = puVar2;\n    *0x45acc8 = uVar5;\n    return;\n}\n",
        "token_count": 2162
    },
    "00417a75": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00417a75(uint arg_8h, uint16_t *arg_ch, uint *arg_10h)\n\n{\n    bool bVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int16_t *piVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint16_t uVar8;\n    uint32_t unaff_EBX;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint var_450h;\n    uint var_251h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_38h = 0;\n    uVar8 = *arg_ch;\n    uVar9 = unaff_EBX & 0xffff0000 | uVar8;\n    var_8h = 0;\n    var_14h = 0;\n    arg_ch = arg_ch + 1;\n    do {\n        if ((uVar8 == 0) || (var_14h < 0)) {\n            return var_14h;\n        }\n        uVar8 = uVar9;\n        if ((uVar8 < 0x20) || (0x78 < uVar8)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = *((uVar9 & 0xffff) + 0x448624) & 0xf;\n        }\n        var_38h = *(var_38h + 0x448644 + uVar3 * 8) >> 4;\n    // switch table (8 cases) at 0x4181a2\n        switch(var_38h) {\n        case 0:\ncode_r0x00417c10:\n            var_1ch = 1;\n            fcn.004181c2(uVar9, arg_8h, &var_14h);\n            break;\n        case 1:\n            var_10h = -1;\n            var_34h = 0;\n            var_30h = 0;\n            var_28h = 0;\n            var_18h = 0;\n            var_4h = 0;\n            var_1ch = 0;\n            break;\n        case 2:\n            uVar3 = uVar9 & 0xffff;\n            if (uVar3 == 0x20) {\n                var_4h = var_4h | 2;\n            }\n            else if (uVar3 == 0x23) {\n                var_4h = var_4h | 0x80;\n            }\n            else if (uVar3 == 0x2b) {\n                var_4h = var_4h | 1;\n            }\n            else if (uVar3 == 0x2d) {\n                var_4h = var_4h | 4;\n            }\n            else if (uVar3 == 0x30) {\n                var_4h = var_4h | 8;\n            }\n            break;\n        case 3:\n            if (uVar8 == 0x2a) {\n                var_28h = fcn.0041824c(&arg_10h);\n                if (var_28h < 0) {\n                    var_4h = var_4h | 4;\n                    var_28h = -var_28h;\n                }\n            }\n            else {\n                var_28h = ((uVar9 & 0xffff) - 0x30) + var_28h * 10;\n            }\n            break;\n        case 4:\n            var_10h = 0;\n            break;\n        case 5:\n            if (uVar8 == 0x2a) {\n                var_10h = fcn.0041824c(&arg_10h);\n                if (var_10h < 0) {\n                    var_10h = -1;\n                }\n            }\n            else {\n                var_10h = ((uVar9 & 0xffff) - 0x30) + var_10h * 10;\n            }\n            break;\n        case 6:\n            uVar3 = uVar9 & 0xffff;\n            if (uVar3 == 0x49) {\n                if ((*arg_ch != 0x36) || (arg_ch[1] != 0x34)) {\n                    var_38h = 0;\n                    goto code_r0x00417c10;\n                }\n                arg_ch = arg_ch + 2;\n                var_4h = var_4h | 0x8000;\n            }\n            else if (uVar3 == 0x68) {\n                var_4h = var_4h | 0x20;\n            }\n            else if (uVar3 == 0x77) {\n                var_4h = var_4h | 0x800;\n            }\n            break;\n        case 7:\n            uVar3 = uVar9 & 0xffff;\n            puVar4 = var_ch;\n            if (uVar3 < 0x68) {\n                if (uVar3 < 0x65) {\n                    if (uVar3 < 0x59) {\n                        if (uVar3 == 0x58) {\ncode_r0x00417ee9:\n                            var_2ch = 7;\ncode_r0x00417eec:\n                            var_8h = 0x10;\n                            if ((var_4h & 0x80) != 0) {\n                                var_20h._0_2_ = 0x30;\n                                var_20h._2_2_ = var_2ch + 0x51;\n                                var_18h = 2;\n                            }\n                            goto code_r0x00417f5a;\n                        }\n                        if (uVar3 != 0x43) {\n                            if ((uVar3 != 0x45) && (uVar3 != 0x47)) {\n                                if (uVar3 == 0x53) {\n                                    if ((var_4h & 0x830) == 0) {\n                                        var_4h = var_4h | 0x20;\n                                    }\n                                    goto code_r0x00417c7a;\n                                }\n                                goto code_r0x0041807b;\n                            }\n                            var_34h = 1;\n                            uVar9 = uVar9 + 0x20;\n                            goto code_r0x00417ceb;\n                        }\n                        if ((var_4h & 0x830) == 0) {\n                            var_4h = var_4h | 0x20;\n                        }\ncode_r0x00417d18:\n                        var_1ch = 1;\n                        var_3ch = fcn.0041824c(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            var_450h._0_2_ = var_3ch;\n                        }\n                        else {\n                            var_21h = 0;\n                            var_22h = var_3ch;\n                            iVar10 = fcn.0041b436(&var_450h, &var_22h, *0x455ff0);\n                            if (iVar10 < 0) {\n                                var_30h = 1;\n                            }\n                        }\n                        var_8h = 1;\n                        puVar4 = &var_450h;\n                    }\n                    else if (uVar3 == 0x5a) {\n                        piVar5 = fcn.0041824c(&arg_10h);\n                        if ((piVar5 == NULL) || (puVar4 = *(piVar5 + 2),  puVar4 == NULL)) {\n                            var_ch = *0x456000;\n                            puVar4 = *0x456000;\n                            goto code_r0x00417dd4;\n                        }\n                        if ((var_4h & 0x800) == 0) {\n                            var_8h = *piVar5;\n                            var_1ch = 0;\n                        }\n                        else {\n                            var_8h = *piVar5 >> 1;\n                            var_1ch = 1;\n                        }\n                    }\n                    else {\n                        if (uVar3 == 99) goto code_r0x00417d18;\n                        if (uVar3 == 100) goto code_r0x00417f4f;\n                    }\n                }\n                else {\ncode_r0x00417ceb:\n                    var_4h = var_4h | 0x40;\n                    puVar4 = &var_450h;\n                    if (var_10h < 0) {\n                        var_10h = 6;\n                    }\n                    else if ((var_10h == 0) && (uVar9 == 0x67)) {\n                        var_10h = 1;\n                    }\n                    var_50h = *arg_10h;\n                    var_4ch = arg_10h[1];\n                    arg_10h = arg_10h + 2;\n                    var_ch = puVar4;\n                    (**0x455898)(&var_50h, &var_450h, uVar9, var_10h, var_34h);\n                    uVar3 = var_4h & 0x80;\n                    if ((uVar3 != 0) && (var_10h == 0)) {\n                        (**0x4558a4)(&var_450h);\n                    }\n                    if ((uVar9 == 0x67) && (uVar3 == 0)) {\n                        (**0x45589c)(&var_450h);\n                    }\n                    if (var_450h == '-') {\n                        var_4h = var_4h | 0x100;\n                        puVar4 = &var_450h + 1;\n                        var_ch = puVar4;\n                    }\ncode_r0x00417dd4:\n                    var_8h = fcn.004154e0(puVar4);\n                    puVar4 = var_ch;\n                }\n            }\n            else {\n                if (uVar3 == 0x69) {\ncode_r0x00417f4f:\n                    var_4h = var_4h | 0x40;\n                }\n                else {\n                    if (uVar3 == 0x6e) {\n                        piVar6 = fcn.0041824c(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            *piVar6 = var_14h;\n                        }\n                        else {\n                            *piVar6 = var_14h;\n                        }\n                        var_30h = 1;\n                        break;\n                    }\n                    if (uVar3 == 0x6f) {\n                        var_8h = 8;\n                        if ((var_4h & 0x80) != 0) {\n                            var_4h = var_4h | 0x200;\n                        }\n                        goto code_r0x00417f5a;\n                    }\n                    if (uVar3 == 0x70) {\n                        var_10h = 8;\n                        goto code_r0x00417ee9;\n                    }\n                    if (uVar3 == 0x73) {\ncode_r0x00417c7a:\n                        iVar10 = var_10h;\n                        if (var_10h == -1) {\n                            iVar10 = 0x7fffffff;\n                        }\n                        puVar4 = fcn.0041824c(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            if (puVar4 == NULL) {\n                                puVar4 = *0x456004;\n                            }\n                            var_1ch = 1;\n                            for (puVar7 = puVar4; (iVar10 != 0 && (*puVar7 != 0)); puVar7 = puVar7 + 2) {\n                                iVar10 = iVar10 + -1;\n                            }\n                            var_8h = puVar7 - puVar4 >> 1;\n                        }\n                        else {\n                            if (puVar4 == NULL) {\n                                puVar4 = *0x456000;\n                            }\n                            var_8h = 0;\n                            puVar7 = puVar4;\n                            if (0 < iVar10) {\n                                do {\n                                    if (*puVar7 == 0) break;\n                                    if ((*(*0x455c8c + 1 + *puVar7 * 2) & 0x80) != 0) {\n                                        puVar7 = puVar7 + 1;\n                                    }\n                                    puVar7 = puVar7 + 1;\n                                    var_8h = var_8h + 1;\n                                } while (var_8h < iVar10);\n                            }\n                        }\n                        goto code_r0x0041807b;\n                    }\n                    if (uVar3 != 0x75) {\n                        if (uVar3 != 0x78) goto code_r0x0041807b;\n                        var_2ch = 0x27;\n                        goto code_r0x00417eec;\n                    }\n                }\n                var_8h = 10;\ncode_r0x00417f5a:\n                if ((var_4h & 0x8000) == 0) {\n                    if ((var_4h & 0x20) == 0) {\n                        if ((var_4h & 0x40) == 0) {\n                            uVar3 = fcn.0041824c(&arg_10h);\n                            uVar11 = uVar3;\n                            goto code_r0x00417fad;\n                        }\n                        uVar3 = fcn.0041824c(&arg_10h);\n                    }\n                    else if ((var_4h & 0x40) == 0) {\n                        uVar3 = fcn.0041824c(&arg_10h);\n                        uVar3 = uVar3 & 0xffff;\n                    }\n                    else {\n                        iVar2 = fcn.0041824c(&arg_10h);\n                        uVar3 = iVar2;\n                    }\n                    uVar11 = uVar3;\n                }\n                else {\n                    uVar11 = fcn.00418259(&arg_10h);\n                }\ncode_r0x00417fad:\n                if ((((var_4h & 0x40) != 0) && (uVar11 < 0x100000000)) && (uVar11 < 0)) {\n                    uVar11 = CONCAT44(-((uVar11 >> 0x20) + (uVar11 != 0)), -uVar11);\n                    var_4h = var_4h | 0x100;\n                }\n                uVar3 = uVar11 >> 0x20;\n                if ((var_4h & 0x8000) == 0) {\n                    uVar3 = 0;\n                }\n                uVar12 = uVar11 & 0xffffffff | uVar3 << 0x20;\n                if (var_10h < 0) {\n                    var_10h = 1;\n                }\n                else {\n                    var_4h = var_4h & 0xfffffff7;\n                }\n                if ((uVar11 | uVar3) == 0) {\n                    var_18h = 0;\n                }\n                var_ch = &var_251h;\n                while ((iVar10 = var_10h + -1,  0 < var_10h || (uVar12 != 0))) {\n                    var_44h = var_8h >> 0x1f;\n                    var_48h = var_8h;\n                    var_10h = iVar10;\n                    iVar10 = fcn.004175b0(uVar12, var_8h, var_44h);\n                    uVar9 = iVar10 + 0x30;\n                    uVar12 = fcn.00417540();\n                    if (0x39 < uVar9) {\n                        uVar9 = uVar9 + var_2ch;\n                    }\n                    puVar4 = var_ch + -1;\n                    *var_ch = uVar9;\n                    var_ch = puVar4;\n                }\n                var_8h = &var_251h + -var_ch;\n                puVar4 = var_ch + 1;\n                var_10h = iVar10;\n                if (((var_4h & 0x200) != 0) && ((*puVar4 != 0x30 || (var_8h == 0)))) {\n                    var_8h = &var_251h + -var_ch + 1;\n                    *var_ch = 0x30;\n                    puVar4 = var_ch;\n                }\n            }\ncode_r0x0041807b:\n            var_ch = puVar4;\n            uVar3 = var_4h;\n            if (var_30h == 0) {\n                if ((var_4h & 0x40) != 0) {\n                    if ((var_4h & 0x100) == 0) {\n                        if ((var_4h & 1) == 0) {\n                            if ((var_4h & 2) == 0) goto code_r0x004180b9;\n                            var_20h._0_2_ = 0x20;\n                        }\n                        else {\n                            var_20h._0_2_ = 0x2b;\n                        }\n                    }\n                    else {\n                        var_20h._0_2_ = 0x2d;\n                    }\n                    var_18h = 1;\n                }\ncode_r0x004180b9:\n                iVar10 = (var_28h - var_18h) - var_8h;\n                if ((var_4h & 0xc) == 0) {\n                    fcn.004181e2(0x20, iVar10, arg_8h, &var_14h);\n                }\n                fcn.00418213(&var_20h, var_18h, arg_8h, &var_14h);\n                if (((uVar3 & 8) != 0) && ((uVar3 & 4) == 0)) {\n                    fcn.004181e2(0x30, iVar10, arg_8h, &var_14h);\n                }\n                if ((var_1ch == 0) && (0 < var_8h)) {\n                    uVar9 = var_8h - 1;\n                    puVar4 = var_ch;\n                    do {\n                        var_40h = fcn.0041b436(&var_3ch, puVar4, *0x455ff0);\n                        uVar3 = uVar9;\n                        if (var_40h < 1) break;\n                        fcn.004181c2(var_3ch, arg_8h, &var_14h);\n                        puVar4 = puVar4 + var_40h;\n                        uVar3 = uVar9 - 1;\n                        bVar1 = 0 < uVar9;\n                        uVar9 = uVar3;\n                    } while (bVar1);\n                }\n                else {\n                    fcn.00418213(var_ch, var_8h, arg_8h, &var_14h);\n                }\n                uVar9 = uVar3;\n                if ((var_4h & 4) != 0) {\n                    fcn.004181e2(0x20, iVar10, arg_8h, &var_14h);\n                }\n            }\n        }\n        uVar8 = *arg_ch;\n        uVar9 = uVar9 & 0xffff0000 | uVar8;\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 4505
    },
    "00418397": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00418397(uint arg_8h, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_ch_00;\n    int16_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint var_248h;\n    uint var_49h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar var_16h;\n    char var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_30h = 0;\n    uVar8 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    var_ch = 0;\n    var_14h = 0;\n    do {\n        if ((uVar8 == 0) || (var_14h < 0)) {\n            return var_14h;\n        }\n        if ((uVar8 < ' ') || ('x' < uVar8)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(uVar8 + 0x448624) & 0xf;\n        }\n        var_30h = *(var_30h + 0x448644 + uVar2 * 8) >> 4;\n    // switch table (8 cases) at 0x418ab8\n        switch(var_30h) {\n        case 0:\ncode_r0x00418536:\n            var_24h = 0;\n            if ((*(*0x455c8c + 1 + uVar8 * 2) & 0x80) != 0) {\n                fcn.00418ad8(uVar8, arg_8h, &var_14h);\n                uVar8 = *arg_ch;\n                arg_ch = arg_ch + 1;\n            }\n            fcn.00418ad8(uVar8, arg_8h, &var_14h);\n            break;\n        case 1:\n            var_10h = -1;\n            var_34h = 0;\n            var_28h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            var_4h = 0;\n            var_24h = 0;\n            break;\n        case 2:\n            if (uVar8 == 0x20) {\n                var_4h = var_4h | 2;\n            }\n            else if (uVar8 == 0x23) {\n                var_4h = var_4h | 0x80;\n            }\n            else if (uVar8 == 0x2b) {\n                var_4h = var_4h | 1;\n            }\n            else if (uVar8 == 0x2d) {\n                var_4h = var_4h | 4;\n            }\n            else if (uVar8 == 0x30) {\n                var_4h = var_4h | 8;\n            }\n            break;\n        case 3:\n            if (uVar8 == 0x2a) {\n                var_20h = fcn.00418b76(&arg_10h);\n                if (var_20h < 0) {\n                    var_4h = var_4h | 4;\n                    var_20h = -var_20h;\n                }\n            }\n            else {\n                var_20h = uVar8 + -0x30 + var_20h * 10;\n            }\n            break;\n        case 4:\n            var_10h = 0;\n            break;\n        case 5:\n            if (uVar8 == 0x2a) {\n                var_10h = fcn.00418b76(&arg_10h);\n                if (var_10h < 0) {\n                    var_10h = -1;\n                }\n            }\n            else {\n                var_10h = uVar8 + -0x30 + var_10h * 10;\n            }\n            break;\n        case 6:\n            if (uVar8 == 0x49) {\n                if ((*arg_ch != 0x36) || (arg_ch[1] != 0x34)) {\n                    var_30h = 0;\n                    goto code_r0x00418536;\n                }\n                arg_ch = arg_ch + 2;\n                var_4h = var_4h | 0x8000;\n            }\n            else if (uVar8 == 0x68) {\n                var_4h = var_4h | 0x20;\n            }\n            else if (uVar8 == 0x6c) {\n                var_4h = var_4h | 0x10;\n            }\n            else if (uVar8 == 0x77) {\n                var_4h = var_4h | 0x800;\n            }\n            break;\n        case 7:\n            puVar4 = var_8h;\n            if (uVar8 < 'h') {\n                if (uVar8 < 'e') {\n                    if (uVar8 < 'Y') {\n                        if (uVar8 == 0x58) {\ncode_r0x00418816:\n                            var_2ch = 7;\ncode_r0x0041881d:\n                            var_ch = 0x10;\n                            if ((var_4h & 0x80) != 0) {\n                                var_16h = 0x30;\n                                var_15h = var_2ch + 'Q';\n                                var_1ch = 2;\n                            }\n                            goto code_r0x00418887;\n                        }\n                        if (uVar8 != 0x43) {\n                            if ((uVar8 != 0x45) && (uVar8 != 0x47)) {\n                                if (uVar8 == 0x53) {\n                                    if ((var_4h & 0x830) == 0) {\n                                        var_4h = var_4h | 0x800;\n                                    }\n                                    goto code_r0x004185c4;\n                                }\n                                goto code_r0x004189a1;\n                            }\n                            var_34h = 1;\n                            uVar8 = uVar8 + 0x20;\n                            goto code_r0x00418625;\n                        }\n                        if ((var_4h & 0x830) == 0) {\n                            var_4h = var_4h | 0x800;\n                        }\ncode_r0x00418652:\n                        if ((var_4h & 0x810) == 0) {\n                            var_248h._0_1_ = fcn.00418b76(&arg_10h);\n                            var_ch = 1;\n                        }\n                        else {\n                            arg_ch_00 = fcn.00418b93();\n                            var_ch = fcn.0041b68f(&var_248h, arg_ch_00);\n                            if (var_ch < 0) {\n                                var_28h = 1;\n                            }\n                        }\n                        puVar4 = &var_248h;\n                    }\n                    else if (uVar8 == 0x5a) {\n                        piVar5 = fcn.00418b76(&arg_10h);\n                        if ((piVar5 == NULL) || (puVar4 = *(piVar5 + 2),  puVar4 == NULL)) {\n                            var_8h = *0x456000;\n                            puVar4 = *0x456000;\n                            goto code_r0x00418797;\n                        }\n                        if ((var_4h & 0x800) == 0) {\n                            var_24h = 0;\n                            var_ch = *piVar5;\n                        }\n                        else {\n                            var_ch = *piVar5 >> 1;\n                            var_24h = 1;\n                        }\n                    }\n                    else {\n                        if (uVar8 == 99) goto code_r0x00418652;\n                        if (uVar8 == 100) goto code_r0x0041887c;\n                    }\n                }\n                else {\ncode_r0x00418625:\n                    var_4h = var_4h | 0x40;\n                    puVar4 = &var_248h;\n                    if (var_10h < 0) {\n                        var_10h = 6;\n                    }\n                    else if ((var_10h == 0) && (uVar8 == 0x67)) {\n                        var_10h = 1;\n                    }\n                    unique0x00007a00 = *arg_10h;\n                    var_44h = arg_10h[1];\n                    arg_10h = arg_10h + 2;\n                    var_8h = puVar4;\n                    (**0x455898)(&var_49h + 1, &var_248h, uVar8, var_10h, var_34h);\n                    uVar2 = var_4h & 0x80;\n                    if ((uVar2 != 0) && (var_10h == 0)) {\n                        (**0x4558a4)(&var_248h);\n                    }\n                    if ((uVar8 == 0x67) && (uVar2 == 0)) {\n                        (**0x45589c)(&var_248h);\n                    }\n                    if (var_248h == '-') {\n                        var_4h = var_4h | 0x100;\n                        puVar4 = &var_248h + 1;\n                        var_8h = puVar4;\n                    }\ncode_r0x00418797:\n                    var_ch = fcn.004154e0(puVar4);\n                    puVar4 = var_8h;\n                }\n            }\n            else {\n                if (uVar8 == 0x69) {\ncode_r0x0041887c:\n                    var_4h = var_4h | 0x40;\n                }\n                else {\n                    if (uVar8 == 0x6e) {\n                        piVar6 = fcn.00418b76(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            *piVar6 = var_14h;\n                        }\n                        else {\n                            *piVar6 = var_14h;\n                        }\n                        var_28h = 1;\n                        break;\n                    }\n                    if (uVar8 == 0x6f) {\n                        var_ch = 8;\n                        if ((var_4h & 0x80) != 0) {\n                            var_4h = var_4h | 0x200;\n                        }\n                        goto code_r0x00418887;\n                    }\n                    if (uVar8 == 0x70) {\n                        var_10h = 8;\n                        goto code_r0x00418816;\n                    }\n                    if (uVar8 == 0x73) {\ncode_r0x004185c4:\n                        iVar9 = var_10h;\n                        if (var_10h == -1) {\n                            iVar9 = 0x7fffffff;\n                        }\n                        puVar3 = fcn.00418b76(&arg_10h);\n                        if ((var_4h & 0x810) == 0) {\n                            puVar4 = puVar3;\n                            if (puVar3 == NULL) {\n                                puVar3 = *0x456000;\n                                puVar4 = *0x456000;\n                            }\n                            for (; (iVar9 != 0 && (*puVar3 != '\\0')); puVar3 = puVar3 + 1) {\n                                iVar9 = iVar9 + -1;\n                            }\n                            var_ch = puVar3 - puVar4;\n                        }\n                        else {\n                            if (puVar3 == NULL) {\n                                puVar3 = *0x456004;\n                            }\n                            var_24h = 1;\n                            for (puVar4 = puVar3; (iVar9 != 0 && (*puVar4 != 0)); puVar4 = puVar4 + 2) {\n                                iVar9 = iVar9 + -1;\n                            }\n                            var_ch = puVar4 - puVar3 >> 1;\n                            puVar4 = puVar3;\n                        }\n                        goto code_r0x004189a1;\n                    }\n                    if (uVar8 != 0x75) {\n                        if (uVar8 != 0x78) goto code_r0x004189a1;\n                        var_2ch = 0x27;\n                        goto code_r0x0041881d;\n                    }\n                }\n                var_ch = 10;\ncode_r0x00418887:\n                if ((var_4h & 0x8000) == 0) {\n                    if ((var_4h & 0x20) == 0) {\n                        if ((var_4h & 0x40) == 0) {\n                            uVar2 = fcn.00418b76(&arg_10h);\n                            uVar11 = uVar2;\n                            goto code_r0x004188da;\n                        }\n                        uVar2 = fcn.00418b76(&arg_10h);\n                    }\n                    else if ((var_4h & 0x40) == 0) {\n                        uVar2 = fcn.00418b76(&arg_10h);\n                        uVar2 = uVar2 & 0xffff;\n                    }\n                    else {\n                        iVar1 = fcn.00418b76(&arg_10h);\n                        uVar2 = iVar1;\n                    }\n                    uVar11 = uVar2;\n                }\n                else {\n                    uVar11 = fcn.00418b83(&arg_10h);\n                }\ncode_r0x004188da:\n                if ((((var_4h & 0x40) != 0) && (uVar11 < 0x100000000)) && (uVar11 < 0)) {\n                    uVar11 = CONCAT44(-((uVar11 >> 0x20) + (uVar11 != 0)), -uVar11);\n                    var_4h = var_4h | 0x100;\n                }\n                uVar2 = uVar11 >> 0x20;\n                if ((var_4h & 0x8000) == 0) {\n                    uVar2 = 0;\n                }\n                uVar12 = uVar11 & 0xffffffff | uVar2 << 0x20;\n                if (var_10h < 0) {\n                    var_10h = 1;\n                }\n                else {\n                    var_4h = var_4h & 0xfffffff7;\n                }\n                if ((uVar11 | uVar2) == 0) {\n                    var_1ch = 0;\n                }\n                var_8h = &var_49h;\n                while ((iVar9 = var_10h + -1,  0 < var_10h || (uVar12 != 0))) {\n                    var_3ch = var_ch >> 0x1f;\n                    var_40h = var_ch;\n                    var_10h = iVar9;\n                    iVar9 = fcn.004175b0(uVar12, var_ch, var_3ch);\n                    iVar9 = iVar9 + 0x30;\n                    uVar12 = fcn.00417540();\n                    if (0x39 < iVar9) {\n                        iVar9 = iVar9 + var_2ch;\n                    }\n                    puVar4 = var_8h + -1;\n                    *var_8h = iVar9;\n                    var_8h = puVar4;\n                }\n                var_ch = &var_49h + -var_8h;\n                puVar4 = var_8h + 1;\n                var_10h = iVar9;\n                if (((var_4h & 0x200) != 0) && ((*puVar4 != '0' || (var_ch == 0)))) {\n                    var_ch = &var_49h + -var_8h + 1;\n                    *var_8h = '0';\n                    puVar4 = var_8h;\n                }\n            }\ncode_r0x004189a1:\n            var_8h = puVar4;\n            uVar2 = var_4h;\n            if (var_28h == 0) {\n                if ((var_4h & 0x40) != 0) {\n                    if ((var_4h & 0x100) == 0) {\n                        if ((var_4h & 1) == 0) {\n                            if ((var_4h & 2) == 0) goto code_r0x004189d9;\n                            var_16h = 0x20;\n                        }\n                        else {\n                            var_16h = 0x2b;\n                        }\n                    }\n                    else {\n                        var_16h = 0x2d;\n                    }\n                    var_1ch = 1;\n                }\ncode_r0x004189d9:\n                iVar9 = (var_20h - var_1ch) - var_ch;\n                if ((var_4h & 0xc) == 0) {\n                    fcn.00418b0d(0x20, iVar9, arg_8h, &var_14h);\n                }\n                fcn.00418b3e(&var_16h, var_1ch, arg_8h, &var_14h);\n                if (((uVar2 & 8) != 0) && ((uVar2 & 4) == 0)) {\n                    fcn.00418b0d(0x30, iVar9, arg_8h, &var_14h);\n                }\n                if ((var_24h == 0) || (uVar2 = var_ch,  puVar4 = var_8h,  var_ch < 1)) {\n                    fcn.00418b3e(var_8h, var_ch, arg_8h, &var_14h);\n                }\n                else {\n                    do {\n                        uVar10 = uVar2 - 1;\n                        iVar7 = fcn.0041b68f(&var_38h, uVar2 & 0xffff0000 | *puVar4);\n                        if (iVar7 < 1) break;\n                        fcn.00418b3e(&var_38h, iVar7, arg_8h, &var_14h);\n                        uVar2 = uVar10;\n                        puVar4 = puVar4 + 2;\n                    } while (uVar10 != 0);\n                }\n                if ((var_4h & 4) != 0) {\n                    fcn.00418b0d(0x20, iVar9, arg_8h, &var_14h);\n                }\n            }\n        }\n        uVar8 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 4327
    },
    "00421f30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00421f30(uint param_1, uint16_t param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.GDI32.dll_SetBkColor)(param_1, *((param_3 & 0xffff) * 4 + 0x45af84));\n    if ((param_3 & 2) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if ((param_3 & 1) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if (param_1 != param_2) {\n        (*_sym.imp.GDI32.dll_SetBkColor)(param_1, *(param_2 * 4 + 0x45af84));\n    }\n    if ((param_3 & 4) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if ((param_3 & 8) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    (*_sym.imp.GDI32.dll_SetBkColor)(param_1, uVar1);\n    return;\n}\n",
        "token_count": 395
    },
    "00423a00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00423a00(uint param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar auStack16 [8];\n    int32_t iStack8;\n    \n    puStack32 = &stack0xfffffff0;\n    uStack36 = param_1;\n    uStack40 = 0x423a16;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    uStack40 = 0xfffffff0;\n    uStack44 = param_1;\n    uStack48 = 0x423a1f;\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if (((uVar3 & 0x10000000) != 0) &&\n       ((((iStack8 == 0 || (uVar1 = *(iStack8 + 0x18),  (uVar1 & 0xc0) != 0)) || ((uVar1 & 2) == 0)) ||\n        ((uVar1 & 1) == 0)))) {\n        puStack56 = &stack0xffffffe0;\n        uStack48 = 1;\n        uStack52 = 1;\n        uStack60 = 0x423a7e;\n        (*_sym.imp.USER32.dll_InflateRect)();\n        uStack60 = param_1;\n        puStack64 = 0x423a85;\n        uVar4 = (*_sym.imp.USER32.dll_GetParent)();\n        pcVar2 = _sym.imp.USER32.dll_ScreenToClient;\n        puStack64 = &stack0xffffffd0;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar4);\n        (*pcVar2)(uVar4, &stack0xffffffd0);\n        if ((uVar3 & 0x200000) != 0) {\n            puStack56 = puStack56 + 1;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(uVar4, &stack0xffffffc0, 0);\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "0042a3a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t fcn.0042a3a0(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint noname_1;\n    uint32_t uVar4;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_10h;\n    int32_t *noname_4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hWnd;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    uint noname_13;\n    \n    noname_13 = 0x42a3aa;\n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = &fcn.0042a3a0::var_20h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar2 = extraout_ECX[0x11];\n    *(unaff_EBP + -0x18) = extraout_ECX[0x12];\n    var_20h = unaff_EDI;\n    var_1ch = unaff_ESI;\n    var_18h = unaff_EBX;\n    iVar1 = fcn.00439e31();\n    uVar5 = *(iVar1 + 0xc);\n    if (extraout_ECX[0x10] != 0) {\n        iVar2 = fcn.00439e31();\n        uVar5 = *(iVar2 + 0xc);\n        uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar5, extraout_ECX[0x10], 5);\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar5, uVar3);\n    }\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        *(unaff_EBP + -0x18) = uVar3;\n    }\n    if (*(unaff_EBP + -0x18) == 0) {\n        iVar2 = -1;\n    }\n    else {\n        uVar3 = fcn.0042a324();\n        *(unaff_EBP + -0x14) = uVar3;\n        fcn.0042bb00();\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14));\n            if (iVar2 != 0) {\n                (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n                *(unaff_EBP + -0x20) = 1;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        noname_4 = extraout_ECX;\n        fcn.0042bab4();\n        uVar3 = *(unaff_EBP + -0x14);\n        noname_1 = fcn.0042b601();\n        iVar2 = fcn.0042a034(*(unaff_EBP + -0x18), noname_1, uVar5, uVar3, noname_4, var_20h, var_1ch, var_18h, hWnd, \n                             in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h, noname_13, unaff_retaddr, param_1, \n                             param_2, param_3, var_10h);\n        if (iVar2 != 0) {\n            if ((*(extraout_ECX + 9) & 0x10) != 0) {\n                uVar5 = 4;\n                uVar4 = fcn.0042e967();\n                if ((uVar4 & 0x100) != 0) {\n                    uVar5 = 5;\n                }\n                fcn.0042e051(uVar5);\n            }\n            if (extraout_ECX[7] != 0) {\n                fcn.0042eaf3(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n            if (iVar2 == extraout_ECX[7]) {\n                (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n            }\n        }\n        (**(*extraout_ECX + 0x58))();\n        fcn.0042a35e();\n        iVar2 = extraout_ECX[0xb];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 1321
    },
    "0042e051": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042e0a9)\n// WARNING: Removing unreachable block (ram,0x0042e0b8)\n// WARNING: Removing unreachable block (ram,0x0042e0be)\n// WARNING: Removing unreachable block (ram,0x0042e0d0)\n// WARNING: Removing unreachable block (ram,0x0042e0d7)\n// WARNING: Removing unreachable block (ram,0x0042e0dd)\n// WARNING: Removing unreachable block (ram,0x0042e0e3)\n// WARNING: Removing unreachable block (ram,0x0042e0f6)\n// WARNING: Removing unreachable block (ram,0x0042e0fd)\n// WARNING: Removing unreachable block (ram,0x0042e119)\n\nint32_t __thiscall fcn.0042e051(int32_t *param_1, uint8_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    \n    if ((param_2 & 4) != 0) {\n        fcn.0042e967();\n    }\n    (*_sym.imp.USER32.dll_GetParent)(param_1[7]);\n    param_1[9] = param_1[9] | 0x18;\n    iVar2 = fcn.00428f48();\n    pcVar1 = _sym.imp.USER32.dll_UpdateWindow;\n    while( true ) {\n        piVar3 = fcn.00428f48();\n        iVar4 = (**(*piVar3 + 0x5c))();\n        if (iVar4 == 0) {\n            fcn.004416c0(0);\n            return -1;\n        }\n        if ((unaff_EBX != 0) && ((*(iVar2 + 0x34) == 0x118 || (*(iVar2 + 0x34) == 0x104)))) {\n            fcn.0042eb42(1);\n            (*pcVar1)(param_1[7]);\n            unaff_EBX = 0;\n        }\n        iVar4 = (**(*param_1 + 0x70))();\n        if (iVar4 == 0) break;\n        piVar3 = fcn.00428f48();\n        iVar4 = (**(*piVar3 + 100))(iVar2 + 0x30);\n        if (iVar4 != 0) {\n            unaff_EBX = 0;\n        }\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2 + 0x30, 0, 0, 0, 0);\n    }\n    param_1[9] = param_1[9] & 0xffffffe7;\n    return param_1[0xb];\n}\n",
        "token_count": 625
    },
    "0042e298": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nbool __cdecl fcn.0042e298(uint32_t arg_8h)\n\n{\n    uint noname_8;\n    uint noname_11;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    bool bVar4;\n    uint *noname_0;\n    uint32_t var_34h;\n    uint var_30h;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00439e31();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.0040f4c0(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00439e31();\n        noname_11 = *0x459298;\n        noname_8 = *(iVar1 + 8);\n        noname_0 = 0x8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            noname_0 = &var_34h;\n            var_34h = 0xb;\n            iVar1 = fcn.0042c2ea(noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0xb, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, *0x459298, var_18h, in_stack_ffffffe8, \n                                 \"AfxWnd42s\", 8, var_8h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            iVar1 = fcn.0042c2ea(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, var_34h, var_30h, \n                                 in_stack_ffffffd0, in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, var_18h, \n                                 in_stack_ffffffe8, \"AfxOleControl42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            iVar1 = fcn.0042c2ea(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, 0x10, in_stack_ffffffe8, \n                                 \"AfxControlBar42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            iVar1 = fcn.0042e1e0(&var_34h, \"AfxMDIFrame42s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            iVar1 = fcn.0042e1e0(&var_34h, \"AfxFrameOrView42s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0042e221(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0042e221(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0042e221(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0042e221(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0042e221(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0042e221(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0042e221(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0042e221(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0042e221(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0042e221(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0042e221(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0042e221(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0042e221(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            uVar3 = uVar3 | 0x10;\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 2147
    },
    "0042e8e5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0042e8e5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_18h != 0) {\n        arg_18h = *(arg_18h + 4);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_ScrollWindowEx)\n                      (*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if ((*(in_ECX + 0x34) != NULL) && ((arg_20h & 1) != 0)) {\n        (**(**(in_ECX + 0x34) + 0x58))(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 231
    },
    "0042e934": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042e934(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 0x25) & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(param_1 + 0x1c), param_2);\n    }\n    else {\n        iVar1 = fcn.00439e31();\n        (**(**(iVar1 + 0x1038) + 0x24))(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0042f0f6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042f0f6(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.0042aa21();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.00429d34(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.00411461(param_1, 4, *puVar1, fcn.0042aa21);\n        if ((param_2 & 1) != 0) {\n            fcn.00429d34(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 182
    },
    "0042fdc5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042fdc5(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t *arg_8h;\n    uint32_t uVar2;\n    \n    param_1[1] = param_3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n    *param_1 = iVar1;\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n        fcn.0040f660(arg_8h, param_3 + 0x40, param_1[1]);\n        if (*(arg_8h + 2) == -1) {\n            uVar2 = arg_8h[3];\n        }\n        else {\n            uVar2 = *arg_8h;\n        }\n        param_1[2] = ~uVar2 >> 6 & 1;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 255
    },
    "00430a1c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_178h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00430a1c(int32_t arg_8h, uint32_t lpMultiByteStr, uchar *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t *piStack432;\n    int32_t *piStack428;\n    uint uStack424;\n    uint *puStack420;\n    uint var_178h;\n    uint psfi;\n    uint var_162h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    uVar3 = 0;\n    *arg_10h = 0;\n    iVar1 = (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    if ((iVar1 != 0) && ((var_162h & 1) != 0)) {\n        puStack420 = 0x430a76;\n        iVar1 = fcn.00430822(0x446e60, 0, 0x446e50, &fcn.00430a1c::var_4h);\n        if (-1 < iVar1) {\n            puStack420 = &fcn.00430a1c::var_8h;\n            uStack424 = 0x44a178;\n            piStack428 = var_4h;\n            piStack432 = 0x430a8f;\n            iVar1 = (***var_4h)();\n            if (-1 < iVar1) {\n                if (lpMultiByteStr == 0) {\n                    puVar4 = NULL;\n                }\n                else {\n                    piStack432 = lpMultiByteStr;\n                    puVar4 = &stack0xfffffe50;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    fcn.0040fca0();\n                    piStack432 = piStack432 & 0xffff0000;\n                    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (0, 0, lpMultiByteStr, 0xffffffff, &stack0xfffffe50, iVar1 + 1);\n                }\n                piStack432 = NULL;\n                iVar1 = (**(*var_8h + 0x14))(var_8h, puVar4);\n                if (-1 < iVar1) {\n                    if (arg_8h == 0) {\n                        uVar2 = 0;\n                    }\n                    else {\n                        uVar2 = *(arg_8h + 0x1c);\n                    }\n                    iVar1 = (**(*var_4h + 0x4c))(var_4h, uVar2, 2);\n                    if (-1 < iVar1) {\n                        (**(*var_4h + 0xc))(var_4h, arg_10h, arg_14h, 0, 0);\n                        (**(*var_8h + 8))(var_8h);\n                        uVar3 = 1;\n                        goto code_r0x00430b22;\n                    }\n                }\n                (**(*var_8h + 8))(var_8h);\n            }\ncode_r0x00430b22:\n            piStack432 = var_4h;\n            (**(*var_4h + 8))();\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 759
    },
    "004311b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004311b9(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint *var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = NULL;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(arg_8h);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (var_4h == 0xffffffff) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00431306(uVar2);\n    }\n    if (((*(arg_ch + 4) != var_4h) && ((var_4h & 1) != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 4)),  iVar3 == 0)) {\n        uVar2 = (*pcVar1)(0);\n        fcn.00431306(uVar2);\n    }\n    if (arg_ch[1] != 0) {\n        fcn.00431106(arg_ch + 1, &var_24h);\n        if (arg_ch[2] != 0) {\n            fcn.00431106(arg_ch + 2, &var_14h);\n            var_8h = &var_14h;\n        }\n        if (*arg_ch != 0) {\n            fcn.00431106(arg_ch, &var_1ch);\n            var_ch = &var_1ch;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n        if (iVar3 == -1) {\n            uVar2 = (*pcVar1)(0);\n            fcn.00431306(uVar2);\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, var_ch, var_8h, &var_24h);\n        if (iVar4 == 0) {\n            uVar2 = (*pcVar1)(0);\n            fcn.00431306(uVar2);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(0);\n            fcn.00431306(uVar2);\n        }\n    }\n    if (((*(arg_ch + 4) != var_4h) && ((var_4h & 1) == 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 4)),  iVar3 == 0)) {\n        uVar2 = (*pcVar1)(0);\n        fcn.00431306(uVar2);\n    }\n    return;\n}\n",
        "token_count": 705
    },
    "004331e6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004331e6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if ((~*(arg_8h + 0x14) & 1) == 0) {\n        if (arg_10h != 0) {\n            do {\n                fcn.0043314e(arg_8h, arg_ch);\n                arg_ch = arg_ch + 4;\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n        }\n    }\n    else if (arg_10h != 0) {\n        do {\n            fcn.0043307e(arg_8h, arg_ch);\n            arg_ch = arg_ch + 4;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "004332f7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004332f7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    piVar1 = *(unaff_EBP + 8);\n    iVar2 = *piVar1;\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    (**(iVar2 + 0x18))(extraout_ECX + 4);\n    uVar3 = *(unaff_EBP + 0xc);\n    extraout_ECX[3] = 0xffffffff;\n    extraout_ECX[5] = uVar3;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[8] = piVar1;\n    extraout_ECX[0xe] = 0;\n    extraout_ECX[0xd] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[1] = 1;\n    if ((~uVar3 & 1) == 0) {\n        extraout_ECX[0xf] = 0x40;\n    }\n    else {\n        extraout_ECX[0xf] = 0x10;\n    }\n    uVar3 = *(unaff_EBP + 0x14);\n    extraout_ECX[6] = 1;\n    extraout_ECX[0xb] = uVar3;\n    iVar2 = *(unaff_EBP + 0x10);\n    extraout_ECX[0x10] = 0x89;\n    extraout_ECX[2] = 0;\n    if (iVar2 < 0x80) {\n        extraout_ECX[7] = 0x80;\n        extraout_ECX[0xb] = 0;\n    }\n    else {\n        extraout_ECX[7] = iVar2;\n    }\n    iVar2 = extraout_ECX[0xb];\n    *(unaff_EBP + 0x10) = extraout_ECX[7];\n    if (iVar2 == 0) {\n        iVar2 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = fcn.00429d0b(extraout_ECX[7]);\n            extraout_ECX[0xb] = uVar3;\n            extraout_ECX[6] = 0;\n        }\n        else {\n            *(unaff_EBP + 0x10) = 0;\n        }\n    }\n    iVar4 = *(unaff_EBP + 0x10) + extraout_ECX[0xb];\n    extraout_ECX[10] = iVar4;\n    iVar2 = extraout_ECX[0xb];\n    if ((*(extraout_ECX + 5) & 1) != 0) {\n        iVar2 = iVar4;\n    }\n    uVar3 = *(unaff_EBP + -0xc);\n    extraout_ECX[9] = iVar2;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 821
    },
    "00433608": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433608(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(param_1 + 0x14) & 1) == 0) {\n        iVar1 = *(param_1 + 0x24);\n        iVar2 = *(param_1 + 0x2c);\n        if (*(param_1 + 8) == 0) {\n            if (iVar1 != iVar2) {\n                (**(**(param_1 + 0x20) + 0x38))(iVar2, iVar1 - iVar2);\n            }\n        }\n        else {\n            if (iVar1 != iVar2) {\n                (**(**(param_1 + 0x20) + 0x50))(2, iVar1 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x20) + 0x50))(1, *(param_1 + 0x1c), param_1 + 0x2c, param_1 + 0x28);\n        }\n        *(param_1 + 0x24) = *(param_1 + 0x2c);\n    }\n    else {\n        if (*(param_1 + 0x28) != *(param_1 + 0x24)) {\n            (**(**(param_1 + 0x20) + 0x28))(*(param_1 + 0x24) - *(param_1 + 0x28), 1);\n        }\n        *(param_1 + 0x24) = *(param_1 + 0x28);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "004388fd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.004388fd(void)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint lpvBits;\n    \n    fcn.0043ad3e(8);\n    if (*0x4592f8 == 0) {\n        iVar3 = 0;\n        puVar2 = &lpvBits;\n        do {\n            uVar1 = iVar3;\n            iVar3 = iVar3 + 1;\n            *puVar2 = 0x5555 << (uVar1 & 1);\n            puVar2 = puVar2 + 2;\n        } while (iVar3 < 8);\n        iVar3 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, &lpvBits);\n        if (iVar3 != 0) {\n            *0x4592f8 = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar3);\n        }\n    }\n    fcn.0043adae(8);\n    fcn.00432b3c(*0x4592f8);\n    return;\n}\n",
        "token_count": 262
    },
    "0043a305": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043a305(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    iVar6 = param_1 + 0x1c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar6);\n    iVar7 = *(param_1 + 4);\n    iVar8 = *(param_1 + 8);\n    if ((iVar7 <= iVar8) || ((*(*(param_1 + 0x10) + iVar8 * 8) & 1) != 0)) {\n        iVar8 = 1;\n        if (1 < iVar7) {\n            puVar3 = *(param_1 + 0x10);\n            do {\n                puVar3 = puVar3 + 8;\n                if ((*puVar3 & 1) == 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar7);\n            if (iVar8 < iVar7) goto code_r0x0043a3ea;\n        }\n        iVar7 = iVar7 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, iVar7 * 8);\n        }\n        else {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar5);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar5, iVar7 * 8, 0x2002);\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GlobalLock;\n        if (iVar4 == 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*pcVar2)(uVar5);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar6);\n            fcn.00426584();\n        }\n        iVar6 = (*pcVar2)(iVar4);\n        fcn.0040f4c0(iVar6 + *(param_1 + 4) * 8, 0, (*(param_1 + 4) * 0x1fffffff + iVar7) * 8);\n        *(param_1 + 0x10) = iVar6;\n        *(param_1 + 4) = iVar7;\n    }\ncode_r0x0043a3ea:\n    if (*(param_1 + 0xc) <= iVar8) {\n        *(param_1 + 0xc) = iVar8 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar8 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n    return iVar8;\n}\n",
        "token_count": 711
    },
    "0043a57a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a57a(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x1c);\n    iVar2 = 1;\n    if (1 < *(param_1 + 0xc)) {\n        do {\n            puVar1 = *(param_1 + 0x10) + iVar2 * 8;\n            if ((*(*(param_1 + 0x10) + 4 + iVar2 * 8) == 0) && ((*puVar1 & 1) != 0)) {\n                *(puVar1 + 4) = unaff_retaddr;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0xc));\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 226
    },
    "00429edb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00429edb(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.0042be79();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042bcbb();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 197
    },
    "00401950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00401950(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x454330);\n    uVar3 = (*pcVar1)(L\"ADVAPI32.DLL\");\n    uVar4 = fcn.0040ee5b(0);\n    fcn.0040ee2c(uVar4);\n    uVar5 = fcn.0040ee39();\n    uVar5 = uVar5 & 0x80000003;\n    if (uVar5 < 0) {\n        uVar5 = (uVar5 - 1 | 0xfffffffc) + 1;\n    }\n    while (uVar5 + 1 < 4) {\n        uVar4 = fcn.0040ee5b(0);\n        fcn.0040ee2c(uVar4);\n        uVar5 = fcn.0040ee39();\n        uVar5 = uVar5 & 0x80000003;\n        if (uVar5 < 0) {\n            uVar5 = (uVar5 - 1 | 0xfffffffc) + 1;\n        }\n    }\n    uVar4 = fcn.00401910(&stack0xffffffe4);\n    *0x4572ec = fcn.004017c0(uVar2, uVar4);\n    *0x4572e8 = fcn.004017c0(uVar2, \"LockResource\");\n    *0x4572f4 = fcn.004017c0(uVar3, \"CryptAcquireContextW\");\n    *0x4572f8 = fcn.004017c0(uVar3, \"CryptImportKey\");\n    *0x4572fc = fcn.004017c0(uVar3, \"CryptEncrypt\");\n    return;\n}\n",
        "token_count": 447
    },
    "00402436": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00402436(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    if (param_2 == 0) {\n        puVar1 = param_1 + 0x12;\n    }\n    else {\n        puVar1 = param_1 + 0x18;\n    }\n    uVar2 = *puVar1;\n    if (uVar2 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        while (puVar1 = puVar1 + 1,  uVar2 != 0) {\n            uVar2 = *puVar1;\n        }\n    }\n    uVar2 = *puVar1;\n    if (uVar2 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        while (puVar1 = puVar1 + 1,  uVar2 != 0) {\n            uVar2 = *puVar1;\n        }\n    }\n    return *puVar1 + 5 + puVar1 & 0xfffffffc;\n}\n",
        "token_count": 261
    },
    "00402876": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402876(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h;\n    if (*(arg_8h + 0x34) != 0) {\n        var_4h = -(*(*(arg_8h + 0x34) + 0x2c) != 0);\n        while (var_4h != 0) {\n            fcn.00428bbb(&var_4h, &var_8h, &arg_8h);\n            iVar2 = *(arg_8h + 0x8c);\n            while (iVar2 != 0) {\n                fcn.0040cef1(arg_8h);\n                if (*(iVar2 + 4) != 0) {\n                    iVar2 = fcn.0042e766(*(iVar2 + 4));\n                    fcn.0040cefa(*(iVar2 + 0x38));\n                }\n                iVar2 = fcn.0040cf0e();\n            }\n            if (*(arg_8h + 0x90) != 0) {\n                iVar2 = fcn.0042e766(*(arg_8h + 0x90));\n                (**(**(iVar2 + 0x38) + 0xb0))();\n                *(arg_8h + 0x90) = *(iVar2 + 0x38);\n                (**(**(*(iVar2 + 0x38) + 0x88) + 8))(arg_8h, 1);\n            }\n        }\n        var_4h = -(*(*(iVar1 + 0x34) + 0x2c) != 0);\n        while (var_4h != 0) {\n            fcn.00428bbb(&var_4h, &var_8h, &arg_8h);\n            if (*(arg_8h + 0x88) != NULL) {\n                (**(**(arg_8h + 0x88) + 0xc))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 476
    },
    "00402991": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8ch\n\nuint __cdecl\nfcn.00402991(uint arg_8h, uint hWndInsertAfter, uint pbstr, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    ushort uVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint *puVar10;\n    int32_t unaff_EBP;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    uint *puVar14;\n    uint *in_FS_OFFSET;\n    uint var_8ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_56h;\n    uint var_50h;\n    uint lpRect;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    puVar14 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x18) = puVar14 + 0x12;\n    if (*(unaff_EBP + 0x10) != 0) {\n        uVar1 = *(puVar14 + 0x12);\n        *(unaff_EBP + -100) = puVar14[2];\n        *(unaff_EBP + -0x60) = puVar14[1];\n        *(unaff_EBP + -0x5c) = *(puVar14 + 3);\n        *(unaff_EBP + -0x5a) = *(puVar14 + 0xe);\n        uVar2 = *(puVar14 + 4);\n        *(unaff_EBP + -0x56) = uVar1;\n        uVar1 = *(puVar14 + 5);\n        puVar10 = puVar14 + 6;\n        *(unaff_EBP + -0x58) = uVar2;\n        *(unaff_EBP + -0x54) = uVar1;\n        puVar14 = unaff_EBP + -100;\n        *(unaff_EBP + -0x18) = puVar10;\n    }\n    iVar4 = *(puVar14 + 10);\n    iVar5 = *(puVar14 + 3);\n    iVar6 = *(puVar14 + 2);\n    *(unaff_EBP + -0x34) = *(puVar14 + 0xe) + iVar4;\n    *(unaff_EBP + -0x40) = iVar6;\n    iVar13 = *(*(unaff_EBP + 8) + 0x1c);\n    *(unaff_EBP + -0x3c) = iVar4;\n    *(unaff_EBP + -0x38) = iVar5 + iVar6;\n    (*_sym.imp.USER32.dll_MapDialogRect)(iVar13, unaff_EBP + -0x40);\n    piVar11 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + 0x10) = 0;\n    if (3 < *(unaff_EBP + 0x20)) {\n        iVar8 = *piVar11;\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + -4;\n        piVar11 = piVar11 + 1;\n        if (iVar8 != 0) {\n            uVar7 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(piVar11, iVar8);\n            *(unaff_EBP + 0x10) = uVar7;\n            piVar11 = piVar11 + iVar8 * 2;\n            *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + iVar8 * -2;\n        }\n    }\n    uVar7 = *0x454618;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x10) = uVar7;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    if ((*(unaff_EBP + 0x18) == 0x37a) || (*(unaff_EBP + 0x18) == 0x37b)) {\n        iVar8 = *piVar11;\n        piVar11 = piVar11 + 3;\n        *(unaff_EBP + -0x2c) = iVar8;\n        *(unaff_EBP + 0x1c) = iVar8 + -0xc;\n        piVar12 = piVar11;\n        if (iVar8 + -0xc != 0) {\n            do {\n                iVar8 = *piVar12;\n                uVar3 = *(piVar12 + 1);\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -6;\n                *(unaff_EBP + -0x28) = iVar8;\n                piVar11 = piVar12 + 6;\n                if (iVar8 == -0x7ffeffff) {\n                    *(unaff_EBP + -0x20) = *piVar11;\n                    iVar13 = piVar12 + 0x16;\n                    *(unaff_EBP + -0x24) = *(piVar12 + 10);\n                    fcn.0042abaa();\n                    *(unaff_EBP + -0x1c) = uVar3;\n                    iVar8 = *(*(unaff_EBP + -0x10) + -8);\n                    *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + (-0x11 - iVar8);\n                    piVar11 = piVar12 + iVar8 + 0x17;\n                }\n                else {\n                    iVar8 = fcn.00429d0b(0x1c);\n                    *(unaff_EBP + -0x30) = iVar8;\n                    *(unaff_EBP + -4) = 1;\n                    if (iVar8 == 0) {\n                        uVar7 = 0;\n                    }\n                    else {\n                        iVar13 = *(unaff_EBP + -0x14);\n                        uVar7 = fcn.0040cecb();\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                piVar12 = piVar11;\n            } while (*(unaff_EBP + 0x1c) != 0);\n            iVar8 = *(unaff_EBP + -0x2c);\n        }\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) - iVar8;\n        *(unaff_EBP + 0x18) = *(unaff_EBP + 0x18) + 0xfffc;\n    }\n    uVar7 = 0;\n    if (**(unaff_EBP + -0x18) == 0x7b) {\n        uVar9 = (*_sym.imp.ole32.dll_CLSIDFromString)();\n    }\n    else {\n        uVar9 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(*(unaff_EBP + -0x18), unaff_EBP + -0x50, iVar13);\n    }\n    *(unaff_EBP + 0x1c) = uVar9;\n    fcn.004353b3(piVar11, *(unaff_EBP + 0x20), 0);\n    iVar4 = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + 0x14) = 0;\n    if (((-1 < *(unaff_EBP + 0x1c)) && (iVar13 = fcn.00407a88(),  iVar13 != 0)) &&\n       (iVar13 = fcn.00407c96(0, unaff_EBP + -0x50, 0, *puVar14, unaff_EBP + -0x40, *(puVar14 + 4), \n                              -(iVar4 != 0x378) & unaff_EBP - 0x8cU, *(unaff_EBP + 0x18) == 0x377, *(unaff_EBP + 0x10), \n                              unaff_EBP + 0x14),  iVar13 != 0)) {\n        fcn.0040975f(1);\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(*(unaff_EBP + 0x14) + 0x20), *(unaff_EBP + 0xc), 0, 0, 0, 0, 0x13);\n        *(*(unaff_EBP + 0x14) + 0x8c) = *(unaff_EBP + -0x14);\n        fcn.0042ab5a(unaff_EBP + -0x10);\n        *(*(unaff_EBP + 0x14) + 0x90) = *(unaff_EBP + -0x1c);\n        *(*(unaff_EBP + 0x14) + 0x94) = *(unaff_EBP + -0x20);\n        *(*(unaff_EBP + 0x14) + 0x98) = *(unaff_EBP + -0x24);\n    }\n    if (*(unaff_EBP + 0x10) != 0) {\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + 0x10));\n    }\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar7 = *(*(unaff_EBP + 0x14) + 0x20);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0043542c();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042aa21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 2418
    },
    "00402de5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402de5(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.00402cbf();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        if (((arg_10h & 3) == 0) &&\n           ((((arg_8h < 0 || (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar2 <= arg_8h)) || (arg_ch < 0)) ||\n            (iVar2 = (*pcVar1)(1),  iVar2 <= arg_ch)))) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 0x12340042;\n        }\n        return uVar3;\n    }\n    uVar3 = (**0x458cfc)(arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 240
    },
    "0040332f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040332f(int16_t *plLbound, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t cDims;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar1 = plLbound;\n    if ((*plLbound != 0x2011) || (iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(plLbound + 4)),  iVar2 != 1))\n    {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar1);\n        var_8h = 0;\n        cDims = arg_ch;\n        *piVar1 = 0x2011;\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(0x11, 1, &cDims);\n        *(piVar1 + 4) = iVar2;\n        if (iVar2 == 0) {\n            fcn.00426584();\n        }\n        return;\n    }\n    uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(piVar1 + 4), 1, &var_4h);\n    fcn.004030a4(uVar3);\n    uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(piVar1 + 4), 1, &plLbound);\n    fcn.004030a4(uVar3);\n    iVar2 = plLbound - var_4h;\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    if (iVar2 == arg_ch) {\n        return;\n    }\n    cDims = arg_ch;\n    var_8h = var_4h;\n    uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayAllocDescriptorEx)(*(piVar1 + 4), &cDims);\n    fcn.004030a4(uVar3);\n    return;\n}\n",
        "token_count": 459
    },
    "00403571": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403571(ushort *param_1, int16_t param_2, int16_t param_3)\n\n{\n    if (param_3 == 0xb) {\n        *param_1 = 0xb;\n        if (param_2 == 0) {\n            param_1[4] = 0;\n        }\n        else {\n            param_1[4] = 0xffff;\n        }\n    }\n    else {\n        *param_1 = 2;\n        param_1[4] = param_2;\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "004035a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004035a7(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            if (arg_8h == 0) {\n                in_ECX[4] = 0;\n                return;\n            }\n            in_ECX[4] = 0xffff;\n            return;\n        }\n        *in_ECX = 3;\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 152
    },
    "004037d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004037d1(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    ushort *in_ECX;\n    uint32_t uStack24;\n    uint var_ch;\n    \n    uStack24 = 0x4037e0;\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    *in_ECX = 8;\n    if (arg_8h == 0) {\n        *(in_ECX + 4) = 0;\n    }\n    else {\n        uStack24 = arg_8h;\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.0040fca0();\n        uStack24 = uStack24 & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &stack0xffffffe8, iVar1 + 1);\n        iVar1 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(&stack0xffffffe8);\n        *(in_ECX + 4) = iVar1;\n        if (iVar1 == 0) {\n            fcn.00426584();\n        }\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "00404135": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404135(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if ((in_ECX[2] == 2) || (arg_ch[2] == 2)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 2;\n    }\n    else if ((in_ECX[2] == 1) || (arg_ch[2] == 1)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 1;\n    }\n    else {\n        uVar2 = in_ECX[1];\n        uVar1 = *arg_ch + *in_ECX;\n        uVar3 = uVar2 + arg_ch[1];\n        if (uVar1 < *in_ECX) {\n            uVar3 = uVar3 + 1;\n        }\n        if ((((uVar2 ^ arg_ch[1]) & 0x80000000) == 0) && (((uVar2 ^ uVar3) & 0x80000000) != 0)) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n        *arg_8h = uVar1;\n        arg_8h[1] = uVar3;\n        arg_8h[2] = uVar2;\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "004041c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041c1(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if ((in_ECX[2] == 2) || (arg_ch[2] == 2)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 2;\n    }\n    else if ((in_ECX[2] == 1) || (arg_ch[2] == 1)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 1;\n    }\n    else {\n        uVar1 = in_ECX[1];\n        uVar3 = *in_ECX - *arg_ch;\n        uVar2 = uVar1 - arg_ch[1];\n        if (*in_ECX < uVar3) {\n            uVar2 = uVar2 - 1;\n        }\n        if ((((arg_ch[1] ^ uVar1) & 0x80000000) == 0) || (((uVar1 ^ uVar2) & 0x80000000) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *arg_8h = uVar3;\n        arg_8h[1] = uVar2;\n        arg_8h[2] = uVar1;\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "00404296": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404296(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (in_ECX[2] == 0) {\n        var_20h = *in_ECX;\n        var_18h = 0;\n        var_1ch = in_ECX[1];\n        if (((var_1ch == 0) && (*in_ECX == 0)) || (arg_ch == 0)) {\n            uVar5 = 0;\n            *arg_8h = 0;\n        }\n        else {\n            if (((var_1ch != 0x80000000) || (*in_ECX != 0)) || (arg_ch != 1)) {\n                var_14h = in_ECX;\n                if (var_1ch < 0) {\n                    uVar3 = fcn.0040424c(&var_2ch);\n                    fcn.00403fe8(uVar3);\n                }\n                uVar5 = fcn.0040fcf7(arg_ch);\n                if (var_1ch != 0) {\n                    uVar1 = 0x20;\n                    uVar4 = var_1ch & 0x80000000;\n                    while (uVar4 == 0) {\n                        uVar1 = uVar1 - 1;\n                        uVar4 = var_1ch & 1 << (uVar1 - 1U & 0x1f);\n                    }\n                    if (uVar5 == 0) {\n                        uVar2 = 0;\n                    }\n                    else {\n                        uVar2 = 0x20;\n                        uVar4 = uVar5 & 0x80000000;\n                        while (uVar4 == 0) {\n                            uVar2 = uVar2 - 1;\n                            uVar4 = uVar5 & 1 << (uVar2 - 1U & 0x1f);\n                        }\n                    }\n                    if (0x3f < (uVar2 - 1) + uVar1) {\n                        *arg_8h = 0;\n                        arg_8h[1] = 0x80000000;\n                        arg_8h[2] = 1;\n                        return;\n                    }\n                }\n                uVar4 = uVar5 & 0xffff;\n                uVar5 = uVar5 >> 0x10;\n                uVar7 = uVar4 * (var_20h >> 0x10);\n                var_10h = (var_20h >> 0x10) * uVar5;\n                var_4h = var_20h & 0xffff;\n                uVar8 = var_1ch & 0xffff;\n                uVar6 = var_4h * uVar5;\n                var_8h = (var_1ch >> 0x10) * uVar4;\n                var_ch = uVar8 * uVar4;\n                uVar4 = uVar4 * var_4h + uVar6 * 0x10000;\n                var_20h = uVar7 * 0x10000 + uVar4;\n                var_1ch = uVar4 < uVar6 * 0x10000;\n                if (var_20h < uVar4) {\n                    var_1ch = var_1ch + 1;\n                }\n                var_1ch = var_1ch + (uVar6 >> 0x10) + (uVar7 >> 0x10) + var_ch + (var_8h + uVar8 * uVar5) * 0x10000 +\n                                    var_10h;\n                if (((var_14h[1] ^ arg_ch) & 0x80000000) != 0) {\n                    uVar3 = fcn.0040424c(&var_2ch);\n                    fcn.00403fe8(uVar3);\n                }\n                *arg_8h = var_20h;\n                arg_8h[1] = var_1ch;\n                goto code_r0x00404469;\n            }\n            *arg_8h = *in_ECX;\n            uVar5 = in_ECX[1];\n        }\n        arg_8h[1] = uVar5;\n        arg_8h[2] = 0;\n    }\n    else {\n        *arg_8h = *in_ECX;\n        arg_8h[1] = in_ECX[1];\n        var_18h = in_ECX[2];\ncode_r0x00404469:\n        arg_8h[2] = var_18h;\n    }\n    return;\n}\n",
        "token_count": 1161
    },
    "0040499e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040499e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, double *arg_20h)\n\n{\n    bool bVar1;\n    double dVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (9999 < arg_8h) {\n        return 0;\n    }\n    iVar4 = 1;\n    if (arg_ch == 0) {\n        return 0;\n    }\n    if (0xc < arg_ch) {\n        return 0;\n    }\n    if (((arg_8h & 3) == 0) && ((arg_8h % 100 != 0 || (arg_8h % 400 == 0)))) {\n        bVar1 = true;\n        if ((arg_10h == 0x1d) && (arg_ch == 2)) goto code_r0x00404a13;\n    }\n    else {\n        bVar1 = false;\n    }\n    iVar4 = 0;\n    if (arg_10h == 0) {\n        return 0;\n    }\ncode_r0x00404a13:\n    iVar3 = *(arg_ch * 4 + 0x454734);\n    if ((((arg_10h <= (iVar4 - iVar3) + *(arg_ch * 4 + 0x454738)) && (arg_14h < 0x18)) && (arg_18h < 0x3c)) &&\n       (arg_1ch < 0x3c)) {\n        uVar5 = arg_8h;\n        iVar3 = (((arg_8h >> 2) + uVar5 / 400 + uVar5 * 0x16d) - uVar5 / 100) + arg_10h + iVar3;\n        if ((arg_ch < 3) && (bVar1)) {\n            iVar3 = iVar3 + -1;\n        }\n        dVar2 = ((arg_14h * 0x3c + arg_18h) * 0x3c + arg_1ch) * *0x4457d8;\n        if (iVar3 + -0xa96c7 < 0) {\n            dVar2 = -dVar2;\n        }\n        *arg_20h = iVar3 + -0xa96c7 + dVar2;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 562
    },
    "00404eca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404eca(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_10h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.00404adb(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_10h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 114
    },
    "00404f27": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404f27(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_14h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.00404adb(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_14h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 115
    },
    "00404f83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404f83(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_18h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.00404adb(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_18h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 115
    },
    "00404fdf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404fdf(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_1ch;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.00404adb(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_1ch;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 114
    },
    "00405041": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405041(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.00404adb(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_20h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 114
    },
    "0040509d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040509d(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.00404adb(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_24h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 108
    },
    "004050c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004050c7(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_ch;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.00404adb(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_ch;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 111
    },
    "004050f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004050f1(ulong *param_1)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    uint var_8h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = fcn.00404adb(*param_1, *param_1 >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            return var_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 115
    },
    "004055ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pvargDest\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.004055ca(uint arg_8h, uint pbstrOut, uint lpWideCharStr)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ulong *extraout_ECX;\n    int32_t unaff_EBP;\n    uchar *puVar3;\n    uint *in_FS_OFFSET;\n    uchar *puStack68;\n    uint uStack64;\n    ulong uStack60;\n    uint var_30h;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t pvargDest;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    uVar1 = *0x454618;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x10) = uVar1;\n    iVar2 = *(extraout_ECX + 1);\n    *(unaff_EBP + -4) = 1;\n    if (iVar2 == 2) {\n        pvargDest = unaff_EBP + -0x10;\n        iStack44 = 0x405603;\n        fcn.0042a796();\n        *(unaff_EBP + -0x14) = 1;\n    }\n    else if (iVar2 == 1) {\n        pvargDest = 0xf099;\n        iStack44 = 0x40561c;\n        fcn.0042ed16(0xf099);\n        iStack44 = unaff_EBP + -0x10;\n        uStack48 = 0x405628;\n        fcn.0042a796();\n        *(unaff_EBP + -0x14) = 1;\n    }\n    else {\n        pvargDest = unaff_EBP + -0x24;\n        iStack44 = 0x405639;\n        fcn.00403a4b();\n        iStack44 = unaff_EBP + -0x1c;\n        *(unaff_EBP + -4) = 2;\n        uStack48 = *(unaff_EBP + 0xc);\n        uStack60 = *extraout_ECX;\n        var_30h = *(unaff_EBP + 0x10);\n        uStack64 = 0x405654;\n        uStack64 = (*_sym.imp.OLEAUT32.dll_VarBstrFromDisp)();\n        puStack68 = 0x40565a;\n        fcn.004030a4();\n        puStack68 = *(unaff_EBP + -0x1c);\n        *(unaff_EBP + -0x24) = 8;\n        *(unaff_EBP + 0x10) = puStack68;\n        if (puStack68 == NULL) {\n            puVar3 = NULL;\n        }\n        else {\n            puVar3 = &stack0xffffffbc;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            *(unaff_EBP + 0xc) = iVar2 * 2 + 2;\n            fcn.0040fca0();\n            puStack68 = puStack68 & 0xffffff00;\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                      (0, 0, *(unaff_EBP + 0x10), 0xffffffff, &stack0xffffffbc, *(unaff_EBP + 0xc), 0, 0);\n        }\n        puStack68 = puVar3;\n        fcn.0042aa8f();\n        *(unaff_EBP + -0x14) = 1;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x24);\n    }\n    *(unaff_EBP + -4) = 0;\n    uStack48 = 0x4056be;\n    fcn.0042aa21();\n    uVar1 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 932
    },
    "00405ef8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ef8(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_ch;\n    var_4h = arg_14h;\n    var_8h = arg_ch;\n    fcn.0040601d(arg_8h, 1, &var_8h);\n    if (arg_10h != 0) {\n        fcn.00406067(&arg_ch);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        fcn.0040f660(arg_ch, arg_10h, iVar2 * iVar1);\n        fcn.0040607d();\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "004064db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004064db(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint lParam;\n    uint var_10h;\n    \n    uVar2 = 0;\n    if ((arg_8h != 0) && (*(arg_8h + 8) != 2)) {\n        iVar1 = fcn.00404e31(&lParam);\n        if (iVar1 != 0) {\n            uVar2 = 1;\n        }\n    }\n    if ((arg_ch != 0) && (*(arg_ch + 8) != 2)) {\n        iVar1 = fcn.00404e31(&var_10h);\n        if (iVar1 != 0) {\n            uVar2 = uVar2 | 2;\n        }\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1004, uVar2, &lParam);\n    return;\n}\n",
        "token_count": 237
    },
    "00406559": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406559(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    uint lParam;\n    \n    uVar2 = 1;\n    if (*(arg_8h + 8) == 0) {\n        iVar1 = fcn.00404e31(&lParam);\n        if (iVar1 != 0) {\n            uVar2 = 0;\n        }\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1002, uVar2, &lParam);\n    return;\n}\n",
        "token_count": 147
    },
    "004065d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004065d3(ulong *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1001, 0, &var_1ch);\n    if (iVar1 == 0) {\n        fcn.0040520a(&var_1ch);\n        *arg_8h = _var_ch;\n        *(arg_8h + 1) = var_4h;\n    }\n    else if (iVar1 == 1) {\n        *(arg_8h + 1) = 2;\n    }\n    else {\n        *(arg_8h + 1) = 1;\n    }\n    return 1;\n}\n",
        "token_count": 211
    },
    "00406a42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a42(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint lParam;\n    uint var_10h;\n    \n    uVar2 = 0;\n    if ((arg_8h != 0) && (*(arg_8h + 8) != 2)) {\n        iVar1 = fcn.00404e31(&lParam);\n        if (iVar1 != 0) {\n            uVar2 = 1;\n        }\n    }\n    if ((arg_ch != 0) && (*(arg_ch + 8) != 2)) {\n        iVar1 = fcn.00404e31(&var_10h);\n        if (iVar1 != 0) {\n            uVar2 = uVar2 | 2;\n        }\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1012, uVar2, &lParam);\n    return;\n}\n",
        "token_count": 238
    },
    "00406aa1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406aa1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint8_t uVar1;\n    uint var_20h;\n    uint var_10h;\n    \n    uVar1 = arg_8h != 0;\n    if (uVar1) {\n        fcn.0040f660(&var_20h, arg_8h, 0x10);\n    }\n    if (arg_ch != 0) {\n        fcn.0040f660(&var_10h, arg_ch, 0x10);\n        uVar1 = uVar1 | 2;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1012, uVar1, &var_20h);\n    return;\n}\n",
        "token_count": 193
    },
    "00406faf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00406faf(int32_t *param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00433ffd(param_2);\n    fcn.0042b601(uVar1);\n    if (*param_1 == 0) {\n        fcn.00406559(param_1);\n    }\n    else {\n        fcn.004065d3(param_1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00407073": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407073(int32_t *arg_8h, uint *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    fcn.0042b601(arg_8h[2]);\n    if (*arg_8h == 0) {\n        if ((arg_10h != 0) && (iVar1 = fcn.004071f4(*arg_ch),  iVar1 != 0)) {\n            return;\n        }\n        if ((arg_14h != 0) && (iVar1 = fcn.004071e6(*arg_ch),  iVar1 != 0)) {\n            return;\n        }\n    }\n    fcn.00406488(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 179
    },
    "004070d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004070d2(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    fcn.0042b601(arg_8h[2]);\n    if ((*arg_8h == 0) &&\n       (((arg_10h != 0 && (iVar1 = fcn.004052da(arg_ch),  iVar1 != 0)) ||\n        ((arg_14h != 0 && (iVar1 = fcn.004052a4(arg_ch),  iVar1 != 0)))))) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h[2], 0xfffffff4);\n        return;\n    }\n    fcn.004064db(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 192
    },
    "00407133": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407133(int32_t *arg_8h, uint *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    fcn.0042b601(arg_8h[2]);\n    if (*arg_8h == 0) {\n        if ((arg_10h != 0) && (iVar1 = fcn.004071f4(*arg_ch),  iVar1 != 0)) {\n            return;\n        }\n        if ((arg_14h != 0) && (iVar1 = fcn.004071e6(*arg_ch),  iVar1 != 0)) {\n            return;\n        }\n    }\n    fcn.00406be7(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 180
    },
    "00407192": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407192(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    fcn.0042b601(arg_8h[2]);\n    if (*arg_8h == 0) {\n        if ((arg_10h != 0) && (iVar1 = fcn.004052da(arg_ch),  iVar1 != 0)) {\n            return;\n        }\n        if ((arg_14h != 0) && (iVar1 = fcn.004052a4(arg_ch),  iVar1 != 0)) {\n            return;\n        }\n    }\n    fcn.00406a42(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 176
    },
    "0040765a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t * fcn.0040765a(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(extraout_ECX + 4);\n    if (extraout_ECX[3] == 0) {\n        iVar3 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.0042892a(extraout_ECX + 2, extraout_ECX[1], iVar3);\n        iVar3 = extraout_ECX[1];\n        piVar2 = (iVar3 + -1) * *extraout_ECX + 4 + iVar1;\n        if (-1 < iVar3 + -1) {\n            do {\n                *piVar2 = extraout_ECX[3];\n                extraout_ECX[3] = piVar2;\n                piVar2 = piVar2 - *extraout_ECX;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    piVar2 = extraout_ECX[3];\n    extraout_ECX[3] = *piVar2;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(extraout_ECX + 4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return piVar2;\n}\n",
        "token_count": 443
    },
    "00407a88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nbool fcn.00407a88(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h_2;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (*(extraout_ECX + 0x34) == 0) {\n        iVar1 = fcn.00439e31();\n        uVar2 = (**(**(iVar1 + 0x1038) + 8))(extraout_ECX);\n        *(extraout_ECX + 0x34) = uVar2;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if ((*(extraout_ECX + 0x34) != 0) && (iVar1 = extraout_ECX,  extraout_ECX != 0)) {\n        while ((*(iVar1 + 0x24) & 0x100) == 0) {\n            *(iVar1 + 0x24) = *(iVar1 + 0x24) | 0x100;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar1 + 0x1c));\n            iVar1 = fcn.0042b601(uVar2);\n            iVar3 = iVar1;\n            if (iVar1 != 0) {\n                iVar3 = *(iVar1 + 0x1c);\n            }\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            if (((uVar4 & 0x40000000) == 0) || (iVar1 == 0)) break;\n        }\n    }\n    iVar1 = *(extraout_ECX + 0x34);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1 != 0;\n}\n",
        "token_count": 541
    },
    "00407bb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00407bb8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlContainer.0;\n    pcVar1 = extraout_ECX[0xb];\n    *(unaff_EBP + -4) = 1;\n    iVar2 = -(pcVar1 != NULL);\n    *(unaff_EBP + -0x10) = iVar2;\n    while (iVar2 != 0) {\n        fcn.00428bbb();\n        if (*(*(unaff_EBP + -0x14) + 0x88) == 0) {\n            fcn.00428b79();\n            if (*(unaff_EBP + -0x14) != NULL) {\n                (**(**(unaff_EBP + -0x14) + 4))(1);\n            }\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n    }\n    iVar2 = -(extraout_ECX[0xb] != NULL);\n    *(unaff_EBP + -0x10) = iVar2;\n    while (iVar2 != 0) {\n        fcn.00428bbb();\n        if (*(unaff_EBP + -0x14) != NULL) {\n            (**(**(unaff_EBP + -0x14) + 4))(1);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n    }\n    fcn.004289e8();\n    fcn.0043d5f6(extraout_ECX + 0x11);\n    *(unaff_EBP + -4) = 0;\n    fcn.00428a13();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004297b9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 551
    },
    "004081c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004081c2(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = -(*(in_ECX + 0x2c) != 0);\n    while (var_4h != 0) {\n        fcn.00428bbb(&var_4h, &var_ch, &var_8h);\n        fcn.0040975f(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00408b39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nuint __cdecl\nfcn.00408b39(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_38h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar6 = *(unaff_EBP + 8);\n    extraout_ECX[8] = 0;\n    if (iVar6 != 0) {\n        extraout_ECX[9] = iVar6;\n        *(iVar6 + 0x38) = extraout_ECX;\n    }\n    iVar6 = fcn.00439ba1();\n    if ((*(iVar6 + 0x114) == 0) && (iVar6 = fcn.0043b3d4(),  iVar6 == 0)) {\n        uVar7 = 0x80004005;\n        goto code_r0x00408dc6;\n    }\n    iVar6 = fcn.00409033(*(unaff_EBP + 0xc), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), *(unaff_EBP + 0x2c));\n    *(unaff_EBP + 8) = iVar6;\n    if (-1 < iVar6) {\n        extraout_ECX[10] = *(unaff_EBP + 0x20);\n        piVar2 = *(unaff_EBP + 0x1c);\n        if (piVar2 == NULL) {\n            fcn.004328a9(0);\n            piVar2 = extraout_ECX[0x13];\n            iVar6 = *piVar2;\n            *(unaff_EBP + -4) = 0;\n            (**(iVar6 + 0x48))(piVar2, 1, unaff_EBP + -0x14);\n            fcn.00438839(unaff_EBP + -0x14);\n            iVar6 = **(unaff_EBP + 0x18);\n            iVar3 = (*(unaff_EBP + 0x18))[1];\n            *(unaff_EBP + -0x24) = iVar6;\n            *(unaff_EBP + -0x1c) = iVar6 + *(unaff_EBP + -0x14);\n            *(unaff_EBP + -0x20) = iVar3;\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x10) + iVar3;\n            *(unaff_EBP + -4) = 0xffffffff;\n            extraout_ECX[0xb] = *(unaff_EBP + -0x24);\n            extraout_ECX[0xc] = *(unaff_EBP + -0x20);\n            extraout_ECX[0xd] = *(unaff_EBP + -0x1c);\n            extraout_ECX[0xe] = *(unaff_EBP + -0x18);\n            fcn.0043291b();\n        }\n        else {\n            iVar6 = *piVar2;\n            iVar3 = **(unaff_EBP + 0x18);\n            iVar4 = (*(unaff_EBP + 0x18))[1];\n            *(unaff_EBP + -0x18) = piVar2[1] + iVar4;\n            *(unaff_EBP + -0x24) = iVar3;\n            *(unaff_EBP + -0x1c) = iVar6 + iVar3;\n            *(unaff_EBP + -0x20) = iVar4;\n            extraout_ECX[0xb] = *(unaff_EBP + -0x24);\n            extraout_ECX[0xc] = *(unaff_EBP + -0x20);\n            extraout_ECX[0xd] = *(unaff_EBP + -0x1c);\n            extraout_ECX[0xe] = *(unaff_EBP + -0x18);\n        }\n        extraout_ECX[0x1a] = 0x30000;\n        if ((extraout_ECX[0x1c] & 0x1000U) != 0) {\n            extraout_ECX[0x1a] = 0x30001;\n        }\n        if ((extraout_ECX[0x1c] & 0x400U) != 0) {\n            *(unaff_EBP + 0x17) = *(unaff_EBP + 0x17) & 0xef;\n        }\n        iVar6 = *(unaff_EBP + 8);\n        extraout_ECX[0x1b] = extraout_ECX[0x1a] & *(unaff_EBP + 0x14);\n        if (iVar6 != 1) {\n            iVar6 = fcn.004093e6(extraout_ECX + 0xf, extraout_ECX + 0x33);\n            extraout_ECX[0x18] = iVar6;\n            iVar6 = fcn.004093e6(0x449c90, extraout_ECX + 0x32);\n            extraout_ECX[0x19] = iVar6;\n        }\n        iVar6 = fcn.004093e6(0x449c40, extraout_ECX + 0x35);\n        extraout_ECX[0x21] = iVar6;\n        fcn.00408a33();\n        ppiVar1 = extraout_ECX + 0x14;\n        iVar6 = (***extraout_ECX[0x13])(extraout_ECX[0x13], 0x449ca0, ppiVar1);\n        *(unaff_EBP + 8) = iVar6;\n        pcVar5 = _sym.imp.USER32.dll_OffsetRect;\n        if (iVar6 < 0) {\ncode_r0x00408d3a:\n            piVar2 = *ppiVar1;\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 8))(piVar2);\n                *ppiVar1 = NULL;\n            }\n            fcn.0040944e(extraout_ECX + 0xf, extraout_ECX[0x18]);\n            fcn.0040944e(0x449c90, extraout_ECX[0x19]);\n            fcn.0040944e(0x449c40, extraout_ECX[0x21]);\n            extraout_ECX[0x18] = 0;\n            extraout_ECX[0x19] = 0;\n            extraout_ECX[0x21] = 0;\n            (**(*extraout_ECX[0x13] + 8))(extraout_ECX[0x13]);\n            iVar6 = *(unaff_EBP + 8);\n            extraout_ECX[0x13] = 0;\n            if (iVar6 < 0) goto code_r0x00408dc2;\n        }\n        else {\n            if ((*(unaff_EBP + 0x17) & 0x10) == 0) {\n                (*_sym.imp.USER32.dll_OffsetRect)(extraout_ECX + 0xb, 0xffff8300, 0xffff8300);\n                iVar6 = (**(*extraout_ECX + 0x54))(0xfffffffb, 0);\n                *(unaff_EBP + 8) = iVar6;\n                if (-1 < iVar6) {\n                    iVar6 = (**(*extraout_ECX + 0x54))(0xfffffffd, 0);\n                    *(unaff_EBP + 8) = iVar6;\n                    if (-1 < iVar6) {\n                        (*pcVar5)(extraout_ECX + 0xb, 32000, 32000);\n                        uVar7 = (**(**ppiVar1 + 0x1c))(*ppiVar1, extraout_ECX + 0xb, extraout_ECX + 0xb);\n                        *(unaff_EBP + 8) = uVar7;\n                        goto code_r0x00408d2a;\n                    }\n                }\n                goto code_r0x00408d3a;\n            }\n            uVar7 = (**(*extraout_ECX + 0x54))(0xfffffffb, 0);\n            *(unaff_EBP + 8) = uVar7;\ncode_r0x00408d2a:\n            if (*(unaff_EBP + 8) < 0) goto code_r0x00408d3a;\n            fcn.00409626();\n        }\n        fcn.00409795();\n        if (*(unaff_EBP + 0x10) != 0) {\n            (**(*extraout_ECX + 0x80))(*(unaff_EBP + 0x10));\n        }\n        (**(*extraout_ECX + 0x78))(0, *(unaff_EBP + 0x14) & 0x8800000 | extraout_ECX[0x1b], 0);\n    }\ncode_r0x00408dc2:\n    uVar7 = *(unaff_EBP + 8);\ncode_r0x00408dc6:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 2186
    },
    "0040944e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040944e(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((arg_ch != 0) && (puVar1 = in_ECX[0x13],  puVar1 != NULL)) {\n        var_8h = in_ECX;\n        iVar2 = (***puVar1)(puVar1, 0x449d30, &var_8h);\n        if (-1 < iVar2) {\n            var_4h = NULL;\n            iVar2 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n            if (-1 < iVar2) {\n                (**(*var_4h + 0x18))(var_4h, arg_ch);\n                (**(*var_4h + 8))(var_4h);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "004094ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004094ac(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = *0x449d60;\n    arg_8h[1] = *0x449d64;\n    arg_8h[2] = *0x449d68;\n    arg_8h[3] = *0x449d6c;\n    var_ch = NULL;\n    iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x449d50, &var_ch);\n    if (-1 < iVar1) {\n        (**(*var_ch + 0x10))(var_ch, 1, arg_8h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    var_14h = NULL;\n    iVar1 = fcn.0040f520(arg_8h, 0x449d60, 0x10);\n    if ((iVar1 == 0) && (iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x449d40, &var_14h),  -1 < iVar1)) {\n        var_4h = NULL;\n        iVar1 = (**(*var_14h + 0xc))(var_14h, &var_4h);\n        if (-1 < iVar1) {\n            iVar1 = (**(*var_4h + 0xc))(var_4h, &var_10h);\n            if (-1 < iVar1) {\n                uVar2 = 0;\n                if (*(var_10h + 0x30) != 0) {\n                    do {\n                        iVar1 = (**(*var_4h + 0x24))(var_4h, uVar2, &var_1ch);\n                        if ((-1 < iVar1) && ((var_1ch & 7) == 3)) {\n                            var_8h = NULL;\n                            iVar1 = (**(*var_4h + 0x20))(var_4h, uVar2, &var_20h);\n                            if ((-1 < iVar1) && (iVar1 = (**(*var_4h + 0x38))(var_4h, var_20h, &var_8h),  -1 < iVar1)) {\n                                iVar1 = (**(*var_8h + 0xc))(var_8h, &var_18h);\n                                if (-1 < iVar1) {\n                                    *arg_8h = *var_18h;\n                                    arg_8h[1] = var_18h[1];\n                                    arg_8h[2] = var_18h[2];\n                                    arg_8h[3] = var_18h[3];\n                                    (**(*var_8h + 0x4c))(var_8h, var_18h);\n                                }\n                                (**(*var_8h + 8))(var_8h);\n                            }\n                            break;\n                        }\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < *(var_10h + 0x30));\n                }\n                (**(*var_4h + 0x4c))(var_4h, var_10h);\n            }\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_14h + 8))(var_14h);\n    }\n    iVar1 = fcn.0040f520(arg_8h, 0x449d60, 0x10);\n    return iVar1 != 0;\n}\n",
        "token_count": 887
    },
    "004097d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004097d2(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + 0x24);\n    *(param_1 + 0x20) = 0;\n    if (piVar1 != NULL) {\n        if (piVar1[7] != 0) {\n            piVar1 = (**(*piVar1 + 0x80))();\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(*(param_1 + 0x24) + 0x1c));\n            if ((iVar2 != 0) && (*piVar1 != 0)) {\n                fcn.0042e6ae();\n            }\n            fcn.0042b67f();\n        }\n        *(*(param_1 + 0x24) + 0x38) = 0;\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0040ab3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ab3e(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (*param_1 != NULL) {\n        fcn.0040ab6d();\n        piVar1 = *param_1;\n        if (piVar1 != NULL) {\n            *param_1 = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n        piVar1 = param_1[1];\n        if (piVar1 != NULL) {\n            param_1[1] = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0040b1bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040b1bf(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = 0;\n    uVar3 = 0;\n    uVar1 = *(*(param_1 + 8) + 4);\n    if (uVar1 != 0) {\n        do {\n            if ((*(**(param_1 + 8) + 4 + uVar3 * 8) != '\\0') && (iVar2 = fcn.0040b1f3(uVar3),  iVar2 < 0)) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 185
    },
    "0040b22b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nint32_t fcn.0040b22b(void)\n\n{\n    int16_t iVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *extraout_ECX;\n    uint32_t arg_28h;\n    uint *puVar7;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar8;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint *noname_1;\n    uint uVar9;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x40b235;\n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = &fcn.0040b22b::var_28h;\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x14) = 0;\n    puVar7 = *(unaff_EBP + 8);\n    uVar9 = 0x454fb0;\n    ppcVar2 = *puVar7;\n    *(unaff_EBP + -4) = 0;\n    noname_1 = puVar7;\n    var_28h = unaff_EDI;\n    var_24h = unaff_ESI;\n    iVar3 = (**ppcVar2)();\n    *(unaff_EBP + 8) = iVar3;\n    if (iVar3 < 0) {\n        piVar6 = *(unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        iVar3 = *(unaff_EBP + 8);\n        goto code_r0x0040b4cb;\n    }\n    iVar3 = extraout_ECX[4];\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n        ppcVar2 = *puVar7;\n        *(unaff_EBP + -4) = 1;\n        iVar3 = (**ppcVar2)(puVar7, 0x454fa0, unaff_EBP + -0x1c);\n        if ((-1 < iVar3) &&\n           (iVar3 = (**(**(unaff_EBP + -0x1c) + 0xc))\n                              (*(unaff_EBP + -0x1c), extraout_ECX + 3, extraout_ECX + 4, extraout_ECX + 5),  -1 < iVar3)\n           ) {\n            piVar6 = *(unaff_EBP + -0x1c);\n            *(extraout_ECX + 6) = 0;\n            *(unaff_EBP + -4) = 0;\n            if (piVar6 != NULL) {\n                (**(*piVar6 + 8))(piVar6);\n            }\n            goto code_r0x0040b2f1;\n        }\n        piVar6 = *(unaff_EBP + -0x1c);\n        *(unaff_EBP + -4) = 0;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\ncode_r0x0040b4b8:\n        piVar6 = *(unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n    }\n    else {\n        *(extraout_ECX + 6) = 1;\ncode_r0x0040b2f1:\n        iVar3 = extraout_ECX[3];\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -4) = 2;\n        uVar4 = fcn.00429d0b(iVar3 * 0x34);\n        *(unaff_EBP + -0x18) = uVar4;\n        uVar8 = 0;\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + -0x18) == 0) {\n            piVar6 = *(unaff_EBP + -0x14);\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        else {\n            *(unaff_EBP + -0x24) = *(unaff_EBP + -0x18);\n            *(unaff_EBP + -0x20) = 0;\n            while (uVar8 < extraout_ECX[3]) {\n                iVar3 = uVar8 * 0x30;\n                if ((*(extraout_ECX[4] + iVar3 + 0x10) < 0x401) && (*(extraout_ECX[4] + iVar3 + 0x14) != 0xd)) {\n                    puVar7 = NULL;\n                }\n                else {\n                    *(unaff_EBP + -0x2c) = 0;\n                    *(unaff_EBP + -4) = 4;\n                    puVar7 = fcn.00429d0b(0x14);\n                    *(unaff_EBP + -4) = 0;\n                    if (puVar7 == NULL) goto code_r0x0040b480;\n                    *puVar7 = 0;\n                    puVar7[1] = str.0:s_f._0_4_;\n                    puVar7[2] = *0x44a12c;\n                    puVar7[3] = *0x44a130;\n                    puVar7[4] = *0x44a134;\n                    iVar3 = *(unaff_EBP + -0x20) * 0x30;\n                    *(extraout_ECX[4] + 0x14 + iVar3) = 0xd;\n                    *(extraout_ECX[4] + 0x10 + iVar3) = 4;\n                }\n                iVar1 = *(extraout_ECX[4] + iVar3 + 0x14);\n                if ((iVar1 == 0x81) || (iVar1 == 0x82)) {\n                    piVar6 = extraout_ECX[4] + iVar3 + 0x10;\n                    *piVar6 = *piVar6 + 1;\n                }\n                iVar5 = extraout_ECX[4] + iVar3;\n                arg_28h = (*(iVar5 + 0x10) & 3) + *(iVar5 + 0x10) + *(unaff_EBP + 8);\n                fcn.0040b582(*(unaff_EBP + -0x24), *(iVar5 + 8), arg_28h & 0xffff0000 | *(iVar5 + 0x14), *(iVar5 + 0x10)\n                             , arg_28h & 0xffffff00 | *(iVar5 + 0x16), arg_28h & 0xffffff00 | *(iVar5 + 0x17), 0, \n                             *(unaff_EBP + 8), arg_28h, arg_28h + 4, puVar7);\n                iVar5 = extraout_ECX[4];\n                *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 0x34;\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                *(iVar5 + 4 + iVar3) = *(unaff_EBP + 8);\n                uVar8 = *(unaff_EBP + -0x20);\n                *(unaff_EBP + 8) = arg_28h + 8;\n            }\n            if (*extraout_ECX == 0) {\n                iVar3 = fcn.0040b4dc(1, noname_1, uVar9, unaff_EBP + -0x14, var_28h, var_24h);\n                if (iVar3 < 0) {\n                    fcn.00429d34(*(unaff_EBP + -0x18));\n                    goto code_r0x0040b4b8;\n                }\n                *(*extraout_ECX + 4) = 1;\n            }\n            uVar9 = *(unaff_EBP + 8);\n            extraout_ECX[2] = 0;\n            *(unaff_EBP + -4) = 6;\n            iVar3 = fcn.00429d0b(uVar9);\n            extraout_ECX[2] = iVar3;\n            *(unaff_EBP + -4) = 0;\n            if (extraout_ECX[2] != 0) {\n                iVar3 = fcn.0040b538(*(unaff_EBP + -0x18), extraout_ECX[3], *extraout_ECX, *(unaff_EBP + 8), \n                                     *(unaff_EBP + -0x14));\n                fcn.00429d34(*(unaff_EBP + -0x18));\n                goto code_r0x0040b4b8;\n            }\n            fcn.00429d34(*(unaff_EBP + -0x18));\ncode_r0x0040b480:\n            piVar6 = *(unaff_EBP + -0x14);\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        iVar3 = -0x7ff8fff2;\n    }\ncode_r0x0040b4cb:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 2333
    },
    "0040b7a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040b7a9(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*(param_1 + 0x18) == '\\0') {\n        iVar1 = *(*(param_1 + 0x10) + 8);\n        in_EAX = *param_2;\n        if (in_EAX <= *(param_1 + 0xc) + -1 + iVar1) {\n            in_EAX = in_EAX - iVar1;\n            *param_2 = in_EAX;\ncode_r0x0040b7f5:\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(param_1 + 0xc) != 0) {\n            puVar2 = *(param_1 + 0x10) + 8;\n            in_EAX = *param_2;\n            do {\n                if (*puVar2 == in_EAX) {\n                    *param_2 = uVar3;\n                    goto code_r0x0040b7f5;\n                }\n                uVar3 = uVar3 + 1;\n                puVar2 = puVar2 + 0xc;\n            } while (uVar3 < *(param_1 + 0xc));\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 340
    },
    "0040ba4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_140h\n\nuint __cdecl fcn.0040ba4b(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uchar uVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    double dVar6;\n    code *pcVar7;\n    char cVar8;\n    ulong *puVar9;\n    uint *puVar10;\n    uint uVar11;\n    uint16_t *puVar12;\n    uchar *puVar13;\n    int32_t iVar14;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_140h;\n    uint var_130h;\n    uint var_120h;\n    uint var_110h;\n    uint var_100h;\n    uint var_f0h;\n    uint var_e0h;\n    uint var_d4h;\n    uint var_c4h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_94h;\n    uint var_84h;\n    uint var_74h;\n    uint var_64h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint pvargDest;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x3c) = 0;\n    fcn.00403a4b(unaff_EBP + -0x1c);\n    uVar11 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040c1c7(uVar11, unaff_EBP + -0x3c);\n    if (*(unaff_EBP + -0x3c) != 3) {\n        iVar14 = *(extraout_ECX + 0x54);\n        *(unaff_EBP + 0xc) = uVar11;\n        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n        pcVar7 = _sym.imp.OLEAUT32.dll_VariantCopy;\n        if (cVar8 != '\\0') {\n            uVar3 = *(*(iVar14 + 0x10) + 0x14 + *(unaff_EBP + 0xc) * 0x30);\n            if (uVar3 < 0x82) {\n                if (uVar3 == 0x81) {\n                    iVar14 = *(extraout_ECX + 0x54);\n                    *(unaff_EBP + 0xc) = uVar11;\n                    cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                    if (cVar8 == '\\0') {\n                        iVar14 = 0;\n                    }\n                    else {\n                        iVar14 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                    }\n                    puVar10 = fcn.0042aa8f(iVar14);\n                    uVar11 = *puVar10;\n                    *(unaff_EBP + -4) = 2;\n                    uVar11 = fcn.00403476(uVar11, 8);\n                    *(unaff_EBP + -4) = 3;\n                    fcn.004037b7(uVar11);\n                    (*pcVar7)(unaff_EBP + -0x120);\n                    *(unaff_EBP + -4) = 0;\n                    goto code_r0x0040c19c;\n                }\n                if (uVar3 < 9) {\n                    if (uVar3 == 8) goto code_r0x0040c136;\n                    if (uVar3 == 2) {\ncode_r0x0040bd1b:\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar12 = NULL;\n                        }\n                        else {\n                            puVar12 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.00403571(puVar12 & 0xffff0000 | *puVar12, 2);\n                        *(unaff_EBP + -4) = 7;\n                        fcn.004037b7(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x110;\n                    }\n                    else if (uVar3 == 3) {\ncode_r0x0040bcc4:\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.004035a7(*puVar10, 3);\n                        *(unaff_EBP + -4) = 8;\n                        fcn.004037b7(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0xf0;\n                    }\n                    else if (uVar3 == 4) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = *puVar10;\n                        *(unaff_EBP + -100) = 4;\n                        *(unaff_EBP + -0x5c) = uVar11;\n                        *(unaff_EBP + -4) = 9;\n                        fcn.004037b7(unaff_EBP + -100);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -100;\n                    }\n                    else if (uVar3 == 5) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar9 = NULL;\n                        }\n                        else {\n                            puVar9 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar1 = *puVar9;\n                        *(unaff_EBP + -0x94) = 5;\n                        *(unaff_EBP + -0x8c) = uVar1;\n                        *(unaff_EBP + -4) = 10;\n                        fcn.004037b7(unaff_EBP + -0x94);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x94;\n                    }\n                    else if (uVar3 == 6) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = *(*(iVar14 + 0x10) + 4 + *(unaff_EBP + 0xc) * 0x30) + *(iVar14 + 8);\n                        }\n                        uVar11 = *puVar10;\n                        uVar4 = puVar10[1];\n                        *(unaff_EBP + -0x54) = 6;\n                        *(unaff_EBP + -0x4c) = uVar11;\n                        *(unaff_EBP + -0x48) = uVar4;\n                        *(unaff_EBP + -4) = 0xd;\n                        fcn.004037b7(unaff_EBP + -0x54);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x54;\n                    }\n                    else {\n                        if (uVar3 != 7) goto code_r0x0040c1a1;\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar9 = NULL;\n                        }\n                        else {\n                            puVar9 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar1 = *puVar9;\n                        *(unaff_EBP + -0xc4) = 7;\n                        *(unaff_EBP + -0xbc) = uVar1;\n                        *(unaff_EBP + -4) = 0xc;\n                        fcn.004037b7(unaff_EBP + -0xc4);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0xc4;\n                    }\ncode_r0x0040bfa3:\n                    (*pcVar7)(iVar14);\n                }\n                else {\n                    if (uVar3 == 0xb) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar12 = NULL;\n                        }\n                        else {\n                            puVar12 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.00403571(puVar12 & 0xffff0000 | *puVar12, 0xb);\n                        *(unaff_EBP + -4) = 0xb;\n                        fcn.004037b7(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x100;\n                        goto code_r0x0040bfa3;\n                    }\n                    if (uVar3 == 0xc) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            iVar14 = 0;\n                        }\n                        else {\n                            iVar14 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.00403436(iVar14);\n                        *(unaff_EBP + -4) = 1;\n                        fcn.004037b7(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x130;\n                        goto code_r0x0040bfa3;\n                    }\n                    if (0xf < uVar3) {\n                        if (uVar3 < 0x12) {\n                            iVar14 = *(extraout_ECX + 0x54);\n                            *(unaff_EBP + 0xc) = uVar11;\n                            cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                            if (cVar8 == '\\0') {\n                                puVar13 = NULL;\n                            }\n                            else {\n                                puVar13 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                            }\n                            uVar2 = *puVar13;\n                            *(unaff_EBP + -0xb4) = 0x11;\n                            *(unaff_EBP + -0xac) = uVar2;\n                            *(unaff_EBP + -4) = 6;\n                            fcn.004037b7(unaff_EBP + -0xb4);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0xb4;\n                            goto code_r0x0040bfa3;\n                        }\n                        if (uVar3 == 0x12) goto code_r0x0040bd1b;\n                        if (uVar3 == 0x13) goto code_r0x0040bcc4;\n                    }\n                }\n            }\n            else {\n                if (uVar3 != 0x82) {\n                    if (uVar3 == 0x83) {\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            puVar10 = fcn.0040c20b(*(unaff_EBP + 0xc));\n                            *(unaff_EBP + -0x38) = *puVar10;\n                            *(unaff_EBP + -0x34) = puVar10[1];\n                            *(unaff_EBP + -0x30) = puVar10[2];\n                            *(unaff_EBP + -0x2c) = puVar10[3];\n                            *(unaff_EBP + -0x28) = *(puVar10 + 4);\n                            *(unaff_EBP + -0x26) = *(puVar10 + 0x12);\n                            dVar6 = *(unaff_EBP + -0x35);\n                            cVar8 = *(unaff_EBP + -0x37);\n                            while (cVar8 != '\\0') {\n                                dVar6 = dVar6 * *0x446698;\n                                cVar8 = cVar8 + -1;\n                            }\n                            if (*(unaff_EBP + -0x36) == '\\0') {\n                                dVar6 = -dVar6;\n                            }\n                            *(unaff_EBP + -0x7c) = dVar6;\n                            *(unaff_EBP + -0x84) = 5;\n                            *(unaff_EBP + -4) = 0xe;\n                            fcn.004037b7(unaff_EBP + -0x84);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0x84;\n                            goto code_r0x0040bfa3;\n                        }\n                    }\n                    else if (uVar3 == 0x85) {\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            puVar10 = fcn.0040c20b(*(unaff_EBP + 0xc));\n                            *(unaff_EBP + -0x24) = *puVar10;\n                            *(unaff_EBP + -0x34) = 0;\n                            *(unaff_EBP + -0x20) = *(puVar10 + 1);\n                            *(unaff_EBP + -0x2c) = 0;\n                            fcn.004054d5(*(unaff_EBP + -0x24), *(unaff_EBP + -0x22), *(unaff_EBP + -0x20), 0, 0, 0);\n                            *(unaff_EBP + -0x74) = 7;\n                            *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x34);\n                            *(unaff_EBP + -4) = 0xf;\n                            fcn.004037b7(unaff_EBP + -0x74);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0x74;\n                            goto code_r0x0040bfa3;\n                        }\n                    }\n                    else if (uVar3 == 0x86) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            iVar5 = *(iVar14 + 0x10);\n                            *(unaff_EBP + -0x2c) = 0;\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + iVar5) + *(iVar14 + 8);\n                            *(unaff_EBP + -0x34) = 0;\n                            *(unaff_EBP + -0x24) = *puVar10;\n                            *(unaff_EBP + -0x20) = *(puVar10 + 1);\n                            fcn.004054d5(0x76b, 0xc, 0x1e, *(unaff_EBP + -0x24), *(unaff_EBP + -0x22), \n                                         *(unaff_EBP + -0x20));\n                            *(unaff_EBP + -0xa4) = 7;\n                            *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x34);\n                            *(unaff_EBP + -4) = 0x10;\n                            fcn.004037b7(unaff_EBP + -0xa4);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0xa4;\n                            goto code_r0x0040bfa3;\n                        }\n                    }\n                    else if (uVar3 == 0x87) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                            *(unaff_EBP + -0x38) = *puVar10;\n                            *(unaff_EBP + -0x34) = puVar10[1];\n                            *(unaff_EBP + -0x30) = puVar10[2];\n                            *(unaff_EBP + -0x2c) = puVar10[3];\n                            fcn.004054d5(*(unaff_EBP + -0x38), *(unaff_EBP + -0x36), *(unaff_EBP + -0x34), \n                                         *(unaff_EBP + -0x32), *(unaff_EBP + -0x30), *(unaff_EBP + -0x2e));\n                            *(unaff_EBP + -0xd4) = 7;\n                            *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xe0);\n                            *(unaff_EBP + -4) = 0x11;\n                            fcn.004037b7(unaff_EBP + -0xd4);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0xd4;\n                            goto code_r0x0040bfa3;\n                        }\n                    }\n                    goto code_r0x0040c1a1;\n                }\ncode_r0x0040c136:\n                iVar14 = *(extraout_ECX + 0x54);\n                *(unaff_EBP + 0xc) = uVar11;\n                cVar8 = fcn.0040b7a9(unaff_EBP + 0xc);\n                if (cVar8 == '\\0') {\n                    iVar14 = 0;\n                }\n                else {\n                    iVar14 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                }\n                puVar10 = fcn.0042aae1(iVar14);\n                uVar11 = *puVar10;\n                *(unaff_EBP + -4) = 4;\n                uVar11 = fcn.00403476(uVar11, 8);\n                *(unaff_EBP + -4) = 5;\n                fcn.004037b7(uVar11);\n                (*pcVar7)(unaff_EBP + -0x140);\n                *(unaff_EBP + -4) = 0;\ncode_r0x0040c19c:\n                fcn.0042aa21();\n            }\ncode_r0x0040c1a1:\n            fcn.00403456(unaff_EBP + -0x1c);\n            (*pcVar7)(unaff_EBP + -0x1c);\n            goto code_r0x0040c1b3;\n        }\n    }\n    fcn.00403456(unaff_EBP + -0x1c);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x1c);\ncode_r0x0040c1b3:\n    uVar11 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar11;\n}\n",
        "token_count": 5094
    },
    "0040ce33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0040ce33(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *noname_1;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = 0;\n    noname_1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (***noname_1)();\n    if (iVar2 < 0) {\ncode_r0x0040ce75:\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    else {\n        if (*extraout_ECX == 0) {\n            iVar2 = fcn.0040b4dc(1, noname_1, 0x454fb0, unaff_EBP + -0x10, unaff_ESI, unaff_EBX);\n            if (iVar2 < 0) goto code_r0x0040ce75;\n            *(*extraout_ECX + 4) = 1;\n        }\n        iVar2 = fcn.0040b538(extraout_ECX[3], extraout_ECX[4], *extraout_ECX, extraout_ECX[6], *(unaff_EBP + -0x10));\n        *(unaff_EBP + -4) = 0xffffffff;\n        piVar1 = *(unaff_EBP + -0x10);\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 522
    },
    "0040cf1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cf1b(int32_t **param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t **var_4h;\n    \n    if ((param_1[2] != 0x80010001) && (*param_1 != NULL)) {\n        puVar1 = (*param_1)[0x13];\n        var_4h = param_1;\n        iVar2 = (***puVar1)(puVar1, 0x44a138, &var_4h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.0040cf9e();\n            if (iVar2 != 0) {\n                uVar3 = 0xd;\n                if (param_1[3][0x22] != 0) {\n                    uVar3 = 0x800d;\n                }\n                (**(**param_1 + 0x68))(*param_1, param_1[2], uVar3, iVar2);\n            }\n        }\n        else {\n            (*(*var_4h)[3])(var_4h, param_1[2], param_1[3] != NULL, param_1 + 4);\n            (*(*var_4h)[2])(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0040db3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db3a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_10h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = *(arg_10h + 0x1c);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_IsChild)(*(arg_8h + 0x1c), uVar1);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_10h != 0) {\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_10h + 0x1c), 0xffffffec);\n        if ((uVar3 & 0x10000) != 0) {\n            return;\n        }\n        var_4h = fcn.0040da8a(arg_10h);\n    }\n    if (arg_ch == arg_10h) {\n        if ((var_4h & 0x20) == 0) {\n            return;\n        }\n        if (arg_ch != 0) {\n            uVar1 = fcn.0040db0d(arg_8h);\n            iVar2 = fcn.0040d9e6(arg_8h, uVar1);\n            if (((iVar2 != 0) && (iVar2 != arg_10h)) && (uVar3 = fcn.0040da8a(iVar2),  (uVar3 & 0x10) != 0))\n            goto code_r0x0040dbe0;\n        }\n    }\n    else {\n        if (((arg_ch != 0) && (iVar2 = fcn.0040da8a(arg_ch),  iVar2 != 0)) || ((arg_10h != 0 && (var_4h != 0)))) {\ncode_r0x0040dbe0:\n            fcn.0040daab(arg_8h);\n        }\n        if ((var_4h & 0x30) == 0) {\n            iVar2 = arg_8h;\n            uVar1 = fcn.0040db0d(arg_8h);\n            arg_10h = fcn.0040d9e6(arg_8h, uVar1);\n            uVar3 = fcn.0040da8a(arg_10h);\n            if ((uVar3 & 0x20) == 0) {\n                return;\n            }\n            iVar4 = fcn.0042eb69();\n            if (iVar4 == 0) {\n                return;\n            }\n            goto code_r0x0040dc19;\n        }\n    }\n    iVar2 = 1;\ncode_r0x0040dc19:\n    fcn.0040da3d(arg_10h, iVar2);\n    return;\n}\n",
        "token_count": 680
    },
    "0040e4a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e4a3(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) == 0) {\n        *(param_1 + 4) = 0xffffffff;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 0x20);\n    return;\n}\n",
        "token_count": 80
    },
    "0040e4e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040e4e9(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *unaff_retaddr;\n    \n    if (param_3 != 0) {\n        *(param_1 + 4) = param_2;\n        *(param_1 + 0xc) = *0x449d60;\n        *(param_1 + 0x10) = *0x449d64;\n        *(param_1 + 0x14) = *0x449d68;\n        *(param_1 + 0x18) = *0x449d6c;\n        fcn.0043d5f6(param_1 + 0x1c);\n        fcn.0043d5f6(param_1 + 8);\n        *(param_1 + 8) = unaff_retaddr;\n        (**(*unaff_retaddr + 4))(unaff_retaddr);\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0040e52c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040e52c(int32_t param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    \n    if ((((*(param_1 + 4) != -1) && (*(param_1 + 4) == param_2)) && (*(param_1 + 0x1c) != 0)) &&\n       (iVar1 = fcn.0040f520(param_1 + 0xc, param_3, 0x10),  iVar1 == 0)) {\n        *param_4 = *(param_1 + 0x1c);\n        (**(**(param_1 + 0x1c) + 4))(*(param_1 + 0x1c));\n        return 1;\n    }\n    *param_4 = 0;\n    return 0;\n}\n",
        "token_count": 198
    },
    "0040ec0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ec0a(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    \n    iStack16 = param_1;\n    uStack24 = 0x40ebe8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    while( true ) {\n        iVar1 = *(param_1 + 8);\n        iVar2 = *(param_1 + 0xc);\n        if ((iVar2 == -1) || (iVar2 == param_2)) break;\n        uStack20 = *(iVar1 + iVar2 * 0xc);\n        *(param_1 + 0xc) = uStack20;\n        if (*(iVar1 + 4 + iVar2 * 0xc) == 0) {\n            fcn.0040ec9e(0x101);\n            (**(iVar1 + 8 + iVar2 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 268
    },
    "00410426": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410426(uint8_t *arg_8h, uint32_t arg_ch, uint8_t *arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t arg_18h_00;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    bool bVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_18h_00 = arg_18h;\n    if (arg_18h == 0) {\n        arg_18h_00 = *0x455568;\n    }\n    arg_18h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x45aba8);\n    pcVar2 = _sym.imp.KERNEL32.dll_InterlockedDecrement;\n    bVar5 = *0x45aba4 == 0;\n    puVar3 = arg_10h;\n    if (!bVar5) {\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x45aba8);\n        fcn.004137f8(0x13);\n        puVar3 = arg_10h;\n    }\n    while ((arg_18h != 0 && (uVar1 = *puVar3,  uVar1 != 0))) {\n        if (uVar1 == 0x25) {\n            puVar4 = puVar3 + 1;\n            uVar1 = *puVar4;\n            if (uVar1 == 0x23) {\n                puVar4 = puVar3 + 2;\n            }\n            *0x45af08 = uVar1 == 0x23;\n            fcn.00410520(*0x10 | *puVar4, arg_14h, &arg_8h, &arg_18h, arg_18h_00);\n        }\n        else {\n            if (((*(*0x455c8c + 1 + uVar1 * 2) & 0x80) != 0) && (1 < arg_18h)) {\n                *arg_8h = uVar1;\n                arg_8h = arg_8h + 1;\n                puVar3 = puVar3 + 1;\n                arg_18h = arg_18h - 1;\n            }\n            *arg_8h = *puVar3;\n            arg_8h = arg_8h + 1;\n            arg_18h = arg_18h - 1;\n            puVar4 = puVar3;\n        }\n        puVar3 = puVar4 + 1;\n    }\n    if (bVar5) {\n        (*pcVar2)(0x45aba8);\n    }\n    else {\n        fcn.00413859(0x13);\n    }\n    if (arg_18h == 0) {\n        return 0;\n    }\n    *arg_8h = 0;\n    return arg_ch - arg_18h;\n}\n",
        "token_count": 674
    },
    "00411449": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411449(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.004114e1(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "004114c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004114c9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.004114e1(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00411e3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411e3f(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.0040f5cc(arg_ch);\n    }\n    else {\n        if (arg_ch == 0) {\n            fcn.0040ed16(arg_8h);\n        }\n        else {\n            do {\n                iVar1 = 0;\n                if (arg_ch < 0xffffffe1) {\n                    fcn.004137f8(9);\n                    arg_8h_00 = fcn.004138e1(arg_8h);\n                    if (arg_8h_00 == 0) {\n                        fcn.00413859(9);\n                        if (arg_ch == 0) {\n                            arg_ch = 1;\n                        }\n                        arg_ch = arg_ch + 0xf & 0xfffffff0;\n                        iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x45acdc, 0, arg_8h, arg_ch);\n                    }\n                    else {\n                        if (*0x455974 < arg_ch) {\ncode_r0x00411ede:\n                            if (arg_ch == 0) {\n                                arg_ch = 1;\n                            }\n                            arg_ch = arg_ch + 0xf & 0xfffffff0;\n                            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x45acdc, 0, arg_ch);\n                            if (iVar1 != 0) {\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.0040f660(iVar1, arg_8h, uVar3);\n                                fcn.0041390c(arg_8h_00, arg_8h);\n                            }\n                        }\n                        else {\n                            iVar2 = fcn.004140ec(arg_8h_00, arg_8h, arg_ch);\n                            iVar1 = arg_8h;\n                            if (iVar2 == 0) {\n                                iVar1 = fcn.00413c37(arg_ch);\n                                if (iVar1 == 0) goto code_r0x00411ede;\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.0040f660(iVar1, arg_8h, uVar3);\n                                fcn.0041390c(arg_8h_00, arg_8h);\n                            }\n                            if (iVar1 == 0) goto code_r0x00411ede;\n                        }\n                        fcn.00413859(9);\n                    }\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                }\n                if (*0x459564 == 0) {\n                    return iVar1;\n                }\n                iVar1 = fcn.00415612(arg_ch);\n            } while (iVar1 != 0);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 725
    },
    "00412c8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00412c8f(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    *(unaff_ESI + -4) = *(unaff_EBP + -0x28);\n    iVar1 = fcn.00413031();\n    *(iVar1 + 0x6c) = *(unaff_EBP + -0x1c);\n    iVar1 = fcn.00413031();\n    *(iVar1 + 0x70) = *(unaff_EBP + -0x20);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) && (unaff_EDI[5] == 0x19930520)) &&\n       ((*(unaff_EBP + -0x24) == 0 && (*(unaff_EBP + -0x2c) != 0)))) {\n        fcn.0040ec72();\n        fcn.00412ecb();\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00415265": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415265(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_1a4h;\n    uint var_a0h;\n    \n    iVar2 = 0;\n    piVar1 = 0x455a30;\n    do {\n        if (arg_8h == *piVar1) break;\n        piVar1 = piVar1 + 2;\n        iVar2 = iVar2 + 1;\n    } while (piVar1 < 0x455ac0);\n    if (arg_8h == *(iVar2 * 8 + 0x455a30)) {\n        if ((*0x459380 == 1) || ((*0x459380 == 0 && (*0x455534 == 1)))) {\n            fcn.004154e0();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n        }\n        else if (arg_8h != 0xfc) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            if (iVar2 == 0) {\n                fcn.004153f0();\n            }\n            iVar2 = fcn.004154e0();\n            if (0x3c < iVar2 + 1U) {\n                fcn.004154e0();\n                fcn.00419740();\n            }\n            fcn.004153f0();\n            fcn.00415400();\n            fcn.00415400();\n            fcn.00415400();\n            fcn.004196b2(&var_a0h, \"Microsoft Visual C++ Runtime Library\");\n        }\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "0041555b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0041555b(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t arg_8h;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 * param_2;\n    uVar1 = arg_8h;\n    if (arg_8h < 0xffffffe1) {\n        if (arg_8h == 0) {\n            uVar1 = 1;\n        }\n        uVar1 = uVar1 + 0xf & 0xfffffff0;\n    }\n    do {\n        iVar2 = 0;\n        if (uVar1 < 0xffffffe1) {\n            if (arg_8h < *0x455974 || arg_8h - *0x455974 == 0) {\n                fcn.004137f8(9);\n                iVar2 = fcn.00413c37(arg_8h);\n                fcn.00413859(9);\n                if (iVar2 != 0) {\n                    fcn.0040f4c0(iVar2, 0, arg_8h);\n                    return iVar2;\n                }\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x45acdc, 8, uVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        if (*0x459564 == 0) {\n            return iVar2;\n        }\n        iVar2 = fcn.00415612(uVar1);\n    } while (iVar2 != 0);\n    return 0;\n}\n",
        "token_count": 361
    },
    "00420c03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00420c03(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x459b34,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x459b34] < '\\x01'))\n    {\n        fcn.00420de8();\n    }\n    fcn.0041ec89();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 251
    },
    "0041ee60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041ee60(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.0041f584();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.0041f49e(1);\n        fcn.00429d34(pcVar2);\n    }\n    fcn.0041ec89();\n    *extraout_ECX = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.0041ec89();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 334
    },
    "0041f4da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041f4da(int32_t param_1, uint param_2)\n\n{\n    char unaff_retaddr;\n    \n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x28) = param_2;\n    *(param_1 + 0x30) = 0x20;\n    fcn.00420db0();\n    if (*(param_1 + 0x28) == 0) {\n        fcn.00420840(*(param_1 + 4) & 0xffffff00 | *(param_1 + 4) & 0xff | 4 | 4, 0);\n    }\n    if (unaff_retaddr != '\\0') {\n        fcn.00420d62();\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00420044": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00420044(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.0042068e();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.0041f49e(1);\n        fcn.00429d34(pcVar2);\n    }\n    fcn.0041ec89();\n    *extraout_ECX = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.0041ec89();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 341
    },
    "004205eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004205eb(int32_t param_1, uint param_2)\n\n{\n    ushort uVar1;\n    char unaff_retaddr;\n    \n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x28) = param_2;\n    uVar1 = fcn.00421900(0x20);\n    *(param_1 + 0x30) = uVar1;\n    fcn.00420db0();\n    if (*(param_1 + 0x28) == 0) {\n        fcn.00420840(*(param_1 + 4) & 0xffffff00 | *(param_1 + 4) & 0xff | 4 | 4, 0);\n    }\n    if (unaff_retaddr != '\\0') {\n        fcn.00420d62();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00425bb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425bb4(code **param_1)\n\n{\n    *param_1 = vtable.exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00429d34(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00421c70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00421c70(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetPropA;\n    uStack28 = *0x45af68;\n    uStack32 = param_1;\n    uStack36 = 0x421c8b;\n    iVar2 = (*_sym.imp.USER32.dll_GetPropA)();\n    if (iVar2 == 0) {\n        uStack36 = *0x45af6e;\n        uStack40 = param_1;\n        uStack44 = 0x421c9f;\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            uStack44 = *0x45af72;\n            uStack48 = param_1;\n            uStack52 = 0x421cb3;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                uStack52 = *0x45af6c;\n                uStack56 = param_1;\n                uStack60 = 0x421cc7;\n                iVar2 = (*pcVar1)();\n                if (iVar2 == 0) {\n                    uStack60 = *0x45af70;\n                    uStack64 = param_1;\n                    uStack68 = 0x421cdb;\n                    iVar2 = (*pcVar1)();\n                    if (iVar2 == 0) {\n                        uStack68 = *0x45af6a;\n                        uStack72 = param_1;\n                        uStack76 = 0x421ceb;\n                        iVar2 = (*pcVar1)();\n                        if (iVar2 == 0) {\n                            uStack76 = param_1;\n                            iVar2 = fcn.00421c00();\n                            if (iVar2 == 0) {\n                                if (*0x45ba65 != '\\0') {\n                                    uStack76 = param_1;\n                                    iVar2 = (*_sym.imp.USER32.dll_IsWindowUnicode)();\n                                    if (iVar2 == 0) {\n                                        uStack76 = 0x10;\n                                        (*_sym.imp.USER32.dll_GetClassNameA)(param_1, &stack0xffffffc0);\n                                        (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&stack0xffffffb4, \"edit\");\n                                    }\n                                }\n                                uStack76 = uStack40;\n                                uVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(param_1, 0xfffffffc);\n                                (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x45af6e, uVar3);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 682
    },
    "00422120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00422120(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint unaff_retaddr;\n    uchar *puVar5;\n    uchar auStack264 [4];\n    uchar auStack260 [4];\n    char acStack256 [248];\n    char **ppcStack8;\n    int32_t *piStack4;\n    \n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    pcVar4 = acStack256;\n    cVar1 = *param_2;\n    while (cVar1 != '\\0') {\n        cVar1 = *param_2;\n        if (cVar1 == '&') {\n            param_2 = param_2 + 1;\n            if (*param_2 == '\\0') break;\ncode_r0x00422177:\n            cVar1 = *param_2;\n            param_2 = param_2 + 1;\n            *pcVar4 = cVar1;\n            pcVar4 = pcVar4 + 1;\n        }\n        else {\n            if (*0x45ba65 == '\\0') goto code_r0x00422177;\n            if (cVar1 == *0x45ba64) {\n                param_2 = param_2 + 1;\n                if (*param_2 != '\\0') goto code_r0x00422177;\n                break;\n            }\n            if ((cVar1 != '\\x1e') && (cVar1 != '\\x1f')) goto code_r0x00422177;\n            if (param_2[1] == '\\0') break;\n            param_2 = (*pcVar2)(param_2 + 1);\n        }\n        cVar1 = *param_2;\n    }\n    puVar5 = auStack264;\n    *pcVar4 = '\\0';\n    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    (*_sym.imp.GDI32.dll_GetTextExtentPointA)(unaff_retaddr, auStack260, uVar3);\n    *ppcStack8 = acStack256;\n    *piStack4 = puVar5;\n    return;\n}\n",
        "token_count": 486
    },
    "00422310": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00422310(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint unaff_retaddr;\n    \n    if (*0x45af80 < 0x30a) {\n        return 0;\n    }\n    if (*0x45af60 == 0) {\n        return 0;\n    }\n    uVar4 = param_2 | 1;\n    if ((param_2 & 2) != 0) {\n        uVar4 = param_2 & 0xfffffffc;\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x45af40);\n    if (*0x45afbc != 0x80) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        iVar2 = 0;\n        if (0 < *0x45afbc) {\n            piVar3 = 0x45afc4;\n            do {\n                if (*piVar3 == iVar1) {\n                    piVar3 = iVar2 * 0x14 + 0x45afcc;\n                    *piVar3 = *piVar3 + 1;\n                    goto code_r0x00422416;\n                }\n                piVar3 = piVar3 + 5;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *0x45afbc);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x423530, *0x45af7c, iVar1);\n        if (iVar2 != 0) {\n            *(*0x45afbc * 0x14 + 0x45afc0) = unaff_retaddr;\n            *(*0x45afbc * 0x14 + 0x45afc4) = iVar1;\n            *(*0x45afbc * 0x14 + 0x45afc8) = iVar2;\n            *(*0x45afbc * 0x14 + 0x45afcc) = 1;\n            *(*0x45afbc * 0x14 + 0x45afd0) = uVar4;\n            *0x45afb8 = *0x45afbc;\n            *0x45afbc = *0x45afbc + 1;\n            *0x45afb4 = iVar1;\ncode_r0x00422416:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x45af40);\n            return 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x45af40);\n    return 0;\n}\n",
        "token_count": 599
    },
    "00422580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00422580(uint param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    \n    if (*0x45af60 != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffffc);\n        pcVar3 = _sym.imp.USER32.dll_SetWindowLongA;\n        pcVar2 = _sym.imp.USER32.dll_RemovePropA;\n        iVar6 = 0;\n        do {\n            if (*(iVar6 * 0x18 + 0x45b9c0) == iVar4) {\n                uVar5 = fcn.00421c20(param_1, iVar6);\n                (*pcVar2)(param_1, *0x45af6e);\n                (*pcVar3)(param_1, 0xfffffffc, uVar5);\n                iVar4 = 0;\n                iVar6 = 0x10;\n            }\n            pcVar1 = _sym.imp.USER32.dll_GetPropA;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < 6);\n        if (iVar6 == 6) {\n            if (iVar4 == 0x4231c0) {\n                uVar5 = fcn.00421c20(param_1, 6);\n                (*pcVar2)(param_1, *0x45af6e);\n                (*pcVar3)(param_1, 0xfffffffc, uVar5);\n            }\n            else {\n                iVar4 = (*_sym.imp.USER32.dll_GetPropA)(param_1, *0x45af6e);\n                if (((iVar4 != 0) || (iVar4 = (*pcVar1)(param_1, *0x45af72),  iVar4 != 0)) ||\n                   (iVar4 = (*pcVar1)(param_1, *0x45af70),  iVar4 != 0)) {\n                    (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x45af74, 1);\n                }\n            }\n        }\n        pcVar2 = _sym.imp.USER32.dll_GetWindow;\n        for (iVar4 = (*_sym.imp.USER32.dll_GetWindow)(param_1, 5); iVar4 != 0; iVar4 = (*pcVar2)(iVar4, 2)) {\n            fcn.00422580(iVar4);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 565
    },
    "00422830": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00422830(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_ESI;\n    uint32_t uVar4;\n    uint16_t unaff_retaddr;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (*0x45af60 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(param_1, 5);\n        if (iVar2 != 0) {\n            uVar4 = unaff_ESI & 0xffff0000 | unaff_retaddr;\n            do {\n                fcn.00422780(iVar2, uVar4, 0);\n                for (iVar3 = (*pcVar1)(iVar2, 5); iVar3 != 0; iVar3 = (*pcVar1)(iVar3, 2)) {\n                    fcn.00422780(iVar3, uVar4, iVar2);\n                }\n                iVar2 = (*pcVar1)(iVar2, 2);\n            } while (iVar2 != 0);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 260
    },
    "00422930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00422930(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (((*0x45af60 == 0) || (param_1 < 0x134)) || (param_1 == 0x137)) {\n        return 0;\n    }\n    if (param_1 == 0x134) {\n        if (*0x45af80 < 0x35f) {\n            iVar2 = (*_sym.imp.USER32.dll_GetWindow)(param_3, 5);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_3, 0xfffffff0);\n                if ((uVar1 & 3) != 3) goto code_r0x00422984;\n            }\n        }\n        return 0;\n    }\ncode_r0x00422984:\n    (*_sym.imp.GDI32.dll_SetTextColor)(param_2, *0x45af90);\n    (*_sym.imp.GDI32.dll_SetBkColor)(param_2, *0x45af88);\n    return *0x45afa8;\n}\n",
        "token_count": 272
    },
    "00422a10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * fcn.00422a10(int32_t param_1, uint param_2, uchar *param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    int32_t iStack136;\n    uchar *puStack132;\n    int32_t iStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    uchar *puStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    \n    if (param_5 == 0) {\n        puStack80 = 0x6;\n        puStack84 = param_1;\n        uStack88 = 0x422a32;\n        iStack96 = fcn.00421c20();\n    }\n    else {\n        iStack96 = 0;\n    }\n    puStack80 = param_4;\n    if (iStack96 == 0) {\n        puStack84 = param_3;\n        uStack88 = param_2;\n        iStack92 = param_1;\n        iStack96 = 0x422a63;\n        puStack80 = (*_sym.imp.USER32.dll_DefWindowProcA)();\n    }\n    else {\n        puStack84 = param_3;\n        uStack88 = param_2;\n        iStack92 = param_1;\n        iStack100 = 0x422a50;\n        puStack80 = (*_sym.imp.USER32.dll_CallWindowProcA)();\n    }\n    if (*0x45af60 == 0) {\n        return puStack80;\n    }\n    iStack100 = param_1;\n    puStack104 = 0x422a85;\n    iVar1 = (*_sym.imp.USER32.dll_IsIconic)();\n    if (iVar1 != 0) {\n        return puStack84;\n    }\n    puStack80 = 0x1;\n    puStack104 = &stack0xffffffb0;\n    puStack108 = NULL;\n    iStack112 = 0x11ef;\n    puStack116 = param_1;\n    iStack120 = 0x422ab2;\n    (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack120 = 0xfffffff0;\n    puStack124 = param_1;\n    iStack128 = 0x422abd;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((puStack104 != NULL) && ((uVar2 & 0x10400080) == 0x10400080)) {\n        bVar5 = (uVar2 & 0xc00000) == 0xc00000;\n        iStack128 = param_1;\n        iVar4 = *0x45ba58 - bVar5;\n        puStack132 = 0x422b02;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowDC)();\n        puStack132 = &stack0xffffff9c;\n        iStack136 = param_1;\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack100 = iStack100 - puStack108;\n        iStack96 = iStack96 - puStack104;\n        puStack104 = NULL;\n        puStack108 = NULL;\n        fcn.00421f30(uVar3, &stack0xffffff94, 2, 7, 0xf);\n        puVar8 = &stack0xffffff94;\n        iVar9 = -1;\n        (*_sym.imp.USER32.dll_InflateRect)(puVar8, 0xffffffff, 0xffffffff);\n        fcn.00421f30(uVar3, &stack0xffffff88, 0, 2, 0xf);\n        iVar7 = -1;\n        uVar6 = 0xffffffff;\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff88, 0xffffffff, 0xffffffff);\n        iVar1 = (*_sym.imp.GDI32.dll_SelectObject)(uVar3, *0x45afa8);\n        iStack120 = iStack136;\n        iStack112 = iStack128;\n        puStack116 = iVar9 + *0x45ba54;\n        puStack124 = iVar9;\n        fcn.00421f00(uVar3, &stack0xffffff84);\n        (*_sym.imp.USER32.dll_OffsetRect)(&stack0xffffff84, puStack132 + (-*0x45ba54 - iVar9), 0);\n        fcn.00421f00(uVar3, &stack0xffffff78);\n        iStack136 = iVar7 + *0x45ba54;\n        iStack128 = iVar1 - *0x45ba54;\n        puStack124 = puStack132 + iVar4;\n        fcn.00421f00(uVar3, &stack0xffffff78);\n        if (bVar5) {\n            puStack116 = puStack132 + iVar4;\n            iStack120 = iStack136;\n            iStack112 = iStack128;\n            puStack108 = puStack116 + *0x45ba5c;\n            fcn.00421f30(uVar3, &stack0xffffff88, 2, 0, 0xf);\n        }\n        puStack132 = puStack132 + ((iVar9 - puVar8) - *0x45ba54);\n        puStack124 = puStack132 + *0x45ba58;\n        fcn.00421f00(uVar3, &stack0xffffff78);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar3, uVar6);\n        (*_sym.imp.USER32.dll_ReleaseDC)(param_1, uVar3);\n    }\n    return puStack108;\n}\n",
        "token_count": 1328
    },
    "00422cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00422cc0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    char *pcStack48;\n    char *pcStack44;\n    char *pcStack40;\n    char *pcStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (*0x45ba65 != '\\0') {\n        uStack24 = 0x45af40;\n        uStack28 = 0x422cdd;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProfileStringA;\n        puStack32 = &stack0xfffffff0;\n        uStack28 = 9;\n        *0x45ba64 = 0x1e;\n        pcStack36 = \"roman\";\n        pcStack40 = \"kanjimenu\";\n        pcStack44 = \"windows\";\n        pcStack48 = 0x422d02;\n        (*_sym.imp.KERNEL32.dll_GetProfileStringA)();\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n        puStack52 = &stack0xffffffdc;\n        pcStack48 = \"kanji\";\n        uStack56 = 0x422d14;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        if (iVar3 == 0) {\n            *0x45ba64 = 0x1f;\n        }\n        puStack60 = &stack0xffffffd4;\n        uStack56 = 9;\n        pcStack64 = \"english\";\n        (*pcVar1)(\"windows\", \"hangeulmenu\");\n        iVar3 = (*pcVar2)(&stack0xffffffc0, \"hangeul\");\n        if (iVar3 == 0) {\n            *0x45ba64 = 0x1f;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x45af40);\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "00422d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00422d60(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    \n    uStack56 = 0x45af40;\n    uStack60 = 0x422d71;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uStack60 = 0;\n    uStack64 = 0x422d79;\n    uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n    pcVar2 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uStack64 = 0xc;\n    uStack72 = 0x422d86;\n    uStack68 = uVar4;\n    iVar5 = (*_sym.imp.GDI32.dll_GetDeviceCaps)();\n    uStack72 = 0xe;\n    uStack76 = uVar4;\n    iVar6 = (*pcVar2)();\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    *0x45af60 = 3 < iVar5 * iVar6;\n    iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1);\n    if ((iVar5 == 0x15e) && (iVar5 = (*pcVar2)(0),  iVar5 == 0x280)) {\n        *0x45af60 = 0;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar4);\n    pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n    if (*0x45af60 != 0) {\n        *0x45af68 = (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(0x4571d4);\n        if ((*0x45af68 != 0) && (*0x45af6e = (*pcVar3)(\"C3dNew\"),  *0x45af6e != 0)) {\n            *0x45af6c = (*pcVar3)(\"C3dL\");\n            *0x45af6a = (*pcVar3)(\"C3dH\");\n            if ((*0x45af6c == 0) || (*0x45af6a == 0)) {\n                *0x45af60 = 0;\n                return 0;\n            }\n            *0x45af72 = (*pcVar3)(\"C3dLNew\");\n            *0x45af70 = (*pcVar3)(\"C3dHNew\");\n            if ((*0x45af72 == 0) || (*0x45af70 == 0)) {\n                *0x45af60 = 0;\n                return 0;\n            }\n            *0x45af74 = (*pcVar3)(\"C3dD\");\n            if (*0x45af74 != 0) {\n                *0x45ba65 = (*pcVar2)(0x2a);\n                fcn.00422cc0();\n                iVar5 = fcn.00423030(1);\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                if (iVar5 != 0) {\n                    puVar8 = 0x44a424;\n                    puVar7 = 0x45b9c0;\n                    do {\n                        puVar1 = puVar8 + -5;\n                        *puVar7 = *puVar8;\n                        puVar8 = puVar8 + 8;\n                        (*pcVar2)(0, puVar1, &stack0xffffffb4);\n                        puVar7[1] = uStack72;\n                        puVar7 = puVar7 + 6;\n                    } while (puVar8 < vtable.exception.0);\n                    iVar5 = (*pcVar2)(0, 0x8002, &stack0xffffffb4);\n                    if (iVar5 == 0) {\n                        *0x45ba50 = _sym.imp.USER32.dll_DefDlgProcA;\n                    }\n                    else {\n                        *0x45ba50 = uStack72;\n                    }\n                    goto code_r0x00422dfb;\n                }\n            }\n        }\n        *0x45af60 = 0;\n    }\ncode_r0x00422dfb:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x45af40);\n    return *0x45af60;\n}\n",
        "token_count": 1001
    },
    "00422f50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00422f50(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    ushort uVar4;\n    ushort extraout_var;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x45af40);\n    piVar2 = 0x45b9c0;\n    do {\n        if (*piVar2 != 0) {\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 6;\n    } while (piVar2 < 0x45ba50);\n    uVar3 = fcn.00421ed0();\n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*0x45af68 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar3 & 0xffff0000 | *0x45af68);\n    }\n    if (*0x45af6e != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x45af6e);\n    }\n    if (*0x45af6c != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x45af6c);\n    }\n    if (*0x45af6a != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x45af6a);\n    }\n    if (*0x45af72 != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x45af72);\n    }\n    uVar4 = uVar3 >> 0x10;\n    if (*0x45af70 != 0) {\n        (*pcVar1)(uVar3 & 0xffff0000 | *0x45af70);\n        uVar4 = extraout_var;\n    }\n    if (*0x45af74 != 0) {\n        (*pcVar1)(CONCAT22(uVar4, *0x45af74));\n    }\n    *0x45af60 = 0;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x45af40);\n    return;\n}\n",
        "token_count": 515
    },
    "00423030": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00423030(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    char *pcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    uint *puVar9;\n    bool bVar10;\n    int32_t iStack80;\n    int32_t aiStack76 [4];\n    int32_t aiStack32 [4];\n    uint uStack16;\n    uint uStack12;\n    int32_t iStack8;\n    uint uStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    if (*0x45af60 == 0) {\n        return 0;\n    }\n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 + 1;\n        aiStack76[3] = *(uVar3 * 2 + 0x44a4d0);\n        aiStack76[2] = 0x423063;\n        uVar2 = (*pcVar1)();\n        *(&stack0xffffffe0 + uVar3 * 4) = uVar2;\n        uVar3 = uVar5;\n    } while (uVar5 < 8);\n    if (*0x45af80 == 0x300) {\n        aiStack32[0] = 0xffffff;\n    }\n    if (((iStack8 == 0) || (aiStack32[1] == iStack8)) && (iStack8 = 0xc0c0c0,  aiStack32[1] != 0x808080)) {\n        iStack8 = 0x808080;\n    }\n    bVar10 = param_1 == 0;\n    if (bVar10) {\n        iVar4 = 0x20;\n        pcVar6 = 0x45af84;\n        pcVar8 = &stack0xffffffe0;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            bVar10 = *pcVar6 == *pcVar8;\n            pcVar6 = pcVar6 + 1;\n            pcVar8 = pcVar8 + 1;\n        } while (bVar10);\n        if (bVar10) {\n            return 1;\n        }\n    }\n    aiStack76[3] = uStack4;\n    aiStack76[2] = uStack16;\n    aiStack76[1] = aiStack32[0];\n    aiStack76[0] = aiStack32[2];\n    iStack80 = aiStack32[1];\n    iStack80 = fcn.004252b0(*0x45af78, 0x67c7, uStack12);\n    pcVar1 = _sym.imp.GDI32.dll_CreateSolidBrush;\n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 + 1;\n        uVar2 = (*pcVar1)(*(&stack0xffffffc0 + uVar3 * 4));\n        *(&stack0xffffffb4 + uVar3 * 4) = uVar2;\n        uVar3 = uVar5;\n    } while (uVar5 < 3);\n    uVar5 = 0;\n    do {\n        if (*(&stack0xffffffb4 + uVar5 * 4) == 0) goto code_r0x00423188;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 3);\n    if (iStack80 != 0) {\n        fcn.00421ed0();\n        *0x45afa4 = aiStack76[0];\n        *0x45afa8 = aiStack76[1];\n        *0x45afac = aiStack76[2];\n        puVar7 = &stack0xffffffc0;\n        puVar9 = 0x45af84;\n        for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        *0x45afb0 = iStack80;\n        return 1;\n    }\ncode_r0x00423188:\n    uVar5 = 0;\n    do {\n        uVar3 = uVar5;\n        uVar5 = uVar5 + 1;\n        fcn.00421eb0(&stack0xffffffb4 + uVar3 * 4);\n    } while (uVar5 < 3);\n    fcn.00421eb0(&stack0xffffffb0);\n    return 0;\n}\n",
        "token_count": 1047
    },
    "00423910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.00423910(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint16_t *puVar5;\n    uint32_t unaff_EDI;\n    uchar auStack16 [8];\n    uint16_t uStack8;\n    uint32_t uStack4;\n    \n    iVar2 = fcn.00421c00(param_1);\n    if (iVar2 != 0) {\n        return false;\n    }\n    iVar2 = 0;\n    puVar5 = 0x44a42c;\n    (*_sym.imp.USER32.dll_GetClassNameA)(param_1, auStack16, 0x10);\n    uVar1 = uStack4 & 0xffff;\n    do {\n        if ((*puVar5 & uVar1) != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(puVar5 + -0xe, &stack0xffffffe4);\n            if (iVar3 == 0) {\n                uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff0);\n                iVar3 = (**(iVar2 * 0x20 + 0x44a428))\n                                  (param_1, uVar4, unaff_EDI & 0xffff0000 | uVar1, puVar5 & 0xffff0000 | uStack8, \n                                   uStack4);\n                if (iVar3 == 1) {\n                    if ((uStack8 == 1) && (*0x45af82 == 0x10)) {\n                        fcn.00421e10(param_1, *(iVar2 * 0x18 + 0x45b9c0));\n                        return true;\n                    }\n                    fcn.00421c70(param_1, *(iVar2 * 0x18 + 0x45b9c0));\n                }\n                return iVar3 != 0;\n            }\n        }\n        puVar5 = puVar5 + 0x10;\n        iVar2 = iVar2 + 1;\n        if (0x44a4eb < puVar5) {\n            return false;\n        }\n    } while( true );\n}\n",
        "token_count": 493
    },
    "00423b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00423b30(uint param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack260;\n    uchar *puStack256;\n    uchar *puStack252;\n    uchar *puStack248;\n    int32_t iStack244;\n    int32_t iStack240;\n    int32_t iStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    int32_t iStack224;\n    uchar *puStack220;\n    int32_t iStack216;\n    int32_t iStack212;\n    int32_t iStack208;\n    int32_t iStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    uint uStack164;\n    int32_t iStack160;\n    int32_t iStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    int32_t iStack144;\n    uint uStack140;\n    int32_t iStack136;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint uStack124;\n    int32_t iStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack16 = *param_3;\n    uStack12 = param_3[1];\n    uStack8 = param_3[2];\n    uStack48 = 0xf;\n    uStack52 = 7;\n    uStack4 = param_3[3];\n    puStack56 = 0x7;\n    puStack60 = param_3;\n    iStack64 = param_2;\n    puStack68 = 0x423b66;\n    fcn.00421f30();\n    puStack56 = &stack0xfffffff0;\n    uStack48 = 0xffffffff;\n    uStack52 = 0xffffffff;\n    puStack60 = 0x423b78;\n    (*_sym.imp.USER32.dll_InflateRect)();\n    if (param_3 == 1) {\n        puStack60 = uStack8;\n        iStack64 = 0x423b8b;\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n        if (iVar1 != 0) {\n            puStack72 = &stack0xffffffe4;\n            puStack60 = 0xf;\n            iStack64 = 7;\n            puStack68 = 0x7;\n            iStack76 = param_2;\n            iStack80 = 0x423ba0;\n            fcn.00421f30();\n            puStack68 = &stack0xffffffe4;\n            puStack60 = 0xffffffff;\n            iStack64 = 0xffffffff;\n            puStack72 = 0x423bb2;\n            (*_sym.imp.USER32.dll_InflateRect)();\n        }\n    }\n    puStack60 = 0xf00021;\n    puStack72 = param_3[1];\n    iStack64 = 1;\n    iStack76 = *param_3;\n    puStack68 = 0x1;\n    iStack80 = param_2;\n    uStack84 = 0x423bc9;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack84 = 0xf00021;\n    uStack96 = param_3[1];\n    uStack88 = 1;\n    uStack92 = 1;\n    iStack100 = param_3[2] + -1;\n    iStack104 = param_2;\n    uStack108 = 0x423be2;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack108 = 0xf00021;\n    uStack112 = 1;\n    iStack120 = param_3[3] + -1;\n    uStack116 = 1;\n    uStack124 = *param_3;\n    iStack128 = param_2;\n    iStack132 = 0x423bfa;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack132 = 0xf00021;\n    iStack136 = 1;\n    iStack144 = param_3[3] + -1;\n    uStack140 = 1;\n    iStack148 = param_3[2] + -1;\n    iStack152 = param_2;\n    iStack156 = 0x423c14;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    bVar4 = iStack80 == 0;\n    iVar1 = bVar4 + 1;\n    iStack156 = *0x45afa4;\n    if (iStack80 != 0) {\n        iStack156 = *0x45afac;\n    }\n    iStack160 = param_2;\n    uStack164 = 0x423c39;\n    iStack144 = (*_sym.imp.GDI32.dll_SelectObject)();\n    uStack164 = 0xf00021;\n    iStack168 = iStack120 - iStack128;\n    iStack176 = iStack128;\n    iStack180 = iStack132;\n    iStack184 = param_2;\n    iStack188 = 0x423c5d;\n    iStack172 = iVar1;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack188 = 0xf00021;\n    iStack196 = iStack148 - iStack156;\n    iStack200 = iStack152;\n    iStack204 = iStack156;\n    iStack208 = param_2;\n    iStack212 = 0x423c7d;\n    iStack192 = iVar1;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    if (iStack136 == 0) {\n        iVar3 = 0;\n        iStack212 = *0x45afac;\n        iStack216 = param_2;\n        puStack220 = 0x423c93;\n        (*_sym.imp.GDI32.dll_SelectObject)();\n        iStack168 = iStack168 + -1;\n        iStack172 = iStack172 + -1;\n        if (iVar1 != 0) {\n            do {\n                iStack212 = 0xf00021;\n                iStack216 = 1;\n                puStack220 = (iStack172 - iStack180) + 1;\n                iStack224 = iStack168;\n                iStack228 = iStack180;\n                iStack232 = param_2;\n                iStack236 = 0x423cc1;\n                (*_sym.imp.GDI32.dll_PatBlt)();\n                iStack236 = 0xf00021;\n                iStack240 = iStack192 - iStack200;\n                iStack244 = 1;\n                puStack248 = iStack200;\n                puStack252 = iStack196;\n                puStack256 = param_2;\n                iStack260 = 0x423ce2;\n                (*_sym.imp.GDI32.dll_PatBlt)();\n                if (iVar3 < bVar4) {\n                    puStack220 = &stack0xffffff4c;\n                    iStack212 = 0xffffffff;\n                    iStack216 = 0xffffffff;\n                    iStack224 = 0x423cf8;\n                    (*_sym.imp.USER32.dll_InflateRect)();\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n    }\n    iStack180 = iStack180 + 1;\n    iStack176 = iStack176 + 1;\n    iStack212 = *0x45afa8;\n    iStack216 = param_2;\n    puStack220 = 0x423d12;\n    (*_sym.imp.GDI32.dll_SelectObject)();\n    puStack220 = 0xf00021;\n    iStack224 = iStack176 - iStack184;\n    iStack228 = iStack180 - iStack188;\n    iStack232 = iStack184;\n    iStack236 = iStack188;\n    iStack240 = param_2;\n    iStack244 = 0x423d3a;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack244 = iStack192;\n    puStack248 = 0x423d45;\n    iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n    if (iVar1 == 0) {\n        puStack248 = *0x45af9c;\n        puStack252 = param_2;\n        puStack256 = 0x423d56;\n        (*_sym.imp.GDI32.dll_SetTextColor)();\n    }\n    iVar1 = iStack184;\n    puStack248 = &stack0xffffff24;\n    puStack252 = &stack0xffffff20;\n    puStack256 = iStack184;\n    iStack260 = param_2;\n    fcn.00422120();\n    iStack212 = iStack212 + ((iStack204 - iStack212) - puStack220) / 2;\n    iStack216 = iStack216 + ((iStack208 - iStack216) - iStack224) / 2;\n    iVar3 = iStack212 + puStack220;\n    if (iStack204 <= iStack212 + puStack220) {\n        iVar3 = iStack204;\n    }\n    iVar2 = iStack216 + iStack224;\n    if (iStack208 <= iStack216 + iStack224) {\n        iVar2 = iStack208;\n    }\n    iStack208 = iVar2;\n    if (iStack172 != 0) {\n        puStack256 = &stack0xffffff28;\n        puStack248 = 0x1;\n        puStack252 = 0x1;\n        iStack260 = 0x423dde;\n        iStack204 = iVar3;\n        (*_sym.imp.USER32.dll_OffsetRect)();\n        iVar3 = param_3[2] + -3;\n        if (iStack208 <= param_3[2] + -3) {\n            iVar3 = iStack208;\n        }\n        iStack208 = iVar3;\n        iVar3 = param_3[3] + -3;\n        if (iStack204 <= param_3[3] + -3) {\n            iVar3 = iStack204;\n        }\n    }\n    iStack204 = iVar3;\n    puStack252 = &stack0xffffff28;\n    puStack248 = 0x20;\n    puStack256 = iStack180;\n    iStack260 = iVar1;\n    (*_sym.imp.USER32.dll_DrawTextA)(param_2);\n    iVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n    if (iVar1 == iStack216) {\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff14, 1, 1);\n        (*_sym.imp.USER32.dll_IntersectRect)(&stack0xffffff08, &stack0xffffff08, param_3);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(param_2, &stack0xfffffefc);\n    }\n    if (puStack248 != NULL) {\n        (*_sym.imp.GDI32.dll_SelectObject)(param_2, puStack248);\n    }\n    return;\n}\n",
        "token_count": 2637
    },
    "00423e70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00423e70(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack460;\n    int32_t iStack456;\n    int32_t iStack452;\n    int32_t iStack448;\n    int32_t iStack444;\n    uint32_t uStack440;\n    int32_t iStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    int32_t iStack424;\n    int32_t iStack420;\n    int32_t iStack416;\n    int32_t iStack412;\n    int32_t iStack408;\n    uint32_t uStack404;\n    int32_t iStack400;\n    int32_t iStack396;\n    int32_t iStack392;\n    int32_t iStack388;\n    int32_t iStack384;\n    uchar *puStack380;\n    int32_t iStack376;\n    uint uStack372;\n    int32_t iStack368;\n    int32_t iStack364;\n    uint uStack360;\n    uchar auStack308 [208];\n    uint32_t uStack100;\n    int32_t iStack4;\n    \n    uStack360 = 0xfffffff0;\n    iStack364 = param_1;\n    iStack368 = 0x423e8a;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    iStack368 = param_1;\n    uVar2 = uVar2 & 0x1f;\n    uStack372 = 0x423e9f;\n    (*_sym.imp.USER32.dll_GetParent)();\n    uStack372 = 2;\n    iStack376 = iStack4;\n    puStack380 = 0x423eb3;\n    (*_sym.imp.GDI32.dll_SetBkMode)();\n    puStack380 = &stack0xfffffecc;\n    iStack384 = param_1;\n    iStack388 = 0x423ec1;\n    (*_sym.imp.USER32.dll_GetClientRect)();\n    iStack388 = 0;\n    iStack392 = 0;\n    iStack396 = 0x31;\n    iStack400 = param_1;\n    uStack404 = 0x423eed;\n    uStack404 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack384 = uStack404;\n    if (uStack404 != 0) {\n        iStack408 = iStack4;\n        iStack412 = 0x423efd;\n        iStack384 = (*_sym.imp.GDI32.dll_SelectObject)();\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    uStack404 = 0xf;\n    iStack408 = 0x423f0b;\n    iStack408 = (*_sym.imp.USER32.dll_GetSysColor)();\n    iStack412 = iStack4;\n    iStack416 = 0x423f13;\n    (*_sym.imp.GDI32.dll_SetBkColor)();\n    iStack416 = 0x12;\n    iStack420 = 0x423f17;\n    iStack420 = (*pcVar1)();\n    iStack424 = iStack4;\n    iStack428 = 0x423f1f;\n    (*_sym.imp.GDI32.dll_SetTextColor)();\n    iStack428 = param_1;\n    iStack432 = iStack4;\n    iStack436 = 0x135;\n    uStack440 = iStack396;\n    iStack444 = 0x423f31;\n    iStack444 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack448 = iStack4;\n    iStack452 = 0x423f39;\n    uStack404 = (*_sym.imp.GDI32.dll_SelectObject)();\n    iStack452 = iStack384;\n    iStack456 = iStack388;\n    iStack460 = iStack392;\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(iStack4, iStack396);\n    if (((uStack100 & 0x10) != 0) && (uVar2 != 7)) {\n        (*_sym.imp.GDI32.dll_PatBlt)\n                  (iStack4, iStack416, iStack412, iStack408 - iStack416, uStack404 - iStack412, 0xf00021);\n    }\n    iVar10 = param_1;\n    iStack432 = (*_sym.imp.USER32.dll_IsWindowEnabled)(param_1);\n    uVar9 = 0;\n    iVar8 = 0;\n    uVar7 = 0xf2;\n    uStack404 = (*_sym.imp.USER32.dll_SendMessageA)(param_1, 0xf2, 0, 0);\n    iVar11 = 0;\n    uStack440 = uStack404 & 3;\n    uStack404 = uStack404 & 4;\n    if ((((uStack100 & 10) != 0) || (uVar2 == 0)) || (uVar2 == 1)) {\n        iStack452 = (*_sym.imp.USER32.dll_GetWindowTextA)(param_1, &stack0xfffffe7c, 0x100);\n    }\n    // switch table (10 cases) at 0x424394\n    switch(uVar2) {\n    case 0:\n    case 1:\n        fcn.00423b30(param_1, iStack4, &stack0xfffffe5c, &stack0xfffffe7c, iStack452, uVar2, uStack404);\n        goto code_r0x00424369;\n    case 2:\n    case 3:\n        break;\n    case 4:\n    case 9:\n        iVar11 = 0xd;\n        break;\n    case 5:\n    case 6:\n        if (uStack440 == 2) {\n            iVar11 = 0x1a;\n        }\n        break;\n    case 7:\n        if ((uStack100 & 6) != 0) {\n            fcn.00422120(iStack4, &stack0xfffffe7c, &stack0xfffffe48, &stack0xfffffe38);\n            if (iStack456 == 0) {\n                fcn.00422120(iStack4, 0x4571e8, &stack0xfffffe6c, &stack0xfffffe38);\n            }\n            pcVar1 = _sym.imp.USER32.dll_ClientToScreen;\n            iStack436 = iStack436 + 4;\n            iStack428 = uStack440 + iStack436 + 4;\n            iStack424 = iStack456 + iStack432;\n            if ((uStack100 & 0x20) != 0) {\n                puVar6 = &stack0xfffffe6c;\n                iStack400 = iStack432;\n                iStack396 = iStack412;\n                uStack404 = iStack436;\n                iStack392 = iStack424;\n                (*_sym.imp.USER32.dll_ClientToScreen)(param_1, puVar6);\n                (*pcVar1)(param_1, &stack0xfffffe6c);\n                pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n                (*_sym.imp.USER32.dll_ScreenToClient)(uVar9, &stack0xfffffe5c);\n                (*pcVar1)(uVar7, &stack0xfffffe5c);\n                (*_sym.imp.USER32.dll_InvalidateRect)(puVar6, &stack0xfffffe4c, 1);\n                return;\n            }\n            iStack412 = iStack412 + -1;\n            iStack408 = iStack408 + -1;\n            iStack416 = iStack416 + iStack456 / 2;\n            fcn.00421f30(iStack4, &stack0xfffffe5c, 2, 2, 0xf);\n            (*_sym.imp.USER32.dll_OffsetRect)(&stack0xfffffe5c, 1, 1);\n            fcn.00421f30(iStack4, &stack0xfffffe50, 0, 0, 0xf);\n            if (iStack460 == 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(iStack4, *0x45af9c);\n            }\n            (*_sym.imp.USER32.dll_DrawTextA)(iStack4, &stack0xfffffe70, iVar11, &stack0xfffffe40, 0x20);\n        }\n    default:\n        goto code_r0x00424369;\n    }\n    if (((uStack100 & 4) != 0) && (iVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(iStack4),  iVar3 != 0)) {\n        iVar4 = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, *0x45afb0);\n        if (iVar4 != 0) {\n            iVar5 = iStack444;\n            if (iVar11 != 0) {\n                iVar5 = iStack436 + -0xe;\n            }\n            (*_sym.imp.GDI32.dll_BitBlt)\n                      (iStack4, iVar5, uStack440 + ((iStack432 - uStack440) + -0xd) / 2, 0xe, 0xd, iVar3, uVar9, iVar10\n                       , 0xcc0020);\n            (*_sym.imp.GDI32.dll_SelectObject)(iVar3, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_DeleteDC)(iVar3);\n    }\n    if ((uStack100 & 2) != 0) {\n        if (iStack456 == 0) {\n            iStack436 = iStack420 + 0x12;\n        }\n        else {\n            iStack428 = iStack412 + -0x12;\n        }\n        if (iStack448 == 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(iStack4, *0x45af9c);\n        }\n        (*_sym.imp.USER32.dll_DrawTextA)(iStack4, &stack0xfffffe7c, iStack452, &stack0xfffffe4c, 0x24);\n    }\n    if ((uStack100 & 8) != 0) {\n        fcn.00422120(iStack4, &stack0xfffffe7c, &stack0xfffffe6c, &stack0xfffffe48);\n        iStack432 = ((iStack424 - iStack432) - uStack440) / 2;\n        iStack424 = uStack440 + iStack432;\n        if (iStack456 == 0) {\n            iStack436 = iStack420 + 0x12;\n        }\n        else {\n            iStack412 = iStack412 + -0x12;\n            iStack436 = iStack420;\n        }\n        iStack428 = uStack404 + iStack436;\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xfffffe4c, 1, 1);\n        (*_sym.imp.USER32.dll_IntersectRect)(&stack0xfffffe40, &stack0xfffffe40, &stack0xfffffe50);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(iStack4, &stack0xfffffe34);\n    }\ncode_r0x00424369:\n    (*_sym.imp.GDI32.dll_SelectObject)(iStack4, iStack444);\n    if (iVar8 != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(iStack4, iVar8);\n    }\n    return;\n}\n",
        "token_count": 2574
    },
    "004246a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004246a0(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    int32_t unaff_retaddr;\n    uint uVar8;\n    int32_t iStack124;\n    int32_t iStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uchar auStack68 [4];\n    uint32_t uStack64;\n    uchar auStack56 [8];\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    iStack88 = -0x10;\n    uStack92 = param_1;\n    puStack96 = 0x4246b4;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar2 & 0x10000000) != 0) {\n        if ((param_1 == 3) && ((uVar2 & 3) == 3)) {\n            puStack96 = NULL;\n            iStack100 = 0;\n            iStack104 = 0x157;\n            puStack108 = param_1;\n            iStack112 = 0x4246e0;\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n            if (iVar3 != 0) {\n                return;\n            }\n        }\n        if (unaff_retaddr != 0) {\n            puStack96 = param_1;\n            iStack100 = 0x4246f6;\n            (*_sym.imp.USER32.dll_HideCaret)();\n        }\n        puStack96 = &stack0xffffffc8;\n        iStack100 = param_1;\n        iStack104 = 0x424702;\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack104 = param_1;\n        puStack108 = 0x424709;\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)();\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        puStack108 = &stack0xffffffbc;\n        puStack116 = 0x424719;\n        iStack112 = iVar3;\n        (*_sym.imp.USER32.dll_ScreenToClient)();\n        puStack116 = &stack0xffffffbc;\n        uVar2 = 0xf;\n        iStack124 = 0x424725;\n        iStack120 = iVar3;\n        (*pcVar1)();\n        iStack124 = iVar3;\n        uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n        puStack96 = puStack108 & 0x100000;\n        if (puStack96 != NULL) {\n            uVar2 = 7;\n        }\n        uStack92 = puStack108 & 0x200000;\n        if (uStack92 != 0) {\n            uVar2 = uVar2 & 0xfffffffb;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff4);\n        if (iStack40 - iVar5 == -1000) {\n            puStack108 = 0x29a;\n            puStack96 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1944, 0, &stack0xffffff94);\n            if (iStack124 == 0x29a) {\n                puStack96 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1943, 0, &stack0xffffff84);\n            }\n            (*_sym.imp.USER32.dll_GetClassNameA)(iVar3, &stack0xffffffb0, 0x10);\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&stack0xffffffa4, \"ComboBox\");\n            if ((iVar5 == 0) || ((puStack108 == 0x1 && (unaff_EDI == 0x3eb)))) {\n                puStack116 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n                uVar8 = 2;\n                (*_sym.imp.USER32.dll_MapWindowPoints)(iVar3, puStack116, &stack0xffffff9c, 2);\n                (*_sym.imp.USER32.dll_ReleaseDC)(iVar3, uVar4);\n                uVar4 = (*_sym.imp.USER32.dll_GetDC)(uVar8);\n                if (iStack40 == 0) {\n                    uVar2 = uVar2 & 0xfffffffd;\n                    uStack92 = uStack92 + 1;\n                    iVar3 = iStack112;\n                }\n                else {\n                    uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n                    if (((uVar6 & 3) == 2) || ((uVar6 & 3) == 3)) {\n                        iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x157, 0, 0);\n                        iVar3 = iStack112;\n                        if (iVar5 != 0) {\n                            (*_sym.imp.USER32.dll_ReleaseDC)(iStack112, uVar4);\n                            (*_sym.imp.USER32.dll_ShowCaret)(param_1);\n                            return;\n                        }\n                    }\n                    else {\n                        uVar2 = uVar2 & 0xfffffff7;\n                        uVar8 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 5);\n                        (*_sym.imp.USER32.dll_GetWindowRect)(uVar8, &stack0xffffffa0);\n                        iStack88 = iStack88 + (unaff_EDI - unaff_EBX);\n                        fcn.00422070(uVar4, &stack0xffffffa0, 0x1008);\n                        iStack88 = iStack88 + (unaff_EBX - unaff_EDI);\n                        iVar3 = iStack112;\n                    }\n                }\n            }\n        }\n        fcn.00422070(uVar4, &stack0xffffffa0, uVar2);\n        iVar5 = iStack88;\n        if ((iStack36 == 3) && ((puStack116 & 3) == 3)) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n            puStack96 = iVar5 - iVar7;\n            fcn.00421f30(uVar4, &stack0xffffffa0, 7, 7, 0xc);\n            fcn.00423ac0(param_1);\n        }\n        else {\n            if (iStack100 != 0) {\n                iStack88 = iStack88 + 1;\n                fcn.00421f30(uVar4, &stack0xffffffa0, 0, 0, 4);\n                iVar5 = iStack88 + -1;\n                uStack64 = puStack96;\n                iStack88 = iVar5;\n                iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n                puStack96 = iVar5 - iVar7;\n                fcn.00421f30(uVar4, &stack0xffffffa0, 7, 7, 8);\n                puStack96 = uStack64;\n            }\n            if (iStack104 != 0) {\n                unaff_EBP = unaff_EBP + 1;\n                fcn.00421f30(uVar4, &stack0xffffffa0, 0, 0, 8);\n                iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n                uStack92 = (unaff_EBP + -1) - iVar5;\n                fcn.00421f30(uVar4, &stack0xffffffa0, 7, 7, 4);\n            }\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(iVar3, uVar4);\n        if (iStack48 != 0) {\n            (*_sym.imp.USER32.dll_ShowCaret)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1835
    },
    "00424e10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00424e10(uint noname_0, uint noname_1, int32_t *noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint hWnd, uint hdc, \n            uint nXLeft)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    uint var_ch;\n    uint32_t var_14h_2;\n    uint var_4h;\n    uint uStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint var_14h;\n    uint crColor;\n    uint lpchText;\n    \n    uStack28 = 0xf00021;\n    iStack40 = noname_2[1];\n    iStack44 = *noname_2;\n    iStack32 = noname_2[3] - iStack40;\n    iStack36 = noname_2[2] - iStack44;\n    uStack48 = var_ch;\n    uStack52 = 0x424e3e;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack52 = noname_0;\n    iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)();\n    fcn.0040fca0();\n    if (*0x10 != 0x34) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextA)(noname_0, &stack0xffffffcc, iVar1 + 2);\n        if (iVar1 != 0) {\n            uVar2 = 0x140;\n            if ((var_14h_2 & 0xf) != 0xc) {\n                uVar2 = var_14h_2 & 0xf | 0x150;\n            }\n            if ((var_14h_2 & 0x80) != 0) {\n                uVar2 = uVar2 | 0x800;\n            }\n            if ((var_14h_2 & 0x8000000) != 0) {\n                crColor = (*_sym.imp.GDI32.dll_SetTextColor)(var_ch, *0x45af9c);\n            }\n            (*_sym.imp.USER32.dll_DrawTextA)(var_ch, &stack0xffffffcc, 0xffffffff, noname_2, uVar2);\n            if ((var_14h_2 & 0x8000000) != 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(var_ch, crColor);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 642
    },
    "004251e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004251e0(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    \n    if (param_2 == 1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32.DLL\");\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DisableThreadLibraryCalls\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(unaff_ESI);\n        }\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x45af40);\n        *0x45af78 = unaff_ESI;\n        *0x45af7c = unaff_ESI;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n        *0x45af80 = CONCAT11(uVar3, uVar3 >> 8);\n        if (((uVar3 & 0x80000000) == 0) || (*0x45af82 = 0x10,  0x35e < *0x45af80)) {\n            *0x45af82 = 0x20;\n        }\n        *0x45ba54 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        *0x45ba54 = *0x45ba54 + -1;\n        *0x45ba58 = (*pcVar2)(8);\n        *0x45ba58 = *0x45ba58 + -1;\n        *0x45ba5c = (*pcVar2)(4);\n        *0x45ba60 = (*pcVar2)(0x1e);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x45af40);\n    }\n    return 1;\n}\n",
        "token_count": 425
    },
    "0042659d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * fcn.0042659d(void)\n\n{\n    uint *extraout_ECX;\n    char cVar1;\n    uint uVar2;\n    int32_t var_4h_2;\n    uint *arg_8h;\n    \n    arg_8h = &var_4h_2;\n    uVar2 = 0x44de68;\n    var_4h_2 = 0x458f28;\n    fcn.0040fc5c(arg_8h, 0x44de68);\n    cVar1 = arg_8h;\n    *extraout_ECX = *0x454618;\n    if (0 < var_4h_2) {\n        fcn.0042a88e(var_4h_2);\n        fcn.0040f4c0(*extraout_ECX, cVar1, uVar2);\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 201
    },
    "0042673e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042673e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (arg_8h < 0) {\n        arg_8h = 0;\n    }\n    iVar1 = *(*in_ECX + -8);\n    if ((0 < arg_ch) && (arg_8h < iVar1)) {\n        fcn.0042a9ca();\n        fcn.0040f660(*in_ECX + arg_8h, *in_ECX + arg_8h + arg_ch, ((iVar1 - arg_8h) - arg_ch) + 1);\n        *(*in_ECX + -8) = iVar1 - arg_ch;\n    }\n    return iVar1;\n}\n",
        "token_count": 181
    },
    "00426796": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426796(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.0042a9ca();\n    if (arg_8h < 0) {\n        arg_8h = 0;\n    }\n    arg_ch_00 = *in_ECX;\n    iVar1 = *(arg_ch_00 + -8);\n    if (iVar1 < arg_8h) {\n        arg_8h = iVar1;\n    }\n    iVar1 = iVar1 + 1;\n    if (*(arg_ch_00 + -4) < iVar1) {\n        fcn.0042a88e(iVar1);\n        fcn.0040f660(*in_ECX, arg_ch_00, *(arg_ch_00 + -8) + 1);\n        fcn.0042a989(arg_ch_00 + -0xc);\n    }\n    fcn.0040f660(*in_ECX + arg_8h + 1, *in_ECX + arg_8h, iVar1 - arg_8h);\n    *(*in_ECX + arg_8h) = arg_ch;\n    *(*in_ECX + -8) = iVar1;\n    return iVar1;\n}\n",
        "token_count": 300
    },
    "0042690c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042690c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t arg_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    if ((arg_8h == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h),  iVar2 == 0)) {\n        var_8h = 0;\n    }\n    else {\n        if (arg_ch == 0) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = (*pcVar1)(arg_ch);\n        }\n        uVar6 = *in_ECX;\n        var_8h = 0;\n        uVar5 = *(uVar6 - 8) + uVar6;\n        if (uVar6 < uVar5) {\n            do {\n                while (iVar3 = fcn.00411fe6(uVar6, arg_8h),  iVar3 != 0) {\n                    var_8h = var_8h + 1;\n                    uVar6 = iVar3 + iVar2;\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar6);\n                uVar6 = uVar6 + 1 + iVar3;\n            } while (uVar6 < uVar5);\n            if (0 < var_8h) {\n                fcn.0042a9ca();\n                uVar6 = *in_ECX;\n                iVar3 = *(uVar6 - 8);\n                iVar7 = (var_4h - iVar2) * var_8h + iVar3;\n                if ((*(uVar6 - 4) < iVar7) || (1 < *(uVar6 - 0xc))) {\n                    fcn.0042a88e(iVar7);\n                    fcn.0040f660(*in_ECX, uVar6, *(uVar6 - 8));\n                    fcn.0042a989(uVar6 - 0xc);\n                }\n                uVar6 = *in_ECX;\n                uVar5 = *(uVar6 - 8) + uVar6;\n                for (; uVar6 < uVar5; uVar6 = uVar6 + 1 + iVar4) {\n                    iVar4 = fcn.00411fe6(uVar6, arg_8h);\n                    while (iVar4 != 0) {\n                        uVar6 = iVar4 + var_4h;\n                        arg_10h = ((*in_ECX - iVar4) - iVar2) + iVar3;\n                        fcn.00411960(uVar6, iVar2 + iVar4, arg_10h);\n                        fcn.0040f660(iVar4, arg_ch, var_4h);\n                        *(arg_10h + uVar6) = 0;\n                        iVar3 = iVar3 + (var_4h - iVar2);\n                        iVar4 = fcn.00411fe6(uVar6, arg_8h);\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar6);\n                }\n                *(*in_ECX - 8) = iVar7;\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 829
    },
    "00426d1e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00426d1e(uint *param_1, char *param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint unaff_retaddr;\n    int32_t iStack16;\n    uint32_t uStack12;\n    \n    iStack16 = 0;\n    cVar1 = *param_2;\n    piVar6 = param_3;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.0042ae51(iStack16);\n            fcn.004121ec(*param_1, unaff_retaddr, param_1);\n            fcn.0042aea0(0xffffffff);\n            return;\n        }\n        if (*param_2 == '%') {\n            param_2 = fcn.00410dde(param_2);\n            cVar1 = *param_2;\n            if (cVar1 == '%') goto code_r0x00426fd9;\n            iVar7 = 0;\n            param_3 = NULL;\n            if (cVar1 == '\\0') {\ncode_r0x00426dab:\n                param_3 = fcn.0041125e(param_2);\n                while ((piVar5 = piVar6,  *param_2 != '\\0' && (iVar2 = fcn.00411c95(*param_2),  iVar2 != 0))) {\n                    param_2 = fcn.00410dde(param_2);\n                }\n            }\n            else {\n                do {\n                    if (cVar1 == '#') {\n                        iStack16 = iStack16 + 2;\n                    }\n                    else if (cVar1 == '*') {\n                        param_3 = *piVar6;\n                        piVar6 = piVar6 + 1;\n                    }\n                    else if ((((cVar1 != '-') && (cVar1 != '+')) && (cVar1 != '0')) && (cVar1 != ' ')) break;\n                    param_2 = fcn.00410dde(param_2);\n                    cVar1 = *param_2;\n                } while (cVar1 != '\\0');\n                piVar5 = piVar6;\n                if (param_3 == NULL) goto code_r0x00426dab;\n            }\n            iVar2 = 0;\n            if (*param_2 == '.') {\n                param_2 = fcn.00410dde(param_2);\n                if (*param_2 == '*') {\n                    iVar2 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                    param_2 = fcn.00410dde(param_2);\n                }\n                else {\n                    iVar2 = fcn.0041125e(param_2);\n                    while ((*param_2 != '\\0' && (iVar3 = fcn.00411c95(*param_2),  iVar3 != 0))) {\n                        param_2 = fcn.00410dde(param_2);\n                    }\n                }\n            }\n            uStack12 = 0;\n            iVar3 = fcn.00412253(param_2, 0x446824, 3);\n            if (iVar3 == 0) {\n                param_2 = param_2 + 3;\n                uStack12 = 0x40000;\n            }\n            else {\n                cVar1 = *param_2;\n                if (((cVar1 != 'F') && (cVar1 != 'L')) && (cVar1 != 'N')) {\n                    if (cVar1 == 'h') {\n                        uStack12 = 0x10000;\n                    }\n                    else {\n                        if (cVar1 != 'l') goto code_r0x00426e7d;\n                        uStack12 = 0x20000;\n                    }\n                }\n                param_2 = fcn.00410dde(param_2);\n            }\ncode_r0x00426e7d:\n            uVar4 = *param_2 | uStack12;\n            piVar6 = piVar5;\n            if (uVar4 < 0x10064) {\n                if ((uVar4 == 0x10063) || (uVar4 == 0x43)) {\ncode_r0x00426f35:\n                    iVar7 = 2;\n                }\n                else {\n                    if (uVar4 == 0x53) goto code_r0x00426f22;\n                    if (uVar4 == 99) goto code_r0x00426f35;\n                    if (uVar4 != 0x73) {\n                        if (uVar4 == 0x10043) goto code_r0x00426f35;\n                        if (uVar4 != 0x10053) goto code_r0x00426ebe;\n                    }\ncode_r0x00426f3d:\n                    if (*piVar5 == 0) goto code_r0x00426f47;\n                    iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*piVar5);\ncode_r0x00426f53:\n                    if (iVar7 < 1) {\n                        iVar7 = 1;\n                    }\n                    piVar6 = piVar5 + 1;\n                    if (iVar7 == 0) goto code_r0x00426ebe;\n                }\ncode_r0x00426f65:\n                piVar6 = piVar5 + 1;\n                if ((iVar2 != 0) && (iVar2 <= iVar7)) {\n                    iVar7 = iVar2;\n                }\n                if (iVar7 <= param_3) {\n                    iVar7 = param_3;\n                }\n            }\n            else {\n                if (uVar4 == 0x10073) goto code_r0x00426f3d;\n                if (uVar4 == 0x20043) goto code_r0x00426f35;\n                if (uVar4 == 0x20053) {\ncode_r0x00426f22:\n                    if (*piVar5 != 0) {\n                        iVar7 = fcn.0040f995(*piVar5);\n                        goto code_r0x00426f53;\n                    }\ncode_r0x00426f47:\n                    iVar7 = 6;\n                    goto code_r0x00426f65;\n                }\n                if (uVar4 == 0x20063) goto code_r0x00426f35;\n                if (uVar4 == 0x20073) goto code_r0x00426f22;\ncode_r0x00426ebe:\n                cVar1 = *param_2;\n                if (cVar1 < 'j') {\n                    if (cVar1 == 'i') goto code_r0x00426fc0;\n                    if (cVar1 == 'G') goto code_r0x00426f8b;\n                    if ((cVar1 == 'X') || (cVar1 == 'd')) goto code_r0x00426fc0;\n                    if (cVar1 == 'e') {\ncode_r0x00426f8b:\n                        piVar6 = piVar6 + 2;\n                        iVar7 = 0x80;\n                        goto code_r0x00426fb2;\n                    }\n                    if (cVar1 != 'f') {\n                        if (cVar1 != 'g') goto code_r0x00426fcf;\n                        goto code_r0x00426f8b;\n                    }\n                    piVar6 = piVar6 + 2;\n                    iVar7 = 0x80;\n                    iVar2 = iVar2 + 0x138;\n                }\n                else {\n                    if (cVar1 == 'n') {\n                        piVar6 = piVar6 + 1;\n                        goto code_r0x00426fcf;\n                    }\n                    if (cVar1 == 'o') {\ncode_r0x00426fc0:\n                        if ((uStack12 & 0x40000) == 0) goto code_r0x00426fac;\n                        piVar6 = piVar6 + 2;\n                    }\n                    else {\n                        if (cVar1 != 'p') {\n                            if ((cVar1 != 'u') && (cVar1 != 'x')) goto code_r0x00426fcf;\n                            goto code_r0x00426fc0;\n                        }\ncode_r0x00426fac:\n                        piVar6 = piVar6 + 1;\n                    }\n                    iVar7 = 0x20;\ncode_r0x00426fb2:\n                    iVar2 = param_3 + iVar2;\n                }\n                if (iVar7 <= iVar2) {\n                    iVar7 = iVar2;\n                }\n            }\ncode_r0x00426fcf:\n            iStack16 = iStack16 + iVar7;\n        }\n        else {\ncode_r0x00426fd9:\n            iVar7 = fcn.0041223d(param_2);\n            iStack16 = iStack16 + iVar7;\n        }\n        param_2 = fcn.00410dde(param_2);\n        cVar1 = *param_2;\n    } while( true );\n}\n",
        "token_count": 2005
    },
    "00427082": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427082(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = &arg_10h;\n    iVar1 = (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x500, arg_ch, 0, 0, &var_4h, 0, &var_8h);\n    if ((iVar1 == 0) || (var_4h == 0)) {\n        fcn.00426584();\n    }\n    fcn.0042abaa(var_4h);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(var_4h);\n    return;\n}\n",
        "token_count": 172
    },
    "0042791e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042791e(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    if (arg_8h != 0) {\n        iVar2 = fcn.0043a6ad(0x4397b6);\n        if (*(iVar2 + 0x18) != 0) {\n            fcn.0042e604(arg_8h);\n            *(iVar2 + 0x18) = 0;\n        }\n        pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n        if (arg_ch == 0x110) {\n            *0x459350 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"commdlg_LBSelChangedNotify\");\n            *0x45934c = (*pcVar1)(\"commdlg_ShareViolation\");\n            *0x459348 = (*pcVar1)(\"commdlg_FileNameOK\");\n            *0x459344 = (*pcVar1)(\"commdlg_ColorOK\");\n            *0x459340 = (*pcVar1)(\"commdlg_help\");\n            *0x45933c = (*pcVar1)(\"commdlg_SetRGBColor\");\n            uVar3 = fcn.00429d3f(arg_8h, 0x110, arg_10h, arg_14h);\n            return uVar3;\n        }\n        if ((arg_ch == *0x459340) || ((arg_ch == 0x111 && (arg_10h == 0x40e)))) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x111, 0xe146, 0);\n            return 1;\n        }\n        if (0xbfff < arg_ch) {\n            piVar4 = fcn.0042b628(arg_8h);\n            iVar2 = fcn.0042f6b3(0x447e58);\n            if ((iVar2 == 0) || ((*(piVar4 + 0x92) & 8) == 0)) {\n                if (arg_ch == *0x45934c) {\n                    uVar3 = (**(*piVar4 + 0xd0))(arg_14h);\n                    return uVar3;\n                }\n                if (arg_ch == *0x459348) {\n                    if (*0x4592b4 != 0) {\n                        piVar4[0x7d] = arg_14h;\n                    }\n                    uVar3 = (**(*piVar4 + 0xd4))();\n                    piVar4[0x7d] = 0;\n                    return uVar3;\n                }\n                if (arg_ch == *0x459350) {\n                    (**(*piVar4 + 0xd8))(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n                }\n                else if (arg_ch == *0x459344) {\n                    uVar3 = (**(*piVar4 + 0xd0))();\n                    return uVar3;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 717
    },
    "00427c2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427c2e(int32_t param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EDI;\n    uint uVar5;\n    \n    uVar5 = *(param_1 + 0x78);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar5);\n    fcn.0040f4c0(iVar3 + 1 + *(param_1 + 0x78), 0, *(param_1 + 0x7c) - (iVar3 + 1));\n    (*_sym.imp.USER32.dll_GetFocus)();\n    bVar1 = false;\n    uVar4 = fcn.0042a324();\n    *(param_1 + 0x60) = uVar4;\n    fcn.0042bb00();\n    pcVar2 = _sym.imp.USER32.dll_EnableWindow;\n    if (*(param_1 + 0x60) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x60));\n        if (iVar3 != 0) {\n            bVar1 = true;\n            (*pcVar2)(*(param_1 + 0x60), 0);\n        }\n    }\n    iVar3 = fcn.00439ba1();\n    if ((*(param_1 + 0x92) & 8) == 0) {\n        fcn.0042bab4(param_1);\n    }\n    else {\n        *(iVar3 + 0x18) = param_1;\n    }\n    if (*(param_1 + 0xa8) == 0) {\n        sub.comdlg32.dll_GetSaveFileNameA(param_1 + 0x5c);\n    }\n    else {\n        sub.comdlg32.dll_GetOpenFileNameA();\n    }\n    *(iVar3 + 0x18) = 0;\n    if (bVar1) {\n        (*pcVar2)(*(param_1 + 0x60), 1);\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindow)(unaff_EDI);\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n    }\n    fcn.0042a35e();\n    if (unaff_EDI == 0) {\n        unaff_EDI = 2;\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 553
    },
    "004286d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004286d9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar1 = fcn.0042892a(param_1 + 0x14, *(param_1 + 0x18));\n        iVar3 = *(param_1 + 0x18);\n        puVar2 = iVar1 + -8 + iVar3 * 0xc;\n        if (-1 < iVar3 + -1) {\n            do {\n                *puVar2 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar2;\n                puVar2 = puVar2 + -3;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    puVar2 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar2;\n    puVar2[1] = uStack8;\n    *puVar2 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar2[2] = 0;\n    return;\n}\n",
        "token_count": 319
    },
    "004289a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004289a3(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        fcn.00429d34(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.00429d0b(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.0040f4c0(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 176
    },
    "00428a3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428a3c(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.0042892a(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar4 * 0xc;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -3;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    puVar3[1] = 0;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 305
    },
    "00428d6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428d6d(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x98) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x98));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if (iVar2 == 0) {\n            iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0);\n            if (iVar2 != 0) {\n                if (*(in_ECX + 0x94) != 0) {\n                    fcn.00432ff6(*(in_ECX + 0x94));\n                }\n                uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n                *(in_ECX + 0x94) = uVar3;\n                uVar3 = (*pcVar1)(uVar3);\n                iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n                if (iVar2 != 1) {\n                    fcn.00432ff6(*(in_ECX + 0x94));\n                    *(in_ECX + 0x94) = 0;\n                }\n                sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "0042903d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042903d(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar2 = fcn.00439e57();\n    piVar1 = *(iVar2 + 4);\n    if (piVar1 != NULL) {\n        if (piVar1[0x15] != NULL) {\n            (*piVar1[0x15])(1, 0);\n        }\n        if (param_2 != 0) {\n            (**(*piVar1 + 0x78))();\n        }\n        *(iVar2 + 4) = 0;\n    }\n    fcn.004290e1(0);\n    fcn.0040f47f(unaff_retaddr);\n    return;\n}\n",
        "token_count": 181
    },
    "00429082": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00429082(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00439e31();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.00439ba1();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x42952c, 0, uVar2);\n        *(iVar1 + 0x30) = uVar2;\n        iVar1 = fcn.0043a76f(0x4397ea);\n        if (*(iVar1 + 0x14) != 0) {\n            iVar3 = fcn.00439e31();\n            (**(iVar1 + 0x14))(*(iVar3 + 8));\n        }\n        fcn.0043a6ad(0x4397ff);\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "004290e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004290e1(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    fcn.0042f94f();\n    fcn.0042f958(0xffffffff);\n    if (unaff_retaddr == 0) {\n        iVar1 = fcn.0043a724();\n        if ((iVar1 != 0) && (*(iVar1 + 0xcc) != NULL)) {\n            (**(**(iVar1 + 0xcc) + 0x58))();\n            if (*(iVar1 + 0xcc) != NULL) {\n                (**(**(iVar1 + 0xcc) + 4))(1);\n            }\n            *(iVar1 + 0xcc) = 0;\n        }\n    }\n    if (*0x458ed4 != 0) {\n        fcn.0043a654(unaff_retaddr, 0);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "004298eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004298eb(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00439e31();\n        iVar1 = (**(**(iVar1 + 0x1038) + 4))();\n        return iVar1;\n    }\n    if (arg_ch == 0xfffffffd) {\n        arg_ch = 0;\n        iVar1 = *(arg_10h + 0x30);\n        puVar2 = (**(*in_ECX + 0x2c))();\n        do {\n            if (puVar2 == NULL) {\n                return arg_ch;\n            }\n            if (arg_ch != 0) {\n                return arg_ch;\n            }\n            piVar5 = puVar2[1];\n            while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                if (arg_8h == piVar5[1]) {\n                    if (iVar1 == 0) {\n                        iVar3 = *piVar5;\n                    }\n                    else {\n                        if (*piVar5 == 0) goto code_r0x0042998e;\n                        iVar3 = fcn.0040f520(iVar1, *piVar5, 0x10);\n                    }\n                    if (iVar3 == 0) {\n                        arg_ch = 1;\n                        *(arg_10h + 4) = piVar5[2];\n                    }\n                }\ncode_r0x0042998e:\n                piVar5 = piVar5 + 3;\n            }\n            puVar2 = *puVar2;\n        } while( true );\n    }\n    if (arg_ch != 0xffffffff) {\n        uVar4 = arg_ch & 0xffff;\n        arg_ch_00 = arg_ch >> 0x10;\n        arg_ch = uVar4;\n        if (arg_ch_00 != 0) goto code_r0x004299b3;\n    }\n    arg_ch_00 = 0x111;\ncode_r0x004299b3:\n    puVar2 = (**(*in_ECX + 0x28))();\n    while( true ) {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        iVar1 = fcn.0042c56d(puVar2[1], arg_ch_00, arg_ch, arg_8h);\n        if (iVar1 != 0) break;\n        puVar2 = *puVar2;\n    }\n    iVar1 = fcn.004297e4(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n    return iVar1;\n}\n",
        "token_count": 688
    },
    "00429d7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00429d7f(int32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0042bf11(param_2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0042ce41();\n        if ((iVar1 != 0) && (*(iVar1 + 0x50) != 0)) {\n            return 0;\n        }\n        if ((((param_2[1] != 0x100) ||\n             (((param_2[2] != 0x1b && (param_2[2] != 3)) ||\n              (uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(*param_2, 0xfffffff0),  (uVar2 & 4) == 0)))) ||\n            (iVar1 = fcn.00432e6e(*param_2, 0x4450a8),  iVar1 == 0)) ||\n           ((iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x1c), 2),  iVar1 != 0 &&\n            (iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar1),  iVar1 == 0)))) {\n            uVar3 = fcn.0042e021(param_2);\n            return uVar3;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x111, 2, 0);\n    }\n    return 1;\n}\n",
        "token_count": 365
    },
    "0042a796": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0042a796(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -0xc) < 0) {\n        *param_1 = *0x454618;\n        fcn.0042abaa(*param_2);\n    }\n    else {\n        *param_1 = iVar1;\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n    }\n    return param_1;\n}\n",
        "token_count": 132
    },
    "0042a9ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a9ac(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(*param_1 + -8) != 0) {\n        if (-1 < *(*param_1 + -0xc)) {\n            if (*param_1 + -0xc != *0x45461c) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n                if (iVar1 < 1) {\n                    fcn.0042a910();\n                }\n                *param_1 = *0x454618;\n            }\n            return;\n        }\n        fcn.0042abaa(0x4573b8);\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0042a9ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a9ca(int32_t *param_1)\n\n{\n    int32_t arg_ch;\n    \n    arg_ch = *param_1;\n    if (1 < *(arg_ch + -0xc)) {\n        fcn.0042a958();\n        fcn.0042a88e(*(arg_ch + -8));\n        fcn.0040f660(*param_1, arg_ch, *(arg_ch + -8) + 1);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0042a9f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a9f8(int32_t *param_1, int32_t param_2)\n\n{\n    if ((1 < *(*param_1 + -0xc)) || (*(*param_1 + -4) < param_2)) {\n        fcn.0042a958();\n        fcn.0042a88e(param_2);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0042ab5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0042ab5a(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *param_1;\n    iVar2 = *param_2;\n    if (iVar1 != iVar2) {\n        if (((*(iVar1 + -0xc) < 0) && (iVar1 + -0xc != *0x45461c)) || (*(iVar2 + -0xc) < 0)) {\n            fcn.0042ab2d(*(iVar2 + -8), iVar2);\n        }\n        else {\n            fcn.0042a958();\n            iVar1 = *param_2;\n            *param_1 = iVar1;\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 203
    },
    "0042acb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0042acb6(uint arg_8h, uint arg_ch, uint lpString)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    uVar1 = *0x454618;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x10) = uVar1;\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x10) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 0x10));\n    }\n    fcn.0042ac12(*(**(unaff_EBP + 0xc) + -8), **(unaff_EBP + 0xc), uVar1, *(unaff_EBP + 0x10));\n    fcn.0042a796(unaff_EBP + -0x10);\n    *(unaff_EBP + -0x14) = 1;\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21();\n    uVar1 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 395
    },
    "0042ad2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0042ad2a(uint arg_8h, uint lpString, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    uVar1 = *0x454618;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x10) = uVar1;\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 0xc));\n    }\n    fcn.0042ac12(uVar1, *(unaff_EBP + 0xc), *(**(unaff_EBP + 0x10) + -8), **(unaff_EBP + 0x10));\n    fcn.0042a796(unaff_EBP + -0x10);\n    *(unaff_EBP + -0x14) = 1;\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21();\n    uVar1 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "0042ad9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ad9e(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = *param_1;\n        if ((*(iVar1 + -0xc) < 2) && (*(iVar1 + -8) + param_2 <= *(iVar1 + -4))) {\n            fcn.0040f660(*(iVar1 + -8) + iVar1, param_3, param_2);\n            *(*param_1 + -8) = *(*param_1 + -8) + param_2;\n            *(*(*param_1 + -8) + *param_1) = 0;\n        }\n        else {\n            fcn.0042ac12(*(iVar1 + -8), iVar1, param_2, param_3);\n            fcn.0042a989(iVar1 + -0xc);\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0042ae51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042ae51(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    \n    arg_ch = *param_1;\n    if ((1 < *(arg_ch + -0xc)) || (*(arg_ch + -4) < param_2)) {\n        iVar1 = *(arg_ch + -8);\n        if (param_2 < iVar1) {\n            param_2 = iVar1;\n        }\n        fcn.0042a88e(param_2);\n        fcn.0040f660(*param_1, arg_ch, iVar1 + 1);\n        *(*param_1 + -8) = iVar1;\n        fcn.0042a989(arg_ch + -0xc);\n    }\n    return *param_1;\n}\n",
        "token_count": 186
    },
    "0042b04a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0042b04a(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if ((param_3 == 0) && (param_1 != 0)) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, param_2, 0xffffffff, param_1, param_3);\n    if (0 < iVar1) {\n        *(param_1 + -2 + iVar1 * 2) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "0042b440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nuint fcn.0042b440(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_40h;\n    uint var_24h;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    iVar1 = fcn.0043a6ad(0x4397b6);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    puVar4 = iVar1 + 0x34;\n    puVar5 = unaff_EBP + -0x40;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(iVar1 + 0x34) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x3c) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x38) = iVar3;\n    *(iVar1 + 0x40) = uVar2;\n    if ((iVar3 == 2) && (arg_8h[0xd] != NULL)) {\n        (**(*arg_8h[0xd] + 0x5c))(0);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0042b2cd(arg_8h, unaff_EBP + -0x24, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h + 0x98))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0042b2f0(arg_8h, unaff_EBP + -0x24);\n    }\n    uVar2 = *(unaff_EBP + 0x18);\n    puVar4 = unaff_EBP + -0x40;\n    puVar5 = iVar1 + 0x34;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 790
    },
    "0042b58f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042b58f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar1 = fcn.00439e57();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00429cf9(0x43302c);\n        iVar3 = fcn.00429d0b(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0042fa52(0x4451d8, 0x1c, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.00429cf9(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 357
    },
    "0042b8be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042b8be(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    code *pcVar9;\n    uint32_t var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0043a6ad(0x4397b6);\n    if (arg_8h != 3) {\n        uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), arg_8h, arg_ch, arg_10h);\n        return uVar2;\n    }\n    piVar1 = *(var_4h + 0x14);\n    iVar6 = *arg_10h;\n    iVar3 = fcn.00439e31();\n    var_8h = *(iVar3 + 0x14);\n    if ((piVar1 == NULL) && (((*(iVar6 + 0x23) & 0x40) != 0 || (var_8h != 0)))) goto code_r0x0042ba87;\n    if (*0x4592cc != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe6);\n        if ((uVar4 & 0x10000) != 0) goto code_r0x0042ba87;\n        puVar5 = *(iVar6 + 0x28);\n        if (puVar5 >> 0x10 == 0) {\n            var_10h = var_10h & 0xffffff00 | var_10h & puVar5 >> 0x10;\n            (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(&var_10h & 0xffff0000 | *(iVar6 + 0x28), &var_10h, 5);\n            puVar5 = &var_10h;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(puVar5, 0x445688);\n        if (iVar6 == 0) goto code_r0x0042ba87;\n    }\n    if (piVar1 == NULL) {\n        iVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        pcVar9 = _sym.imp.USER32.dll_GetPropA;\n        if ((iVar6 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetPropA)(arg_ch, \"AfxOldWndProc423\"),  iVar3 == 0)) {\n            (*_sym.imp.USER32.dll_SetPropA)(arg_ch, \"AfxOldWndProc423\", iVar6);\n            iVar3 = (*pcVar9)(arg_ch, \"AfxOldWndProc423\");\n            if (iVar3 == iVar6) {\n                (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(\"AfxOldWndProc423\");\n                pcVar9 = fcn.0042b842;\n                if (*(var_4h + 0x28) == 0) {\n                    pcVar9 = fcn.0042b6e3;\n                }\n                (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, pcVar9);\n            }\n        }\n        goto code_r0x0042ba87;\n    }\n    fcn.0042b646(arg_ch);\n    (**(*piVar1 + 0x50))();\n    piVar7 = (**(*piVar1 + 0x80))();\n    iVar6 = *0x4592c8;\n    if ((((*0x4592b4 == 0) && (var_8h == 0)) && (*0x4592c8 != 0)) &&\n       ((*(*0x4592c8 + 0x20) != 0 && (var_10h = fcn.0042b440(piVar1, arg_ch, 0x36f, 0, 0),  var_10h != 0)))) {\n        iVar3 = fcn.0042b6dd();\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        (**(iVar6 + 0x20))(arg_ch, var_10h);\n        if (iVar8 != iVar3) {\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar3);\ncode_r0x0042ba1b:\n            *piVar7 = iVar3;\n        }\n    }\n    else {\n        iVar6 = fcn.0042b6dd();\n        iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar6);\n        if (iVar3 != iVar6) goto code_r0x0042ba1b;\n    }\n    *(var_4h + 0x14) = 0;\ncode_r0x0042ba87:\n    iVar6 = var_4h;\n    uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), 3, arg_ch, arg_10h);\n    if (var_8h != 0) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar6 + 0x2c));\n        *(iVar6 + 0x2c) = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1283
    },
    "0042bab4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042bab4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.0043a6ad(0x4397b6);\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x2c) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, fcn.0042b8be, 0, uVar2);\n            *(iVar1 + 0x2c) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00426584();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "0042bb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042bb00(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043a6ad(0x4397b6);\n    iVar2 = fcn.00439e31();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x2c) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x2c));\n        *(iVar1 + 0x2c) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 175
    },
    "0042bcbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042bcbb(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[7] != NULL) && (extraout_ECX != 0x458cb0)) && (extraout_ECX != 0x458c70)) &&\n       ((extraout_ECX != 0x458c30 && (extraout_ECX != 0x458bf0)))) {\n        fcn.0042be79();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0xe];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x24) == extraout_ECX)) {\n        *(pcVar1 + 0x24) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004297b9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 352
    },
    "0042bd55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042bd55(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    \n    iVar2 = fcn.00428f48();\n    if (iVar2 == 0) goto code_r0x0042bda0;\n    if (*(iVar2 + 0x1c) == param_1) {\n        iVar3 = fcn.00439e31();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00439e31();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.004364d3();\n                if (iVar3 == 0) goto code_r0x0042bd95;\n            }\n            fcn.004416c0(0);\n        }\ncode_r0x0042bd95:\n        *(iVar2 + 0x1c) = 0;\n    }\n    if (*(iVar2 + 0x20) == param_1) {\n        *(iVar2 + 0x20) = 0;\n    }\ncode_r0x0042bda0:\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 0x50))();\n        param_1[0xc] = 0;\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    param_1[0xd] = 0;\n    if ((*(param_1 + 9) & 1) != 0) {\n        iVar2 = fcn.00439ba1();\n        iVar2 = *(iVar2 + 0xcc);\n        if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n            fcn.0040f4c0(&var_2ch, 0, 0x2c);\n            var_24h = param_1[7];\n            var_2ch = 0x28;\n            var_28h = 1;\n            var_20h = var_24h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_2ch);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[7], 0xfffffffc);\n    fcn.0042b568();\n    iVar3 = (*pcVar1)(param_1[7], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0x80))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[7], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0042b67f();\n    (**(*param_1 + 0xa4))();\n    return;\n}\n",
        "token_count": 738
    },
    "0042be79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042be79(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        return 0;\n    }\n    fcn.0042b58f(0);\n    iVar1 = fcn.00428ad4(*(param_1 + 0x1c));\n    if (*(param_1 + 0x38) == NULL) {\n        uVar2 = (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 0x1c));\n    }\n    else {\n        uVar2 = (**(**(param_1 + 0x38) + 0x50))();\n    }\n    if (iVar1 == 0) {\n        fcn.0042b67f();\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "0042c56d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042c56d(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "0042c606": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_60h\n\nuint __cdecl fcn.0042c606(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *arg_8h_00;\n    uint *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    code *pcVar10;\n    int32_t unaff_EBP;\n    int16_t iVar11;\n    uint *in_FS_OFFSET;\n    uint uVar12;\n    uint var_60h;\n    uint var_44h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = 0;\n    iVar4 = *(unaff_EBP + 8);\n    if (iVar4 == 0x111) {\n        iVar4 = (**(*arg_8h_00 + 0x78))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar4 != 0) {\ncode_r0x0042ca5c:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x0042caa0;\n        }\ncode_r0x0042c78f:\n        uVar12 = 0;\n        goto code_r0x0042c791;\n    }\n    if (iVar4 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar4 = (**(*arg_8h_00 + 0x7c))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\ncode_r0x0042c65f:\n            if (iVar4 != 0) goto code_r0x0042caa0;\n        }\n        goto code_r0x0042c78f;\n    }\n    puVar7 = *(unaff_EBP + 0x10);\n    if (iVar4 == 6) {\n        uVar12 = fcn.0042b601(puVar7);\n        fcn.0042b369(arg_8h_00, *(unaff_EBP + 0xc), uVar12);\n    }\n    iVar11 = puVar7;\n    if ((iVar4 == 0x20) && (iVar4 = fcn.0042b3ca(arg_8h_00, iVar11, puVar7 >> 0x10),  iVar4 != 0))\n    goto code_r0x0042ca5c;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    *(unaff_EBP + -0x14) = uVar5;\n    uVar9 = uVar5 & 0x1ff ^ *(unaff_EBP + 8) & 0x1ff;\n    fcn.0043ad3e(7);\n    uVar5 = *(unaff_EBP + 8);\n    iVar4 = uVar9 * 0xc;\n    iVar6 = *(unaff_EBP + -0x14);\n    if ((uVar5 != *(uVar9 * 0xc + 0x4573c8)) || (iVar6 != *(iVar4 + 0x4573d0))) {\n        *(iVar4 + 0x4573c8) = uVar5;\n        *(iVar4 + 0x4573d0) = iVar6;\n        if (iVar6 != 0) {\n            while( true ) {\n                if (uVar5 < 0xc000) {\n                    iVar6 = fcn.0042c56d(*(iVar6 + 4), uVar5, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        *(iVar4 + 0x4573cc) = iVar6;\n                        fcn.0043adae(7);\n                        iVar4 = *(unaff_EBP + 0x10);\n                        goto code_r0x0042c7af;\n                    }\n                }\n                else {\n                    iVar6 = fcn.0042c56d(*(iVar6 + 4), 0xc000, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        while( true ) {\n                            if (**(iVar6 + 0x10) == *(unaff_EBP + 8)) {\n                                *(iVar4 + 0x4573cc) = iVar6;\n                                fcn.0043adae(7);\n                                iVar4 = *(unaff_EBP + 0x10);\n                                goto code_r0x0042ca92;\n                            }\n                            iVar6 = fcn.0042c56d(iVar6 + 0x18, 0xc000, 0, 0);\n                            *(unaff_EBP + 0x10) = iVar6;\n                            if (iVar6 == 0) break;\n                            iVar6 = *(unaff_EBP + 0x10);\n                        }\n                    }\n                }\n                iVar6 = **(unaff_EBP + -0x14);\n                *(unaff_EBP + -0x14) = iVar6;\n                if (iVar6 == 0) break;\n                iVar6 = *(unaff_EBP + -0x14);\n                uVar5 = *(unaff_EBP + 8);\n            }\n        }\n        *(iVar4 + 0x4573cc) = 0;\n        fcn.0043adae(7);\n        goto code_r0x0042c78f;\n    }\n    iVar4 = *(iVar4 + 0x4573cc);\n    *(unaff_EBP + 0x10) = iVar4;\n    fcn.0043adae(7);\n    if (iVar4 == 0) goto code_r0x0042c78f;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0042ca92:\n        pcVar10 = *(iVar4 + 0x14);\ncode_r0x0042ca95:\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x0042ca99;\n    }\ncode_r0x0042c7af:\n    iVar6 = *(unaff_EBP + 0x10);\n    pcVar10 = *(iVar4 + 0x14);\n    iVar4 = *(iVar6 + 0x10);\n    if (*(iVar6 + 8) == 0x1a) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        iVar6 = *(unaff_EBP + 0x10);\n        iVar4 = (-(uVar2 < 4) & 0xfffffff0) + 0x2f;\n    }\n    iVar3 = puVar7 >> 0x10;\n    // switch table (49 cases) at 0x42cab4\n    switch(iVar4) {\n    case 1:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.00431855(puVar7);\n        goto code_r0x0042c8ea;\n    case 2:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0042c8ea;\n    case 3:\n    case 8:\n        uVar9 = puVar7 >> 0x10;\n        puVar7 = iVar11;\n        uVar5 = *(unaff_EBP + 0xc);\n        uVar9 = fcn.0042b601(uVar5, puVar7, uVar9);\n        goto code_r0x0042c905;\n    case 4:\n        fcn.004317b3();\n        uVar12 = puVar7[1];\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x20) = uVar12;\n        fcn.0042b1e0();\n        uVar12 = *puVar7;\n        uVar1 = puVar7[2];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x44) = uVar12;\n        iVar4 = fcn.0042b628(uVar12);\n        if (iVar4 == 0) {\n            if ((arg_8h_00[0xd] != 0) && (iVar4 = fcn.00428ad4(*(unaff_EBP + -0x44)),  iVar4 != 0)) {\n                *(unaff_EBP + -0x28) = iVar4;\n            }\n            iVar4 = unaff_EBP + -0x60;\n        }\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, iVar4, uVar1);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = uVar12;\n        fcn.0042bcbb();\n        *(unaff_EBP + -4) = 0xffffffff;\n        goto code_r0x0042c8c0;\n    case 5:\n        fcn.004317b3();\n        uVar12 = puVar7[2];\n        *(unaff_EBP + -0x20) = puVar7[1];\n        *(unaff_EBP + -4) = 2;\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, uVar12);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x10) = uVar12;\ncode_r0x0042c8c0:\n        fcn.004318e8();\n        break;\n    case 6:\n        uVar5 = fcn.0042b601(puVar7, *(unaff_EBP + 0xc) >> 0x10);\n        goto code_r0x0042c900;\n    case 7:\n        puVar7 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x0042ca99;\n    case 9:\n    case 0x2a:\ncode_r0x0042c8ea:\n        uVar12 = (*pcVar10)(puVar7);\ncode_r0x0042ca9d:\n        *(unaff_EBP + -0x10) = uVar12;\n        break;\n    case 10:\n    case 0x21:\n        goto code_r0x0042ca95;\n    case 0xb:\n        puVar7 = fcn.0042eeab(puVar7);\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0042c900:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x0042c905:\n        uVar12 = (*pcVar10)(uVar9, uVar5, puVar7);\n        goto code_r0x0042ca9d;\n    case 0xc:\n        (*pcVar10)();\n        break;\n    case 0xd:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0042ca29;\n    case 0xe:\n    case 0x12:\n    case 0x25:\n    case 0x2f:\n        goto code_r0x0042ca09;\n    case 0xf:\n        puVar8 = iVar3;\n        iVar4 = iVar11;\n        goto code_r0x0042ca0c;\n    case 0x10:\n    case 0x11:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x0042ca4a;\n    case 0x13:\n        puVar8 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0042b601(puVar8);\n        fcn.0042b601(puVar7, uVar5);\n        uVar9 = arg_8h_00[7] == puVar7;\n        goto code_r0x0042ca4e;\n    case 0x14:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.00431855(puVar7);\n        goto code_r0x0042ca29;\n    case 0x15:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.0042eeab(puVar7);\n        goto code_r0x0042ca29;\n    case 0x16:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        uVar9 = fcn.0042eeab(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x0042ca4e;\n    case 0x17:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0042c990;\n    case 0x18:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x0042c9ac;\n    case 0x19:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x0042c9ac:\n        uVar9 = fcn.0042b601(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x0042ca4e;\n    case 0x1a:\n        iVar4 = fcn.0042b601(*(unaff_EBP + 0xc), puVar7);\n        puVar8 = puVar7;\n        goto code_r0x0042ca0c;\n    case 0x1b:\n        fcn.0042b601(puVar7);\ncode_r0x0042ca09:\n        iVar4 = *(unaff_EBP + 0xc);\n        puVar8 = puVar7;\n        goto code_r0x0042ca0c;\n    case 0x1c:\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = fcn.0042b601(puVar7, puVar8);\n        goto code_r0x0042ca36;\n    case 0x1d:\n    case 0x1e:\n        iVar4 = *(unaff_EBP + 0xc);\n        iVar6 = *(iVar6 + 0x10);\n        *(unaff_EBP + 8) = iVar4;\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 0xc) = puVar8;\n        if (iVar6 == 0x1d) {\n            uVar5 = fcn.0042b601(puVar7);\n            uVar9 = *(unaff_EBP + 0xc);\n            puVar8 = puVar7;\n            goto code_r0x0042ca4e;\n        }\ncode_r0x0042ca0c:\n        (*pcVar10)(iVar4, puVar8);\n        break;\n    case 0x1f:\n    case 0x24:\n        goto code_r0x0042ca29;\n    case 0x20:\n    case 0x2b:\n        (*pcVar10)(*(unaff_EBP + 0xc), puVar7);\n        goto code_r0x0042ca5c;\n    case 0x22:\n        uVar5 = iVar11;\n        puVar7 = iVar3;\n        goto code_r0x0042ca99;\n    case 0x23:\n        uVar12 = (*pcVar10)();\n        goto code_r0x0042ca9d;\n    case 0x2c:\ncode_r0x0042c990:\n        fcn.0042b601(puVar7);\ncode_r0x0042ca29:\n        (*pcVar10)(puVar7);\n        break;\n    case 0x2d:\n        uVar5 = fcn.0042b601(*(unaff_EBP + 0xc), puVar7);\ncode_r0x0042ca99:\n        uVar12 = (*pcVar10)(uVar5, puVar7);\n        goto code_r0x0042ca9d;\n    case 0x2e:\n        iVar4 = (*pcVar10)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, puVar7 & 0xffff, puVar7 >> 0x10);\n        *(unaff_EBP + -0x10) = iVar4;\n        goto code_r0x0042c65f;\n    case 0x30:\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        puVar8 = puVar7;\ncode_r0x0042ca36:\n        uVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x0042ca4e;\n    case 0x31:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x0042ca4a:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x0042ca4e:\n        (*pcVar10)(uVar9, uVar5, puVar8);\n    }\ncode_r0x0042caa0:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    uVar12 = 1;\ncode_r0x0042c791:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar12;\n}\n",
        "token_count": 4174
    },
    "0042ce41": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042ce41(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[7] != 0)) {\n        iVar2 = (**(*param_1 + 0xb0))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0042ccb1();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0042ccb1();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 186
    },
    "0042cf4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cf4b(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0042b628(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0042b440(iVar2, *(iVar2 + 0x1c), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0042cf4b(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "0042d118": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042d118(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*0x4592ac < 0x333) {\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = param_1[7];\n        if (param_2 != 2) {\n            iVar2 = (**(*param_1 + 0x68))(param_2);\n            if (iVar2 != 0) {\n                iVar3 = *(iVar2 + 0x1c);\n                param_2 = 2;\n            }\n        }\n        *param_3 = 0x1c;\n        param_3[1] = param_4;\n        uVar1 = (*_sym.imp.USER32.dll_GetScrollInfo)(iVar3, param_2, param_3);\n    }\n    return uVar1;\n}\n",
        "token_count": 224
    },
    "0042d1ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d1ac(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0x1c));\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (((iVar2 == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        uVar3 = 5;\n        iVar2 = *(in_ECX + 0x1c);\n        while( true ) {\n            iVar2 = (*pcVar1)(iVar2, uVar3);\n            if (iVar2 == 0) break;\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar2, &var_10h);\n            fcn.004322b7(&var_10h);\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar2, 0, var_10h + arg_8h, var_ch + arg_ch, 0, 0, 0x15);\n            uVar3 = 2;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_ScrollWindow)(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    if ((*(in_ECX + 0x34) != NULL) && (arg_10h == 0)) {\n        (**(**(in_ECX + 0x34) + 0x58))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "0042d252": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042d252(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x1c), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    if (arg_14h == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x1c)); iVar2 != 0;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        uVar3 = uVar3 & 0xffff;\n        iVar4 = fcn.0042b628(iVar2);\n        iVar1 = iVar2;\n        if ((((uVar3 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar3)) && (uVar3 <= arg_ch)) && (iVar4 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (arg_14h == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar5 = fcn.0042b601(var_4h);\n            if (arg_14h == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            (**(*piVar5 + 0x60))(&lprcSrc, 0);\n            fcn.0042d38c(&hWinPosInfo, var_4h, &lprcSrc);\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 907
    },
    "0042d38c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d38c(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar2 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar3, &lpRect);\n        (*pcVar2)(uVar3, &var_8h);\n        iVar4 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar4 == 0) {\n            iVar4 = lprc2[1];\n            iVar1 = *lprc2;\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, iVar1, iVar4, lprc2[2] - iVar1, lprc2[3] - iVar4, 0x14);\n            }\n            else {\n                iVar4 = (*_sym.imp.USER32.dll_DeferWindowPos)\n                                  (*arg_8h, hWnd, 0, iVar1, iVar4, lprc2[2] - iVar1, lprc2[3] - iVar4);\n                *arg_8h = iVar4;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0042d451": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d451(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    iVar4 = fcn.0042cd34();\n    uVar7 = arg_8h & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (arg_ch != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.0042ebab();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (arg_ch != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x1c);\n            uVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n            pcVar2 = _sym.imp.USER32.dll_SetActiveWindow;\n            uVar6 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar4 + 0x1c));\n            fcn.0042b601(uVar6);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x1c), 0x112, arg_8h, arg_ch);\n            pcVar3 = _sym.imp.USER32.dll_IsWindow;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar2)(uVar1);\n            }\n            iVar4 = (*pcVar3)(uVar5);\n            if (iVar4 != 0) {\n                (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 473
    },
    "0042db0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042db0c(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x0042db7b:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.00432e24(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x0042db7b;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 308
    },
    "0042de4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042de4a(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    if (arg_8h != NULL) {\n        do {\n            if (*arg_8h == 0) break;\n            iVar3 = arg_8h[1];\n            iVar1 = *(arg_8h + 2);\n            puVar5 = arg_8h + 4;\n            if (iVar3 == 0x1234) {\ncode_r0x0042deac:\n                var_24h = 0xffffffff;\n                var_28h = 1;\n                iVar3 = 0x401;\n                puVar6 = &var_28h;\n                var_20h = puVar5;\ncode_r0x0042deda:\n                iVar4 = (*pcVar2)(*(in_ECX + 0x1c), *arg_8h, iVar3, 0, puVar6);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                puVar6 = puVar5;\n                if (iVar3 == 0x401) {\n                    iVar3 = 0x180;\n                    goto code_r0x0042deda;\n                }\n                if (iVar3 == 0x403) {\n                    iVar3 = 0x143;\n                }\n                if (iVar3 == 0x401) goto code_r0x0042deac;\n                if ((iVar3 == 0x180) || (iVar3 == 0x143)) goto code_r0x0042deda;\n            }\n            arg_8h = puVar5 + iVar1;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0042cf4b(*(in_ECX + 0x1c), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 548
    },
    "0042e604": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042e604(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0042b646(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0x80))();\n        uVar3 = fcn.0042b6dd();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, uVar3);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 194
    },
    "0042ec8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ec8c(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x38) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n        iVar2 = fcn.00428ad4(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x34) != NULL)) {\n            (**(**(iVar2 + 0x34) + 0x8c))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0042ecc9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ecc9(int32_t param_1, int32_t param_2)\n\n{\n    if ((*(param_1 + 0x38) == 0) && (*(param_2 + 0x34) != NULL)) {\n        (**(**(param_2 + 0x34) + 0x8c))(param_1);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0042ed16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042ed16(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_104h;\n    uint var_4h;\n    \n    iVar1 = fcn.0042ed9a(arg_8h, &var_104h, 0x100);\n    if (0x100U - iVar1 < 3) {\n        iVar2 = 0x100;\n        do {\n            iVar3 = iVar2 + 0x100;\n            fcn.0042ae51(iVar2 + 0xff, iVar3);\n            iVar1 = fcn.0042ed9a();\n            iVar2 = iVar3;\n        } while (iVar3 - iVar1 < 3);\n        fcn.0042aea0(0xffffffff);\n    }\n    else {\n        fcn.0042abaa(&var_104h);\n    }\n    return 0 < iVar1;\n}\n",
        "token_count": 215
    },
    "0042ee39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042ee39(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar1 = fcn.00439e57();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00429cf9(0x43302c);\n        iVar3 = fcn.00429d0b(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0042fa52(0x445a58, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.00429cf9(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x18);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 352
    },
    "0042ef35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042ef35(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0042ef0b();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "0042ef51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ef51(char *lpString, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar3 = fcn.0043b2dd(lpString, 0, 0);\n    iVar3 = iVar3 + -1;\n    pcVar5 = lpString + (iVar2 - iVar3);\n    if (arg_ch < iVar2) {\n        if (arg_ch < iVar3) {\n            if (arg_10h == 0) {\n                pcVar5 = 0x4573b8;\n            }\n        }\n        else {\n            pcVar4 = lpString + 2;\n            if ((*lpString == '\\\\') && (lpString[1] == '\\\\')) {\n                for (; *pcVar4 != '\\\\'; pcVar4 = fcn.00410dde(pcVar4)) {\n                }\n            }\n            if (3 < iVar2 - iVar3) {\n                do {\n                    pcVar4 = fcn.00410dde(pcVar4);\n                } while (*pcVar4 != '\\\\');\n            }\n            iVar2 = pcVar4 - lpString;\n            if (iVar2 + 5 + iVar3 <= arg_ch) {\n                while (iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar4),  arg_ch < iVar3 + 4 + iVar2) {\n                    do {\n                        pcVar4 = fcn.00410dde(pcVar4);\n                    } while (*pcVar4 != '\\\\');\n                }\n                lpString[iVar2] = '\\0';\n                pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(lpString, \"\\\\...\");\n                (*pcVar1)(lpString, pcVar4);\n                return;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString, pcVar5);\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "0042f24a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f24a(uint arg_8h, int32_t arg_ch, uint lpString1, int32_t arg_14h, uint arg_18h)\n\n{\n    uchar uVar1;\n    int32_t lpString;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lpString2;\n    int32_t var_4h;\n    \n    if (*(*(*(in_ECX + 8) + arg_ch * 4) + -8) == 0) {\n        return 0;\n    }\n    var_4h = in_ECX;\n    lpString = fcn.0042ae51(0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString, *(*(var_4h + 8) + arg_ch * 4));\n    iVar2 = fcn.0043b2dd(lpString, 0, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar3 = (1 - iVar2) + iVar3;\n    if (iVar3 == arg_14h) {\n        uVar1 = *(iVar3 + lpString);\n        *(arg_14h + lpString) = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString);\n        *(iVar3 + lpString) = uVar1;\n        if (iVar2 == 0) {\n            fcn.00430d97(arg_14h + lpString, &lpString2, 0x104);\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)(lpString, &lpString2, 0x104);\n            goto code_r0x0042f33c;\n        }\n    }\n    if (*(var_4h + 0x18) != -1) {\n        fcn.00430d97(iVar3 + lpString, &lpString2, 0x104);\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(iVar3 + lpString, &lpString2, 0x104 - iVar3);\n        fcn.0042ef51(lpString, *(var_4h + 0x18), arg_18h);\n    }\ncode_r0x0042f33c:\n    fcn.0042aea0(0xffffffff);\n    return 1;\n}\n",
        "token_count": 532
    },
    "0042f6c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042f6c5(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.0042f6b3(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 86
    },
    "0042f8f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f8f7(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n    *(param_1 + 8) = uVar2;\n    uVar2 = (*pcVar1)(0xc);\n    *(param_1 + 0xc) = uVar2;\n    if (*(param_1 + 0x68) == 0) {\n        fcn.0043ae29();\n    }\n    else {\n        fcn.0043adf9();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x58);\n    *(param_1 + 0x18) = uVar3;\n    uVar3 = (*pcVar1)(uVar2, 0x5a);\n    *(param_1 + 0x1c) = uVar3;\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return;\n}\n",
        "token_count": 292
    },
    "0042f958": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042f958(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.00439e57();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (arg_8h != -1) {\n                iVar2 = fcn.00428f48();\n                if ((iVar2 != 0) && (*(iVar2 + 0x54) != NULL)) {\n                    (**(iVar2 + 0x54))(0, 0);\n                }\n            }\n            fcn.0042fb76();\n            fcn.0042fb76();\n            fcn.0042fb76();\n            fcn.0042fb76();\n            fcn.0042fb76();\n        }\n        iVar2 = fcn.00439e31();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.0043a6ad(0x4397b6);\n        if (iVar2 != 0) {\n            if (*(iVar3 + 0xc) != 0) {\n                uVar4 = fcn.0041139a(*(iVar3 + 0xc));\n                if (*(iVar2 + 0xb8) <= uVar4) goto code_r0x0042fa43;\n            }\n            if (*(iVar2 + 0xb8) != 0) {\n                arg_8h = 0;\n                if (*(iVar3 + 0xc) != 0) {\n                    arg_8h = fcn.0041139a(*(iVar3 + 0xc));\n                    fcn.0040ed16(*(iVar3 + 0xc));\n                }\n                iVar2 = fcn.0040f5cc(*(iVar2 + 0xb8));\n                *(iVar3 + 0xc) = iVar2;\n                if ((iVar2 == 0) && (arg_8h != 0)) {\n                    uVar5 = fcn.0040f5cc(arg_8h);\n                    *(iVar3 + 0xc) = uVar5;\n                }\n            }\n        }\n    }\ncode_r0x0042fa43:\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 564
    },
    "0042fab7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0042fab7(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if (arg_8h_00 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00428ad4(arg_8h_00);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00428ad4(arg_8h_00);\n            if (iVar2 == 0) {\n                uVar3 = fcn.00429cf9(0x43302c);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + 8) = uVar3;\n                iVar2 = fcn.0042f6e5();\n                if (iVar2 == 0) {\n                    fcn.00426584();\n                }\n                piVar4 = fcn.00428b29(arg_8h_00);\n                uVar3 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xffffffff;\n                *piVar4 = iVar2;\n                fcn.00429cf9(uVar3);\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n            else {\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 609
    },
    "0042fb76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fb76(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x2c) != 0);\n        while (var_8h != 0) {\n            fcn.00428bbb(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x40) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x44) == 2) {\n                puVar1[1] = 0;\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 4))(1);\n            }\n        }\n        fcn.004289e8();\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00430064": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430064(uint lpMultiByteStr, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint *in_ECX;\n    int32_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t arg_8h;\n    uint lpWideCharStr;\n    ushort *var_10h;\n    uint32_t var_ch;\n    uint *hMem;\n    uint32_t var_4h;\n    \n    if (in_ECX[1] == 0) {\n        uVar1 = 0;\n    }\n    else {\n        hMem = in_ECX;\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        var_4h = *(puVar2 + 2) == -1;\n        if (*(puVar2 + 2) == -1) {\n            var_ch = puVar2[3];\n        }\n        else {\n            var_ch = *puVar2;\n        }\n        var_ch = var_ch & 0x40;\n        iVar7 = (-(var_4h != 0) & 2) + 1;\n        if (var_4h == 0) {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        else {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &lpWideCharStr, 0x20);\n        iVar3 = iVar7 * 2 + iVar3 * 2;\n        puVar4 = fcn.0042feb9(puVar2);\n        iVar5 = 0;\n        var_10h = puVar4;\n        if (var_ch != 0) {\n            iVar5 = fcn.0040f995(puVar4 + iVar7);\n            iVar5 = iVar7 * 2 + 2 + iVar5 * 2;\n        }\n        var_ch = iVar5 + 3 + puVar4 & 0xfffffffc;\n        arg_8h = puVar4 + iVar3 + 3 & 0xfffffffc;\n        if (var_4h == 0) {\n            iVar6 = *(puVar2 + 2);\n        }\n        else {\n            iVar6 = *(puVar2 + 4);\n        }\n        if ((iVar3 != iVar5) && (iVar6 != 0)) {\n            fcn.00411960(arg_8h, var_ch, puVar2 + (hMem[1] - var_ch));\n        }\n        *var_10h = arg_ch;\n        fcn.00411960(var_10h + iVar7, &lpWideCharStr, iVar3 + iVar7 * -2);\n        hMem[1] = hMem[1] + (arg_8h - var_ch);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*hMem);\n        hMem[2] = 0;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 708
    },
    "0043017e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043017e(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *lpMultiByteStr;\n    int32_t lpvObject;\n    uint var_24h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    uVar4 = 10;\n    lpMultiByteStr = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x004301f2;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        lpMultiByteStr = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x004301f2:\n    if (arg_8h == 0) {\n        arg_8h = uVar4;\n    }\n    fcn.00430064(lpMultiByteStr, arg_8h);\n    return;\n}\n",
        "token_count": 393
    },
    "004303f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004303f9(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    pcVar1 = extraout_ECX[1];\n    *(unaff_EBP + -4) = 1;\n    if ((pcVar1 != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.004306d1();\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 226
    },
    "00430cd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430cd4(char *lpString1, uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_618h;\n    uint var_410h;\n    uint var_208h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString2);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString1);\n            iVar3 = (*pcVar1)(lpString2);\n            if (iVar2 != iVar3) goto code_r0x00430d93;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n            pcVar1 = _sym.imp.KERNEL32.dll_GetStringTypeExA;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(uVar4, 1, lpString1, 0xffffffff, &var_208h);\n            (*pcVar1)(uVar4, 4, lpString1, 0xffffffff, &var_410h);\n            (*pcVar1)(uVar4, 1, lpString2, 0xffffffff, &var_618h);\n            if (*lpString1 != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_410h + iVar2) & 0x80) != 0) && (*(&var_208h + iVar2) != *(&var_618h + iVar2)))\n                    goto code_r0x00430d93;\n                    iVar2 = iVar2 + 2;\n                    lpString1 = fcn.00410dde(lpString1);\n                } while (*lpString1 != '\\0');\n            }\n        }\n        uVar4 = 1;\n    }\n    else {\ncode_r0x00430d93:\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 486
    },
    "00430f7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430f7a(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.0040f4c0(arg_8h, 0, 0x118);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_8h + 0x12, *(in_ECX + 0xc), 0x104);\n    if (*(in_ECX + 4) == -1) {\ncode_r0x0043104a:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[3] = iVar1;\n            if (iVar1 != -1) {\n                if (*(*(in_ECX + 0xc) + -8) == 0) {\ncode_r0x00430fee:\n                    *(arg_8h + 4) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    if (iVar1 == -1) goto code_r0x00430fee;\n                    *(arg_8h + 4) = iVar1;\n                }\n                piVar3 = fcn.004274e5(&lpCreationTime, 0xffffffff);\n                *arg_8h = *piVar3;\n                piVar3 = fcn.004274e5(&lpLastAccessTime, 0xffffffff);\n                arg_8h[2] = *piVar3;\n                piVar3 = fcn.004274e5(&lpLastWriteTime, 0xffffffff);\n                iVar1 = *piVar3;\n                arg_8h[1] = iVar1;\n                if (*arg_8h == 0) {\n                    *arg_8h = iVar1;\n                }\n                if (arg_8h[2] == 0) {\n                    arg_8h[2] = arg_8h[1];\n                }\n                goto code_r0x0043104a;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 581
    },
    "00431054": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00431054(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_140h;\n    uint var_13ch;\n    uint var_134h;\n    uint var_12ch;\n    int32_t var_120h;\n    \n    iVar1 = fcn.00430b3e(arg_ch + 0x12, arg_8h);\n    if (iVar1 == 0) {\n        *(arg_ch + 0x12) = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(arg_8h, &var_140h);\n        if (iVar1 != -1) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n            *(arg_ch + 4) = var_140h & 0x7f;\n            arg_ch[3] = var_120h;\n            piVar2 = fcn.004274e5(&var_13ch, 0xffffffff);\n            *arg_ch = *piVar2;\n            piVar2 = fcn.004274e5(&var_134h, 0xffffffff);\n            arg_ch[2] = *piVar2;\n            piVar2 = fcn.004274e5(&var_12ch, 0xffffffff);\n            iVar1 = *piVar2;\n            arg_ch[1] = iVar1;\n            if (*arg_ch == 0) {\n                *arg_ch = iVar1;\n            }\n            if (arg_ch[2] == 0) {\n                arg_ch[2] = arg_ch[1];\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 396
    },
    "00431306": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00431306(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.004314ac(param_1, param_1, param_2);\n        fcn.004313eb(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004317e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004317e3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar1 = fcn.00439e57();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00429cf9(0x43302c);\n        iVar3 = fcn.00429d0b(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0042fa52(0x445af8, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.00429cf9(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 355
    },
    "004318e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004318e8(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDC.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != NULL) {\n        uVar1 = fcn.004318a1(extraout_ECX);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 204
    },
    "00432aca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00432aca(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar1 = fcn.00439e57();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00429cf9(0x43302c);\n        iVar3 = fcn.00429d0b(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0042fa52(0x445ad0, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.00429cf9(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x20);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 351
    },
    "00432ba8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00432ba8(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00432b7e();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "00432e24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00432e24(int32_t hWnd, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpClassName;\n    \n    if ((hWnd != 0) && (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar1 & 0xf) == arg_ch)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 10);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"combobox\");\n        return iVar2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 157
    },
    "0043314e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043314e(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t var_4h;\n    \n    var_4h = fcn.004330f7(arg_8h);\n    bVar4 = var_4h == -1;\n    if (bVar4) {\n        var_4h = fcn.004330f7(arg_8h);\n    }\n    uVar2 = bVar4;\n    iVar3 = (uVar2 + 1) * var_4h;\n    if (var_4h == 0) {\n        fcn.0042aec8(0);\n    }\n    else {\n        fcn.0042aec8(iVar3 + uVar2);\n        iVar1 = fcn.00433469(*arg_ch, iVar3);\n        if (iVar1 != iVar3) {\n            fcn.004339ae(3, 0);\n        }\n        if (uVar2 != 0) {\n            iVar3 = *arg_ch;\n            *(iVar3 + var_4h * 2) = 0;\n            *arg_ch = *0x454618;\n            fcn.0042abd1(iVar3);\n            fcn.00429d34(iVar3 + -0xc);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 322
    },
    "004333d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004333d3(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x20) != 0) && ((*(extraout_ECX + 0x14) & 2) == 0)) {\n        fcn.0043345b();\n    }\n    fcn.00433419();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042aa21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 219
    },
    "00433469": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433469(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0;\n    }\n    else {\n        uVar3 = *(in_ECX + 0x28) - *(in_ECX + 0x24);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.0040f660(arg_8h, *(in_ECX + 0x24), uVar3);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x1c);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x20) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if (var_8h == iVar1) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    var_4h = uVar3;\n                    if (uVar3 <= *(in_ECX + 0x1c)) {\n                        var_4h = *(in_ECX + 0x1c);\n                    }\n                    var_8h = *(in_ECX + 0x2c);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x20) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x2c);\n                    *(in_ECX + 0x24) = iVar1;\n                    *(in_ECX + 0x28) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x20) + 0x50))(0, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n                    iVar1 = *(in_ECX + 0x2c);\n                    *(in_ECX + 0x24) = iVar1;\n                }\n                uVar4 = *(in_ECX + 0x28) - iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.0040f660(arg_8h, iVar1, uVar4);\n                *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 870
    },
    "00433578": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433578(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    if (arg_ch != 0) {\n        arg_10h = *(in_ECX + 0x28) - *(in_ECX + 0x24);\n        if (arg_ch < arg_10h) {\n            arg_10h = arg_ch;\n        }\n        fcn.0040f660(*(in_ECX + 0x24), arg_8h, arg_10h);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + arg_10h;\n        arg_ch = arg_ch - arg_10h;\n        if (arg_ch != 0) {\n            fcn.00433608();\n            iVar1 = arg_ch - arg_ch % *(in_ECX + 0x1c);\n            (**(**(in_ECX + 0x20) + 0x38))(arg_8h + arg_10h, iVar1);\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x20) + 0x50))(1, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n                *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n            }\n            fcn.0040f660(*(in_ECX + 0x24), arg_8h + arg_10h + iVar1, arg_ch - iVar1);\n            *(in_ECX + 0x24) = *(in_ECX + 0x24) + (arg_ch - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 415
    },
    "00433684": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433684(uint32_t arg_8h)\n\n{\n    uint32_t arg_ch;\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_ch = *(in_ECX + 0x24);\n    var_4h = *(in_ECX + 0x28) - arg_ch;\n    uVar1 = arg_8h + var_4h;\n    if (*(in_ECX + 8) == 0) {\n        arg_8h_00 = *(in_ECX + 0x2c);\n        if (arg_8h_00 < arg_ch) {\n            if (0 < var_4h) {\n                fcn.00411960(arg_8h_00, arg_ch, var_4h);\n                arg_8h_00 = *(in_ECX + 0x2c);\n                *(in_ECX + 0x24) = arg_8h_00;\n                *(in_ECX + 0x28) = arg_8h_00 + var_4h;\n            }\n            iVar3 = *(in_ECX + 0x1c) - var_4h;\n            iVar4 = var_4h + arg_8h_00;\n            do {\n                iVar2 = (**(**(in_ECX + 0x20) + 0x34))(iVar4, iVar3);\n                var_4h = var_4h + iVar2;\n                iVar4 = iVar4 + iVar2;\n                iVar3 = iVar3 - iVar2;\n                if ((iVar2 == 0) || (iVar3 == 0)) break;\n            } while (var_4h < arg_8h);\n            *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n            *(in_ECX + 0x28) = *(in_ECX + 0x2c) + var_4h;\n        }\n    }\n    else {\n        if (var_4h != 0) {\n            (**(**(in_ECX + 0x20) + 0x28))(-var_4h, 1);\n        }\n        (**(**(in_ECX + 0x20) + 0x50))(0, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n        *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n    }\n    if (*(in_ECX + 0x28) - *(in_ECX + 0x24) < uVar1) {\n        fcn.004339ae(3, 0);\n    }\n    return;\n}\n",
        "token_count": 645
    },
    "00433dba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433dba(uint lpText, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint *puVar4;\n    uint var_114h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    fcn.00433d8c(0);\n    var_ch = fcn.00433f32(0, &hWnd);\n    if (((var_ch == 0) || (piVar1 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar1 == NULL)) &&\n       (piVar1 = NULL,  in_ECX != 0)) {\n        piVar1 = in_ECX + 0x9c;\n    }\n    var_8h = 0;\n    if ((piVar1 != NULL) && (var_8h = *piVar1,  arg_10h != 0)) {\n        *piVar1 = arg_10h + 0x30000;\n    }\n    if (((arg_ch & 0xf0) == 0) && ((uVar2 = arg_ch & 0xf,  uVar2 < 2 || ((2 < uVar2 && (uVar2 < 5)))))) {\n        arg_ch = arg_ch | 0x30;\n    }\n    if (in_ECX == 0) {\n        puVar4 = &var_114h;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &var_114h, 0x104);\n    }\n    else {\n        puVar4 = *(in_ECX + 0x78);\n    }\n    uVar3 = (*_sym.imp.USER32.dll_MessageBoxA)(var_ch, lpText, puVar4, arg_ch);\n    if (piVar1 != NULL) {\n        *piVar1 = var_8h;\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    fcn.00433d8c(1);\n    return uVar3;\n}\n",
        "token_count": 513
    },
    "00433ffd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433ffd(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0042e790(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        fcn.0042659d();\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = arg_8h;\n    return;\n}\n",
        "token_count": 103
    },
    "0043402c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043402c(int32_t *param_1)\n\n{\n    if ((*param_1 != 0) && (param_1[2] != 0)) {\n        (*_sym.imp.USER32.dll_SetFocus)(param_1[2]);\n        if (param_1[3] != 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(param_1[2], 0xb1, 0, 0xffffffff);\n        }\n    }\n    fcn.00432d93();\n    return;\n}\n",
        "token_count": 121
    },
    "00434061": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434061(char *arg_8h, int32_t arg_ch, int32_t **arg_10h)\n\n{\n    char cVar1;\n    bool bVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    pcVar3 = arg_ch + 1;\n    bVar2 = false;\n    if (*pcVar3 != 'l') {\n        if (*pcVar3 != 's') goto code_r0x0043407f;\n        bVar2 = true;\n    }\n    pcVar3 = arg_ch + 2;\ncode_r0x0043407f:\n    for (; (*arg_8h == ' ' || (*arg_8h == '\\t')); arg_8h = arg_8h + 1) {\n    }\n    cVar1 = *arg_8h;\n    if (*pcVar3 == 'd') {\n        iVar4 = fcn.00410f95(arg_8h, &arg_8h, 10);\n    }\n    else {\n        if (cVar1 == '-') {\n            return 0;\n        }\n        iVar4 = fcn.004111b1(arg_8h, &arg_8h, 10);\n    }\n    if ((iVar4 != 0) || (cVar1 == '0')) {\n        for (; (*arg_8h == ' ' || (*arg_8h == '\\t')); arg_8h = arg_8h + 1) {\n        }\n        if (*arg_8h == '\\0') {\n            if (bVar2) {\n                if (iVar4 != iVar4) {\n                    return 0;\n                }\n                **arg_10h = iVar4;\n            }\n            else {\n                **arg_10h = iVar4;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 405
    },
    "00434106": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434106(int32_t *arg_8h, uint arg_ch, uint ARG_1, uint arg_14h, uint arglist)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint lpString;\n    \n    hWnd = fcn.00433fe6(arg_ch);\n    if (*arg_8h == 0) {\n        (*_sym.imp.USER32.dll_wvsprintfA)(&lpString, ARG_1, &arglist);\n        fcn.00432f0e(hWnd, &lpString);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString, 0x20);\n        iVar1 = fcn.00434061(&lpString, ARG_1, &arglist);\n        if (iVar1 == 0) {\n            fcn.00433ed9(arg_14h, 0, 0xffffffff);\n            fcn.0043402c();\n        }\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00434176": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434176(int32_t *arg_8h, uint arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = arg_10h;\n    arg_10h = *arg_10h;\n    if (*arg_8h == 0) {\n        fcn.00434106(arg_8h, arg_ch, 0x445a3c, 0xf116, arg_10h);\n    }\n    else {\n        fcn.00434106(arg_8h, arg_ch, 0x445a3c, 0xf116, &arg_10h);\n        if (0xff < arg_10h) {\n            fcn.00433ed9(0xf116, 0, 0xffffffff);\n            fcn.0043402c();\n        }\n        *puVar1 = arg_10h;\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "004341e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004341e7(int32_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    uint ARG_1;\n    \n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n        ARG_1 = 0x445a40;\n    }\n    else {\n        ARG_1 = 0x445a44;\n    }\n    fcn.00434106(arg_8h, arg_ch, ARG_1, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 129
    },
    "00434222": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434222(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00434106(arg_8h, arg_ch, 0x445a48, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 93
    },
    "00434251": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434251(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00434106(arg_8h, arg_ch, 0x445a3c, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 94
    },
    "00434280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434280(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00434106(arg_8h, arg_ch, 0x445a4c, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 94
    },
    "004342af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004342af(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00434106(arg_8h, arg_ch, 0x445a50, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 93
    },
    "004342de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004342de(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint uVar2;\n    \n    hWnd = fcn.00433fe6(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00432f0e(hWnd, *arg_10h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        uVar2 = fcn.0042aec8(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar2);\n        fcn.0042aea0(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00434330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434330(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint hWnd;\n    \n    hWnd = fcn.00433fe6(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00432f0e(hWnd, arg_10h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "004344d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004344d1(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.00433ffd(arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*arg_8h == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0x1a2, 0xffffffff, *arg_10h);\n        if (-1 < iVar3) {\n            (*pcVar1)(uVar2, 0x186, iVar3, 0);\n        }\n    }\n    else {\n        fcn.00434451(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00434522": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434522(int32_t *arg_8h, uint arg_ch, uint *lParam)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint uVar2;\n    \n    hWnd = fcn.00433ffd(arg_ch);\n    if (*arg_8h == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x14d, 0xffffffff, *lParam);\n        if (iVar1 == -1) {\n            fcn.00432f0e(hWnd, *lParam);\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        if (iVar1 < 1) {\n            uVar2 = fcn.0042ae51(0xff, 0x100);\n        }\n        else {\n            uVar2 = fcn.0042aec8(iVar1, iVar1 + 1);\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar2);\n        fcn.0042aea0(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "004345a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004345a1(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    uint hWnd;\n    int32_t iVar2;\n    \n    hWnd = fcn.00433ffd(arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*arg_8h == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x158, 0xffffffff, *arg_10h);\n        if (iVar2 < 0) {\n            fcn.00432f0e(hWnd, *arg_10h);\n        }\n        else {\n            (*pcVar1)(hWnd, 0x14e, iVar2, 0);\n        }\n    }\n    else {\n        fcn.00434522(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00434701": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.00434701(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_2ch;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    pcVar1 = _sym.imp.USER32.dll_wsprintfA;\n    if (**(unaff_EBP + 8) != 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0x4c, *(unaff_EBP + 0x14), *(unaff_EBP + 0xc));\n        (*pcVar1)(unaff_EBP + -0x2c, *(unaff_EBP + 0x14), *(unaff_EBP + 0x10));\n        *(unaff_EBP + 8) = *0x454618;\n        *(unaff_EBP + -4) = 0;\n        fcn.00435851(unaff_EBP + 8, *(unaff_EBP + 0x18), unaff_EBP + -0x4c, unaff_EBP + -0x2c);\n        fcn.00433ea1(*(unaff_EBP + 8), 0x30, *(unaff_EBP + 0x18));\n        fcn.0042a9ac();\n        fcn.0043402c();\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0042aa21();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 408
    },
    "004348a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004348a4(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if ((*arg_8h != 0) || ((arg_10h <= arg_ch && (arg_ch <= arg_14h)))) {\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h[2], 0x407, 0, arg_10h);\n        (*pcVar1)(arg_8h[2], 0x407, 1, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00434bd1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434bd1(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n    piStack8 = param_1;\n    piStack4 = param_1;\n    if ((*0x45929c == 0) && (*0x45929c = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f8b),  *0x45929c == 0)) {\n        iVar2 = fcn.00439e31();\n        *0x45929c = (*pcVar1)(*(iVar2 + 0xc), 0x7901);\n        if (*0x45929c == 0) {\n            return;\n        }\n    }\n    (**(*param_1 + 0xc))(0xe145, 0, 0, &piStack8);\n    return;\n}\n",
        "token_count": 228
    },
    "00434c2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434c2b(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpMsg;\n    uint lpPoint;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((*(param_1 + 0x50) != 1) && (iVar3 = fcn.00434bd1(),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, *(param_1 + 0x1c), 0x367, 0x367, 3),  iVar3 == 0)) {\n        iVar3 = *(param_1 + 0x50);\n        *(param_1 + 0x50) = 1;\n        if (((iVar3 == 2) || (*(param_1 + 0x68) == NULL)) || (iVar4 = (**(**(param_1 + 0x68) + 0x60))(1),  iVar4 != 0))\n        {\n            if (iVar3 == 0) {\n                (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x1c), 0x111, 0xe145);\n                *(param_1 + 0x50) = 2;\n            }\n            else {\n                var_ch = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x362, 0xe002, 0);\n                if (var_ch == 0) {\n                    var_ch = 0xe001;\n                }\n                var_8h = 0;\n                (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n                fcn.00434dd3(lpPoint, var_14h, 0);\n                var_4h = 0;\n                iVar3 = fcn.00439e31();\n                piVar1 = *(iVar3 + 4);\n                var_10h = piVar1;\n                do {\n                    while( true ) {\n                        if (*(param_1 + 0x50) == 0) goto code_r0x00434d54;\n                        iVar4 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, 0, 0, 0, 0);\n                        iVar3 = var_4h;\n                        if (iVar4 != 0) break;\n                        var_4h = var_4h + 1;\n                        iVar3 = (**(*piVar1 + 0x60))(iVar3);\n                        if (iVar3 == 0) {\n                            var_4h = 0;\n                            (*_sym.imp.USER32.dll_WaitMessage)();\n                        }\n                    }\n                    iVar3 = fcn.00434f9c(&lpMsg, &var_8h);\n                } while (iVar3 != 0);\ncode_r0x00434d54:\n                pcVar2 = _sym.imp.USER32.dll_ReleaseCapture;\n                *(param_1 + 0x50) = 0;\n                (*pcVar2)();\n                uVar5 = (*_sym.imp.USER32.dll_SetCapture)(*(param_1 + 0x1c));\n                fcn.0042b601(uVar5);\n                (*pcVar2)();\n                pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x362, var_ch, 0);\n                if (*(param_1 + 0x68) != NULL) {\n                    (**(**(param_1 + 0x68) + 0x60))(0);\n                }\n                if (var_8h != 0) {\n                    if (var_8h == -1) {\n                        (*pcVar2)(*(param_1 + 0x1c), 0x111, 0xe147, 0);\n                    }\n                    else {\n                        (**(*var_10h + 0x98))(var_8h, 1);\n                    }\n                }\n                (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x1c), 0x36a, 0, 0);\n            }\n        }\n        else {\n            (**(**(param_1 + 0x68) + 0x60))(0);\n            *(param_1 + 0x50) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 1030
    },
    "00434ee9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00434ee9(int32_t arg_8h, uint32_t lpPoint, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n    (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    uVar3 = lpPoint & 0xffff | arg_10h << 0x10;\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h, 0x366, 0, uVar3);\n        (*_sym.imp.USER32.dll_ClientToScreen)(arg_8h, &lpPoint);\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if (((uVar3 & 0x40000000) == 0) || (arg_8h = (*_sym.imp.USER32.dll_GetParent)(arg_8h),  arg_8h == 0)) break;\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        (*pcVar1)(arg_8h, &lpPoint);\n        uVar3 = lpPoint & 0xffff | arg_10h << 0x10;\n    }\n    if (iVar4 == 0) {\n        iVar4 = -1;\n    }\n    return iVar4;\n}\n",
        "token_count": 354
    },
    "00434f9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434f9c(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint var_28h;\n    uint lpPoint;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = arg_8h;\n    uVar7 = *(arg_8h + 4);\n    if ((uVar7 == 0x367) || ((uVar7 == 0x100 && (*(arg_8h + 8) == 0x1b)))) {\ncode_r0x004351a1:\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, uVar7, uVar7, 1);\n        return 0;\n    }\n    if (((uVar7 < 0x200) || (0x209 < uVar7)) && ((uVar7 < 0xa0 || (0xa9 < uVar7)))) {\n        if ((uVar7 == 0x112) || ((0xff < uVar7 && (uVar7 < 0x109)))) {\n            iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n            pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_ReleaseCapture)();\n                do {\n                    iVar3 = (*pcVar1)(&var_28h, 0, 0x200, 0x209, 3);\n                } while (iVar3 != 0);\n            }\n            iVar3 = (*pcVar1)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 0);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4));\n                iVar3 = (**(*var_4h + 0x90))(iVar2);\n                if (iVar3 == 0) {\n                    (*_sym.imp.USER32.dll_TranslateMessage)(iVar2);\n                    uVar7 = *(iVar2 + 4);\n                    if ((uVar7 == 0x112) || ((0x103 < uVar7 && (uVar7 < 0x108)))) {\n                        (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n                    }\n                }\n            }\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\ncode_r0x00435188:\n            fcn.00434dd3(lpPoint, var_8h, 0);\n            return 1;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h, 0, uVar7, uVar7, 1);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    else {\n        iVar3 = fcn.00434dd3(*(arg_8h + 0x14), *(arg_8h + 0x18), &arg_8h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n        iVar4 = *(iVar2 + 4);\n        if (arg_8h != 0) {\n            if (iVar4 == 0x201) {\n                iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x84, 0, CONCAT22(*(iVar2 + 0x18), *(iVar2 + 0x14)));\n                if ((iVar4 == 5) || (iVar4 == 3)) {\n                    (*_sym.imp.USER32.dll_ReleaseCapture)();\n                    (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, 0xa1, 0xa1);\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n                    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n                    goto code_r0x00435188;\n                }\n                if (iVar4 != 1) {\n                    uVar6 = fcn.00434f82(iVar4);\n                    *arg_ch = uVar6;\n                    uVar7 = *(iVar2 + 4);\n                    goto code_r0x004351a1;\n                }\n                uVar5 = fcn.00434ee9(iVar3, *(iVar2 + 0x14), *(iVar2 + 0x18));\n                uVar6 = 0;\n                *arg_ch = uVar5;\n                iVar4 = *(iVar2 + 4);\n            }\n            else {\n                uVar6 = 1;\n            }\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, iVar4, iVar4, 1);\n            return uVar6;\n        }\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, iVar4, iVar4, 1);\n    }\n    (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n    return 1;\n}\n",
        "token_count": 1145
    },
    "004351b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004351b1(uint lpAppName, uint lpValueName, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint lpString;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(&lpString, 0x445a48, arg_10h);\n        uVar1 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, &lpString, *(in_ECX + 0x90))\n        ;\n    }\n    else {\n        uVar1 = fcn.0043a950(lpAppName);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, lpValueName, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "00435226": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00435226(uint lpAppName, int32_t lpValueName, int32_t lpString)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, lpString, *(in_ECX + 0x90));\n        return uVar3;\n    }\n    if (lpValueName == 0) {\n        iVar1 = fcn.0043a8bc();\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(iVar1, lpAppName);\n            goto code_r0x00435299;\n        }\n    }\n    else if (lpString == 0) {\n        iVar1 = fcn.0043a950(lpAppName);\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar1, lpValueName);\ncode_r0x00435299:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            return iVar2 == 0;\n        }\n    }\n    else {\n        iVar1 = fcn.0043a950(lpAppName);\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 1, lpString, iVar2 + 1);\n            goto code_r0x00435299;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "004352c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004352c6(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *lpString;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        lpString = fcn.00429d0b(arg_14h * 2 + 1);\n        uVar1 = 0;\n        pcVar4 = lpString;\n        if (arg_14h != 0) {\n            do {\n                puVar3 = arg_10h + uVar1;\n                *pcVar4 = (*puVar3 & 0xf) + 0x41;\n                uVar1 = uVar1 + 1;\n                pcVar4[1] = (*puVar3 >> 4) + 0x41;\n                pcVar4 = pcVar4 + 2;\n            } while (uVar1 < arg_14h);\n        }\n        lpString[uVar1 * 2] = '\\0';\n        uVar1 = fcn.00435226(arg_8h, arg_ch, lpString);\n        fcn.00429d34(lpString);\n    }\n    else {\n        uVar1 = fcn.0043a950(arg_8h);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, arg_ch, 0, 3, arg_10h, arg_14h);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 422
    },
    "0043573b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043573b(int32_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar4 = 0;\n    uVar1 = *arg_ch;\n    puVar5 = arg_ch;\n    while (uVar1 != 0) {\n        if (*puVar5 == 0x25) {\n            uVar1 = puVar5[1];\n            if ((uVar1 < '0') || ('9' < uVar1)) {\n                if ((uVar1 < 'A') || ('Z' < uVar1)) goto code_r0x00435794;\n                if (uVar1 < ':') goto code_r0x00435772;\n                iVar3 = uVar1 + -0x38;\n            }\n            else {\ncode_r0x00435772:\n                iVar3 = uVar1 + -0x31;\n            }\n            puVar5 = puVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x004357a3;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                iVar4 = iVar4 + iVar3;\n            }\n        }\n        else {\ncode_r0x00435794:\n            if ((*(*puVar5 + 0x45ae01) & 4) != 0) {\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            puVar5 = puVar5 + 1;\ncode_r0x004357a3:\n            iVar4 = iVar4 + 1;\n        }\n        uVar1 = *puVar5;\n    }\n    puVar5 = fcn.0042ae51(iVar4);\n    do {\n        while( true ) {\n            if (*arg_ch == 0) {\n                fcn.0042aea0(puVar5 - *arg_8h);\n                return;\n            }\n            uVar1 = *arg_ch;\n            if (uVar1 == 0x25) break;\ncode_r0x00435811:\n            if ((*(uVar1 + 0x45ae01) & 4) != 0) {\n                *puVar5 = uVar1;\n                puVar5 = puVar5 + 1;\n                arg_ch = arg_ch + 1;\n            }\n            *puVar5 = *arg_ch;\n            puVar5 = puVar5 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        uVar2 = arg_ch[1];\n        if ((uVar2 < '0') || ('9' < uVar2)) {\n            if ((uVar2 < 'A') || ('Z' < uVar2)) goto code_r0x00435811;\n            if (uVar2 < ':') goto code_r0x004357e1;\n            iVar4 = uVar2 + -0x38;\n        }\n        else {\ncode_r0x004357e1:\n            iVar4 = uVar2 + -0x31;\n        }\n        arg_ch = arg_ch + 2;\n        if (iVar4 < arg_14h) {\n            iVar4 = *(arg_10h + iVar4 * 4);\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar5, iVar4);\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar5);\n                puVar5 = puVar5 + iVar4;\n            }\n        }\n        else {\n            *puVar5 = 0x3f;\n            puVar5 = puVar5 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 887
    },
    "00435d3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00435d3a(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    puVar3 = *(param_1 + 8);\n    var_4h = param_1;\n    while (puVar3 != NULL) {\n        puVar1 = *puVar3;\n        piVar2 = puVar3[2];\n        var_4h = (**(*piVar2 + 0x54))();\n        while (puVar3 = puVar1,  var_4h != 0) {\n            (**(*piVar2 + 0x58))(&var_4h);\n            iVar4 = iVar4 + 1;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 200
    },
    "00436b53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436bab)\n// WARNING: Removing unreachable block (ram,0x00436bb7)\n\nvoid fcn.00436b53(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar1)(iVar4, 2)) {\n        iVar5 = fcn.0042b628(iVar4);\n        if ((((iVar5 != 0) && (*0x21 != iVar4)) && (iVar6 = fcn.004369a8(*0x21, iVar4),  iVar6 != 0)) &&\n           ((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n            ((*(iVar5 + 0x24) & 2) != 0)))) {\n            (*pcVar2)(iVar4, 4);\n            *(iVar5 + 0x24) = *(iVar5 + 0x24) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00436f1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436f1f(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t lpClassName;\n    uint lpWndClass;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.00439e31();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.0040f4c0(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 0x5c))(&var_58h);\n        if (lpClassName != 0) {\n            iVar2 = fcn.00439e31();\n            iVar2 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar2 + 8), lpClassName, &lpWndClass);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.0042c38b(lpWndClass, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "00437168": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437168(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if ((param_1[0x27] != NULL) && (iVar1 = (*param_1[0x27])(param_1),  iVar1 == 0)) {\n        return;\n    }\n    piVar2 = (**(*param_1 + 0xbc))();\n    if ((piVar2 != NULL) && (iVar1 = (**(*piVar2 + 0x8c))(param_1),  iVar1 == 0)) {\n        return;\n    }\n    iVar1 = fcn.00439e31();\n    piVar3 = *(iVar1 + 4);\n    if ((piVar3 != NULL) && (piVar3[7] == param_1)) {\n        if ((piVar2 == NULL) && (iVar1 = (**(*piVar3 + 0x88))(),  iVar1 == 0)) {\n            return;\n        }\n        fcn.00433c3b();\n        fcn.00433d07();\n        iVar1 = fcn.004364d3();\n        if (iVar1 == 0) {\n            fcn.0043650c(0);\n            return;\n        }\n        iVar1 = fcn.00439e31();\n        if ((*(iVar1 + 0x14) == '\\0') && (piVar3[7] == 0)) {\n            fcn.004416c0(0);\n            return;\n        }\n    }\n    if ((piVar2 != NULL) && (piVar2[0x12] != 0)) {\n        var_4h = (**(*piVar2 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                (**(*piVar2 + 0x7c))();\n                return;\n            }\n            (**(*piVar2 + 100))(&var_4h);\n            piVar3 = fcn.0042ccb1();\n        } while (piVar3 == param_1);\n        (**(*piVar2 + 0x94))(param_1);\n    }\n    (**(*param_1 + 0x58))();\n    return;\n}\n",
        "token_count": 522
    },
    "0043745b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043745b(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    fcn.0042b568();\n    uVar2 = fcn.0042e967();\n    piVar5 = in_ECX;\n    if ((uVar2 & 0x40000000) == 0) {\n        piVar5 = fcn.0042ce41();\n    }\n    if (arg_8h != 0) {\n        arg_ch = in_ECX;\n    }\n    if ((piVar5 == arg_ch) ||\n       ((piVar3 = fcn.0042ce41(),  piVar5 == piVar3 &&\n        (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[7], 0x36d, 0x40, 0),  iVar4 != 0)))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    piVar5[9] = piVar5[9] & 0xffffffdf;\n    if (bVar1) {\n        piVar5[9] = piVar5[9] | 0x20;\n    }\n    fcn.00436ca1((-bVar1 & 0xfffffffc) + 8);\n    piVar5 = fcn.00437843();\n    if (piVar5 == NULL) {\n        (**(*in_ECX + 0xc0))();\n        piVar5 = fcn.00437843();\n        if (piVar5 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != 0) && (arg_10h == 0)) {\n        (**(*piVar5 + 0xe4))(1, piVar5, piVar5);\n    }\n    (**(*piVar5 + 0xe8))(arg_8h);\n    return;\n}\n",
        "token_count": 472
    },
    "004376ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004376ca(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    uint var_108h;\n    int32_t var_4h;\n    \n    uVar4 = fcn.00439e31();\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalGetAtomNameA;\n    iVar1 = *(uVar4 + 4);\n    if ((((iVar1 != 0) && (arg_ch != 0)) && (iVar5 = arg_ch >> 0x10,  iVar5 != 0)) &&\n       ((arg_ch == *(iVar1 + 0xb0) && (iVar5 == *(iVar1 + 0xb2))))) {\n        (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(uVar4 & 0xffff0000 | *(iVar1 + 0xb0), &var_108h, 0x103);\n        pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n        (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(&var_108h);\n        (*pcVar2)(&var_108h & 0xffff0000 | *(iVar1 + 0xb2), &var_108h, 0x103);\n        (*pcVar3)(&var_108h);\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x3e4, *(var_4h + 0x1c), *(iVar1 + 0xb0));\n    }\n    return 0;\n}\n",
        "token_count": 370
    },
    "0043784a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043784a(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0x98);\n    if (param_2 != piVar1) {\n        *(param_1 + 0x98) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0xe4))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0x98) == 0) && (*(param_1 + 0x98) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0xe4))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "004378cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004378cf(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    piVar1 = fcn.0043874f();\n    if (arg_10h == 0) {\n        fcn.0042eaf3(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0xc4))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.00438760(),  iVar2 == 0)) {\n            (**(*piVar1 + 200))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0xc4))(arg_ch);\n        piVar1[0x2e] = piVar1[0x2e] | 0xc;\n    }\n    iVar2 = fcn.00438760();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x1c] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x1c] + 0xe0))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x22] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x0043798d;\n            }\n            piVar1[0x22] = 8;\n            goto code_r0x004379b8;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x22] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x22] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x0043798d:\n        fcn.0042eb42(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x004379b8:\n    (**(*piVar1 + 200))(0);\n    return;\n}\n",
        "token_count": 558
    },
    "004379e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004379e8(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00432f7f(*(in_ECX + 0x1c));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x68) == NULL || (iVar2 = (**(**(in_ECX + 0x68) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        fcn.00429ac5();\n        iVar2 = fcn.00439ba1();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((*(iVar2 + 0x54) != *(arg_8h + 4)) &&\n           (((iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x1c)),  iVar2 != 0 &&\n             (iVar2 = fcn.0042cd34(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x1c)),  iVar2 != 0)))) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar8 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar9 = iVar8;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar8);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.0042eeab(iVar9, iVar2);\n                        break;\n                    }\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar6 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        uVar5 = (*_sym.imp.USER32.dll_GetSubMenu)(*(arg_8h + 4), var_24h);\n                        iVar2 = fcn.0042eeab(uVar5);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x00437b53;\n                        uVar5 = 0;\n                    }\n                    else if ((*(in_ECX + 0x3c) == 0) || (0xefff < var_28h)) {\n                        uVar5 = 0;\n                    }\n                    else {\n                        uVar5 = 1;\n                    }\n                    fcn.00429c8a(in_ECX, uVar5);\n                    uVar6 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar6 < var_ch) {\n                        var_24h = var_24h + (uVar6 - var_ch);\n                        while ((var_24h < uVar6 && (uVar7 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar7 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x00437b53:\n                var_ch = uVar6;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 996
    },
    "00437b69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437b69(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.0042ce41();\n    if ((in_ECX[0x1a] != NULL) && (iVar2 = (**(*in_ECX[0x1a] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[9] = in_ECX[9] & 0xffffffbf;\n        if (*(iVar1 + 0x50) == 0) {\n            in_ECX[0x24] = 0xe001;\n        }\n        else {\n            in_ECX[0x24] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[7], 0x362, in_ECX[0x24], 0);\n        iVar1 = (**(*in_ECX + 0xd4))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x1c));\n        }\n        goto code_r0x00437c40;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x24] = 0;\n    }\n    else {\n        if ((arg_8h < 0xf000) || (0xf1ef < arg_8h)) {\n            if (0xfeff < arg_8h) {\n                in_ECX[0x24] = 0xef1f;\n                goto code_r0x00437c3c;\n            }\n        }\n        else {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        in_ECX[0x24] = arg_8h;\n    }\ncode_r0x00437c3c:\n    *(iVar1 + 0x24) = *(iVar1 + 0x24) | 0x40;\ncode_r0x00437c40:\n    if (in_ECX[0x24] != in_ECX[0x25]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[7]);\n        iVar1 = fcn.0042b601(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[7], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 631
    },
    "00437e1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00437e1b(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    fcn.00428651(10);\n    puVar4 = *(extraout_ECX + 0x70);\n    *(unaff_EBP + -4) = 0;\n    while (puVar4 != NULL) {\n        puVar1 = *puVar4;\n        iVar2 = (**(*puVar4[2] + 0xd0))();\n        puVar4 = puVar1;\n        if (iVar2 != 0) {\n            fcn.00428774();\n        }\n    }\n    puVar4 = *(unaff_EBP + -0x24);\n    while (puVar4 != NULL) {\n        puVar1 = *puVar4;\n        if (puVar4[2][0x1e] == 0) {\n            (**(*puVar4[2] + 0x58))();\n            puVar4 = puVar1;\n        }\n        else {\n            piVar3 = fcn.0042ccb1();\n            (**(*piVar3 + 0x58))();\n            puVar4 = puVar1;\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004286b0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 400
    },
    "004380f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004380f3(int32_t lpString2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lpString1;\n    \n    uVar2 = fcn.0042e967();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n    if ((uVar2 & 0x4000) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, *(in_ECX + 0xac));\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n        if (lpString2 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(&lpString1, 0x446e18);\n            (*pcVar1)(&lpString1, lpString2);\n            if (0 < *(in_ECX + 0x40)) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString1, 0x446e1c, *(in_ECX + 0x40));\n                (*_sym.imp.USER32.dll_wsprintfA)(&lpString1 + iVar3);\n            }\n        }\n    }\n    else {\n        lpString1._0_1_ = 0;\n        if (lpString2 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, lpString2);\n            if (0 < *(in_ECX + 0x40)) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString1, 0x446e1c, *(in_ECX + 0x40));\n                (*_sym.imp.USER32.dll_wsprintfA)(&lpString1 + iVar3);\n            }\n            (*pcVar1)(&lpString1, 0x446e18);\n        }\n        (*pcVar1)(&lpString1, *(in_ECX + 0xac));\n    }\n    fcn.00432f0e(*(in_ECX + 0x1c), &lpString1);\n    return;\n}\n",
        "token_count": 478
    },
    "00438760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00438760(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0xd0))();\n    if (iVar1 != 0) {\n        return param_1[0x1e];\n    }\n    if ((param_1[0x1c] != 0) && (*(param_1[0x1c] + 0x78) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "004387ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004387ab(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x459274;\n    uVar3 = *0x459270;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.00432840(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 350
    },
    "00438839": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438839(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x459274;\n    uVar3 = *0x459270;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.004327d7(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 351
    },
    "00438fa5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00438fa5(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CSharedFile.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.00435613();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043542c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 198
    },
    "00439d4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00439d4d(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_THREAD_STATE.0;\n    puVar1 = extraout_ECX[5];\n    *(unaff_EBP + -4) = 0;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[6] != NULL) {\n        (***extraout_ECX[6])(1);\n    }\n    if (extraout_ECX[7] != NULL) {\n        (***extraout_ECX[7])(1);\n    }\n    if (extraout_ECX[8] != NULL) {\n        (***extraout_ECX[8])(1);\n    }\n    if (extraout_ECX[9] != NULL) {\n        (***extraout_ECX[9])(1);\n    }\n    pcVar3 = extraout_ECX[0xe];\n    if (pcVar3 != NULL) {\n        while (*(pcVar3 + 0xc) != 0) {\n            uVar2 = fcn.004287e6();\n            fcn.00429d34(uVar2);\n            pcVar3 = extraout_ECX[0xe];\n        }\n    }\n    if (extraout_ECX[0xc] != NULL) {\n        (**(*extraout_ECX[0xc] + 4))(1);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    if (extraout_ECX[0xe] != NULL) {\n        (**(*extraout_ECX[0xe] + 4))(1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 515
    },
    "0043a258": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043a258(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_LocalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "0043a474": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a474(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    code **ppcVar3;\n    uint var_4h;\n    \n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = fcn.0043a23a(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        ppcVar3 = ppcVar1 + 2;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n        fcn.0043a1e1(ppcVar1);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    }\n    else {\n        ppcVar3 = ppcVar1 + 2;\n        if ((arg_8h < *ppcVar3) || (arg_ch == 0)) goto code_r0x0043a54b;\n    }\n    if (ppcVar1[3] == NULL) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, in_ECX[3] << 2);\n    }\n    else {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], in_ECX[3] << 2, 2);\n    }\n    ppcVar1[3] = pcVar2;\n    if (pcVar2 == NULL) {\n        fcn.00426584();\n    }\n    fcn.0040f4c0(ppcVar1[3] + *ppcVar3 * 4, 0, (*ppcVar3 * 0x3fffffff + in_ECX[3]) * 4);\n    *ppcVar3 = in_ECX[3];\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, ppcVar1);\ncode_r0x0043a54b:\n    *(ppcVar1[3] + arg_8h * 4) = arg_ch;\n    return;\n}\n",
        "token_count": 543
    },
    "0043a5bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a5bb(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.0043a1f4(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    if (arg_8h != NULL) {\n        (***arg_8h)(1);\n    }\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 377
    },
    "0043a654": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043a654(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if (iVar2 != 0) {\n            fcn.0043a5bb(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.0043a5bb(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 221
    },
    "0043a6ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a6d4)\n\nint32_t __fastcall fcn.0043a6ad(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *unaff_retaddr;\n    \n    if (*param_1 == 0) {\n        if (*0x458ed4 == NULL) {\n            *0x458ed4 = fcn.0043a26c();\n        }\n        iVar1 = fcn.0043a305();\n        *param_1 = iVar1;\n    }\n    iVar1 = *param_1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**0x458ed4);\n    if ((iVar2 == 0) || (*(iVar2 + 8) <= iVar1)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(*(iVar2 + 0xc) + iVar1 * 4);\n    }\n    if (iVar1 == 0) {\n        iVar1 = (*unaff_retaddr)();\n        fcn.0043a474(*param_1, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 261
    },
    "0043a7ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a7ca(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0043a996": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043a996(uint lpAppName, uint lpValueName, int32_t nDefault)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        nDefault = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(lpAppName, lpValueName, nDefault, *(in_ECX + 0x90));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.0043a950(lpAppName);\n        if (iVar1 != 0) {\n            lpAppName = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar1, lpValueName, 0, &var_8h, &var_4h, &lpAppName);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return nDefault;\n}\n",
        "token_count": 261
    },
    "0043acab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "get OS version"
        ],
        "decompiled_code": "\nint32_t fcn.0043acab(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x459254 == 0) {\n        *0x459254 = 1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if ((uVar1 < 4) && ((uVar1 & 0x80000000) != 0)) {\n            *0x459250 = 1;\n        }\n        else {\n            *0x459250 = 0;\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x4590a0);\n        }\n    }\n    return *0x459254;\n}\n",
        "token_count": 147
    },
    "0043ad3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043ad3e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (*0x459254 == 0) {\n        fcn.0043acab();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    if (*0x459250 == 0) {\n        piVar1 = param_1 * 4 + 0x459058;\n        if (*(param_1 * 4 + 0x459058) == 0) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x4590a0);\n            if (*piVar1 == 0) {\n                (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x4590b8);\n                *piVar1 = *piVar1 + 1;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4590a0);\n        }\n        (*pcVar2)(param_1 * 0x18 + 0x4590b8);\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "0043adae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043adae(int32_t param_1)\n\n{\n    if (*0x459250 == 0) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x4590b8);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0043adf9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043adf9(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (*0x4592b4 != 0) {\n        *0x459258 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        *0x459258 = *0x459258 + 1;\n        *0x45925c = (*pcVar1)(3);\n        *0x45925c = *0x45925c + 1;\n        *0x4592c0 = 1;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0043b15d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043b15d(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00439e31();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    iVar3 = fcn.00439e31();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x68) = unaff_ESI;\n        *(iVar3 + 0x6c) = unaff_retaddr;\n        *(iVar3 + 0x70) = param_1;\n        *(iVar3 + 0x74) = param_2;\n        fcn.0043b1c0();\n    }\n    iVar3 = fcn.00439e31();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.00429082();\n    }\n    return 1;\n}\n",
        "token_count": 303
    },
    "0043b1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b1c0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_30ch;\n    uint lpFilename;\n    uint var_108h;\n    uchar *var_4h;\n    \n    iVar2 = fcn.00439e31();\n    *(iVar2 + 8) = *(param_1 + 0x68);\n    *(iVar2 + 0xc) = *(param_1 + 0x68);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x68), &lpFilename, 0x104);\n    var_4h = fcn.0041217a(&lpFilename, 0x2e);\n    *var_4h = 0;\n    fcn.0043b2dd(&lpFilename, &var_108h, 0x104);\n    if (*(param_1 + 0x88) == 0) {\n        uVar3 = fcn.0040f20f(&var_108h);\n        *(param_1 + 0x88) = uVar3;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        iVar4 = fcn.0042ed9a(0xe000, &var_30ch, 0x100);\n        if (iVar4 == 0) {\n            puVar5 = *(param_1 + 0x88);\n        }\n        else {\n            puVar5 = &var_30ch;\n        }\n        uVar3 = fcn.0040f20f(puVar5);\n        *(param_1 + 0x78) = uVar3;\n    }\n    puVar1 = var_4h;\n    *(iVar2 + 0x10) = *(param_1 + 0x78);\n    if (*(param_1 + 0x8c) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(var_4h, \".HLP\");\n        uVar3 = fcn.0040f20f(&lpFilename);\n        *(param_1 + 0x8c) = uVar3;\n        *puVar1 = 0;\n    }\n    if (*(param_1 + 0x90) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_108h, \".INI\");\n        uVar3 = fcn.0040f20f(&var_108h);\n        *(param_1 + 0x90) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 599
    },
    "0043b2dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0043b2dd(char *param_1, int32_t param_2, uint param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    pcVar2 = param_1;\n    for (; *param_1 != '\\0'; param_1 = fcn.00410dde(param_1)) {\n        cVar1 = *param_1;\n        if (((cVar1 == '\\\\') || (cVar1 == '/')) || (cVar1 == ':')) {\n            pcVar2 = fcn.00410dde(param_1);\n        }\n    }\n    if (param_2 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar2);\n        iVar3 = iVar3 + 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(param_2, pcVar2, param_3);\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 230
    },
    "0043b471": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043b471(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0043e882();\n    fcn.00441806();\n    fcn.0040e7b8();\n    if (param_1 == 0) {\n        iVar1 = fcn.00428f48();\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x58) != NULL) {\n                (**(**(iVar1 + 0x58) + 4))(1);\n            }\n            *(iVar1 + 0x58) = 0;\n        }\n        iVar1 = fcn.00439ba1();\n        if (*(iVar1 + 0x114) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar1 + 0x114) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0043bc9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043bc9d(uint phkResult, uint lpString, int32_t lpValueName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (lpValueName == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(0x80000000, phkResult, 1, lpString, uVar1);\n        bVar4 = iVar2 == 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(0x80000000, phkResult, &phkResult);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(phkResult, lpValueName, 0, 1, lpString, iVar2 + 1);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if ((iVar3 == 0) && (iVar2 == 0)) {\n                return true;\n            }\n        }\n        bVar4 = false;\n    }\n    return bVar4;\n}\n",
        "token_count": 306
    },
    "0043cadf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0043cadf(int32_t arg_8h, int32_t noname_1, int32_t noname_2, int32_t noname_3, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int16_t *arg_30h, int16_t *arg_34h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint var_8h;\n    uint hMem;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n    if (arg_30h == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_30h);\n        iVar2 = iVar2 + 1;\n    }\n    if ((arg_34h == NULL) || (*arg_34h == 0)) {\n        arg_34h = arg_30h;\n        iVar3 = iVar2;\n    }\n    else {\n        iVar3 = (*pcVar1)(arg_34h);\n        iVar3 = iVar3 + 1;\n    }\n    iVar3 = (iVar3 + iVar2) * 2 + 0x34;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2042, iVar3);\n    if (iVar4 != 0) {\n        piVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n        if (arg_30h == NULL) {\n            piVar5[0xb] = 0;\n        }\n        else {\n            piVar5[0xb] = 0x34;\n            iVar6 = (*pcVar1)(arg_30h);\n            fcn.0040f660(piVar5 + 0xd, arg_30h, iVar6 * 2 + 2);\n        }\n        if (arg_34h == NULL) {\n            piVar5[0xc] = 0;\n        }\n        else {\n            iVar2 = iVar2 * 2 + 0x34;\n            piVar5[0xc] = iVar2;\n            iVar6 = (*pcVar1)(arg_34h);\n            fcn.0040f660(iVar2 + piVar5, arg_34h, iVar6 * 2 + 2);\n        }\n        *piVar5 = iVar3;\n        piVar5[5] = arg_18h;\n        piVar5[1] = arg_8h;\n        piVar5[6] = arg_1ch;\n        piVar5[2] = noname_1;\n        piVar5[7] = arg_20h;\n        piVar5[8] = arg_24h;\n        piVar5[3] = noname_2;\n        piVar5[9] = arg_28h;\n        piVar5[4] = noname_3;\n        piVar5[10] = arg_2ch;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n    }\n    return iVar4;\n}\n",
        "token_count": 736
    },
    "0043cec8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043cec8(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTreatAsClass;\n    iVar2 = (*_sym.imp.ole32.dll_CoTreatAsClass)(arg_ch, arg_10h);\n    if ((iVar2 != 0) && (arg_8h != 0)) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n        var_4h = 0;\n        (*_sym.imp.ole32.dll_StringFromCLSID)(arg_ch, &var_4h);\n        uVar3 = fcn.0043b677(var_4h);\n        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueA)(var_8h, uVar3, 1, arg_8h, uVar4);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(uVar3);\n        iVar2 = (*pcVar1)(arg_ch, arg_10h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_8h);\n    }\n    return iVar2;\n}\n",
        "token_count": 339
    },
    "0043d1ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043d1ea(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = arg_8h;\n    if (arg_8h != NULL) {\n        iVar2 = (**(*arg_8h + 0x58))(arg_8h, &var_8h);\n        if ((iVar2 != 0) || (var_8h != 1)) {\n            (**(*piVar1 + 4))(piVar1);\n            return piVar1;\n        }\n        arg_8h = NULL;\n        iVar2 = (**(*piVar1 + 0x30))(piVar1, 1, &arg_8h);\n        if (iVar2 == 0) {\n            var_4h = NULL;\n            (**(*arg_8h + 0xc))(arg_8h, 1, &var_4h, 0);\n            fcn.0043d5f6(&arg_8h);\n            return var_4h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 266
    },
    "0043d252": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl fcn.0043d252(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    int32_t *piStack48;\n    uint *puStack44;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    uVar4 = 0;\n    if (arg_8h == 0) {\n        uVar4 = 0;\n    }\n    else {\n        puStack44 = 0x43d271;\n        piStack48 = fcn.0043d1ea(arg_8h);\n        if (piStack48 != NULL) {\n            puStack44 = &fcn.0043d252::var_ch;\n            var_8h = piStack48;\n            iVar2 = (**(*piStack48 + 0x58))();\n            if ((iVar2 == 0) && (var_ch == 2)) {\n                var_4h = 0;\n                iVar2 = (*_sym.imp.ole32.dll_CreateBindCtx)(0, &fcn.0043d252::var_4h);\n                if (iVar2 == 0) {\n                    arg_8h = 0;\n                    iVar2 = (**(*var_8h + 0x50))(var_8h, var_4h, 0, &fcn.0043d252::arg_8h);\n                    uVar1 = arg_8h;\n                    if (arg_8h == 0) {\n                        puVar5 = NULL;\n                    }\n                    else {\n                        piStack48 = arg_8h;\n                        puVar5 = &stack0xffffffd0;\n                        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                        fcn.0040fca0();\n                        piStack48 = piStack48 & 0xffffff00;\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (0, 0, uVar1, 0xffffffff, &stack0xffffffd0, iVar3 * 2 + 2, 0, 0);\n                    }\n                    if ((iVar2 == 0) && (puVar5 != NULL)) {\n                        piStack48 = puVar5;\n                        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg_8h);\n                    }\n                    piStack48 = &fcn.0043d252::var_4h;\n                    fcn.0043d5f6();\n                }\n            }\n            fcn.0043d5f6(&fcn.0043d252::var_8h);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 653
    },
    "0043d633": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043d633(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[1] == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(param_1 + 1);\n    if (iVar1 == 0) {\n        (**(*param_1 + 0x10))();\n    }\n    return iVar1;\n}\n",
        "token_count": 106
    },
    "0043d670": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0043d670(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x448e20 == *param_2) && (param_2[1] == *0x448e24)) && (param_2[2] == *0x448e28)) &&\n           (param_2[3] == *0x448e2c)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 455
    },
    "0043d71e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043d71e(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(*piVar3 + in_ECX);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 293
    },
    "0043d976": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043d976(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.COleStreamFile.0;\n    pcVar1 = extraout_ECX[4];\n    *(unaff_EBP + -4) = 1;\n    if ((pcVar1 != NULL) && (extraout_ECX[2] != NULL)) {\n        fcn.0043df83();\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004303f9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 250
    },
    "0043d9df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d9df(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0) {\n        *arg_14h = 0;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(*arg_8h + 0xc))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 126
    },
    "0043df83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043df83(int32_t *param_1)\n\n{\n    if (param_1[4] != 0) {\n        (**(*param_1 + 0x48))();\n        fcn.0043d5f6(param_1 + 4);\n    }\n    fcn.0042a9ac();\n    return;\n}\n",
        "token_count": 80
    },
    "0043e00d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043e00d(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x5c) = param_2;\n    if (param_2 != 1) {\n        param_2 = ((param_2 != 2) - 1 & 3) - 1;\n    }\n    return param_2;\n}\n",
        "token_count": 91
    },
    "0043e0a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043e0a6(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    \n    iVar2 = *(param_1 + 0x50);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x1c);\n    }\n    hWnd = param_1;\n    uVar1 = fcn.00433f32(iVar2, &hWnd);\n    *(param_1 + 0x68) = uVar1;\n    fcn.0042bab4(param_1);\n    iVar2 = sub.oledlg.dll_OleUIBusyA(param_1 + 0x60);\n    fcn.0042bb00();\n    fcn.0042b67f();\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    uVar1 = 2;\n    if (iVar2 != 2) {\n        if (iVar2 == 0x75) {\n            *(param_1 + 0x8c) = 1;\n        }\n        else {\n            if (iVar2 != 0x76) {\n                if (iVar2 == 0x77) {\n                    *(param_1 + 0x8c) = 3;\n                    return 1;\n                }\n                uVar1 = fcn.0043e00d(iVar2);\n            }\n            *(param_1 + 0x8c) = uVar1;\n        }\n        return 1;\n    }\n    return 2;\n}\n",
        "token_count": 356
    },
    "0043e191": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043e191(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0043d633();\n    }\n    if (extraout_ECX[0xc] != NULL) {\n        fcn.00429d34(extraout_ECX[9]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004297b9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 246
    },
    "0043e499": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0043e499(int32_t *param_1)\n\n{\n    uchar uVar1;\n    \n    if (*(param_1 + 0x10) == '\\0') {\n        uVar1 = (**(*param_1 + 0x60))();\n        *(param_1 + 0x41) = uVar1;\n        *(param_1 + 0x10) = 1;\n    }\n    return *(param_1 + 0x41);\n}\n",
        "token_count": 107
    },
    "0043e8cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043e8cd(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint *unaff_EBX;\n    uint *puVar3;\n    \n    puVar1 = fcn.0043ea99(param_2, param_3);\n    if (puVar1 == NULL) {\n        if ((*(param_1 + 0x1c) == 0) || (*(param_1 + 0x24) == *(param_1 + 0x20))) {\n            arg_8h = fcn.00429d0b((*(param_1 + 0x20) + *(param_1 + 0x28)) * 0x24);\n            *(param_1 + 0x20) = *(param_1 + 0x20) + *(param_1 + 0x28);\n            if (*(param_1 + 0x1c) != 0) {\n                fcn.0040f660(arg_8h, *(param_1 + 0x1c), *(param_1 + 0x24) * 0x24);\n                fcn.00429d34(*(param_1 + 0x1c));\n            }\n            *(param_1 + 0x1c) = arg_8h;\n        }\n        iVar2 = *(param_1 + 0x24);\n        *(param_1 + 0x24) = iVar2 + 1;\n        puVar1 = *(param_1 + 0x1c) + iVar2 * 0x24;\n    }\n    else {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(puVar1[1]);\n        (*_sym.imp.ole32.dll_ReleaseStgMedium)(puVar1 + 5);\n    }\n    puVar1[8] = param_3;\n    puVar3 = puVar1;\n    for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *unaff_EBX;\n        unaff_EBX = unaff_EBX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return puVar1;\n}\n",
        "token_count": 513
    },
    "0043ea99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0043ea99(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    int16_t *var_8h;\n    int32_t var_4h;\n    \n    uVar4 = 0;\n    var_8h = NULL;\n    if (*(in_ECX + 0x24) != 0) {\n        var_4h = 0;\n        do {\n            piVar2 = var_4h + *(in_ECX + 0x1c);\n            if ((((*piVar2 == *arg_8h) && ((*(arg_8h + 8) & *(piVar2 + 8)) != 0)) &&\n                ((*(piVar2 + 10) == 0 || (*(piVar2 + 6) == *(arg_8h + 6))))) &&\n               ((*(piVar2 + 4) == *(arg_8h + 4) && (*(piVar2 + 0x10) == arg_ch)))) {\n                piVar3 = *(arg_8h + 2);\n                piVar1 = *(piVar2 + 2);\n                var_8h = piVar2;\n                if (piVar1 != NULL) {\n                    if ((piVar3 == NULL) || (*piVar1 != *piVar3)) goto code_r0x0043eb11;\n                    piVar3 = fcn.0040f520(piVar1, piVar3, *piVar1);\n                }\n                if (piVar3 == NULL) {\n                    return piVar2;\n                }\n            }\ncode_r0x0043eb11:\n            var_4h = var_4h + 0x24;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(in_ECX + 0x24));\n    }\n    return var_8h;\n}\n",
        "token_count": 457
    },
    "0043f4f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: pszExeFileName\n// WARNING: Variable defined which should be unmapped: lplpsz\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.0043f4f7(uint arg_8h, uint rclsid, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lplpsz;\n    uint var_14h;\n    uint pszExeFileName;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    (*_sym.imp.ole32.dll_StringFromCLSID)(*(unaff_EBP + 0xc), unaff_EBP + -0x18);\n    iVar2 = fcn.0043b677(*(unaff_EBP + -0x18));\n    if (iVar2 == 0) goto code_r0x0043f708;\n    fcn.0043f485(0, iVar2);\n    fcn.0043f485(1, *(unaff_EBP + 0x10));\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n    *(unaff_EBP + -0x10) = *0x454618;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.00439e31();\n    fcn.00430ded(*(iVar2 + 8), unaff_EBP + -0x10);\n    fcn.0043f485(2, *(unaff_EBP + -0x10));\n    fcn.0043f485(3, *(unaff_EBP + 0x14));\n    fcn.0043f485(4, *(unaff_EBP + 0x18));\n    iVar2 = fcn.00439e31();\n    fcn.0043f485(5, *(iVar2 + 0x10));\n    *(unaff_EBP + -0x14) = *0x454618;\n    iVar2 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -4) = 1;\n    if (iVar2 != 0) {\n        iVar3 = fcn.00439e31();\n        iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconA)(*(iVar3 + 8), *(unaff_EBP + -0x10), iVar2);\n        if (iVar3 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            (*_sym.imp.USER32.dll_DestroyIcon)(iVar3);\n        }\n    }\n    fcn.00427026(unaff_EBP + -0x14, 0x445a48, iVar2);\n    fcn.0043f485(6, *(unaff_EBP + -0x14));\n    fcn.0043f485(7, *(unaff_EBP + 0x20));\n    *(unaff_EBP + 0xc) = *0x454618;\n    pcVar1 = *(unaff_EBP + 0x24);\n    *(unaff_EBP + -4) = 2;\n    if ((pcVar1 == NULL) || (*pcVar1 == '\\0')) {\n        fcn.0042abaa(*(unaff_EBP + 0x20));\n        iVar2 = fcn.0042af42(0x28);\n        if (iVar2 != -1) {\n            uVar4 = fcn.00426ac0(unaff_EBP + 0x20, iVar2 + 1);\n            *(unaff_EBP + -4) = 3;\n            fcn.0042ab5a(uVar4);\n            *(unaff_EBP + -4) = 2;\n            fcn.0042aa21();\n            iVar2 = fcn.0042af42(0x2e);\n            if (iVar2 != -1) {\n                uVar4 = fcn.00426ac0(unaff_EBP + 0x20, iVar2);\n                *(unaff_EBP + -4) = 4;\n                fcn.0042ab5a(uVar4);\n                *(unaff_EBP + -4) = 2;\n                fcn.0042aa21();\n                iVar2 = fcn.0042af42(0x29);\n                if (iVar2 != -1) {\n                    uVar4 = fcn.00426bf5(unaff_EBP + 0x20, iVar2);\n                    *(unaff_EBP + -4) = 5;\n                    fcn.0042ab5a(uVar4);\n                    *(unaff_EBP + -4) = 2;\n                    fcn.0042aa21();\n                    goto code_r0x0043f6d5;\n                }\n            }\n        }\n        fcn.0042a9ac();\n    }\n    else {\n        fcn.0042abaa(pcVar1);\n    }\ncode_r0x0043f6d5:\n    fcn.0043f485(8, *(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 1;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042aa21();\n    iVar2 = 1;\ncode_r0x0043f708:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 1310
    },
    "0043f740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.0043f740(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    arg_8h_00 = *(unaff_EBP + 0x1c);\n    iVar2 = *(unaff_EBP + 0x18);\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = *(iVar2 * 8 + 0x4479a0);\n    }\n    iVar1 = *(unaff_EBP + 0x20);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00439e31();\n        if (*(iVar1 + 0x14) == '\\0') {\n            iVar1 = *(iVar2 * 8 + 0x4479a4);\n        }\n        else {\n            iVar1 = *(iVar2 * 8 + 0x4479cc);\n        }\n    }\n    fcn.0043f431(10);\n    iVar3 = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0043f4f7(unaff_EBP + -0x14, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                         *(unaff_EBP + 0x14), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), *(unaff_EBP + 0x2c));\n    if (((iVar2 != 0) && (iVar3 = fcn.0043f964(arg_8h_00, *(unaff_EBP + -0x14), 10, 0, 0x80000000),  iVar3 != 0)) &&\n       (iVar1 != 0)) {\n        iVar3 = fcn.0043f964(iVar1, *(unaff_EBP + -0x14), 10, 1, 0x80000000);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043f45e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 645
    },
    "0043f964": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpData\n\nuint __cdecl fcn.0043f964(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint hKey)\n\n{\n    char *arg_ch_00;\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpData;\n    uint lpcbData;\n    uint var_20h;\n    uint lpSubKey;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    uVar1 = *0x454618;\n    *(unaff_EBP + -0x10) = *0x454618;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = uVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x18) == -0x80000000) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", unaff_EBP + -0x14);\n    }\n    *(unaff_EBP + -0x20) = 1;\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    arg_ch_00 = **(unaff_EBP + 8);\n    do {\n        if (arg_ch_00 == NULL) {\ncode_r0x0043fa67:\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x14));\n            }\n            *(unaff_EBP + -4) = 0;\n            fcn.0042aa21();\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0042aa21();\n            uVar1 = *(unaff_EBP + -0x20);\n            *in_FS_OFFSET = *(unaff_EBP + -0xc);\n            return uVar1;\n        }\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 4;\n        if ((*(unaff_EBP + 0x18) != -0x80000000) || (*arg_ch_00 != '\\0')) {\n            iVar3 = (*pcVar2)(arg_ch_00);\n            *(unaff_EBP + -0x1c) = arg_ch_00 + iVar3 + 1;\n            fcn.0043573b(unaff_EBP + -0x10, arg_ch_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n            fcn.0043573b(unaff_EBP + -0x18, *(unaff_EBP + -0x1c), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n            iVar3 = *(unaff_EBP + -0x10);\n            if ((*(unaff_EBP + 0x18) != -0x80000000) || (*(iVar3 + -8) != 0)) {\n                if (*(unaff_EBP + 0x14) == 0) {\n                    *(unaff_EBP + -0x24) = 0x100;\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueA)\n                                      (*(unaff_EBP + 0x18), iVar3, unaff_EBP + -0x124, unaff_EBP + -0x24);\n                    if (iVar3 == 0) goto code_r0x0043fa54;\n                    iVar3 = *(unaff_EBP + -0x10);\n                }\n                uVar1 = *(unaff_EBP + -0x18);\n                *(unaff_EBP + -0x1c) = iVar3;\n                uVar4 = (*pcVar2)(uVar1);\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)\n                                  (*(unaff_EBP + 0x18), *(unaff_EBP + -0x1c), 1, uVar1, uVar4);\n                if (iVar3 != 0) {\n                    *(unaff_EBP + -0x20) = 0;\n                    goto code_r0x0043fa67;\n                }\n            }\n        }\ncode_r0x0043fa54:\n        arg_ch_00 = **(unaff_EBP + 8);\n    } while( true );\n}\n",
        "token_count": 1064
    },
    "0043fb70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043fb70(int32_t arg_8h, uint16_t **arg_ch, uint *arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    uint *puVar6;\n    ulong *puVar7;\n    uint pvargDest;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puVar7 = &pvargDest;\n    var_4h = 0;\n    fcn.00403a4b(puVar7);\n    puVar6 = *arg_ch;\n    uVar1 = *(arg_8h + 0xc);\n    if ((uVar1 != 0xc) && (*puVar6 != uVar1)) {\n        var_4h = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, puVar6, 0, arg_ch & 0xffff0000 | uVar1);\n        if (var_4h < 0) {\n            *arg_10h = 0;\n            return var_4h;\n        }\n        puVar6 = &pvargDest;\n    }\n    uVar3 = *(arg_8h + 0xc) - 2;\n    puVar5 = *(arg_8h + 0x18) + var_8h;\n    if (0xe < uVar3) {\ncode_r0x0043fc43:\n        var_4h = -0x7ffdfff8;\n        *arg_10h = 0;\n        goto code_r0x0043fc50;\n    }\n    // switch table (15 cases) at 0x43fc76\n    switch(*(uVar3 * 4 + 0x43fc76)) {\n    case 0x43fbdb:\n        *puVar5 = *(puVar6 + 2);\n        break;\n    case 0x43fbe2:\n        *puVar5 = *(puVar6 + 2);\n        break;\n    case 0x43fbeb:\n        *puVar5 = *(puVar6 + 2);\n        break;\n    case 0x43fbf2:\n        *puVar5 = puVar6[2];\n        *(puVar5 + 4) = puVar6[3];\n        break;\n    case 0x43fbff:\n        fcn.0043b5c9(puVar5, puVar6[2]);\n        break;\n    case 0x43fc0a:\n        uVar3 = *(puVar6 + 2) != 0;\ncode_r0x0043fc3f:\n        *puVar5 = uVar3;\n        break;\n    case 0x43fc15:\n        iVar4 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(puVar5, puVar6);\n        if (iVar4 != 0) {\n            *arg_10h = 0;\n        }\n        break;\n    case 0x43fc29:\n        piVar2 = puVar6[2];\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 4))(piVar2);\n        }\n        puVar7 = puVar5;\n        fcn.0043d5f6();\n    case 0x43fc3c:\n        uVar3 = puVar6[2];\n        goto code_r0x0043fc3f;\n    case 0x43fc43:\n        goto code_r0x0043fc43;\n    }\ncode_r0x0043fc50:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest, puVar7);\n    if ((-1 < var_4h) && (*(arg_8h + 0x14) != NULL)) {\n        (**(arg_8h + 0x14))();\n    }\n    return var_4h;\n}\n",
        "token_count": 881
    },
    "0043ff58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0043ff58(uint32_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint32_t in_ECX;\n    int16_t *piVar9;\n    int16_t *piVar10;\n    ulong *puVar11;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = in_ECX;\n    puVar11 = arg_8h + 1;\n    if ((arg_14h == 6) || (arg_14h == 0xc)) {\n        *puVar11 = arg_10h;\n        puVar11 = arg_8h + 2;\n    }\n    bVar3 = false;\n    iVar2 = *arg_18h;\n    arg_14h = arg_18h[2];\n    var_4h = arg_18h[3];\n    arg_10h = arg_ch;\n    do {\n        if (*arg_10h == 0) {\ncode_r0x0044012e:\n            if (arg_14h < 1) {\n                if (*arg_10h == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    *arg_1ch = arg_18h[2];\n                    iVar4 = -0x7ffdfff1;\n                }\n            }\n            else {\n                iVar4 = -0x7ffdfff2;\ncode_r0x00440139:\n                *arg_1ch = arg_14h;\n            }\n            return iVar4;\n        }\n        arg_14h = arg_14h + -1;\n        uVar1 = *arg_10h;\n        arg_8h = in_ECX & 0xffff0000 | uVar1;\n        if ((uVar1 != 0xff) && ((uVar1 & 0x40) != 0)) {\n            arg_8h = CONCAT11(0x40, uVar1 & 0xbf);\n        }\n        iVar8 = arg_8h;\n        if (arg_14h < var_4h) {\n            if (iVar8 == 0xff) {\n                arg_14h = arg_18h[3];\n                var_4h = 0;\n                bVar3 = true;\n                goto code_r0x00440123;\n            }\n            if ((!bVar3) && (iVar8 == 0xc)) {\n                *0x4592e8 = 10;\n                *0x4592f0 = 0x80020004;\n                piVar9 = 0x4592e8;\n                goto code_r0x0044007a;\n            }\n            goto code_r0x0044012e;\n        }\n        if (iVar8 == 0xff) goto code_r0x0044012e;\n        piVar10 = iVar2 + arg_14h * 0x10;\n        piVar9 = piVar10;\n        if ((iVar8 != 0xc) && (iVar8 != *piVar10)) {\n            arg_ch = 0x8;\n            piVar9 = arg_20h + arg_14h * 0x10;\n            if (iVar8 != 0xe) {\n                arg_ch = arg_8h;\n            }\n            uVar7 = 4;\n            if ((*piVar10 != arg_ch) &&\n               (iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(piVar9, piVar10, 0, arg_ch),  uVar7 = arg_ch, \n               iVar4 < 0)) goto code_r0x00440139;\n            if (iVar8 == 0xe) {\n                if (*piVar10 == arg_ch) {\n                    uVar6 = fcn.0043b60e(uVar7, *(piVar10 + 4));\n                    *(piVar9 + 4) = uVar6;\n                    *piVar9 = 8;\n                }\n                else {\n                    uVar6 = *(piVar9 + 4);\n                    uVar5 = fcn.0043b60e(uVar6);\n                    *(piVar9 + 4) = uVar5;\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar6);\n                }\n                arg_8h = 0x8;\n            }\n        }\ncode_r0x0044007a:\n        uVar7 = arg_8h & 0xffff;\n        if (0x11 < uVar7) {\n    // switch table (17 cases) at 0x440193\n            switch(uVar7) {\n            case 0x4002:\n            case 0x4003:\n            case 0x4004:\n            case 0x4005:\n            case 0x4006:\n            case 0x4007:\n            case 0x4008:\n            case 0x4009:\n            case 0x400a:\n            case 0x400b:\n            case 0x400c:\n            case 0x400d:\n            case 0x4012:\ncode_r0x0044011c:\n                uVar7 = *(piVar9 + 4);\n                goto code_r0x0044011f;\n            }\n            goto code_r0x00440123;\n        }\n        if (uVar7 == 0x11) {\n            uVar7 = *(piVar9 + 4);\n            goto code_r0x0044011f;\n        }\n    // switch table (12 cases) at 0x440163\n        switch(uVar7) {\n        case 2:\n            uVar7 = piVar9[4];\n            break;\n        case 3:\n        case 4:\n        case 8:\n        case 9:\n        case 10:\n        case 0xd:\n            goto code_r0x0044011c;\n        case 5:\n        case 7:\n            *puVar11 = *(piVar9 + 4);\n            goto code_r0x004400f1;\n        case 6:\n            *puVar11 = *(piVar9 + 4);\n            *(puVar11 + 4) = *(piVar9 + 6);\ncode_r0x004400f1:\n            puVar11 = puVar11 + 1;\n            goto code_r0x00440123;\n        case 0xb:\n            uVar7 = piVar9[4] != 0;\n            break;\n        case 0xc:\n            *puVar11 = piVar9;\n            goto code_r0x00440121;\n        default:\n            goto code_r0x00440123;\n        }\ncode_r0x0044011f:\n        *puVar11 = uVar7;\ncode_r0x00440121:\n        puVar11 = puVar11 + 4;\ncode_r0x00440123:\n        arg_10h = arg_10h + 1;\n        in_ECX = arg_8h;\n    } while( true );\n}\n",
        "token_count": 1627
    },
    "00440d43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00440d43(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0042f7a9();\n    pcVar5 = *0x454618;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[3] = pcVar5;\n    extraout_ECX[5] = *0x454618;\n    extraout_ECX[6] = *0x454618;\n    iVar2 = *(unaff_EBP + 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 3;\n    iVar4 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.COleDispatchException.0;\n    extraout_ECX[4] = -(iVar2 != 0) & iVar2 + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar4 != 0) {\n        fcn.0042abaa(*(unaff_EBP + 8));\n    }\n    uVar3 = *(unaff_EBP + -0xc);\n    extraout_ECX[7] = (-(iVar1 != 0) & 0x7fff0001) + 0x8000ffff;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 454
    },
    "00440fb7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440fb7(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoCreateInstance;\n    var_4h = NULL;\n    in_ECX[1] = 1;\n    var_8h = (*pcVar1)(arg_8h, 0, 0x17, 0x448e20, &var_4h);\n    if (var_8h == -0x7ff8ffa9) {\n        var_8h = (*pcVar1)(arg_8h, 0, 7, 0x448e20, &var_4h);\n    }\n    if ((-1 < var_8h) && (var_8h = (*_sym.imp.ole32.dll_OleRun)(var_4h),  -1 < var_8h)) {\n        iVar2 = fcn.0043d5d2(var_4h, 0x448df0);\n        *in_ECX = iVar2;\n        if (iVar2 != 0) {\n            (**(*var_4h + 8))(var_4h);\n            return 1;\n        }\n    }\n    fcn.0043d5f6(&var_4h);\n    if (arg_ch != 0) {\n        *(arg_ch + 8) = var_8h;\n    }\n    return 0;\n}\n",
        "token_count": 357
    },
    "004410a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004410a9(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "004410c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_68h\n\nvoid __cdecl fcn.004410c9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    code *pcVar10;\n    int16_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t *puVar14;\n    uint uVar15;\n    int32_t **extraout_ECX;\n    int32_t **ppiVar16;\n    int32_t iVar17;\n    int32_t unaff_EBP;\n    ulong *puVar18;\n    char *pcVar19;\n    uint *in_FS_OFFSET;\n    uint noname_1;\n    uint noname_0;\n    uint lpString2;\n    uint noname_3;\n    uint var_78h;\n    char *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint pvargDest;\n    uint pbstr;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint cchWideChar;\n    uint var_1ch;\n    uint lpMultiByteStr;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x4410d3;\n    fcn.0040f1f0();\n    piVar9 = *extraout_ECX;\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    if (piVar9 != NULL) {\n        var_6ch = 0x10;\n        fcn.0040f4c0(unaff_EBP + -0x4c, 0);\n        pcVar19 = *(unaff_EBP + 0x18);\n        if (pcVar19 == NULL) {\n            iVar12 = *(unaff_EBP + -0x44);\n        }\n        else {\n            var_6ch = pcVar19;\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            *(unaff_EBP + -0x44) = iVar12;\n        }\n        *(unaff_EBP + -0x1c) = 0xfffffffd;\n        if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n            *(unaff_EBP + -0x40) = 1;\n            *(unaff_EBP + -0x48) = unaff_EBP + -0x1c;\n        }\n        ppiVar16 = extraout_ECX;\n        if (iVar12 != 0) {\n            var_6ch = iVar12 << 4;\n            iVar12 = fcn.00429d0b();\n            *(unaff_EBP + -0x4c) = iVar12;\n            fcn.0040f4c0(iVar12, 0, *(unaff_EBP + -0x44) << 4);\n            cVar2 = *pcVar19;\n            *(unaff_EBP + -0x14) = pcVar19;\n            iVar12 = *(unaff_EBP + -0x44) * 0x10 + -0x10 + iVar12;\n            *(unaff_EBP + -0x10) = iVar12;\n            if (cVar2 != '\\0') {\n                puVar18 = iVar12 + 8;\n                *(unaff_EBP + -0x18) = puVar18;\n                iVar12 = *(unaff_EBP + 0x1c) + -4;\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -8;\n                do {\n                    puVar5 = *(unaff_EBP + -0x10);\n                    uVar3 = **(unaff_EBP + -0x14);\n                    *puVar5 = uVar3;\n                    if ((uVar3 & 0x40) != 0) {\n                        *puVar5 = CONCAT11(0x40, uVar3 & 0xbf);\n                    }\n                    uVar4 = *puVar5;\n                    if (0x4002 < uVar4) {\n    // switch table (15 cases) at 0x441574\n                        switch(uVar4) {\n                        case 0x4003:\n                        case 0x4004:\n                        case 0x4005:\n                        case 0x4006:\n                        case 0x4007:\n                        case 0x4008:\n                        case 0x4009:\n                        case 0x400a:\n                        case 0x400c:\n                        case 0x400d:\n                        case 0x4011:\n                            goto code_r0x00441309;\n                        case 0x400b:\n                            puVar14 = *(iVar12 + 4);\n                            *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                            *puVar14 = -(*puVar14 != 0) & 0xffff;\n                            break;\n                        default:\n                            goto code_r0x00441313;\n                        }\ncode_r0x00441311:\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = puVar14;\n                        goto code_r0x00441313;\n                    }\n                    if (uVar4 == 0x4002) {\ncode_r0x00441309:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar14 = *(iVar12 + 4);\n                        goto code_r0x00441311;\n                    }\n    // switch table (16 cases) at 0x441534\n                    switch(uVar4) {\n                    case 2:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar11 = *(iVar12 + 4);\n                        goto code_r0x004411d9;\n                    case 3:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                        goto code_r0x00441309;\n                    case 4:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        iVar12 = iVar12 + 8;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 5:\n                    case 7:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        iVar12 = iVar12 + 8;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 6:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar8 = *(iVar12 + 4);\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = *puVar8;\n                        *(puVar18 + 4) = puVar8[1];\n                        break;\n                    case 8:\n                        var_6ch = *(iVar12 + 4);\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = iVar12 + 4;\n                        *(unaff_EBP + -0x18) = var_6ch;\n                        iVar13 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                        iVar17 = *(unaff_EBP + -0x18);\n                        *puVar18 = iVar13;\n                        if ((iVar17 != 0) && (iVar13 == 0)) {\n                            var_6ch = 0x441249;\n                            fcn.00426584();\n                        }\n                        break;\n                    case 0xb:\n                        iVar17 = *(iVar12 + 4);\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar11 = -(iVar17 != 0);\ncode_r0x004411d9:\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = iVar11;\n                        break;\n                    case 0xc:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar8 = *(iVar12 + 4);\n                        puVar6 = *(unaff_EBP + -0x10);\n                        iVar12 = iVar12 + 4;\n                        *puVar6 = *puVar8;\n                        puVar6[1] = puVar8[1];\n                        puVar6[2] = puVar8[2];\n                        puVar6[3] = puVar8[3];\n                        puVar18 = *(unaff_EBP + -0x18);\n                        break;\n                    case 0xe:\n                        var_6ch = *(iVar12 + 4);\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = iVar12 + 4;\n                        *(unaff_EBP + -0x18) = var_6ch;\n                        if (var_6ch != NULL) {\n                            var_6ch = *(unaff_EBP + -0x18);\n                            iVar17 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                            *(unaff_EBP + -0x20) = iVar17 + 1;\n                            fcn.0040fca0();\n                            *(unaff_EBP + -0x24) = &fcn.004410c9::var_6ch;\n                            var_6ch = var_6ch & 0xffff0000;\n                            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                      (0, 0, *(unaff_EBP + -0x18), 0xffffffff, &fcn.004410c9::var_6ch, \n                                       *(unaff_EBP + -0x20));\n                            var_6ch = *(unaff_EBP + -0x24);\n                        }\n                        iVar13 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                        iVar17 = *(unaff_EBP + -0x18);\n                        *puVar18 = iVar13;\n                        if ((iVar17 != 0) && (iVar13 == 0)) {\n                            var_6ch = 0x4412ac;\n                            fcn.00426584();\n                        }\n                        **(unaff_EBP + -0x10) = 8;\n                        break;\n                    case 0x11:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar1 = iVar12 + 4;\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = *puVar1;\n                    }\ncode_r0x00441313:\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x10;\n                    puVar18 = puVar18 + -2;\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                    *(unaff_EBP + -0x18) = puVar18;\n                } while (**(unaff_EBP + -0x14) != '\\0');\n                ppiVar16 = *(unaff_EBP + -0x28);\n                pcVar19 = *(unaff_EBP + 0x18);\n            }\n        }\n        var_6ch = unaff_EBP + -0x3c;\n        fcn.00403a4b();\n        fcn.0040f4c0(unaff_EBP + -0x6c, 0, 0x20);\n        piVar9 = *ppiVar16;\n        *(unaff_EBP + -0x2c) = 0xffffffff;\n        iVar12 = unaff_EBP + -0x4c;\n        noname_3 = *(unaff_EBP + 0xc);\n        lpString2 = 0;\n        noname_0 = 0x449d60;\n        noname_1 = *(unaff_EBP + 8);\n        uVar15 = (**(*piVar9 + 0x18))(piVar9);\n        *(unaff_EBP + 0x18) = uVar15;\n        if (*(unaff_EBP + -0x44) != 0) {\n            iVar17 = *(unaff_EBP + -0x44) * 0x10 + -0x10 + *(unaff_EBP + -0x4c);\n            cVar2 = *pcVar19;\n            while (cVar2 != '\\0') {\n                if ((*pcVar19 == '\\b') || (*pcVar19 == '\\x0e')) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar17);\n                }\n                iVar17 = iVar17 + -0x10;\n                pcVar19 = pcVar19 + 1;\n                cVar2 = *pcVar19;\n            }\n        }\n        fcn.00429d34(*(unaff_EBP + -0x4c));\n        if (*(unaff_EBP + 0x18) < 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x3c);\n            if (*(unaff_EBP + 0x18) != -0x7ffdfff7) {\n                noname_0 = *(unaff_EBP + 0x18);\n                fcn.0043c41e(noname_0, noname_0, lpString2, noname_3, iVar12);\n            }\n            if (*(unaff_EBP + -0x54) != 0) {\n                (**(unaff_EBP + -0x54))(unaff_EBP + -0x6c);\n            }\n            iVar12 = fcn.00429d0b(0x20);\n            *(unaff_EBP + 0x14) = iVar12;\n            *(unaff_EBP + -4) = 0;\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                noname_0 = 0;\n                iVar12 = fcn.00440d43(0, 0, *(unaff_EBP + -0x6c));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            pcVar10 = _sym.imp.OLEAUT32.dll_SysStringLen;\n            if (*(unaff_EBP + -0x68) != 0) {\n                fcn.0042abd1(*(unaff_EBP + -0x68));\n                (*pcVar10)(*(unaff_EBP + -0x68));\n            }\n            if (*(unaff_EBP + -100) != 0) {\n                fcn.0042abd1(*(unaff_EBP + -100));\n                (*pcVar10)(*(unaff_EBP + -100));\n            }\n            if (*(unaff_EBP + -0x60) != 0) {\n                fcn.0042abd1(*(unaff_EBP + -0x60));\n                (*pcVar10)(*(unaff_EBP + -0x60));\n            }\n            noname_1 = 0x44f340;\n            *(iVar12 + 0x10) = *(unaff_EBP + -0x5c);\n            *(iVar12 + 0x1c) = *(unaff_EBP + -0x50);\n            *(unaff_EBP + 0x14) = iVar12;\n            fcn.0040fc5c(unaff_EBP + 0x14, 0x44f340);\n        }\n        uVar7 = *(unaff_EBP + 0x10);\n        if (uVar7 != 0) {\n            if ((uVar7 != 0xc) &&\n               (iVar12 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)\n                                   (unaff_EBP + -0x3c, unaff_EBP + -0x3c, 0, uVar7),  iVar12 < 0)) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x3c);\n                fcn.0043c41e(iVar12, noname_1, noname_0, lpString2, noname_3);\n            }\n    // switch table (16 cases) at 0x4415b0\n            switch(uVar7 & 0xffff) {\n            case 2:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34);\n                break;\n            case 3:\n            case 4:\n            case 9:\n            case 10:\n            case 0xd:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34);\n                break;\n            case 5:\n            case 6:\n            case 7:\n                puVar8 = *(unaff_EBP + 0x14);\n                *puVar8 = *(unaff_EBP + -0x34);\n                puVar8[1] = *(unaff_EBP + -0x30);\n                break;\n            case 8:\n                fcn.0043b5c9(*(unaff_EBP + 0x14), *(unaff_EBP + -0x34));\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x34));\n                break;\n            case 0xb:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34) != 0;\n                break;\n            case 0xc:\n                puVar8 = *(unaff_EBP + 0x14);\n                *puVar8 = *(unaff_EBP + -0x3c);\n                puVar8[1] = *(unaff_EBP + -0x38);\n                puVar8[2] = *(unaff_EBP + -0x34);\n                puVar8[3] = *(unaff_EBP + -0x30);\n                break;\n            case 0x11:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34);\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 4331
    },
    "00441774": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441774(int32_t param_1)\n\n{\n    if (*(param_1 + 0x1c) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(param_1 + 0x1c) = 0;\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "004417e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004417e5(int32_t param_1)\n\n{\n    if (*(param_1 + 0x42) != '\\0') {\n        if (*(param_1 + 0x20) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)(*(param_1 + 0x20));\n            *(param_1 + 0x20) = 0;\n        }\n        *(param_1 + 0x42) = 0;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00441831": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00441831(void)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDocManager.0;\n    puVar1 = extraout_ECX[2];\n    *(unaff_EBP + -4) = 1;\n    while (puVar3 = puVar1,  puVar3 != NULL) {\n        puVar1 = *puVar3;\n        piVar2 = puVar3[2];\n        if ((piVar2[7] != 0) && (fcn.004288aa(puVar3),  piVar2 != NULL)) {\n            (**(*piVar2 + 4))(1);\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004286b0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 326
    },
    "004015e0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t fcn.004015e0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint unaff_EBX;\n    uint *puVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    iVar1 = param_2;\n    if ((0 < param_2) && (param_2 < 0x11)) {\n        uStack20 = 0;\n        uStack24 = 1;\n        uStack28 = 0;\n        puStack36 = &stack0x00000008;\n        uStack32 = 0;\n        param_2 = 0;\n        puStack40 = 0x401610;\n        iVar2 = (**0x4572f4)();\n        if (iVar2 == 0) {\n            puStack40 = 0x8;\n            uStack44 = 1;\n            uStack48 = 0;\n            iVar2 = (**0x4572f4)(&stack0xfffffff4, 0);\n            if (iVar2 == 0) {\n                puStack40 = 0x8;\n                uStack44 = 1;\n                uStack48 = 0;\n                in_EAX = (**0x4572f4)(&stack0xfffffff4, 0);\n                if (in_EAX == 0) goto code_r0x00401702;\n            }\n        }\n        puStack40 = &stack0xffffffe4;\n        uStack44 = 0;\n        uStack48 = 0;\n        puVar8 = 0x134;\n        uVar7 = 0x454120;\n        uStack28 = 0;\n        in_EAX = (**0x4572f8)(unaff_EBX, 0x454120);\n        if (in_EAX != 0) {\n            iVar2 = 0;\n            if (0 < iVar1) {\n                puVar3 = puStack40 + iVar1 + -1;\n                do {\n                    *(iVar2 + 0x454260) = *puVar3;\n                    iVar2 = iVar2 + 1;\n                    puVar3 = puVar3 + -1;\n                } while (iVar2 < iVar1);\n            }\n            *(iVar1 + 0x454260) = 0;\n            if (iVar1 + 1 < 0x3e) {\n                uVar4 = 0x3e - (iVar1 + 1);\n                puVar6 = iVar1 + 0x454261;\n                for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                    *puVar6 = 0x1010101;\n                    puVar6 = puVar6 + 1;\n                }\n                for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *puVar6 = 1;\n                    puVar6 = puVar6 + 1;\n                }\n            }\n            uStack48 = 0;\n            puVar6 = puVar8;\n            in_EAX = (**0x4572f8)(puStack36, 0x454254, 0x4c, puVar8, 0, &stack0xffffffd0);\n            if (in_EAX != 0) {\n                uVar5 = (**0x4572fc)(puVar8, 0, 1, 0, uVar7, puVar6, *puVar6);\n                return uVar5 & 0xffffff00 | uVar5 != 0;\n            }\n        }\n    }\ncode_r0x00401702:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 903
    },
    "00401710": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid fcn.00401710(uint param_1, uint param_2, ushort param_3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint *puVar9;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, param_3, 10);\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar2);\n    _pe_dos_header = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, uVar2);\n    puVar4 = (**0x4572e8)(uVar3);\n    puVar9 = _pe_dos_header;\n    puVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0, _pe_dos_header, 0x3000, 0x40, 0);\n    puVar6 = (**0x4572ec)();\n    puVar8 = puVar6;\n    for (uVar7 = _pe_dos_header >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar8 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar7 = _pe_dos_header & 3; pcVar1 = _sym.imp.USER32.dll_ShowWindow,  uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar8 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    (*pcVar1)(0);\n    *puVar9 = puVar6;\n    if (_pe_dos_header < 0x39) {\n        _pe_dos_header = puVar5;\n    }\n    (*pcVar1)(0, 0);\n    (*pcVar1)(0, 0);\n    (*pcVar1)(0, 0);\n    return;\n}\n",
        "token_count": 504
    },
    "004252b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004252b0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    uint *puVar8;\n    uint32_t uStack4;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, iVar1);\n    puVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, iVar1);\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    puVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar2);\n    if (puVar4 == NULL) {\n        return 0;\n    }\n    puVar8 = puVar4;\n    for (uVar7 = uVar2 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    puVar4[10] = 0x20000;\n    puVar4[0x11] = (unaff_EDI >> 8 & 0xff) << 8 | unaff_EDI >> 0x10 & 0xff | (unaff_EDI & 0xff) << 0x10;\n    puVar4[0x12] = (unaff_EBP >> 8 & 0xff) << 8 | unaff_EBP >> 0x10 & 0xff | (unaff_EBP & 0xff) << 0x10;\n    puVar4[0x19] = (unaff_ESI >> 8 & 0xff) << 8 | (unaff_ESI & 0xff) << 0x10 | unaff_ESI >> 0x10 & 0xff;\n    puVar4[0x15] = (unaff_EBX >> 8 & 0xff) << 8 | (unaff_EBX & 0xff) << 0x10 | unaff_EBX >> 0x10 & 0xff;\n    puVar4[0x14] = (uStack4 >> 8 & 0xff) << 8 | (uStack4 & 0xff) << 0x10 | uStack4 >> 0x10 & 0xff;\n    uVar5 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar6 = (*_sym.imp.GDI32.dll_CreateDIBitmap)(uVar5, puVar4, 4, puVar4 + 0x1a, puVar4, 0);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar5);\n    (*_sym.imp.KERNEL32.dll_GlobalFree)(puVar4);\n    return uVar6;\n}\n",
        "token_count": 815
    },
    "00407927": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407927(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar2 = (**(*arg_8h + 0x3c))();\n    do {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        if (*(puVar2[1] + 0x18) != -1) {\n            iVar3 = puVar2[1];\n            do {\n                if ((*(iVar3 + 4) == arg_10h[1]) && (*(iVar3 + 0x18) == (*arg_10h != 0))) {\n                    if (*(iVar3 + 0x24) == 0xffffffff) {\n                        if (*(iVar3 + 0x20) == 0xffffffff) {\n                            return iVar3;\n                        }\n                        if (*(iVar3 + 0x20) == arg_ch) {\n                            return iVar3;\n                        }\n                    }\n                    else if ((*(iVar3 + 0x20) < arg_ch || *(iVar3 + 0x20) == arg_ch) && (arg_ch <= *(iVar3 + 0x24))) {\n                        return iVar3;\n                    }\n                }\n                piVar1 = iVar3 + 0x40;\n                iVar3 = iVar3 + 0x28;\n            } while (*piVar1 != -1);\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 347
    },
    "0040a059": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040a059(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar1 = *(unaff_EBP + 0xc);\n    if ((iVar1 == 0) || (*(unaff_EBP + 8) == -1)) {\n        iVar1 = *(extraout_ECX + 0x8c);\n        *(unaff_EBP + -0x10) = 0;\n        while (iVar1 != 0) {\n            iVar3 = fcn.0040cf0e();\n            if (((*(unaff_EBP + 8) == -1) || (*(iVar1 + 8) == *(unaff_EBP + 8))) &&\n               ((*(unaff_EBP + 0xc) == 0 || (*(*(unaff_EBP + 0xc) + 0x38) == *(iVar1 + 0xc))))) {\n                if (*(unaff_EBP + -0x10) == 0) {\n                    *(extraout_ECX + 0x8c) = iVar3;\n                }\n                else {\n                    *(*(unaff_EBP + -0x10) + 0x18) = iVar3;\n                }\n                if ((*(iVar1 + 0xc) != 0) && (piVar2 = *(*(iVar1 + 0xc) + 0x88),  piVar2 != NULL)) {\n                    (**(*piVar2 + 4))(iVar1, 0);\n                }\n                if (iVar1 != 0) {\n                    fcn.00429d34(iVar1);\n                }\n            }\n            iVar1 = iVar3;\n            if (*(unaff_EBP + -0x10) != 0) {\n                uVar4 = fcn.0040cf0e();\n                *(unaff_EBP + -0x10) = uVar4;\n            }\n        }\n    }\n    else {\n        iVar3 = fcn.00429d0b(0x1c);\n        *(unaff_EBP + 0xc) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0040cecb(*(extraout_ECX + 0x8c), *(unaff_EBP + 8), 0);\n        }\n        *(extraout_ECX + 0x8c) = iVar3;\n        *(iVar3 + 0xc) = *(iVar1 + 0x38);\n        piVar2 = *(extraout_ECX + 0x8c);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *piVar2 = extraout_ECX;\n        (**(**(*(extraout_ECX + 0x8c) + 0xc) + 0xb0))();\n        (**(**(*(*(extraout_ECX + 0x8c) + 0xc) + 0x88) + 4))(*(extraout_ECX + 0x8c), 1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 823
    },
    "0040e4b8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040e4b8(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 4) == -1) || (*(param_1 + 4) != param_2)) {\n        *param_3 = 0;\n        uVar1 = 0;\n    }\n    else {\n        *param_3 = *(param_1 + 8);\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "00428bbb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428bbb(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 == 0xffffffff) {\n        uVar4 = 0;\n        if (*(param_1 + 8) != 0) {\n            ppiVar1 = *(param_1 + 4);\n            do {\n                piVar3 = *ppiVar1;\n                if (piVar3 != NULL) break;\n                uVar4 = uVar4 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar4 < *(param_1 + 8));\n        }\n    }\n    piVar5 = *piVar3;\n    if (piVar5 == NULL) {\n        uVar4 = *(param_1 + 8);\n        uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n        if (uVar2 < uVar4) {\n            ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5 != NULL) break;\n                uVar2 = uVar2 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar2 < uVar4);\n        }\n    }\n    *param_2 = piVar5;\n    *param_3 = piVar3[1];\n    *param_4 = piVar3[2];\n    return;\n}\n",
        "token_count": 411
    },
    "0042aea0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042aea0(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.0042a9ca();\n    if (param_2 == -1) {\n        param_2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n    }\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 104
    },
    "004304b6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004304b6(uint lpFileName, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    uint uVar6;\n    uint var_110h;\n    uint lpSecurityAttributes;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    *(in_ECX + 8) = 0;\n    *(in_ECX + 4) = 0xffffffff;\n    fcn.0042a9ac();\n    fcn.00430b3e(&var_110h, lpFileName);\n    fcn.0042abaa(&var_110h);\n    uVar3 = 0;\n    uVar1 = arg_ch & 3;\n    if (uVar1 == 0) {\n        uVar3 = 0x80000000;\n    }\n    else if (uVar1 == 1) {\n        uVar3 = 0x40000000;\n    }\n    else if (uVar1 == 2) {\n        uVar3 = 0xc0000000;\n    }\n    uVar1 = arg_ch & 0x70;\n    uVar4 = 1;\n    if ((uVar1 != 0) && (uVar1 != 0x10)) {\n        uVar6 = uVar4;\n        if (uVar1 == 0x20) goto code_r0x0043054d;\n        if (uVar1 == 0x30) {\n            uVar6 = 2;\n            goto code_r0x0043054d;\n        }\n        if (uVar1 == 0x40) {\n            uVar6 = 3;\n            goto code_r0x0043054d;\n        }\n    }\n    uVar6 = 0;\ncode_r0x0043054d:\n    var_8h = 0;\n    var_4h = ~(arg_ch & 0xffff7fff) >> 7 & 1;\n    lpSecurityAttributes = 0xc;\n    if ((arg_ch & 0x1000) == 0) {\n        cVar5 = '\\x03';\n    }\n    else {\n        cVar5 = (-((arg_ch & 0x2000) != 0) & 2U) + 2;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, uVar3, uVar6, &lpSecurityAttributes, cVar5, 0x80, 0);\n    if (iVar2 == -1) {\n        if (arg_10h != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            *(arg_10h + 0xc) = uVar3;\n            uVar3 = fcn.004314ac(uVar3);\n            *(arg_10h + 8) = uVar3;\n            fcn.0042abaa(lpFileName);\n        }\n        uVar4 = 0;\n    }\n    else {\n        *(in_ECX + 4) = iVar2;\n        *(in_ECX + 8) = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 725
    },
    "004306d1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004306d1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.0042a9ac();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00431306(uVar2);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00430b3e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n\nuint __cdecl fcn.00430b3e(uint lpRootPathName, uint lpFileName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpFindFileData;\n    uint lpString2;\n    uint var_18h;\n    uint lpFilePart;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    uVar1 = *(unaff_EBP + 8);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(*(unaff_EBP + 0xc), 0x104, uVar1, unaff_EBP + -0x14);\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, *(unaff_EBP + 0xc), 0x104);\n        uVar3 = 0;\n    }\n    else {\n        *(unaff_EBP + 8) = *0x454618;\n        uVar3 = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.00430c0e(uVar1, unaff_EBP + 8);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                          (*(unaff_EBP + 8), 0, 0, 0, unaff_EBP + -0x18, unaff_EBP + -0x10, 0, 0);\n        if (iVar2 != 0) {\n            if ((*(unaff_EBP + -0x10) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(uVar1);\n            }\n            if ((*(unaff_EBP + -0x10) & 4) == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*(unaff_EBP + 0xc), unaff_EBP + -0x158);\n                if (iVar2 != -1) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(*(unaff_EBP + -0x14), unaff_EBP + -300);\n                }\n            }\n            uVar3 = 1;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0042aa21();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 601
    },
    "00433ed9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00433ed9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = *0x454618;\n    *(unaff_EBP + -4) = 0;\n    fcn.0042ed16(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    uVar1 = fcn.00433ea1(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042aa21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 327
    },
    "00434451": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434451(int32_t *arg_8h, uint arg_ch, uint *lParam)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.00433ffd(arg_ch);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*arg_8h == 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0x18c, 0xffffffff, *lParam);\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(uVar2, 0x188, 0, 0);\n        if (iVar3 == -1) {\n            fcn.0042a9ac();\n        }\n        else {\n            uVar4 = (*pcVar1)(uVar2, 0x18a, iVar3, 0);\n            uVar4 = fcn.0042aec8(uVar4);\n            (*pcVar1)(uVar2, 0x189, iVar3, uVar4);\n        }\n        fcn.0042aea0(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "00436ed0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00436ed0(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042b568();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0xdc))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[7], 0x362, 0xe001, 0);\n        (**(*param_1 + 200))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 148
    },
    "0043a26c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0043a26c(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar1;\n    if (iVar1 == -1) {\n        fcn.00426584();\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 + 7);\n    return param_1;\n}\n",
        "token_count": 181
    },
    "0043a2ae": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a2ae(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.0043a5bb(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 232
    },
    "0043fcb2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0043fcb2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (**(param_1 + 8) == -1) {\n        for (iVar1 = *(param_1 + 4); *(iVar1 + 0x18) != -1; iVar1 = iVar1 + 0x20) {\n        }\n        **(param_1 + 8) = iVar1 - *(param_1 + 4) >> 5;\n    }\n    return **(param_1 + 8);\n}\n",
        "token_count": 123
    },
    "0043fcdf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043fcdf(uint *arg_8h, uint lpString2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        if (arg_8h == NULL) {\n            return 0xffffffff;\n        }\n        puVar4 = arg_8h[1];\n        uVar1 = fcn.0043fcb2(arg_8h);\n        uVar3 = 0;\n        if (uVar1 != 0) {\n            do {\n                if ((*(puVar4 + 3) != 0xfff) &&\n                   (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(*puVar4, lpString2),  iVar2 == 0)) {\n                    if (puVar4[1] != 0xffffffff) {\n                        return puVar4[1];\n                    }\n                    return var_4h << 0x10 | uVar3 + 1 & 0xffff;\n                }\n                puVar4 = puVar4 + 8;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar1);\n        }\n        arg_8h = *arg_8h;\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 321
    },
    "0043fd4b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043fd4b(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    bool bVar6;\n    \n    arg_8h_00 = (**(*arg_8h + 0x30))();\n    bVar6 = arg_ch == 0;\n    puVar5 = arg_8h_00;\n    if (bVar6) {\n        for (; puVar5 != NULL; puVar5 = *puVar5) {\n            for (puVar1 = puVar5[1]; puVar1[6] != -1; puVar1 = puVar1 + 8) {\n                if (*(puVar1 + 3) == 0xfff) {\n                    arg_ch = puVar1[1];\n                    if ((arg_ch == 0xffffffff) && (arg_ch = fcn.0043fcdf(arg_8h_00, *puVar1),  arg_ch == 0xffffffff)) {\n                        return 0;\n                    }\n                    bVar6 = arg_ch == 0;\n                    goto code_r0x0043fda2;\n                }\n            }\n        }\n    }\n    else {\ncode_r0x0043fda2:\n        if ((!bVar6 && -1 < arg_ch) && (uVar3 = 0,  arg_8h_00 != NULL)) {\n            puVar5 = arg_8h_00;\n            do {\n                if (arg_ch >> 0x10 <= uVar3) break;\n                puVar5 = *puVar5;\n                uVar3 = uVar3 + 1;\n            } while (puVar5 != NULL);\n            if (puVar5 != NULL) {\n                uVar4 = arg_ch & 0xffff;\n                uVar3 = fcn.0043fcb2(puVar5);\n                if (uVar4 <= uVar3) {\n                    uVar3 = *(puVar5[1] + (uVar4 * 8 + -7) * 4);\n                    iVar2 = puVar5[1] + (uVar4 * 8 + -8) * 4;\n                    if (uVar3 == 0xffffffff) {\n                        return iVar2;\n                    }\n                    if (uVar3 == arg_ch) {\n                        return iVar2;\n                    }\n                }\n            }\n        }\n    }\n    do {\n        if (arg_8h_00 == NULL) {\n            return 0;\n        }\n        for (iVar2 = arg_8h_00[1]; *(iVar2 + 0x18) != -1; iVar2 = iVar2 + 0x20) {\n            if (*(iVar2 + 4) == arg_ch) {\n                return iVar2;\n            }\n        }\n        arg_8h_00 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 667
    },
    "00422780": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422780(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint16_t extraout_var;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puVar5;\n    \n    iVar2 = fcn.00421c00(param_1);\n    if (iVar2 == 0) {\n        fcn.00423910(param_1, param_2, 0, param_3);\n        return;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetPropA)(param_1, *0x45af74);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        uVar4 = 0x1944;\n        uVar3 = param_1;\n        puVar5 = &stack0xfffffff4;\n        (*_sym.imp.USER32.dll_SendMessageA)(param_1, 0x1944, 0);\n        if (puVar5 == 0x29a) {\n            (*pcVar1)(param_1, 0x1943, 0);\n            if (&stack0xfffffff4 == 0x29a) {\n                (*_sym.imp.USER32.dll_RemovePropA)(param_1, *0x45af6e);\n                fcn.00423910(param_1, uVar3 & 0xffff | extraout_var << 0x10, 0, uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00431456": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00431456(int32_t param_1)\n\n{\n    uint uStack4;\n    \n    if (param_1 < 0x17) {\n        if (param_1 == 0x16) {\n            return 10;\n        }\n        if (param_1 != 1) {\n            if (param_1 == 2) goto code_r0x004314a6;\n            if (param_1 == 5) {\n                return 10;\n            }\n            if (param_1 == 9) {\n                return 6;\n            }\n            if (param_1 != 0xd) {\n                return 1;\n            }\n        }\n        uStack4 = 5;\n    }\n    else {\n        if (param_1 != 0x17) {\n            if (param_1 == 0x18) {\n                return 4;\n            }\n            if (param_1 != 0x1c) {\n                if (param_1 != 0x24) {\n                    return 1;\n                }\n                return 0xb;\n            }\n            return 0xd;\n        }\ncode_r0x004314a6:\n        uStack4 = 2;\n    }\n    return uStack4;\n}\n",
        "token_count": 266
    },
    "0043c82c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nuint32_t __cdecl fcn.0043c82c(uint arg_8h, int32_t *lpWideCharStr, int32_t *lpNewFileName)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uint var_5ch;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_4h;\n    \n    piVar1 = lpNewFileName;\n    if (*lpWideCharStr != 0) goto code_r0x0043c950;\n    iVar4 = *lpNewFileName;\n    if (iVar4 == 1) {\ncode_r0x0043c94b:\n        *lpWideCharStr = iVar4;\n    }\n    else {\n        if (iVar4 == 2) {\n            *lpWideCharStr = 2;\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            iVar5 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(iVar4 * 2);\n            lpWideCharStr[1] = iVar5;\n            if (iVar5 != 0) {\n                fcn.0040f660(iVar5, lpNewFileName[1], iVar4 * 2 + 2);\n                return 1;\n            }\n            return 0;\n        }\n        if (iVar4 == 4) {\n            piVar1 = lpNewFileName[1];\n            lpWideCharStr[1] = piVar1;\n            (**(*piVar1 + 4))();\n            *lpWideCharStr = 4;\n            return 1;\n        }\n        if (iVar4 == 8) {\n            piVar1 = lpNewFileName[1];\n            lpWideCharStr[1] = piVar1;\n            (**(*piVar1 + 4))();\n            *lpWideCharStr = 8;\n            return 1;\n        }\n        if (iVar4 != 0x10) {\n            if (iVar4 == 0x20) {\n                iVar4 = fcn.0043c7be(0, lpNewFileName[1]);\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n                iVar3 = (*_sym.imp.GDI32.dll_CopyMetaFileA)(*(iVar5 + 0xc), 0);\n                *(iVar5 + 0xc) = iVar3;\n                if (iVar3 == 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar4);\n                    return 0;\n                }\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n                lpWideCharStr[1] = iVar4;\n                *lpWideCharStr = 0x20;\n                return 1;\n            }\n            if (iVar4 != 0x40) {\n                return 0;\n            }\n            goto code_r0x0043c94b;\n        }\n        *lpWideCharStr = 0x10;\n    }\n    lpWideCharStr[1] = 0;\ncode_r0x0043c950:\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar4 = *lpNewFileName;\n    if (iVar4 == 1) {\n        iVar4 = fcn.0043c7be(lpWideCharStr[1], lpNewFileName[1]);\n        if (iVar4 != 0) {\n            lpWideCharStr[1] = iVar4;\n            return 1;\n        }\n    }\n    else {\n        if (iVar4 == 2) {\n            iVar4 = lpWideCharStr[1];\n            if (iVar4 == 0) {\n                lpNewFileName = NULL;\n            }\n            else {\n                lpNewFileName = &stack0xffffff9c;\n                iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                fcn.0040fca0();\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                          (0, 0, iVar4, 0xffffffff, &stack0xffffff9c, iVar5 * 2 + 2, 0, 0);\n            }\n            iVar4 = piVar1[1];\n            if (iVar4 == 0) {\n                puVar7 = NULL;\n            }\n            else {\n                puVar7 = &stack0xffffff9c;\n                iVar5 = (*pcVar2)();\n                fcn.0040fca0();\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                          (0, 0, iVar4, 0xffffffff, &stack0xffffff9c, iVar5 * 2 + 2, 0, 0);\n            }\n            uVar6 = (*_sym.imp.KERNEL32.dll_CopyFileA)(puVar7, lpNewFileName);\n            return uVar6;\n        }\n        if (iVar4 == 4) {\n            iVar4 = (**(*lpNewFileName[1] + 0x30))(lpNewFileName[1], &var_50h);\n            if (iVar4 == 0) {\n                var_4h = 0;\n                (**(*lpWideCharStr[1] + 0x14))(lpWideCharStr[1], 0, 0, 0, 0);\n                (**(*lpNewFileName[1] + 0x14))(lpNewFileName[1], 0, 0, 0, 0);\n                iVar4 = (**(*lpNewFileName[1] + 0x1c))(lpNewFileName[1], lpWideCharStr[1], var_48h, var_44h, 0, 0);\n                if (iVar4 == 0) {\n                    (**(*lpWideCharStr[1] + 0x14))(lpWideCharStr[1], 0, 0, 0, 0);\n                    (**(*lpNewFileName[1] + 0x14))(lpNewFileName[1], 0, 0, 0, 0);\n                    return 1;\n                }\n            }\n        }\n        else {\n            if (iVar4 == 8) {\n                iVar4 = (**(*lpNewFileName[1] + 0x1c))(lpNewFileName[1], 0, 0, 0);\n                return iVar4 == 0;\n            }\n            if (((iVar4 == 0x10) || (iVar4 == 0x40)) && (lpWideCharStr[1] == 0)) {\n                iVar4 = (*_sym.imp.ole32.dll_OleDuplicateData)(lpNewFileName[1], arg_8h);\n                lpWideCharStr[1] = iVar4;\n                return iVar4 != 0;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1540
    },
    "004401d7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nint32_t __cdecl\nfcn.004401d7(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint arg_8h)\n\n{\n    uint *puVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    int32_t *piVar6;\n    int32_t unaff_EBP;\n    uint32_t uVar7;\n    uint *in_FS_OFFSET;\n    float10 fVar8;\n    uint lpString;\n    uint pvargDest;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_20h;\n    uint var_11h;\n    uint var_44h;\n    uint uStack60;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h_2;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x11) = 0;\n    iVar5 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    iVar3 = *(iVar5 + 8);\n    *(unaff_EBP + -0x10) = &var_34h;\n    *(unaff_EBP + 8) = iVar3;\n    if (iVar3 == 0) {\n        *(unaff_EBP + 8) = unaff_EBP + -0x11;\n    }\n    uStack60 = *(unaff_EBP + 8);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    *(unaff_EBP + -0x1c) = *(iVar5 + 0x10);\n    *(unaff_EBP + -0x18) = *(iVar5 + 0xc);\n    if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n        fcn.0040fca0();\n        fcn.0040f660(&uStack60, *(unaff_EBP + 8), iVar3);\n        iVar2 = *(iVar5 + 0xc);\n        *(unaff_EBP + 8) = &uStack60;\n        if (iVar2 == 8) {\n            iVar2 = 0xe;\n        }\n        *(&uStack60 + iVar3) = 0xff;\n        *(&uStack60 + iVar3 + 1) = iVar2;\n        *(&uStack60 + iVar3 + 2) = 0;\n        uVar4 = *(iVar5 + 0x14);\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    fcn.0040fca0();\n    *(unaff_EBP + 0xc) = &uStack60;\n    if (*0x10 != 0x3c) {\n        fcn.0040f4c0(&uStack60);\n        uVar4 = fcn.0043ff15();\n        fcn.0040fca0();\n        if (*0x10 != 0x44) {\n            iVar5 = fcn.0043ff58(&stack0xffffffbc, *(unaff_EBP + 8), unaff_EBP + -0x34, *(unaff_EBP + -0x18), \n                                 *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), &uStack60);\n            piVar6 = NULL;\n            *(unaff_EBP + 0x18) = iVar5;\n            if (iVar5 == 0) {\n                iVar2 = *(unaff_EBP + -0x18);\n                *(unaff_EBP + -4) = 0;\n                if (iVar2 == 4) {\n                    fVar8 = fcn.00441682(*(unaff_EBP + -0x1c), &stack0xffffffbc, uVar4);\n                    *(unaff_EBP + 8) = fVar8;\n                    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n                }\n                else {\n                    if (iVar2 == 5) {\n                        fVar8 = fcn.00441682(*(unaff_EBP + -0x1c), &stack0xffffffbc, uVar4);\n                        *(unaff_EBP + -0x24) = fVar8;\n                    }\n                    else {\n                        if (iVar2 != 7) {\n                            piVar6 = fcn.00441682(*(unaff_EBP + -0x1c), &stack0xffffffbc, uVar4);\n                            goto code_r0x0044032d;\n                        }\n                        fVar8 = fcn.00441682(*(unaff_EBP + -0x1c), &stack0xffffffbc, uVar4);\n                        *(unaff_EBP + -0x24) = fVar8;\n                    }\n                    *(unaff_EBP + -0x34) = fVar8;\n                }\ncode_r0x0044032d:\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            iVar5 = *(unaff_EBP + 0x14);\n            uVar7 = 0;\n            if (*(iVar5 + 8) != 0) {\n                *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc);\n                do {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 0x10;\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < *(iVar5 + 8));\n            }\n            iVar5 = *(unaff_EBP + 0x18);\n            if (iVar5 != 0) goto code_r0x00440427;\n            puVar1 = *(unaff_EBP + 0x10);\n            if (puVar1 == NULL) {\n                iVar2 = *(unaff_EBP + -0x18);\n                if (iVar2 == 8) {\n                    if (piVar6 != NULL) {\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(piVar6);\n                    }\n                }\n                else if (iVar2 == 9) {\ncode_r0x0044040e:\n                    if (piVar6 != NULL) {\n                        (**(*piVar6 + 8))(piVar6);\n                    }\n                }\n                else if (iVar2 == 0xc) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x34);\n                }\n                else if (iVar2 == 0xd) goto code_r0x0044040e;\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x18);\n                *puVar1 = uVar7;\n    // switch table (17 cases) at 0x44043b\n                switch(uVar7 & 0xffff) {\n                case 3:\n                case 8:\n                case 9:\n                case 10:\n                case 0xd:\n                    puVar1[2] = piVar6;\n                    break;\n                case 4:\n                    puVar1[2] = *(unaff_EBP + -0x34);\n                    break;\n                case 5:\n                case 7:\n                    *(puVar1 + 2) = *(unaff_EBP + -0x34);\n                    break;\n                case 6:\n                    puVar1[2] = *(unaff_EBP + -0x34);\n                    puVar1[3] = *(unaff_EBP + -0x30);\n                    break;\n                case 0xb:\n                    piVar6 = -(piVar6 != NULL);\n                case 2:\n                    *(puVar1 + 2) = piVar6;\n                    break;\n                case 0xc:\n                    *puVar1 = *(unaff_EBP + -0x34);\n                    puVar1[1] = *(unaff_EBP + -0x30);\n                    puVar1[2] = *(unaff_EBP + -0x2c);\n                    puVar1[3] = *(unaff_EBP + -0x28);\n                    break;\n                case 0x12:\n                    *(puVar1 + 2) = piVar6;\n                }\n            }\n            iVar5 = 0;\n            goto code_r0x00440427;\n        }\n    }\n    iVar5 = -0x7ff8fff2;\ncode_r0x00440427:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar5;\n}\n",
        "token_count": 2101
    },
    "0040e959": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e959(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0041273e(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "004337c1": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nint32_t __cdecl\nfcn.004337c1(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x4337cb;\n    fcn.0040f1f0();\n    iVar3 = *(unaff_EBP + 0xc);\n    iVar4 = 0;\n    *(unaff_EBP + -0x10) = &fcn.004337c1::var_1ch;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    if (iVar3 < 0) {\n        iVar3 = -iVar3;\n    }\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -4) = 0;\n    do {\n        if (iVar3 <= iVar4) {\ncode_r0x0043385c:\n            *(iVar4 + iVar1) = 0;\n            *in_FS_OFFSET = *(unaff_EBP + -0xc);\n            return iVar1;\n        }\n        var_1ch = unaff_EBP + -0x11;\n        fcn.00404e9b();\n        cVar2 = *(unaff_EBP + -0x11);\n        if (cVar2 == '\\n') {\ncode_r0x0043381e:\n            if (*(unaff_EBP + 0xc) != iVar3) {\n                *(iVar4 + iVar1) = cVar2;\n                iVar4 = iVar4 + 1;\n            }\n            goto code_r0x0043385c;\n        }\n        if (cVar2 == '\\r') {\n            fcn.00404e9b(unaff_EBP + -0x11);\n            cVar2 = *(unaff_EBP + -0x11);\n            goto code_r0x0043381e;\n        }\n        *(iVar4 + iVar1) = cVar2;\n        iVar4 = iVar4 + 1;\n        *(unaff_EBP + -0x18) = iVar4;\n    } while( true );\n}\n",
        "token_count": 666
    },
    "00421c20": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t fcn.00421c20(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00421c00(param_1);\n    if (iVar1 == 0) {\n        iVar1 = *0x45ba50;\n        if (param_2 != 6) {\n            iVar1 = *(param_2 * 0x18 + 0x45b9c4);\n        }\n        (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x45af6e, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 139
    },
    "0043255e": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043255e(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_10h + 4);\n    if (uVar1 < 0x20c) {\n        if (uVar1 == 0x20b) {\n            fcn.00431def(&var_10h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x1e) {\n            (**(*arg_18h + 0x1c))();\n            return 1;\n        }\n        if (uVar1 == 0x103) {\n            (**(*arg_18h + 0x34))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x127) {\n            (**(*arg_18h + 0x20))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x12d) {\n            uVar5 = *(arg_ch + *(arg_10h + 6) * 4);\n            iVar3 = (*_sym.imp.GDI32.dll_GetObjectType)(uVar5);\n            if (iVar3 == 0) {\n                var_4h = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(arg_18h[1], var_4h);\n                var_8h = (*pcVar2)(arg_18h[1], uVar5);\n                if (var_8h == var_4h) {\n                    iVar3 = *arg_18h;\n                    uVar5 = fcn.00432b3c(uVar5);\n                    (**(iVar3 + 0x28))(uVar5);\n                    return 1;\n                }\n                (*pcVar2)(arg_18h[1], uVar4);\n                (*pcVar2)(arg_18h[1], var_8h);\n            }\n            else if (iVar3 == 6) {\n                iVar3 = *arg_18h;\n                uVar5 = fcn.00432b3c(uVar5);\n                (**(iVar3 + 0x28))(uVar5);\n                return 1;\n            }\n        }\n        else {\n            if (uVar1 == 0x201) {\n                (**(*arg_18h + 0x2c))(*(arg_10h + 6));\n                return 1;\n            }\n            if (uVar1 == 0x209) {\n                (**(*arg_18h + 0x30))(*(arg_10h + 6));\n                return 1;\n            }\n        }\n    }\n    else {\n        if (uVar1 == 0x20c) {\n            (**(*arg_18h + 0x48))(&var_40h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20d) {\n            (**(*arg_18h + 0x38))(&var_38h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20e) {\n            (**(*arg_18h + 0x40))(&var_30h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x211) {\n            (**(*arg_18h + 0x3c))(&var_28h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x410) {\n            (**(*arg_18h + 0x4c))(&var_20h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x412) {\n            (**(*arg_18h + 0x44))(&var_18h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n    }\n    (*_sym.imp.GDI32.dll_PlayMetaFileRecord)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return 1;\n}\n",
        "token_count": 1182
    },
    "00438720": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00438720(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x1c));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004339ae": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h_2\n\nint32_t * fcn.004339ae(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    code **ppcVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    uint arg_8h;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t extraout_ECX;\n    int32_t iVar9;\n    int32_t unaff_EBP;\n    uint *puVar10;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    uchar *lpMultiByteStr;\n    uint arg_14h;\n    uchar auStack812 [20];\n    uint lpString2;\n    uchar auStack552 [20];\n    uint lpString1;\n    uchar auStack292 [20];\n    uint var_10ch;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    char *pcStack16;\n    uint var_8h_2;\n    uint var_4h_2;\n    uint var_14h;\n    \n    var_14h = 0x4339b8;\n    fcn.0040f1f0();\n    pcStack16 = 0x10;\n    ppcVar4 = fcn.00429d0b();\n    *(unaff_EBP + -0x14) = ppcVar4;\n    *(unaff_EBP + -4) = 0;\n    if (ppcVar4 == NULL) {\n        ppcVar4 = NULL;\n    }\n    else {\n        pcStack16 = 0x4339d7;\n        fcn.0042f7a9();\n        ppcVar4[3] = *0x454618;\n        pcVar1 = *(unaff_EBP + 8);\n        pcStack16 = *(unaff_EBP + 0xc);\n        *(unaff_EBP + -4) = 2;\n        *ppcVar4 = vtable.CArchiveException.0;\n        ppcVar4[2] = pcVar1;\n        fcn.0042abaa();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x10) = ppcVar4;\n    piStack28 = 0x433a12;\n    fcn.0040fc5c(unaff_EBP + -0x10, 0x44f758);\n    iVar9 = 0;\n    puVar10 = *(extraout_ECX + 8);\n    piStack32 = NULL;\n    piStack28 = NULL;\n    pcVar5 = pcStack16;\n    if (*pcStack16 == '\\\"') {\n        pcVar5 = pcStack16 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(&stack0xfffffdd8, pcVar5, 0x104);\n    puVar6 = fcn.0041217a(&stack0xfffffdd8, 0x22);\n    if (puVar6 != NULL) {\n        *puVar6 = 0;\n    }\n    fcn.00430b3e(&stack0xfffffedc, &stack0xfffffdd8);\n    puVar6 = &stack0xfffffcd4;\n    arg_14h = 0x104;\n    lpMultiByteStr = &stack0xfffffedc;\n    arg_8h = fcn.00402330();\n    iVar7 = fcn.00430a1c(arg_8h, lpMultiByteStr, puVar6, arg_14h);\n    if (iVar7 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&stack0xfffffedc, &stack0xfffffcd4);\n    }\n    do {\n        if (puVar10 == NULL) break;\n        puVar2 = *puVar10;\n        piVar8 = puVar10[2];\n        iVar7 = (**(*piVar8 + 0x68))(&stack0xfffffedc, &stack0xffffffe4);\n        if (iVar9 < iVar7) {\n            iVar9 = iVar7;\n            piStack32 = piVar8;\n        }\n        puVar10 = puVar2;\n    } while (iVar7 != 5);\n    if (piStack28 == NULL) {\n        if (piStack32 == NULL) {\n            fcn.00433ed9(0xf101, 0, 0xffffffff);\n            piStack28 = NULL;\n        }\n        else {\n            piStack28 = (**(*piStack32 + 0x80))(&stack0xfffffedc, 1);\n        }\n    }\n    else {\n        pcStack16 = (**(*piStack28 + 0x60))();\n        if (pcStack16 != NULL) {\n            (**(*piStack28 + 100))(&stack0xfffffff0);\n            piVar8 = fcn.0042ccb1();\n            if (piVar8 != NULL) {\n                (**(*piVar8 + 0xcc))(0xffffffff);\n            }\n            iVar9 = fcn.00439e31();\n            piVar3 = *(*(iVar9 + 4) + 0x1c);\n            if (piVar8 != piVar3) {\n                (**(*piVar3 + 0xcc))(0xffffffff);\n            }\n        }\n    }\n    return piStack28;\n}\n",
        "token_count": 1206
    },
    "0040db0d": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.0040db0d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x400, 0, 0);\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar1 = uVar1 & 0xffff;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "00429584": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.00429584(int32_t param_1)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((((*(param_1 + 4) == 0x100) && (*(param_1 + 8) == 0x70)) && ((*(param_1 + 0xc) >> 0x10 & 0x4000) == 0)) &&\n       (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x10),  -1 < iVar2 && (iVar2 = (*pcVar1)(0x11),  -1 < iVar2)) &&\n        (iVar2 = (*pcVar1)(0x12),  -1 < iVar2)))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 189
    },
    "0042aa8f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042aa8f(uint *param_1, uint32_t param_2)\n\n{\n    int32_t arg_10h;\n    \n    *param_1 = *0x454618;\n    if (param_2 != 0) {\n        if (param_2 >> 0x10 == 0) {\n            fcn.0042ed16(param_2 & 0xffff);\n        }\n        else {\n            arg_10h = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2);\n            if (arg_10h != 0) {\n                fcn.0042a88e(arg_10h);\n                fcn.0040f660(*param_1, param_2, arg_10h);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 181
    },
    "0042b533": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0042b533(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043a6ad(0x4397b6);\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x44) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x48) = uVar2;\n    *(iVar1 + 0x4c) = uVar2 >> 0x10;\n    return iVar1 + 0x34;\n}\n",
        "token_count": 142
    },
    "0042b6e3": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0042b6e3(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint hWnd)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint Msg;\n    uint wParam;\n    uint lParam;\n    uint var_10h;\n    uint var_30h;\n    uint var_1ch;\n    uint lpPrevWndFunc;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    uVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffb4;\n    uVar1 = (*_sym.imp.USER32.dll_GetPropA)(uVar2, \"AfxOldWndProc423\");\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = uVar1;\n    iVar3 = *(unaff_EBP + 0xc);\n    bVar4 = true;\n    if (iVar3 == 6) {\n        uVar1 = fcn.0042b601(*(unaff_EBP + 0x14));\n        arg_8h = fcn.0042b601(uVar2);\n        fcn.0042b369(arg_8h, *(unaff_EBP + 0x10), uVar1);\ncode_r0x0042b7e7:\n        if (!bVar4) goto code_r0x0042b774;\n    }\n    else {\n        if (iVar3 == 0x20) {\n            uVar1 = fcn.0042b601(uVar2);\n            iVar3 = fcn.0042b3ca(uVar1, *(unaff_EBP + 0x14), *(unaff_EBP + 0x14) >> 0x10);\n            bVar4 = iVar3 == 0;\n            goto code_r0x0042b7e7;\n        }\n        if (iVar3 == 0x82) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(uVar2, 0xfffffffc, *(unaff_EBP + -0x18));\n            (*_sym.imp.USER32.dll_RemovePropA)(uVar2, \"AfxOldWndProc423\");\n            uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFindAtomA)(\"AfxOldWndProc423\");\n            (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar1);\n        }\n        else if (iVar3 == 0x110) {\n            uVar1 = fcn.0042b601(uVar2);\n            fcn.0042b2cd(uVar1, unaff_EBP + -0x30, unaff_EBP + -0x1c);\n            uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                              (*(unaff_EBP + -0x18), uVar2, 0x110, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n            *(unaff_EBP + -0x14) = uVar2;\n            fcn.0042b2f0(uVar1, unaff_EBP + -0x30);\n            goto code_r0x0042b774;\n        }\n    }\n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                      (*(unaff_EBP + -0x18), uVar2, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x14) = uVar2;\ncode_r0x0042b774:\n    uVar2 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 1017
    },
    "0042cbab": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042cbab(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.0042cb78();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x0042cbef:\n            uVar1 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.0043a6ad(0x4397b6);\n        if ((*(iVar2 + 0xb8) != in_ECX[7]) && (iVar2 = fcn.0042d582(arg_ch, 0),  iVar2 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x0042cbef;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 364
    },
    "0042d681": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d681(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.004298eb(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0042d715;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.004298eb(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0042d715:\n        uVar1 = fcn.0042c606(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if ((0x131 < arg_8h) && (arg_8h < 0x139)) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.0042c606(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 533
    },
    "0042fc1c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042fc1c(uint lpString2, uint nNumber, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t var_80h;\n    uint var_70h;\n    uint var_69h;\n    uint lpString1;\n    int32_t lptm;\n    int32_t var_34h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n    fcn.0040f4c0(&var_80h, 0, 0x3c);\n    uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a, 0x48);\n    var_80h = (*_sym.imp.KERNEL32.dll_MulDiv)(nNumber, uVar4);\n    var_70h = 400;\n    var_80h = -var_80h;\n    var_69h._0_1_ = 1;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, lpString2);\n    iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_80h);\n    pcVar2 = _sym.imp.USER32.dll_GetDialogBaseUnits;\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    if (iVar5 == 0) {\n        uVar6 = (*_sym.imp.USER32.dll_GetDialogBaseUnits)();\n        uVar6 = uVar6 & 0xffff;\n        uVar7 = (*pcVar2)();\n        uVar7 = uVar7 >> 0x10;\n    }\n    else {\n        uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(uVar3, iVar5);\n        (*_sym.imp.GDI32.dll_GetTextMetricsA)(uVar3, &lptm);\n        uVar7 = var_34h + lptm;\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)\n                  (uVar3, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 0x34, &var_ch);\n        var_4h = (var_ch + 0x1a) / 0x34;\n        (*pcVar1)(uVar3, uVar4);\n        (*_sym.imp.GDI32.dll_DeleteObject)(iVar5);\n        uVar6 = var_4h;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_10h, uVar6, 4);\n    *arg_18h = uVar3;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_14h, uVar7, 8);\n    arg_18h[1] = uVar3;\n    return;\n}\n",
        "token_count": 704
    },
    "0043984a": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0043984a(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint lpvBits;\n    int32_t nHeight;\n    int32_t var_8h;\n    uint8_t *var_4h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar5 = uVar2;\n    nHeight = uVar2 >> 0x10;\n    if (0x20 < iVar5) {\n        iVar5 = 0x20;\n    }\n    iVar6 = iVar5 + 0xf >> 4;\n    iVar7 = ((iVar5 + -4) / 2 + iVar6 * 0x10) - iVar5;\n    if (0xc < iVar7) {\n        iVar7 = 0xc;\n    }\n    if (0x20 < nHeight) {\n        nHeight = 0x20;\n    }\n    fcn.0040f4c0(&lpvBits, 0xff, 0x80);\n    var_4h = 0x444ebc;\n    var_8h = 5;\n    puVar4 = &lpvBits + (nHeight + -6 >> 1) * iVar6 * 2;\n    do {\n        uVar1 = *var_4h;\n        uVar3 = var_4h & 0xffff0000;\n        var_4h = var_4h + 1;\n        uVar3 = ~((uVar3 | uVar1) << (iVar7 & 0x1f));\n        puVar4[1] = uVar3;\n        *puVar4 = uVar3 >> 8;\n        puVar4 = puVar4 + iVar6 * 2;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    *0x4592a8 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar5, nHeight, 1, 1, &lpvBits);\n    if (*0x4592a8 == 0) {\n        *0x4592a8 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    return;\n}\n",
        "token_count": 534
    },
    "0043862d": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043862d(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar7 = 8;\n    }\n    else {\n        uVar7 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar3 = 4;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar4 == 0) {\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n    }\n    else {\n        do {\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4);\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            if (iVar4 == 0) {\n                return 0;\n            }\n        } while (iVar4 != iVar5);\n    }\n    return iVar6;\n}\n",
        "token_count": 420
    },
    "00404473": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404473(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t *in_ECX;\n    uint16_t uVar8;\n    bool bVar9;\n    uint var_60h;\n    uint var_54h;\n    uint var_48h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t *var_ch;\n    uint32_t var_4h;\n    \n    if (in_ECX[2] == 0) {\n        var_18h = *in_ECX;\n        var_14h = in_ECX[1];\n        var_10h = 0;\n        if (arg_ch == 0) {\n            *arg_8h = 0;\n            arg_8h[1] = 0x80000000;\n            arg_8h[2] = 1;\n            return;\n        }\n        var_ch = in_ECX;\n        if (var_14h < 0) {\n            uVar5 = fcn.0040424c(&var_48h);\n            fcn.00403fe8(uVar5);\n        }\n        var_3ch = fcn.0040fcf7(arg_ch);\n        var_4h = var_3ch;\n        if (var_14h == 0) {\n            var_18h = *in_ECX / var_3ch;\n            if (((in_ECX[1] ^ arg_ch) & 0x80000000) != 0) {\n                uVar5 = fcn.0040424c(&var_48h);\n                fcn.00403fe8(uVar5);\n            }\n            *arg_8h = var_18h;\n            arg_8h[1] = var_14h;\n        }\n        else {\n            var_2ch = 0;\n            var_30h = 0;\n            var_28h = 0;\n            var_20h = 0;\n            var_24h = 0;\n            var_1ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            iVar6 = fcn.00404110(&var_3ch);\n            while (iVar6 != 0) {\n                if (var_14h == 0) {\n                    iVar4 = 0;\ncode_r0x00404592:\n                    if (iVar4 != 0) goto code_r0x00404597;\n                    if (var_18h == 0) {\n                        iVar4 = 0;\n                    }\n                    else {\n                        uVar7 = var_18h & 0x80000000;\n                        iVar4 = 0x20;\n                        while (uVar7 == 0) {\n                            uVar7 = var_18h & 1 << (iVar4 - 2U & 0x1f);\n                            iVar4 = iVar4 + -1;\n                        }\n                    }\n                }\n                else {\n                    iVar4 = 0x20;\n                    iVar3 = iVar4;\n                    if ((var_14h & 0x80000000) == 0) {\n                        do {\n                            iVar4 = iVar3 + -1;\n                            cVar2 = iVar3;\n                            iVar3 = iVar4;\n                        } while ((var_14h & 1 << (cVar2 - 2U & 0x1f)) == 0);\n                        goto code_r0x00404592;\n                    }\ncode_r0x00404597:\n                    iVar4 = iVar4 + 0x20;\n                }\n                uVar8 = 0x40 - iVar4;\n                if (uVar8 != 0) {\n                    uVar7 = uVar8;\n                    do {\n                        uVar1 = var_18h << 1;\n                        var_14h = var_14h << 1 | var_18h >> 0x1f;\n                        uVar7 = uVar7 - 1;\n                        var_18h = uVar1;\n                    } while (uVar7 != 0);\n                }\n                bVar9 = var_14h < var_4h;\n                var_20h = var_14h / (var_4h >> bVar9);\n                if (uVar8 != 0) {\n                    uVar7 = uVar8;\n                    do {\n                        var_18h = var_18h >> 1 | var_14h << 0x1f;\n                        var_14h = var_14h >> 1;\n                        uVar7 = uVar7 - 1;\n                    } while (uVar7 != 0);\n                }\n                uVar8 = uVar8 - bVar9;\n                if (uVar8 != 0) {\n                    uVar7 = uVar8;\n                    do {\n                        var_24h = var_24h >> 1 | var_20h << 0x1f;\n                        var_20h = var_20h >> 1;\n                        uVar7 = uVar7 - 1;\n                    } while (uVar7 != 0);\n                }\n                uVar5 = fcn.00404135(&var_48h, &var_24h);\n                fcn.00403fe8(uVar5);\n                uVar5 = fcn.00404296(&var_54h, var_4h);\n                uVar5 = fcn.004041c1(&var_60h, uVar5);\n                fcn.00403fe8(uVar5);\n                iVar6 = fcn.00404110();\n                in_ECX = var_ch;\n            }\n            if (((in_ECX[1] ^ arg_ch) & 0x80000000) != 0) {\n                uVar5 = fcn.0040424c(&var_60h);\n                fcn.00403fe8(uVar5);\n            }\n            *arg_8h = var_30h;\n            arg_8h[1] = var_2ch;\n            var_10h = var_28h;\n        }\n    }\n    else {\n        *arg_8h = *in_ECX;\n        arg_8h[1] = in_ECX[1];\n        var_10h = in_ECX[2];\n    }\n    arg_8h[2] = var_10h;\n    return;\n}\n",
        "token_count": 1519
    },
    "00409674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409674(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*(in_ECX + 0x7c) == 0) || (*(in_ECX + 0x78) == 0)) {\n        var_8h = 0;\n    }\n    else {\n        puVar2 = fcn.00429d0b(*(in_ECX + 0x7c) * 6);\n        iVar3 = (*_sym.imp.USER32.dll_CopyAcceleratorTableA)(*(in_ECX + 0x78), puVar2, *(in_ECX + 0x7c));\n        var_8h = 0;\n        var_4h = 0;\n        if (0 < iVar3) {\n            puVar4 = puVar2;\n            do {\n                if (*(arg_8h + 4) == 0x106) {\n                    uVar1 = 0x10;\n                }\n                else {\n                    uVar1 = 0;\n                }\n                if (((*puVar4 & 0xfd) == uVar1) && (*(puVar4 + 2) == *(arg_8h + 8))) {\n                    var_8h = 1;\n                    break;\n                }\n                var_4h = var_4h + 1;\n                puVar4 = puVar4 + 6;\n            } while (var_4h < iVar3);\n        }\n        fcn.00429d34(puVar2);\n    }\n    return var_8h;\n}\n",
        "token_count": 391
    },
    "00427430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427430(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    var_24h = (arg_ch & 0x1f) << 1;\n    var_1ch = arg_ch >> 0xb;\n    var_20h = arg_ch >> 5 & 0xf83f;\n    var_18h = arg_8h & 0x1f;\n    var_10h = (arg_8h >> 9) + 0x50;\n    var_4h = arg_10h;\n    var_14h = (arg_8h >> 5 & 0xf80f) - 1;\n    uVar1 = fcn.00412342(&var_24h);\n    *in_ECX = uVar1;\n    return;\n}\n",
        "token_count": 262
    },
    "00404adb": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404adb(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    float10 extraout_ST0;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*0x445808 < _arg_8h) || (_arg_8h < *0x445800)) {\n        return 0;\n    }\n    bVar1 = true;\n    iVar2 = fcn.0040fcd0();\n    fcn.0040fdd1(SUB84(extraout_ST0, 0), extraout_ST0 >> 0x20);\n    fcn.0040fd02();\n    iVar3 = fcn.0040fcd0();\n    arg_10h[6] = (iVar2 + 0xa96c6) % 7 + 1;\n    iVar6 = (iVar2 + 0xa96c7) % 0x23ab1;\n    iVar4 = (iVar6 + -1) / 0x8eac;\n    if (iVar4 == 0) {\n        var_4h = iVar6 / 0x5b5;\ncode_r0x00404c28:\n        iVar6 = iVar6 % 0x5b5;\n        iVar7 = iVar6 + -1;\n        iVar5 = iVar7 / 0x16d;\n        if (iVar5 != 0) goto code_r0x00404bd6;\n    }\n    else {\n        iVar7 = (iVar6 + -1) % 0x8eac;\n        iVar6 = iVar7 + 1;\n        var_4h = iVar6 / 0x5b5;\n        if (var_4h != 0) goto code_r0x00404c28;\n        bVar1 = false;\n        iVar5 = iVar7 / 0x16d;\ncode_r0x00404bd6:\n        iVar6 = iVar7 % 0x16d;\n    }\n    arg_10h[7] = iVar6 + 1;\n    arg_10h[5] = iVar5 + ((iVar4 + ((iVar2 + 0xa96c7) / 0x23ab1) * 4) * 0x19 + var_4h) * 4;\n    if ((iVar5 == 0) && (bVar1)) {\n        if (iVar6 == 0x3b) {\n            arg_10h[4] = 2;\n            arg_10h[3] = 0x1d;\n            goto code_r0x00404c77;\n        }\n        if (0x3b < iVar6) {\n            iVar6 = iVar6 + -1;\n        }\n    }\n    iVar6 = iVar6 + 1;\n    iVar2 = (iVar6 >> 5) + 1;\n    arg_10h[4] = iVar2;\n    while (*(iVar2 * 4 + 0x454738) < iVar6) {\n        arg_10h[4] = arg_10h[4] + 1;\n        iVar2 = arg_10h[4];\n    }\n    arg_10h[3] = iVar6 - *(arg_10h[4] * 4 + 0x454734);\ncode_r0x00404c77:\n    if (iVar3 == 0) {\n        *arg_10h = 0;\n        arg_10h[1] = 0;\n        arg_10h[2] = 0;\n    }\n    else {\n        *arg_10h = iVar3 % 0x3c;\n        arg_10h[1] = (iVar3 / 0x3c) % 0x3c;\n        arg_10h[2] = (iVar3 / 0x3c) / 0x3c;\n    }\n    return 1;\n}\n",
        "token_count": 915
    },
    "00421434": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\ncode ** fcn.00421434(void)\n\n{\n    uchar *arg_8h;\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_20h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.0041f49e(0);\n    uVar1 = fcn.004154e0(\"string too long\");\n    fcn.0041f704(\"string too long\", uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042148e(unaff_EBP + -0x20);\n    *(unaff_EBP + -0x3c) = vtable.std::length_error.0;\n    fcn.0040fc5c(unaff_EBP + -0x3c, 0x4508d0);\n    fcn.0040f1f0();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0x457300;\n    fcn.00425b0e(unaff_EBP + -0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = *arg_8h;\n    fcn.0041f49e(0);\n    fcn.00420e32(arg_8h, 0, *0x44a250);\n    uVar1 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 454
    },
    "00421660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid fcn.00421660(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.0041f49e(0);\n    uVar1 = fcn.004154e0(\"invalid string position\");\n    fcn.0041f704(\"invalid string position\", uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042148e(unaff_EBP + -0x20);\n    arg_8h = unaff_EBP + -0x3c;\n    *(unaff_EBP + -0x3c) = vtable.std::out_of_range.0;\n    fcn.0040fc5c(arg_8h, 0x4509f8);\n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::logic_error.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0041f49e(1, arg_8h, extraout_ECX);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00425bb4();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 394
    },
    "0042bb89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.0042bb89(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpWindowName;\n    uint lpClassName;\n    uint dwExStyle;\n    \n    dwExStyle = arg_8h;\n    lpClassName = arg_ch;\n    lpWindowName = arg_10h;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00439e31();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 0x5c))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0xa4))();\n        bVar3 = false;\n    }\n    else {\n        fcn.0042bab4();\n        iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (dwExStyle, lpClassName, lpWindowName, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, \n                           var_28h, var_2ch, var_30h);\n        iVar2 = fcn.0042bb00();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0xa4))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 527
    },
    "0042c2ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0042c2ea(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpWndClass;\n    uint var_ah;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffc4;\n    iVar4 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar1 + 0x10), *(iVar1 + 0x24), unaff_EBP + -0x38);\n    if (iVar4 == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_RegisterClassA)(iVar1);\n        if (iVar3 == 0) {\n            uVar5 = 0;\n            goto code_r0x0042c36a;\n        }\n        iVar4 = fcn.00439e31();\n        if (*(iVar4 + 0x14) != '\\0') {\n            fcn.0043ad3e(1);\n            *(unaff_EBP + -4) = 0;\n            iVar4 = fcn.00439e31();\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(iVar4 + 0x34, *(iVar1 + 0x24));\n            *(unaff_EBP + 10) = 10;\n            *(unaff_EBP + 0xb) = 0;\n            (*pcVar2)(iVar4 + 0x34, unaff_EBP + 10);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0043adae(1);\n        }\n    }\n    uVar5 = 1;\ncode_r0x0042c36a:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 579
    },
    "0044162c": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.0044162c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2h;\n    \n    if ((arg_10h & 0x4000) != 0) {\n        arg_10h._0_2_ = arg_10h & 0xbfff | 0x40;\n    }\n    if (arg_10h == 8) {\n        arg_10h._0_2_ = 0xe;\n    }\n    fcn.004410c9(arg_ch, ((arg_10h != 9) - 1 & 4) + 4, 0, 0, &var_2h, &arg_14h);\n    return;\n}\n",
        "token_count": 187
    },
    "0040b166": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b166(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t **in_ECX;\n    uint var_8h;\n    int32_t **var_4h;\n    \n    var_8h = 0;\n    fcn.0040ab6d();\n    var_4h = in_ECX + 3;\n    iVar1 = (**(**in_ECX + 0x14))(*in_ECX, 0, arg_8h, (-(arg_ch != '\\0') & 2) - 1, &var_8h, &var_4h);\n    if ((iVar1 == 0) && (iVar1 = fcn.0040b1bf(),  iVar1 < 0)) {\n        fcn.0040ab6d();\n    }\n    return iVar1;\n}\n",
        "token_count": 195
    },
    "0040b538": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b538(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = (**(*arg_18h + 0x10))(arg_18h, (-(*(arg_8h + 0x24) != 0) & 2U) + 2, arg_ch, arg_8h, arg_14h, arg_10h, 0);\n    if (0 < arg_ch) {\n        puVar2 = arg_8h + 0x14;\n        do {\n            fcn.00429d34(*puVar2);\n            puVar2 = puVar2 + 0xd;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 211
    },
    "0042ff0f": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t fcn.0042ff0f(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = *(param_1 + 2) == -1;\n    iVar1 = fcn.0042feb9(param_1);\n    if (*(param_1 + 2) == -1) {\n        uVar5 = param_1[3];\n    }\n    else {\n        uVar5 = *param_1;\n    }\n    if ((uVar5 & 0x40) != 0) {\n        iVar1 = iVar1 + ((-bVar6 & 2) + 1) * 2;\n        iVar2 = fcn.0040f995(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        uVar4 = *(param_1 + 4);\n    }\n    else {\n        uVar4 = *(param_1 + 2);\n    }\n    if (uVar4 != 0) {\n        uVar5 = uVar4;\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar5 = uVar5 - 1;\n            iVar1 = puVar3 + *puVar3 + 2;\n        } while (uVar5 != 0);\n    }\n    return iVar1 - param_1;\n}\n",
        "token_count": 516
    },
    "0042ffc7": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint fcn.0042ffc7(uint32_t *param_1, uint param_2, ushort *param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint uVar4;\n    \n    if (*(param_1 + 2) == -1) {\n        uVar2 = param_1[3];\n    }\n    else {\n        uVar2 = *param_1;\n    }\n    if ((uVar2 & 0x40) == 0) {\n        return 0;\n    }\n    puVar3 = fcn.0042feb9(param_1);\n    *param_3 = *puVar3;\n    iVar1 = *(param_1 + 2);\n    uVar4 = fcn.0042aec8(0x20, 0x20, 0, 0);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + ((iVar1 != -1) - 1 & 2) + 1, 0xffffffff, uVar4);\n    fcn.0042aea0(0xffffffff);\n    return 1;\n}\n",
        "token_count": 261
    },
    "0040e012": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nushort * fcn.0040e012(ushort *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    if (param_2 == 0) {\n        return NULL;\n    }\n    *param_1 = 0;\n    (*pcVar1)(0, 0, param_2, 0xffffffff, param_1, 0x40);\n    fcn.0040f660(param_1 + 0x20, param_2 + 0x20, 0x26);\n    param_1[0x33] = 0;\n    (*pcVar1)(0, 0, param_2 + 0x46, 0xffffffff, param_1 + 0x33, 0x40);\n    fcn.0040f660(param_1 + 0x53, param_2 + 0x66, 0x2e);\n    if (*(param_2 + 0x26) != 0) {\n        fcn.0040f660(param_1 + 0x6a, param_2 + 0x94, *(param_2 + 0x26));\n    }\n    param_1[0x22] = 0xd4;\n    return param_1;\n}\n",
        "token_count": 298
    },
    "0040e0a3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuchar * fcn.0040e0a3(uchar *param_1, int32_t param_2)\n\n{\n    if (param_2 == 0) {\n        param_1 = NULL;\n    }\n    else {\n        *param_1 = 0;\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_2, 0xffffffff, param_1, 0x20, 0, 0);\n        fcn.0040f660(param_1 + 0x20, param_2 + 0x40, 0x26);\n        param_1[0x46] = 0;\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_2 + 0x66, 0xffffffff, param_1 + 0x46, 0x20, 0, 0);\n        fcn.0040f660(param_1 + 0x66, param_2 + 0xa6, 0x2e);\n        if (*(param_2 + 0x46) != 0) {\n            fcn.0040f660(param_1 + 0x94, param_2 + 0xd4, *(param_2 + 0x46));\n        }\n        *(param_1 + 0x24) = 0x94;\n    }\n    return param_1;\n}\n",
        "token_count": 314
    },
    "0042a910": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a910(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 8);\n    if ((((iVar1 != 0x40) && (iVar1 != 0x80)) && (iVar1 != 0x100)) && (iVar1 != 0x200)) {\n        fcn.00429d34(param_1);\n        return;\n    }\n    fcn.004076e9(param_1);\n    return;\n}\n",
        "token_count": 114
    },
    "00424ef0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00424ef0(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint noname_4;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint32_t unaff_EBP;\n    uint noname_5;\n    uint noname_6;\n    uint noname_7;\n    uint noname_3;\n    uint noname_9;\n    uint noname_10;\n    uint noname_11;\n    uint hWnd;\n    uint hdc;\n    uint nXLeft;\n    uint uStack44;\n    uint uStack40;\n    uint uStack8;\n    \n    uStack40 = 0xfffffff0;\n    uStack44 = param_1;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar2 & 0x10000000) != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)();\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    // switch table (10 cases) at 0x425054\n        switch(unaff_EBP & 0x1f) {\n        case 0:\n        case 1:\n        case 2:\n        case 0xc:\n            nXLeft = 0;\n            hdc = 0;\n            hWnd = 0x31;\n            noname_11 = param_1;\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.GDI32.dll_SelectObject)();\n            }\n            noname_10 = 2;\n            noname_9 = unaff_EBX;\n            (*_sym.imp.GDI32.dll_SetBkMode)();\n            noname_6 = 0x138;\n            noname_5 = param_1;\n            noname_7 = unaff_EBX;\n            noname_3 = param_1;\n            noname_4 = (*_sym.imp.USER32.dll_GetParent)();\n            iVar4 = (*pcVar1)();\n            if (iVar4 != 0) {\n                iVar4 = (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar4);\n            }\n            fcn.00424e10(param_1, unaff_EBX, &stack0xffffffb4, noname_3, noname_4, noname_5, noname_6, noname_7, \n                         noname_3, noname_9, noname_10, noname_11, hWnd, hdc, nXLeft);\n            if (iVar3 != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar3);\n            }\n            if (iVar4 != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar4);\n                return;\n            }\n            break;\n        case 4:\n        case 7:\n            fcn.00421f30();\n            return;\n        case 5:\n        case 8:\n        case 0x10:\n        case 0x11:\n        case 0x12:\n            fcn.00421f30();\n            (*_sym.imp.USER32.dll_OffsetRect)();\n            fcn.00421f30(uStack8, &uStack44);\n            return;\n        case 6:\n        case 9:\n            fcn.00421f30();\n        }\n    }\n    return;\n}\n",
        "token_count": 760
    },
    "00432ff6": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00432ff6(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004394e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004394e8(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x20];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x2a] != NULL) {\n        (**(*extraout_ECX[0x2a] + 0x14))(1);\n    }\n    iVar3 = fcn.00439e31();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x457310 != NULL) {\n            (**(**0x457310 + 4))(1);\n            *0x457310 = NULL;\n        }\n        if (*0x45730c != NULL) {\n            (**(**0x45730c + 4))(1);\n            *0x45730c = NULL;\n        }\n    }\n    if (extraout_ECX[0x25] != NULL) {\n        fcn.00432ff6(extraout_ECX[0x25]);\n    }\n    pcVar4 = extraout_ECX[0x26];\n    if (pcVar4 != NULL) {\n        pcVar4 = fcn.00432ff6(pcVar4);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    uVar5 = pcVar4 & 0xffff0000 | *(extraout_ECX + 0x2c);\n    if (*(extraout_ECX + 0x2c) != 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar5);\n    }\n    if (*(extraout_ECX + 0xb2) != 0) {\n        (*pcVar2)(uVar5 & 0xffff0000 | *(extraout_ECX + 0xb2));\n    }\n    if (extraout_ECX[0x2b] != NULL) {\n        (**(*extraout_ECX[0x2b] + 4))(1);\n    }\n    iVar3 = fcn.00439e31();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x1e]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.0040ed16(extraout_ECX[0x1e]);\n    fcn.0040ed16(extraout_ECX[0x1f]);\n    fcn.0040ed16(extraout_ECX[0x22]);\n    fcn.0040ed16(extraout_ECX[0x23]);\n    fcn.0040ed16(extraout_ECX[0x24]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[10] = NULL;\n    fcn.004416e3();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 849
    },
    "004011a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004011a0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x4419fc;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 3;\n    fcn.0042aa21();\n    uStack4._0_1_ = 2;\n    fcn.0042aa21();\n    uStack4._0_1_ = 1;\n    fcn.0042aa21();\n    uStack4._0_1_ = 5;\n    fcn.0042aa21();\n    uStack4._0_1_ = 4;\n    fcn.0042aa21();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.0042aa21();\n    uStack4 = 0xffffffff;\n    fcn.00429edb();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 243
    },
    "00401330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00401330(uint *param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x441a64;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack48 = param_2;\n    uStack52 = 0x66;\n    uStack56 = 0x40135e;\n    fcn.00402190();\n    param_1[0x17] = *0x454618;\n    param_1[0x18] = 0;\n    param_1[0x19] = 0;\n    param_1[0x1a] = 0;\n    param_1[0x1b] = *0x454618;\n    param_1[0x1c] = *0x454618;\n    param_1[0x1d] = *0x454618;\n    param_1[0x1e] = *0x454618;\n    param_1[0x1f] = *0x454618;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    uStack56 = 0x457300;\n    uStack12 = 4;\n    *param_1 = 0x444a58;\n    uStack60 = 0x4013d3;\n    fcn.0042abaa();\n    uStack60 = 0x457300;\n    fcn.0042abaa();\n    fcn.0042abaa(0x457300);\n    puVar1 = fcn.00404dd5(&stack0xffffffd4);\n    param_1[0x20] = *puVar1;\n    param_1[0x21] = puVar1[1];\n    param_1[0x22] = puVar1[2];\n    fcn.00439e31();\n    iVar2 = fcn.00439e31();\n    uVar3 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar2 + 0xc), 0x80);\n    param_1[0x23] = uVar3;\n    fcn.0042abaa(\"Charles\");\n    puVar1 = fcn.00404dd5(&stack0xffffffc4);\n    param_1[0x18] = *puVar1;\n    param_1[0x19] = puVar1[1];\n    param_1[0x1a] = puVar1[2];\n    fcn.0042abaa(\"Plumber\");\n    fcn.0042abaa(\"married\");\n    *in_FS_OFFSET = uStack60;\n    return param_1;\n}\n",
        "token_count": 693
    },
    "004017c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint32_t fcn.004017c0(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    bool bVar13;\n    \n    uVar10 = 0;\n    uVar11 = *(*(param_1 + 0x3c) + 0x78 + param_1) + param_1;\n    iVar9 = *(uVar11 + 0x1c) + param_1;\n    puVar2 = *(uVar11 + 0x24) + param_1;\n    piVar8 = *(uVar11 + 0x20) + param_1;\n    if ((param_2 & 0xffff0000) == 0) {\n        uVar10 = *(uVar11 + 0x10);\n        uVar3 = param_2 & 0xffff;\n        if (uVar3 < uVar10) {\n            return 0;\n        }\n        if (*(uVar11 + 0x14) + uVar10 < uVar3) {\n            return 0;\n        }\n        uVar10 = *(iVar9 + (uVar3 - uVar10) * 4) + param_1;\n    }\n    else {\n        for (iVar7 = *(uVar11 + 0x18); iVar7 != 0; iVar7 = iVar7 + -1) {\n            puVar4 = *piVar8 + param_1;\n            puVar12 = param_2;\n            do {\n                uVar1 = *puVar12;\n                bVar13 = uVar1 < *puVar4;\n                if (uVar1 != *puVar4) {\ncode_r0x00401864:\n                    iVar5 = (1 - bVar13) - (bVar13 != 0);\n                    goto code_r0x00401869;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar12[1];\n                bVar13 = uVar1 < puVar4[1];\n                if (uVar1 != puVar4[1]) goto code_r0x00401864;\n                puVar12 = puVar12 + 2;\n                puVar4 = puVar4 + 2;\n            } while (uVar1 != 0);\n            iVar5 = 0;\ncode_r0x00401869:\n            if (iVar5 == 0) {\n                uVar10 = *(iVar9 + *puVar2 * 4) + param_1;\n            }\n            piVar8 = piVar8 + 1;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    if ((uVar11 <= uVar10) && (uVar10 < *(*(param_1 + 0x3c) + param_1 + 0x7c) + uVar11)) {\n        iVar9 = fcn.0040f20f(uVar10);\n        if (iVar9 == 0) {\n            return 0;\n        }\n        uVar10 = 0;\n        puVar6 = fcn.0040ed70(iVar9, 0x2e);\n        *puVar6 = 0;\n        iVar7 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(iVar9);\n        if ((iVar7 != 0) || (iVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(iVar9),  iVar7 != 0)) {\n            uVar10 = fcn.004017c0(iVar7, puVar6 + 1);\n        }\n        fcn.0040ed16(iVar9);\n    }\n    return uVar10;\n}\n",
        "token_count": 884
    },
    "004023b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004023b0(uint32_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    bVar4 = *(param_1 + 2) == -1;\n    uVar3 = *param_1;\n    if (bVar4) {\n        uVar3 = param_1[3];\n        piVar1 = param_1 + 0x1a;\n    }\n    else {\n        piVar1 = param_1 + 0x12;\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    do {\n        iVar2 = *piVar1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 != 0);\n    if ((uVar3 & 0x40) != 0) {\n        piVar1 = piVar1 + (-bVar4 & 2) + 1;\n        do {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 != 0);\n    }\n    return piVar1 + 3U & 0xfffffffc;\n}\n",
        "token_count": 399
    },
    "00402efc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402efc(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.00402cbf();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_ch + 10, \"DISPLAY\");\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x458d00)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 414
    },
    "004033db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004033db(uint psa, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(psa, &var_4h);\n    fcn.004030a4(uVar1);\n    fcn.0040f660(var_4h, arg_ch, arg_10h);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n    fcn.004030a4(uVar1);\n    return;\n}\n",
        "token_count": 141
    },
    "00403476": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00403476(uint32_t lpMultiByteStr, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_ECX;\n    uint32_t uStack20;\n    uint var_ch;\n    \n    *(in_ECX + 4) = 0;\n    *in_ECX = 8;\n    if (lpMultiByteStr != 0) {\n        uStack20 = lpMultiByteStr;\n        if (arg_ch == 0xe) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            iVar2 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(lpMultiByteStr, uVar1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            fcn.0040fca0();\n            uStack20 = uStack20 & 0xffff0000;\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &uStack20, iVar2 + 1);\n            iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(&uStack20);\n        }\n        *(in_ECX + 4) = iVar2;\n        if (iVar2 == 0) {\n            fcn.00426584();\n        }\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "004034f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004034f1(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_ECX;\n    uint32_t uStack24;\n    uint var_ch;\n    \n    uStack24 = 0x403500;\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    *(in_ECX + 4) = 0;\n    *in_ECX = 8;\n    if (arg_8h != 0) {\n        uStack24 = arg_8h;\n        if (arg_ch == 0xe) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            iVar2 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(arg_8h, uVar1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            fcn.0040fca0();\n            uStack24 = uStack24 & 0xffff0000;\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &stack0xffffffe8, iVar2 + 1);\n            iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(&stack0xffffffe8);\n        }\n        *(in_ECX + 4) = iVar2;\n        if (iVar2 == 0) {\n            fcn.00426584();\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "0040383f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nushort * __cdecl fcn.0040383f(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ushort *in_ECX;\n    uchar *puVar3;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack28 = 0x403852;\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    *in_ECX = 8;\n    uVar1 = *arg_8h;\n    if (uVar1 == 0) {\n        puVar3 = NULL;\n    }\n    else {\n        puVar3 = &stack0xffffffe4;\n        puStack28 = uVar1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.0040fca0();\n        puStack28 = puStack28 & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar1, 0xffffffff, &stack0xffffffe4, iVar2 + 1);\n    }\n    puStack28 = puVar3;\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n    *(in_ECX + 4) = iVar2;\n    if (iVar2 == 0) {\n        fcn.00426584();\n    }\n    return in_ECX;\n}\n",
        "token_count": 331
    },
    "00403a4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403a4b(uint param_1)\n\n{\n    fcn.0040f4c0(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 42
    },
    "00403c28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nuint __cdecl\nfcn.00403c28(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t unaff_EBP;\n    uint16_t *puVar7;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    puVar7 = *(unaff_EBP + 0xc);\n    uVar2 = *puVar7;\n    *(unaff_EBP + -0x10) = &var_2ch;\n    if (uVar2 != 0) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar7);\n    }\n    uVar5 = *(unaff_EBP + 8);\n    fcn.00404ef4(puVar7);\n    if ((*puVar7 & 0x6000) != 0) goto code_r0x00403cfc;\n    // switch table (18 cases) at 0x403e11\n    switch(*puVar7) {\n    case 2:\n    case 0xb:\n        uVar5 = fcn.00404ef4(puVar7 + 4);\n        break;\n    case 3:\n    case 10:\n        puVar7 = puVar7 + 4;\n        goto code_r0x00403c93;\n    case 4:\n        uVar5 = fcn.00404fad(puVar7 + 4);\n        break;\n    case 5:\n    case 7:\n        uVar5 = fcn.00405009(puVar7 + 4);\n        break;\n    case 6:\n        fcn.00404f51(puVar7 + 4);\n        puVar7 = puVar7 + 6;\ncode_r0x00403c93:\n        uVar5 = fcn.0040506b(puVar7);\n        break;\n    case 8:\n        fcn.00404f51(unaff_EBP + 8);\n        if (*(unaff_EBP + 8) == 0) {\n            *(puVar7 + 4) = 0;\n        }\n        else {\n            iVar6 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(0, *(unaff_EBP + 8));\n            *(puVar7 + 4) = iVar6;\n            if (iVar6 == 0) {\n                fcn.00426584();\n            }\n            fcn.00433469(*(puVar7 + 4), *(unaff_EBP + 8));\n        }\n        break;\n    case 9:\n    case 0xd:\n        *(unaff_EBP + -0x14) = 0;\n        fcn.0042847f(uVar5);\n        fcn.00404f51(unaff_EBP + -0x2c);\n        fcn.00404ef4(unaff_EBP + -0x28);\n        fcn.00404ef4(unaff_EBP + -0x26);\n        fcn.00433469(unaff_EBP + -0x24, 8);\n        pcVar4 = _sym.imp.ole32.dll_CoCreateInstance;\n        uVar5 = 0x448e20;\n        if (*puVar7 != 0xd) {\n            uVar5 = 0x448df0;\n        }\n        puVar1 = puVar7 + 4;\n        iVar6 = (*_sym.imp.ole32.dll_CoCreateInstance)(unaff_EBP + -0x2c, 0, 0x17, uVar5, puVar1);\n        if (iVar6 == -0x7ff8ffa9) {\n            uVar5 = 0x448e20;\n            if (*puVar7 != 0xd) {\n                uVar5 = 0x448df0;\n            }\n            iVar6 = (*pcVar4)(unaff_EBP + -0x2c, 0, 7, uVar5, puVar1);\n        }\n        fcn.004030a4(iVar6);\n        puVar3 = *puVar1;\n        *(unaff_EBP + -4) = 0;\n        iVar6 = (***puVar3)(puVar3, 0x448e10, unaff_EBP + -0x14);\n        if (iVar6 < 0) {\n            iVar6 = (****puVar1)(*puVar1, 0x448e00, unaff_EBP + -0x14);\n        }\n        fcn.004030a4(iVar6);\n        uVar5 = (**(**(unaff_EBP + -0x14) + 0x14))(*(unaff_EBP + -0x14), unaff_EBP + -0x1c);\n        fcn.004030a4(uVar5);\n        *(unaff_EBP + -4) = 0xffffffff;\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n        uVar5 = *(unaff_EBP + 8);\n        break;\n    case 0x11:\n        uVar5 = fcn.00404e9b(puVar7 + 4);\n    }\ncode_r0x00403cfc:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 1382
    },
    "00403ea9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ea9(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        do {\n            fcn.004037b7();\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00404770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00404770(uint arg_8h, uint pcyOut, uint lcid)\n\n{\n    uint lpString2;\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uchar *noname_1;\n    int32_t unaff_EBP;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint noname_3;\n    uint *arg_8h_00;\n    uint lpMultiByteStr;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    fcn.0042aa8f();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = *(unaff_EBP + 8);\n    if (*(unaff_EBP + 8) == 0) {\n        noname_1 = NULL;\n    }\n    else {\n        noname_1 = &stack0xffffffe8;\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.0040fca0();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                  (0, 0, *(unaff_EBP + -0x10), 0xffffffff, &stack0xffffffe8, iVar1 + 1);\n    }\n    uVar2 = 0;\n    noname_3 = *(unaff_EBP + 0xc);\n    lpString2 = *(unaff_EBP + 0x10);\n    arg_8h_00 = extraout_ECX;\n    iVar1 = (*_sym.imp.OLEAUT32.dll_VarCyFromDisp)();\n    if (iVar1 < 0) {\n        if (iVar1 == -0x7ffdfffb) {\n            extraout_ECX[1] = 0;\n        }\n        else {\n            if (iVar1 != -0x7ffdfff6) {\n                if (iVar1 == -0x7ff8fff2) {\n                    fcn.00426584();\n                }\n                else {\n                    fcn.0043c41e(iVar1, noname_1, lpString2, noname_3, arg_8h_00);\n                }\n                goto code_r0x00404818;\n            }\n            extraout_ECX[1] = 0x80000000;\n        }\n        *extraout_ECX = 0;\n        extraout_ECX[2] = 1;\n    }\n    else {\ncode_r0x00404818:\n        extraout_ECX[2] = 0;\n        uVar2 = 1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042aa21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 672
    },
    "00404cd9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404cd9(int32_t param_1, ushort param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 2;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.00433608();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 2;\n    return param_1;\n}\n",
        "token_count": 147
    },
    "00404d17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404d17(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 4;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.00433608();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 147
    },
    "00404d63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404d63(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 4;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.00433608();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 147
    },
    "00404daf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404daf(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x24) + 4;\n    if (*(param_1 + 0x28) <= uVar1 && uVar1 != *(param_1 + 0x28)) {\n        fcn.00433608();\n    }\n    **(param_1 + 0x24) = param_2;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 146
    },
    "00404e04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404e04(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(param_1 + 0x24) + 8;\n    if (*(param_1 + 0x28) <= uVar2 && uVar2 != *(param_1 + 0x28)) {\n        fcn.00433608();\n    }\n    puVar1 = *(param_1 + 0x24);\n    *puVar1 = param_2;\n    puVar1[1] = param_3;\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 8;\n    return param_1;\n}\n",
        "token_count": 179
    },
    "00404ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404ef4(int32_t param_1)\n\n{\n    ushort *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 2U) {\n        fcn.00433684((*(param_1 + 0x24) - *(param_1 + 0x28)) + 2);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 2;\n    return param_1;\n}\n",
        "token_count": 145
    },
    "00404f51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404f51(int32_t param_1)\n\n{\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 4U) {\n        fcn.00433684((*(param_1 + 0x24) - *(param_1 + 0x28)) + 4);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 145
    },
    "00404fad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404fad(int32_t param_1)\n\n{\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 4U) {\n        fcn.00433684((*(param_1 + 0x24) - *(param_1 + 0x28)) + 4);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 144
    },
    "00405009": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405009(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 8U) {\n        fcn.00433684((*(param_1 + 0x24) - *(param_1 + 0x28)) + 8);\n    }\n    puVar1 = *(param_1 + 0x24);\n    *unaff_retaddr = *puVar1;\n    unaff_retaddr[1] = puVar1[1];\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 8;\n    return param_1;\n}\n",
        "token_count": 175
    },
    "0040506b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040506b(int32_t param_1)\n\n{\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x28) < *(param_1 + 0x24) + 4U) {\n        fcn.00433684((*(param_1 + 0x24) - *(param_1 + 0x28)) + 4);\n    }\n    *unaff_retaddr = **(param_1 + 0x24);\n    *(param_1 + 0x24) = *(param_1 + 0x24) + 4;\n    return param_1;\n}\n",
        "token_count": 145
    },
    "004051b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004051b9(int32_t param_1, uint32_t param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.0040ff55(param_2);\n    if (puVar1 == NULL) {\n        *(param_1 + 8) = 1;\n    }\n    else {\n        param_2 = param_2 & 0xffff0000;\n        iVar2 = fcn.0040499e(puVar1 & 0xffff0000 | puVar1[10] + 0x76c, param_2 | puVar1[8] + 1, param_2 | puVar1[6], \n                             param_2 | puVar1[4], param_2 | puVar1[2], param_2 | *puVar1, param_1);\n        *(param_1 + 8) = iVar2 == 0;\n    }\n    return param_1;\n}\n",
        "token_count": 224
    },
    "00405500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405500(uint arg_8h, uint pdateOut, uint lcid)\n\n{\n    uint lpString2;\n    ulong uVar1;\n    int32_t iVar2;\n    ulong *extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar3;\n    uchar *noname_1;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint noname_3;\n    ulong *arg_8h_00;\n    uint lpMultiByteStr;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    fcn.0042aa8f();\n    noname_1 = NULL;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = *(unaff_EBP + 8);\n    if (*(unaff_EBP + 8) != 0) {\n        noname_1 = &stack0xffffffe8;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.0040fca0();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                  (0, 0, *(unaff_EBP + -0x10), 0xffffffff, &stack0xffffffe8, iVar2 + 1);\n    }\n    noname_3 = *(unaff_EBP + 0xc);\n    lpString2 = *(unaff_EBP + 0x10);\n    arg_8h_00 = extraout_ECX;\n    iVar2 = (*_sym.imp.OLEAUT32.dll_VarDateFromDisp)();\n    uVar3 = 0;\n    if (iVar2 < 0) {\n        if (iVar2 == -0x7ffdfffb) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = *0x445810;\n            if (iVar2 != -0x7ffdfff6) {\n                if (iVar2 == -0x7ff8fff2) {\n                    fcn.00426584();\n                }\n                else {\n                    fcn.0043c41e(iVar2, noname_1, lpString2, noname_3, arg_8h_00);\n                }\n                goto code_r0x004055a2;\n            }\n        }\n        *extraout_ECX = uVar1;\n        *(extraout_ECX + 1) = 1;\n    }\n    else {\ncode_r0x004055a2:\n        *(extraout_ECX + 1) = 0;\n        uVar3 = 1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042aa21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 671
    },
    "004061b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004061b2(uint param_1)\n\n{\n    fcn.0040f4c0(param_1, 0, 0x18);\n    return;\n}\n",
        "token_count": 41
    },
    "00406740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406740(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    int32_t lParam;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1009, 0, &lParam);\n    if (iVar1 != 0) {\n        uVar2 = 0x216;\n        if (arg_8h == 0) {\n            uVar2 = 0x21e;\n        }\n        fcn.0042eaf3(0, 0, 0, var_8h - lParam, var_4h - var_ch, uVar2);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "00406cae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00406cae(ulong *arg_8h, ulong *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f4c0(&var_2ch, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1007, arg_10h, &var_2ch);\n    fcn.0040520a(&var_2ch);\n    *arg_8h = _var_ch;\n    *(arg_8h + 1) = var_4h;\n    fcn.0040520a(&var_1ch);\n    *arg_ch = _var_ch;\n    *(arg_ch + 1) = var_4h;\n    return uVar1;\n}\n",
        "token_count": 234
    },
    "00406d19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406d19(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_10h;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1007, arg_10h, &var_20h);\n    fcn.0040f660(arg_8h, &var_20h, 0x10);\n    fcn.0040f660(arg_ch, &var_10h, 0x10);\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "00406d5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406d5d(uint *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.0040f4c0(&var_20h, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1007, arg_10h, &var_20h);\n    puVar2 = fcn.00427499(&var_20h, 0xffffffff);\n    *arg_8h = *puVar2;\n    puVar2 = fcn.00427499(&var_10h, 0xffffffff);\n    *arg_ch = *puVar2;\n    return uVar1;\n}\n",
        "token_count": 206
    },
    "00406dbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406dbe(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_10h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1005, 0, &var_20h);\n    if (iVar1 != 0) {\n        fcn.0040f660(arg_8h, &var_20h, 0x10);\n        fcn.0040f660(arg_ch, &var_10h, 0x10);\n    }\n    return iVar1;\n}\n",
        "token_count": 158
    },
    "00406e05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406e05(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.0040f660(&var_20h, arg_8h, 0x10);\n    fcn.0040f660(&var_10h, arg_ch, 0x10);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1006, 0, &var_20h);\n    return;\n}\n",
        "token_count": 133
    },
    "00406e94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00406e94(ulong *arg_8h, ulong *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f4c0(&var_2ch, 0, 0x20);\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1005, 0, &var_2ch);\n    if (iVar1 != 0) {\n        fcn.0040520a(&var_2ch);\n        *arg_8h = _var_ch;\n        *(arg_8h + 1) = var_4h;\n        fcn.0040520a(&var_1ch);\n        *arg_ch = _var_ch;\n        *(arg_ch + 1) = var_4h;\n    }\n    return iVar1;\n}\n",
        "token_count": 240
    },
    "00406f4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406f4b(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040f4c0(&var_24h, 0, 0x20);\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1005, 0, &var_24h);\n    if (iVar1 != 0) {\n        puVar2 = fcn.00427499(&var_24h, 0xffffffff);\n        *arg_8h = *puVar2;\n        puVar2 = fcn.00427499(&var_14h, 0xffffffff);\n        *arg_ch = *puVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 218
    },
    "00408004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n\nvoid __cdecl fcn.00408004(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint32_t var_94h;\n    uint uStack148;\n    uint uStack144;\n    int32_t lpvObject;\n    uint var_78h;\n    uint var_71h;\n    uint lpMultiByteStr;\n    uint lpFontDesc;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hdc;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = 0x446324;\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    if ((iVar2 == 0) || (*(iVar2 + 4) == 0)) {\n        lpvObject = 0x11;\n        uStack144 = 0x40803e;\n        iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)();\n        *(unaff_EBP + -0x14) = iVar2;\n        if (iVar2 == 0) {\n            lpvObject = 0xd;\n            uStack144 = 0x408049;\n            iVar2 = (*pcVar1)();\n            *(unaff_EBP + -0x14) = iVar2;\n            if (iVar2 == 0) {\n                *(extraout_ECX + 0x44) = 0;\n                *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n                *(unaff_EBP + -4) = 1;\n                goto code_r0x0040815e;\n            }\n        }\n        iVar2 = unaff_EBP + -0x18;\n    }\n    lpvObject = unaff_EBP + -0x88;\n    uStack144 = 0x3c;\n    uStack148 = *(iVar2 + 4);\n    var_94h = 0x40807b;\n    (*_sym.imp.GDI32.dll_GetObjectA)();\n    *(unaff_EBP + -0x4c) = 0x20;\n    if (unaff_EBP == 0x6c) {\n        *0x24 = 0;\n        iVar2 = extraout_ECX;\n    }\n    else {\n        var_94h = unaff_EBP - 0x6c;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.0040fca0();\n        var_94h = var_94h & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                  (0, 0, unaff_EBP + -0x6c, 0xffffffff, &fcn.00408004::var_94h, iVar2 + 1);\n        iVar2 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x48) = &fcn.00408004::var_94h;\n    }\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x78);\n    *(unaff_EBP + -0x3a) = *(unaff_EBP + -0x71);\n    *(unaff_EBP + -0x38) = *(unaff_EBP + -0x74);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + -0x73);\n    *(unaff_EBP + -0x30) = *(unaff_EBP + -0x72);\n    iVar3 = *(unaff_EBP + -0x88);\n    if (iVar3 < 0) {\n        iVar3 = -iVar3;\n    }\n    var_94h = *(iVar2 + 0x1c);\n    fcn.0043295d(var_94h);\n    *(unaff_EBP + -4) = 2;\n    iVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(unaff_EBP + -0x24), 0x5a);\n    puVar5 = iVar2 + 0x44;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x44) = (iVar3 * 720000) / iVar4;\n    fcn.0043d5f6(puVar5);\n    iVar2 = (*_sym.imp.OLEPRO32.DLL_OleCreateFontIndirect)(unaff_EBP + -0x4c, 0x448e60, puVar5);\n    if (iVar2 < 0) {\n        *puVar5 = 0;\n    }\n    *(unaff_EBP + -4) = 0;\n    lpvObject = 0x408150;\n    fcn.004329cf();\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 3;\ncode_r0x0040815e:\n    lpvObject = 0x408166;\n    fcn.00432ba8();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1328
    },
    "004085e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.004085e3(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t **ppiVar2;\n    int32_t unaff_EBP;\n    code *pcVar3;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumUnknown.0;\n    pcVar3 = NULL;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) && (ppiVar2 = extraout_ECX[9],  extraout_ECX[0xb] != NULL)) {\n        do {\n            (**(**ppiVar2 + 8))(*ppiVar2);\n            pcVar3 = pcVar3 + 1;\n            ppiVar2 = ppiVar2 + 1;\n        } while (pcVar3 < extraout_ECX[0xb]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043e191();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 343
    },
    "004087e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.004087e4(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0042979f();\n    pcVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[7] = pcVar1;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    fcn.00440f3c();\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = *0x454618;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2e] = vtable.COleControlSite::XOleClientSite.0;\n    extraout_ECX[0x2f] = vtable.COleControlSite::XOleIPSite.0;\n    extraout_ECX[0x30] = vtable.COleControlSite::XOleControlSite.0;\n    extraout_ECX[0x31] = vtable.COleControlSite::XAmbientProps.0;\n    extraout_ECX[0x32] = vtable.COleControlSite::XPropertyNotifySink.0;\n    extraout_ECX[0x33] = vtable.COleControlSite::XEventSink.0;\n    extraout_ECX[0x34] = vtable.COleControlSite::XBoundObjectSite.0;\n    extraout_ECX[0x35] = vtable.COleControlSite::XNotifyDBEvents.0;\n    extraout_ECX[0x36] = vtable.COleControlSite::XRowsetNotify.0;\n    *extraout_ECX = vtable.COleControlSite.0;\n    fcn.0040f4c0(extraout_ECX + 0x2a, 0, 0x10);\n    uVar2 = *(unaff_EBP + -0xc);\n    *(extraout_ECX + 0x2a) = 0;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 759
    },
    "00408a33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nbool fcn.00408a33(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar1 = *(extraout_ECX + 0x38);\n    iVar2 = *(extraout_ECX + 0x30);\n    *(unaff_EBP + -0x14) = *(extraout_ECX + 0x34) - *(extraout_ECX + 0x2c);\n    *(unaff_EBP + -0x10) = iVar1 - iVar2;\n    fcn.004328a9(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.004387ab(unaff_EBP + -0x14);\n    iVar1 = (**(**(extraout_ECX + 0x4c) + 0x44))(*(extraout_ECX + 0x4c), 1, unaff_EBP + -0x14);\n    if (-1 < iVar1) {\n        iVar2 = (**(**(extraout_ECX + 0x4c) + 0x48))(*(extraout_ECX + 0x4c), 1, unaff_EBP + -0x14);\n        if (-1 < iVar2) {\n            fcn.00438839(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x34) = *(unaff_EBP + -0x14) + *(extraout_ECX + 0x2c);\n            *(extraout_ECX + 0x38) = *(extraout_ECX + 0x30) + *(unaff_EBP + -0x10);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043291b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return -1 < iVar1;\n}\n",
        "token_count": 499
    },
    "00409033": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_70h\n\nint32_t __cdecl fcn.00409033(uint arg_8h, uint arg_ch, uint hMem, uint arg_14h)\n\n{\n    int32_t **arg_18h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_70h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    arg_18h = extraout_ECX + 0x13;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    iVar1 = fcn.00408e05(*(unaff_EBP + 8), 0, 3, 0x449d10, arg_18h, *(unaff_EBP + 0x14));\n    *(unaff_EBP + 0x14) = iVar1;\n    if (iVar1 < 0) goto code_r0x0040932c;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + 8) = 0;\n    fcn.004094ac(extraout_ECX + 0xf);\n    iVar1 = (**(*extraout_ECX + 0xbc))();\n    *(unaff_EBP + -0x20) = iVar1;\n    if (iVar1 == 0) {\n        (**(**arg_18h + 0x58))(*arg_18h, 1, extraout_ECX + 0x1c);\n        if ((*(extraout_ECX + 0x72) & 2) == 0) goto code_r0x004090bf;\n        iVar1 = (**(**arg_18h + 0xc))(*arg_18h, extraout_ECX + 0x2e);\n        *(unaff_EBP + 0x14) = iVar1;\n        if (-1 < iVar1) goto code_r0x004090bf;\ncode_r0x004092f3:\n        piVar3 = *arg_18h;\n        if (piVar3 != NULL) {\n            (**(*piVar3 + 0x18))(piVar3, 1);\n            (**(**arg_18h + 8))(*arg_18h);\n            *arg_18h = NULL;\n        }\n    }\n    else {\ncode_r0x004090bf:\n        piVar3 = *(unaff_EBP + 0xc);\n        if (piVar3 == NULL) {\n            if (*(unaff_EBP + 0x10) == 0) goto code_r0x0040912e;\ncode_r0x00409198:\n            iVar1 = (****arg_18h)(*arg_18h, 0x449cf0, unaff_EBP + -0x14);\n            if (-1 < iVar1) {\n                if (piVar3 == NULL) {\n                    *(unaff_EBP + 0xc) = 0;\n                    iVar1 = (*_sym.imp.ole32.dll_CreateILockBytesOnHGlobal)(0, 1, unaff_EBP + 0xc);\n                    *(unaff_EBP + 0x14) = iVar1;\n                    if (-1 < iVar1) {\n                        *(unaff_EBP + 0x10) = 0;\n                        iVar1 = (*_sym.imp.ole32.dll_StgCreateDocfileOnILockBytes)\n                                          (*(unaff_EBP + 0xc), 0x1012, 0, unaff_EBP + 0x10);\n                        *(unaff_EBP + 0x14) = iVar1;\n                        if (-1 < iVar1) {\n                            uVar2 = (**(**(unaff_EBP + -0x14) + 0x14))(*(unaff_EBP + -0x14), *(unaff_EBP + 0x10));\n                            *(unaff_EBP + 0x14) = uVar2;\n                            (**(**(unaff_EBP + 0x10) + 8))(*(unaff_EBP + 0x10));\n                        }\n                        piVar3 = *(unaff_EBP + 0xc);\ncode_r0x00409207:\n                        (**(*piVar3 + 8))(piVar3);\n                    }\n                }\n                else {\n                    if (*(unaff_EBP + 0x10) == 0) {\n                        *(unaff_EBP + 0x14) = 0x8000ffff;\n                        goto code_r0x004092c0;\n                    }\n                    uVar2 = (**(*piVar3 + 0x30))();\n                    *(unaff_EBP + 0xc) = uVar2;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, uVar2);\n                    *(unaff_EBP + 0x10) = iVar1;\n                    if (iVar1 == 0) {\ncode_r0x00409255:\n                        *(unaff_EBP + 0x14) = 0x8007000e;\n                        *(unaff_EBP + 0x10) = 0;\n                    }\n                    else {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n                        if (iVar1 == 0) goto code_r0x00409255;\n                        (**(*piVar3 + 0x34))(iVar1, *(unaff_EBP + 0xc));\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + 0x10));\n                    }\n                    *(unaff_EBP + -0x1c) = 0;\n                    if (*(unaff_EBP + 0x10) != 0) {\n                        iVar1 = (*_sym.imp.ole32.dll_CreateILockBytesOnHGlobal)\n                                          (*(unaff_EBP + 0x10), 1, unaff_EBP + -0x1c);\n                        *(unaff_EBP + 0x14) = iVar1;\n                        if (-1 < iVar1) {\n                            *(unaff_EBP + -0x18) = 0;\n                            iVar1 = (*_sym.imp.ole32.dll_StgOpenStorageOnILockBytes)\n                                              (*(unaff_EBP + -0x1c), 0, 0x12, 0, 0, unaff_EBP + -0x18);\n                            *(unaff_EBP + 0x14) = iVar1;\n                            if (-1 < iVar1) {\n                                uVar2 = (**(**(unaff_EBP + -0x14) + 0x18))(*(unaff_EBP + -0x14), *(unaff_EBP + -0x18));\n                                *(unaff_EBP + 0x14) = uVar2;\n                                (**(**(unaff_EBP + -0x18) + 8))(*(unaff_EBP + -0x18));\n                            }\n                            piVar3 = *(unaff_EBP + -0x1c);\n                            goto code_r0x00409207;\n                        }\n                    }\n                }\ncode_r0x004092c0:\n                piVar3 = *(unaff_EBP + -0x14);\ncode_r0x004092c3:\n                (**(*piVar3 + 8))(piVar3);\n                goto code_r0x004092c9;\n            }\n        }\n        else {\n            if (*(unaff_EBP + 0x10) != 0) goto code_r0x00409198;\n            iVar1 = (****arg_18h)(*arg_18h, 0x449d00, unaff_EBP + 8);\n            if (iVar1 < 0) {\ncode_r0x0040912e:\n                iVar1 = (****arg_18h)(*arg_18h, 0x448e00, unaff_EBP + -0x10);\n                if (iVar1 < 0) goto code_r0x00409198;\n                if (piVar3 == NULL) {\n                    uVar2 = (**(**(unaff_EBP + -0x10) + 0x20))(*(unaff_EBP + -0x10));\n                    *(unaff_EBP + 0x14) = uVar2;\n                }\n                else {\n                    fcn.004332f7(piVar3, 1, 0x1000, 0);\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0042847f(unaff_EBP + -0x70);\n                    uVar2 = (**(**(unaff_EBP + -0x10) + 0x14))(*(unaff_EBP + -0x10), unaff_EBP + -0x2c);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(unaff_EBP + 0x14) = uVar2;\n                    fcn.004333d3();\n                }\n                piVar3 = *(unaff_EBP + -0x10);\n                goto code_r0x004092c3;\n            }\n            iVar1 = (**(*piVar3 + 0x50))(3, 0, 0, 0);\n            if (iVar1 == 0) goto code_r0x0040912e;\n            iVar1 = *piVar3;\n            *(unaff_EBP + 0x10) = 0;\n            uVar2 = (**(iVar1 + 0x50))(0, 0xffffffff, unaff_EBP + 0x10, unaff_EBP + 0xc);\n            uVar2 = (**(**(unaff_EBP + 8) + 0x14))(*(unaff_EBP + 8), *(unaff_EBP + 0x10), uVar2);\n            *(unaff_EBP + 0x14) = uVar2;\n            (**(**(unaff_EBP + 8) + 8))(*(unaff_EBP + 8));\n            *(unaff_EBP + 8) = 0;\ncode_r0x004092c9:\n            if (*(unaff_EBP + 0x14) < 0) goto code_r0x004092f3;\n            if ((*(unaff_EBP + -0x20) == 0) && ((*(*(unaff_EBP + -0x24) + 0x72) & 2) == 0)) {\n                uVar2 = (**(**arg_18h + 0xc))(*arg_18h, *(unaff_EBP + -0x24) + 0xb8);\n                *(unaff_EBP + 0x14) = uVar2;\n            }\n        }\n        if (*(unaff_EBP + 0x14) < 0) goto code_r0x004092f3;\n    }\n    piVar3 = *(unaff_EBP + 8);\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    if ((*(unaff_EBP + -0x20) != 0) && (-1 < *(unaff_EBP + 0x14))) {\n        *(unaff_EBP + 0x14) = 1;\n    }\n    iVar1 = *(unaff_EBP + 0x14);\ncode_r0x0040932c:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 2599
    },
    "00409626": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409626(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *var_4h;\n    \n    puVar1 = param_1 + 0x74;\n    var_4h = param_1;\n    fcn.0040f4c0(puVar1, 0, 0x10);\n    var_4h = NULL;\n    *puVar1 = 0x10;\n    iVar2 = (****(param_1 + 0x4c))(*(param_1 + 0x4c), 0x449d20, &var_4h);\n    if (-1 < iVar2) {\n        (**(*var_4h + 0xc))(var_4h, puVar1);\n        (**(*var_4h + 8))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0040a88c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0040a88c(void)\n\n{\n    code *pcVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    code **extraout_ECX;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    *extraout_ECX = vtable.CDataSourceControl.0;\n    iVar7 = 0;\n    pcVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (((pcVar1 != NULL) && (extraout_ECX[0x14] != NULL)) &&\n       (puVar6 = *extraout_ECX[0x14],  iVar5 = (***puVar6)(puVar6, 0x449d30, unaff_EBP + -0x18),  -1 < iVar5)) {\n        *(unaff_EBP + -0x10) = 0;\n        iVar5 = (**(**(unaff_EBP + -0x18) + 0x10))(*(unaff_EBP + -0x18), 0x449290, unaff_EBP + -0x10);\n        if (-1 < iVar5) {\n            (**(**(unaff_EBP + -0x10) + 0x18))(*(unaff_EBP + -0x10), extraout_ECX[0x16]);\n            (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n        }\n        (**(**(unaff_EBP + -0x18) + 8))(*(unaff_EBP + -0x18));\n    }\n    while (extraout_ECX[9] != NULL) {\n        ppiVar2 = *(extraout_ECX[7] + 8);\n        (**(**ppiVar2 + 0xb8))(ppiVar2[2], 0);\n        (*ppiVar2)[0x24] = 0;\n    }\n    *(unaff_EBP + -0x1c) = extraout_ECX + 6;\n    fcn.00428690();\n    if (extraout_ECX[0x10] != NULL) {\n        iVar5 = 0;\n        pcVar1 = extraout_ECX[0xe];\n        if (0 < pcVar1) {\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX[0x10] + iVar7);\n                iVar5 = iVar5 + 1;\n                iVar7 = iVar7 + 0x10;\n            } while (iVar5 < extraout_ECX[0xe]);\n            pcVar1 = extraout_ECX[0xe];\n        }\n        if (pcVar1 != NULL) {\n            fcn.00429d34(extraout_ECX[0xf]);\n            fcn.00429d34(extraout_ECX[0x10]);\n        }\n    }\n    piVar3 = extraout_ECX[2];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    piVar3 = extraout_ECX[3];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    if (extraout_ECX[5] != NULL) {\n        pcVar1 = extraout_ECX[4];\n        *(unaff_EBP + -0x14) = 0;\n        if (0 < pcVar1) {\n            iVar7 = 0;\n            do {\n                puVar6 = *(*(extraout_ECX[5] + iVar7 + 0x24) + 4);\n                while (puVar6 != NULL) {\n                    puVar4 = *puVar6;\n                    *(puVar6[2] + 0x90) = 0;\n                    puVar6 = puVar4;\n                }\n                fcn.00428690();\n                if (*(extraout_ECX[5] + iVar7 + 0x24) != NULL) {\n                    (**(**(extraout_ECX[5] + iVar7 + 0x24) + 4))(1);\n                }\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                iVar7 = iVar7 + 0x28;\n            } while (*(unaff_EBP + -0x14) < extraout_ECX[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[5]);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[0xd]);\n    }\n    if (extraout_ECX[0x15] != NULL) {\n        fcn.0040aa6c(*extraout_ECX[0x14]);\n        fcn.0040ab8d();\n    }\n    pcVar1 = extraout_ECX[0x15];\n    if (pcVar1 != NULL) {\n        fcn.0040ab8d();\n        fcn.00429d34(pcVar1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if (pcVar1 != NULL) {\n        fcn.0040aaf3();\n        fcn.00429d34(pcVar1);\n    }\n    piVar3 = extraout_ECX[0x13];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    piVar3 = extraout_ECX[0x12];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004286b0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1479
    },
    "0040add2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a4h\n\nint32_t fcn.0040add2(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint pv;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar3 = extraout_ECX[0x12];\n    *(unaff_EBP + -0x28) = extraout_ECX[5];\n    *(unaff_EBP + -0x2c) = extraout_ECX[4];\n    if (iVar3 == 0) {\n        piVar1 = extraout_ECX[2];\n        if (piVar1 == NULL) {\n            iVar3 = 0;\n            goto code_r0x0040b0e3;\n        }\n        iVar3 = (**(*piVar1 + 0xc))(piVar1, 0x449d90, unaff_EBP + -0x1c, unaff_EBP + -0x24);\n        if (iVar3 < 0) goto code_r0x0040b0e3;\n        fcn.0040b601(unaff_EBP + -0xa4, 0x449e60);\n        *(unaff_EBP + -0x84) = 0xffffffff;\n        *(unaff_EBP + -0x8c) = 0;\n        *(unaff_EBP + -0x88) = 0;\n        *(unaff_EBP + -0x80) = 0x18;\n        *(unaff_EBP + -0x7c) = 0;\n        *(unaff_EBP + -0x78) = 0x1fb;\n        fcn.0040b601(unaff_EBP + -0x74, 0x449f38);\n        *(unaff_EBP + -0x54) = 0xffffffff;\n        *(unaff_EBP + -0x5c) = 0x1c;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x50) = 0x20;\n        *(unaff_EBP + -0x4c) = 0;\n        *(unaff_EBP + -0x48) = 0x1e;\n        iVar3 = (**(**(unaff_EBP + -0x1c) + 0x10))(*(unaff_EBP + -0x1c), 2, unaff_EBP + -0xa4, 0x28, 0);\n        if (iVar3 < 0) {\n            (**(**(unaff_EBP + -0x1c) + 8))(*(unaff_EBP + -0x1c));\n            goto code_r0x0040b0e3;\n        }\n        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x24);\n        *(unaff_EBP + -0x40) = 1;\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        iVar3 = (**(**(unaff_EBP + -0x1c) + 0x18))(*(unaff_EBP + -0x1c), 0, 0, unaff_EBP + -0x44);\n        *(unaff_EBP + -0x20) = iVar3;\n        if (-1 < iVar3) {\n            iVar3 = *(unaff_EBP + -0x38);\n            extraout_ECX[5] = *(unaff_EBP + -0x3c);\n            *(unaff_EBP + -0x24) = *(unaff_EBP + -0x30);\n            extraout_ECX[4] = *(unaff_EBP + -0x30);\n            piVar1 = *(unaff_EBP + -0x1c);\n            extraout_ECX[0xd] = iVar3;\n            (**(*piVar1 + 8))(piVar1);\n            goto code_r0x0040b039;\n        }\n        (**(**(unaff_EBP + -0x1c) + 8))(*(unaff_EBP + -0x1c));\n    }\n    else {\n        iVar3 = (**(*extraout_ECX[0x13] + 0x14))(extraout_ECX[0x13], 0x449400, unaff_EBP + -0x14);\n        *(unaff_EBP + -0x20) = iVar3;\n        if (iVar3 < 0) goto code_r0x0040b0e3;\n        iVar3 = (****(unaff_EBP + -0x14))(*(unaff_EBP + -0x14), 0x449d30, unaff_EBP + -0x18);\n        if (-1 < iVar3) {\n            *(unaff_EBP + -0x10) = 0;\n            iVar3 = (**(**(unaff_EBP + -0x18) + 0x10))(*(unaff_EBP + -0x18), 0x449290, unaff_EBP + -0x10);\n            if (-1 < iVar3) {\n                (**(**(unaff_EBP + -0x10) + 0x14))(*(unaff_EBP + -0x10), extraout_ECX[1] + 0xd8, extraout_ECX + 0x16);\n                (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n            }\n            (**(**(unaff_EBP + -0x18) + 8))(*(unaff_EBP + -0x18));\n        }\n        iVar3 = fcn.00429d0b(0x10);\n        *(unaff_EBP + -0x24) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0040b0f2(*(unaff_EBP + -0x14));\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        extraout_ECX[0x14] = iVar3;\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n        fcn.0040b216();\n        puVar4 = fcn.00429d0b(0x1c);\n        if (puVar4 == NULL) {\n            puVar4 = NULL;\n        }\n        else {\n            *puVar4 = 0;\n            puVar4[1] = 0;\n            puVar4[2] = 0;\n            puVar4[3] = 0;\n            puVar4[4] = 0;\n            puVar4[5] = 0;\n        }\n        extraout_ECX[0x15] = puVar4;\n        fcn.0040b22b(*extraout_ECX[0x14]);\n        *(extraout_ECX[0x14] + 8) = extraout_ECX[0x15];\n        iVar3 = *(extraout_ECX[0x15] + 0xc);\n        extraout_ECX[4] = iVar3;\n        iVar3 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(iVar3 * 0x28);\n        extraout_ECX[5] = iVar3;\n        fcn.0040f4c0(iVar3, 0, extraout_ECX[4] * 0x28);\n        fcn.0040b143();\n        fcn.0040ab6d();\ncode_r0x0040b039:\n        iVar3 = extraout_ECX[4];\n        *(unaff_EBP + -0x14) = 0;\n        if (0 < iVar3) {\n            iVar3 = 0;\n            do {\n                uVar6 = 0x1c;\n                iVar5 = fcn.00429d0b(0x1c);\n                *(unaff_EBP + -0x18) = iVar5;\n                *(unaff_EBP + -4) = 1;\n                if (iVar5 == 0) {\n                    uVar6 = 0;\n                }\n                else {\n                    uVar6 = fcn.00428651(uVar6, 10);\n                }\n                iVar5 = extraout_ECX[5];\n                *(unaff_EBP + -4) = 0xffffffff;\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                *(iVar3 + 0x24 + iVar5) = uVar6;\n                iVar3 = iVar3 + 0x28;\n            } while (*(unaff_EBP + -0x14) < extraout_ECX[4]);\n        }\n        if (*(unaff_EBP + -0x28) != 0) {\n            if (0 < *(unaff_EBP + -0x2c)) {\n                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x2c);\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x28) + 0x24;\n                do {\n                    puVar4 = *(**(unaff_EBP + -0x10) + 4);\n                    while (puVar4 != NULL) {\n                        puVar2 = *puVar4;\n                        (**(*extraout_ECX + 8))(puVar4[2], 1);\n                        puVar4 = puVar2;\n                    }\n                    fcn.00428690();\n                    if (**(unaff_EBP + -0x10) != NULL) {\n                        (**(***(unaff_EBP + -0x10) + 4))(1);\n                    }\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x28;\n                    piVar1 = unaff_EBP + -0x18;\n                    *piVar1 = *piVar1 + -1;\n                } while (*piVar1 != 0);\n            }\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(*(unaff_EBP + -0x28));\n        }\n    }\n    iVar3 = *(unaff_EBP + -0x20);\ncode_r0x0040b0e3:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 2607
    },
    "0040b216": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b216(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *param_1;\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 0x454f90, param_1 + 1);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0040b4dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0040b4dc(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch;\n    \n    fcn.0040f1f0();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = 0;\n    extraout_ECX[1] = iVar1;\n    iVar1 = fcn.00429d0b(iVar1 << 3);\n    *extraout_ECX = iVar1;\n    iVar1 = *extraout_ECX;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return (-(iVar1 != 0) & 0x7ff8fff2) + 0x8007000e;\n}\n",
        "token_count": 323
    },
    "0040c1c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040c1c7(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    uVar2 = fcn.0040b7a9(&param_2);\n    if (uVar2 == '\\0') {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        iVar3 = unaff_retaddr * 0x30 + *(param_1 + 0x10);\n        uVar2 = *(iVar3 + 0x10);\n        uVar1 = *(*(iVar3 + 4) + (uVar2 & 3) + *(param_1 + 8) + 4 + uVar2);\n        *param_2 = uVar1;\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 223
    },
    "0040c20b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040c20b(int32_t param_1, int32_t param_2)\n\n{\n    return *(param_2 * 0x30 + 4 + *(param_1 + 0x10)) + *(param_1 + 8);\n}\n",
        "token_count": 65
    },
    "0040cd68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.0040cd68(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    uVar2 = *(extraout_ECX + 0xc);\n    *(extraout_ECX + 8) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(extraout_ECX + 0x18) = *(unaff_EBP + 0x10);\n    *(extraout_ECX + 0x10) = iVar1;\n    *(extraout_ECX + 0x14) = 0;\n    fcn.00429d34(uVar2);\n    *(extraout_ECX + 0xc) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.00429d0b(iVar1 * 0x34);\n    *(extraout_ECX + 0xc) = uVar2;\n    iVar1 = *(extraout_ECX + 0xc);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return (-(iVar1 != 0) & 0x7ff8fff2) + 0x8007000e;\n}\n",
        "token_count": 450
    },
    "0040cddf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cddf(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_1ch == 0) {\n        arg_1ch = 0;\n    }\n    else {\n        arg_1ch = arg_1ch - *(in_ECX + 8);\n    }\n    if (arg_18h == 0) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = arg_18h - *(in_ECX + 8);\n    }\n    fcn.0040b582(*(in_ECX + 0x14) * 0x34 + *(in_ECX + 0xc), arg_8h, arg_ch, arg_10h, 0, 0, 0, arg_14h - *(in_ECX + 8), \n                 arg_18h, arg_1ch, 0);\n    *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n    return;\n}\n",
        "token_count": 268
    },
    "0040d279": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d279(uint32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_24h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h & 3) == 0) || (uVar1 = 0,  arg_ch == 0)) {\n        return 0;\n    }\ncode_r0x0040d297:\n    // switch table (31 cases) at 0x40d2fe\n    switch(*arg_10h) {\n    case 1:\n        var_4h = 3;\n        break;\n    case 2:\n    case 0x14:\n        var_4h = 5;\n        break;\n    case 3:\n    case 9:\n    case 10:\n    case 0x17:\n        var_4h = 6;\n        break;\n    default:\n        goto code_r0x0040d2ad;\n    case 6:\n    case 7:\n    case 8:\n    case 0xb:\n    case 0xc:\n    case 0xf:\n    case 0x10:\n    case 0x13:\n    case 0x15:\n        var_4h = 7;\n        break;\n    case 0x18:\n        var_4h = 2;\n        break;\n    case 0x19:\n        var_4h = 1;\n        break;\n    case 0x1f:\n        var_4h = 4;\n    }\n    fcn.0040d614(3);\n    var_8h = arg_14h;\n    fcn.00409820(&var_24h);\n    return var_ch;\ncode_r0x0040d2ad:\n    uVar1 = uVar1 + 1;\n    arg_10h = arg_10h + 9;\n    if (arg_ch <= uVar1) {\n        return 0;\n    }\n    goto code_r0x0040d297;\n}\n",
        "token_count": 467
    },
    "0040da3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040da3d(int32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_retaddr;\n    \n    if (*(param_1 + 0x38) != 0) {\n        fcn.00409396(param_2);\n        return;\n    }\n    uVar1 = fcn.0040d646(param_1, 0);\n    if (((-(unaff_retaddr != 0) & 0x10U) + 0x10 & uVar1) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0xf4, unaff_retaddr != 0, 1);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "0040e189": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e189(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFileException.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21(extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 147
    },
    "0040e223": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e223(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CArchiveException.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21(extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 147
    },
    "0040e274": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nuint __cdecl fcn.0040e274(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uchar *puVar2;\n    int32_t *piStack320;\n    int32_t *piStack316;\n    uint *puStack312;\n    int32_t *piStack308;\n    uint *puStack304;\n    int32_t *piStack300;\n    int32_t *piStack296;\n    uint uStack292;\n    uint var_11ch;\n    uint lpMultiByteStr;\n    uint var_ch;\n    uint var_8h;\n    int32_t *wVerMajor;\n    \n    uStack292 = 0xd;\n    piStack296 = 0x40e289;\n    fcn.0043ad3e();\n    var_ch = 0x80029c4a;\n    piStack296 = 0x40e297;\n    var_8h = (**(*in_ECX + 0x20))();\n    piStack296 = arg_10h;\n    puVar2 = NULL;\n    piStack300 = arg_ch;\n    wVerMajor = NULL;\n    puStack304 = arg_8h;\n    piStack308 = 0x40e2b0;\n    iVar1 = fcn.0040e52c();\n    if (iVar1 == 0) {\n        piStack308 = &fcn.0040e274::wVerMajor;\n        puStack312 = arg_8h;\n        piStack316 = 0x40e2cb;\n        iVar1 = fcn.0040e4b8();\n        if (iVar1 == 0) {\n            piStack316 = &fcn.0040e274::wVerMajor;\n            piStack320 = arg_8h;\n            iVar1 = (**(*in_ECX + 0x24))();\n            if (iVar1 < 0) {\n                piStack308 = 0x40e2ea;\n                iVar1 = fcn.00439e31();\n                piStack316 = *(iVar1 + 8);\n                puStack312 = &fcn.0040e274::lpMultiByteStr;\n                piStack308 = 0x104;\n                piStack320 = 0x40e300;\n                (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n                if (*0x10 != 0x114) {\n                    piStack320 = &fcn.0040e274::lpMultiByteStr;\n                    puVar2 = &stack0xfffffec0;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    fcn.0040fca0();\n                    piStack320 = piStack320 & 0xffff0000;\n                    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (0, 0, &fcn.0040e274::lpMultiByteStr, 0xffffffff, &stack0xfffffec0, iVar1 + 1);\n                }\n                piStack320 = &fcn.0040e274::wVerMajor;\n                iVar1 = (*_sym.imp.OLEAUT32.dll_LoadRegTypeLib)(puVar2);\n                if (iVar1 < 0) {\n                    wVerMajor = NULL;\n                }\n            }\n            piStack308 = wVerMajor;\n            puStack312 = arg_8h;\n            piStack316 = 0x40e362;\n            fcn.0040e4e9();\n        }\n        if (wVerMajor != NULL) {\n            piStack316 = arg_10h;\n            piStack320 = arg_ch;\n            var_ch = (**(*wVerMajor + 0x18))(wVerMajor);\n            (**(*wVerMajor + 8))(wVerMajor);\n            puStack304 = *arg_10h;\n            piStack308 = arg_ch;\n            puStack312 = arg_8h;\n            piStack316 = 0x40e38f;\n            fcn.0040e57d();\n        }\n    }\n    else {\n        var_ch = 0;\n    }\n    piStack316 = 0xd;\n    piStack320 = 0x40e396;\n    fcn.0043adae();\n    return var_ch;\n}\n",
        "token_count": 944
    },
    "0040e752": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040e752(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_retaddr;\n    \n    iVar3 = fcn.00439e31();\n    fcn.0043ad3e(0xb);\n    uVar4 = 0;\n    puVar1 = *(iVar3 + 0x103c);\n    while (puVar2 = puVar1,  puVar2 != NULL) {\n        puVar1 = puVar2[6];\n        iVar3 = fcn.0040f520(unaff_retaddr, puVar2 + 1, 0x10);\n        if (iVar3 == 0) {\n            fcn.0043a1f4(puVar2);\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n            uVar4 = 1;\n        }\n    }\n    fcn.0043adae(0xb);\n    return uVar4;\n}\n",
        "token_count": 230
    },
    "0040ed16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ed16(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    \n    if (param_1 != 0) {\n        fcn.004137f8(9);\n        arg_8h = fcn.004138e1(param_1);\n        if (arg_8h != 0) {\n            fcn.0041390c(arg_8h, param_1);\n            fcn.00413859(9);\n            return;\n        }\n        fcn.00413859(9);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x45acdc, 0, param_1);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0040f60a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040f60a(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 <= *0x455974) {\n        fcn.004137f8(9);\n        iVar1 = fcn.00413c37(param_1);\n        fcn.00413859(9);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x45acdc, 0, param_1 + 0xf & 0xfffffff0);\n    return iVar1;\n}\n",
        "token_count": 163
    },
    "0041040b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041040b(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00410426(param_1, param_2, param_3, param_4, 0);\n    return;\n}\n",
        "token_count": 60
    },
    "0041264c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041264c(uint32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.004126c8();\n    iVar3 = 0;\n    *puVar1 = param_1;\n    puVar1 = 0x455720;\n    do {\n        if (param_1 == *puVar1) {\n            puVar2 = fcn.004126bf();\n            *puVar2 = *(iVar3 * 8 + 0x455724);\n            return;\n        }\n        puVar1 = puVar1 + 2;\n        iVar3 = iVar3 + 1;\n    } while (puVar1 < 0x455888);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        puVar2 = fcn.004126bf();\n        *puVar2 = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        puVar2 = fcn.004126bf();\n        *puVar2 = 8;\n        return;\n    }\n    puVar2 = fcn.004126bf();\n    *puVar2 = 0x16;\n    return;\n}\n",
        "token_count": 294
    },
    "00415400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00415400(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x0041544f;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x00415461;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x00415461;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x00415461;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x0041544f:\n    puVar5 = puVar3 + -1;\ncode_r0x00415461:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x004154d8;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x004154d8:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 747
    },
    "004153f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.004153f0(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x004154d8;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x004154d8:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 439
    },
    "004192e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004192e4(uint param_1, uint param_2)\n\n{\n    fcn.00419178(param_1, param_2, 0x456078);\n    return;\n}\n",
        "token_count": 45
    },
    "004192fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004192fa(uint param_1, uint param_2)\n\n{\n    fcn.00419178(param_1, param_2, 0x456090);\n    return;\n}\n",
        "token_count": 44
    },
    "0041938a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041938a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.0041bca7(&var_ch, &arg_ch, arg_ch, 0, 0, 0, 0);\n    fcn.004192e4(&var_ch, arg_8h);\n    return;\n}\n",
        "token_count": 81
    },
    "004193e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004193e5(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.0041bca7(&var_ch, &arg_ch, arg_ch, 0, 0, 0, 0);\n    fcn.004192fa(&var_ch, arg_8h);\n    return;\n}\n",
        "token_count": 80
    },
    "0041ecda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ecda(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.0041eca1();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0041fe92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fe92(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.0041eca1();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004209c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.004209c3(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00425b4b(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.0041f49e(0);\n    fcn.00420e32(iVar2 + 0xc, 0, *0x44a250);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::runtime_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 312
    },
    "00421575": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.00421575(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00425b4b(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.0041f49e(0);\n    fcn.00420e32(iVar2 + 0xc, 0, *0x44a250);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 311
    },
    "00421ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421ed0(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0x45afa4;\n    do {\n        fcn.00421eb0(uVar1);\n        uVar1 = uVar1 + 4;\n    } while (uVar1 < 0x45afb0);\n    fcn.00421eb0(0x45afb0);\n    return;\n}\n",
        "token_count": 94
    },
    "00422070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422070(uint param_1, int32_t *param_2, uint16_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    iStack16 = *param_2;\n    iStack12 = param_2[1];\n    uStack8 = param_2[2];\n    uStack4 = param_2[3];\n    uVar1 = uStack8 & 0xffff0000;\n    fcn.00421f30(param_1, &iStack16, 7, 1, uStack4 & 0xffff0000 | param_3 & 0xffff000f);\n    iStack16 = iStack16 + -1;\n    iStack12 = iStack12 + -1;\n    uStack8 = uStack8 + 1;\n    uStack4 = uStack4 + 1;\n    fcn.00421f30(param_1, &iStack16, 2, 0, uVar1 | param_3);\n    return;\n}\n",
        "token_count": 254
    },
    "004220e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004220e0(uint param_1)\n\n{\n    uint unaff_retaddr;\n    uint *puVar1;\n    uint uStack16;\n    uint uStack12;\n    \n    puVar1 = &uStack16;\n    (*_sym.imp.USER32.dll_GetClientRect)(param_1, &uStack16);\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(unaff_retaddr, param_1, puVar1, uStack16, uStack12);\n    return;\n}\n",
        "token_count": 111
    },
    "00422450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00422450(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    iVar3 = 0;\n    if (0 < *0x45afbc) {\n        piVar2 = 0x45afc4;\n        do {\n            if (*piVar2 == iVar1) {\n                return 1;\n            }\n            piVar2 = piVar2 + 5;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *0x45afbc);\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "004234f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004234f0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.00421c00(param_1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (0x35e < *0x45af80) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff0);\n        if ((uVar2 & 4) != 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 136
    },
    "00423ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423ac0(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    \n    uStack32 = 0xfffffff0;\n    uStack36 = param_1;\n    puStack40 = 0x423ad3;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    puStack40 = &stack0xffffffe8;\n    uStack44 = param_1;\n    uStack48 = 0x423ae1;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    puStack56 = &stack0xffffffe0;\n    uStack48 = 1;\n    uStack52 = 1;\n    uStack60 = 0x423af0;\n    (*_sym.imp.USER32.dll_InflateRect)();\n    uStack60 = param_1;\n    puStack64 = 0x423af7;\n    uVar3 = (*_sym.imp.USER32.dll_GetParent)();\n    pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n    puStack64 = &stack0xffffffd0;\n    (*_sym.imp.USER32.dll_ScreenToClient)(uVar3);\n    (*pcVar1)(uVar3, &stack0xffffffd0);\n    if ((uVar2 & 0x200000) != 0) {\n        puStack56 = puStack56 + 1;\n    }\n    (*_sym.imp.USER32.dll_ValidateRect)(uVar3, &stack0xffffffc0);\n    return;\n}\n",
        "token_count": 397
    },
    "004254b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004254b2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    fcn.0041b392(arg_14h);\n    uVar1 = fcn.004254e1(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.0041b3e4(arg_14h);\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "0042681a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042681a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0) {\n        arg_8h = 0;\n    }\n    if (arg_ch == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    }\n    iVar1 = *(*in_ECX + -8);\n    if (0 < var_4h) {\n        fcn.0042a9ca();\n        if (iVar1 < arg_8h) {\n            arg_8h = iVar1;\n        }\n        iVar1 = iVar1 + var_4h;\n        arg_ch_00 = *in_ECX;\n        if (*(arg_ch_00 + -4) < iVar1) {\n            fcn.0042a88e(iVar1);\n            fcn.0040f660(*in_ECX, arg_ch_00, *(arg_ch_00 + -8) + 1);\n            fcn.0042a989(arg_ch_00 + -0xc);\n        }\n        fcn.0040f660(*in_ECX + var_4h + arg_8h, *in_ECX + arg_8h, ((iVar1 - var_4h) - arg_8h) + 1);\n        fcn.0040f660(*in_ECX + arg_8h, arg_ch, var_4h);\n        *(*in_ECX + -8) = iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 397
    },
    "00426a6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426a6f(uint arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char **in_ECX;\n    char *pcVar3;\n    uint var_4h;\n    \n    fcn.0042a9ca();\n    pcVar1 = *in_ECX;\n    pcVar3 = pcVar1 + *(pcVar1 + -8);\n    for (pcVar2 = pcVar1; pcVar2 < pcVar3; pcVar2 = fcn.00410dde(pcVar2)) {\n        if (*pcVar2 != arg_8h) {\n            *pcVar1 = *pcVar2;\n            pcVar1 = fcn.00410dde(pcVar1);\n        }\n    }\n    *pcVar1 = '\\0';\n    *(*in_ECX + -8) = *(*in_ECX + -8) - (pcVar2 - pcVar1);\n    return;\n}\n",
        "token_count": 210
    },
    "00426cf3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00426cf3(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if ((param_3 <= *(*param_1 + -8)) && (iVar1 = fcn.00411fe6(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 109
    },
    "00427381": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427381(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        do {\n            fcn.0042ab5a();\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004273e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004273e4(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    var_24h = arg_1ch;\n    var_20h = arg_18h;\n    var_1ch = arg_14h;\n    var_18h = arg_10h;\n    var_14h = arg_ch + -1;\n    var_10h = arg_8h + -0x76c;\n    var_4h = arg_20h;\n    uVar1 = fcn.00412342(&var_24h);\n    *in_ECX = uVar1;\n    return;\n}\n",
        "token_count": 238
    },
    "0042759f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint16_t * fcn.0042759f(void)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *unaff_retaddr;\n    \n    piVar2 = fcn.00427570(0);\n    if (piVar2 != NULL) {\n        *unaff_retaddr = piVar2[10] + 0x76c;\n        unaff_retaddr[1] = piVar2[8] + 1;\n        unaff_retaddr[2] = piVar2[0xc];\n        unaff_retaddr[3] = piVar2[6];\n        unaff_retaddr[4] = piVar2[4];\n        unaff_retaddr[5] = piVar2[2];\n        iVar1 = *piVar2;\n        unaff_retaddr[7] = 0;\n        unaff_retaddr[6] = iVar1;\n        piVar2 = 0x1;\n    }\n    return piVar2;\n}\n",
        "token_count": 218
    },
    "004277be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004277be(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint var_84h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040ff55(in_ECX);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0041040b(&var_84h, 0x80, arg_ch, iVar1);\n        if (iVar1 != 0) goto code_r0x004277f9;\n    }\n    var_84h._0_1_ = 0;\ncode_r0x004277f9:\n    fcn.0042aa8f(&var_84h);\n    return arg_8h;\n}\n",
        "token_count": 188
    },
    "0042780f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042780f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_84h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00412542();\n    if (iVar1 != 0) {\n        iVar1 = fcn.0041040b(&var_84h, 0x80, arg_ch, iVar1);\n        if (iVar1 != 0) goto code_r0x0042784a;\n    }\n    var_84h._0_1_ = 0;\ncode_r0x0042784a:\n    fcn.0042aa8f(&var_84h);\n    return arg_8h;\n}\n",
        "token_count": 179
    },
    "0042892a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042892a(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.00429d0b(param_2 * param_3 + 4);\n    *puVar1 = *param_1;\n    *param_1 = puVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "00428b29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00428b29(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.00428aa2(arg_8h, &arg_8h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.004289a3(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.00428a3c();\n        puVar2[1] = iVar1;\n        *puVar2 = *(*(in_ECX + 4) + arg_8h * 4);\n        *(*(in_ECX + 4) + arg_8h * 4) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 207
    },
    "00429145": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429145(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t hHandle;\n    int32_t hEvent;\n    int32_t var_4h;\n    \n    fcn.0040f4c0(&var_1ch, 0, 0x1c);\n    var_1ch = fcn.00439ba1();\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateEventA;\n    hHandle = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    hEvent = (*pcVar1)(0, 1, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    var_14h = arg_8h;\n    if (hHandle != 0) {\n        if (hEvent != 0) {\n            iVar2 = fcn.0040f378(arg_10h, arg_ch, 0x428e1a, &var_1ch, arg_8h | 4, in_ECX + 0x2c);\n            *(in_ECX + 0x28) = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(iVar2);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n            (*pcVar1)(hHandle);\n            if ((arg_8h & 4) != 0) {\n                (*_sym.imp.KERNEL32.dll_SuspendThread)(*(in_ECX + 0x28));\n            }\n            if (var_4h == 0) {\n                (*_sym.imp.KERNEL32.dll_SetEvent)(hEvent);\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(in_ECX + 0x28), 0xffffffff);\n            (*pcVar1)(*(in_ECX + 0x28));\n            *(in_ECX + 0x28) = 0;\n            goto code_r0x00429219;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hHandle);\n    }\n    if (hEvent == 0) {\n        return 0;\n    }\ncode_r0x00429219:\n    (*pcVar1)(hEvent);\n    return 0;\n}\n",
        "token_count": 580
    },
    "00429318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00429318(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t arg_8h;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x1c);\n        if ((iVar3 != 0) && (*(iVar3 + 0x1c) != 0)) {\n            iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c));\n            if (iVar1 != 0) {\n                fcn.0042b440(iVar3, *(iVar3 + 0x1c), 0x363, 1, 0);\n                fcn.0042cf4b(*(iVar3 + 0x1c), 0x363, 1, 0, 1, 1);\n            }\n        }\n        fcn.00439e31();\n        arg_8h = 0x4396b0;\n        iVar1 = fcn.0043a6ad(0x4396b0);\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x54)) {\n            if ((*(iVar1 + 0x1c) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0x88) == 0) {\n                    fcn.0042eb42(0, arg_8h);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0x88))) {\n                    fcn.0042b440(iVar1, *(iVar1 + 0x1c), 0x363, 1, 0);\n                    arg_8h = *(iVar1 + 0x1c);\n                    fcn.0042cf4b(arg_8h, 0x363, 1, 0, 1, 1);\n                }\n                iVar2 = *(iVar1 + 0x88);\n                if (0 < iVar2) {\n                    fcn.0042eb42();\n                    arg_8h = iVar2;\n                }\n                *(iVar1 + 0x88) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00439e31();\n        iVar3 = fcn.0043a6ad(0x4396b0);\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.0042f94f();\n            fcn.0042f958(1);\n        }\n    }\n    return unaff_EBX < 0;\n}\n",
        "token_count": 637
    },
    "004297b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004297b9(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    iVar1 = *(extraout_ECX + 0x10);\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 != 0) {\n        (**(iVar1 + 0x1c))(extraout_ECX);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 171
    },
    "0042a034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nuint __cdecl\nfcn.0042a034(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpTemplate;\n    uint var_ch_2;\n    uint hInstance;\n    uint var_10h;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint hWnd;\n    uint hMem;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.00439e31();\n        *(unaff_EBP + 0x10) = *(iVar2 + 8);\n    }\n    iVar2 = fcn.00439e31();\n    piVar1 = *(iVar2 + 0x1038);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0042e298(0x10);\n    fcn.0042e298(0x3c000);\n    if (piVar1 == NULL) {\ncode_r0x0042a0b1:\n        if (*(unaff_EBP + 8) != 0) {\n            *(unaff_EBP + -0x1c) = *0x454618;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x20) = 0;\n            iVar2 = fcn.0042ffc7(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x20);\n            if (iVar2 == 0) {\ncode_r0x0042a13c:\n                fcn.0042fd55(*(unaff_EBP + 8));\n                *(unaff_EBP + -4) = 2;\n                fcn.0043017e(*(unaff_EBP + -0x20));\n                uVar3 = fcn.0042fe88();\n                *(unaff_EBP + -0x14) = uVar3;\n                *(unaff_EBP + -4) = 1;\n                fcn.0042fe25();\n                if (*(unaff_EBP + -0x14) != 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n                    *(unaff_EBP + 8) = uVar3;\n                }\n            }\n            else {\n                iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.0040ef37(*(unaff_EBP + -0x1c), \"MS Shell Dlg\");\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.0040ef37(*(unaff_EBP + -0x1c), 0x44518c);\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.0040ef37(*(unaff_EBP + -0x1c), \"Helv\");\n                            if (iVar2 != 0) goto code_r0x0042a17e;\n                        }\n                    }\n                    if (*(unaff_EBP + -0x20) == 8) {\n                        *(unaff_EBP + -0x20) = 0;\n                    }\n                    goto code_r0x0042a13c;\n                }\n            }\ncode_r0x0042a17e:\n            extraout_ECX[0xb] = -1;\n            extraout_ECX[9] = extraout_ECX[9] | 0x10;\n            fcn.0042bab4(extraout_ECX);\n            if (*(unaff_EBP + 0xc) == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = *(*(unaff_EBP + 0xc) + 0x1c);\n            }\n            uVar3 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)\n                              (*(unaff_EBP + 0x10), *(unaff_EBP + 8), uVar3, fcn.00429d3f, 0);\n            *(unaff_EBP + -0x18) = uVar3;\n            *(unaff_EBP + -4) = 0;\n            fcn.0042aa21();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 0x14))(unaff_EBP + -0x34);\n                if (*(unaff_EBP + -0x18) != 0) {\n                    (**(*extraout_ECX + 0xb4))(0);\n                }\n            }\n            iVar2 = fcn.0042bb00();\n            if (iVar2 == 0) {\n                (**(*extraout_ECX + 0xa4))();\n            }\n            if ((*(unaff_EBP + -0x18) != 0) && ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(*(unaff_EBP + -0x18));\n                *(unaff_EBP + -0x18) = 0;\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n            }\n            if ((*(unaff_EBP + -0x18) != 0) || ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                uVar3 = 1;\n                goto code_r0x0042a250;\n            }\n        }\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 0xb4))(unaff_EBP + -0x34);\n        if (iVar2 != 0) {\n            uVar3 = (**(*piVar1 + 0x10))(unaff_EBP + -0x34, *(unaff_EBP + 8));\n            *(unaff_EBP + 8) = uVar3;\n            goto code_r0x0042a0b1;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0042a250:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 1735
    },
    "0042a2b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0042a2b0(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.0042b1e0();\n    *param_1 = vtable.CDialog.0;\n    fcn.0040f4c0(param_1 + 0xf, 0, 0x20);\n    param_1[0x14] = param_3;\n    param_1[0xf] = param_2;\n    param_1[0x10] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 136
    },
    "0042a88e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a88e(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        *param_1 = *0x454618;\n    }\n    else {\n        uVar2 = 0x40;\n        if ((((param_2 < 0x41) || (uVar2 = 0x80,  param_2 < 0x81)) || (uVar2 = 0x100,  param_2 < 0x101)) ||\n           (uVar2 = 0x200,  param_2 < 0x201)) {\n            puVar1 = fcn.0040765a();\n            puVar1[2] = uVar2;\n        }\n        else {\n            puVar1 = fcn.00429d0b(param_2 + 0xd);\n            puVar1[2] = param_2;\n        }\n        *puVar1 = 1;\n        *(puVar1 + param_2 + 0xc) = 0;\n        puVar1[1] = param_2;\n        *param_1 = puVar1 + 3;\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0042a958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a958(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x45461c) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.0042a910();\n        }\n        *param_1 = *0x454618;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0042aa21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042aa21(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x45461c) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.0042a910();\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0042aa4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042aa4b(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_14h + arg_ch == 0) {\n        *arg_8h = *0x454618;\n    }\n    else {\n        fcn.0042a88e(arg_14h + arg_ch);\n        fcn.0040f660(*arg_8h, *in_ECX + arg_10h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0042aae1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042aae1(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = *0x454618;\n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0040f995(param_2);\n    }\n    if (iVar1 != 0) {\n        fcn.0042a88e(iVar1 * 2);\n        fcn.0042b014(*param_1, param_2, iVar1 * 2 + 1);\n        fcn.0042aea0(0xffffffff);\n    }\n    return param_1;\n}\n",
        "token_count": 161
    },
    "0042ab2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ab2d(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.0042a9f8(param_2);\n    fcn.0040f660(*param_1, param_2, param_2);\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0042abd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042abd1(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0040f995(param_2);\n    }\n    fcn.0042a9f8(iVar1 * 2);\n    fcn.0042b014(*param_1, param_2, iVar1 * 2 + 1);\n    fcn.0042aea0(0xffffffff);\n    return param_1;\n}\n",
        "token_count": 137
    },
    "0042ac12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ac12(int32_t *param_1, int32_t param_2, uint param_3, int32_t param_4)\n\n{\n    if (param_2 + param_4 != 0) {\n        fcn.0042a88e(param_2 + param_4);\n        fcn.0040f660(*param_1, param_2, param_2);\n        fcn.0040f660(*param_1 + param_2, param_4, param_4);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0042af50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042af50(int32_t *param_1, uint8_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if ((param_3 < *(*param_1 + -8)) && (iVar1 = fcn.0040f9b2(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 113
    },
    "0042b1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0042b1e0(code **param_1)\n\n{\n    fcn.0042979f();\n    *param_1 = vtable.CWnd.0;\n    fcn.0040f4c0(param_1 + 7, 0, 0x20);\n    return param_1;\n}\n",
        "token_count": 75
    },
    "0042b21e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0042b21e(code **param_1, code *param_2)\n\n{\n    fcn.0042979f();\n    *param_1 = vtable.CWnd.0;\n    fcn.0040f4c0(param_1 + 7, 0, 0x20);\n    param_1[7] = param_2;\n    return param_1;\n}\n",
        "token_count": 93
    },
    "0042b628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042b628(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0042b58f(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.00428ad4(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 92
    },
    "0042c38b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0042c38b(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint *noname_3;\n    uint lpWndClass;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00439ba1();\n    iVar1 = iVar1 + 0x58;\n    iVar2 = fcn.00439e31();\n    var_18h = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        (*_sym.imp.USER32.dll_wsprintfA)(iVar1, \"Afx:%x:%x\", var_18h, arg_8h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_wsprintfA)(iVar1, \"Afx:%x:%x:%x:%x:%x\", var_18h, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    noname_3 = &lpWndClass;\n    noname_1 = var_18h;\n    iVar2 = iVar1;\n    iVar3 = (*_sym.imp.USER32.dll_GetClassInfoA)();\n    if (iVar3 == 0) {\n        lpWndClass = arg_8h;\n        var_24h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_1ch = 0;\n        var_20h = 0;\n        var_8h = 0;\n        var_14h = arg_14h;\n        var_10h = arg_ch;\n        var_ch = arg_10h;\n        var_4h = iVar1;\n        iVar2 = fcn.0042c2ea(&lpWndClass, noname_1, iVar2, noname_3, unaff_EDI, unaff_ESI, unaff_EBX, arg_8h, \n                             _sym.imp.USER32.dll_DefWindowProcA, 0, 0, var_18h, arg_14h, arg_ch, arg_10h, 0);\n        if (iVar2 == 0) {\n            fcn.00432d7a();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 755
    },
    "0042dc41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dc41(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t lpPoints;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0042e967();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x1c), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x1c);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_28h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.00402330();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x1c);\n            }\n            uVar3 = fcn.00402e91(iVar5, 1);\n            fcn.00402efc(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.00402e91(iVar5, 2);\n            fcn.00402efc(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_30h) / 2 - (var_20h - var_28h) / 2;\n    iVar4 = (var_34h + var_2ch) / 2 - (var_1ch - var_24h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_20h - var_28h) + iVar5)) {\n        lprcDst = (var_10h - var_20h) + var_28h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_1ch - var_24h) + iVar4)) {\n        var_14h = (var_24h - var_1ch) + var_ch;\n    }\n    fcn.0042eaf3(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1084
    },
    "0042edc1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042edc1(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch == 0) {\ncode_r0x0042ee15:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.0040f9b2(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.0042a9ac();\n                    goto code_r0x0042ee15;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar1 = fcn.0040f9b2(arg_ch, arg_14h);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar1 = iVar1 - arg_ch;\n        }\n        uVar2 = fcn.0042aec8(iVar1, arg_ch, iVar1);\n        fcn.0040f660(uVar2, iVar1, arg_ch);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 316
    },
    "0042eec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042eec0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0042ee39(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.00428ad4(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 91
    },
    "0042f022": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\ncode ** __cdecl fcn.0042f022(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **ppcVar3;\n    code *pcVar4;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    pcVar1 = *0x454618;\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[3] = pcVar1;\n    pcVar1 = *0x454618;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[4] = pcVar1;\n    extraout_ECX[7] = *0x454618;\n    pcVar1 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -4) = 2;\n    *extraout_ECX = vtable.CRecentFileList.0;\n    ppcVar3 = fcn.00429d0b(pcVar1 * 4 + 4);\n    *(unaff_EBP + -0x14) = ppcVar3;\n    *(unaff_EBP + -4) = 3;\n    if (ppcVar3 == NULL) {\n        pcVar4 = NULL;\n    }\n    else {\n        *ppcVar3 = pcVar1;\n        *(unaff_EBP + 0x14) = ppcVar3 + 1;\n        fcn.004113df(ppcVar3 + 1, 4, pcVar1, 0x4074ed);\n        pcVar4 = *(unaff_EBP + 0x14);\n    }\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[2] = pcVar4;\n    pcVar4 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[1] = pcVar1;\n    extraout_ECX[5] = pcVar4;\n    fcn.0042abaa(uVar2);\n    fcn.0042abaa(*(unaff_EBP + 0x10));\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x18);\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 642
    },
    "0042feb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042feb9(int32_t param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar1 = param_1 + 0x1a;\n    }\n    else {\n        piVar1 = param_1 + 0x12;\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    do {\n        iVar2 = *piVar1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 265
    },
    "00430036": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00430036(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*param_1);\n    uVar1 = fcn.0042ffc7(uVar1, unaff_retaddr, param_2);\n    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "00430901": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430901(uint arg_8h, uint *arg_ch)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    var_4h = 0;\n    (*_sym.imp.USER32.dll_wsprintfA)\n              (&var_104h, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), *(arg_ch + 6), \n               *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), *(arg_ch + 0xd), \n               *(arg_ch + 0xe), *(arg_ch + 0xf));\n    fcn.0042aa8f(&var_104h);\n    return arg_8h;\n}\n",
        "token_count": 205
    },
    "00430c0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00430c0e(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint unaff_retaddr;\n    \n    pcVar1 = fcn.0042ae51(0x104);\n    fcn.0040f4c0(pcVar1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(pcVar1, unaff_retaddr, 0x104);\n    cVar3 = *pcVar1;\n    pcVar2 = pcVar1;\n    while ((cVar3 != '\\0' && (((cVar3 != '\\\\' && (cVar3 != '/')) || ((pcVar2[1] != '\\\\' && (pcVar2[1] != '/'))))))) {\n        pcVar2 = fcn.00410dde(pcVar2);\n        cVar3 = *pcVar2;\n    }\n    if (*pcVar2 == '\\0') {\n        cVar3 = *pcVar1;\n        while (((cVar3 != '\\0' && (cVar3 != '\\\\')) && (cVar3 != '/'))) {\n            pcVar1 = fcn.00410dde(pcVar1);\n            cVar3 = *pcVar1;\n        }\n    }\n    else {\n        for (pcVar1 = pcVar2 + 2; ((cVar3 = *pcVar1,  cVar3 != '\\0' && (cVar3 != '\\\\')) && (cVar3 != '/'));\n            pcVar1 = fcn.00410dde(pcVar1)) {\n        }\n        if (*pcVar1 == '\\0') goto code_r0x00430c8f;\n        do {\n            pcVar1 = fcn.00410dde(pcVar1);\ncode_r0x00430c8f:\n            cVar3 = *pcVar1;\n        } while (((cVar3 != '\\0') && (cVar3 != '\\\\')) && (cVar3 != '/'));\n    }\n    if (*pcVar1 != '\\0') {\n        pcVar1[1] = '\\0';\n    }\n    fcn.0042aea0(0xffffffff);\n    return;\n}\n",
        "token_count": 478
    },
    "00431106": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00431106(uint arg_8h, uint lpFileTime)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    uint var_ah;\n    \n    iVar2 = fcn.00427570(0);\n    lpSystemTime._0_2_ = *(iVar2 + 0x14) + 0x76c;\n    iVar2 = fcn.00427570(0);\n    lpSystemTime._2_2_ = *(iVar2 + 0x10) + 1;\n    iVar2 = fcn.00427570(0);\n    var_12h._0_2_ = *(iVar2 + 0xc);\n    iVar2 = fcn.00427570(0);\n    var_12h._2_2_ = *(iVar2 + 8);\n    iVar2 = fcn.00427570(0);\n    var_eh = *(iVar2 + 4);\n    puVar3 = fcn.00427570(0);\n    var_ch = *puVar3;\n    var_ah._0_2_ = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, &var_ah + 2);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00431306(uVar4);\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&var_ah + 2, lpFileTime);\n    if (iVar2 == 0) {\n        uVar4 = (*pcVar1)(0);\n        fcn.00431306(uVar4);\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "004314ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004314ac(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x4316a2\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x004315ae;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x004315ae;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x004315ae;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x004315ae:\n                return 5;\n            case 0xb:\ncode_r0x004315ae:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x004315ae:\n                return 10;\n            default:\n                goto code_r0x004315ae;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x431706\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x004315ae;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x004315ae;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x004315ae;\n            case 0x3c:\n                goto code_r0x004315ae;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x00431524:\n        if (iVar1 == 1) {\ncode_r0x004315ae:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x004315ae:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x00431524;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x004315ae:\n            return 3;\n        }\n    }\ncode_r0x004315ae:\n    return 1;\n}\n",
        "token_count": 1714
    },
    "0043193c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043193c(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.0040f4c0(&var_14h, 0, 0x14);\n    var_10h = arg_8h;\n    var_14h = 0x14;\n    (*_sym.imp.GDI32.dll_StartDocA)(*(in_ECX + 4), &var_14h);\n    return;\n}\n",
        "token_count": 118
    },
    "00432d93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00432d93(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_8h;\n    uint var_4h_2;\n    uchar auStack276 [16];\n    uint lpString2;\n    uchar *puStack20;\n    uint uVar4;\n    uint *puStack8;\n    \n    uVar4 = 0x44db88;\n    puStack8 = 0x458d50;\n    puStack20 = 0x432dac;\n    fcn.0040fc5c(&stack0xfffffff8, 0x44db88);\n    puStack20 = &stack0xfffffffc;\n    iVar2 = fcn.0042ed9a(uVar4, &stack0xfffffeec, 0x100);\n    if (iVar2 != 0) {\n        puVar3 = fcn.0040f9b2(&stack0xfffffeec, 10);\n        puVar1 = puStack8;\n        if (puVar3 != NULL) {\n            uVar4 = fcn.0041125e(puVar3 + 1);\n            *puVar1 = uVar4;\n            uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar4, *0x459274, 0x48);\n            *puVar1 = uVar4;\n            *puVar3 = 0;\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(puVar1 + 7, &stack0xfffffeec, 0x20);\n        iVar2 = 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 368
    },
    "00434f82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00434f82(int32_t param_1)\n\n{\n    if ((param_1 < 0) || (0x15 < param_1)) {\n        param_1 = -1;\n    }\n    else {\n        param_1 = param_1 + 0x40000;\n    }\n    return param_1;\n}\n",
        "token_count": 77
    },
    "004366dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004366dc(uint param_1)\n\n{\n    fcn.00439e31();\n    fcn.0043a6ad(0x4396b0);\n    fcn.0043a1e1(param_1);\n    return;\n}\n",
        "token_count": 60
    },
    "00436700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436700(uint param_1)\n\n{\n    fcn.00439e31();\n    fcn.0043a6ad(0x4396b0);\n    fcn.0043a1f4(param_1);\n    return;\n}\n",
        "token_count": 60
    },
    "00438c9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438c9e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 208
    },
    "00438d15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438d15(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.00438c9e(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.00438c9e(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.00438c9e(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.00438c9e(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 204
    },
    "00438d7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00438d7f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_3ch;\n    uint var_25h;\n    uint var_20h;\n    \n    fcn.0040f4c0(&var_3ch, 0, 0x3c);\n    var_3ch = arg_8h;\n    var_25h._0_1_ = 1;\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(&var_20h, arg_ch, 0x20);\n    fcn.00438dc4(&var_3ch, arg_10h);\n    return;\n}\n",
        "token_count": 163
    },
    "00439e57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00439e57(void)\n\n{\n    fcn.00439e31();\n    fcn.0043a6ad(0x4396b0);\n    return;\n}\n",
        "token_count": 42
    },
    "0043a84e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043a84e(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.0040ed16(*(param_1 + 0x7c));\n    uVar1 = fcn.0040f20f(param_2);\n    *(param_1 + 0x7c) = uVar1;\n    fcn.0040ed16(*(param_1 + 0x90));\n    uVar1 = fcn.0040f20f(*(param_1 + 0x78));\n    *(param_1 + 0x90) = uVar1;\n    return;\n}\n",
        "token_count": 147
    },
    "0043b51b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b51b(char *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t arg_10h;\n    int32_t iVar3;\n    char *arg_8h_00;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    arg_10h = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    cVar2 = *arg_8h;\n    if (cVar2 != '\\0') {\n        arg_8h_00 = arg_8h;\n        arg_8h = arg_8h + 1;\n        do {\n            if (((cVar2 == '-') || (cVar2 == '/')) && (iVar3 = fcn.00412253(arg_ch, arg_8h, arg_10h),  iVar3 == 0)) {\n                iVar3 = (*pcVar1)(arg_8h_00);\n                fcn.00411960(arg_8h_00, arg_8h_00 + arg_10h + 1, iVar3 - arg_10h);\n                return 1;\n            }\n            cVar2 = arg_8h_00[1];\n            arg_8h_00 = arg_8h_00 + 1;\n            arg_8h = arg_8h + 1;\n        } while (cVar2 != '\\0');\n    }\n    return 0;\n}\n",
        "token_count": 326
    },
    "0043bc07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "delete registry key",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043bc07(uint phkResult)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint lpName;\n    \n    arg_8h = fcn.0040f20f(phkResult);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n    puVar2 = iVar1 + arg_8h;\n    while (puVar2 != NULL) {\n        *puVar2 = 0;\n        fcn.004126d1(arg_8h, puVar2);\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, arg_8h, &phkResult);\n        if (iVar1 != 0) break;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(phkResult, 0, &lpName, 0x105);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        if (iVar1 == 0) break;\n        (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(0x80000000, arg_8h);\n        puVar2 = fcn.0041217a(arg_8h, 0x5c);\n    }\n    fcn.0040ed16(arg_8h);\n    return 1;\n}\n",
        "token_count": 312
    },
    "0043c7be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c7be(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t arg_10h;\n    uint32_t uVar2;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalSize;\n    arg_10h = (*_sym.imp.KERNEL32.dll_GlobalSize)(arg_ch);\n    if (arg_8h == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, arg_10h);\n        if (arg_8h != 0) {\ncode_r0x0043c7f7:\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n            arg_ch_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(arg_ch);\n            arg_8h_00 = (*pcVar1)(arg_8h);\n            fcn.0040f660(arg_8h_00, arg_ch_00, arg_10h);\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg_8h);\n            (*pcVar1)(arg_ch);\n            return arg_8h;\n        }\n    }\n    else {\n        uVar2 = (*pcVar1)(arg_8h);\n        if (arg_10h <= uVar2) goto code_r0x0043c7f7;\n    }\n    return 0;\n}\n",
        "token_count": 345
    },
    "0043cbdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n\nuint __cdecl fcn.0043cbdd(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_94h;\n    uint var_88h;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_1ch = NULL;\n    var_18h = 0;\n    var_8h = NULL;\n    var_14h = 0;\n    var_24h = fcn.0043d5d2(arg_8h, 0x44a158);\n    var_20h = var_24h != NULL;\n    var_28h = fcn.0043d5d2(arg_8h, 0x44a148);\n    iVar2 = (**(*arg_8h + 0x3c))();\n    if (iVar2 != 0) {\n        var_38h = *0x449d60;\n        uStack56 = *0x449d64;\n        uStack52 = *0x449d68;\n        uStack48 = *0x449d6c;\n    }\n    (**(*arg_8h + 0x40))();\n    if (var_20h == 0) {\n        if ((arg_ch == 0) && (iVar2 = (**(*arg_8h + 0x20))(),  iVar2 == 0)) {\n            (*_sym.imp.ole32.dll_CreateBindCtx)();\n            (**(*var_1ch + 0x50))(var_1ch, var_18h);\n            fcn.0043d5f6();\n            var_8h = 0x1;\n        }\n    }\n    else {\n        if (var_4h != 0) {\n            fcn.0042ed9a();\n            if (*0x10 == 0x8c) {\n                var_8h = NULL;\n            }\n            else {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                fcn.0040fca0();\n                (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, &var_88h, 0xffffffff, &stack0xffffff34, iVar2 + 1);\n                var_8h = &stack0xffffff34;\n            }\n            iVar2 = var_4h;\n            pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n            var_20h = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            iVar2 = (*pcVar1)(iVar2);\n            iVar2 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)((iVar2 + var_20h) * 2 + 2);\n            if (iVar2 != 0) {\n                fcn.00411f77(iVar2, var_8h, var_4h);\n                (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                var_4h = iVar2;\n            }\n        }\n        (**(*var_24h + 0x20))();\n        var_8h = 0x1;\n    }\n    if (arg_1ch == NULL) {\n        if ((var_28h == NULL) || (iVar2 = (**(*var_28h + 0x24))(var_28h),  iVar2 != 0)) {\n            var_ch = 0;\n            var_10h = 0;\n        }\n    }\n    else {\n        var_10h = *arg_1ch;\n        var_ch = arg_1ch[1];\n    }\n    iVar2 = (**(*arg_8h + 0x58))();\n    if (iVar2 != 0) {\n        var_14h = 0;\n    }\n    uVar3 = fcn.0043cadf(var_38h, uStack56, uStack52, uStack48, arg_10h, var_10h, var_ch, arg_14h, arg_18h, var_14h, \n                         var_4h, arg_ch);\n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(var_4h);\n    if (var_8h != NULL) {\n        (*pcVar1)(arg_ch);\n    }\n    fcn.0043d5f6(&var_1ch);\n    fcn.0043d5f6(&var_24h);\n    fcn.0043d5f6(&var_28h);\n    return uVar3;\n}\n",
        "token_count": 1152
    },
    "0043cf53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0043cf53(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint16_t *puVar4;\n    uint16_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uchar *puStack40;\n    uint var_20h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uchar *var_8h;\n    uchar *var_4h;\n    \n    puVar4 = arg_8h;\n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenA;\n    pcVar2 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    if (*arg_8h == 0) {\n        arg_8h = NULL;\n    }\n    else {\n        arg_8h = *arg_8h + arg_8h;\n    }\n    if (puVar4[1] == 0) {\n        var_8h = NULL;\n    }\n    else {\n        var_8h = puVar4[1] + puVar4;\n    }\n    if (puVar4[2] == 0) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = puVar4[2] + puVar4;\n    }\n    if (arg_8h == NULL) {\n        arg_8h = NULL;\n    }\n    else {\n        puStack40 = arg_8h;\n        iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.0040fca0();\n        puStack40 = puStack40 & 0xffff0000;\n        (*pcVar2)(0, 0, arg_8h, 0xffffffff, &stack0xffffffd8, iVar7 + 1);\n        arg_8h = &stack0xffffffd8;\n    }\n    if (var_8h == NULL) {\n        var_4h = NULL;\n    }\n    else {\n        puStack40 = var_8h;\n        var_4h = &stack0xffffffd8;\n        iVar7 = (*pcVar3)();\n        fcn.0040fca0();\n        puStack40 = puStack40 & 0xffff0000;\n        (*pcVar2)(0, 0, var_8h, 0xffffffff, &stack0xffffffd8, iVar7 + 1);\n    }\n    if (var_ch == 0) {\n        var_8h = NULL;\n    }\n    else {\n        puStack40 = var_ch;\n        var_8h = &stack0xffffffd8;\n        iVar7 = (*pcVar3)();\n        fcn.0040fca0();\n        puStack40 = puStack40 & 0xffff0000;\n        (*pcVar2)(0, 0, var_ch, 0xffffffff, &stack0xffffffd8, iVar7 + 1);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenW;\n    if (arg_8h == NULL) {\n        var_ch = 0;\n    }\n    else {\n        puStack40 = arg_8h;\n        iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        var_ch = iVar7 * 2 + 2;\n    }\n    if (var_4h == NULL) {\n        var_10h = 0;\n    }\n    else {\n        puStack40 = var_4h;\n        iVar7 = (*pcVar2)();\n        var_10h = iVar7 * 2 + 2;\n    }\n    if (var_8h == NULL) {\n        var_14h = 0;\n    }\n    else {\n        puStack40 = var_8h;\n        iVar7 = (*pcVar2)();\n        var_14h = iVar7 * 2 + 2;\n    }\n    if (arg_ch == 0) {\n        arg_ch = 0;\n    }\n    else {\n        puStack40 = 0x43d0c2;\n        fcn.0040fca0();\n        puStack40 = arg_ch;\n        arg_ch = fcn.0040e012(&fcn.0043cf53::var_20h);\n    }\n    iVar7 = *(arg_ch + 0x46) + var_14h + *(arg_ch + 0x44) + var_10h + 0x10 + var_ch;\n    puStack40 = iVar7;\n    piVar6 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)();\n    if (piVar6 != NULL) {\n        *piVar6 = iVar7;\n        *(piVar6 + 1) = 0x10;\n        iVar7 = (*pcVar2)(arg_8h);\n        fcn.0040f660(piVar6 + 4, arg_8h, iVar7 * 2 + 2);\n        iVar1 = *(piVar6 + 1);\n        *(piVar6 + 6) = iVar1 + var_ch;\n        iVar7 = (*pcVar2)(var_4h);\n        fcn.0040f660(iVar1 + var_ch + piVar6, var_4h, iVar7 * 2 + 2);\n        uVar5 = *(piVar6 + 6) + var_10h;\n        *(piVar6 + 2) = uVar5;\n        iVar7 = (*pcVar2)(var_8h);\n        fcn.0040f660(uVar5 + piVar6, var_8h, iVar7 * 2 + 2);\n        *(piVar6 + 10) = *(piVar6 + 2) + var_14h;\n        fcn.0040f660(*(piVar6 + 2) + var_14h + piVar6, arg_ch, *(arg_ch + 0x46) + 0xd4);\n    }\n    return piVar6;\n}\n",
        "token_count": 1351
    },
    "0043d395": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.0043d395(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        iStack40 = 0;\n        puStack44 = NULL;\n        uStack48 = 0;\n    }\n    else {\n        if (*(arg_8h + 10) == 0) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = *(arg_8h + 10) + arg_8h;\n        }\n        uVar3 = *(arg_8h + 4) + arg_8h;\n        uVar6 = *(arg_8h + 8) + arg_8h;\n        uVar4 = *(arg_8h + 6) + arg_8h;\n        if (iVar5 == 0) {\n            var_10h = 0;\n        }\n        else {\n            iStack40 = 0x43d3fa;\n            fcn.0040fca0();\n            uStack48 = 0x43d403;\n            puStack44 = &fcn.0043d395::var_20h;\n            iStack40 = iVar5;\n            var_10h = fcn.0040e0a3();\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n        if (uVar6 != 0) {\n            uStack48 = uVar6;\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            fcn.0040fca0();\n            uStack48 = uStack48 & 0xffffff00;\n            (*pcVar2)(0, 0, uVar6, 0xffffffff, &stack0xffffffd0, iVar5 * 2 + 2, 0, 0);\n        }\n        if (uVar4 != 0) {\n            uStack48 = uVar4;\n            iVar5 = (*pcVar1)();\n            fcn.0040fca0();\n            uStack48 = uStack48 & 0xffffff00;\n            (*pcVar2)(0, 0, uVar4, 0xffffffff, &stack0xffffffd0, iVar5 * 2 + 2, 0, 0);\n        }\n        if (uVar3 != 0) {\n            uStack48 = uVar3;\n            iVar5 = (*pcVar1)();\n            fcn.0040fca0();\n            uStack48 = uStack48 & 0xffffff00;\n            (*pcVar2)(0, 0, uVar3, 0xffffffff, &stack0xffffffd0, iVar5 * 2 + 2, 0, 0);\n        }\n        uStack48 = var_10h;\n    }\n    (*_sym.imp.GDI32.dll_CreateDCA)();\n    return;\n}\n",
        "token_count": 756
    },
    "0043d61a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d61a(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 8);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(piVar1);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 96
    },
    "0043d77e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043d77e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0043d670(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0043d71e(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.0043d61a();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "0043d88c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.0043d88c(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint32_t var_16ch;\n    int32_t *piStack364;\n    int32_t iStack360;\n    uint var_160h;\n    uint pv;\n    uint var_14h;\n    uint lpWideCharStr;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    var_160h = 0x43d8a9;\n    fcn.00430304();\n    pcVar1 = *0x454618;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[5] = pcVar1;\n    pcVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    *extraout_ECX = vtable.COleStreamFile.0;\n    extraout_ECX[4] = pcVar1;\n    var_160h = 0x43d8cd;\n    fcn.0042a9ac();\n    piStack364 = extraout_ECX[4];\n    if (piStack364 != NULL) {\n        iStack360 = unaff_EBP + -0x5c;\n        var_160h = 0;\n        var_16ch = 0x43d8df;\n        iVar2 = (**(*piStack364 + 0x30))();\n        if ((iVar2 == 0) && (var_16ch = *(unaff_EBP + -0x5c),  var_16ch != 0)) {\n            *(unaff_EBP + -0x10) = var_16ch;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            *(unaff_EBP + 8) = iVar2 * 2 + 2;\n            fcn.0040fca0();\n            var_16ch = var_16ch & 0xffffff00;\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                      (0, 0, *(unaff_EBP + -0x10), 0xffffffff, &fcn.0043d88c::var_16ch, *(unaff_EBP + 8), 0, 0);\n            fcn.00430b3e(unaff_EBP + -0x160, &fcn.0043d88c::var_16ch);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(*(unaff_EBP + -0x5c));\n            fcn.0042abaa(unaff_EBP + -0x160);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 661
    },
    "0043daf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nuint __cdecl fcn.0043daf7(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint32_t uStack132;\n    uint var_58h;\n    uint32_t var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint32_t var_4h;\n    \n    iVar1 = (**(**(in_ECX + 0x10) + 0x30))();\n    if (iVar1 == 0) {\n        puVar3 = fcn.004274e5(&fcn.0043daf7::var_3ch, 0xffffffff);\n        arg_8h[1] = *puVar3;\n        puVar3 = fcn.004274e5(&fcn.0043daf7::var_34h, 0xffffffff);\n        *arg_8h = *puVar3;\n        uStack132 = 0x43db51;\n        puVar3 = fcn.004274e5(&fcn.0043daf7::var_2ch, 0xffffffff);\n        arg_8h[2] = *puVar3;\n        arg_8h[3] = var_44h;\n        *(arg_8h + 4) = 0;\n        *(arg_8h + 0x12) = 0;\n        if (var_4ch != 0) {\n            uStack132 = var_4ch;\n            var_4h = var_4ch;\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            fcn.0040fca0();\n            uStack132 = uStack132 & 0xffffff00;\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                      (0, 0, var_4h, 0xffffffff, &stack0xffffff7c, iVar1 * 2 + 2, 0, 0);\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_8h + 0x12, &stack0xffffff7c, 0x104);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(var_4ch);\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 557
    },
    "0043dc08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nbool __cdecl fcn.0043dc08(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t *puVar2;\n    uint32_t uStack24;\n    uint var_10h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        uStack24 = arg_ch;\n        puVar2 = &uStack24;\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.0040fca0();\n        uStack24 = uStack24 & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch, 0xffffffff, &uStack24, iVar1 + 1);\n    }\n    uStack24 = in_ECX + 0x10;\n    iVar1 = (**(*arg_8h + 0x10))(arg_8h, puVar2, 0, arg_10h, 0);\n    if ((iVar1 < 0) && (arg_14h != 0)) {\n        fcn.0043da08(arg_14h, iVar1);\n    }\n    return -1 < iVar1;\n}\n",
        "token_count": 323
    },
    "0043dc85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_160h\n\nbool __cdecl fcn.0043dc85(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uStack372;\n    int32_t *piStack368;\n    uint *puStack364;\n    uint uStack360;\n    uint var_160h;\n    uint var_154h;\n    uint32_t var_50h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    puStack364 = &fcn.0043dc85::var_50h;\n    uStack360 = 0;\n    piStack368 = arg_8h;\n    uStack372 = 0x43dca4;\n    iVar1 = (**(*arg_8h + 0x44))();\n    if ((iVar1 == 0) && (var_50h != 0)) {\n        uStack372 = var_50h;\n        var_8h = var_50h;\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        fcn.0040fca0();\n        uStack372 = uStack372 & 0xffffff00;\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, var_8h, 0xffffffff, &stack0xfffffe8c, iVar1 * 2 + 2, 0, 0);\n        fcn.00430b3e(&fcn.0043dc85::var_154h, &stack0xfffffe8c);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_50h);\n        piStack368 = &fcn.0043dc85::var_154h;\n        uStack372 = 0x43dd06;\n        fcn.0042abaa();\n    }\n    if (arg_ch == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        uStack372 = arg_ch;\n        puVar2 = &stack0xfffffe8c;\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.0040fca0();\n        uStack372 = uStack372 & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch, 0xffffffff, &stack0xfffffe8c, iVar1 + 1);\n    }\n    uStack372 = var_4h + 0x10;\n    iVar1 = (**(*arg_8h + 0xc))(arg_8h, puVar2, arg_10h, 0, 0);\n    if ((iVar1 < 0) && (arg_14h != 0)) {\n        fcn.0043da08(arg_14h, iVar1);\n    }\n    return -1 < iVar1;\n}\n",
        "token_count": 659
    },
    "0043e1df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0043e1df(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = *(param_1 + 0x28);\n    bVar2 = uVar1 < *(param_1 + 0x2c);\n    if (bVar2) {\n        fcn.0040f660(param_2, *(param_1 + 0x1c) * uVar1 + *(param_1 + 0x24), *(param_1 + 0x1c));\n        *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 168
    },
    "0043e7f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e7f8(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0x1c) != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 0x24) != 0) {\n            iVar2 = 0;\n            do {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(*(iVar2 + 4 + *(param_1 + 0x1c)));\n                (*_sym.imp.ole32.dll_ReleaseStgMedium)(iVar2 + 0x14 + *(param_1 + 0x1c));\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 0x24;\n            } while (uVar1 < *(param_1 + 0x24));\n        }\n        fcn.00429d34(*(param_1 + 0x1c));\n        *(param_1 + 0x1c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "0043ea18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ea18(uint arg_8h, int16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    if (arg_ch == NULL) {\n        arg_ch = fcn.0043c78f(0, arg_8h, &var_14h);\n        *(arg_ch + 8) = 1;\n    }\n    if (arg_8h != 0) {\n        *arg_ch = arg_8h;\n    }\n    iVar1 = fcn.0043e8cd(arg_ch, 1);\n    fcn.0040f4c0(iVar1 + 0x14, 0, 0xc);\n    return;\n}\n",
        "token_count": 161
    },
    "0043ecc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ecc4(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    pcVar1 = NULL;\n    *param_1 = vtable.CEnumFormatEtc.0;\n    if ((param_1[8] == NULL) && (param_1[0xb] != NULL)) {\n        puVar2 = param_1[9] + 4;\n        do {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(*puVar2);\n            pcVar1 = pcVar1 + 1;\n            puVar2 = puVar2 + 5;\n        } while (pcVar1 < param_1[0xb]);\n    }\n    fcn.0043e191();\n    return;\n}\n",
        "token_count": 172
    },
    "0043ed2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043ed2c(int32_t param_1, ushort *param_2)\n\n{\n    ushort *puVar1;\n    uint arg_8h;\n    \n    if (*(param_1 + 0x2c) == *(param_1 + 0x38)) {\n        arg_8h = fcn.00429d0b((*(param_1 + 0x2c) * 5 + 0x32) * 4);\n        *(param_1 + 0x38) = *(param_1 + 0x38) + 10;\n        fcn.0040f660(arg_8h, *(param_1 + 0x24), *(param_1 + 0x2c) * 0x14);\n        fcn.00429d34(*(param_1 + 0x24));\n        *(param_1 + 0x24) = arg_8h;\n    }\n    puVar1 = *(param_1 + 0x24) + *(param_1 + 0x2c) * 0x14;\n    *puVar1 = *param_2;\n    *(puVar1 + 2) = *(param_2 + 2);\n    *(puVar1 + 4) = *(param_2 + 4);\n    *(puVar1 + 6) = *(param_2 + 6);\n    *(puVar1 + 8) = *(param_2 + 8);\n    *(param_1 + 0x2c) = *(param_1 + 0x2c) + 1;\n    return;\n}\n",
        "token_count": 357
    },
    "0043f431": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043f431(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00429d0b(param_2 << 2);\n    *param_1 = uVar1;\n    fcn.0040f4c0(uVar1, 0, param_2 << 2);\n    param_1[1] = param_2;\n    return param_1;\n}\n",
        "token_count": 107
    },
    "0043faa2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043faa2(int32_t param_1, int32_t param_2, int16_t *param_3, uint *param_4)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    ulong *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    puVar3 = *(param_2 + 0x18) + param_1;\n    if (*(param_2 + 0xc) != 0xc) {\n        *param_3 = *(param_2 + 0xc);\n    }\n    // switch table (15 cases) at 0x43fb34\n    switch(*(param_2 + 0xc)) {\n    case 2:\n        iVar2 = *puVar3;\n        goto code_r0x0043fb06;\n    case 3:\n    case 4:\n    case 10:\n        uVar4 = *puVar3;\n        goto code_r0x0043fafb;\n    case 5:\n    case 7:\n        *(param_3 + 4) = *puVar3;\n        break;\n    case 6:\n        *(param_3 + 4) = *puVar3;\n        *(param_3 + 6) = *(puVar3 + 4);\n        break;\n    case 8:\n        uVar4 = fcn.0043fe7d();\ncode_r0x0043fafb:\n        *(param_3 + 4) = uVar4;\n        break;\n    case 9:\n    case 0xd:\n        piVar1 = *puVar3;\n        *(param_3 + 4) = piVar1;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 4))(piVar1);\n        }\n        break;\n    case 0xb:\n        iVar2 = -(*puVar3 != 0);\ncode_r0x0043fb06:\n        param_3[4] = iVar2;\n        break;\n    case 0xc:\n        iVar5 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(param_3, puVar3);\n        if (iVar5 == 0) {\n            return;\n        }\n    default:\n        *param_4 = 0;\n        break;\n    case 0x10:\n        *(param_3 + 4) = *puVar3;\n    }\n    return;\n}\n",
        "token_count": 532
    },
    "0043ff15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043ff15(uint8_t *param_1, uint16_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = *(param_2 * 4 + 0x446f68) + 4;\n    uVar2 = *param_1;\n    while (uVar2 != 0) {\n        if (uVar2 != 0xff) {\n            iVar4 = 0x446fa4;\n            if ((uVar2 & 0x40) == 0) {\n                iVar4 = 0x446fe0;\n            }\n            iVar3 = iVar3 + *(iVar4 + (uVar2 & 0xffffffbf) * 4);\n        }\n        puVar1 = param_1 + 1;\n        param_1 = param_1 + 1;\n        uVar2 = *puVar1;\n    }\n    return iVar3;\n}\n",
        "token_count": 225
    },
    "00440b07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.00440b07(ushort *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uchar *puStack316;\n    uint *puStack312;\n    uint uStack308;\n    uint *puStack304;\n    ushort *puStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint var_11ch;\n    uint var_110h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    uStack292 = 0x20;\n    puStack296 = NULL;\n    puStack300 = arg_8h;\n    puStack304 = 0x440b20;\n    fcn.0040f4c0();\n    var_ch = &fcn.00440b07::var_110h;\n    uStack292 = 0x446f38;\n    puStack296 = 0x440b39;\n    iVar4 = fcn.0042f6b3();\n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenA;\n    pcVar2 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    if (iVar4 == 0) {\n        puStack296 = 0x4460f0;\n        puStack300 = 0x440c18;\n        iVar4 = fcn.0042f6b3();\n        puStack304 = &fcn.00440b07::var_110h;\n        puStack300 = 0x100;\n        if (iVar4 == 0) {\n            uStack308 = 0xf108;\n            puStack312 = 0x440c46;\n            fcn.0042ed9a();\n            *arg_8h = 0xf108;\n        }\n        else {\n            uStack308 = 0xf10a;\n            puStack312 = 0x440c32;\n            fcn.0042ed9a();\n            *arg_8h = 0xf10a;\n        }\n    }\n    else {\n        var_ch = *(arg_ch + 0xc);\n        *arg_8h = *(arg_ch + 8);\n        *(arg_8h + 8) = *(arg_ch + 0x10);\n        *(arg_8h + 0xe) = *(arg_ch + 0x1c);\n        var_10h = *(arg_ch + 0x14);\n        if (*(var_10h - 8) != 0) {\n            if (var_10h == 0) {\n                puStack296 = NULL;\n            }\n            else {\n                puStack300 = 0x440b82;\n                var_8h = &stack0xfffffed8;\n                puStack296 = var_10h;\n                var_4h = (*pcVar3)();\n                var_4h = var_4h + 1;\n                puStack300 = 0x440b92;\n                fcn.0040fca0();\n                puStack300 = var_4h;\n                uStack308 = 0xffffffff;\n                puStack312 = var_10h;\n                puStack296 = puStack296 & 0xffff0000;\n                puStack316 = NULL;\n                puStack304 = &stack0xfffffed8;\n                (*pcVar2)(0);\n                puStack296 = var_8h;\n            }\n            puStack300 = 0x440bb1;\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n            *(arg_8h + 6) = uVar5;\n        }\n        uVar1 = *(arg_ch + 0x18);\n        if (*(uVar1 - 8) != 0) {\n            if (uVar1 == 0) {\n                puStack312 = NULL;\n            }\n            else {\n                puStack316 = 0x440bd4;\n                puStack312 = uVar1;\n                var_4h = (*pcVar3)();\n                var_4h = var_4h + 1;\n                puStack316 = 0x440be4;\n                fcn.0040fca0();\n                puStack316 = var_4h;\n                puStack312 = puStack312 & 0xffff0000;\n                var_8h = &stack0xfffffec8;\n                (*pcVar2)(0, 0, uVar1, 0xffffffff, &stack0xfffffec8);\n                puStack312 = var_8h;\n            }\n            puStack316 = 0x440c03;\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n            *(arg_8h + 2) = uVar5;\n        }\n    }\n    if (var_ch == NULL) {\n        puVar6 = NULL;\n    }\n    else {\n        puStack312 = var_ch;\n        puStack316 = 0x440c5c;\n        puVar6 = &stack0xfffffec8;\n        var_4h = (*pcVar3)();\n        var_4h = var_4h + 1;\n        puStack316 = 0x440c6c;\n        fcn.0040fca0();\n        puStack316 = var_4h;\n        puStack312 = puStack312 & 0xffff0000;\n        (*pcVar2)(0, 0, var_ch, 0xffffffff, &stack0xfffffec8);\n    }\n    puStack316 = 0x440c8b;\n    puStack312 = puVar6;\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n    *(arg_8h + 4) = uVar5;\n    if (*(arg_8h + 2) == 0) {\n        puStack316 = 0x440c9b;\n        iVar4 = fcn.00439e31();\n        uVar1 = *(iVar4 + 0x10);\n        if (uVar1 == 0) {\n            puStack316 = NULL;\n        }\n        else {\n            puStack316 = uVar1;\n            var_4h = (*pcVar3)();\n            var_4h = var_4h + 1;\n            fcn.0040fca0();\n            puStack316 = puStack316 & 0xffff0000;\n            var_8h = &stack0xfffffec4;\n            (*pcVar2)(0, 0, uVar1, 0xffffffff, &stack0xfffffec4, var_4h);\n            puStack316 = var_8h;\n        }\n        uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n        *(arg_8h + 2) = uVar5;\n    }\n    if ((*(arg_8h + 6) == 0) && (*(arg_8h + 8) != 0)) {\n        puStack316 = 0x440cf0;\n        iVar4 = fcn.00439e31();\n        uVar1 = *(*(iVar4 + 4) + 0x8c);\n        puStack316 = NULL;\n        if (uVar1 != 0) {\n            puStack316 = uVar1;\n            iVar4 = (*pcVar3)();\n            fcn.0040fca0();\n            puStack316 = puStack316 & 0xffff0000;\n            var_8h = &stack0xfffffec4;\n            (*pcVar2)(0, 0, uVar1, 0xffffffff, &stack0xfffffec4, iVar4 + 1);\n            puStack316 = var_8h;\n        }\n        uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n        *(arg_8h + 6) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 1766
    },
    "00440ea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00440ea4(char *arg_8h, char *lpclsid)\n\n{\n    int32_t iVar1;\n    char **ppcVar2;\n    char *pcStack16;\n    uint var_8h;\n    \n    if (*arg_8h == '{') {\n        if (arg_8h == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            pcStack16 = arg_8h;\n            ppcVar2 = &pcStack16;\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            fcn.0040fca0();\n            pcStack16 = pcStack16 & 0xffff0000;\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &pcStack16, iVar1 + 1);\n        }\n        pcStack16 = lpclsid;\n        (*_sym.imp.ole32.dll_CLSIDFromString)(ppcVar2);\n    }\n    else {\n        if (arg_8h == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            pcStack16 = arg_8h;\n            ppcVar2 = &pcStack16;\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            fcn.0040fca0();\n            pcStack16 = pcStack16 & 0xffff0000;\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &pcStack16, iVar1 + 1);\n        }\n        pcStack16 = lpclsid;\n        (*_sym.imp.ole32.dll_CLSIDFromProgID)(ppcVar2);\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "00441682": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441682(code *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_2 + param_3) = unaff_retaddr;\n    *((param_2 + param_3) - param_3) = 0x441692;\n    (*param_1)();\n    return;\n}\n",
        "token_count": 85
    },
    "00441693": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00441693(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_WIN_STATE.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00432f66(extraout_ECX + 1, extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 171
    },
    "0044189c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0044189c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    \n    iVar2 = fcn.00439e31();\n    fcn.0043ad3e(1);\n    arg_8h = iVar2 + 0x34;\n    while (*arg_8h != '\\0') {\n        puVar3 = fcn.0040f9b2(arg_8h, 10);\n        *puVar3 = 0;\n        iVar4 = fcn.00439e31();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(arg_8h, *(iVar4 + 8));\n        arg_8h = puVar3 + 1;\n    }\n    *(iVar2 + 0x34) = '\\0';\n    fcn.0043adae(1);\n    iVar2 = fcn.00439e31();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x54),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.00439ba1();\n    if (*(iVar2 + 0xcc) != NULL) {\n        iVar4 = (**(**(iVar2 + 0xcc) + 0xb8))();\n        if (iVar4 != 0) {\n            *(iVar2 + 0xcc) = 0;\n        }\n    }\n    iVar4 = fcn.00439e31();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar4 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x30) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x30));\n            *(iVar2 + 0x30) = 0;\n        }\n        if (*(iVar2 + 0x2c) != 0) {\n            (*pcVar1)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "0040a83e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0040a83e(code **param_1, code *param_2)\n\n{\n    param_1[1] = param_2;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    fcn.00428651(10);\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = NULL;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    param_1[0x16] = NULL;\n    *param_1 = vtable.CDataSourceControl.0;\n    return param_1;\n}\n",
        "token_count": 227
    },
    "0040b582": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040b582(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h)\n\n{\n    if ((arg_10h & 0x4000) == 0) {\n        arg_8h[8] = 0;\n    }\n    else {\n        arg_8h[8] = 1;\n    }\n    *(arg_8h + 0xc) = arg_10h;\n    arg_8h[5] = arg_30h;\n    *(arg_8h + 0x32) = arg_18h;\n    arg_8h[9] = arg_20h;\n    *(arg_8h + 0x33) = arg_1ch;\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_24h;\n    arg_8h[10] = arg_14h;\n    arg_8h[7] = 1;\n    arg_8h[0xb] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[6] = 0;\n    if (arg_28h != 0) {\n        arg_8h[7] = 3;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != 0) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "00426518": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426518(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0042ed9a(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 98
    },
    "00428651": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428651(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 104
    },
    "00428690": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428690(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.0042894a();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "00428960": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428960(code **param_1, code *param_2)\n\n{\n    param_1[1] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CMapPtrToPtr.0;\n    param_1[2] = 0x11;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 109
    },
    "004289e8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004289e8(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00429d34(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.0042894a();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "0042979f": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042979f(int32_t param_1)\n\n{\n    *(param_1 + 4) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 108
    },
    "00429ac5": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429ac5(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "004353b3": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004353b3(code **param_1, code *param_2, code *param_3, code *param_4)\n\n{\n    fcn.00430304();\n    param_1[5] = NULL;\n    param_1[4] = param_4;\n    param_1[9] = NULL;\n    *param_1 = vtable.CMemFile.0;\n    param_1[7] = ~-(param_4 != NULL) & param_3;\n    param_1[8] = param_2;\n    param_1[6] = param_3;\n    return param_1;\n}\n",
        "token_count": 144
    },
    "00439936": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00439936(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*0x4592b4 == 0) {\n        iVar2 = fcn.0043a76f(0x4397ea);\n        if (*(iVar2 + 4) == 0) {\n            *(iVar2 + 0xc) = 0x4221d0;\n            *(iVar2 + 0x10) = 0x422240;\n            *(iVar2 + 0x14) = fcn.00422300;\n            *(iVar2 + 0x18) = 0x422480;\n            *(iVar2 + 0x1c) = 0x4229c0;\n            *(iVar2 + 0x20) = 0x4228b0;\n            *(iVar2 + 0x24) = fcn.00422cc0;\n            *(iVar2 + 0x28) = 0x422550;\n            *(iVar2 + 0x2c) = 0x422690;\n            iVar3 = fcn.00439e31();\n            iVar3 = (**(iVar2 + 0xc))(*(iVar3 + 8));\n            if (iVar3 == 0) {\n                *(iVar2 + 0xc) = 0;\n                *(iVar2 + 0x10) = 0;\n                *(iVar2 + 0x14) = 0;\n                *(iVar2 + 0x18) = 0;\n                *(iVar2 + 0x1c) = 0;\n                *(iVar2 + 0x20) = 0;\n                *(iVar2 + 0x24) = 0;\n                *(iVar2 + 0x28) = 0;\n                *(iVar2 + 0x2c) = 0;\n            }\n            *(iVar2 + 4) = 1;\n        }\n        if (*(iVar2 + 0x14) == 0) {\n            uVar1 = 0;\n        }\n        else {\n            iVar3 = fcn.00439e31();\n            uVar1 = (**(iVar2 + 0x14))(*(iVar3 + 8));\n        }\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 514
    },
    "0043e136": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0043e136(code **param_1, code *param_2, code *param_3, code *param_4, code *param_5)\n\n{\n    fcn.0042979f();\n    param_1[0xd] = vtable.CEnumArray::XEnumVOID.0;\n    param_1[7] = param_2;\n    param_1[8] = NULL;\n    param_1[10] = NULL;\n    param_1[0xb] = param_4;\n    param_1[9] = param_3;\n    param_1[0xc] = param_5;\n    *param_1 = vtable.CEnumArray.0;\n    return param_1;\n}\n",
        "token_count": 165
    },
    "0040601d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040601d(uint16_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(param_1);\n    iVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(unaff_retaddr, param_2, param_3);\n    *(param_1 + 4) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00426584();\n    }\n    *param_1 = unaff_retaddr | 0x2000;\n    *(param_1 + 10) = param_2;\n    uVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(param_1 + 4));\n    *(param_1 + 8) = uVar2;\n    return;\n}\n",
        "token_count": 212
    },
    "0040cecb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040cecb(uint *param_1, uint param_2, uint param_3, ushort param_4)\n\n{\n    *param_1 = 0;\n    *(param_1 + 1) = param_4;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    param_1[2] = param_3;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 107
    },
    "0040e5b3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0040e5b3(code **param_1, code **param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.COleControlLock.0;\n    param_1[6] = NULL;\n    param_1[1] = *param_2;\n    param_1[2] = param_2[1];\n    param_1[3] = param_2[2];\n    param_1[4] = param_2[3];\n    ppiVar1 = param_1 + 5;\n    *ppiVar1 = NULL;\n    iVar2 = fcn.00439ba1();\n    if ((*(iVar2 + 0x114) == 0) && (iVar2 = fcn.0043b3d4(),  iVar2 == 0)) {\n        return param_1;\n    }\n    iVar2 = (*_sym.imp.ole32.dll_CoGetClassObject)(param_2, 3, 0, 0x449cc0, ppiVar1);\n    if ((-1 < iVar2) && (iVar2 = (**(**ppiVar1 + 0x10))(*ppiVar1, 1),  iVar2 < 0)) {\n        (**(**ppiVar1 + 8))(*ppiVar1);\n        *ppiVar1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 318
    },
    "00435367": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00435367(code **param_1, code *param_2)\n\n{\n    fcn.00430304();\n    *param_1 = vtable.CMemFile.0;\n    param_1[4] = param_2;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = 0x1;\n    return param_1;\n}\n",
        "token_count": 119
    },
    "0043542c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043542c(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.00435613();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.004303f9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 257
    },
    "00435613": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435613(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 124
    },
    "0043932b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043932b(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CCommandLineInfo.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 2;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 1;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 228
    },
    "00439bd7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00439bd7(code **param_1, uchar param_2)\n\n{\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0x40f] = NULL;\n    param_1[0x410] = NULL;\n    param_1[0x413] = 0xffffffff;\n    param_1[0x414] = NULL;\n    param_1[0x419] = NULL;\n    param_1[0x41a] = NULL;\n    *param_1 = vtable.AFX_MODULE_STATE.0;\n    param_1[10] = 0x1c;\n    param_1[8] = 0x14;\n    param_1[6] = NULL;\n    *(param_1 + 5) = param_2;\n    param_1[0xc] = 0x1;\n    param_1[0x410] = 0x18;\n    return;\n}\n",
        "token_count": 239
    },
    "0043e970": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e970(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.0043c78f(arg_10h, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = 1;\n    iVar1 = fcn.0043e8cd(iVar1, 1);\n    *(iVar1 + 0x1c) = 0;\n    *(iVar1 + 0x14) = 1;\n    *(iVar1 + 0x18) = arg_ch;\n    return;\n}\n",
        "token_count": 151
    },
    "0043e9e2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e9e2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.0043c78f(arg_ch, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = *(iVar1 + 0x10) | 5;\n    iVar1 = fcn.0043e8cd(iVar1, 1);\n    *(iVar1 + 0x14) = 0;\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 155
    },
    "0043ea67": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ea67(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    \n    uVar1 = fcn.0043c78f(arg_ch, arg_8h, &var_14h);\n    iVar2 = fcn.0043e8cd(uVar1, 2);\n    *(iVar2 + 0x14) = 0;\n    *(iVar2 + 0x18) = 0;\n    *(iVar2 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 136
    },
    "00440aa0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00440aa0(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.COleDispatchException.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 1;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 206
    },
    "004046ca": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046ca(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_10h = 0;\n    var_ch = fcn.0040fcf7(arg_8h);\n    uVar1 = fcn.00404296(&var_24h, 10000);\n    fcn.00403fe8(uVar1);\n    if (arg_8h < 0) {\n        uVar1 = fcn.0040424c(&var_24h);\n        fcn.00403fe8(uVar1);\n    }\n    var_18h = fcn.0040fcf7(arg_ch);\n    if (arg_ch < 0) {\n        uVar1 = fcn.0040424c(&var_24h);\n        fcn.00403fe8(uVar1);\n    }\n    uVar1 = fcn.00404135(&var_24h, &var_18h);\n    fcn.00403fe8(uVar1);\n    *(in_ECX + 8) = 0;\n    return;\n}\n",
        "token_count": 344
    },
    "00404e31": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404e31(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    ulong *in_ECX;\n    uint uVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar2 = 0;\n    if (*(in_ECX + 1) == 0) {\n        iVar1 = fcn.00404adb(*in_ECX, *in_ECX >> 0x20, &var_24h);\n        if (iVar1 != 0) {\n            *arg_8h = var_10h;\n            arg_8h[1] = var_14h;\n            arg_8h[7] = 0;\n            arg_8h[2] = var_ch + -1;\n            arg_8h[3] = var_18h;\n            arg_8h[4] = var_1ch;\n            arg_8h[5] = var_20h;\n            arg_8h[6] = var_24h;\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "0040537c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040537c(ulong *arg_8h, double *arg_ch)\n\n{\n    ulong *in_ECX;\n    uint uVar1;\n    float10 fVar2;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = 2;\n    if ((*(in_ECX + 1) != 2) && (*(arg_ch + 1) != 2)) {\n        uVar1 = 1;\n        if ((*(in_ECX + 1) != 1) && (uVar1 = 1,  *(arg_ch + 1) != 1)) {\n            fVar2 = fcn.00404d3d(*in_ECX);\n            fVar2 = fcn.00404d89(fVar2 + *arg_ch);\n            fcn.004051aa(fVar2);\n            fcn.004057f5();\n            *arg_8h = 0;\n            *(arg_8h + 1) = 0;\n            return;\n        }\n    }\n    *(arg_8h + 1) = uVar1;\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 257
    },
    "004053f9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053f9(ulong *arg_8h, double *arg_ch)\n\n{\n    ulong *in_ECX;\n    uint uVar1;\n    float10 fVar2;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = 2;\n    if ((*(in_ECX + 1) != 2) && (*(arg_ch + 1) != 2)) {\n        uVar1 = 1;\n        if ((*(in_ECX + 1) != 1) && (uVar1 = 1,  *(arg_ch + 1) != 1)) {\n            fVar2 = fcn.00404d3d(*in_ECX);\n            fVar2 = fcn.00404d89(fVar2 - *arg_ch);\n            fcn.004051aa(fVar2);\n            fcn.004057f5();\n            *arg_8h = 0;\n            *(arg_8h + 1) = 0;\n            return;\n        }\n    }\n    *(arg_8h + 1) = uVar1;\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 257
    },
    "0040591d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040591d(double *arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    double dVar2;\n    double *in_ECX;\n    uint uVar3;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = 2;\n    if ((((*(in_ECX + 1) != 2) && (*(arg_ch + 1) != 2)) && (uVar3 = 1,  *(in_ECX + 1) != 1)) && (*(arg_ch + 1) != 1)) {\n        dVar1 = *arg_ch;\n        dVar2 = *in_ECX;\n        fcn.00405c2b();\n        *arg_8h = dVar1 + dVar2;\n        *(arg_8h + 1) = 0;\n        return;\n    }\n    *(arg_8h + 1) = uVar3;\n    *arg_8h = 0.0;\n    return;\n}\n",
        "token_count": 226
    },
    "0040597c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040597c(double *arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    double dVar2;\n    double *in_ECX;\n    uint uVar3;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = 2;\n    if ((((*(in_ECX + 1) != 2) && (*(arg_ch + 1) != 2)) && (uVar3 = 1,  *(in_ECX + 1) != 1)) && (*(arg_ch + 1) != 1)) {\n        dVar1 = *in_ECX;\n        dVar2 = *arg_ch;\n        fcn.00405c2b();\n        *arg_8h = dVar1 - dVar2;\n        *(arg_8h + 1) = 0;\n        return;\n    }\n    *(arg_8h + 1) = uVar3;\n    *arg_8h = 0.0;\n    return;\n}\n",
        "token_count": 226
    },
    "00406e46": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406e46(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    uint var_20h;\n    uint var_10h;\n    \n    uVar2 = 0;\n    if (*(arg_8h + 8) == 0) {\n        iVar1 = fcn.00404e31(&var_20h);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00404e31(&var_10h);\n            if (iVar1 != 0) {\n                uVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x1006, 0, &var_20h);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 193
    },
    "0040b9ee": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b9ee(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (*(param_1 + 0x48) == 0) {\n        if (*(param_1 + 0x38) != 0) {\n            var_10h = *(param_1 + 0x40);\n            var_ch = 0;\n            var_8h = 0;\n            var_18h = 1;\n            var_14h = 0;\n            uVar1 = (**(**(param_1 + 8) + 0x20))(*(param_1 + 8), 1, 0x44a11c, 0, 0, &var_18h);\n            return uVar1;\n        }\n    }\n    else if ((*(param_1 + 0x50) != 0) && (*(*(param_1 + 0x50) + 0xc) != 0)) {\n        uVar1 = fcn.0040b1bf();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 274
    },
    "0040e665": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nbool fcn.0040e665(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.00429d0b(0x1c);\n    *(unaff_EBP + -0x14) = iVar1;\n    *(unaff_EBP + -4) = 1;\n    if (iVar1 == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = fcn.0040e5b3(*(unaff_EBP + 8));\n    }\n    iVar1 = puVar2[5];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + 8) = puVar2;\n    if (iVar1 == 0) {\n        if (puVar2 != NULL) {\n            (***puVar2)(1);\n        }\n        *(unaff_EBP + 8) = 0;\n    }\n    else {\n        fcn.00439e31();\n        fcn.0043ad3e(0xb);\n        fcn.0043a1e1(puVar2);\n        fcn.0043adae(0xb);\n    }\n    iVar1 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1 != 0;\n}\n",
        "token_count": 416
    },
    "0042cc37": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042cc37(uint noname_0, uint *hWnd, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = *hWnd;\n    var_4h = (*_sym.imp.USER32.dll_GetDlgCtrlID)(uVar3);\n    var_4h = var_4h & 0xffff;\n    uVar1 = hWnd[2];\n    iVar2 = fcn.0043a6ad(0x4397b6);\n    if ((*(iVar2 + 0xb8) != in_ECX[7]) && (iVar2 = fcn.0042d582(uVar3, arg_10h),  iVar2 == 0)) {\n        var_ch = arg_10h;\n        var_8h = hWnd;\n        uVar3 = (**(*in_ECX + 0xc))(var_4h, uVar1 & 0xffff | 0x4e0000, &var_ch, 0);\n        return uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 279
    },
    "0042d165": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d165(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0042d058(arg_8h, &var_8h, &var_4h);\n    iVar1 = fcn.0042d118(arg_8h, &var_24h, 2);\n    if (iVar1 != 0) {\n        var_4h = var_4h - (-(var_14h != 1) & var_14h - 1U);\n    }\n    return var_4h;\n}\n",
        "token_count": 161
    },
    "0042f6e5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint fcn.0042f6e5(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    uVar2 = 0;\n    iVar1 = *(extraout_ECX + 0xc);\n    *(unaff_EBP + -0x10) = &var_14h;\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -4) = 0;\n        uVar2 = (**(extraout_ECX + 0xc))();\n        *(unaff_EBP + -0x14) = uVar2;\n        uVar2 = *(unaff_EBP + -0x14);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 276
    },
    "00432f0e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432f0e(uint hWnd, uint lpString2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpString1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    if (((uVar1 < 0x101) && (uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString1, 0x100),  uVar2 == uVar1))\n       && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, lpString2),  iVar3 == 0)) {\n        return;\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(hWnd, lpString2);\n    return;\n}\n",
        "token_count": 186
    },
    "00433234": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00433234(uint arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_44h;\n    uint var_4h;\n    \n    fcn.00404ef4(&var_4h);\n    *arg_ch = var_4h;\n    fcn.00404ef4(&var_4h + 2);\n    if (var_4h._2_2_ < 0x40) {\n        uVar1 = fcn.00433469(&var_44h, var_4h._2_2_);\n        if (uVar1 == var_4h._2_2_) {\n            *(&var_44h + var_4h._2_2_) = 0;\n            iVar2 = fcn.00439e31();\n            fcn.0043ad3e(0);\n            for (puVar3 = *(iVar2 + 0x1c); puVar3 != NULL; puVar3 = puVar3[5]) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&var_44h, *puVar3);\n                if (iVar2 == 0) goto code_r0x004332ad;\n            }\n            puVar3 = NULL;\ncode_r0x004332ad:\n            fcn.0043adae(0);\n            return puVar3;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 342
    },
    "00434dd3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00434dd3(uint Point, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    if (*(in_ECX + 0x50) == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetCapture)();\n    uVar2 = (*_sym.imp.USER32.dll_WindowFromPoint)(Point, arg_ch);\n    iVar3 = fcn.0042b601(uVar2);\n    if (iVar3 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = *(iVar3 + 0x1c);\n    }\n    iVar4 = fcn.0042cd34();\n    uVar2 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n    fcn.0042b601(uVar2);\n    iVar5 = fcn.0042cd34();\n    var_ch = 0;\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    if (iVar3 != 0) {\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar3, 0);\n    }\n    if ((iVar5 == 0) || (iVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  iVar3 == iVar7)) {\n        uVar2 = *0x459298;\n        if (iVar1 == *(in_ECX + 0x1c)) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            uVar2 = *0x459298;\n        }\ncode_r0x00434ece:\n        (*_sym.imp.USER32.dll_SetCursor)(uVar2);\n        goto code_r0x00434ed4;\n    }\n    if (iVar3 == 0) {\ncode_r0x00434e9d:\n        if (iVar6 != iVar8) goto code_r0x00434ea2;\n    }\n    else {\n        if (iVar6 == iVar8) {\n            uVar2 = *(in_ECX + 0x1c);\n            iVar7 = fcn.004369a8();\n            if (iVar7 != 0) {\n                var_ch = 1;\n                if (iVar5 != iVar4) {\n                    iVar3 = 0;\n                    goto code_r0x00434ed4;\n                }\n                uVar2 = *0x45929c;\n                if (iVar1 != *(in_ECX + 0x1c)) {\n                    (*_sym.imp.USER32.dll_SetCapture)(*(in_ECX + 0x1c));\n                    uVar2 = *0x45929c;\n                }\n                goto code_r0x00434ece;\n            }\n            goto code_r0x00434e9d;\n        }\ncode_r0x00434ea2:\n        iVar3 = 0;\n    }\n    if (iVar1 == *(in_ECX + 0x1c)) {\n        (*_sym.imp.USER32.dll_ReleaseCapture)(uVar2);\n    }\ncode_r0x00434ed4:\n    if (arg_10h != NULL) {\n        *arg_10h = var_ch;\n    }\n    return iVar3;\n}\n",
        "token_count": 782
    },
    "00436e27": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00436e27(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.0042f6e5();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            if (*0x4592b4 == 0) {\n                return piVar1;\n            }\n            uVar3 = fcn.0042e981();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.0042e9cc(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 295
    },
    "004375fb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004375fb(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(in_ECX + 0x1c));\n    fcn.0042b601(uVar3);\n    pcVar2 = _sym.imp.SHELL32.dll_DragQueryFileA;\n    uVar5 = 0;\n    var_4h = (*_sym.imp.SHELL32.dll_DragQueryFileA)(arg_8h, 0xffffffff, 0, 0);\n    iVar4 = fcn.00439e31();\n    piVar1 = *(iVar4 + 4);\n    if (var_4h != 0) {\n        do {\n            (*pcVar2)(arg_8h, uVar5, &var_108h, 0x104);\n            (**(*piVar1 + 0x7c))(&var_108h);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < var_4h);\n    }\n    (*_sym.imp.SHELL32.dll_DragFinish)(arg_8h);\n    return;\n}\n",
        "token_count": 312
    },
    "00438dc4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438dc4(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t var_50h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    }\n    else {\n        uVar2 = *(arg_ch + 8);\n    }\n    puVar4 = &var_50h;\n    for (iVar3 = 0xf; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    iVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    pcVar1 = _sym.imp.GDI32.dll_DPtoLP;\n    var_10h = (iVar3 * var_50h) / 0x2d0;\n    (*_sym.imp.GDI32.dll_DPtoLP)(uVar2, &var_14h, 1);\n    var_ch = 0;\n    var_8h = 0;\n    (*pcVar1)(uVar2, &var_ch, 1);\n    var_50h = fcn.004111c8(var_10h - var_8h);\n    var_50h = -var_50h;\n    if (arg_ch == 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    uVar2 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_50h);\n    fcn.00432b51(uVar2);\n    return;\n}\n",
        "token_count": 451
    },
    "0043b0d7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.0043b0d7(void)\n\n{\n    uint uVar1;\n    uint32_t var_14h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_14h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1);\n    return 1 < var_14h;\n}\n",
        "token_count": 82
    },
    "0043ce0b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043ce0b(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_8h;\n    iVar4 = (*_sym.imp.ole32.dll_ReadClassStg)(arg_8h, &var_1ch);\n    if (iVar4 == 0) {\n        var_4h = 0;\n        (*_sym.imp.ole32.dll_ReadFmtUserTypeStg)(uVar3, &var_8h, &var_4h);\n        var_ch = 0;\n        arg_8h = NULL;\n        iVar4 = (*_sym.imp.ole32.dll_OleRegGetUserType)(arg_ch, 1, &arg_8h);\n        pcVar1 = _sym.imp.ole32.dll_WriteClassStg;\n        if (iVar4 != 0) {\n            arg_8h = &var_ch;\n        }\n        arg_ch = (*_sym.imp.ole32.dll_WriteClassStg)(uVar3, arg_ch);\n        pcVar2 = _sym.imp.ole32.dll_WriteFmtUserTypeStg;\n        if ((arg_ch == 0) &&\n           ((arg_ch = (*_sym.imp.ole32.dll_WriteFmtUserTypeStg)(uVar3, var_8h, arg_8h),  arg_ch != 0 ||\n            (arg_ch = (*_sym.imp.ole32.dll_SetConvertStg)(uVar3, 1),  arg_ch != 0)))) {\n            (*pcVar1)(uVar3, &var_1ch);\n            (*pcVar2)(uVar3, var_8h, var_4h);\n        }\n        pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n        if (arg_8h != &var_ch) {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(arg_8h);\n        }\n        (*pcVar1)(var_4h);\n        return arg_ch;\n    }\n    return iVar4;\n}\n",
        "token_count": 498
    },
    "0043da71": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0043da71(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    if (*(unaff_EBP + 8) < 0) {\n        fcn.0042f7a9();\n        uVar1 = *0x454618;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = uVar1;\n        *(unaff_EBP + -0x14) = 0xffffffff;\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x20) = vtable.CFileException.0;\n        *(unaff_EBP + -0x18) = 0;\n        fcn.0042abaa(0);\n        *(unaff_EBP + -4) = 2;\n        fcn.0043da08(unaff_EBP + -0x20, *(unaff_EBP + 8));\n        fcn.004313eb(*(unaff_EBP + -0x18), *(unaff_EBP + -0x14), 0);\n        *(unaff_EBP + -0x20) = vtable.CFileException.0;\n        *(unaff_EBP + -4) = 3;\n        fcn.0042aa21();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 427
    },
    "00427499": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427499(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint16_t **in_ECX;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = NULL;\n    }\n    else {\n        fcn.004273e4(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00434791": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434791(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if ((arg_ch < arg_10h) || (arg_14h < arg_ch)) {\n        fcn.00434701(arg_8h, arg_10h, arg_14h, 0x445a3c, 0xf112);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00408907": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00408907(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlSite.0;\n    pcVar1 = extraout_ECX[0x22];\n    *(unaff_EBP + -4) = 2;\n    if (pcVar1 != NULL) {\n        fcn.0040a88c();\n        fcn.00429d34(pcVar1);\n    }\n    fcn.004097d2();\n    fcn.0040944e(extraout_ECX + 0xf, extraout_ECX[0x18]);\n    fcn.0040944e(0x449c90, extraout_ECX[0x19]);\n    fcn.0040944e(0x449c40, extraout_ECX[0x21]);\n    piVar2 = extraout_ECX[0x14];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0x14))(piVar2);\n        (**(*extraout_ECX[0x14] + 8))(extraout_ECX[0x14]);\n        extraout_ECX[0x14] = NULL;\n    }\n    piVar2 = extraout_ECX[0x15];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2);\n        extraout_ECX[0x15] = NULL;\n    }\n    piVar2 = extraout_ECX[0x13];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0xc))(piVar2, 0);\n        (**(*extraout_ECX[0x13] + 0x18))(extraout_ECX[0x13], 1);\n        (**(*extraout_ECX[0x13] + 8))(extraout_ECX[0x13]);\n        extraout_ECX[0x13] = NULL;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX + 0x2a);\n    fcn.0040a059(0xffffffff, 0);\n    if (((extraout_ECX[0x25] != NULL) && (extraout_ECX[0x24] != NULL)) &&\n       (piVar2 = *(extraout_ECX[0x24] + 0x88),  piVar2 != NULL)) {\n        (**(*piVar2 + 8))(extraout_ECX, 0);\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 0;\n    fcn.004410a9();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004297b9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 762
    },
    "0042923c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042923c(int32_t *param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack4;\n    \n    bVar1 = true;\n    iStack4 = 0;\n    do {\n        if (bVar1) {\n            do {\n                iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n                if (iVar2 != 0) break;\n                iVar2 = iStack4 + 1;\n                iVar3 = (**(*param_1 + 0x60))(iStack4);\n                if (iVar3 == 0) {\n                    bVar1 = false;\n                }\n                iStack4 = iVar2;\n            } while (bVar1);\n        }\n        do {\n            iVar2 = (**(*param_1 + 0x5c))();\n            if (iVar2 == 0) {\n                (**(*param_1 + 0x68))();\n                return;\n            }\n            iVar2 = (**(*param_1 + 100))(param_1 + 0xc);\n            if (iVar2 != 0) {\n                bVar1 = true;\n            }\n            iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n        } while (iVar2 != 0);\n    } while( true );\n}\n",
        "token_count": 335
    },
    "0042cfcd": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cfcd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (**(*in_ECX + 0x68))(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = in_ECX[7];\n    }\n    else {\n        arg_8h = 2;\n        iVar1 = *(iVar1 + 0x1c);\n    }\n    (*_sym.imp.USER32.dll_SetScrollPos)(iVar1, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 147
    },
    "0042d025": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d025(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (**(*in_ECX + 0x68))(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = in_ECX[7];\n    }\n    else {\n        arg_8h = 2;\n        iVar1 = *(iVar1 + 0x1c);\n    }\n    (*_sym.imp.USER32.dll_SetScrollRange)(iVar1, arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 158
    },
    "0042d058": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d058(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (**(*in_ECX + 0x68))(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = in_ECX[7];\n    }\n    else {\n        arg_8h = 2;\n        iVar1 = *(iVar1 + 0x1c);\n    }\n    (*_sym.imp.USER32.dll_GetScrollRange)(iVar1, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 147
    },
    "0042e734": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e734(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x34) == NULL) {\n        (*_sym.imp.USER32.dll_CheckRadioButton)(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        (**(**(in_ECX + 0x34) + 0x68))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0043172a": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint fcn.0043172a(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0xffffffff;\n    piVar2 = fcn.00428f48();\n    iVar3 = fcn.00439e31();\n    piVar1 = *(iVar3 + 4);\n    iVar3 = fcn.0043b15d(param_1, param_2, param_3, param_4);\n    if ((iVar3 != 0) && ((piVar1 == NULL || (iVar3 = (**(*piVar1 + 0x84))(),  iVar3 != 0)))) {\n        iVar3 = (**(*piVar2 + 0x50))();\n        if (iVar3 == 0) {\n            if (piVar2[7] != NULL) {\n                (**(*piVar2[7] + 0x58))();\n            }\n            uVar4 = (**(*piVar2 + 0x68))();\n        }\n        else {\n            uVar4 = (**(*piVar2 + 0x54))();\n        }\n    }\n    fcn.0044189c();\n    return uVar4;\n}\n",
        "token_count": 293
    },
    "00428fde": {
        "rules": [
            "resume thread"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00428fde(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0042f6e5();\n    if (piVar1 == NULL) {\n        fcn.00426584();\n    }\n    piVar1[0x13] = 0;\n    iVar2 = fcn.00429145(arg_14h | 4, arg_10h, arg_18h);\n    if (iVar2 == 0) {\n        (**(*piVar1 + 0x78))();\n        piVar1 = NULL;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(piVar1[10], arg_ch);\n        if ((arg_14h & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(piVar1[10]);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 241
    },
    "00430970": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00430970(uint hKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    uint lpType;\n    uint lpcbData;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    bVar5 = false;\n    var_8h = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n    if (iVar3 == 0) {\n        var_4h = 0;\n        iVar3 = (*pcVar1)(var_8h, hKey, &var_4h);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            hKey = 0;\n            iVar3 = (*pcVar1)(var_4h, \"InProcServer32\", &hKey);\n            if (iVar3 == 0) {\n                uVar4 = fcn.0042ae51(0x104);\n                lpcbData = 0x104;\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x457300, 0, &lpType, uVar4, &lpcbData);\n                fcn.0042aea0(0xffffffff);\n                bVar5 = iVar3 == 0;\n                (*pcVar2)(hKey);\n            }\n            (*pcVar2)(var_4h);\n        }\n        (*pcVar2)(var_8h);\n    }\n    return bVar5;\n}\n",
        "token_count": 394
    },
    "0043a8bc": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043a8bc(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x7c), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x90), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 383
    },
    "0043a950": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043a950(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0043a8bc();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 166
    },
    "00401910": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00401910(char *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    uVar2 = 0xffffffff;\n    iVar4 = 0;\n    pcVar3 = param_1;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    iVar5 = (~uVar2 - 1) / 2;\n    if (-1 < iVar5) {\n        pcVar3 = param_1 + (~uVar2 - 2);\n        do {\n            cVar1 = param_1[iVar4];\n            param_1[iVar4] = *pcVar3;\n            *pcVar3 = cVar1;\n            pcVar3 = pcVar3 + -1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 <= iVar5);\n    }\n    return param_1;\n}\n",
        "token_count": 257
    },
    "0040aa6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0040aa6c(uint arg_8h)\n\n{\n    code **ppcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x14) = 0;\n    if (extraout_ECX[1] != 0) {\n        *(unaff_EBP + -0x10) = 0;\n        ppcVar1 = **(unaff_EBP + 8);\n        *(unaff_EBP + -4) = 0;\n        iVar4 = (**ppcVar1)(*(unaff_EBP + 8), 0x449410, unaff_EBP + -0x10);\n        *(unaff_EBP + -0x14) = iVar4;\n        if ((-1 < iVar4) && (uVar5 = 0,  extraout_ECX[1] != 0)) {\n            do {\n                (**(**(unaff_EBP + -0x10) + 0x18))(*(unaff_EBP + -0x10), *(*extraout_ECX + uVar5 * 8), 0);\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < extraout_ECX[1]);\n        }\n        extraout_ECX[1] = 0;\n        fcn.00429d34(*extraout_ECX);\n        piVar2 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *extraout_ECX = 0;\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    uVar3 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 539
    },
    "0040ccfa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ccfa(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = 0;\n    uVar3 = 0;\n    uVar1 = *(*(param_1 + 8) + 4);\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.0040cd22();\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 153
    },
    "0040d6a2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040d6a2(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar4 = 0;\n    if (param_2 != 0) {\n        while ((iVar5 = param_2,  uVar2 = (*pcVar1)(*(iVar5 + 0x1c), 0xfffffff0),  (uVar2 & 0xc0000000) == 0x40000000 &&\n               (iVar5 != unaff_EBX))) {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar5 + 0x1c));\n            param_2 = fcn.0042b601(uVar3);\n            uVar2 = (*pcVar1)(*(param_2 + 0x1c), 0xffffffec);\n            if ((uVar2 & 0x10000) != 0) {\n                return iVar5;\n            }\n            iVar4 = iVar5;\n            if (param_2 == 0) {\n                return iVar5;\n            }\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 300
    },
    "0040d7f6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d7f6(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint noname_5;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t noname_6;\n    \n    iVar3 = 0;\n    noname_6 = arg_ch;\n    iVar1 = fcn.0040d6a2(arg_8h);\n    while( true ) {\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0x1c);\n        }\n        noname_5 = (*_sym.imp.USER32.dll_GetNextDlgGroupItem)(*(arg_8h + 0x1c), iVar1, 0);\n        iVar1 = fcn.0042b601();\n        if (((iVar1 == 0) || (iVar3 = iVar3 + 1,  iVar1 == arg_ch)) || (0x3c < iVar3)) break;\n        iVar2 = fcn.0040d7d7(iVar1, arg_10h);\n        if (iVar2 != 0) {\n            return iVar1;\n        }\n    }\n    iVar3 = fcn.0040d6a2(arg_8h);\n    iVar1 = iVar3;\n    do {\n        iVar1 = fcn.0040d6fb(arg_8h, iVar1, 3, arg_8h, arg_ch, noname_5, noname_6, unaff_EDI, unaff_ESI);\n        iVar2 = fcn.0040d7d7(iVar1, arg_10h);\n        if (iVar2 != 0) {\n            return iVar1;\n        }\n    } while (iVar1 != iVar3);\n    return 0;\n}\n",
        "token_count": 417
    },
    "0040d8a1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d8a1(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    do {\n        arg_ch = fcn.0040d7f6(arg_8h, arg_ch, arg_10h);\n        if (arg_ch == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0040d87b(arg_ch);\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetNextDlgTabItem)(*(arg_8h + 0x1c), *(arg_ch + 0x1c), 0);\n            arg_ch = fcn.0042b601(uVar2);\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        iVar1 = fcn.0042eb69();\n        if (iVar1 != 0) {\n            return arg_ch;\n        }\n        if (arg_ch == iVar3) {\n            return 0;\n        }\n        if (iVar3 == 0) {\n            iVar3 = arg_ch;\n        }\n        var_4h = var_4h + 1;\n    } while (var_4h < 0x200);\n    return 0;\n}\n",
        "token_count": 329
    },
    "0040d916": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d916(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if (param_1 != 0) {\n        piVar4 = NULL;\n        iVar3 = param_1;\n        do {\n            iVar1 = *(iVar3 + 0x34);\n            if ((iVar1 != 0) || (piVar4 = *(iVar3 + 0x38),  piVar4 != NULL)) break;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar3 + 0x1c));\n            iVar3 = fcn.0042b601(uVar2);\n        } while (iVar3 != 0);\n        if ((iVar3 != 0) && (iVar1 == 0)) {\n            (**(*piVar4 + 0xac))();\n            uVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar3 = fcn.0042b601(uVar2);\n            if (iVar3 != param_1) {\n                fcn.0042ebab();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0040d973": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d973(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_retaddr;\n    \n    if ((param_1 != 0) &&\n       (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x1c)),  pcVar2 = _sym.imp.USER32.dll_GetParent,  iVar3 != 0\n       )) {\n        uVar4 = *(param_1 + 0x1c);\n        while( true ) {\n            uVar4 = (*pcVar2)(uVar4);\n            iVar3 = fcn.0042b601(uVar4);\n            if (iVar3 == 0) break;\n            piVar1 = *(iVar3 + 0x34);\n            if (piVar1 != NULL) {\n                if (piVar1[0x12] == 0) {\n                    return;\n                }\n                iVar3 = fcn.0042b601(*(piVar1[0x12] + 0x20));\n                if (iVar3 == 0) {\n                    return;\n                }\n                if (unaff_retaddr == iVar3) {\n                    return;\n                }\n                if ((unaff_retaddr != 0) &&\n                   (iVar3 = (*_sym.imp.USER32.dll_IsChild)(*(iVar3 + 0x1c), *(unaff_retaddr + 0x1c)),  iVar3 != 0)) {\n                    return;\n                }\n                (**(*piVar1 + 0x5c))(0);\n                return;\n            }\n            uVar4 = *(iVar3 + 0x1c);\n        }\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "0040d9e6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040d9e6(int32_t param_1, uint param_2)\n\n{\n    int32_t noname_4;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_5;\n    \n    noname_4 = fcn.0042e766();\n    if (noname_4 == 0) {\n        noname_5 = 1;\n        iVar1 = fcn.0040d6fb(param_1, 0, 1, param_2, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_1);\n        noname_1 = iVar1;\n        if (iVar1 != param_1) {\n            do {\n                iVar2 = fcn.0042ea6e();\n                if (iVar2 == unaff_ESI) {\n                    return noname_1;\n                }\n                noname_1 = fcn.0040d6fb(param_1, noname_1, 1, param_1, noname_4, noname_5, param_2, unaff_EDI, unaff_ESI\n                                       );\n            } while ((noname_1 != 0) && (noname_1 != iVar1));\n        }\n        noname_4 = 0;\n    }\n    return noname_4;\n}\n",
        "token_count": 337
    },
    "0040daab": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040daab(uint param_1, int32_t param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_4;\n    int32_t noname_5;\n    \n    if (param_2 != 0) {\n        noname_4 = *(param_2 + 0x1c);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(noname_4, 0xffffffec);\n        if ((uVar1 & 0x10000) == 0) {\n            iVar2 = fcn.0040d6a2();\n            noname_5 = param_2;\n            goto code_r0x0040dae0;\n        }\n    }\n    noname_5 = 3;\n    noname_4 = 0;\n    iVar2 = fcn.0040d6fb(param_1, 0, 3, unaff_EDI, unaff_ESI, unaff_retaddr, param_1, param_2, param_3);\ncode_r0x0040dae0:\n    noname_1 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.0040da3d(noname_1, 0);\n            noname_1 = fcn.0040d6fb(unaff_EDI, noname_1, 0, unaff_EDI, noname_4, noname_5, unaff_EDI, unaff_ESI, \n                                    unaff_retaddr);\n            if (noname_1 == 0) {\n                return;\n            }\n        } while (noname_1 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "0040e7b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e7b8(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00439e31();\n    fcn.0043ad3e(0xb);\n    while (puVar1 = *(iVar2 + 0x103c),  puVar1 != NULL) {\n        fcn.0043a1f4();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    fcn.0043adae(0xb);\n    return;\n}\n",
        "token_count": 129
    },
    "0041abc4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041abc4(int16_t param_1)\n\n{\n    int16_t *piVar1;\n    \n    piVar1 = 0x45655c;\n    do {\n        if (param_1 == *piVar1) {\n            return 0;\n        }\n        piVar1 = piVar1 + 1;\n    } while (piVar1 < 0x456570);\n    return 1;\n}\n",
        "token_count": 94
    },
    "00428907": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00428907(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x00428914;\n    param_3 = *(param_1 + 4);\n    while( true ) {\n        if (param_3 == NULL) {\n            return NULL;\n        }\n        if (param_3[2] == param_2) break;\ncode_r0x00428914:\n        param_3 = *param_3;\n    }\n    return param_3;\n}\n",
        "token_count": 129
    },
    "0042894a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042894a(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.00429d34(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00428aa2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00428aa2(int32_t param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 171
    },
    "00428ad4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00428ad4(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "00428b79": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00428b79(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        uVar4 = (param_2 >> 4) % *(param_1 + 8);\n        puVar2 = *(iVar1 + uVar4 * 4);\n        puVar5 = iVar1 + uVar4 * 4;\n        while (puVar3 = puVar2,  puVar3 != NULL) {\n            if (puVar3[1] == param_2) {\n                *puVar5 = *puVar3;\n                fcn.00428a89(puVar3);\n                return 1;\n            }\n            puVar5 = puVar3;\n            puVar2 = *puVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00429d0b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00429d0b(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0040f5cc(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x4545e0 == NULL) break;\n        iVar1 = (**0x4545e0)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "0042c20f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042c20f(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(param_1 + 4));\n    iVar4 = 0;\n    if (0 < iVar1) {\n        do {\n            uVar2 = (*_sym.imp.USER32.dll_GetSubMenu)(*(param_1 + 4), iVar4);\n            iVar3 = fcn.0042eeab(uVar2);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(param_1 + 4), iVar4);\n                if (iVar3 == param_1) {\n                    iVar1 = fcn.0042eec0(*(param_1 + 4));\n                    return iVar1;\n                }\n            }\n            else {\n                iVar3 = fcn.0042c20f(iVar3, param_3);\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 286
    },
    "0042ccb1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042ccb1(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar4 = *(param_1 + 0x1c),  iVar4 != 0)) {\n        while( true ) {\n            uVar2 = (*pcVar1)(iVar4);\n            piVar3 = fcn.0042b601(uVar2);\n            if (piVar3 == NULL) break;\n            iVar4 = (**(*piVar3 + 0xb0))();\n            if (iVar4 != 0) {\n                return piVar3;\n            }\n            iVar4 = piVar3[7];\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 199
    },
    "0042cd34": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042cd34(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x1c),  *(param_1 + 0x1c) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.0042ccef(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0042b601(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "0042ced2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042ced2(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0042ced2(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return iVar3;\n        }\n        if (arg_10h == 0) {\n            iVar2 = fcn.0042b601();\n            return iVar2;\n        }\n        iVar2 = fcn.0042b628(iVar2);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.0042ced2(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return iVar3;\n}\n",
        "token_count": 333
    },
    "0042da38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042da38(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.0042b568();\n    return;\n}\n",
        "token_count": 127
    },
    "0042f790": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042f790(int32_t param_1, int32_t param_2)\n\n{\n    while( true ) {\n        if (param_1 == 0) {\n            return 0;\n        }\n        if (param_1 == param_2) break;\n        param_1 = *(param_1 + 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 87
    },
    "00432e99": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432e99(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != -1) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00433f32": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00433f32(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x00433fab;\n    iVar3 = fcn.00433fda();\n    if ((iVar3 == 0) && (iVar3 = fcn.00402330(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar4 = iVar3;\n        iVar5 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x1c); iVar4 = iVar3,  iVar5 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00433fab:\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar4 = iVar3;\n            iVar5 = iVar3;\n            if ((uVar6 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar4,  iVar1 != 0) {\n        iVar4 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar5);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar4 == 0)) || (iVar3 == iVar5))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 482
    },
    "00434ab7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00434ab7(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    for (; iVar2 != 0; iVar2 = fcn.0042ccef(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(); iVar2 != 0; iVar2 = fcn.0042ccef(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    iVar2 = fcn.0042cd34();\n    if (iVar2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = *(iVar2 + 0x1c);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetLastActivePopup)(uVar4);\n    while( true ) {\n        if (iVar2 == 0) {\n            (*pcVar1)(*(unaff_EBX + 0x1c), 0x111, 0xe147, 0);\n            return;\n        }\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) break;\n        iVar2 = fcn.0042ccef(iVar2);\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "004369a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004369a8(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.0042ccef();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 76
    },
    "00436ca1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436ca1(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.0042e967();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.0042ce41();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.0042eb69();\n        if ((((~param_2 & 8) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x25) = *(param_1 + 0x25) | 2;\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 1, 0);\n            *(param_1 + 0x25) = *(param_1 + 0x25) & 0xfd;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.004369a8(*(iVar4 + 0x1c), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "0043a1f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043a1f4(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *param_1;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (iVar3 == param_2) {\n        *param_1 = *(param_1[1] + param_2);\n    }\n    else {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar1 = param_1[1];\n        do {\n            iVar2 = *(iVar1 + iVar3);\n            if (iVar2 == param_2) break;\n            iVar3 = iVar2;\n        } while (iVar2 != 0);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        *(iVar1 + iVar3) = *(iVar1 + param_2);\n    }\n    return 1;\n}\n",
        "token_count": 224
    },
    "0043a417": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a417(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    for (iVar2 = *(in_ECX + 0x14); iVar2 != 0; iVar2 = *(iVar2 + 4)) {\n        if (arg_8h < *(iVar2 + 8)) {\n            puVar3 = *(*(iVar2 + 0xc) + arg_8h * 4);\n            if (puVar3 != NULL) {\n                (***puVar3)(1);\n            }\n            *(*(iVar2 + 0xc) + arg_8h * 4) = 0;\n        }\n    }\n    puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n    *puVar1 = *puVar1 & 0xfffffffe;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    return;\n}\n",
        "token_count": 266
    },
    "0043f45e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f45e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_1[1]) {\n        do {\n            fcn.0040ed16(*(*param_1 + iVar1 * 4));\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < param_1[1]);\n    }\n    fcn.00429d34(*param_1);\n    return;\n}\n",
        "token_count": 113
    },
    "00441806": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00441806(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00439e31();\n    fcn.0043ad3e(0);\n    for (iVar1 = *(iVar1 + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 0x1c)) {\n        fcn.004417e5();\n    }\n    fcn.0043adae(0);\n    return;\n}\n",
        "token_count": 104
    },
    "00429f7a": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.00429f7a(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.00429fb3(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 76
    },
    "0042ddfa": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0042ddfa(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if (param_1 != 0) {\n        iVar2 = fcn.00439e31();\n        uVar1 = *(iVar2 + 0xc);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, param_1, 0xf0);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        }\n    }\n    uVar3 = fcn.0042de4a(uVar3);\n    return uVar3;\n}\n",
        "token_count": 207
    },
    "00402cbf": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.00402cbf(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (*0x458d08 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((((iVar2 != 0) && (*0x458cf0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x445590),  *0x458cf0 != 0))\n            && (*0x458cf4 = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x458cf4 != 0)) &&\n           (((*0x458cf8 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x458cf8 != 0 &&\n             (*0x458cfc = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x458cfc != 0)) &&\n            ((*0x458d04 = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x458d04 != 0 &&\n             (*0x458d00 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x458d00 != 0)))))) {\n            *0x458d08 = 1;\n            return true;\n        }\n        *0x458cf0 = 0;\n        *0x458cf4 = 0;\n        *0x458cf8 = 0;\n        *0x458cfc = 0;\n        *0x458d00 = 0;\n        *0x458d04 = 0;\n        *0x458d08 = 1;\n        bVar3 = false;\n    }\n    else {\n        bVar3 = *0x458d00 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 427
    },
    "0042e221": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.0042e221(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t unaff_ESI;\n    uint unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"COMCTL32.DLL\");\n    uVar5 = uVar2;\n    if (uVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"InitCommonControlsEx\");\n        uVar5 = 0;\n        if (pcVar3 == NULL) {\n            if ((unaff_ESI & 0x3fc0) == unaff_ESI) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = 0x3fc0;\n            }\n        }\n        else {\n            iVar4 = (*pcVar3)(unaff_EDI);\n            if ((iVar4 != 0) && (uVar5 = unaff_ESI,  iVar1 == 0)) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = unaff_ESI | 0x3fc0;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(uVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 333
    },
    "00430864": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00430864(uint arg_8h, uint arg_ch, uint lpLibFileName)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    puVar1 = *(unaff_EBP + 0x10);\n    uVar4 = *(unaff_EBP + 8);\n    *puVar1 = 0;\n    fcn.00430901(unaff_EBP + -0x10, uVar4);\n    uVar4 = *0x454618;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + 0x10) = uVar4;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = fcn.00430970(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(unaff_EBP + 0x10));\n        if (iVar2 != 0) {\n            pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"DllGetClassObject\");\n            if (pcVar3 == NULL) {\n                uVar4 = 0x800401f9;\n            }\n            else {\n                uVar4 = (*pcVar3)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n            }\n            goto code_r0x004308d8;\n        }\n    }\n    uVar4 = 0x80040154;\ncode_r0x004308d8:\n    *(unaff_EBP + -4) = 0;\n    fcn.0042aa21();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042aa21();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 534
    },
    "0040f3e3": {
        "rules": [
            "set thread local storage value"
        ],
        "decompiled_code": "\nuint fcn.0040f3e3(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint *var_8h;\n    uint var_18h;\n    uint var_10h;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x447f88;\n    pcStack16 = fcn.00415154;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_10h;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x455890, var_8h);\n    if (iVar1 == 0) {\n        fcn.0040f0f7(0x10);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *var_8h = uVar2;\n    if (*0x455528 != NULL) {\n        (**0x455528)();\n    }\n    var_4h = 0;\n    uVar2 = (*var_8h[0x12])(var_8h[0x13]);\n    fcn.0040f47f(uVar2);\n    *in_FS_OFFSET = var_10h;\n    return 0;\n}\n",
        "token_count": 302
    },
    "00421e10": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00421e10(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    *0x459b7c = param_2;\n    *0x459b74 = param_1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *0x459b78 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(4, 0x421d60, *0x45af7c, uVar1);\n    return;\n}\n",
        "token_count": 115
    },
    "00439b2d": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00439b2d(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_THREAD_STATE.0;\n    piVar1 = extraout_ECX[0x33];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x58))();\n        if (extraout_ECX[0x33] != NULL) {\n            (**(*extraout_ECX[0x33] + 4))(1);\n        }\n    }\n    pcVar2 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (extraout_ECX[0xc] != NULL) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(extraout_ECX[0xc]);\n    }\n    if (extraout_ECX[0xb] != NULL) {\n        (*pcVar2)(extraout_ECX[0xb]);\n    }\n    if (extraout_ECX[3] != NULL) {\n        fcn.0040ed16(extraout_ECX[3]);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 375
    },
    "0042bff8": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042bff8(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x38) == NULL) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x1c));\n        uVar2 = fcn.0042aec8(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x1c), uVar2);\n        fcn.0042aea0(0xffffffff);\n    }\n    else {\n        (**(**(param_1 + 0x38) + 0x88))(param_2);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0043aa02": {
        "rules": [
            "query or enumerate registry value",
            "read .ini file"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043aa02(uint arg_8h, uint lpAppName, uint lpKeyName, uint lpDefault)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpReturnedString;\n    uint var_18h;\n    uint var_14h;\n    uint hKey;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040f1f0();\n    fcn.0040fca0();\n    iVar2 = *(extraout_ECX + 0x7c);\n    *(unaff_EBP + -0x14) = 0;\n    if (iVar2 == 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            *(unaff_EBP + 0x14) = 0x4573b8;\n        }\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), unaff_EBP + -0x1018, 0x1000, \n                   *(extraout_ECX + 0x90));\n        iVar2 = unaff_EBP + -0x1018;\n    }\n    else {\n        iVar2 = fcn.0043a950(*(unaff_EBP + 0xc));\n        *(unaff_EBP + -0x10) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + 0xc) = *0x454618;\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n            *(unaff_EBP + -4) = 0;\n            iVar2 = (*pcVar1)(iVar2, *(unaff_EBP + 0x10), 0, unaff_EBP + -0x14, 0, unaff_EBP + -0x18);\n            if (iVar2 == 0) {\n                uVar3 = fcn.0042ae51(*(unaff_EBP + -0x18), unaff_EBP + -0x18);\n                iVar2 = (*pcVar1)(*(unaff_EBP + -0x10), *(unaff_EBP + 0x10), 0, unaff_EBP + -0x14, uVar3);\n                fcn.0042aea0(0xffffffff);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x10));\n            if (iVar2 == 0) {\n                fcn.0042a796(unaff_EBP + 0xc);\n            }\n            else {\n                fcn.0042aa8f(*(unaff_EBP + 0x14));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0042aa21();\n            goto code_r0x0043ab01;\n        }\n        iVar2 = *(unaff_EBP + 0x14);\n    }\n    fcn.0042aa8f(iVar2);\ncode_r0x0043ab01:\n    uVar3 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 835
    },
    "0043a724": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043a724(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *param_1;\n    if ((iVar1 != 0) && (*0x458ed4 != NULL)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**0x458ed4);\n        if ((iVar2 != 0) && (iVar1 < *(iVar2 + 8))) {\n            return *(*(iVar2 + 0xc) + iVar1 * 4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 137
    }
}