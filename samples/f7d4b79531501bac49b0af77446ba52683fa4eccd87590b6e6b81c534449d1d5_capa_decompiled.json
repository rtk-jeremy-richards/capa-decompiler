{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 24576 named .text\n    iVar3 = *0x42e410;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar2)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar4, 0x42dc00, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar1)(uVar4, uVar6);\n                (*pcVar2)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x42e408;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 849
    },
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    char *pcVar11;\n    char *pcStack476;\n    int32_t iStack468;\n    uint uStack464;\n    uint uStack460;\n    char *pcStack456;\n    uint uStack452;\n    int32_t iStack448;\n    uchar *puStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    uint32_t *puStack428;\n    uint uStack424;\n    uint uStack380;\n    uint uStack372;\n    \n    uStack380 = 0;\n    uStack372 = 0;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    if ((iVar3 != 6) && (pcVar4 = fcn.004060c8(),  pcVar4 != NULL)) {\n        (*pcVar4)();\n    }\n    fcn.0040605e(\"UXTHEME\");\n    fcn.0040605e(\"USERENV\");\n    uStack424 = 0x403176;\n    fcn.0040605e(\"SETUPAPI\");\n    uStack424 = 9;\n    puStack428 = 0x40317d;\n    fcn.004060c8();\n    puStack428 = 0x7;\n    uStack432 = 0x403184;\n    *0x42e404 = fcn.004060c8();\n    uStack432 = 0x40318f;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack432 = 0;\n    uStack436 = 0x403196;\n    *0x42e4b8 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack436 = 0;\n    puStack444 = &stack0xfffffe84;\n    uStack440 = 0x160;\n    iStack448 = 0;\n    uStack452 = 0x428840;\n    pcStack456 = 0x4031b2;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    pcStack456 = \"NSIS Error\";\n    uStack460 = 0x42dc00;\n    uStack464 = 0x4031c1;\n    fcn.00405d33();\n    uStack464 = 0x4031c7;\n    uStack464 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    iStack468 = 0x434000;\n    fcn.00405d33();\n    *0x42e400 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    uVar5 = 0x434000;\n    if (*0x434000 == '\\\"') {\n        uStack452 = CONCAT31(uStack452._1_3_, 0x22);\n        uVar5 = 0x434001;\n    }\n    pcStack476 = uStack452;\n    puVar6 = fcn.004057d0(uVar5);\n    puVar7 = (*_sym.imp.USER32.dll_CharNextA)(puVar6);\n    pcStack456 = puVar7;\n    while (uVar2 = uStack464,  cVar1 = *puVar7,  cVar1 != '\\0') {\n        while (cVar1 == ' ') {\n            puVar7 = puVar7 + 1;\n            cVar1 = *puVar7;\n        }\n        uStack464 = CONCAT31(uStack464._1_3_, 0x20);\n        if (*puVar7 == '\\\"') {\n            puVar7 = puVar7 + 1;\n            uStack464 = uVar2 & 0xffffff00 | 0x22;\n        }\n        puVar8 = puVar7;\n        if (*puVar7 == '/') {\n            puVar8 = puVar7 + 1;\n            if ((*puVar8 == 'S') && ((*(puVar7 + 2) == ' ' || (*(puVar7 + 2) == '\\0')))) {\n                *0x42e4a0 = 1;\n            }\n            if ((*puVar8 == (((str.NCRC[3] << 8 | str.NCRC[2]) << 8 | str.NCRC[1]) << 8 | str.NCRC[0])) &&\n               ((*(puVar7 + 5) == ' ' || (*(puVar7 + 5) == '\\0')))) {\n                uStack452 = uStack452 | 4;\n            }\n            if (*(puVar7 + -1) == (((str.__D[3] << 8 | str.__D[2]) << 8 | str.__D[1]) << 8 | str.__D[0])) {\n                *(puVar7 + -1) = '\\0';\n                fcn.00405d33(0x434400, puVar7 + 3);\n                break;\n            }\n        }\n        puVar7 = fcn.004057d0();\n        puVar6 = puVar8;\n        if (*puVar7 == '\\\"') {\n            puVar7 = puVar7 + 1;\n        }\n    }\n    pcVar4 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, 0x435400, puVar6);\n    iVar9 = fcn.004030de();\n    if (iVar9 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x435400, 0x3fb);\n        pcVar11 = 0x435400;\n        sub.KERNEL32.dll_lstrcatA(0x435400, \"\\\\Temp\");\n        iVar9 = fcn.004030de();\n        if (iVar9 == 0) {\n            (*pcVar4)(0x3fc, 0x435400);\n            sub.KERNEL32.dll_lstrcatA(0x435400, 0x40916c);\n            pcVar4 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableA;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(\"TEMP\", 0x435400);\n            (*pcVar4)(0x409160, 0x435400);\n            iVar9 = fcn.004030de();\n            if (iVar9 == 0) goto code_r0x0040340b;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x435000);\n    iStack468 = 0x403371;\n    pcVar11 = puStack428;\n    iStack448 = fcn.00402c66(puStack428);\n    if (iStack448 == 0) {\n        if (*0x42e41c != 0) {\n            iStack468 = 0;\n            pcStack476 = 0x40338c;\n            puVar7 = fcn.004057d0(0x434000);\n            if (0x433fff < puVar7) {\n                do {\n                    if (*puVar7 == (((*0x40915b << 8 | *0x40915a) << 8 | *0x409159) << 8 | *0x409158)) break;\n                    puVar7 = puVar7 + -1;\n                } while (0x433fff < puVar7);\n            }\n            pcStack456 = \"Error launching installer\";\n            if (puVar7 < 0x434000) goto code_r0x00403437;\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n            pcVar11 = puVar7;\n            iVar9 = fcn.00405893();\n            if (iVar9 == 0) goto code_r0x0040340b;\n            fcn.00405d33(0x434400, puVar7);\n            pcVar11 = 0x434800;\n            fcn.00405d33(0x434800, puVar7);\n            pcStack476 = NULL;\n        }\n        *0x42e4ac = -1;\n        iStack468 = fcn.004036b3();\n    }\ncode_r0x0040340b:\n    while( true ) {\n        fcn.004035d9(pcVar11);\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (pcStack476 == NULL) break;\n        fcn.00405529(pcStack476, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x00403437:\n        iVar9 = fcn.004054ac();\n        pcStack476 = \"~nsu\";\n        sub.KERNEL32.dll_lstrcatA(0x435400);\n        if (iVar9 != 0) {\n            sub.KERNEL32.dll_lstrcatA(0x435400, 0x40914c);\n        }\n        pcVar11 = \".tmp\";\n        sub.KERNEL32.dll_lstrcatA(0x435400);\n        iVar10 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x435400, 0x434c00);\n        if (iVar10 != 0) {\n            if (iVar9 == 0) {\n                fcn.0040548f();\n            }\n            else {\n                fcn.00405412(0x435400);\n            }\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x435400);\n            if (*0x434400 == '\\0') {\n                pcStack476 = 0x434400;\n                fcn.00405d33();\n            }\n            fcn.00405d33(0x42f000, iStack448);\n            iVar9 = 0x1a;\n            *0x42f400 = *0x409141 << 8 | *0x409140;\n            do {\n                fcn.00405d55(0x428440, *(*0x42e410 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x428440);\n                if ((iStack468 != 0) &&\n                   (iVar10 = (*_sym.imp.KERNEL32.dll_CopyFileA)(0x435c00, 0x428440, 1),  iVar10 != 0)) {\n                    fcn.00405bee(0x428440, 0);\n                    fcn.00405d55(0x428440, *(*0x42e410 + 0x124));\n                    iVar10 = fcn.004054c4(0x428440);\n                    if (iVar10 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar10);\n                        iStack468 = 0;\n                    }\n                }\n                *0x42f400 = *0x42f400 + 1;\n                *0x42f400 = *0x42f400 & 0xff00 | *0x42f400;\n                iVar9 = iVar9 + -1;\n            } while (iVar9 != 0);\n            pcVar11 = 0x435400;\n            fcn.00405bee(0x435400, 0);\n        }\n    }\n    if (*0x42e494 != 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffe30);\n        iVar9 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar5);\n        if (iVar9 != 0) {\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, \"SeShutdownPrivilege\", &stack0xfffffe44);\n            uStack460 = 1;\n            iStack448 = 2;\n            (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(iStack468, 0, &stack0xfffffe34, 0, 0, 0);\n        }\n        pcVar4 = fcn.004060c8(4);\n        if (((pcVar4 != NULL) && (iVar9 = (*pcVar4)(0, 0, 0, 0x25, 0x80040002),  iVar9 == 0)) ||\n           (iVar9 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0x80040002),  iVar9 == 0)) {\n            fcn.0040140b(9);\n        }\n    }\n    if (*0x42e4ac != -1) {\n        iStack468 = *0x42e4ac;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iStack468);\n    if (*0x409018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409018);\n        *0x409018 = -1;\n    }\n    fcn.0040361e();\n    fcn.004055d5(0x435800, 7);\n    return;\n}\n",
        "token_count": 2905
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t **ppiVar10;\n    int32_t iVar11;\n    uint uVar12;\n    int32_t *piVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint uVar16;\n    int32_t **ppiVar17;\n    uint *puVar18;\n    int32_t **ppiVar19;\n    uint uVar20;\n    bool bVar21;\n    uint in_stack_fffffdf0;\n    uint in_stack_fffffdf4;\n    int32_t **ppiVar22;\n    uint lpFindFileData;\n    uint var_178h;\n    int32_t lpFileOp;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t lpRect;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    ushort uStack76;\n    uint32_t var_44h;\n    code *var_40h;\n    code *var_3ch;\n    uint lpValueName;\n    int32_t *lpMultiByteStr;\n    int32_t *hFile;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    int32_t *dwFileAttributes;\n    int32_t *var_20h;\n    int32_t *lpLastWriteTime;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint8_t var_dh;\n    int32_t lpWideCharStr;\n    int32_t hWndParent;\n    int32_t *var_4h;\n    \n    ppiVar10 = *0x40a82c;\n    pcVar7 = _sym.imp.USER32.dll_ShowWindow;\n    hWndParent = *0x42e408;\n    uVar16 = 0;\n    ppiVar17 = hWndChildAfter;\n    ppiVar19 = &var_2ch;\n    for (iVar15 = 7; iVar15 != 0; iVar15 = iVar15 + -1) {\n        *ppiVar19 = *ppiVar17;\n        ppiVar17 = ppiVar17 + 1;\n        ppiVar19 = ppiVar19 + 1;\n    }\n    iVar15 = var_28h * 0x400;\n    var_4h = NULL;\n    ppiVar17 = iVar15 + 0x42f000;\n    ppiVar19 = dwFileAttributes * 0x400 + 0x42f000;\n    *0x40a828 = &var_28h;\n    if (0x41 < var_2ch - 2U) goto code_r0x004028cf;\n    // switch table (66 cases) at 0x4028e1\n    switch(*((var_2ch - 2U) * 4 + 0x4028e1)) {\n    case 0x401490:\ncode_r0x00401492:\n        fcn.00404f4c(in_stack_fffffdf0, in_stack_fffffdf4);\n        return 0x7fffffff;\n    case 0x40149c:\n        *0x42dbcc = *0x42dbcc + 1;\n        if (hWndParent == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014b7:\n        iVar15 = fcn.0040136d(var_28h);\n        piVar13 = fcn.00401389(iVar15 + -1, 0);\n        return piVar13;\n    case 0x4014ca:\n        fcn.00404f4c(var_28h, 0);\n        break;\n    case 0x4014d6:\n        iVar15 = fcn.00402a1d(0);\n        if (iVar15 < 2) {\n            iVar15 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar15);\n        break;\n    case 0x4014f0:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(hWndParent);\n        break;\n    case 0x4014fe:\n        iVar15 = var_28h * 4;\n        if (var_20h == NULL) {\n            *(iVar15 + 0x42e4c0) = *(iVar15 + 0x42e480);\n            uVar16 = fcn.00402a1d(1);\n            *(var_28h * 4 + 0x42e480) = uVar16;\n        }\n        else {\n            *(iVar15 + 0x42e480) = *(iVar15 + 0x42e4c0);\n        }\n        break;\n    case 0x401539:\n        puVar1 = var_20h * 4 + 0x42e480;\n        uVar14 = *puVar1;\n        piVar13 = (&var_28h)[uVar14 == 0];\n        *puVar1 = uVar14 & lpLastWriteTime;\n        return piVar13;\n    case 0x40155a:\n        goto code_r0x00402877;\n    case 0x401567:\n        if (*0x42dbd0 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x42dbd0, dwFileAttributes);\n        }\n        if (*0x42dbe4 != 0) {\n            (*pcVar7)(*0x42dbe4, var_28h);\n        }\n        break;\n    case 0x401595:\n        uVar16 = fcn.00402a3a(0xfffffff0);\n        iVar15 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar16, dwFileAttributes);\n        goto code_r0x004015a6;\n    case 0x4015b3:\n        uVar16 = fcn.00402a3a(0xfffffff0);\n        puVar3 = fcn.0040583e(uVar16);\n        if (puVar3 != NULL) {\n            do {\n                puVar3 = fcn.004057d0(puVar3, 0x5c);\n                uVar2 = *puVar3;\n                *puVar3 = 0;\n                hWndChildAfter = hWndChildAfter & 0xffffff | uVar2 << 0x18;\n                if (((uVar2 == 0) && (var_20h != NULL)) && (iVar15 = fcn.004054ac(),  iVar15 != 0)) {\n                    iVar15 = fcn.00405412(uVar16);\n                }\n                else {\n                    iVar15 = fcn.0040548f(uVar16);\n                }\n                if ((iVar15 != 0) &&\n                   ((iVar15 != 0xb7 ||\n                    (uVar14 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar16),  (uVar14 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *puVar3 = hWndChildAfter._3_1_;\n                puVar3 = puVar3 + 1;\n            } while (hWndChildAfter._3_1_ != 0);\n        }\n        if (dwFileAttributes == NULL) goto code_r0x004021c4;\n        fcn.00401423(0xffffffe6);\n        fcn.00405d33(0x434800, uVar16);\n        iVar15 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar16);\n        if (iVar15 == 0) {\n            var_4h = var_4h + 1;\n        }\n        break;\n    case 0x401651:\n        uVar16 = fcn.00402a3a(0);\n        iVar15 = fcn.00406037(uVar16);\n        lpLastWriteTime = dwFileAttributes;\n        goto joined_r0x004019f1;\n    case 0x401662:\n        uVar16 = fcn.00402a3a(0xffffffd0);\n        uVar12 = fcn.00402a3a(0xffffffdf);\n        fcn.00402a3a(0x13);\n        iVar15 = (*_sym.imp.KERNEL32.dll_MoveFileA)(uVar16, uVar12);\n        if (iVar15 == 0) {\n            if ((var_20h == NULL) || (iVar15 = fcn.00406037(uVar16),  iVar15 == 0)) goto code_r0x004026a6;\n            fcn.00405bee(uVar16, uVar12);\n        }\n        goto code_r0x004021c4;\n    case 0x4016b3:\n        ppiVar10 = fcn.00402a3a(0);\n        iVar15 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(ppiVar10, 0x400, ppiVar19, &hWndChildAfter);\n        if (iVar15 == 0) {\ncode_r0x004016f3:\n            var_4h = 0x1;\n            *ppiVar19 = 0;\n        }\n        else if ((ppiVar10 < hWndChildAfter) && (*hWndChildAfter != '\\0')) {\n            iVar15 = fcn.00406037(ppiVar10);\n            if (iVar15 == 0) goto code_r0x004016f3;\n            fcn.00405d33(hWndChildAfter, iVar15 + 0x2c);\n        }\n        if (var_20h == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(ppiVar19, ppiVar19, 0x400);\n        }\n        break;\n    case 0x401717:\n        uVar16 = fcn.00402a3a(0xffffffff);\n        iVar15 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar16, 0, 0x400, ppiVar17, &hWndChildAfter);\n        bVar21 = iVar15 == 0;\n        goto code_r0x00401733;\n    case 0x40173e:\n        uVar16 = fcn.00402a3a(0xffffffef);\n        iVar15 = fcn.004059d5(ppiVar17, uVar16);\n        goto code_r0x004015a6;\n    case 0x401751:\n        iVar15 = fcn.00402a3a(0x31);\n        hWndChildAfter = var_28h & 7;\n        hWndParent = iVar15;\n        iVar11 = fcn.00405812(iVar15);\n        if (iVar11 == 0) {\n            uVar12 = 0x434800;\n            uVar16 = fcn.00405d33(0x409428, 0x434800, iVar15);\n            uVar16 = fcn.004057a5(uVar16);\n            sub.KERNEL32.dll_lstrcatA(uVar16);\n        }\n        else {\n            uVar12 = 0x409428;\n            fcn.00405d33(0x409428);\n        }\n        fcn.00405f9e(0x409428);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar15 = fcn.00406037(0x409428);\n                uVar14 = 0;\n                if (iVar15 != 0) {\n                    uVar14 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar15 + 0x14, &lpLastWriteTime);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar14) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00405981(0x409428);\n            }\n            lpWideCharStr = fcn.004059a6(0x409428, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (lpWideCharStr != -1) {\n                fcn.00404f4c(0xffffffea, hWndParent);\n                *0x42e4b4 = *0x42e4b4 + 1;\n                iVar15 = fcn.00402e9f(var_20h, lpWideCharStr, 0, 0);\n                *0x42e4b4 = *0x42e4b4 + -1;\n                if ((lpLastWriteTime != 0xffffffff) || (var_18h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)(lpWideCharStr, &lpLastWriteTime, 0, &lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(lpWideCharStr);\n                if (-1 < iVar15) goto code_r0x004028cf;\n                if (iVar15 == -2) {\n                    uVar9 = 0xffffffe9;\n                    fcn.00405d55(0x409428, 0xffffffe9);\n                    uVar20 = 0x409428;\n                    sub.KERNEL32.dll_lstrcatA(uVar12, hWndParent, 0x409428);\n                }\n                else {\n                    uVar9 = 0xffffffee;\n                    uVar20 = 0x409428;\n                    fcn.00405d55(0x409428, 0xffffffee);\n                }\n                uVar12 = 0x200010;\n                uVar16 = 0x409428;\n                goto code_r0x00402269;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.00404f4c(0xffffffe2, hWndParent);\n                bVar21 = hWndChildAfter == 0x2;\n                goto code_r0x004015a8;\n            }\n            fcn.00405d33(0x409c28, 0x42f000);\n            fcn.00405d33(0x42f000, 0x409428);\n            fcn.00405d55(0x409828, var_14h);\n            fcn.00405d33(0x42f000, 0x409c28);\n            iVar15 = fcn.00405529();\n        } while (iVar15 == 4);\n        if (iVar15 != 5) {\n            in_stack_fffffdf4 = 0x409428;\n            in_stack_fffffdf0 = 0xfffffffa;\n            goto code_r0x00401492;\n        }\n        *0x42e488 = *0x42e488 + 1;\n        goto code_r0x004028d8;\n    case 0x4018f5:\n        uVar16 = 0;\n        goto code_r0x0040192c;\n    case 0x4018f8:\n        uVar16 = fcn.00402a3a(0x31);\n        piVar13 = fcn.00405529(uVar16, var_28h);\n        if (piVar13 == NULL) goto code_r0x004026a6;\n        if (piVar13 == var_20h) {\n            return lpLastWriteTime;\n        }\n        if (piVar13 == var_18h) {\n            return var_14h;\n        }\n        break;\n    case 0x40192a:\n        uVar16 = 0xfffffff0;\ncode_r0x0040192c:\n        uVar16 = fcn.00402a3a(uVar16);\n        fcn.004055d5(uVar16, dwFileAttributes);\n        break;\n    case 0x40193f:\n        uVar16 = fcn.00402a3a(1);\n        sub.KERNEL32.dll_lstrlenA(uVar16);\n        goto code_r0x00402877;\n    case 0x401951:\n        hWndChildAfter = fcn.00402a1d(2);\n        iVar15 = fcn.00402a1d(3);\n        hFile = fcn.00402a3a(1);\n        *ppiVar17 = 0;\n        if (((var_20h == NULL) || (hWndChildAfter != NULL)) &&\n           ((iVar11 = sub.KERNEL32.dll_lstrlenA(hFile),  -1 < iVar15 || (iVar15 = iVar15 + iVar11,  -1 < iVar15)))) {\n            if (iVar11 < iVar15) {\n                iVar15 = iVar11;\n            }\n            fcn.00405d33(ppiVar17, hFile + iVar15);\n            iVar15 = hWndChildAfter;\n            if (hWndChildAfter != NULL) {\n                if (hWndChildAfter < 0) {\n                    iVar11 = sub.KERNEL32.dll_lstrlenA(ppiVar17);\n                    hWndChildAfter = iVar15 + iVar11;\n                    if (hWndChildAfter < 0) {\n                        hWndChildAfter = NULL;\n                    }\n                }\n                if (hWndChildAfter < 0x400) {\n                    *(hWndChildAfter + ppiVar17) = 0;\n                }\n            }\n        }\n        break;\n    case 0x4019d2:\n        uVar16 = fcn.00402a3a(0x20);\n        uVar12 = fcn.00402a3a(0x31);\n        if (var_18h == NULL) {\n            iVar15 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        }\n        else {\n            iVar15 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar16, uVar12);\n        }\n        goto joined_r0x004019f1;\n    case 0x401a03:\n        hWndChildAfter = fcn.00402a3a(1);\n        iVar11 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(hWndChildAfter, ppiVar17, 0x400);\n        if ((iVar11 == 0) ||\n           ((var_20h != NULL && (iVar11 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(hWndChildAfter, ppiVar17),  iVar11 == 0))))\n        {\n            var_4h = 0x1;\n            *ppiVar17 = 0;\n        }\n        *(iVar15 + 0x42f3ff) = 0;\n        break;\n    case 0x401a43:\n        uVar14 = fcn.00402a1d(0);\n        uVar4 = fcn.00402a1d(1);\n        if (var_14h != NULL) {\n            if (uVar14 < uVar4) {\n                return lpLastWriteTime;\n            }\n            if (uVar14 <= uVar4) {\n                return var_20h;\n            }\n            return var_18h;\n        }\n        if (uVar14 < uVar4) {\n            return lpLastWriteTime;\n        }\n        if (uVar14 <= uVar4) {\n            return var_20h;\n        }\n        return var_18h;\n    case 0x401a75:\n        fcn.00402a1d(1);\n        iVar15 = fcn.00402a1d(2);\n        if (0xc < lpLastWriteTime) goto code_r0x00402877;\n    // switch table (13 cases) at 0x4029e9\n        switch(*(lpLastWriteTime * 4 + 0x4029e9)) {\n        case 0x401a96:\n            break;\n        case 0x401a9a:\n            break;\n        case 0x401a9e:\n            break;\n        case 0x401aa5:\n            goto joined_r0x00401ae0;\n        case 0x401ab2:\n            break;\n        case 0x401ab6:\n            break;\n        case 0x401aba:\n            break;\n        case 0x401abe:\n            break;\n        case 0x401ac7:\n            break;\n        case 0x401ad1:\n            break;\n        case 0x401ade:\njoined_r0x00401ae0:\n            if (iVar15 == 0) {\n                var_4h = 0x1;\n            }\n            break;\n        case 0x401af6:\n            break;\n        case 0x401afa:\n        }\n        goto code_r0x00402877;\n    case 0x401b02:\n        uVar16 = fcn.00402a3a(1);\n        uVar12 = fcn.00402a1d(2);\n        (*_sym.imp.USER32.dll_wsprintfA)(ppiVar17, uVar16, uVar12);\n        break;\n    case 0x401b23:\n        if (var_20h == NULL) {\n            if (dwFileAttributes != NULL) {\n                if (*0x40a82c != NULL) {\n                    fcn.00405d33(ppiVar17, *0x40a82c + 1);\n                    *0x40a82c = *ppiVar10;\n                    goto code_r0x00401b92;\n                }\n                goto code_r0x004026a6;\n            }\n            ppiVar10 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x404);\n            fcn.00405d55(ppiVar10 + 1, var_28h);\n            *ppiVar10 = *0x40a82c;\n            *0x40a82c = ppiVar10;\n        }\n        else {\n            do {\n                var_20h = var_20h + -1;\n                if (ppiVar10 == NULL) goto code_r0x0040225b;\n                ppiVar10 = *ppiVar10;\n            } while (var_20h != NULL);\n            if (ppiVar10 == NULL) goto code_r0x0040225b;\n            puVar18 = 0x409428;\n            fcn.00405d33(0x409428, ppiVar10 + 1);\n            ppiVar17 = *0x40a82c + 1;\n            fcn.00405d33(ppiVar10 + 1, ppiVar17);\ncode_r0x004027f5:\n            fcn.00405d33(ppiVar17, puVar18);\n        }\n        break;\n    case 0x401bca:\n        hWndParent = fcn.00402a1d(3);\n        hWndChildAfter = fcn.00402a1d(4);\n        if ((var_14h & 1) != 0) {\n            hWndParent = fcn.00402a3a(0x33);\n        }\n        if ((var_14h & 2) != 0) {\n            hWndChildAfter = fcn.00402a3a(0x44);\n        }\n        if (var_2ch == 0x21) {\n            uVar16 = fcn.00402a1d();\n            uVar12 = fcn.00402a1d(2);\n            if (var_14h >> 2 == 0) {\n                lpWideCharStr = (*_sym.imp.USER32.dll_SendMessageA)(uVar16, uVar12, hWndParent, hWndChildAfter);\n                dwFileAttributes = var_28h;\n            }\n            else {\n                iVar15 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                                   (uVar16, uVar12, hWndParent, hWndChildAfter, 0, var_14h >> 2, &lpWideCharStr);\n                var_4h = iVar15 == 0;\n                dwFileAttributes = var_28h;\n            }\n        }\n        else {\n            pcVar5 = fcn.00402a3a(1);\n            pcVar6 = fcn.00402a3a(0x12);\n            lpWideCharStr =\n                 (*_sym.imp.USER32.dll_FindWindowExA)\n                           (hWndParent, hWndChildAfter, -(*pcVar5 != '\\0') & pcVar5, -(*pcVar6 != '\\0') & pcVar6);\n            dwFileAttributes = var_28h;\n        }\njoined_r0x00402639:\n        if (-1 < dwFileAttributes) goto code_r0x00402877;\n        break;\n    case 0x401c8a:\n        uVar16 = fcn.00402a1d(0);\n        iVar15 = (*_sym.imp.USER32.dll_IsWindow)(uVar16);\n        lpLastWriteTime = dwFileAttributes;\njoined_r0x004019f1:\n        if (iVar15 == 0) {\n            return var_20h;\n        }\n        return lpLastWriteTime;\n    case 0x401ca7:\n        uVar16 = fcn.00402a1d(2);\n        uVar16 = fcn.00402a1d(1, uVar16);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar16);\n        goto code_r0x00402877;\n    case 0x401cc2:\n        uVar16 = fcn.00402a1d(0, 0xffffffeb, *0x42e448 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar16);\n        break;\n    case 0x401cde:\n        uVar16 = (*_sym.imp.USER32.dll_GetDlgItem)(hWndParent, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar16, &lpRect);\n        uVar12 = fcn.00402a3a(0, 0, var_50h * var_20h, CONCAT22(var_4ch._2_2_, var_4ch) * var_20h, 0x10);\n        uVar12 = (*_sym.imp.USER32.dll_LoadImageA)(0, uVar12);\n        iVar15 = (*_sym.imp.USER32.dll_SendMessageA)(uVar16, 0x172, 0, uVar12);\n        if (iVar15 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar15);\n        }\n        break;\n    case 0x401d38:\n        uVar16 = (*_sym.imp.USER32.dll_GetDC)(hWndParent);\n        uVar12 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar16, 0x5a, 0x48);\n        uVar12 = fcn.00402a1d(2, uVar12);\n        *0x40a830 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar12);\n        *0x40a830 = -*0x40a830;\n        (*_sym.imp.USER32.dll_ReleaseDC)(hWndParent, uVar16);\n        *0x40a840 = fcn.00402a1d(3);\n        *0x40a844 = var_18h & 1;\n        *0x40a847 = 1;\n        *0x40a845 = var_18h & 2;\n        *0x40a846 = var_18h & 4;\n        fcn.00405d55(0x40a84c, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x40a830);\n        goto code_r0x00402877;\n    case 0x401dbe:\n        uVar16 = fcn.00402a1d(0);\n        uVar12 = fcn.00402a1d(1);\n        if (lpLastWriteTime == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar16, uVar12);\n        }\n        break;\n    case 0x401dea:\n        pcVar5 = fcn.00402a3a(0);\n        uVar16 = fcn.00402a3a(0x31);\n        pcVar6 = fcn.00402a3a(0x22);\n        fcn.00402a3a(0x15);\n        fcn.00401423(0xffffffec);\n        iVar15 = (*_sym.imp.SHELL32.dll_ShellExecuteA)\n                           (hWndParent, -(*pcVar5 != '\\0') & pcVar5, uVar16, -(*pcVar6 != '\\0') & pcVar6, 0x434800, \n                            lpLastWriteTime);\n        if (iVar15 < 0x21) goto code_r0x004026a6;\n        break;\n    case 0x401e44:\n        uVar16 = fcn.00402a3a(0);\n        uVar12 = 0xffffffeb;\n        fcn.00404f4c(0xffffffeb, uVar16);\n        hWndChildAfter = fcn.004054c4(uVar16);\n        pcVar7 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        if (hWndChildAfter == NULL) goto code_r0x004026a6;\n        ppiVar10 = hWndChildAfter;\n        if (var_20h != NULL) {\n            while (iVar15 = (*pcVar7)(hWndChildAfter, 100),  iVar15 == 0x102) {\n                fcn.00406104(0xf);\n            }\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hWndChildAfter, &lpWideCharStr);\n            if (dwFileAttributes < 0) {\n                ppiVar10 = hWndChildAfter;\n                if (lpWideCharStr != 0) {\n                    var_4h = 0x1;\n                }\n            }\n            else {\n                fcn.00405c91(uVar12, lpWideCharStr, ppiVar19);\n                ppiVar10 = hWndChildAfter;\n            }\n        }\ncode_r0x00401eb3:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar10);\n        break;\n    case 0x401ebe:\n        uVar16 = fcn.00402a3a(2);\n        hWndChildAfter = fcn.00406037(uVar16);\n        if (hWndChildAfter != NULL) {\n            fcn.00405c91(ppiVar19, hWndChildAfter[5]);\n            goto code_r0x00402877;\n        }\n        *ppiVar17 = 0;\n        *ppiVar19 = 0;\n        goto code_r0x004026a6;\n    case 0x401eee:\n        hFile = fcn.00402a3a(0xffffffee);\n        pcVar7 = fcn.004060c8(8, hFile, &lpMultiByteStr);\n        lpWideCharStr = (*pcVar7)();\n        *ppiVar17 = 0;\n        *ppiVar19 = 0;\n        var_4h = 0x1;\n        if ((lpWideCharStr != 0) &&\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, lpWideCharStr),  hWndChildAfter != NULL)) {\n            var_40h = fcn.004060c8(9);\n            var_3ch = fcn.004060c8(10);\n            iVar15 = (*var_40h)(hFile, 0, lpWideCharStr, hWndChildAfter);\n            ppiVar10 = hWndChildAfter;\n            if ((iVar15 != 0) &&\n               (ppiVar22 = hWndChildAfter,  iVar15 = (*var_3ch)(hWndChildAfter, 0x409014, &hWndParent, &lpValueName), \n               ppiVar10 = hWndChildAfter,  iVar15 != 0)) {\n                uVar16 = *(hWndParent + 8);\n                fcn.00405c91(ppiVar17, uVar16);\n                fcn.00405c91(ppiVar22, *(hWndParent + 0xc), ppiVar17, uVar16, ppiVar19);\n                var_4h = NULL;\n                ppiVar10 = hWndChildAfter;\n            }\ncode_r0x00401b92:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar10);\n        }\n        break;\n    case 0x401f8f:\n        var_4h = 0x1;\n        if (-1 < *0x42e4b8) {\n            uVar16 = fcn.00402a3a(0xfffffff0);\n            hWndChildAfter = fcn.00402a3a(1);\n            if (((var_18h != NULL) && (iVar15 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar16),  iVar15 != 0)) ||\n               (iVar15 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar16, 0, 8),  iVar15 != 0)) {\n                pcVar7 = sub.KERNEL32.dll_GetProcAddress(iVar15, hWndChildAfter);\n                if (pcVar7 == NULL) {\n                    fcn.00404f4c(0xfffffff7, hWndChildAfter);\n                }\n                else {\n                    var_4h = NULL;\n                    if (var_20h == NULL) {\n                        (*pcVar7)(hWndParent, 0x400, 0x42f000, 0x40a82c, 0x409000);\n                    }\n                    else {\n                        fcn.00401423(var_20h);\n                        iVar11 = (*pcVar7)();\n                        if (iVar11 != 0) {\n                            var_4h = 0x1;\n                        }\n                    }\n                }\n                if ((lpLastWriteTime == NULL) && (iVar11 = fcn.00403653(iVar15),  iVar11 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar15);\n                }\n                break;\n            }\n        }\n        goto code_r0x004021c4;\n    case 0x40205e:\n        lpMultiByteStr = fcn.00402a3a(0xfffffff0);\n        lpWideCharStr = fcn.00402a3a(0xffffffdf);\n        uVar16 = fcn.00402a3a(2);\n        var_4ch._0_2_ = uVar16;\n        var_4ch._2_2_ = uVar16 >> 0x10;\n        var_40h = fcn.00402a3a(0xffffffcd);\n        lpValueName = fcn.00402a3a(0x45);\n        var_44h = var_18h & 0xfff;\n        var_3ch = var_18h >> 0x10 & 0xffff;\n        uVar14 = var_18h >> 0xc & 7;\n        iVar15 = fcn.00405812(lpWideCharStr);\n        if (iVar15 == 0) {\n            fcn.00402a3a(0x21);\n        }\n        iVar15 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x4074cc, 0, 1, 0x4074bc, &hWndChildAfter);\n        if (-1 < iVar15) {\n            hWndParent = (***hWndChildAfter)(hWndChildAfter, 0x4074dc, &hFile);\n            if (-1 < hWndParent) {\n                hWndParent = (*(*hWndChildAfter)[0x14])(hWndChildAfter, lpWideCharStr);\n                if ((var_18h & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x434800);\n                }\n                if (uVar14 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar14);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_3ch);\n                if (*var_40h != 0x0) {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, var_40h, var_44h);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, CONCAT22(var_4ch._2_2_, var_4ch));\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpValueName);\n                if (-1 < hWndParent) {\n                    hWndParent = -0x7fffbffb;\n                    iVar15 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (0, 0, lpMultiByteStr, 0xffffffff, lpWideCharStr, 0x400);\n                    if (iVar15 != 0) {\n                        hWndParent = (**(*hFile + 0x18))(hFile, lpWideCharStr, 1);\n                    }\n                }\n                (**(*hFile + 8))(hFile);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < hWndParent) goto code_r0x004021c4;\n        }\n        var_4h = 0x1;\n        goto code_r0x004021c4;\n    case 0x4021d2:\n        iVar15 = fcn.00402a3a(0);\n        iVar11 = fcn.00402a3a(0x11);\n        hWndChildAfter = fcn.00402a3a(0x23);\n        iVar8 = fcn.00406037(iVar15);\n        if (iVar8 != 0) {\n            lpFileOp = hWndParent;\n            var_60h = 2;\n            iVar8 = sub.KERNEL32.dll_lstrlenA(iVar15);\n            *(iVar8 + 1 + iVar15) = 0;\n            iVar8 = sub.KERNEL32.dll_lstrlenA(iVar11);\n            *(iVar8 + 1 + iVar11) = 0;\n            var_4ch._2_2_ = SUB42(hWndChildAfter, 0);\n            uStack76 = hWndChildAfter >> 0x10;\n            var_54h._0_2_ = var_20h._0_2_;\n            var_5ch = iVar15;\n            lpRect = iVar11;\n            fcn.00404f4c(0, hWndChildAfter);\n            iVar15 = (*_sym.imp.SHELL32.dll_SHFileOperationA)(&lpFileOp);\n            if (iVar15 == 0) break;\n        }\n        fcn.00404f4c(0xfffffff9, 0);\n        goto code_r0x004026a6;\n    case 0x402254:\n        if (var_28h != 0xbadf00d) {\ncode_r0x0040225b:\n            uVar9 = 0x200010;\n            uVar20 = 0xffffffe8;\n            uVar12 = 0;\n            uVar16 = fcn.00405d55(0, 0xffffffe8);\ncode_r0x00402269:\n            fcn.00405529(uVar16, uVar12, uVar20, uVar9);\n            return 0x7fffffff;\n        }\n        *0x42e494 = *0x42e494 + 1;\n        break;\n    case 0x402283:\n        uVar12 = 0;\n        uVar20 = 0;\n        if (var_28h != NULL) {\n            uVar12 = fcn.00402a3a(0);\n        }\n        if (dwFileAttributes != NULL) {\n            uVar20 = fcn.00402a3a(0x11);\n        }\n        if (var_18h != NULL) {\n            uVar16 = fcn.00402a3a(0x22);\n        }\n        uVar9 = fcn.00402a3a(0xffffffcd);\n        iVar15 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(uVar12, uVar20, uVar16, uVar9);\ncode_r0x004015a6:\n        bVar21 = iVar15 == 0;\ncode_r0x004015a8:\n        if (bVar21) goto code_r0x004026a6;\n        break;\n    case 0x4022c7:\n        hWndChildAfter = hWndChildAfter & 0xffff | *0x409010 << 0x10;\n        uVar16 = fcn.00402a3a(1);\n        lpMultiByteStr = fcn.00402a3a(0x12);\n        uVar12 = fcn.00402a3a(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (uVar16, lpMultiByteStr, &hWndChildAfter + 2, ppiVar17, 0x3ff, uVar12);\n        bVar21 = *ppiVar17 == '\\n';\ncode_r0x00401733:\n        if (bVar21) {\ncode_r0x0040267a:\n            var_4h = 0x1;\n            *ppiVar17 = 0;\n        }\n        break;\n    case 0x402308:\n        if (var_18h == NULL) {\n            iVar11 = fcn.00402b44(2);\n            if (iVar11 == 0) goto code_r0x004026a6;\n            uVar16 = fcn.00402a3a(0x33);\n            iVar15 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar11, uVar16);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar11);\n        }\n        else {\n            uVar16 = fcn.00402a3a(0x22);\n            uVar12 = fcn.00402b2f(dwFileAttributes, uVar16, var_18h & 2);\n            iVar15 = fcn.00402a7a(uVar12, dwFileAttributes, uVar16);\n        }\n        if (iVar15 != 0) goto code_r0x004026a6;\n        break;\n    case 0x402364:\n        uVar16 = fcn.00402b2f(var_28h);\n        lpMultiByteStr = var_14h;\n        lpValueName = fcn.00402a3a(2);\n        uVar12 = fcn.00402a3a(0x11);\n        var_4h = 0x1;\n        piVar13 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                            (uVar16, uVar12, 0, 0, 0, *0x42e4b0 | 2, 0, &hWndChildAfter, 0);\n        if (piVar13 == NULL) {\n            if (var_18h == 0x1) {\n                fcn.00402a3a(0x23);\n                iVar15 = sub.KERNEL32.dll_lstrlenA(0x409c28);\n                piVar13 = iVar15 + 1;\n            }\n            if (var_18h == 0x4) {\n                *0x409c28 = fcn.00402a1d(3);\n                piVar13 = var_18h;\n            }\n            if (var_18h == 0x3) {\n                piVar13 = fcn.00402e9f(lpLastWriteTime, 0, 0x409c28, 0xc00);\n            }\n            iVar15 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                               (hWndChildAfter, lpValueName, 0, lpMultiByteStr, 0x409c28, piVar13);\n            ppiVar10 = hWndChildAfter;\n            if (iVar15 == 0) {\n                var_4h = NULL;\n            }\ncode_r0x004024d8:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar10);\n        }\n        break;\n    case 0x402410:\n        ppiVar10 = fcn.00402b44(0x20019);\n        uVar16 = fcn.00402a3a(0x33);\n        *ppiVar17 = 0;\n        if (ppiVar10 != NULL) {\n            lpMultiByteStr = 0x400;\n            iVar11 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                               (ppiVar10, uVar16, 0, &hWndChildAfter, ppiVar17, &lpMultiByteStr);\n            if (iVar11 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_18h == NULL;\n                    fcn.00405c91();\n                    goto code_r0x004024d8;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_18h;\n                    goto code_r0x004024d1;\n                }\n            }\n            *ppiVar17 = 0;\n            var_4h = 0x1;\n            goto code_r0x004024d8;\n        }\n        goto code_r0x004026a6;\n    case 0x402482:\n        ppiVar10 = fcn.00402b44(0x20019);\n        uVar16 = fcn.00402a1d(3);\n        *ppiVar17 = 0;\n        if (ppiVar10 != NULL) {\n            hWndChildAfter = 0x3ff;\n            if (var_18h == NULL) {\n                iVar11 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)(ppiVar10, uVar16, ppiVar17, &hWndChildAfter, 0, 0, 0, 0)\n                ;\n                if (iVar11 != 0) goto code_r0x004026a6;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(ppiVar10, uVar16, ppiVar17, 0x3ff);\n            }\ncode_r0x004024d1:\n            *(iVar15 + 0x42f3ff) = 0;\n            goto code_r0x004024d8;\n        }\n        goto code_r0x004026a6;\n    case 0x4024e3:\n        ppiVar10 = fcn.00405caa(ppiVar17);\n        if (ppiVar10 != NULL) goto code_r0x00401eb3;\n        break;\n    case 0x4024f7:\n        uVar16 = fcn.00402a3a(0xffffffed);\n        iVar15 = fcn.004059a6(uVar16, dwFileAttributes, var_20h);\n        if (iVar15 == -1) goto code_r0x004026a4;\ncode_r0x00402877:\n        fcn.00405c91(ppiVar17);\n        break;\n    case 0x402519:\n        if (var_20h == NULL) {\n            uVar16 = fcn.00402a3a(0x11);\n            uVar16 = sub.KERNEL32.dll_lstrlenA(uVar16);\n        }\n        else {\n            uVar16 = 1;\n            *0x409828 = fcn.00402a1d(1);\n        }\n        if (*ppiVar17 != '\\0') {\n            uVar12 = fcn.00405caa(ppiVar17);\n            iVar15 = fcn.00405a4d(uVar12, 0x409828, uVar16);\n            goto code_r0x004015a6;\n        }\n        goto code_r0x004026a6;\n    case 0x40255c:\n        hWndParent = 0;\n        lpWideCharStr = fcn.00402a1d(2);\n        if (lpWideCharStr < 1) break;\n        if (0x3ff < lpWideCharStr) {\n            lpWideCharStr = 0x3ff;\n        }\n        iVar15 = hWndParent;\n        if (*ppiVar17 != '\\0') {\n            hWndChildAfter = hWndChildAfter & 0xffffff;\n            hFile = fcn.00405caa(ppiVar17);\n            iVar15 = hWndParent;\n            if (0 < lpWideCharStr) {\n                while (iVar11 = fcn.00405a1e(hFile, &var_dh, 1),  iVar11 != 0) {\n                    if (lpLastWriteTime != NULL) {\n                        fcn.00405c91(ppiVar19, var_dh);\n                        goto code_r0x004028d8;\n                    }\n                    if ((hWndChildAfter._3_1_ == 0xd) || (hWndChildAfter._3_1_ == 10)) {\n                        if ((hWndChildAfter._3_1_ == var_dh) || ((var_dh != 0xd && (var_dh != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0xffffffff, 0, 1);\n                        }\n                        else {\n                            *(iVar15 + ppiVar19) = var_dh;\n                            iVar15 = iVar15 + 1;\n                        }\n                        break;\n                    }\n                    *(iVar15 + ppiVar19) = var_dh;\n                    iVar15 = iVar15 + 1;\n                    hWndChildAfter = hWndChildAfter & 0xffffff | var_dh << 0x18;\n                    if ((var_dh == 0) || (lpWideCharStr <= iVar15)) break;\n                }\n            }\n        }\n        *(iVar15 + ppiVar19) = 0;\n        bVar21 = iVar15 == 0;\n        goto code_r0x004015a8;\n    case 0x402615:\n        if (*ppiVar17 != '\\0') {\n            uVar16 = fcn.00402a1d(2, 0, lpLastWriteTime);\n            uVar12 = fcn.00405caa(ppiVar17);\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar12, ppiVar17, uVar16);\n            ppiVar17 = ppiVar19;\n            goto joined_r0x00402639;\n        }\n        break;\n    case 0x402644:\n        iVar15 = fcn.00405caa(ppiVar17);\n        if (iVar15 != 0) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar15);\n        }\n        break;\n    case 0x40265e:\n        iVar15 = fcn.00405caa(ppiVar19);\n        if ((iVar15 != 0) && (iVar15 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar15, &lpFindFileData),  iVar15 != 0)) {\ncode_r0x004026b9:\n            puVar18 = &var_178h;\n            goto code_r0x004027f5;\n        }\n        goto code_r0x0040267a;\n    case 0x402688:\n        uVar16 = fcn.00402a3a(2);\n        iVar15 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar16, &lpFindFileData);\n        if (iVar15 != -1) {\n            fcn.00405c91(ppiVar19, iVar15);\n            goto code_r0x004026b9;\n        }\n        *ppiVar19 = 0;\ncode_r0x004026a4:\n        *ppiVar17 = 0;\ncode_r0x004026a6:\n        var_4h = 0x1;\n        break;\n    case 0x4026c6:\n        lpWideCharStr = -0x29a;\n        uVar16 = fcn.00402a3a(0xfffffff0);\n        lpValueName = uVar16;\n        iVar15 = fcn.00405812(uVar16);\n        if (iVar15 == 0) {\n            fcn.00402a3a(0xffffffed);\n        }\n        fcn.00405981(uVar16);\n        hWndChildAfter = fcn.004059a6(uVar16, 0x40000000, 2);\n        pcVar7 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            hFile = *0x42e414;\n            iVar15 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42e414);\n            if (iVar15 != 0) {\n                fcn.004030c7(0);\n                fcn.004030b1(iVar15, hFile);\n                piVar13 = (*pcVar7)(0x40, var_20h);\n                lpMultiByteStr = piVar13;\n                if (piVar13 != NULL) {\n                    fcn.00402e9f(dwFileAttributes, 0, piVar13, var_20h);\n                    for (; *piVar13 != '\\0'; piVar13 = piVar13 + var_50h + 8) {\n                        var_50h = *piVar13;\n                        dwFileAttributes = piVar13[1] + iVar15;\n                        fcn.00405961();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lpMultiByteStr, dwFileAttributes);\n                }\n                fcn.00405a4d(hWndChildAfter, iVar15, hFile);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar15);\n                lpWideCharStr = fcn.00402e9f(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (lpWideCharStr < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpValueName);\n            var_4h = 0x1;\n        }\ncode_r0x004021c4:\n        fcn.00401423();\n        break;\n    case 0x4027c1:\n        hWndChildAfter = fcn.00402a1d(0);\n        if (*0x42e42c <= hWndChildAfter) goto code_r0x004026a6;\n        iVar15 = hWndChildAfter * 0x418 + *0x42e428;\n        if (-1 < var_20h) {\n            ppiVar17 = ppiVar19;\n            if (var_20h == NULL) {\n                puVar18 = iVar15 + 0x18;\n                goto code_r0x004027f5;\n            }\n            goto code_r0x00402877;\n        }\n        var_20h = -1 - var_20h;\n        if (var_20h == NULL) {\n            fcn.00405d55(iVar15 + 0x18, var_18h);\n            *(iVar15 + 9) = *(iVar15 + 9) | 1;\n        }\n        else {\n            dwFileAttributes = fcn.00402a1d(1);\n        }\n        *(iVar15 + var_20h * 4) = dwFileAttributes;\n        if (lpLastWriteTime != NULL) {\n            fcn.0040117d(hWndChildAfter);\n        }\n        break;\n    case 0x402847:\n        uVar14 = fcn.00402a1d(0);\n        if (0x1f < uVar14) goto code_r0x004026a6;\n        if (lpLastWriteTime == NULL) {\n            if (var_20h == NULL) {\n                fcn.00405d55(ppiVar19, *(*0x42e410 + 0x94 + uVar14 * 4));\n            }\n            else {\n                *(*0x42e410 + 0x94 + uVar14 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (var_20h == NULL) {\n                fcn.004012e2(0);\n                ppiVar17 = ppiVar19;\n                goto code_r0x00402877;\n            }\n            fcn.00401299(uVar14);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x4028aa:\n        (*_sym.imp.USER32.dll_SendMessageA)(hWndParent, 0xb, *0x42a880 & var_28h, 0);\n        if (var_28h != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(hWndParent, 0, 0);\n        }\n        break;\n    case 0x4028da:\n        goto code_r0x004028da;\n    }\ncode_r0x004028cf:\n    *0x42e488 = *0x42e488 + var_4h;\ncode_r0x004028d8:\n    var_28h = NULL;\ncode_r0x004028da:\n    return var_28h;\n}\n",
        "token_count": 12683
    },
    "00402c66": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402c66(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t dwBytes;\n    int32_t var_10h;\n    uint *hFile;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    var_4h = 0;\n    *0x42e40c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x42e40c = *0x42e40c + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x435c00, 0x400);\n    puVar1 = fcn.004059a6(0x435c00, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x409018 = puVar1;\n        return \"Error launching installer\";\n    }\n    *0x409018 = puVar1;\n    hFile = puVar1;\n    fcn.00405d33(0x434c00, 0x435c00);\n    uVar2 = fcn.004057ec(0x434c00);\n    fcn.00405d33(0x436000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x42043c = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x42e414 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x420440;\n        iVar5 = fcn.004030b1();\n        if (iVar5 == 0) {\n            fcn.00402c02(1);\n            goto code_r0x00402e3e;\n        }\n        if (*0x42e414 == 0) {\n            puVar1 = &var_28h;\n            fcn.00405961();\n            if (((((var_28h & 0xfffffff0) == 0) && (var_24h == -0x21524111)) && (var_18h == 0x74736e49)) &&\n               ((var_1ch == 0x74666f73 && (var_20h == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_28h;\n                *0x42e4a0 = *0x42e4a0 | arg_8h & 2;\n                *0x42e414 = *0x414430;\n                if (uVar3 < var_10h) goto code_r0x00402e3e;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_4h = var_4h + 1;\n                uVar3 = var_10h - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00402c02(0);\n        }\n        if (uVar3 < *0x42043c) {\n            puVar6 = fcn.0040613d();\n            puVar1 = var_8h;\n            var_8h = puVar6;\n        }\n        *0x414430 = *0x414430 + uVar8;\n    }\n    fcn.00402c02(1, puVar1);\n    if (*0x42e414 != 0) {\n        if (var_4h != 0) {\n            fcn.004030c7(*0x414430);\n            iVar5 = fcn.004030b1(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_8h != arg_8h)) goto code_r0x00402e3e;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.004030c7(*0x42e414 + 0x1c);\n        iVar5 = fcn.00402e9f(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x42e418 = *puVar1;\n            if ((var_28h & 1) != 0) {\n                *0x42e41c = *0x42e41c + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x42e410 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 1);\n            puVar1[0xf] = uVar2;\n            fcn.00405961(0x42e420, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00402e3e:\n    return \n    \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1408
    },
    "004035d9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004035d9(void)\n\n{\n    if (*0x409018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409018);\n        *0x409018 = -1;\n    }\n    fcn.0040361e();\n    fcn.004055d5(0x435800, 7);\n    return;\n}\n",
        "token_count": 83
    },
    "004036b3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004036b3(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    \n    iVar7 = *0x42e410;\n    pcVar2 = fcn.004060c8();\n    if (pcVar2 == NULL) {\n        *0x435000 = 0x30;\n        *0x435001 = 0x78;\n        *0x435002 = 0;\n        fcn.00405c1a(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x429880, 0);\n        if (*0x429880 == '\\0') {\n            fcn.00405c1a(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x429880, 0);\n        }\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    else {\n        (*pcVar2)();\n        fcn.00405c91();\n    }\n    fcn.00403978();\n    *0x42e480 = *0x42e418 & 0x20;\n    *0x42e49c = 0x10000;\n    iVar3 = fcn.00405893();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x42d3a0;\n        fcn.00405c1a(*(iVar7 + 0x44), *(iVar7 + 0x48) + *0x42e438, *(iVar7 + 0x4c) + *0x42e438, 0x42d3a0, 0);\n        if (*0x42d3a0 != '\\0') {\n            if (*0x42d3a0 == '\\\"') {\n                uVar6 = 0x42d3a1;\n                puVar4 = fcn.004057d0();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenA();\n            if (((uVar6 < iVar3 + -4 + uVar6) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.004057ec();\n            }\n            fcn.004057a5();\n            fcn.00405d33();\n        }\n    }\n    iVar3 = fcn.00405893();\n    if (iVar3 == 0) {\n        uStack148 = 0x4037f9;\n        fcn.00405d55(0x434400, *(iVar7 + 0x118));\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x42e400;\n    *0x42dbe8 = (*_sym.imp.USER32.dll_LoadImageA)(*0x42e400, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x0040389f:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.00403978();\n            if (*0x42e4a0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x429860, 5);\n                iVar7 = fcn.0040605e(\"RichEd20\");\n                if (iVar7 == 0) {\n                    fcn.0040605e(\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x42dba0);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, \"RichEdit\", 0x42dba0);\n                    *0x42dbc4 = \"RichEdit20A\";\n                    (*_sym.imp.USER32.dll_RegisterClassA)(0x42dba0);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x42e400, *0x42dbe0 + 0x69U & 0xffff, 0, 0x403a45, 0);\n                fcn.0040140b(5);\n                fcn.00403603(1);\n                return uVar5;\n            }\n            iVar7 = fcn.0040501e(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x0040396e;\n            }\n            if (*0x42dbcc == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x42dba0;\n        *0x42dba4 = fcn.00401000;\n        *0x42dbb0 = *0x42e400;\n        *0x42dbc4 = 0x40920c;\n        *0x42dbb4 = *0x42dbe8;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(0x42dba0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &stack0xffffff64, 0);\n            *0x429860 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0x80, 0x40920c, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x42e400, 0);\n            goto code_r0x0040389f;\n        }\ncode_r0x0040396e:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1450
    },
    "004048c9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048c9(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    uVar2 = arg_8h;\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_10h = *0x42e428;\n    var_14h = *0x42e410 + 0x94;\n    if (arg_ch == 0x110) {\n        var_1ch = 0;\n        var_ch = 2;\n        *0x42e460 = arg_8h;\n        *0x429878 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42e42c << 2);\n        uVar2 = (*_sym.imp.USER32.dll_LoadBitmapA)(*0x42e400, 0x6e);\n        *0x42986c = 0xffffffff;\n        *0x429874 = (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffffc, fcn.00404ec0);\n        *0x429864 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x429864, uVar2, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x429864);\n        iVar3 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_14h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar2 = fcn.00405d55(0, iVar7);\n                uVar2 = (*pcVar1)(var_8h, 0x143, 0, uVar2);\n                (*pcVar1)(var_8h, 0x151, uVar2, iVar3);\n            }\n            uVar5 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.00403f18(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.00403f18(arg_8h, 0x16, *(arg_14h + 0x34 + uVar5 * 4));\n        iVar3 = 0;\n        uVar2 = 0;\n        if (*0x42e42c < 1) {\ncode_r0x00404af4:\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffff0, uVar5 & 0xfffffffb);\n        }\n        else {\n            var_18h = var_10h + 8;\n            do {\n                puVar8 = var_18h + 4;\n                if (*puVar8 != '\\0') {\n                    uVar5 = *var_18h;\n                    var_40h = uVar5 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar2;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar5 & 2) == 0) {\n                        if ((uVar5 & 4) == 0) {\n                            uVar4 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                            *(*0x429878 + iVar3 * 4) = uVar4;\n                        }\n                        else {\n                            uVar2 = (*pcVar1)(var_4h, 0x110a, 3, uVar2);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar2 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                        var_1ch = 1;\n                        *(*0x429878 + iVar3 * 4) = uVar2;\n                        uVar2 = *(*0x429878 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_18h = var_18h + 0x106;\n            } while (iVar3 < *0x42e42c);\n            if (var_1ch == 0) goto code_r0x00404af4;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.00403f4d(var_8h);\n            goto code_r0x00404eab;\n        }\n        uVar2 = var_4h;\n        fcn.00403f4d(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x42e418 & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar3 = fcn.00404817(var_4h, arg_ch != 0x413),  -1 < iVar3)\n            ))) {\n            puVar8 = iVar3 * 0x418 + 8 + var_10h;\n            uVar5 = *puVar8;\n            if ((uVar5 & 0x10) == 0) {\n                if ((uVar5 & 0x40) == 0) {\n                    uVar5 = uVar5 ^ 1;\n                }\n                else {\n                    uVar6 = uVar5 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xff | 1;\n                    }\n                    else {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xfe;\n                    }\n                }\n                *puVar8 = uVar5;\n                fcn.0040117d(iVar3);\n                arg_10h = iVar3 + 1;\n                arg_14h = ~*0x42e418 >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x192) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x196) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + var_10h;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + var_10h;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x00404eab;\n        iVar3 = (*pcVar1)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_14h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x429864 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x429864);\n        }\n        if (*0x429878 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x429878);\n        }\n        *0x429864 = 0;\n        *0x429878 = 0;\n        *0x42e460 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            iVar3 = arg_10h;\n            if (arg_10h != -1) {\n                iVar3 = arg_10h + -1;\n            }\n            fcn.00404897(8, iVar3);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x429878);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_14h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x429878;\n        var_38h = 0xf030;\n        var_10h = 0;\n        if (0 < *0x42e42c) {\n            puVar8 = *0x42e428 + 8;\n            do {\n                uVar5 = *(var_1ch + var_10h * 4);\n                if (uVar5 != 0) {\n                    uVar6 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar6 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar6 & 0x40) == 0) {\n                        iVar3 = (uVar6 & 1) + 1;\n                        if ((uVar6 & 0x10) != 0) {\n                            iVar3 = (uVar6 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar6 & 8) * 2 | uVar6 & 0x20;\n                    var_40h = uVar5;\n                    (*pcVar1)(var_4h, 0x1102, (uVar6 >> 5 & 1U) + 1, uVar5);\n                    (*pcVar1)(var_4h, 0x110d, 0, &var_44h);\n                }\n                var_10h = var_10h + 1;\n                puVar8 = puVar8 + 0x106;\n            } while (var_10h < *0x42e42c);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x42dbdc + 0x10) != 0) {\n            fcn.004047ea(5);\n            uVar2 = 0x3ff;\n            fcn.004047d2();\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x42e418 & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3, uVar2);\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar1)(uVar2);\n    }\ncode_r0x00404eab:\n    fcn.00403f7f(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3379
    },
    "0040508a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040508a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar5 = arg_ch;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar8 = 0;\n    var_4h = *0x42dbe4;\n    if (arg_ch == 0x110) {\n        var_2ch = 0xffffffff;\n        var_20h = 0xffffffff;\n        var_34h = 2;\n        var_30h = 0;\n        var_28h = NULL;\n        var_24h = 0;\n        var_1ch = 0;\n        uStack28 = 0;\n        arg_10h = *(*0x42e410 + 0x5c);\n        arg_ch = *(*0x42e410 + 0x60);\n        *0x42dbd0 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x42dbc8 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x42dbe4 = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x42dbe4;\n        fcn.00403f4d(*0x42dbd0);\n        *0x42dbd4 = fcn.004047ea(4);\n        *0x42dbec = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_14h);\n        var_2ch = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n        var_2ch = var_ch - var_2ch;\n        (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x101b, 0, &var_34h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < arg_10h) {\n            (*pcVar2)(var_4h, 0x1001, 0, arg_10h);\n            (*pcVar2)(var_4h, 0x1026, 0, arg_10h);\n        }\n        if (-1 < arg_ch) {\n            (*pcVar2)(var_4h, 0x1024, 0, arg_ch);\n        }\n        fcn.00403f18(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x42e418 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x42dbd0, 0);\n            if ((*0x42e418 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x42dbd0 = 0;\n            }\n            fcn.00403f4d(*0x42dbc8);\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x42e418 & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, arg_ch);\n            (*pcVar2)(uVar3, 0x2001, 0, arg_10h);\n        }\ncode_r0x0040540b:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &arg_ch);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040501e, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (iVar5 == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x42dbd0, 0);\n                (*pcVar1)(var_4h, 8);\n                fcn.00403f4d(var_4h);\n                goto code_r0x00405293;\n            }\n        }\n        else {\ncode_r0x00405293:\n            if (iVar5 == 0x404) {\n                if (*0x42dbcc != 0) {\n                    *0x428c50 = 2;\n                    fcn.00403ef1();\n                    goto code_r0x004052b4;\n                }\n                (*pcVar1)(*0x42e408, 8);\n                if (*0x42e48c == 0) {\n                    fcn.00404f4c(*(*0x429058 + 0x34), 0);\n                }\n                fcn.00403ef1(1);\n            }\n            if ((iVar5 == 0x7b) && (arg_10h == var_4h)) {\n                arg_10h = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n                if (0 < arg_10h) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar4 = fcn.00405d55(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuA)(uVar3, 0, 1, uVar4);\n                    iVar5 = arg_14h;\n                    iVar6 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_14h);\n                        iVar5 = var_14h;\n                        iVar6 = var_10h;\n                    }\n                    iVar5 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar5, iVar6, 0, arg_8h, 0);\n                    if (iVar5 == 1) {\n                        iVar5 = 1;\n                        var_34h = 0;\n                        var_28h = 0x429880;\n                        var_24h = 0xfff;\n                        arg_8h = arg_10h;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, arg_8h, &var_3ch);\n                            iVar5 = iVar5 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar5);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_28h = puVar7;\n                            iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, iVar8, &var_3ch);\n                            puVar7 = puVar7 + iVar5;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 < arg_10h);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x0040540b;\n            }\n        }\ncode_r0x004052b4:\n        uVar3 = fcn.00403f7f(iVar5, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2012
    },
    "0040558d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040558d(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.00405981(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "004055d5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004055d5(char *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpFindFileData;\n    uint var_120h;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t hFindFile;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_ch = fcn.00405893(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_ch != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00405d33(0x42a888, arg_8h);\n            if (uVar1 == 0) {\n                fcn.004057ec(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatA(0x42a888, \"\\\\*.*\");\n            }\n            if ((*arg_8h != '\\0') || (*0x42a888 == '\\\\')) {\n                sub.KERNEL32.dll_lstrcatA(arg_8h, 0x409014);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenA(arg_8h);\n            hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x42a888, &lpFindFileData);\n            if (hFindFile != -1) {\n                do {\n                    puVar5 = &var_120h;\n                    pcVar3 = fcn.004057d0(&var_120h, 0x3f);\n                    if ((*pcVar3 != '\\0') && (var_1ch != '\\0')) {\n                        puVar5 = &var_1ch;\n                    }\n                    if ((*puVar5 != '.') ||\n                       ((*(puVar5 + 1) != '\\0' && ((*(puVar5 + 1) != '.' || (*(puVar5 + 2) != '\\0')))))) {\n                        fcn.00405d33(arg_8h + iVar2, puVar5);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            iVar4 = fcn.0040558d(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    *0x42e488 = *0x42e488 + 1;\n                                }\n                                else {\n                                    fcn.00404f4c(0xfffffff1, arg_8h);\n                                    fcn.00405bee(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.00404f4c(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.004055d5(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(hFindFile, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = '\\0';\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_ch != 0) {\n                iVar2 = fcn.00406037(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.004057a5(arg_8h);\n                iVar2 = fcn.0040558d(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.00404f4c(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.00404f4c(0xfffffff1, arg_8h);\n                    fcn.00405bee(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x42e488 = *0x42e488 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n        *0x42e488 = *0x42e488 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 1037
    },
    "00405893": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00405893(uint param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    \n    fcn.00405d33(0x42ac88, param_1);\n    pcVar1 = fcn.0040583e(0x42ac88);\n    if ((pcVar1 != NULL) &&\n       ((pcVar5 = pcVar1,  fcn.00405f9e(pcVar1),  (*0x42e418 & 0x80) == 0 || ((*pcVar1 != '\\0' && (*pcVar1 != '\\\\'))))))\n    {\n        while( true ) {\n            uVar4 = 0x42ac88;\n            iVar3 = sub.KERNEL32.dll_lstrlenA(0x42ac88);\n            if (iVar3 <= pcVar1 + -0x42ac88) {\n                fcn.004057a5(0x42ac88, uVar4, pcVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x42ac88);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.00406037(0x42ac88);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            pcVar5 = 0x42ac88;\n            fcn.004057ec();\n        }\n    }\n    return false;\n}\n",
        "token_count": 342
    },
    "00405981": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405981(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "00405a7c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405a7c(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *hFile;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uint unaff_EBX;\n    int32_t unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x42b610, 0x4093e0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n    if (unaff_retaddr != 0) {\n        uVar2 = fcn.004059a6(unaff_retaddr, 0, 1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n        iVar3 = (*pcVar1)(unaff_retaddr, 0x42b610, 0x400);\n        if (iVar3 == 0) {\n            return;\n        }\n        if (0x400 < iVar3) {\n            return;\n        }\n    }\n    iVar3 = (*pcVar1)(unaff_EBX, 0x42ba10, 0x400);\n    if ((iVar3 != 0) && (iVar3 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)(0x42b210, \"%s=%s\\r\\n\", 0x42b610, 0x42ba10);\n        fcn.00405d55(0x42ba10, *(*0x42e410 + 0x128));\n        hFile = fcn.004059a6(0x42ba10, 0xc0000000, 4);\n        if (hFile != 0xffffffff) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, arg_10h + iVar3 + 10);\n            if ((lpBuffer != 0) && (puVar7 = arg_10h,  iVar4 = fcn.00405a1e(hFile, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.0040590b(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_10h + lpBuffer, \"[Rename]\\r\\n\");\n                    arg_10h = arg_10h + 10;\n                    puVar7 = arg_10h;\n                }\n                else {\n                    hFile = puVar7;\n                    puVar5 = fcn.0040590b(iVar4 + 10, 0x4093c8);\n                    puVar7 = arg_10h;\n                    if (puVar5 != NULL) {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        puVar7 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                fcn.00405961(puVar7 + lpBuffer, 0x42b210, iVar3);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 0);\n                fcn.00405a4d(hFile, lpBuffer, arg_10h + iVar3);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hFile);\n        }\n    }\n    return;\n}\n",
        "token_count": 858
    },
    "00406037": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00406037(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, 0x42b0d0);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x42b0d0;\n    }\n    return uVar2;\n}\n",
        "token_count": 119
    },
    "0040117d": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x418 + 8 + *0x42e428);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x42e42c) {\n            puVar3 = uVar4 * 0x418 + 8 + *0x42e428;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x106;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x42e42c);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "004012e2": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x42e410 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x42e42c == 0;\n            if (*0x42e42c != 0) {\n                puVar2 = *0x42e428 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x106;\n                } while (uVar1 < *0x42e42c);\n                bVar3 = uVar1 == *0x42e42c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 394
    },
    "00404061": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404061(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n    pcVar3 = _sym.imp.USER32.dll_GetDlgItem;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x42dbdc - (iVar7 * 4 + 4));\n        }\n        cVar2 = *(iVar7 + *0x42e438);\n        var_8h = 0;\n        pcVar10 = iVar7 + *0x42e438 + 1;\n        var_4h = fcn.0040402c;\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = pcVar10;\n        fcn.00403f18(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.00403f18(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.00403f3a(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00403f4d(uVar6);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x42e410 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar3)(uVar6, 0x443, 0, iVar7);\n        (*pcVar3)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenA(pcVar10);\n        (*pcVar3)(uVar6, 0x435, 0, uVar8);\n        *0x42884c = 0;\n        (*pcVar3)(uVar6, 0x449, cVar2, &var_ch);\n        *0x42884c = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x42884c != 0)) || (puVar1 = *0x429058 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x004042d8;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar5)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.00403f3a(uVar9 & 1);\n        fcn.004042eb();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*pcVar3)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x42d3a0;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar5)(uVar6, 1099, 0, &var_ch);\n                pcVar4 = _sym.imp.USER32.dll_LoadCursorA;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorA)(0, reloc.USER32.dll_LoadCursorA);\n                pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(arg_8h, \"open\", var_4h, 0, 0, 1);\n                uVar6 = (*pcVar4)(0, 0x7f00);\n                (*pcVar3)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar5)(*0x42e408, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar5)(*0x42e408, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x42884c = *0x42884c + 1;\n    }\ncode_r0x004042d8:\n    uVar6 = fcn.00403f7f(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1381
    },
    "00404f4c": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f4c(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x42dbe4;\n    if (*0x42dbe4 != 0) {\n        var_8h = *0x42e4b4;\n        uVar4 = *0x42e4b4 & 1;\n        if (uVar4 == 0) {\n            fcn.00405d55(0x429060, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenA(0x429060);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenA(lpString2);\n            if (0x7ff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatA(0x429060, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x42dbc8, 0x429060);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x429060;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x1007 - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 + 0x429060) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "0040613d": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.0040613d(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x42be14 == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x42be10) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x42be10);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 308
    },
    "004061ab": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004061ab(uint8_t **arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t **ppuVar7;\n    char cVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint8_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *var_40h;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t **var_30h;\n    uint8_t *var_2ch;\n    uint8_t **var_20h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    uint8_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    var_38h = *arg_8h;\n    ppuVar1 = arg_8h + 4;\n    var_34h = arg_8h[1];\n    var_30h = arg_8h[0x26ee];\n    puVar10 = arg_8h[0x14a];\n    var_40h = arg_8h[0x14b];\n    if (var_30h < arg_8h[0x26ed]) {\n        var_2ch = arg_8h[0x26ed] + (-1 - var_30h);\n    }\n    else {\n        var_2ch = arg_8h[0x26ec] + -var_30h;\n    }\ncode_r0x00406bbf:\n    while (*ppuVar1 < 0x10) {\n    // switch table (16 cases) at 0x406bfa\n        switch(*(*ppuVar1 * 4 + 0x406bfa)) {\n        case 0x406223:\n            for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406bcf;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = puVar10 + -3;\n            puVar5 = var_40h >> 3;\n            uVar14 = (var_40h & 7) >> 1;\n            arg_8h[0x149] = (-((var_40h & 1) != 0) & 7) + 8;\n            if (uVar14 == 0) {\n                *ppuVar1 = 0x9;\n                var_40h = puVar5 >> (puVar10 & 7);\n                puVar10 = puVar10 + -(puVar10 & 7);\n            }\n            else {\n                var_40h = puVar5;\n                if (uVar14 == 1) {\n                    if (*0x42d398 == '\\0') {\n                        var_8h = NULL;\n                        piVar4 = 0x42c218;\n                        do {\n                            cVar8 = '\\b';\n                            if (0x42c454 < piVar4) {\n                                if (piVar4 < 0x42c618) {\n                                    cVar8 = '\\t';\n                                }\n                                else if (piVar4 < 0x42c678) {\n                                    cVar8 = '\\a';\n                                }\n                            }\n                            *piVar4 = cVar8;\n                            piVar4 = piVar4 + 1;\n                        } while (piVar4 < 0x42c698);\n                        fcn.00406ca2(0x42c218, 0x120, 0x101, 0x4073c4, 0x407404, 0x42c214, 0x409420, 0x42cb18, &var_8h);\n                        puVar12 = 0x42c218;\n                        for (iVar6 = 0x1e; iVar6 != 0; iVar6 = iVar6 + -1) {\n                            *puVar12 = 5;\n                            puVar12 = puVar12 + 1;\n                        }\n                        fcn.00406ca2(0x42c218, 0x1e, 0, 0x407444, 0x407480, 0x42c210, 0x409424, 0x42cb18, &var_8h);\n                        *0x42d398 = *0x42d398 + '\\x01';\n                    }\n                    *(arg_8h + 8) = *0x409420;\n                    *(arg_8h + 0x21) = *0x409424;\n                    arg_8h[9] = *0x42c214;\n                    arg_8h[10] = *0x42c210;\n                    goto code_r0x0040637b;\n                }\n                if (uVar14 != 2) goto code_r0x0040625b;\n                *ppuVar1 = 0xb;\n            }\n            break;\n        case 0x406262:\n            goto code_r0x00406262;\n        case 0x4063b8:\n            for (; puVar10 < 0x20; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406bcf;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = NULL;\n            puVar5 = var_40h & 0xffff;\n            var_40h = NULL;\n            arg_8h[5] = puVar5;\n            if (puVar5 == NULL) goto code_r0x004064be;\n            puVar5 = 0xa;\n            goto code_r0x004064c4;\n        case 0x4063dd:\n            if (var_34h == NULL) {\ncode_r0x00406bcf:\n                uVar11 = 0;\n                arg_8h[0x14b] = var_40h;\n                arg_8h[0x14a] = puVar10;\n                arg_8h[1] = NULL;\n                goto code_r0x00406283;\n            }\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x0040648a;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406c3a(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar3;\n                        }\n                    }\n                }\n                if (var_2ch == NULL) goto code_r0x00406beb;\n            }\ncode_r0x0040648a:\n            puVar5 = var_2ch;\n            if (var_34h <= var_2ch) {\n                puVar5 = var_34h;\n            }\n            puVar9 = arg_8h[5];\n            if (puVar5 <= arg_8h[5]) {\n                puVar9 = puVar5;\n            }\n            fcn.00405961();\n            var_38h = var_38h + puVar9;\n            var_34h = var_34h + -puVar9;\n            var_30h = var_30h + puVar9;\n            var_2ch = var_2ch + -puVar9;\n            ppuVar7 = arg_8h + 5;\n            *ppuVar7 = *ppuVar7 + -puVar9;\n            if (*ppuVar7 == NULL) {\ncode_r0x004064be:\n                puVar5 = arg_8h[0x149];\ncode_r0x004064c4:\n                *ppuVar1 = puVar5;\n            }\n            break;\n        case 0x4064eb:\n            for (; puVar10 < 0xe; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406bcf;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = var_40h & 0x3fff;\n            if (((var_40h & 0x3fff & 0x1f) < 0x1e) && ((var_40h & 0x3e0) < 0x3a1)) {\n                var_40h = var_40h >> 0xe;\n                puVar10 = puVar10 + -0xe;\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xc;\n                goto code_r0x0040652a;\n            }\n            goto code_r0x00406262;\n        case 0x40652a:\ncode_r0x0040652a:\n            if (arg_8h[6] < (arg_8h[5] >> 10) + 4) {\n                do {\n                    for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x00406bcf;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    puVar5 = var_40h & 7;\n                    puVar10 = puVar10 + -3;\n                    var_40h = var_40h >> 3;\n                    arg_8h[arg_8h[6][0x4073b0] + 7] = puVar5;\n                    arg_8h[6] = arg_8h[6] + 1;\n                } while (arg_8h[6] < (arg_8h[5] >> 10) + 4);\n            }\n            while (arg_8h[6] < 0x13) {\n                arg_8h[arg_8h[6][0x4073b0] + 7] = NULL;\n                arg_8h[6] = arg_8h[6] + 1;\n            }\n            ppuVar7 = arg_8h + 0x147;\n            var_8h = NULL;\n            *ppuVar7 = 0x7;\n            iVar6 = fcn.00406ca2(arg_8h + 7, 0x13, 0x13, 0, 0, arg_8h + 0x148, ppuVar7, arg_8h + 0x14c, &var_8h);\n            if ((iVar6 == 0) && (*ppuVar7 != NULL)) {\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xd;\ncode_r0x0040670d:\n                while (arg_8h[6] < (arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f)) {\n                    for (; puVar10 < arg_8h[0x147]; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x00406bcf;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    uVar14 = *(arg_8h[0x147] * 2 + 0x4093fc) & var_40h;\n                    uVar2 = arg_8h[0x148][uVar14 * 4 + 1];\n                    uVar15 = uVar2;\n                    var_14h = *(arg_8h[0x148] + uVar14 * 4 + 2);\n                    if (var_14h < 0x10) {\n                        puVar10 = puVar10 + -uVar15;\n                        var_40h = var_40h >> (uVar2 & 0x1f);\n                        arg_8h[arg_8h[6] + 7] = var_14h;\n                        arg_8h[6] = arg_8h[6] + 1;\n                    }\n                    else {\n                        if (var_14h == 0x12) {\n                            var_8h = 0xb;\n                            puVar5 = 0x7;\n                        }\n                        else {\n                            puVar5 = var_14h + -0xe;\n                            var_8h = 0x3;\n                        }\n                        for (; puVar10 < puVar5 + uVar15; puVar10 = puVar10 + 8) {\n                            if (var_34h == NULL) goto code_r0x00406bcf;\n                            var_34h = var_34h + -1;\n                            var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                            var_38h = var_38h + 1;\n                        }\n                        uVar14 = var_40h >> (uVar2 & 0x1f);\n                        puVar10 = puVar10 + (-puVar5 - uVar15);\n                        puVar9 = var_8h + (*(puVar5 * 2 + 0x4093fc) & uVar14);\n                        var_40h = uVar14 >> (puVar5 & 0x1f);\n                        puVar5 = arg_8h[6];\n                        if ((arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f) < puVar9 + puVar5)\n                        goto code_r0x00406262;\n                        if (var_14h == 0x10) {\n                            if (puVar5 == NULL) goto code_r0x00406262;\n                            puVar13 = arg_8h[puVar5 + 6];\n                        }\n                        else {\n                            puVar13 = NULL;\n                        }\n                        ppuVar7 = arg_8h + puVar5 + 7;\n                        do {\n                            *ppuVar7 = puVar13;\n                            puVar5 = puVar5 + 1;\n                            ppuVar7 = ppuVar7 + 1;\n                            puVar9 = puVar9 + -1;\n                        } while (puVar9 != NULL);\n                        arg_8h[6] = puVar5;\n                    }\n                }\n                arg_8h[0x148] = NULL;\n                var_ch = 0;\n                uVar14 = arg_8h[5] & 0x1f;\n                uVar15 = uVar14 + 0x101;\n                var_14h = (arg_8h[5] >> 5 & 0x1f) + 1;\n                var_4h = 9;\n                var_10h = 6;\n                iVar6 = fcn.00406ca2(arg_8h + 7, uVar15, 0x101, 0x4073c4, 0x407404, &var_18h, &var_4h, arg_8h + 0x14c, \n                                     &var_ch);\n                if (var_4h == 0) {\n                    iVar6 = -1;\n                }\n                if (((iVar6 != 0) ||\n                    (iVar6 = fcn.00406ca2(arg_8h + uVar14 + 0x108, var_14h, 0, 0x407444, 0x407480, &var_1ch, &var_10h, \n                                          arg_8h + 0x14c, &var_ch),  iVar6 != 0)) ||\n                   ((var_10h == 0 && (0x101 < uVar15)))) goto code_r0x00406262;\n                *ppuVar1 = NULL;\n                *(arg_8h + 0x21) = var_10h;\n                arg_8h[9] = var_18h;\n                *(arg_8h + 8) = var_4h;\n                arg_8h[10] = var_1ch;\ncode_r0x004067f7:\n                arg_8h[7] = *(arg_8h + 8);\n                arg_8h[6] = arg_8h[9];\n                *ppuVar1 = 0x1;\ncode_r0x0040680a:\n                for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                    if (var_34h == NULL) goto code_r0x00406bcf;\n                    var_34h = var_34h + -1;\n                    var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                    var_38h = var_38h + 1;\n                }\n                puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x4093fc) & var_40h) * 4;\n                var_40h = var_40h >> (puVar5[1] & 0x1f);\n                puVar10 = puVar10 + -puVar5[1];\n                uVar2 = *puVar5;\n                puVar9 = uVar2;\n                if (puVar9 == NULL) {\n                    arg_8h[6] = *(puVar5 + 2);\n                    *ppuVar1 = 0x6;\n                }\n                else if ((uVar2 & 0x10) == 0) {\n                    if ((uVar2 & 0x40) == 0) goto code_r0x0040695d;\n                    if ((uVar2 & 0x20) == 0) goto code_r0x00406262;\n                    *ppuVar1 = 0x7;\n                }\n                else {\n                    arg_8h[6] = puVar9 & 0xf;\n                    arg_8h[5] = *(puVar5 + 2);\n                    *ppuVar1 = 0x2;\n                }\n            }\n            else {\n                *ppuVar1 = 0x11;\n            }\n            break;\n        case 0x40670d:\n            goto code_r0x0040670d;\n        case 0x4067f7:\n            goto code_r0x004067f7;\n        case 0x40680a:\n            goto code_r0x0040680a;\n        case 0x4068a0:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406bcf;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = arg_8h[5] + (*(puVar5 * 2 + 0x4093fc) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            arg_8h[7] = *(arg_8h + 0x21);\n            arg_8h[6] = arg_8h[10];\n            *ppuVar1 = 0x3;\n        case 0x4068f1:\n            for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406bcf;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x4093fc) & var_40h) * 4;\n            var_40h = var_40h >> (puVar5[1] & 0x1f);\n            puVar10 = puVar10 + -puVar5[1];\n            uVar2 = *puVar5;\n            puVar9 = uVar2;\n            if ((uVar2 & 0x10) == 0) {\n                if ((uVar2 & 0x40) != 0) goto code_r0x00406262;\ncode_r0x0040695d:\n                arg_8h[7] = puVar9;\n                arg_8h[6] = puVar5 + *(puVar5 + 2) * 4;\n            }\n            else {\n                arg_8h[6] = puVar9 & 0xf;\n                arg_8h[7] = *(puVar5 + 2);\n                *ppuVar1 = 0x4;\n            }\n            break;\n        case 0x40696f:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406bcf;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[7] = arg_8h[7] + (*(puVar5 * 2 + 0x4093fc) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            *ppuVar1 = 0x5;\n        case 0x4069b3:\n            puVar5 = arg_8h[7];\n            if (var_30h + (-0x1ba0 - ppuVar1) < puVar5) {\n                puVar5 = arg_8h[0x26ec] + (-ppuVar1 - puVar5) + -0x1ba0;\n            }\n            else {\n                puVar5 = -puVar5;\n            }\n            var_20h = puVar5 + var_30h;\n            puVar5 = arg_8h[5];\n            ppuVar7 = var_30h;\n            while (var_30h = ppuVar7,  puVar5 != NULL) {\n                if (var_2ch == NULL) {\n                    if (ppuVar7 == arg_8h[0x26ec]) {\n                        ppuVar3 = arg_8h[0x26ed];\n                        var_30h = arg_8h + 0x6ec;\n                        if (ppuVar3 != var_30h) {\n                            if (var_30h < ppuVar3) {\n                                var_2ch = ppuVar3 + (-1 - var_30h);\n                            }\n                            else {\n                                var_2ch = arg_8h[0x26ec] - var_30h;\n                            }\n                            ppuVar7 = var_30h;\n                            if (var_2ch != NULL) goto code_r0x00406a87;\n                        }\n                    }\n                    arg_8h[0x26ee] = ppuVar7;\n                    fcn.00406c3a();\n                    var_30h = arg_8h[0x26ee];\n                    ppuVar7 = arg_8h[0x26ed];\n                    if (var_30h < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - var_30h);\n                    }\n                    else {\n                        var_2ch = arg_8h[0x26ec] + -var_30h;\n                    }\n                    var_8h = arg_8h[0x26ec];\n                    if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = var_8h - ppuVar3;\n                        }\n                    }\n                    if (var_2ch == NULL) goto code_r0x00406beb;\n                }\ncode_r0x00406a87:\n                *var_30h = *var_20h;\n                ppuVar7 = var_30h + 1;\n                var_20h = var_20h + 1;\n                var_2ch = var_2ch + -1;\n                if (var_20h == arg_8h[0x26ec]) {\n                    var_20h = arg_8h + 0x6ec;\n                }\n                ppuVar3 = arg_8h + 5;\n                *ppuVar3 = *ppuVar3 + -1;\n                puVar5 = *ppuVar3;\n            }\ncode_r0x0040637b:\n            *ppuVar1 = NULL;\n            break;\n        case 0x406ab9:\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x00406b58;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406c3a(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                var_8h = arg_8h[0x26ec];\n                if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                    var_30h = ppuVar3;\n                    if (ppuVar3 < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - ppuVar3);\n                    }\n                    else {\n                        var_2ch = var_8h - ppuVar3;\n                    }\n                }\n                if (var_2ch != NULL) goto code_r0x00406b58;\n                goto code_r0x00406beb;\n            }\ncode_r0x00406b58:\n            *var_30h = *(arg_8h + 6);\n            var_2ch = var_2ch + -1;\n            var_30h = var_30h + 1;\n            goto code_r0x0040637b;\n        case 0x406b6a:\n            if (0x7 < puVar10) {\n                puVar10 = puVar10 + -8;\n                var_34h = var_34h + 1;\n                var_38h = var_38h + -1;\n            }\n        case 0x406b78:\n            arg_8h[0x26ee] = var_30h;\n            fcn.00406c3a();\n            var_30h = arg_8h[0x26ee];\n            ppuVar7 = arg_8h[0x26ed];\n            if (var_30h < ppuVar7) {\n                var_2ch = ppuVar7 + (-1 - var_30h);\n            }\n            else {\n                var_2ch = arg_8h[0x26ec] + -var_30h;\n            }\n            if (var_30h != ppuVar7) {\ncode_r0x00406beb:\n                uVar11 = 0;\n                goto code_r0x0040626b;\n            }\n            *ppuVar1 = arg_8h[0x149];\n            if (arg_8h[0x149] != 0x8) {\n                uVar11 = 1;\n                goto code_r0x0040626b;\n            }\n        }\n    }\n    goto code_r0x00406262;\ncode_r0x0040625b:\n    if (uVar14 == 3) {\ncode_r0x00406262:\n        uVar11 = 0xffffffff;\n        *ppuVar1 = 0x11;\ncode_r0x0040626b:\n        arg_8h[0x14b] = var_40h;\n        arg_8h[0x14a] = puVar10;\n        arg_8h[1] = var_34h;\ncode_r0x00406283:\n        *arg_8h = var_38h;\n        arg_8h[0x26ee] = var_30h;\n        fcn.00406c3a(arg_8h);\n        return uVar11;\n    }\n    goto code_r0x00406bbf;\n}\n",
        "token_count": 7391
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x42e428;\n    iVar5 = arg_8h * 0x418 + *0x42e428;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x42e42c) {\n        do {\n            puVar1 = arg_8h * 0x418 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x42e42c);\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "00402e9f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402e9f(int32_t nDenominator, uint arg_ch, int32_t arg_10h, uint32_t nNumber)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_54h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = nNumber;\n    var_8h = nNumber;\n    if (arg_10h == 0) {\n        var_8h = 0x8000;\n    }\n    var_4h = 0;\n    var_ch = arg_10h;\n    if (arg_10h == 0) {\n        var_ch = 0x418438;\n    }\n    if (-1 < nDenominator) {\n        fcn.004030c7(*0x42e458 + nDenominator);\n    }\n    iVar2 = fcn.004030b1(&nNumber, 4);\n    uVar5 = var_8h;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    if (iVar2 != 0) {\n        if ((nNumber & 0x80000000) == 0) {\n            if (arg_10h == 0) {\n                while( true ) {\n                    if (nNumber < 1) {\n                        return var_4h;\n                    }\n                    uVar6 = nNumber;\n                    if (uVar5 <= nNumber) {\n                        uVar6 = uVar5;\n                    }\n                    iVar2 = fcn.004030b1();\n                    if (iVar2 == 0) break;\n                    iVar2 = fcn.00405a4d(arg_ch, 0x414438, uVar6);\n                    if (iVar2 == 0) {\n                        return 0xfffffffe;\n                    }\n                    var_4h = var_4h + uVar6;\n                    nNumber = nNumber - uVar6;\n                }\n            }\n            else {\n                if (nNumber < uVar6) {\n                    uVar6 = nNumber;\n                }\n                iVar2 = fcn.004030b1(arg_10h, uVar6);\n                if (iVar2 != 0) {\n                    return uVar6;\n                }\n            }\n        }\n        else {\n            var_10h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *0x40ad9c = 0;\n            *0x40ad98 = 0;\n            uVar6 = nNumber & 0x7fffffff;\n            *0x40a880 = 8;\n            *0x414428 = 0x40c420;\n            *0x414424 = 0x40c420;\n            *0x414420 = 0x414420;\n            nNumber = uVar6;\n            if (uVar6 == 0) {\n                *0x40a880 = 8;\n                *0x40ad98 = 0;\n                *0x40ad9c = 0;\n                *0x414420 = 0x414420;\n                *0x414424 = 0x40c420;\n                *0x414428 = 0x40c420;\n                return var_4h;\n            }\n            while( true ) {\n                uVar5 = 0x4000;\n                if (nNumber < 0x4000) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.004030b1();\n                if (iVar2 == 0) break;\n                nNumber = nNumber - uVar5;\n                *0x40a870 = 0x414438;\n                *0x40a874 = uVar5;\n                while( true ) {\n                    iVar2 = var_ch;\n                    *0x40a878 = var_ch;\n                    *0x40a87c = var_8h;\n                    var_14h = fcn.004061ab(0x40a870);\n                    if (var_14h < 0) {\n                        return 0xfffffffc;\n                    }\n                    iVar2 = *0x40a878 - iVar2;\n                    iVar3 = (*pcVar1)();\n                    if (((*0x42e4b4 & 1) != 0) && ((200 < iVar3 - var_10h || (nNumber == 0)))) {\n                        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar6 - nNumber, 100, uVar6);\n                        (*_sym.imp.USER32.dll_wsprintfA)(&var_54h, \"... %d%%\", uVar4);\n                        fcn.00404f4c(0, &var_54h);\n                        var_10h = iVar3;\n                    }\n                    if (iVar2 == 0) break;\n                    if (arg_10h == 0) {\n                        iVar3 = fcn.00405a4d(arg_ch, var_ch, iVar2);\n                        if (iVar3 == 0) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        var_8h = var_8h - iVar2;\n                        var_ch = *0x40a878;\n                    }\n                    var_4h = var_4h + iVar2;\n                    if (var_14h == 1) {\n                        return var_4h;\n                    }\n                }\n                if (nNumber < 1) {\n                    return var_4h;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1255
    },
    "00403f7f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f7f(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((arg_8h - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 456
    },
    "004047ea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004047ea(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x42e428;\n    iVar3 = *0x42e42c;\n    if (*0x42e42c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x418;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 166
    },
    "0040501e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040501e(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x42e42c;\n    iVar2 = *0x42e428;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x42e4b8 = *0x42e4b8 | uVar1;\n    uVar5 = 0;\n    fcn.00403f64(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401389();\n                if (iVar2 != 0) {\n                    *0x42e48c = *0x42e48c + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x106;\n        } while (iVar4 != 0);\n    }\n    fcn.00403f64(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x42e48c;\n}\n",
        "token_count": 315
    },
    "00401389": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x42e430,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x42dbec = *0x42dbec + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x42dbec, 30000, *0x42dbd4, 0);\n            (*_sym.imp.USER32.dll_SendMessageA)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "004042eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004042eb(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x428848;\n    if (*0x42e48c == 0) {\n        uVar1 = *0x42987c;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 88
    },
    "004046a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004046a7(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 1) {\n        fcn.0040550d(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x466, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00404817": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404817(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x110c, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 320
    },
    "00405529": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405529(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x42e4a0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x42e4a8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x409234 = *0x42e408;\n        *0x409238 = *0x42e400;\n        *0x40923c = param_1;\n        *0x409240 = 0x42dc00;\n        *0x409244 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x409230);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0040583e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.0040583e(char *param_1)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    pcVar2 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    uVar3 = (*pcVar1)(pcVar2);\n    if (((*param_1 == '\\0') || (*pcVar2 != ':')) || (pcVar2[1] != '\\\\')) {\n        if ((*param_1 == '\\\\') && (param_1[1] == '\\\\')) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                pcVar2 = fcn.004057d0();\n                if (*pcVar2 == '\\0') goto code_r0x0040588b;\n                pcVar2 = pcVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x0040588b:\n            pcVar2 = NULL;\n        }\n    }\n    else {\n        pcVar2 = (*pcVar1)(uVar3);\n    }\n    return pcVar2;\n}\n",
        "token_count": 272
    },
    "00405c1a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c1a(uint hKey, uint lpcbData, uint lpValueName, uchar *lpType, int32_t samDesired)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = lpType;\n    *lpType = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpcbData, 0, -(samDesired != 0) & 0x100 | 0x20019, &samDesired)\n    ;\n    if (iVar2 == 0) {\n        lpcbData = 0x400;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(samDesired, lpValueName, 0, &lpType, puVar1, &lpcbData);\n        if ((iVar2 != 0) || ((lpType != 0x1 && (lpType != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x3ff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(samDesired);\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00405d55": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405d55(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *ppidl;\n    int32_t var_4h;\n    \n    puVar7 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x42dbdc - (arg_ch * 4 + 4));\n    }\n    puVar5 = *0x42e438 + arg_ch;\n    arg_8h_00 = 0x42d3a0;\n    if ((0x42d39f < arg_8h) && (arg_8h + -0x10b4e8 < 0x800)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar7;\n    }\n    do {\n        while( true ) {\n            uVar1 = *puVar5;\n            if ((uVar1 == 0) || (0x3ff < arg_8h_00 + -0x10b4e8)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00405d33(arg_8h, 0x42d3a0);\n                }\n                return;\n            }\n            puVar6 = puVar5 + 1;\n            if (uVar1 < 4) break;\n            if (uVar1 == 4) {\n                *arg_8h_00 = *puVar6;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar6;\n            }\n        }\n        uVar2 = puVar5[2];\n        var_ch = uVar2;\n        uVar3 = *puVar6;\n        puVar7 = uVar3;\n        uVar8 = (var_ch & 0x7f) << 7 | puVar7 & 0x7f;\n        var_18h = CONCAT22(uVar3 >> 7, uVar3) | 0x8000;\n        var_10h = CONCAT22(uVar2 >> 7, uVar2) | 0x8000;\n        var_14h = puVar7;\n        if (uVar1 == 2) {\n            iVar9 = 2;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n            if ((((iVar4 < 0) && (iVar4 != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = 1;\n            }\n            if (*0x42e484 != 0) {\n                var_10h = 0x4;\n                iVar9 = 4;\n            }\n            if (uVar3 < '\\0') {\n                var_18h = (puVar7 & 0x3f) + *0x42e438;\n                var_10h = puVar7 & 0x40;\n                var_14h = arg_8h_00;\n                fcn.00405c1a(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", var_18h, arg_8h_00, var_10h);\n                if (*arg_8h_00 == 0) {\n                    fcn.00405d55(arg_8h_00, var_ch);\n                    goto code_r0x00405efa;\n                }\ncode_r0x00405eff:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatA();\n                }\n            }\n            else {\n                if (puVar7 == 0x25) {\n                    var_10h = 0x400;\n                    var_18h = 0x405e87;\n                    var_14h = arg_8h_00;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n                }\n                else {\n                    if (puVar7 == 0x24) {\n                        var_10h = 0x400;\n                        var_18h = 0x405e9a;\n                        var_14h = arg_8h_00;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)();\n                        iVar9 = 0;\n                    }\n                    while (iVar9 != 0) {\n                        iVar9 = iVar9 + -1;\n                        if ((*0x42e404 != NULL) && (var_4h != 0)) {\n                            var_10h = arg_8h_00;\n                            var_14h = NULL;\n                            var_18h = NULL;\n                            iVar4 = (**0x42e404)(*0x42e408, (&fcn.00405d55::var_18h)[iVar9]);\n                            if (iVar4 == 0) break;\n                        }\n                        var_10h = &fcn.00405d55::ppidl;\n                        var_14h = (&fcn.00405d55::var_18h)[iVar9];\n                        var_18h = *0x42e408;\n                        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)();\n                        if (iVar4 == 0) {\n                            var_14h = ppidl;\n                            var_18h = 0x405ee4;\n                            var_10h = arg_8h_00;\n                            iVar4 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)();\n                            var_18h = ppidl;\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                            if (iVar4 != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x00405efa:\n                if (*arg_8h_00 != 0) goto code_r0x00405eff;\n            }\ncode_r0x00405f10:\n            fcn.00405f9e(arg_8h_00);\n        }\n        else if (uVar1 == 3) {\n            if (uVar8 == 0x1d) {\n                fcn.00405c91(arg_8h_00, *0x42e408);\n            }\n            else {\n                fcn.00405d33(arg_8h_00, uVar8 * 0x400 + 0x42f000);\n            }\n            if (uVar8 - 0x15 < 7) goto code_r0x00405f10;\n        }\n        else if (uVar1 == 1) {\n            fcn.00405d55(arg_8h_00, -1 - uVar8);\n        }\n        iVar4 = sub.KERNEL32.dll_lstrlenA();\n        arg_8h_00 = arg_8h_00 + iVar4;\n        puVar5 = puVar5 + 3;\n    } while( true );\n}\n",
        "token_count": 1729
    },
    "00405f9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405f9e(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.00405812(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffffff00 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (pcVar4 = fcn.004057d0(\"*?|<>/\\\":\", uVar3),  *pcVar4 == '\\0')) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00405961(puVar6, puVar7, iVar5 - puVar7);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffffff00 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 517
    },
    "00406ca2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00406ca2(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    int32_t iVar1;\n    unkbyte3 Var2;\n    uint uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    uint var_ech;\n    uint var_b0h;\n    uint var_ach;\n    int32_t aiStack172 [14];\n    uint32_t var_70h;\n    uint var_6ch;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    uint32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar15 = arg_20h;\n    puVar13 = &var_70h;\n    for (iVar5 = 0x10; piVar6 = arg_8h,  uVar8 = arg_ch,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    do {\n        (&var_70h)[*piVar6] = (&var_70h)[*piVar6] + 1;\n        uVar8 = uVar8 - 1;\n        piVar6 = piVar6 + 1;\n    } while (uVar8 != 0);\n    if (var_70h == arg_ch) {\n        *arg_1ch = 0;\n        *arg_20h = 0;\n        uVar3 = 0;\n    }\n    else {\n        uVar8 = 1;\n        arg_20h = *arg_20h;\n        uVar9 = 0xf;\n        do {\n            iVar5 = 0;\n            if ((&var_70h)[uVar8] != 0) break;\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < 0x10);\n        var_4h = uVar8;\n        if (arg_20h < uVar8) {\n            arg_20h = uVar8;\n        }\n        do {\n            if ((&var_70h)[uVar9] != 0) break;\n            uVar9 = uVar9 - 1;\n        } while (uVar9 != 0);\n        var_18h = uVar9;\n        if (uVar9 < arg_20h) {\n            arg_20h = uVar9;\n        }\n        *puVar15 = arg_20h;\n        var_30h = 1 << (uVar8 & 0x1f);\n        for (; uVar8 < uVar9; uVar8 = uVar8 + 1) {\n            if (var_30h - (&var_70h)[uVar8] < 0) goto code_r0x00406fd3;\n            var_30h = (var_30h - (&var_70h)[uVar8]) * 2;\n        }\n        iVar7 = (&var_70h)[uVar9];\n        var_30h = var_30h - iVar7;\n        if (-1 < var_30h) {\n            var_ach = 0;\n            (&var_70h)[uVar9] = iVar7 + var_30h;\n            iVar7 = 0;\n            iVar10 = uVar9 - 1;\n            if (iVar10 != 0) {\n                iVar14 = 0;\n                do {\n                    iVar7 = iVar7 + *(&var_6ch + iVar14);\n                    iVar10 = iVar10 + -1;\n                    *(aiStack172 + iVar14) = iVar7;\n                    iVar14 = iVar14 + 4;\n                } while (iVar10 != 0);\n            }\n            uVar8 = 0;\n            piVar6 = arg_8h;\n            do {\n                iVar7 = *piVar6;\n                piVar6 = piVar6 + 1;\n                if (iVar7 != 0) {\n                    iVar10 = (&var_b0h)[iVar7];\n                    *(iVar10 * 4 + 0x42c698) = uVar8;\n                    (&var_b0h)[iVar7] = iVar10 + 1;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < arg_ch);\n            iVar7 = (&var_b0h)[uVar9];\n            var_ch = -1;\n            var_24h = 0;\n            iVar10 = -arg_20h;\n            var_8h = 0;\n            var_b0h = 0;\n            var_20h = 0x42c698;\n            var_ech = 0;\n            if (var_4h <= var_18h) {\n                var_28h = var_4h - 1;\n                var_1ch = &var_70h + var_4h;\n                do {\n                    var_10h = *var_1ch;\n                    while (var_10h != 0) {\n                        arg_8h._2_2_ = arg_8h >> 0x10;\n                        var_2ch = var_10h - 1;\n                        var_14h = arg_20h + iVar10;\n                        if (arg_20h + iVar10 < var_4h) {\n                            do {\n                                iVar14 = var_ch + 1;\n                                var_ch = iVar14;\n                                uVar8 = var_18h - var_14h;\n                                if (arg_20h < var_18h - var_14h) {\n                                    uVar8 = arg_20h;\n                                }\n                                uVar9 = var_4h - var_14h;\n                                uVar11 = 1 << (uVar9 & 0x1f);\n                                if ((var_10h < uVar11) &&\n                                   (iVar5 = uVar11 + (-1 - var_2ch),  puVar15 = var_1ch,  uVar9 < uVar8)) {\n                                    while (uVar9 = uVar9 + 1,  uVar9 < uVar8) {\n                                        uVar11 = puVar15[1];\n                                        if (iVar5 * 2 <= uVar11) break;\n                                        iVar5 = iVar5 * 2 - uVar11;\n                                        puVar15 = puVar15 + 1;\n                                    }\n                                }\n                                var_24h = 1 << (uVar9 & 0x1f);\n                                uVar8 = *arg_28h + var_24h;\n                                if (0x5a0 < uVar8) goto code_r0x00406fd3;\n                                iVar5 = arg_24h + *arg_28h * 4;\n                                *arg_28h = uVar8;\n                                (&var_ech)[iVar14] = iVar5;\n                                uVar8 = var_8h;\n                                if (iVar14 == 0) {\n                                    *arg_1ch = iVar5;\n                                }\n                                else {\n                                    iVar1 = *(&stack0xffffff0c + iVar14 * 4);\n                                    (&var_b0h)[iVar14] = var_8h;\n                                    arg_8h._0_2_ = uVar9 & 0xff | (arg_20h & 0xff) << 8;\n                                    uVar8 = uVar8 >> (iVar10 & 0x1f);\n                                    arg_8h = CONCAT22((iVar5 - iVar1 >> 2) - uVar8, arg_8h);\n                                    *(iVar1 + uVar8 * 4) = arg_8h;\n                                }\n                                iVar10 = var_14h;\n                                var_14h = var_14h + arg_20h;\n                            } while (var_14h < var_4h);\n                        }\n                        uVar12 = iVar10;\n                        Var2 = CONCAT21(arg_8h._2_2_, var_4h - uVar12);\n                        if (var_20h < iVar7 * 4 + 0x42c698U) {\n                            uVar8 = *var_20h;\n                            if (uVar8 < arg_10h) {\n                                arg_8h._0_2_ = CONCAT31(Var2, (uVar8 < 0x100) + -1) & 0xff60;\n                                uVar4 = *var_20h;\n                                var_20h = var_20h + 1;\n                            }\n                            else {\n                                iVar14 = (uVar8 - arg_10h) * 2;\n                                var_20h = var_20h + 1;\n                                arg_8h = CONCAT31(Var2, *(iVar14 + arg_18h) + 'P');\n                                uVar4 = *(iVar14 + arg_14h);\n                            }\n                            arg_8h = CONCAT22(uVar4, arg_8h);\n                        }\n                        else {\n                            arg_8h = CONCAT31(Var2, 0xc0);\n                        }\n                        for (uVar8 = var_8h >> (uVar12 & 0x1f); uVar8 < var_24h;\n                            uVar8 = uVar8 + (1 << (var_4h - uVar12 & 0x1f))) {\n                            *(iVar5 + uVar8 * 4) = arg_8h;\n                        }\n                        uVar8 = 1 << (var_28h & 0x1f);\n                        while ((var_8h & uVar8) != 0) {\n                            var_8h = var_8h ^ uVar8;\n                            uVar8 = uVar8 >> 1;\n                        }\n                        var_8h = var_8h ^ uVar8;\n                        var_10h = 1;\n                        var_10h = var_2ch;\n                        if (((1 << (uVar12 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]) {\n                            do {\n                                iVar10 = iVar10 - arg_20h;\n                                var_ch = var_ch + -1;\n                            } while (((1 << (iVar10 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]);\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                    var_1ch = var_1ch + 1;\n                    var_28h = var_28h + 1;\n                } while (var_4h <= var_18h);\n            }\n            if (var_30h == 0) {\n                return 0;\n            }\n            if (var_18h == 1) {\n                return 0;\n            }\n        }\ncode_r0x00406fd3:\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 2596
    },
    "00404356": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404356(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    uint32_t uVar9;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    code *var_38h;\n    int32_t var_34h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = *0x429058;\n    var_8h = *(*0x429058 + 0x38);\n    iVar6 = *(*0x429058 + 0x3c) * 0x400 + 0x42f000;\n    if (arg_ch == 0x40b) {\n        fcn.0040550d(0x3fb, iVar6);\n        fcn.00405f9e(iVar6);\n    }\n    if (arg_ch == 0x110) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar2 = fcn.00405812(iVar6);\n        if ((iVar2 != 0) && (iVar2 = fcn.0040583e(iVar6),  iVar2 == 0)) {\n            fcn.004057a5(iVar6);\n        }\n        *0x42dbd8 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextA)(uVar1, iVar6);\n        var_48h = *(arg_14h + 0x34);\n        var_4ch = 0x1;\n        fcn.00403f18(arg_8h);\n        fcn.00403f18(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.00403f4d(uVar1);\n        pcVar3 = fcn.004060c8(6);\n        if (pcVar3 == NULL) goto code_r0x00404692;\n        (*pcVar3)(uVar1, 1);\n    }\n    iVar2 = var_8h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x00404692;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar7 = &fcn.00404356::var_48h;\n            for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_4ch = arg_8h;\n            var_44h = 0x429880;\n            var_38h = fcn.004046a7;\n            var_34h = iVar6;\n            var_40h = fcn.00405d55(0x428c58, iVar2);\n            var_3ch = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&fcn.00404356::var_4ch);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                fcn.004057a5(iVar6);\n                if ((*(*0x42e410 + 0x11c) != 0) && (iVar6 == 0x434400)) {\n                    uVar1 = 0;\n                    fcn.00405d55(0, *(*0x42e410 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x42d3a0, 0x429880);\n                    if (iVar2 != 0) {\n                        sub.KERNEL32.dll_lstrcatA(uVar1, 0x42d3a0, 0x434400);\n                    }\n                }\n                *0x429870 = *0x429870 + 1;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x3fb, iVar6);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.0040550d(0x3fb, iVar6);\n        iVar2 = fcn.00405893(iVar6);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00405d33(0x428850, iVar6);\n        var_48h = 1;\n        var_ch = fcn.004060c8();\n        if (var_ch != NULL) {\n            puVar8 = NULL;\n            do {\n                var_4ch = &fcn.00404356::var_24h;\n                iVar2 = (*var_ch)(0x428850, &fcn.00404356::var_2ch, &fcn.00404356::var_18h);\n                if (iVar2 != 0) {\n                    var_2ch = var_2ch >> 10 | var_28h << 0x16;\n                    var_28h = var_28h >> 10;\n                    var_8h = 1;\n                    goto code_r0x004045eb;\n                }\n                if (puVar8 != NULL) {\n                    *puVar8 = 0;\n                }\n                var_48h = 0x428850;\n                var_4ch = 0x404565;\n                puVar8 = fcn.004057ec();\n                *puVar8 = 0;\n                puVar8 = puVar8 + -1;\n                *puVar8 = 0x5c;\n            } while (puVar8 != 0x428850);\n        }\n        var_4ch = iVar6;\n        fcn.00405d33(0x428850);\n        puVar8 = fcn.0040583e(0x428850);\n        if (puVar8 != NULL) {\n            *puVar8 = 0;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (0x428850, &fcn.00404356::var_10h, &fcn.00404356::var_14h, &fcn.00404356::var_ch, \n                           &fcn.00404356::var_20h);\n        if (iVar6 != 0) {\n            var_48h = 0x400;\n            var_4ch = var_ch;\n            var_2ch = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_14h);\n            var_28h = var_2ch >> 0x1f;\n            var_8h = 1;\n        }\ncode_r0x004045eb:\n        uVar9 = 5;\n        var_4ch = 0x4045f2;\n        uVar4 = fcn.004047ea();\n        if (((var_8h != 0) && (var_28h == 0)) && (var_2ch < uVar4)) {\n            var_4h = 2;\n        }\n        if (*(*0x42dbdc + 0x10) != 0) {\n            var_4ch = uVar4;\n            fcn.004047d2(0x3ff, 0xfffffffb);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x400, 0x428840);\n                uVar9 = arg_8h;\n            }\n            else {\n                uVar9 = 0x400;\n                fcn.0040470d(0x400, 0x400, var_2ch, var_28h);\n            }\n        }\n        *0x42e4a4 = var_4h;\n        if (var_4h == 0) {\n            uVar9 = 7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_1ch + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.00403f3a(var_4h == 0, uVar9);\n        if ((var_4h == 0) && (*0x429870 == 0)) {\n            fcn.004042eb();\n        }\n        *0x429870 = 0;\n    }\ncode_r0x00404692:\n    fcn.00403f7f(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2145
    },
    "00405caa": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405caa(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_4h = 1;\n    cVar2 = '\\n';\n    cVar6 = '9';\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_4h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if (('/' < uVar1) && (uVar1 < '8')) {\n            cVar2 = '\\b';\n            cVar6 = '7';\n        }\n        if ((uVar1 & 0xdf) == 0x58) {\n            cVar2 = '\\x10';\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (cVar6 < uVar4)) {\n            if ((cVar2 != '\\x10') || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_4h * iVar7;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        iVar7 = cVar2 * iVar7 + iVar5;\n    } while( true );\n}\n",
        "token_count": 446
    },
    "00402a7a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402a7a(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10ch;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpSubKey, 0, *0x42e4b0 | 8, &phkResult);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(phkResult, 0, &var_10ch, 0x105);\n            if (iVar1 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                goto code_r0x00402b0b;\n            }\n            iVar1 = fcn.00402a7a(phkResult, &var_10ch, 0);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        pcVar2 = fcn.004060c8(3);\n        if (pcVar2 == NULL) {\n            if ((*0x42e4b0 != 0) || (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(hKey, lpSubKey),  iVar1 != 0)) {\ncode_r0x00402b0b:\n                iVar1 = 1;\n            }\n        }\n        else {\n            iVar1 = (*pcVar2)(hKey, lpSubKey, *0x42e4b0, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 407
    },
    "00402b7f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b7f(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_40h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        iVar2 = *0x414430;\n        if (*0x42043c <= *0x414430) {\n            iVar2 = *0x42043c;\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, *0x42043c);\n        (*_sym.imp.USER32.dll_wsprintfA)(&var_40h, \"verifying installer: %d%%\", uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_40h);\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x406, &var_40h);\n    }\n    return 0;\n}\n",
        "token_count": 263
    },
    "0040605e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040605e(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpLibFileName;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpLibFileName, 0x104);\n    if (0x104 < uVar1) {\n        uVar1 = 0;\n    }\n    if ((uVar1 == 0) || ((&stack0xfffffedb)[uVar1] == '\\\\')) {\n        iVar2 = 1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    (*_sym.imp.USER32.dll_wsprintfA)(&lpLibFileName + uVar1, \"%s%s.dll\", iVar2 + 0x409014, arg_8h);\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    return;\n}\n",
        "token_count": 200
    },
    "00406c3a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00406c3a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *(param_1 + 0x9bb4);\n    while( true ) {\n        uVar2 = *(param_1 + 0x9bb8);\n        if (uVar2 < uVar4) {\n            uVar2 = *(param_1 + 0x9bb0);\n        }\n        uVar1 = *(param_1 + 0xc);\n        uVar3 = uVar2 - uVar4;\n        if (uVar1 <= uVar2 - uVar4) {\n            uVar3 = uVar1;\n        }\n        *(param_1 + 0xc) = uVar1 - uVar3;\n        fcn.00405961();\n        *(param_1 + 8) = *(param_1 + 8) + uVar3;\n        if (uVar4 + uVar3 != *(param_1 + 0x9bb0)) break;\n        uVar4 = param_1 + 0x1bb0;\n        if (*(param_1 + 0x9bb8) == *(param_1 + 0x9bb0)) {\n            *(param_1 + 0x9bb8) = uVar4;\n        }\n    }\n    *(param_1 + 0x9bb4) = uVar4 + uVar3;\n    return;\n}\n",
        "token_count": 343
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x42e42c != 0)) {\n        puVar2 = *0x42e428 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x106;\n        } while (uVar3 < *0x42e42c);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00402a3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402a3a(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.00405d55((uVar1 >> 4) * 0x400 + 0x409428, *(*0x40a828 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.00405f9e(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "00402b2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402b2f(int32_t param_1)\n\n{\n    if (param_1 == 0) {\n        param_1 = *0x42e484 + -0x7fffffff;\n    }\n    return param_1;\n}\n",
        "token_count": 58
    },
    "00403978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403978(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    uVar4 = 0xffff;\n    uVar1 = fcn.00405caa(0x435000);\n    do {\n        if (*0x42e444 != 0) {\n            puVar3 = *(*0x42e410 + 100) * *0x42e444 + *0x42e440;\n            iVar5 = *0x42e444;\n            do {\n                puVar3 = puVar3 - *(*0x42e410 + 100);\n                iVar5 = iVar5 + -1;\n                if (((*puVar3 ^ uVar1) & uVar4) == 0) {\n                    *0x42dbe0 = *(puVar3 + 1);\n                    *0x42e4a8 = *(puVar3 + 3);\n                    *0x42dbdc = puVar3 + 5;\n                    if (*0x42dbdc != NULL) {\n                        fcn.00405c91(0x435000, *puVar3);\n                        uVar2 = fcn.00405d55(0x42dc00, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextA)(*0x429860, uVar2);\n                        piVar6 = *0x42e428;\n                        for (iVar5 = *0x42e42c; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            if (*piVar6 != 0) {\n                                fcn.00405d55(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x106;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar5 != 0);\n        }\n        if (uVar4 == 0xffff) {\n            uVar4 = 0x3ff;\n        }\n        else {\n            uVar4 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 479
    },
    "00403f18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403f18(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00405d55(0, param_3);\n    sub.USER32.dll_SetDlgItemTextA(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "0040402c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040402c(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x42884c + arg_8h, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    *arg_14h = iVar1;\n    *0x42884c = *0x42884c + iVar1;\n    return 0;\n}\n",
        "token_count": 135
    },
    "0040430f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040430f(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.00403f18(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 1000, *(arg_14h + 0x3c) * 0x400 + 0x42f000);\n    }\n    fcn.00403f7f(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 151
    },
    "0040470d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040470d(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int8_t iVar5;\n    uint arg_ch_00;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint *arg_8h;\n    uint var_40h;\n    uint var_20h;\n    \n    arg_ch_00 = 0xffffffdc;\n    if (arg_14h == 0) {\n        iVar5 = 0x14;\n        if (arg_10h < 0x100000) {\n            iVar5 = 10;\n            arg_ch_00 = 0xffffffdd;\n        }\n        if (arg_10h < 0x400) {\n            iVar5 = 0;\n            arg_ch_00 = 0xffffffde;\n        }\n        if (arg_10h < 0xffff3333) {\n            arg_10h = (1 << iVar5) / 0x14 + arg_10h;\n        }\n        uVar6 = arg_10h >> iVar5;\n        uVar7 = ((arg_10h & 0xffffff) * 10 >> iVar5) % 10;\n    }\n    else {\n        uVar6 = arg_10h >> 0x14 | arg_14h << 0xc;\n        uVar7 = 0;\n    }\n    uVar1 = fcn.00405d55(&var_20h, 0xffffffdf);\n    arg_8h = &var_40h;\n    uVar2 = fcn.00405d55(arg_8h, arg_ch_00);\n    pcVar9 = \"%u.%u%s%s\";\n    uVar8 = 0x429880;\n    iVar3 = fcn.00405d55(0x429880, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenA(0x429880, uVar8, arg_ch, pcVar9, uVar6, uVar7, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar3 + iVar4);\n    sub.USER32.dll_SetDlgItemTextA(*0x42dbd8, nIDDlgItem, 0x429880);\n    return;\n}\n",
        "token_count": 554
    },
    "004057a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004057a5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, iVar1 + param_1);\n    if (*pcVar2 != '\\\\') {\n        sub.KERNEL32.dll_lstrcatA(param_1, 0x409014);\n    }\n    return param_1;\n}\n",
        "token_count": 116
    },
    "004057ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.004057ec(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = param_1 + iVar1;\n    do {\n        if (*pcVar2 == '\\\\') break;\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar2);\n    } while (param_1 < pcVar2);\n    *pcVar2 = '\\0';\n    return pcVar2 + 1;\n}\n",
        "token_count": 128
    },
    "004059d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004059d5(uchar *arg_8h, uint lpPathName)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = arg_8h;\n    iVar4 = 100;\n    do {\n        iVar4 = iVar4 + -1;\n        arg_8h = *0x4093c4;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        arg_8h._0_3_ = CONCAT12(arg_8h._2_1_ + uVar2 % 0x1a, arg_8h._0_2_);\n        arg_8h = arg_8h & 0xff000000 | arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &arg_8h, 0, puVar1);\n        if (iVar3 != 0) {\n            return puVar1;\n        }\n    } while (iVar4 != 0);\n    *puVar1 = 0;\n    return NULL;\n}\n",
        "token_count": 256
    },
    "00405c91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405c91(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_1, 0x407354, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "004059a6": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004059a6(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "004054c4": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004054c4(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x42b088 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                      (0, lpCommandLine, 0, 0, 0, 0x4000000, 0, 0, 0x42b088, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 149
    },
    "00402b44": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402b44(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00402a3a(0x22, 0, *0x42e4b0 | arg_8h, &arg_8h);\n    uVar1 = fcn.00402b2f(*(*0x40a828 + 4), uVar1);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 145
    },
    "00403603": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403603(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x428844; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0040361e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040361e(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x428844;\n    fcn.00403603(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x428844 = NULL;\n    return;\n}\n",
        "token_count": 143
    },
    "00403653": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403653(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x428844;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "004057d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004057d0(char *param_1, char param_2)\n\n{\n    for (; (*param_1 != '\\0' && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0040590b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040590b(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00405961": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405961(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00406104": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406104(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004060c8": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.004060c8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = *(param_1 * 8 + 0x409258);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    if ((iVar1 == 0) && (iVar1 = fcn.0040605e(uVar2),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, *(param_1 * 8 + 0x40925c));\n    return uVar2;\n}\n",
        "token_count": 152
    },
    "00405bee": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid fcn.00405bee(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 5;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileExA)(param_1, param_2, 5);\n    if (iVar1 == 0) {\n        fcn.00405a7c(param_2, uVar2);\n    }\n    *0x42e490 = *0x42e490 + 1;\n    return;\n}\n",
        "token_count": 120
    },
    "00405412": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405412(uint lpFileName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar pSecurityDescriptor;\n    uint var_1fh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpSecurityAttributes;\n    uchar *var_8h;\n    uint var_4h;\n    \n    var_1fh._0_1_ = 0;\n    stack0xffffffe0 = 0x40732c;\n    var_18h = 0x40732c;\n    var_8h = &pSecurityDescriptor;\n    var_14h = 0;\n    var_4h = 0;\n    pSecurityDescriptor = 1;\n    var_1fh._1_2_ = 4;\n    var_10h = 0x40731c;\n    lpSecurityAttributes = 0xc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(lpFileName, &lpSecurityAttributes);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 != 0xb7) {\n            return iVar2;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityA)(lpFileName, 0x80000007, &pSecurityDescriptor);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 361
    },
    "0040548f": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nuint fcn.0040548f(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_1, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 100
    },
    "00405a1e": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a1e(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 144
    },
    "00405a4d": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a4d(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 144
    }
}