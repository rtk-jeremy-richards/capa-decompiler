{
    "0100168b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0100168b(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint pIdentifierAuthority;\n    uchar var_14h;\n    uchar var_13h;\n    uint pSid2;\n    uint hObject;\n    uint uBytes;\n    int32_t var_4h;\n    \n    uVar5 = 0;\n    pIdentifierAuthority._0_1_ = 0;\n    pIdentifierAuthority._1_1_ = 0;\n    pIdentifierAuthority._2_1_ = 0;\n    pIdentifierAuthority._3_1_ = 0;\n    var_14h = 0;\n    var_13h = 5;\n    var_4h = 0;\n    iVar2 = *0x100a1f4;\n    if (*0x100a1f4 == 2) {\n        iVar2 = fcn.010015f6(&var_4h);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &hObject);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n            pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n            if (iVar2 != 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(hObject, 2, 0, 0, &uBytes);\n                if (((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == 0x7a)) &&\n                   (puVar4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uBytes),  puVar4 != NULL)) {\n                    iVar2 = (*pcVar1)(hObject, 2, puVar4, uBytes, &uBytes);\n                    if ((iVar2 != 0) &&\n                       (iVar2 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                                          (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid2),  iVar2 != 0\n                       )) {\n                        if (*puVar4 != 0) {\n                            puVar6 = puVar4 + 1;\n                            do {\n                                iVar2 = (*_sym.imp.ADVAPI32.dll_EqualSid)(*puVar6, pSid2);\n                                if (iVar2 != 0) {\n                                    *0x100a1f4 = 1;\n                                    var_4h = 1;\n                                    break;\n                                }\n                                uVar5 = uVar5 + 1;\n                                puVar6 = puVar6 + 2;\n                            } while (uVar5 < *puVar4);\n                        }\n                        (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid2);\n                    }\n                    (*_sym.imp.KERNEL32.dll_LocalFree)(puVar4);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n                iVar2 = var_4h;\n            }\n        }\n        else {\n            iVar2 = var_4h;\n            if (var_4h != 0) {\n                *0x100a1f4 = 1;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 777
    },
    "01001840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.01001840(char **arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    pcVar2 = *arg_8h;\n    iVar3 = 0;\n    while( true ) {\n        iVar1 = fcn.01005b00();\n        if (iVar1 == 0) {\n            *arg_8h = pcVar2;\n            for (; (iVar1 = fcn.01005b00(),  iVar1 == 0 && (pcVar2[iVar3] != '\\0')); iVar3 = iVar3 + 1) {\n            }\n            pcVar2 = pcVar2 + iVar3;\n            if (*pcVar2 != '\\0') {\n                *pcVar2 = '\\0';\n                pcVar2 = pcVar2 + 1;\n            }\n            return pcVar2;\n        }\n        if (*pcVar2 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 232
    },
    "01001946": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.01001946(void)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    if (*0x100a2e0 != '\\0') {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0x20006, &hKey);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(hKey, 0x100a2e0);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "01001c7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01001c7f(char *hFindFile)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpFindFileData;\n    uint lpString1;\n    uint lpFileName;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcpyA;\n    if ((hFindFile != NULL) && (*hFindFile != '\\0')) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpFileName, hFindFile);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(&lpFileName, 0x100128c);\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(&lpFileName, &lpFindFileData);\n        if (iVar3 != -1) {\n            do {\n                (*pcVar2)(&lpFileName, hFindFile);\n                if ((lpFindFileData & 0x10) == 0) {\n                    (*pcVar1)(&lpFileName, &lpString1);\n                    (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(&lpFileName, 0x80);\n                    (*_sym.imp.KERNEL32.dll_DeleteFileA)(&lpFileName);\n                }\n                else {\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, 0x1001288);\n                    if ((iVar4 != 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, 0x1001284),  iVar4 != 0))\n                    {\n                        (*pcVar1)(&lpFileName, &lpString1);\n                        fcn.01005b32(&lpFileName, 0x1001251);\n                        fcn.01001c7f(&lpFileName);\n                    }\n                }\n                iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar3, &lpFindFileData);\n            } while (iVar4 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(hFindFile);\n        }\n    }\n    return;\n}\n",
        "token_count": 508
    },
    "01001da9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.01001da9(char *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (((param_1 != NULL) && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1),  2 < iVar1)) &&\n       (((param_1[1] == ':' && (param_1[2] == '\\\\')) || ((*param_1 == '\\\\' && (param_1[1] == '\\\\')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "01001ef8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.01001ef8(uint16_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (param_1 == 0) {\n        uVar1 = fcn.01001ddf();\n    }\n    else if (param_1 == 1) {\n        uVar1 = fcn.01001ea3(\"System\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\FileRenameOperations\");\n    }\n    else if ((1 < param_1) && (param_1 < 4)) {\n        uVar1 = fcn.01001e52(\"System\\\\CurrentControlSet\\\\Control\\\\Session Manager\", \"PendingFileRenameOperations\");\n    }\n    return uVar1;\n}\n",
        "token_count": 158
    },
    "01001fce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.01001fce(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_ch;\n    \n    bVar3 = false;\n    *0x100aa5c = 0x70;\n    if (arg_8h == 1) {\n        uVar5 = 0;\n        puVar4 = &var_ch;\n        arg_ch = arg_ch + arg_10h;\n        uVar1 = fcn.01001fb1();\n        fcn.010038cc(0, 0x4fa, uVar1, arg_ch, puVar4, uVar5);\n    }\n    else if (arg_8h == 4) {\n        uVar5 = 0;\n        puVar4 = &var_ch;\n        arg_ch = arg_ch + arg_10h;\n        uVar1 = fcn.01001fb1();\n        iVar2 = fcn.010038cc(0, 0x4bd, uVar1, arg_ch, puVar4, uVar5);\n        bVar3 = iVar2 == 4;\n    }\n    else if (arg_8h == 2) {\n        puVar4 = &var_ch;\n        uVar1 = fcn.01001fb1();\n        iVar2 = fcn.010038cc(0, 0x4cc, uVar1, arg_10h, puVar4, arg_14h);\n        if (iVar2 == 6) {\n            bVar3 = true;\n            *0x100aa5c = 0;\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 399
    },
    "01002081": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01002081(uchar *lpBuffer, int32_t uSize, char *hKey)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint lpSubKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    *lpBuffer = 0;\n    pcVar5 = hKey;\n    if (*hKey == '#') {\n        pcVar5 = hKey + 1;\n        cVar2 = (*_sym.imp.USER32.dll_CharUpperA)(*pcVar5);\n        pcVar1 = _sym.imp.USER32.dll_CharNextA;\n        uVar3 = (*_sym.imp.USER32.dll_CharNextA)(pcVar5);\n        pcVar5 = (*pcVar1)(uVar3);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA;\n        if (cVar2 == 'S') goto code_r0x01002198;\n        if (cVar2 == 'W') {\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(lpBuffer, uSize);\n            goto code_r0x010021a4;\n        }\n        var_8h = 0x104;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpSubKey, 0x10012a0);\n        fcn.01005b32(&lpSubKey, pcVar5);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000002, &lpSubKey, 0, 0x20019, &hKey);\n        if (iVar4 != 0) goto code_r0x010021a4;\n        iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x1001251, 0, &uSize, lpBuffer, &var_8h);\n        if (iVar4 == 0) {\n            if ((uSize == 2) &&\n               (iVar4 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(lpBuffer, &lpSubKey, 0x104),  iVar4 != 0)) {\n                (*pcVar1)(lpBuffer, &lpSubKey);\n            }\n            else if (uSize != 1) goto code_r0x01002173;\n            var_4h = 1;\n        }\ncode_r0x01002173:\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    else {\ncode_r0x01002198:\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(lpBuffer, uSize);\n    }\n    if (var_4h != 0) {\n        return 1;\n    }\ncode_r0x010021a4:\n    fcn.01005b32(lpBuffer, pcVar5);\n    return 1;\n}\n",
        "token_count": 653
    },
    "010021fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.010021fb(uint8_t *param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint32_t uStack292;\n    uchar *puStack276;\n    uint uStack272;\n    uchar auStack260 [260];\n    \n    *param_2 = 0;\n    if ((param_1 != NULL) && (*param_1 != 0)) {\n        uStack272 = 0x104;\n        puStack276 = auStack260;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n        pcVar3 = _sym.imp.USER32.dll_CharNextA;\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n        uVar1 = *param_1;\n        uStack292 = uVar1;\n        while (uVar1 != 0) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)();\n            *param_2 = *param_1;\n            if (iVar5 != 0) {\n                param_2[1] = param_1[1];\n            }\n            if (*param_1 == 0x23) {\n                param_1 = (*pcVar3)(param_1);\n                cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(*param_1);\n                if (cVar4 == 'D') {\n                    fcn.01005b71(&stack0xfffffee4);\n                    iVar5 = (*pcVar2)(&stack0xfffffee0);\n                    pcVar6 = (*_sym.imp.USER32.dll_CharPrevA)(&uStack292, &uStack292 + iVar5);\n                    if ((pcVar6 != NULL) && (*pcVar6 == '\\\\')) {\n                        *pcVar6 = '\\0';\n                    }\n                }\n                else {\n                    cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(*param_1);\n                    if (cVar4 != 'E') {\n                        if (*param_1 == 0x23) goto code_r0x010022db;\n                        goto code_r0x010022e0;\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(param_2, &puStack276);\n                iVar5 = (*pcVar2)(&stack0xfffffee4);\n                param_2 = param_2 + iVar5;\n            }\n            else {\ncode_r0x010022db:\n                param_2 = (*pcVar3)(param_2);\n            }\ncode_r0x010022e0:\n            param_1 = (*pcVar3)(param_1);\n            uVar1 = *param_1;\n            uStack292 = param_1 & 0xffffff00 | uVar1;\n        }\n        *param_2 = 0;\n    }\n    return;\n}\n",
        "token_count": 640
    },
    "010022ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.010022ff(char *arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    char *pcVar7;\n    uint *puVar8;\n    uint uVar9;\n    uint var_610h;\n    uint var_210h;\n    uint lpszShortPath;\n    char *var_8h;\n    uint *lpReturnedString;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_lstrcpyA;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&var_210h, arg_8h);\n    if (var_210h == '\\\"') {\n        lpReturnedString = &var_210h + 1;\n        uVar9 = 0x1001328;\n    }\n    else {\n        lpReturnedString = &var_210h;\n        uVar9 = 0x1001324;\n    }\n    var_8h = fcn.01001840(&lpReturnedString, uVar9);\n    puVar8 = lpReturnedString;\n    iVar2 = fcn.01001da9(lpReturnedString);\n    if (iVar2 == 0) {\n        (*pcVar6)(&lpszShortPath, 0x100ac44);\n        fcn.01005b32(&lpszShortPath, puVar8);\n    }\n    else {\n        (*pcVar6)(&lpszShortPath, puVar8);\n    }\n    iVar2 = fcn.01005be8(puVar8, 0x2e);\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n    if ((iVar2 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(iVar2, 0x100131c),  iVar2 != 0)) {\n        iVar2 = fcn.01005be8(puVar8, 0x2e);\n        if ((iVar2 == 0) || (iVar2 = (*pcVar1)(iVar2, 0x10012d4),  pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA,  iVar2 != 0)\n           ) {\n            lpReturnedString = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x400);\n            if (lpReturnedString == NULL) {\n                iVar2 = 0;\n                puVar8 = NULL;\n                uVar9 = 0x4b5;\n                goto code_r0x01002594;\n            }\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&lpszShortPath);\n            if ((uVar5 == 0xffffffff) || ((uVar5 & 0x10) != 0)) {\ncode_r0x010025e9:\n                (*pcVar6)(&var_610h, arg_8h);\n            }\n            else {\n                (*pcVar6)(&var_610h, &lpszShortPath);\n                arg_8h = var_8h;\n                pcVar6 = _sym.imp.KERNEL32.dll_lstrcatA;\n                if ((var_8h != NULL) && (*var_8h != '\\0')) {\n                    (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_610h, 0x1001324);\n                    goto code_r0x010025e9;\n                }\n            }\n            fcn.010021fb(&var_610h, lpReturnedString);\ncode_r0x01002601:\n            *arg_ch = lpReturnedString;\n            return 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(\"Command.com /c %s\");\n        iVar4 = (*pcVar1)(&lpszShortPath);\n        lpReturnedString = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar2 + 8 + iVar4);\n        if (lpReturnedString != NULL) {\n            (*_sym.imp.USER32.dll_wsprintfA)(lpReturnedString, \"Command.com /c %s\", &lpszShortPath);\n            goto code_r0x01002601;\n        }\n    }\n    else {\n        iVar2 = fcn.01005bca(&lpszShortPath);\n        if (iVar2 == 0) {\n            puVar8 = &lpszShortPath;\n            uVar9 = 0x525;\n            goto code_r0x01002594;\n        }\n        lpReturnedString = var_8h;\n        pcVar3 = fcn.01001840(&lpReturnedString, 0x1001318);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n        (*_sym.imp.KERNEL32.dll_lstrlenA)(0x100a0a4);\n        pcVar7 = lpReturnedString;\n        if (pcVar3 != NULL) {\n            if (*pcVar3 != '\\0') {\n                lpReturnedString = pcVar3;\n            }\n            fcn.01001840(&lpReturnedString, 0x1001314);\n            pcVar7 = lpReturnedString;\n            if (*lpReturnedString != '\\0') {\n                (*pcVar1)(lpReturnedString);\n            }\n        }\n        lpReturnedString = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x200);\n        if (lpReturnedString != NULL) {\n            pcVar3 = pcVar7;\n            if (*pcVar7 == '\\0') {\n                pcVar3 = 0x100a0a4;\n            }\n            *0x100aa60 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(pcVar3, 0x100130c, 0, &lpszShortPath);\n            *arg_10h = 1;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                              (0x10012f8, 0x1001300, 0x1001251, lpReturnedString, 8, &lpszShortPath);\n            if (iVar2 == 0) {\n                *0x100b494 = *0x100b494 & 0xfffffffb;\n                if (*0x100aa64 == 0) {\n                    uVar9 = 0x10012ec;\n                    (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(&lpszShortPath, &lpszShortPath, 0x104);\n                }\n                else {\n                    uVar9 = 0x10012dc;\n                }\n                if (*pcVar7 == '\\0') {\n                    pcVar7 = 0x100a0a4;\n                }\n                (*_sym.imp.USER32.dll_wsprintfA)(lpReturnedString, 0x100a014, uVar9, pcVar7, &lpszShortPath);\n            }\n            else {\n                *0x100b494 = *0x100b494 | 4;\n                if (*pcVar7 == '\\0') {\n                    pcVar7 = 0x100a0a4;\n                }\n                (*pcVar6)(arg_8h, pcVar7);\n                (*pcVar6)(lpReturnedString, &lpszShortPath);\n            }\n            goto code_r0x01002601;\n        }\n    }\n    iVar2 = 0;\n    puVar8 = NULL;\n    uVar9 = 0x4b5;\ncode_r0x01002594:\n    fcn.010038cc(iVar2, uVar9, puVar8, iVar2, 0x10, iVar2);\n    return 0;\n}\n",
        "token_count": 1693
    },
    "01002613": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.01002613(void)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x100aa60 == 0) && (iVar1 = fcn.01001f34(*0x100ab84, *0x100aa64),  iVar1 == 0)) {\n        return 0xffffffff;\n    }\n    return 2;\n}\n",
        "token_count": 79
    },
    "0100263f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0100263f(uint8_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (((param_1 & 2) == 0) && (iVar1 = fcn.01002613(),  iVar1 != 2)) {\n        return;\n    }\n    if (((param_1 & 4) == 0) && (iVar1 = fcn.010038cc(0, 0x522, 0x1001251, 0, 0x40, 4),  iVar1 != 6)) {\n        return;\n    }\n    if (*0x100aa64 == 0) {\n        (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n    }\n    else {\n        fcn.010018b5();\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "01002691": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01002691(int32_t arg_8h, uint lptstrFilename, uint arg_10h, int32_t *arg_14h)\n\n{\n    uint arg_8h_00;\n    uint arg_14h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t *piVar3;\n    ulong uVar4;\n    uint uVar5;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t lplpBuffer;\n    int32_t puLen;\n    uint lpdwHandle;\n    int32_t dwLen;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hMem;\n    \n    hMem = 0;\n    var_10h = 0;\n    var_8h = 0;\n    if (0 < *(arg_8h + 0x7c)) {\n        var_ch = 0;\n        do {\n            piVar3 = var_ch + arg_8h + 0x84 + *(arg_8h + 0x80);\n            iVar1 = fcn.01002081(lptstrFilename, arg_10h, piVar3[0xe] + 0x84 + arg_8h);\n            if (iVar1 == 0) goto code_r0x010027d7;\n            uVar5 = lptstrFilename;\n            dwLen = sub.VERSION.dll_GetFileVersionInfoSizeA();\n            if (dwLen == 0) {\n                if ((*piVar3 != 0) || (piVar3[1] != 0)) goto code_r0x010027d7;\n            }\n            else {\n                hMem = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, dwLen);\n                if ((hMem == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(hMem, uVar5),  iVar1 == 0))\n                goto code_r0x010027d7;\n                iVar2 = sub.VERSION.dll_GetFileVersionInfoA(lptstrFilename, lpdwHandle, dwLen, iVar1);\n                if (((iVar2 != 0) &&\n                    (iVar1 = sub.VERSION.dll_VerQueryValueA(iVar1, 0x100132c, &lplpBuffer, &puLen),  iVar1 != 0)) &&\n                   (puLen != 0)) {\n                    uVar5 = *(lplpBuffer + 0xc);\n                    arg_8h_00 = *(lplpBuffer + 8);\n                    piVar3 = piVar3 + 4;\n                    do {\n                        uVar4 = fcn.010021d4(arg_8h_00, uVar5, piVar3[-4], piVar3[-3]);\n                        arg_14h_00 = *extraout_ECX;\n                        *(&var_28h + (uVar4 >> 0x20)) = uVar4;\n                        uVar4 = fcn.010021d4(arg_8h_00, uVar5, extraout_ECX[-1], arg_14h_00);\n                        iVar1 = uVar4 >> 0x20;\n                        *(&var_30h + iVar1) = uVar4;\n                        piVar3 = extraout_ECX_00 + 0x18;\n                    } while (iVar1 + 4 < 8);\n                    if (((var_28h < 0) || (0 < var_30h)) && ((var_24h < 0 || (0 < var_2ch)))) {\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(hMem);\n                        goto code_r0x010027d7;\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(hMem);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + 0x3c;\n        } while (var_8h < *(arg_8h + 0x7c));\n    }\n    var_10h = 1;\ncode_r0x010027d7:\n    *arg_14h = var_8h;\n    if (hMem != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n    }\n    return var_10h;\n}\n",
        "token_count": 994
    },
    "01002827": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01002827(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (((arg_ch == 0xb1) && (arg_10h == 0)) && (arg_14h == -2)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_CallWindowProcA)(*0x100b4a0, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "0100285f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0100285f(char *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (((param_1 != NULL) && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1),  2 < iVar1)) &&\n       ((param_1[1] == ':' || ((*param_1 == '\\\\' && (param_1[1] == '\\\\')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "010028fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.010028fa(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x100b495 & 8) == 0) {\n        iVar1 = fcn.01002613();\n        if ((iVar1 == 2) || (((param_1 & 0xff000000) == 0xaa000000 && ((param_1 & 1) != 0)))) {\n            *0x100aa5c = 0xbc2;\n            return;\n        }\n        if ((*0x100b495 & 2) == 0) {\n            return;\n        }\n    }\n    *0x100aa5c = param_1;\n    return;\n}\n",
        "token_count": 153
    },
    "01002b34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.01002b34(char *param_1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    \n    if (*param_1 != '\\0') {\n        pcVar1 = param_1 + 1;\n        iVar2 = 0;\n        if ((*pcVar1 == ':') && (param_1[2] == '\\\\')) {\n            pcVar1 = param_1 + 3;\n        }\n        else if ((*param_1 == '\\\\') && (*pcVar1 == '\\\\')) {\n            pcVar1 = param_1 + 2;\n            iVar2 = 2;\n        }\n        for (; *pcVar1 != '\\0'; pcVar1 = (*_sym.imp.USER32.dll_CharNextA)(pcVar1)) {\n            if ((*pcVar1 == '\\\\') && (pcVar1[-1] != ':')) {\n                if (iVar2 == 0) {\n                    *pcVar1 = '\\0';\n                    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_1, 0);\n                    *pcVar1 = '\\\\';\n                }\n                else {\n                    iVar2 = iVar2 + -1;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "01002c23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01002c23(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    fcn.0100288f(*0x100aa50);\n    if (*0x100ac38 != 0) {\n        return -1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(arg_8h * 0x18 + 0x100b4d4), arg_ch, arg_10h, &arg_10h, 0);\n    iVar2 = arg_10h;\n    if (iVar1 == 0) {\n        iVar2 = -1;\n    }\n    else if (((arg_10h != -1) && (*0x100ae60 = *0x100ae60 + arg_10h,  *0x100a2bc != 0)) && (*0x100aa4c != 0)) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*0x100aa4c, 0x83a, 0x402, (*0x100ae60 * 100) / *0x100ae58, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 281
    },
    "01002d05": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01002d05(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h * 0x18;\n    if (*(iVar1 + 0x100b4c4) != 1) {\n        if (arg_10h == 0) {\n            arg_8h = 0;\n        }\n        else if (arg_10h == 1) {\n            arg_8h = 1;\n        }\n        else if (arg_10h == 2) {\n            arg_8h = 2;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*(iVar1 + 0x100b4d4), arg_ch, 0, arg_8h);\n        if (iVar1 == -1) {\n            return -1;\n        }\n        return iVar1;\n    }\n    if (arg_10h != 0) {\n        if (arg_10h == 1) {\n            *(iVar1 + 0x100b4cc) = *(iVar1 + 0x100b4cc) + arg_ch;\n            goto code_r0x01002d47;\n        }\n        if (arg_10h != 2) {\n            return -1;\n        }\n        arg_ch = *(iVar1 + 0x100b4d0) + arg_ch;\n    }\n    *(iVar1 + 0x100b4cc) = arg_ch;\ncode_r0x01002d47:\n    return *(iVar1 + 0x100b4cc);\n}\n",
        "token_count": 363
    },
    "01002d87": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.01002d87(int32_t arg_8h, uint wFatDate, uint wFatTime)\n\n{\n    int32_t iVar1;\n    uint lpLocalFileTime;\n    uint lpLastAccessTime;\n    \n    if (((*(arg_8h * 0x18 + 0x100b4c4) != 1) &&\n        (iVar1 = (*_sym.imp.KERNEL32.dll_DosDateTimeToFileTime)(wFatDate, wFatTime, &lpLocalFileTime),  iVar1 != 0)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&lpLocalFileTime, &lpLastAccessTime),  iVar1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFileTime)\n                          (*(arg_8h * 0x18 + 0x100b4d4), &lpLastAccessTime, &lpLastAccessTime, &lpLastAccessTime);\n        return iVar1 != 0;\n    }\n    return false;\n}\n",
        "token_count": 230
    },
    "01002eaf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.01002eaf(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uchar auStack260 [4];\n    uchar auStack256 [256];\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_LocalFree;\n    puVar3 = *0x100ac40;\n    if (*0x100ac40 != NULL) {\n        do {\n            if ((*0x100b884 == 0) && (*0x100b490 == 0)) {\n                (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(*puVar3, 0x80);\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(*puVar3);\n            }\n            puVar1 = puVar3[1];\n            (*pcVar2)(*puVar3);\n            (*pcVar2)(puVar3);\n            puVar3 = puVar1;\n        } while (puVar1 != NULL);\n    }\n    if (((*0x100b880 != 0) && (*0x100b884 == 0)) && (*0x100b490 == 0)) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(auStack260, 0x100ac44);\n        if ((*0x100b494 & 0x20) != 0) {\n            fcn.01005b71(&stack0xfffffef4);\n        }\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x1001284);\n        fcn.01001c7f(auStack256);\n    }\n    if ((*0x100aa64 != 1) && (*0x100b880 != 0)) {\n        fcn.01001946();\n    }\n    *0x100b880 = 0;\n    return;\n}\n",
        "token_count": 391
    },
    "0100302b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0100302b(int32_t *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    cVar2 = *param_1;\n    while ((cVar2 != '\\0' &&\n           ((((cVar2 == ' ' || (cVar2 == '\\t')) || (cVar2 == '\\r')) ||\n            (((cVar2 == '\\n' || (cVar2 == '\\v')) || (cVar2 == '\\f'))))))) {\n        iVar5 = iVar5 + 1;\n        cVar2 = *(iVar5 + param_1);\n    }\n    pcVar1 = iVar5 + param_1;\n    if (*pcVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar1);\n        do {\n            iVar4 = iVar4 + -1;\n            if (iVar4 < 0) break;\n            cVar2 = pcVar1[iVar4];\n        } while (((cVar2 == ' ') || (cVar2 == '\\t')) ||\n                ((cVar2 == '\\r' || (((cVar2 == '\\n' || (cVar2 == '\\v')) || (cVar2 == '\\f'))))));\n        *(iVar4 + iVar5 + 1 + param_1) = '\\0';\n        *param_1 = iVar5;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "010030a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.010030a7(char *arg_8h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    code *pcVar4;\n    char cVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    uint uVar10;\n    uint lpString;\n    char *pcStack264;\n    int32_t var_4h;\n    \n    var_4h = 1;\n    if ((arg_8h == NULL) || (pcVar6 = arg_8h,  *arg_8h == '\\0')) {\n        var_4h = 1;\n    }\n    else {\n        do {\n            if (var_4h == 0) break;\n            for (; ((((pcVar4 = _sym.imp.USER32.dll_CharUpperA,  cVar5 = *pcVar6,  cVar5 == ' ' || (cVar5 == '\\t')) ||\n                     (cVar5 == '\\r')) || ((cVar5 == '\\n' || (cVar5 == '\\v')))) || (cVar5 == '\\f'));\n                pcVar6 = (*_sym.imp.USER32.dll_CharNextA)(pcVar6)) {\n            }\n            if (*pcVar6 == '\\0') break;\n            iVar9 = 0;\n            bVar1 = false;\n            bVar3 = false;\n            do {\n                if (bVar1) {\n                    if (bVar3) break;\n                }\n                else {\n                    cVar5 = *pcVar6;\n                    if (((cVar5 == ' ') || (cVar5 == '\\t')) ||\n                       ((cVar5 == '\\r' || (((cVar5 == '\\n' || (cVar5 == '\\v')) || (cVar5 == '\\f')))))) break;\n                }\n                bVar2 = bVar3;\n                if (*pcVar6 == '\\\"') {\n                    pcVar7 = pcVar6 + 1;\n                    if (*pcVar7 == '\\\"') {\n                        *(&lpString + iVar9) = 0x22;\n                        iVar9 = iVar9 + 1;\n                        pcVar7 = pcVar6 + 2;\n                    }\n                    else {\n                        bVar2 = true;\n                        if (!bVar1) {\n                            bVar2 = bVar3;\n                            bVar1 = true;\n                        }\n                    }\n                }\n                else {\n                    *(&lpString + iVar9) = *pcVar6;\n                    iVar9 = iVar9 + 1;\n                    pcVar7 = pcVar6 + 1;\n                }\n                pcVar6 = pcVar7;\n                bVar3 = bVar2;\n            } while (*pcVar7 != '\\0');\n            *(&lpString + iVar9) = 0;\n            if (bVar3) {\n                var_4h = 0;\n                break;\n            }\n            if ((lpString != '/') && (lpString != '-')) {\n                return 0;\n            }\n            cVar5 = (*_sym.imp.USER32.dll_CharUpperA)(lpString._1_1_);\n            if (cVar5 == '?') {\n                fcn.0100189e();\n                if (*0x100aa54 != 0) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x100aa54);\n                }\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n                goto code_r0x01003535;\n            }\n            if (cVar5 == 'C') {\n                if (lpString._2_1_ == '\\0') {\n                    *0x100b884 = 1;\n                }\n                else {\n                    if (lpString._2_1_ != ':') goto code_r0x0100322f;\n                    pcVar8 = (lpString._3_1_ == '\\\"') + 3;\n                    pcVar7 = &lpString + pcVar8;\n                    iVar9 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar7);\n                    if ((iVar9 != 0) &&\n                       ((pcStack264 = pcVar7,  iVar9 = fcn.01005b00(),  iVar9 == 0 ||\n                        (iVar9 = fcn.01005b00(),  iVar9 != 0)))) {\n                        lpString = 0x5d;\n                        iVar9 = fcn.01005b00(pcVar7);\n                        if (((iVar9 == 0) || (iVar9 = fcn.01005b00(pcVar7, 0x5b),  iVar9 != 0)) &&\n                           (arg_8h = pcVar8,  iVar9 = fcn.0100302b(pcVar7, &arg_8h),  iVar9 != 0)) {\n                            (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x100baa2, &lpString + arg_8h + pcVar8);\n                            goto code_r0x01003233;\n                        }\n                    }\ncode_r0x010034f2:\n                    var_4h = 0;\n                }\n            }\n            else if (cVar5 == 'D') {\ncode_r0x010033ce:\n                if (lpString._2_1_ != ':') goto code_r0x0100322f;\n                pcVar7 = (lpString._3_1_ == '\\\"') + 3;\n                iVar9 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString + pcVar7);\n                if ((iVar9 == 0) || (arg_8h = pcVar7,  iVar9 = fcn.0100302b(),  iVar9 == 0)) goto code_r0x010034f2;\n                cVar5 = (*_sym.imp.USER32.dll_CharUpperA)(lpString._1_1_);\n                if (cVar5 == 'T') {\n                    uVar10 = 0x100b99e;\n                }\n                else {\n                    uVar10 = 0x100b89a;\n                }\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(uVar10, &lpString + arg_8h + pcVar7);\n                fcn.01005b32(uVar10, 0x1001251);\n                iVar9 = fcn.0100285f(uVar10);\n                if (iVar9 == 0) {\n                    return 0;\n                }\n            }\n            else if (cVar5 == 'N') {\n                if (lpString._2_1_ == '\\0') {\n                    *0x100b88c = 1;\n                }\n                else {\n                    if (lpString._2_1_ != ':') goto code_r0x0100322f;\n                    if (lpString._3_1_ != '\\0') {\n                        pcVar7 = &lpString + 3;\n                        do {\n                            cVar5 = (*_sym.imp.USER32.dll_CharUpperA)(*pcVar7);\n                            pcVar7 = pcVar7 + 1;\n                            if (cVar5 == 'E') {\n                                *0x100b88c = 1;\n                            }\n                            else if (cVar5 == 'G') {\n                                *0x100b890 = 1;\n                            }\n                            else if (cVar5 == 'V') {\n                                *0x100b894 = 1;\n                            }\n                            else {\n                                var_4h = 0;\n                            }\n                        } while (*pcVar7 != '\\0');\n                    }\n                }\n            }\n            else if (cVar5 == 'Q') {\n                if (lpString._2_1_ != '\\0') {\n                    if (lpString._2_1_ != ':') goto code_r0x0100322f;\n                    cVar5 = (*pcVar4)(lpString._3_1_);\n                    if (cVar5 != '1') {\n                        if (cVar5 == 'A') {\n                            *0x100b898 = 1;\n                            goto code_r0x01003233;\n                        }\n                        if (cVar5 != 'U') goto code_r0x0100322f;\n                    }\n                }\n                *0x100b898 = 2;\n            }\n            else if (cVar5 == 'R') {\n                if (lpString._2_1_ == '\\0') {\n                    *0x100b888 = 1;\n                    *0x100b48c = 3;\n                }\n                else if (lpString._2_1_ == ':') {\n                    *0x100b48c = 1;\n                    if (lpString._3_1_ != '\\0') {\n                        pcVar7 = &lpString + 3;\n                        do {\n                            cVar5 = (*_sym.imp.USER32.dll_CharUpperA)(*pcVar7);\n                            pcVar7 = pcVar7 + 1;\n                            if (cVar5 == 'A') {\n                                *0x100b48c = *0x100b48c | 2;\n                                goto code_r0x010032df;\n                            }\n                            if (cVar5 == 'D') {\n                                *0x100bba8 = *0x100bba8 | 0x40;\n                                goto code_r0x010032e5;\n                            }\n                            if (cVar5 == 'I') {\n                                *0x100b48c = *0x100b48c & 0xfffffffd;\ncode_r0x010032df:\n                                *0x100b888 = 1;\n                            }\n                            else {\n                                if (cVar5 == 'N') {\n                                    *0x100b48c = *0x100b48c & 0xfffffffe;\n                                    goto code_r0x010032df;\n                                }\n                                if (cVar5 == 'P') {\n                                    *0x100bba8 = *0x100bba8 | 0x80;\n                                }\n                                else {\n                                    if (cVar5 == 'S') {\n                                        *0x100b48c = *0x100b48c | 4;\n                                        goto code_r0x010032df;\n                                    }\n                                    var_4h = 0;\n                                }\n                            }\ncode_r0x010032e5:\n                        } while (*pcVar7 != '\\0');\n                    }\n                }\n                else {\n                    iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x1001354, &lpString + 1);\n                    if (iVar9 != 0) goto code_r0x0100322f;\n                }\n            }\n            else {\n                if (cVar5 == 'T') goto code_r0x010033ce;\ncode_r0x0100322f:\n                var_4h = 0;\n            }\ncode_r0x01003233:\n        } while (*pcVar6 != '\\0');\n        if ((*0x100b88c != 0) && (*0x100b99e == '\\0')) {\n            iVar9 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x100b4a4, 0x100b99e, 0x104);\n            if (iVar9 == 0) {\ncode_r0x01003535:\n                var_4h = 0;\n            }\n            else {\n                iVar9 = fcn.01005be8(0x100b99e, 0x5c);\n                *(iVar9 + 1) = 0;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 2507
    },
    "01003773": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01003773(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_ch == 0xf) {\n        if (*0x100aa58 == 0) {\n            *0x100a840 = (*_sym.imp.USER32.dll_SendDlgItemMessageA)(arg_8h, 0x834, 0xb1, 0xffffffff, 0);\n            *0x100aa58 = 1;\n        }\ncode_r0x01003837:\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch == 0x10) {\ncode_r0x010037a3:\n            uVar1 = 0;\ncode_r0x010037a5:\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, uVar1);\n        }\n        else {\n            if (arg_ch == 0x110) {\n                uVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n                fcn.01002969(arg_8h, uVar1);\n                (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x834, *0x100b49c);\n                (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x100abb4);\n                (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n                uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x834, fcn.01002827);\n                fcn.01002803(uVar1);\n                return 1;\n            }\n            if (arg_ch != 0x111) goto code_r0x01003837;\n            if (arg_10h == 6) {\n                uVar1 = 1;\n                goto code_r0x010037a5;\n            }\n            if (arg_10h == 7) goto code_r0x010037a3;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 460
    },
    "010038cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.010038cc(uint hWnd, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t uType, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint lpString2;\n    uint lpText;\n    \n    puVar7 = 0x1001360;\n    puVar8 = &lpText;\n    for (iVar6 = 0xd; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = *puVar7;\n    if ((*0x100b898 & 1) != 0) {\n        return 1;\n    }\n    fcn.01002aa6(arg_ch, &lpString2, 0x200);\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    if (lpString2 == '\\0') {\n        iVar6 = fcn.01005d22();\n        if ((iVar6 == 0) || (iVar6 = fcn.01005cd4(*0x100b4a4, 0x10, 1),  iVar6 == 0)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0x180000;\n        }\n        (*_sym.imp.USER32.dll_MessageBoxA)(hWnd, &lpText, 0x100abb4, uVar2 | 0x10010);\n    }\n    else if (arg_14h == 0) {\n        if (arg_10h == 0) {\n            iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString2);\n            iVar6 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar6 + 1);\n            if (iVar6 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar6, &lpString2);\n                goto code_r0x01003a1b;\n            }\n        }\n        else {\n            iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_10h);\n            iVar3 = (*pcVar1)(&lpString2);\n            iVar6 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar6 + 100 + iVar3);\n            if (iVar6 != 0) {\n                (*_sym.imp.USER32.dll_wsprintfA)(iVar6, &lpString2, arg_10h);\ncode_r0x01003a1b:\n                (*_sym.imp.USER32.dll_MessageBeep)(uType);\n                iVar3 = fcn.01005d22();\n                if ((iVar3 == 0) || (iVar3 = fcn.01005cd4(*0x100b4a4, 0x10, 1),  iVar3 == 0)) {\n                    uVar2 = 0;\n                }\n                else {\n                    uVar2 = 0x180000;\n                }\n                uVar5 = (*_sym.imp.USER32.dll_MessageBoxA)(hWnd, iVar6, 0x100abb4, uVar2 | uType | arg_1ch | 0x10000);\n                (*_sym.imp.KERNEL32.dll_LocalFree)(iVar6);\n                return uVar5;\n            }\n        }\n    }\n    else {\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_10h);\n        iVar3 = (*pcVar1)(arg_14h);\n        iVar4 = (*pcVar1)(&lpString2);\n        iVar6 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar6 + iVar3 + 100 + iVar4);\n        if (iVar6 != 0) {\n            (*_sym.imp.USER32.dll_wsprintfA)(iVar6, &lpString2, arg_10h, arg_14h);\n            goto code_r0x01003a1b;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 963
    },
    "01003b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.01003b00(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    uVar3 = param_2;\n    pcVar2 = _sym.imp.KERNEL32.dll_CreateFileA;\n    if ((param_2 & 8) == 0) {\n        uVar1 = param_2 & 3;\n        param_2 = 0x80000000;\n        if (uVar1 != 0) {\n            param_2 = 0x40000000;\n        }\n        if ((uVar3 & 0x100) == 0) {\n            iVar5 = (-((uVar3 & 0x200) != 0) & 2) + 3;\n        }\n        else if ((uVar3 & 0x400) == 0) {\n            iVar5 = (-((uVar3 & 0x200) != 0) & 0xfffffffe) + 4;\n        }\n        else {\n            iVar5 = 1;\n        }\n        uVar6 = 0x80;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, param_2, 0, 0, iVar5, 0x80, 0);\n        if ((iVar4 == -1) && (iVar5 != 3)) {\n            fcn.01002b34(param_1);\n            iVar4 = (*pcVar2)(param_1, uVar6, 0, 0, iVar5, 0x80, 0);\n        }\n    }\n    else {\n        iVar4 = -1;\n    }\n    return iVar4;\n}\n",
        "token_count": 401
    },
    "01003b9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01003b9b(uint lpString1, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    piVar2 = 0x100b4c0;\n    do {\n        if (*piVar2 == 1) break;\n        piVar2 = piVar2 + 6;\n        iVar5 = iVar5 + 1;\n    } while (piVar2 < 0x100b880);\n    if (iVar5 == 0x28) {\n        fcn.010038cc(*0x100aa4c, 0x4bb, 0, 0, 0x10, 0);\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(lpString1, \"*MEMCAB\");\n        if (iVar3 == 0) {\n            if (((arg_ch & 0x100) == 0) && ((arg_ch & 0xb) == 0)) {\n                iVar3 = iVar5 * 0x18;\n                *(iVar3 + 0x100b4c8) = *0x100aba0;\n                uVar1 = *0x100aba4;\n                *(iVar3 + 0x100b4c0) = 0;\n                *(iVar3 + 0x100b4c4) = 1;\n                *(iVar3 + 0x100b4d0) = uVar1;\n                *(iVar3 + 0x100b4cc) = 0;\n                return iVar5;\n            }\n        }\n        else {\n            iVar3 = fcn.01003b00(lpString1, arg_ch, arg_10h);\n            iVar4 = iVar5 * 0x18;\n            *(iVar4 + 0x100b4d4) = iVar3;\n            if (iVar3 != -1) {\n                *(iVar4 + 0x100b4c0) = 0;\n                *(iVar4 + 0x100b4c4) = 0;\n                return iVar5;\n            }\n        }\n    }\n    return -1;\n}\n",
        "token_count": 504
    },
    "01003c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.01003c60(void)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t var_24h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    \n    puVar3 = &var_24h;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    arg_8h = fcn.01005ebf(0x1002e03, 0x1002e10, fcn.01003b9b, fcn.01002b9d, fcn.01002c23, fcn.01002cb2, fcn.01002d05, 1\n                          , &var_ch);\n    if (arg_8h != 0) {\n        iVar2 = fcn.01003b9b(\"*MEMCAB\", 0x8000, 0x180);\n        if ((((iVar2 == -1) || (iVar1 = fcn.01005f4f(arg_8h, iVar2, &var_24h),  iVar1 == 0)) || (var_24h != *0x100aba4))\n           || (((var_14h != 0 || (var_10h != 0)) || (iVar2 = fcn.01002cb2(iVar2),  iVar2 == -1)))) {\n            arg_8h = 0;\n        }\n        else {\n            iVar2 = fcn.010069c2(arg_8h);\n            arg_8h = iVar2 != 0;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 411
    },
    "010041cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.010041cd(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uchar *arg_14h;\n    bool bVar10;\n    bool bVar11;\n    uchar auStack436 [260];\n    uint uStack176;\n    uint32_t uStack172;\n    uint32_t uStack168;\n    uint32_t uStack164;\n    int32_t iStack160;\n    int32_t aiStack28 [4];\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    iStack8 = 0;\n    uStack176 = 0x94;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack176);\n    if (iVar4 == 0) {\n        iStack8 = 0x4b4;\ncode_r0x010041fa:\n        fcn.010038cc(0, iStack8, 0, 0, 0x10, 0);\n    }\n    else {\n        if (iStack160 == 1) {\n            *0x100aa64 = 0;\n            *0x100a2bc = 1;\n            *0x100a2c0 = 1;\n        }\n        else {\n            if (iStack160 != 2) {\n                iStack8 = 0x4ca;\n                goto code_r0x010041fa;\n            }\n            *0x100a2bc = 1;\n            *0x100a2c0 = 1;\n            *0x100aa64 = 2;\n            if (uStack172 < 4) {\n                *0x100aa64 = 1;\n                if ((uStack172 < 3) || ((uStack172 == 3 && (uStack168 < 0x33)))) {\n                    *0x100a2bc = 0;\n                    *0x100a2c0 = 0;\n                }\n            }\n            else if (4 < uStack172) {\n                *0x100aa64 = 3;\n            }\n        }\n        if ((*0x100b894 == 0) && (param_1 != 0)) {\n            iVar4 = param_1 + 0x40;\n            if (*0x100aa64 != 0) {\n                iVar4 = param_1 + 4;\n            }\n            iStack12 = 0;\n            do {\n                puVar2 = iVar4 + iStack12 * 0x18;\n                iVar5 = fcn.010021d4(uStack172, uStack168, *puVar2, puVar2[1]);\n                iVar7 = iStack12;\n                aiStack28[iStack12 + 2] = iVar5;\n                iVar7 = iVar4 + iVar7 * 0x18;\n                iVar6 = fcn.010021d4(uStack172, uStack168, *(iVar7 + 0xc), *(iVar7 + 0x10));\n                iVar5 = iStack12;\n                iVar7 = iStack12 + 2;\n                aiStack28[iStack12] = iVar6;\n                if ((aiStack28[iVar7] < 0) || (0 < iVar6)) {\n                    if (iVar5 == 1) goto code_r0x01004405;\n                }\n                else {\n                    if (aiStack28[iVar7] == 0) {\n                        if (iVar6 == 0) {\n                            uVar9 = uStack164 & 0xffff;\n                            iVar7 = iVar4 + iVar5 * 0x18;\n                            if (*(iVar7 + 8) <= uVar9) {\n                                puVar1 = iVar7 + 0x14;\n                                bVar10 = uVar9 < *puVar1;\n                                bVar11 = uVar9 == *puVar1;\n                                goto code_r0x010043fb;\n                            }\n                        }\n                        else if (*(iVar4 + 8 + iVar5 * 0x18) <= (uStack164 & 0xffff)) break;\n                    }\n                    else {\n                        if (iVar6 != 0) break;\n                        puVar1 = iVar4 + 0x14 + iVar5 * 0x18;\n                        bVar10 = (uStack164 & 0xffff) < *puVar1;\n                        bVar11 = (uStack164 & 0xffff) == *puVar1;\ncode_r0x010043fb:\n                        if (bVar10 || bVar11) break;\n                    }\n                    if (iVar5 != 0) {\ncode_r0x01004405:\n                        iStack8 = 0x54c;\n                        goto code_r0x01004372;\n                    }\n                }\n                iStack12 = iVar5 + 1;\n            } while (iStack12 < 2);\n            if ((*(param_1 + 0x7c) != 0) &&\n               (iVar7 = fcn.01002691(param_1, auStack436, 0x104, aiStack28 + 4),  iVar7 == 0)) {\n                iStack8 = 0x54d;\n                iVar5 = iStack12;\ncode_r0x01004372:\n                arg_14h = NULL;\n                if (iStack8 == 0x54d) {\n                    arg_14h = auStack436;\n                    iVar4 = iVar5 * 0x3c + *(param_1 + 0x80) + 0x84 + param_1;\n                }\n                pcVar3 = *(iVar4 + 0x34) + 0x84 + param_1;\n                uVar9 = fcn.010021b7(*(iVar4 + 0x30));\n                if (((*0x100b898 & 1) == 0) && (*pcVar3 != '\\0')) {\n                    (*_sym.imp.USER32.dll_MessageBeep)(0);\n                    iVar4 = fcn.01005d22();\n                    if ((iVar4 == 0) || (iVar4 = fcn.01005cd4(*0x100b4a4, 0x10, 1),  iVar4 == 0)) {\n                        uVar8 = 0;\n                    }\n                    else {\n                        uVar8 = 0x180000;\n                    }\n                    iVar4 = (*_sym.imp.USER32.dll_MessageBoxA)(0, pcVar3, 0x100abb4, uVar8 | uVar9 | 0x30);\n                    if ((uVar9 & 4) == 0) {\n                        if ((uVar9 & 1) == 0) goto code_r0x01004471;\n                        bVar10 = iVar4 == 1;\n                    }\n                    else {\n                        bVar10 = iVar4 == 6;\n                    }\n                    if (bVar10) {\n                        iStack8 = 0;\n                    }\n                }\n                else {\n                    fcn.010038cc(0, iStack8, 0x100abb4, arg_14h, 0x30, 0);\n                }\n            }\n        }\n    }\ncode_r0x01004471:\n    return iStack8 == 0;\n}\n",
        "token_count": 1606
    },
    "01004809": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.01004809(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.01005bca(param_1);\n    if (iVar1 != 0) {\n        if ((*0x100ac3c == 0) && ((*0x100b898 & 1) == 0)) {\n            *0x100ae64 = param_1;\n            iVar1 = fcn.01004161(*0x100b4a4, 0x7d3, *0x100aa4c, fcn.0100383d, 0, 6);\n            if (iVar1 != 6) {\n                if (iVar1 == 7) {\n                    return 0;\n                }\n                if (iVar1 == 0x839) {\n                    *0x100ac3c = 1;\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(param_1, 0x80);\n    }\n    return 1;\n}\n",
        "token_count": 224
    },
    "01004888": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01004888(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_104h;\n    \n    if (*0x100ac38 == 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.01002e1b(arg_ch);\n            return iVar1;\n        }\n        if (arg_8h == 1) {\n            return 0;\n        }\n        if (arg_8h == 2) {\n            if (*0x100aa4c != 0) {\n                (*_sym.imp.USER32.dll_SetDlgItemTextA)(*0x100aa4c, 0x837, *(arg_ch + 4));\n            }\n            iVar1 = fcn.01002acd(&var_104h, 0x104, 0x100ac44, *(arg_ch + 4));\n            if (iVar1 != 0) {\n                iVar1 = fcn.01004809(&var_104h);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                iVar1 = fcn.01003b9b(&var_104h, 0x8302, 0x180);\n                if ((iVar1 != -1) && (iVar3 = fcn.01003a7a(&var_104h),  iVar3 != 0)) {\n                    *0x100ae54 = *0x100ae54 + 1;\n                    return iVar1;\n                }\n            }\n        }\n        else if (arg_8h == 3) {\n            iVar1 = fcn.01002acd(&var_104h, 0x104, 0x100ac44, *(arg_ch + 4));\n            if ((iVar1 != 0) &&\n               (iVar1 = fcn.01002d87(*(arg_ch + 0x14), *(arg_ch + 0x18), *(arg_ch + 0x1a)),  iVar1 != 0)) {\n                fcn.01002cb2(*(arg_ch + 0x14));\n                uVar2 = fcn.01002ded(*(arg_ch + 0x1c));\n                iVar1 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(&var_104h, uVar2);\n                return (-(iVar1 != 0) & 2) - 1;\n            }\n        }\n        else if (arg_8h != 4) {\n            return 0;\n        }\n    }\n    else if (arg_8h == 3) {\n        fcn.01002cb2(*(arg_ch + 0x14));\n    }\n    return -1;\n}\n",
        "token_count": 606
    },
    "01004c18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpName\n\nuint __cdecl fcn.01004c18(uint hModule, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_ch_00;\n    uint lpName;\n    uint var_4h;\n    \n    *0x100b4a4 = hModule;\n    puVar3 = 0x100aba0;\n    for (iVar2 = 0x23f; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = 0x100b880;\n    for (iVar2 = 0xcb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = 0x100aa80;\n    for (iVar2 = 0x41; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_4h = 0;\n    *0x100ae4c = 1;\n    uVar1 = fcn.01002a34(0x100142c, 0x100abb4, 0x7f);\n    if ((uVar1 == 0) || (0x80 < uVar1)) {\n        arg_ch_00 = 0x4b1;\n    }\n    else {\n        *0x100aa50 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 1, 0);\n        (*_sym.imp.KERNEL32.dll_SetEvent)(*0x100aa50);\n        iVar2 = fcn.01002a34(0x1001420, 0x100b494, 4);\n        if (iVar2 == 0) {\ncode_r0x01004cd5:\n            fcn.010038cc(0, 0x4b1, 0, 0, 0x10, 0);\n            *0x100aa5c = 0x80070714;\n            return 0;\n        }\n        if ((*0x100b494 & 0xc0) != 0) {\n            iVar2 = fcn.01002a34(0x1001410, &lpName, 0x104);\n            if (iVar2 == 0) goto code_r0x01004cd5;\n            *0x100aa54 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 1, &lpName);\n            if ((*0x100aa54 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == 0xb7)) {\n                if ((*0x100b494 & 0x80) != 0) {\n                    fcn.010038cc(0, 0x54b, 0x100abb4, 0, 0x10, 0);\ncode_r0x01004d4a:\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x100aa54);\n                    *0x100aa5c = 0x800700b7;\n                    return 0;\n                }\n                iVar2 = fcn.010038cc(0, 0x524, 0x100abb4, 0, 0x20, 4);\n                if (iVar2 != 6) goto code_r0x01004d4a;\n            }\n        }\n        *0x100aa60 = 0;\n        iVar2 = fcn.010030a7(arg_ch);\n        if (iVar2 != 0) {\n            if (*0x100b89a != '\\0') {\n                fcn.01001c7f(0x100b89a);\n                return 0;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, 0x1001404, 10);\n            if (iVar2 != 0) {\n                var_4h = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, iVar2);\n            }\n            if (*0x100a2bc != 0) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n            }\n            if (*0x100b884 != 0) {\n                return 1;\n            }\n            iVar2 = fcn.010041cd(var_4h);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (((*0x100aa64 != 1) && (*0x100aa64 != 2)) && (*0x100aa64 != 3)) {\n                return 1;\n            }\n            if ((*0x100b495 & 1) == 0) {\n                return 1;\n            }\n            if ((*0x100b898 & 1) != 0) {\n                return 1;\n            }\n            iVar2 = fcn.0100168b();\n            if (iVar2 != 0) {\n                return 1;\n            }\n            iVar2 = fcn.01004161(*0x100b4a4, 0x7d6, 0, fcn.010017b1, 0x547, 0x83e);\n            if (iVar2 != 0x83d) {\n                return 0;\n            }\n            return 1;\n        }\n        arg_ch_00 = 0x520;\n    }\n    fcn.010038cc(0, arg_ch_00, 0, 0, 0x10, 0);\n    return 0;\n}\n",
        "token_count": 1276
    },
    "01005075": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01005075(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if (arg_ch != 0x10) {\n        if (arg_ch != 0x102) {\n            if (arg_ch == 0x110) {\n                *0x100aa4c = arg_8h;\n                uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n                fcn.01002969(arg_8h, uVar4);\n                pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n                if (*0x100a2bc != 0) {\n                    uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x83b, 0x464, 0, 0xbb9);\n                    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n                    (*_sym.imp.USER32.dll_SendMessageA)(uVar4);\n                    uVar4 = (*pcVar2)(arg_8h, 0x83b, 0x465, 0xffffffff, 0xffff0000);\n                    (*pcVar1)(uVar4);\n                }\n                (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x100abb4);\n                *0x100a43c = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.010049db, 0, 0, 0x100aa48);\n                if (*0x100a43c == 0) {\n                    fcn.010038cc(arg_8h, 0x4b8, 0, 0, 0x10, 0);\n                    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n                }\n                return 1;\n            }\n            if (arg_ch != 0x111) {\n                if (arg_ch == 0xfa1) {\n                    (*_sym.imp.KERNEL32.dll_TerminateThread)(*0x100a43c, 0);\n                    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, arg_10h);\n                    return 1;\n                }\n                return 0;\n            }\n            if (arg_10h != 2) {\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_ResetEvent)(*0x100aa50);\n            iVar3 = fcn.010038cc(*0x100aa4c, 0x4b2, 0x1001251, 0, 0x20, 4);\n            if ((iVar3 != 6) && (iVar3 != 1)) {\n                (*_sym.imp.KERNEL32.dll_SetEvent)(*0x100aa50);\n                return 1;\n            }\n            *0x100ac38 = 1;\n            (*_sym.imp.KERNEL32.dll_SetEvent)(*0x100aa50);\n            fcn.0100288f(*0x100a43c);\n            goto code_r0x010051f7;\n        }\n        if (arg_10h != 0x1b) {\n            return 1;\n        }\n    }\n    *0x100ac38 = 1;\ncode_r0x010051f7:\n    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n    return 1;\n}\n",
        "token_count": 764
    },
    "01005288": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.01005288(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uchar auStack392 [260];\n    uint auStack132 [11];\n    uint uStack88;\n    ushort uStack84;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int16_t iStack44;\n    uint32_t uStack40;\n    uint uStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint uStack24;\n    int32_t iStack20;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    \n    iStack12 = 0;\n    iStack28 = 0;\n    iStack32 = 0;\n    *0x100aa5c = 0;\n    if ((*0x100b888 == 0) && ((uVar2 = fcn.01002a34(0x100146c, 0x100b48c, 4),  uVar2 == 0 || (4 < uVar2)))) {\n        fcn.010038cc(0, 0x4b1, 0, 0, 0x10, 0);\n        *0x100aa5c = -0x7ff8f8ec;\n        uVar3 = 0;\n    }\n    else {\n        pcVar1 = _sym.imp.KERNEL32.dll_LocalFree;\n        uStack16 = 0;\n        do {\n            puVar6 = auStack132;\n            for (iVar5 = 0x11; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            iStack12 = 0;\n            auStack132[0] = 0x44;\n            if (*0x100baa2 == '\\0') {\n                uVar2 = fcn.01002a34(0x1001460, &iStack20, 4);\n                if ((uVar2 == 0) || (4 < uVar2)) goto code_r0x010053df;\n                if (iStack20 == 1) {\n                    uStack84 = 0;\ncode_r0x0100535c:\n                    uStack88 = 1;\n                }\n                else {\n                    if (iStack20 == 2) {\n                        uStack84 = 6;\n                        goto code_r0x0100535c;\n                    }\n                    if (iStack20 == 3) {\n                        uStack84 = 3;\n                        goto code_r0x0100535c;\n                    }\n                }\n                if (uStack16 != 0) goto code_r0x01005415;\n                if (*0x100b898 != 0) {\n                    if ((*0x100b898 & 1) == 0) {\n                        if ((*0x100b898 & 2) != 0) {\n                            uStack24 = 0x1001450;\n                        }\n                    }\n                    else {\n                        uStack24 = 0x1001458;\n                    }\n                    iVar5 = fcn.01002a34(uStack24, auStack392, 0x104);\n                    if (iVar5 == 0) goto code_r0x010053df;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(auStack392, 0x10013b4);\n                    if (iVar5 != 0) {\n                        iStack28 = 1;\n                    }\n                }\n                if (iStack28 == 0) {\n                    iVar5 = fcn.01002a34(0x1001444, auStack392, 0x104);\n                    if (iVar5 == 0) goto code_r0x010053df;\n                    goto code_r0x01005415;\n                }\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(auStack392, 0x100baa2);\ncode_r0x01005415:\n                if (uStack16 == 1) {\n                    iVar5 = fcn.01002a34(0x1001434, auStack392, 0x104);\n                    if (iVar5 == 0) {\ncode_r0x010053df:\n                        fcn.010038cc(0, 0x4b1, 0, 0, 0x10, 0);\n                        *0x100aa5c = 0x80070714;\n                        return 0;\n                    }\n                    if ((*0x100baa2 != '\\0') ||\n                       (iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(auStack392, 0x10013b4),  iVar5 == 0)) break;\n                }\n            }\n            iVar5 = fcn.010022ff(auStack392, &uStack8, &iStack12);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            if (((iStack32 == 0) && (*0x100aa64 != 1)) && (*0x100b880 != 0)) {\n                if (iStack12 == 0) {\n                    iStack32 = 1;\n                    fcn.0100198b();\n                    goto code_r0x01005495;\n                }\ncode_r0x0100549e:\n                if (*0x100a2c0 == 0) {\n                    fcn.010038cc(0, 0x4c7, 0, 0, 0x10, 0);\n                    (*pcVar1)(uStack8);\n                    *0x100aa5c = 0x8007042b;\n                    return 0;\n                }\n                if ((iStack12 == 0) || ((*0x100b494 & 4) == 0)) goto code_r0x0100557d;\n                iVar5 = fcn.0100370f(0x1001278);\n                if (iVar5 == 0) {\n                    fcn.010038cc(0, 0x4c8, 0x1001278, 0, 0x10, 0);\ncode_r0x01005612:\n                    (*pcVar1)(uStack8);\n                    *0x100aa5c = fcn.01003547();\n                    return 0;\n                }\n                pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, \"DoInfInstall\");\n                if (pcVar4 == NULL) {\n                    fcn.010038cc(0, 0x4c9, \"DoInfInstall\", 0, 0x10, 0);\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n                    goto code_r0x01005612;\n                }\n                uStack56 = uStack8;\n                puStack48 = auStack392;\n                iStack44 = *0x100aa64;\n                uStack40 = *0x100b898;\n                uStack64 = 0;\n                uStack60 = 0x100abb4;\n                uStack52 = 0x100ac44;\n                if (*0x100b890 != 0) {\n                    uStack40 = CONCAT12(1, *0x100b898);\n                }\n                if ((*0x100b494 & 8) != 0) {\n                    uStack40 = uStack40 | 0x20000;\n                }\n                if ((*0x100b494 & 0x10) != 0) {\n                    uStack40 = uStack40 | 0x40000;\n                }\n                if ((*0x100bba8 & 0x40) != 0) {\n                    uStack40 = uStack40 | 0x80000;\n                }\n                if (*0x100bba8 < '\\0') {\n                    uStack40 = uStack40 | 0x100000;\n                }\n                uStack36 = *0x100b498;\n                *0x100aa5c = (*pcVar4)(&uStack64);\n                if (*0x100aa5c < 0) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n                    goto code_r0x0100562c;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n            }\n            else {\ncode_r0x01005495:\n                if (iStack12 != 0) goto code_r0x0100549e;\ncode_r0x0100557d:\n                iVar5 = fcn.01004560(uStack8, auStack132);\n                if (iVar5 == 0) {\ncode_r0x0100562c:\n                    (*pcVar1)(uStack8);\n                    return 0;\n                }\n            }\n            (*pcVar1)(uStack8);\n            uStack16 = uStack16 + 1;\n        } while (uStack16 < 2);\n        uVar3 = 1;\n        if (*0x100a330 != 0) {\n            fcn.01001b8b();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 2040
    },
    "01005636": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.01005636(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint arg_10h;\n    uint lpFileName;\n    \n    iVar2 = fcn.01002a34(0x1001444, 0, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar2 + 1);\n    if (iVar3 == 0) {\n        fcn.010038cc(0, 0x4b5, 0, 0, 0x10, 0);\n        *0x100aa5c = fcn.01003547();\n    }\n    else {\n        iVar2 = fcn.01002a34(0x1001444, iVar3, iVar2);\n        if (iVar2 == 0) {\n            fcn.010038cc(0, 0x4b1, 0, 0, 0x10, 0);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar3);\n            *0x100aa5c = 0x80070714;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(iVar3, 0x10013b4);\n            arg_10h = 1;\n            if (iVar2 == 0) {\n                *0x100b490 = 1;\n            }\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar3);\n            if (*0x100b99e == '\\0') {\n                if ((*0x100b884 != 0) || (*0x100b490 != 0)) {\n                    iVar2 = fcn.01004161(*0x100b4a4, 0x7d2, 0, fcn.01004e56, 0, 0);\n                    return iVar2 != 0;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104, 0x100ac44);\n                pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA;\n                if (iVar2 != 0) {\n                    iVar2 = fcn.01004b1a(0x100ac44, 1, 3);\n                    if (iVar2 != 0) {\n                        return true;\n                    }\n                    iVar2 = fcn.01001f6e(0x100ac44);\n                    pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA;\n                    if ((iVar2 == 0) &&\n                       (iVar2 = fcn.01004b1a(0x100ac44, 1, 1),  pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA,  iVar2 != 0)) {\n                        return true;\n                    }\n                }\n                do {\n                    (*pcVar1)(&lpFileName, 0x1001484);\n                    while (lpFileName < '[') {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_GetDriveTypeA)(&lpFileName);\n                        if (((((iVar2 == 6) || (iVar2 == 3)) &&\n                             (iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&lpFileName),  iVar3 != -1)) ||\n                            (((iVar2 == 2 && (lpFileName != 'A')) &&\n                             ((lpFileName != 'B' &&\n                              ((uVar4 = fcn.01005e13(&lpFileName),  uVar4 != 0 && (0x18fff < uVar4)))))))) &&\n                           ((iVar2 = fcn.01003f0d(&lpFileName, 3, 0),  iVar2 != 0 ||\n                            ((iVar2 = fcn.01001f6e(&lpFileName),  iVar2 == 0 &&\n                             (iVar2 = fcn.01003f0d(&lpFileName, 1, 0),  iVar2 != 0)))))) {\n                            iVar2 = fcn.01001f6e(&lpFileName);\n                            if (iVar2 != 0) {\n                                (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpFileName, 0x104);\n                            }\n                            fcn.01005b32(&lpFileName, 0x1001474);\n                            iVar2 = fcn.01001f4b(&lpFileName);\n                            if (iVar2 == 0) {\n                                lpFileName._0_1_ = lpFileName + '\\x01';\n                                lpFileName._3_1_ = 0;\n                            }\n                            else {\n                                (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(&lpFileName, 2);\n                                (*pcVar1)(0x100ac44, &lpFileName);\n                                iVar2 = fcn.01004b1a(0x100ac44, 1, 0);\n                                if (iVar2 != 0) {\n                                    return true;\n                                }\n                            }\n                        }\n                        else {\n                            lpFileName._0_1_ = lpFileName + '\\x01';\n                        }\n                    }\n                    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpFileName, 0x104);\n                    iVar2 = fcn.01003f0d(&lpFileName, 3, 4);\n                } while (iVar2 != 0);\n            }\n            else {\n                if ((*0x100b99e == '\\\\') && (*0x100b99f == '\\\\')) {\n                    arg_10h = 0;\n                }\n                iVar2 = fcn.01004b1a(0x100b99e, 0, arg_10h);\n                if (iVar2 != 0) {\n                    return true;\n                }\n                fcn.010038cc(0, 0x4be, 0, 0, 0x10, 0);\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 1299
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint main(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    \n    *0x100aa5c = 0;\n    iVar1 = fcn.01004c18(param_1, param_3);\n    if (iVar1 != 0) {\n        iVar1 = fcn.010058fe();\n        fcn.01002eaf();\n        if (((iVar1 != 0) && (*0x100b89a == '\\0')) && ((*0x100b48c & 1) != 0)) {\n            fcn.0100263f(*0x100b48c, param_1, param_3, param_4);\n        }\n    }\n    if (*0x100aa54 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x100aa54);\n    }\n    return *0x100aa5c;\n}\n",
        "token_count": 207
    },
    "01005b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nushort * fcn.01005b00(ushort *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        iVar1 = fcn.01005ad3(*param_1, param_2);\n        if (iVar1 == 0) break;\n        param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 114
    },
    "01005be8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nushort * fcn.01005be8(ushort *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    \n    puVar2 = NULL;\n    for (; *param_1 != '\\0'; param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n        iVar1 = fcn.01005ad3(*param_1, param_2);\n        if (iVar1 == 0) {\n            puVar2 = param_1;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 126
    },
    "01005d22": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.01005d22(void)\n\n{\n    int32_t iVar1;\n    uint uStack180;\n    int32_t iStack176;\n    uint32_t uStack172;\n    int32_t iStack164;\n    uchar auStack32 [12];\n    uchar auStack20 [4];\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = 0;\n    uStack16 = 0xc;\n    if (*0x100a2cc == -2) {\n        *0x100a2cc = 0;\n        uStack180 = 0x94;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack180);\n        if ((((iVar1 != 0) && (iStack164 == 1)) && (iStack176 == 4)) && (uStack172 < 10)) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x4a);\n            if (iVar1 != 0) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, 0x1001488, 0, 0x20019, &uStack12);\n                if (iVar1 == 0) {\n                    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                                      (uStack12, 0x1001251, 0, auStack20, auStack32, &uStack16);\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack12);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.01005c1c(auStack32, &uStack8);\n                        if ((iVar1 != 0) && (((uStack8 & 0x3ff) == 1 || ((uStack8 & 0x3ff) == 0xd)))) {\n                            *0x100a2cc = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return *0x100a2cc;\n}\n",
        "token_count": 461
    },
    "0100634c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100634c(uint *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    char cVar6;\n    int32_t var_10h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xb2);\n    uVar3 = uVar1 & 0xf;\n    puVar5 = arg_8h + 0x25;\n    *puVar5 = 0x8000;\n    if ((uVar1 & 0xf) == 0) {\n        arg_8h[0x26] = 0x8000;\n    }\n    else {\n        if (uVar3 == 1) {\n            iVar4 = fcn.0100376f(puVar5, 0, 0, arg_8h + 0x26, 0);\n        }\n        else if (uVar3 == 2) {\n            var_4h = arg_8h[8];\n            var_8h = uVar1 >> 8 & 0x1f;\n            iVar4 = fcn.0100376f(puVar5, &var_8h, 0, 0, arg_8h + 0x26, 0, 0, 0, 0, 0, 0);\n        }\n        else {\n            if (uVar3 != 3) {\n                if (uVar3 == 0xf) {\n                    return 1;\n                }\n                cVar6 = '\\x06';\n                goto code_r0x010064ef;\n            }\n            var_10h = 1 << (uVar1 >> 8 & 0x1f);\n            iVar4 = fcn.010070e6(puVar5, &var_10h, 0, 0, arg_8h + 0x26, 0, 0, 0, 0, 0, 0);\n        }\n        if (iVar4 != 0) {\n            cVar6 = '\\a';\n            goto code_r0x010064ef;\n        }\n    }\n    puVar5 = arg_8h + 0x26;\n    iVar4 = (*arg_8h[2])(*puVar5);\n    arg_8h[0xf] = iVar4;\n    if (iVar4 != 0) {\n        iVar4 = (*arg_8h[2])(arg_8h[0x25]);\n        arg_8h[0x10] = iVar4;\n        if (iVar4 != 0) {\n            uVar2 = *(arg_8h + 0xb2) & 0xf;\n            if (uVar2 == 1) {\n                iVar4 = fcn.0100376f(arg_8h + 0x25, arg_8h[2], arg_8h[1], puVar5, arg_8h + 0xd);\n            }\n            else if (uVar2 == 2) {\n                iVar4 = fcn.0100376f(arg_8h + 0x25, &var_8h, arg_8h[2], arg_8h[1], puVar5, arg_8h + 0xd, arg_8h[3], \n                                     arg_8h[4], arg_8h[5], arg_8h[6], arg_8h[7]);\n            }\n            else {\n                if (uVar2 != 3) {\n                    return 1;\n                }\n                iVar4 = fcn.010070e6(arg_8h + 0x25, &var_10h, arg_8h[2], arg_8h[1], puVar5, arg_8h + 0xd, arg_8h[3], \n                                     arg_8h[4], arg_8h[5], arg_8h[6], arg_8h[7]);\n            }\n            if (iVar4 == 0) {\n                return 1;\n            }\n            cVar6 = (iVar4 != 1) * '\\x02' + '\\x05';\n            (*arg_8h[1])(arg_8h[0xf]);\n            (*arg_8h[1])(arg_8h[0x10]);\n            goto code_r0x010064ef;\n        }\n        (*arg_8h[1])(arg_8h[0xf]);\n    }\n    cVar6 = '\\x05';\ncode_r0x010064ef:\n    fcn.01007068(*arg_8h, cVar6, 0);\n    *(arg_8h + 0xb2) = 0xf;\n    return 0;\n}\n",
        "token_count": 1066
    },
    "01006a1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.01006a1d(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    param_1[0x24] = param_2;\n    iVar1 = (*param_1[7])(param_1[0x21], param_1[0x29] * param_2 + param_1[0xb], 0);\n    if (((iVar1 == -1) || (iVar1 = (*param_1[4])(param_1[0x21], param_1[0x11], param_1[0x29]),  param_1[0x29] != iVar1))\n       || (iVar1 = (*param_1[7])(param_1[0x21], *param_1[0x11], 0),  iVar1 == -1)) {\n        uVar2 = 4;\n    }\n    else {\n        *(param_1 + 0x2c) = *(param_1[0x11] + 4);\n        iVar1 = fcn.01006979(*(param_1[0x11] + 6), param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (param_1[10] == 0) {\n            return 1;\n        }\n        param_1[0x1f9] = 1;\n        param_1[0x1fa] = param_1[0xe];\n        *(param_1 + 0x1fc) = *(param_1 + 0x29) + -8;\n        if (*(param_1 + 0x29) + -8 == 0) {\n            param_1[0x1fb] = 0;\n        }\n        else {\n            param_1[0x1fb] = param_1[0x11] + 8;\n        }\n        *(param_1 + 0x7f2) = param_2;\n        iVar1 = (*param_1[10])(param_1 + 0x1f9);\n        if (iVar1 != -1) {\n            return 1;\n        }\n        uVar2 = 0xb;\n    }\n    fcn.01007068(*param_1, uVar2, 0);\n    return 0;\n}\n",
        "token_count": 514
    },
    "01006b0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.01006b0c(int32_t **param_1)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint32_t unaff_EBX;\n    uint uVar5;\n    uint32_t arg_14h;\n    \n    uVar1 = *(param_1 + 0x1c);\n    param_1[0x1f0] = param_1 + 0x3b7;\n    param_1[0x1f1] = param_1 + 0x12e;\n    uVar4 = *(param_1 + 0x72) + 1;\n    arg_14h = unaff_EBX & 0xffff0000 | uVar4;\n    param_1[0x1f2] = param_1 + 0x5b9;\n    param_1[0x1f8] = NULL;\n    param_1[499] = param_1[0xe];\n    *(param_1 + 0x7da) = uVar1;\n    *(param_1 + 0x1f7) = uVar4;\n    if ((param_1[0x21] == 0xffffffff) || (iVar3 = (*param_1[6])(param_1[0x21]),  iVar3 == 0)) {\n        piVar2 = param_1[0x22];\n        if ((piVar2 == 0xffffffff) || (iVar3 = (*param_1[6])(piVar2),  iVar3 == 0)) {\n            param_1[0x22] = 0xffffffff;\n            param_1[0x21] = 0xffffffff;\n            iVar3 = (*param_1[9])(4, param_1 + 0x1ef);\n            if (iVar3 != -1) {\n                iVar3 = fcn.0100666d(param_1, param_1 + 0x3b7, uVar1, arg_14h);\n                if (((iVar3 == 0) || (iVar3 = fcn.01006a1d(param_1, 0),  iVar3 == 0)) && (**param_1 == 0xb)) {\n                    return 0;\n                }\n                param_1[0x1f8] = **param_1;\n                *(param_1 + 0xae) = *(param_1 + 0xae) + 1;\n                do {\n                    if (*(param_1 + 0xae) == 0) {\n                        param_1[0x27] = 0x1;\n                        return 1;\n                    }\n                    *(param_1 + 0x2b) = *(param_1 + 0x2b) + -1;\n                    *(param_1 + 0xae) = *(param_1 + 0xae) + -1;\n                    iVar3 = fcn.01006931(arg_14h, param_1);\n                } while (iVar3 != 0);\n                return 0;\n            }\n            uVar5 = 0xb;\n            goto code_r0x01006bf4;\n        }\n    }\n    uVar5 = 4;\ncode_r0x01006bf4:\n    fcn.01007068(*param_1, uVar5, 0);\n    return 0;\n}\n",
        "token_count": 742
    },
    "01006c37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01006c37(uint *arg_8h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = arg_8h;\n    arg_8h[0xc] = arg_8h[0xc] + *(arg_8h[0x12] + 6);\n    if ((*(arg_8h + 0x2c) != 0) || (iVar1 = fcn.01006b0c(arg_8h),  iVar1 != 0)) {\n        *(arg_8h_00 + 0x2c) = *(arg_8h_00 + 0x2c) + -1;\n        iVar1 = fcn.0100607b(arg_8h_00, 0);\n        if (iVar1 != 0) {\n            if (*(arg_8h_00[0x12] + 6) == 0) {\n                iVar1 = fcn.01006b0c(arg_8h_00);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                iVar1 = fcn.0100607b(arg_8h_00, *(arg_8h_00[0x12] + 4));\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                *(arg_8h_00 + 0x2c) = *(arg_8h_00 + 0x2c) + -1;\n            }\n            arg_8h = *(arg_8h_00[0x12] + 6);\n            iVar1 = fcn.0100656e(arg_8h_00, &arg_8h);\n            if (iVar1 != 0) {\n                if (arg_8h == *(arg_8h_00[0x12] + 6)) {\n                    return 1;\n                }\n                fcn.01007068(*arg_8h_00, 7, 0);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 460
    },
    "01006cd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.01006cd8(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x9c) == 0) {\n        if ((param_2 & 0xfffe) == 0xfffe) {\n            param_2 = *(param_1 + 0x6a) - 1;\n        }\n        if (*(param_1 + 0x90) != param_2) {\n            iVar1 = fcn.0100650d(param_1);\n            if (((iVar1 == 0) || (iVar1 = fcn.01006a1d(param_1, param_2),  iVar1 == 0)) ||\n               (iVar1 = fcn.01006c37(param_1),  iVar1 == 0)) {\n                return 0;\n            }\n            *(param_1 + 0x30) = 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 218
    },
    "01006d39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01006d39(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    \n    arg_8h_00 = arg_8h;\n    uVar5 = arg_8h[0x1d];\n    if (uVar5 == 0) {\ncode_r0x01006df4:\n        puVar1 = arg_8h_00 + 0x1ef;\n        arg_8h_00[0x1f0] = arg_8h_00 + 0x2d;\n        arg_8h_00[500] = arg_8h_00[0x23];\n        *(arg_8h_00 + 0x1f5) = *(arg_8h_00 + 0x7e);\n        *(arg_8h_00 + 0x7d6) = *(arg_8h_00 + 0x20);\n        *(arg_8h_00 + 0x1f6) = *(arg_8h_00 + 0x82);\n        arg_8h_00[499] = arg_8h_00[0xe];\n        *puVar1 = 0;\n        *(arg_8h_00 + 0x7de) = *(arg_8h_00 + 0x1f);\n        if ((*(arg_8h_00 + 0x1f6) & 0x40) != 0) {\n            *puVar1 = 1;\n            *(arg_8h_00 + 0x1f6) = *(arg_8h_00 + 0x1f6) & 0xffbf;\n        }\n        iVar2 = (*arg_8h_00[9])(3, puVar1);\n        arg_8h_00[0x23] = 0xffffffff;\n        if (iVar2 == -1) {\n            iVar2 = 0;\n            uVar6 = 0xb;\n        }\n        else {\n            if (iVar2 != 0) {\n                return 1;\n            }\n            uVar6 = 8;\n        }\n        fcn.01007068(*arg_8h_00, uVar6, iVar2);\n        return 0;\n    }\n    uVar4 = arg_8h[0x1e];\n    if (uVar4 < arg_8h[0xc]) {\n        arg_8h[0x24] = 0xffff;\n    }\n    iVar2 = fcn.01006cd8(arg_8h, *(arg_8h + 0x1f));\n    while (iVar2 != 0) {\n        if (uVar4 < *(arg_8h[0x12] + 6) + arg_8h[0xc]) {\n            arg_8h = uVar5;\n            if (uVar5 == 0) goto code_r0x01006df4;\n            goto code_r0x01006d8d;\n        }\n        iVar2 = fcn.01006c37(arg_8h);\n    }\n    goto code_r0x01006dd8;\n    while( true ) {\n        uVar4 = uVar4 + uVar5;\n        arg_8h = arg_8h - uVar5;\n        if (arg_8h == NULL) goto code_r0x01006df4;\n        iVar2 = fcn.01006c37(arg_8h_00);\n        if (iVar2 == 0) break;\ncode_r0x01006d8d:\n        uVar5 = *(arg_8h_00[0x12] + 6) - (uVar4 - arg_8h_00[0xc]);\n        if (arg_8h < uVar5) {\n            uVar5 = arg_8h;\n        }\n        uVar3 = (*arg_8h_00[5])(arg_8h_00[0x23], arg_8h_00[0x10] + (uVar4 - arg_8h_00[0xc]), uVar5);\n        if (uVar5 != uVar3) {\n            fcn.01007068(*arg_8h_00, 8, 0);\n            break;\n        }\n    }\ncode_r0x01006dd8:\n    iVar2 = arg_8h_00[0x23];\n    if (iVar2 != -1) {\n        (*arg_8h_00[6])(iVar2);\n        arg_8h_00[0x23] = -1;\n    }\n    return 0;\n}\n",
        "token_count": 1057
    },
    "0100750f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.0100750f(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint var_4h;\n    int32_t *piStack4;\n    \n    piStack4 = NULL;\n    piVar5 = NULL;\n    if (0 < param_2) {\n        do {\n            if (param_1[2999] == 1) {\n                if (param_1[0xbae] != 0) {\n                    param_1[0xbae] = 0;\n                    iVar1 = fcn.0100781c();\n                    if (iVar1 == 0) {\n                        param_1[0xbb1] = 0;\n                    }\n                    else {\n                        iVar1 = fcn.0100781c(param_1, 0x10);\n                        uVar2 = fcn.0100781c();\n                        param_1[0xbb1] = uVar2 | iVar1 << 0x10;\n                    }\n                }\n                if (param_1[0xbb6] == 3) {\n                    if ((*(param_1 + 0xbb4) & 1) != 0) {\n                        uVar2 = param_1[0xac1];\n                        if (uVar2 < param_1[0xac2]) {\n                            param_1[0xac1] = uVar2 + 1;\n                        }\n                    }\n                    param_1[0xbb6] = 0;\n                    fcn.01007723();\n                }\n                iVar1 = fcn.0100781c();\n                param_1[0xbb6] = iVar1;\n                iVar1 = fcn.0100781c();\n                piStack4 = param_1;\n                iVar3 = fcn.0100781c();\n                iVar4 = fcn.0100781c();\n                iVar4 = iVar4 + (iVar1 * 0x100 + iVar3) * 0x100;\n                param_1[0xbb4] = iVar4;\n                param_1[0xbb5] = iVar4;\n                if (param_1[0xbb6] == 2) {\n                    fcn.01008747(param_1);\n                }\n                iVar1 = param_1[0xbb6];\n                if ((iVar1 == 1) || (iVar1 == 2)) {\n                    piVar5 = param_1 + 0x286;\n                    piVar6 = param_1 + 0xac5;\n                    for (uVar2 = *(param_1 + 0x2eb5) * 8 + 0x100 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        *piVar6 = *piVar5;\n                        piVar5 = piVar5 + 1;\n                        piVar6 = piVar6 + 1;\n                    }\n                    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        *piVar6 = *piVar5;\n                        piVar5 = piVar5 + 1;\n                        piVar6 = piVar6 + 1;\n                    }\n                    piVar5 = param_1 + 0x32e;\n                    piVar6 = param_1 + 0xb6d;\n                    for (iVar1 = 0x3e; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        *piVar6 = *piVar5;\n                        piVar5 = piVar5 + 1;\n                        piVar6 = piVar6 + 1;\n                    }\n                    *piVar6 = *piVar5;\n                    fcn.01008690(param_1);\n                }\n                else if ((iVar1 != 3) || (iVar1 = fcn.010078be(param_1),  iVar1 == 0)) {\n                    return 0xffffffff;\n                }\n                param_1[2999] = 2;\n            }\n            for (; (0 < param_1[0xbb5] && (0 < param_2)); param_2 = param_2 - iVar1) {\n                iVar1 = param_1[0xbb5];\n                if (param_2 <= param_1[0xbb5]) {\n                    iVar1 = param_2;\n                }\n                if (iVar1 == 0) {\n                    return 0xffffffff;\n                }\n                iVar3 = param_1[0xbb6];\n                iVar4 = param_1[0xbb0];\n                if (iVar3 == 2) {\n                    iVar3 = fcn.010083ed(param_1, iVar4, iVar1);\n                }\n                else if (iVar3 == 1) {\n                    iVar3 = fcn.01007db7(param_1, iVar4, iVar1);\n                }\n                else if (iVar3 == 3) {\n                    iVar3 = fcn.01007840(param_1, iVar4, iVar1);\n                }\n                else {\n                    iVar3 = -1;\n                }\n                if (iVar3 != 0) {\n                    return 0xffffffff;\n                }\n                param_1[0xbb5] = param_1[0xbb5] - iVar1;\n                piStack4 = piStack4 + iVar1;\n            }\n            if (param_1[0xbb5] == 0) {\n                param_1[2999] = 1;\n            }\n            if (param_2 == 0) {\n                fcn.01007723();\n            }\n            piVar5 = piStack4;\n        } while (0 < param_2);\n    }\n    iVar1 = param_1[0xbb0];\n    if (iVar1 == 0) {\n        iVar1 = param_1[1];\n    }\n    fcn.01008438(param_1, piVar5, (iVar1 - piVar5) + *param_1);\n    return piVar5;\n}\n",
        "token_count": 1325
    },
    "01007723": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.01007723(int32_t param_1)\n\n{\n    ushort *puVar1;\n    uchar uVar2;\n    uchar uVar3;\n    ushort *puVar4;\n    ushort uVar5;\n    \n    if (*(param_1 + 0x2ed8) != 3) {\n        puVar4 = *(param_1 + 0x2b04);\n        puVar1 = puVar4 + 2;\n        if (puVar1 < *(param_1 + 0x2b08) || puVar1 == *(param_1 + 0x2b08)) {\n            uVar2 = *(puVar4 + 3);\n            uVar5 = *puVar4;\n            uVar3 = *(puVar4 + 1);\n            *(param_1 + 0x2eb4) = 0x10;\n            *(param_1 + 0x2b04) = puVar1;\n            *(param_1 + 0x2eb0) = CONCAT31(CONCAT21(uVar5, uVar2), uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "0100791e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0100791e(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t *in_EDX;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    cVar4 = *(in_EDX + 0xbad);\n    puVar3 = in_EDX[0xac2];\n    var_4h = in_EDX[0xbac];\n    arg_ch = arg_ch + arg_8h;\n    puVar11 = in_EDX[0xac1];\n    iVar8 = arg_8h;\n    if (arg_8h < arg_ch) {\n        do {\n            iVar8 = *(in_EDX + (var_4h >> 0x16) * 2 + 0x18);\n            if (iVar8 < 0) {\n                uVar7 = 0x200000;\n                do {\n                    if ((var_4h & uVar7) == 0) {\n                        iVar2 = *(in_EDX + (0x38f - iVar8));\n                    }\n                    else {\n                        iVar2 = *(in_EDX + iVar8 * -4 + 0xe3e);\n                    }\n                    iVar8 = iVar2;\n                    uVar7 = uVar7 >> 1;\n                } while (iVar8 < 0);\n            }\n            if (puVar3 <= puVar11) {\n                return -1;\n            }\n            uVar1 = *(iVar8 + 0xa18 + in_EDX);\n            var_4h = var_4h << (uVar1 & 0x1f);\n            cVar4 = cVar4 - uVar1;\n            if (cVar4 < '\\x01') {\n                var_4h = var_4h | *puVar11 << (-cVar4 & 0x1fU);\n                puVar11 = puVar11 + 1;\n                cVar4 = cVar4 + '\\x10';\n            }\n            uVar7 = iVar8 - 0x100;\n            if (uVar7 < 0) {\n                *(arg_8h + *in_EDX) = uVar7;\n                *(in_EDX[1] + *in_EDX + arg_8h) = uVar7;\n                iVar8 = arg_8h + 1;\n            }\n            else {\n                var_8h = uVar7 & 7;\n                if (var_8h == 7) {\n                    iVar8 = *(in_EDX + (var_4h >> 0x18) * 2 + 0x818);\n                    if (iVar8 < 0) {\n                        uVar6 = 0x800000;\n                        do {\n                            if ((var_4h & uVar6) == 0) {\n                                iVar2 = *(in_EDX + (0x8cf - iVar8));\n                            }\n                            else {\n                                iVar2 = *(in_EDX + iVar8 * -4 + 0x233e);\n                            }\n                            iVar8 = iVar2;\n                            uVar6 = uVar6 >> 1;\n                        } while (iVar8 < 0);\n                    }\n                    uVar1 = *(iVar8 + 0xcb8 + in_EDX);\n                    var_4h = var_4h << (uVar1 & 0x1f);\n                    cVar4 = cVar4 - uVar1;\n                    if (cVar4 < '\\x01') {\n                        var_4h = var_4h | *puVar11 << (-cVar4 & 0x1fU);\n                        puVar11 = puVar11 + 1;\n                        cVar4 = cVar4 + '\\x10';\n                    }\n                    var_8h = iVar8 + 7;\n                }\n                cVar5 = uVar7 >> 3;\n                if (cVar5 < '\\x03') {\n                    iVar9 = in_EDX[cVar5 + 3];\n                    if (cVar5 != '\\0') {\n                        in_EDX[cVar5 + 3] = in_EDX[3];\n                        goto code_r0x01007afc;\n                    }\n                }\n                else {\n                    if (cVar5 < '\\x04') {\n                        iVar9 = 1;\n                    }\n                    else {\n                        iVar8 = cVar5;\n                        uVar7 = var_4h >> (0x20 - *(iVar8 + 0x10014b0) & 0x1f);\n                        var_4h = var_4h << (*(iVar8 + 0x10014b0) & 0x1f);\n                        cVar5 = cVar4 - *(iVar8 + 0x10014b0);\n                        puVar10 = puVar11;\n                        cVar4 = cVar5;\n                        if (cVar5 < '\\x01') {\n                            cVar4 = cVar5 + '\\x10';\n                            var_4h = var_4h | *puVar11 << (-cVar5 & 0x1fU);\n                            puVar10 = puVar11 + 1;\n                            if (cVar4 < '\\x01') {\n                                var_4h = var_4h | *puVar10 << (-cVar4 & 0x1fU);\n                                puVar10 = puVar11 + 2;\n                                cVar4 = cVar5 + ' ';\n                            }\n                        }\n                        iVar9 = uVar7 + *(iVar8 * 4 + 0x10014e8);\n                        puVar11 = puVar10;\n                    }\n                    in_EDX[5] = in_EDX[4];\n                    in_EDX[4] = in_EDX[3];\ncode_r0x01007afc:\n                    in_EDX[3] = iVar9;\n                }\n                var_8h = var_8h + 2;\n                iVar8 = arg_8h;\n                arg_8h = arg_8h - iVar9;\n                do {\n                    *(*in_EDX + iVar8) = *((in_EDX[2] & arg_8h) + *in_EDX);\n                    if (iVar8 < 0x101) {\n                        *(in_EDX[1] + *in_EDX + iVar8) = *(*in_EDX + iVar8);\n                    }\n                    iVar8 = iVar8 + 1;\n                    arg_8h = arg_8h + 1;\n                    var_8h = var_8h + -1;\n                } while (0 < var_8h);\n            }\n            arg_8h = iVar8;\n        } while (iVar8 < arg_ch);\n    }\n    *(in_EDX + 0xbad) = cVar4;\n    in_EDX[0xbac] = var_4h;\n    in_EDX[0xac1] = puVar11;\n    return iVar8;\n}\n",
        "token_count": 1590
    },
    "01007b75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01007b75(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h._3_1_ = *(arg_8h + 0xbad);\n    puVar2 = arg_8h[0xac2];\n    puVar9 = arg_8h[0xac1];\n    iVar5 = arg_10h + arg_ch;\n    arg_10h = arg_8h[0xbac];\n    if (arg_ch < iVar5) {\n        do {\n            iVar7 = *(arg_8h + (arg_10h >> 0x16) * 2 + 0x18);\n            if (iVar7 < 0) {\n                uVar3 = 0x200000;\n                do {\n                    if ((arg_10h & uVar3) == 0) {\n                        iVar1 = *(arg_8h + (0x38f - iVar7));\n                    }\n                    else {\n                        iVar1 = *(arg_8h + iVar7 * -4 + 0xe3e);\n                    }\n                    iVar7 = iVar1;\n                    uVar3 = uVar3 >> 1;\n                } while (iVar7 < 0);\n            }\n            if (puVar2 <= puVar9) {\n                return -1;\n            }\n            arg_10h = arg_10h << (*(iVar7 + 0xa18 + arg_8h) & 0x1f);\n            arg_8h._3_1_ = arg_8h._3_1_ - *(iVar7 + 0xa18 + arg_8h);\n            if (arg_8h._3_1_ < '\\x01') {\n                arg_10h = arg_10h | *puVar9 << (-arg_8h._3_1_ & 0x1fU);\n                puVar9 = puVar9 + 1;\n                arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n            }\n            uVar3 = iVar7 - 0x100;\n            if (uVar3 < 0) {\n                *(arg_ch + *arg_8h) = uVar3;\n                arg_ch = arg_ch + 1;\n            }\n            else {\n                var_4h = uVar3 & 7;\n                if (var_4h == 7) {\n                    iVar7 = *(arg_8h + (arg_10h >> 0x18) * 2 + 0x818);\n                    if (iVar7 < 0) {\n                        uVar4 = 0x800000;\n                        do {\n                            if ((arg_10h & uVar4) == 0) {\n                                iVar1 = *(arg_8h + (0x8cf - iVar7));\n                            }\n                            else {\n                                iVar1 = *(arg_8h + iVar7 * -4 + 0x233e);\n                            }\n                            iVar7 = iVar1;\n                            uVar4 = uVar4 >> 1;\n                        } while (iVar7 < 0);\n                    }\n                    arg_10h = arg_10h << (*(iVar7 + 0xcb8 + arg_8h) & 0x1f);\n                    arg_8h._3_1_ = arg_8h._3_1_ - *(iVar7 + 0xcb8 + arg_8h);\n                    if (arg_8h._3_1_ < '\\x01') {\n                        arg_10h = arg_10h | *puVar9 << (-arg_8h._3_1_ & 0x1fU);\n                        puVar9 = puVar9 + 1;\n                        arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                    }\n                    var_4h = iVar7 + 7;\n                }\n                cVar6 = uVar3 >> 3;\n                if (cVar6 < '\\x03') {\n                    iVar7 = arg_8h[cVar6 + 3];\n                    if (cVar6 != '\\0') {\n                        arg_8h[cVar6 + 3] = arg_8h[3];\n                        goto code_r0x01007d55;\n                    }\n                }\n                else {\n                    iVar7 = *0x10014f4;\n                    if ('\\x03' < cVar6) {\n                        iVar7 = cVar6;\n                        uVar3 = arg_10h >> (0x20 - *(iVar7 + 0x10014b0) & 0x1f);\n                        cVar6 = arg_8h._3_1_ - *(iVar7 + 0x10014b0);\n                        arg_10h = arg_10h << (*(iVar7 + 0x10014b0) & 0x1f);\n                        puVar8 = puVar9;\n                        arg_8h._3_1_ = cVar6;\n                        if (cVar6 < '\\x01') {\n                            arg_8h._3_1_ = cVar6 + '\\x10';\n                            arg_10h = arg_10h | *puVar9 << (-cVar6 & 0x1fU);\n                            puVar8 = puVar9 + 1;\n                            if (arg_8h._3_1_ < '\\x01') {\n                                arg_10h = arg_10h | *puVar8 << (-arg_8h._3_1_ & 0x1fU);\n                                puVar8 = puVar9 + 2;\n                                arg_8h._3_1_ = cVar6 + ' ';\n                            }\n                        }\n                        puVar9 = puVar8;\n                        iVar7 = uVar3 + *(iVar7 * 4 + 0x10014e8);\n                    }\n                    arg_8h[5] = arg_8h[4];\n                    arg_8h[4] = arg_8h[3];\ncode_r0x01007d55:\n                    arg_8h[3] = iVar7;\n                }\n                var_4h = var_4h + 2;\n                uVar3 = arg_ch - iVar7 & arg_8h[2];\n                do {\n                    *(*arg_8h + arg_ch) = *(*arg_8h + uVar3);\n                    arg_ch = arg_ch + 1;\n                    uVar3 = uVar3 + 1;\n                    var_4h = var_4h + -1;\n                } while (0 < var_4h);\n            }\n        } while (arg_ch < iVar5);\n    }\n    *(arg_8h + 0xbad) = arg_8h._3_1_;\n    arg_8h[0xbac] = arg_10h;\n    arg_8h[0xac1] = puVar9;\n    arg_8h[0xbb0] = arg_8h[2] & arg_ch;\n    return arg_ch - iVar5;\n}\n",
        "token_count": 1629
    },
    "01007db7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01007db7(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    uVar2 = CONCAT44(arg_8h, arg_ch);\n    if (arg_ch < 0x101) {\n        iVar1 = 0x101 - arg_ch;\n        if (arg_10h <= 0x101 - arg_ch) {\n            iVar1 = arg_10h;\n        }\n        uVar2 = fcn.0100791e(arg_ch, iVar1);\n        arg_10h = arg_10h + (arg_ch - uVar2);\n        *((uVar2 >> 0x20) + 0x2ec0) = uVar2;\n        if (arg_10h < 1) {\n            return arg_10h;\n        }\n    }\n    iVar1 = fcn.01007b75(uVar2 >> 0x20, uVar2, arg_10h);\n    return iVar1;\n}\n",
        "token_count": 234
    },
    "01007e02": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01007e02(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    int16_t iVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *in_EDX;\n    char cVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint16_t *puVar13;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    cVar6 = *(in_EDX + 0xbad);\n    puVar4 = in_EDX[0xac2];\n    iVar5 = *in_EDX;\n    var_4h = in_EDX[0xbac];\n    iVar11 = arg_ch + arg_8h;\n    puVar13 = in_EDX[0xac1];\n    if (arg_8h < iVar11) {\n        do {\n            iVar12 = *(in_EDX + (var_4h >> 0x16) * 2 + 0x18);\n            if (iVar12 < 0) {\n                uVar8 = 0x200000;\n                do {\n                    if ((var_4h & uVar8) == 0) {\n                        iVar3 = *(in_EDX + (0x38f - iVar12));\n                    }\n                    else {\n                        iVar3 = *(in_EDX + iVar12 * -4 + 0xe3e);\n                    }\n                    iVar12 = iVar3;\n                    uVar8 = uVar8 >> 1;\n                } while (iVar12 < 0);\n            }\n            if (puVar4 <= puVar13) {\n                return -1;\n            }\n            uVar1 = *(iVar12 + 0xa18 + in_EDX);\n            var_4h = var_4h << (uVar1 & 0x1f);\n            cVar6 = cVar6 - uVar1;\n            if (cVar6 < '\\x01') {\n                var_4h = var_4h | *puVar13 << (-cVar6 & 0x1fU);\n                puVar13 = puVar13 + 1;\n                cVar6 = cVar6 + '\\x10';\n            }\n            uVar8 = iVar12 - 0x100;\n            if (uVar8 < 0) {\n                *(iVar5 + arg_8h) = uVar8;\n                *(in_EDX[1] + iVar5 + arg_8h) = uVar8;\n                arg_8h = arg_8h + 1;\n            }\n            else {\n                var_8h = uVar8 & 7;\n                if (var_8h == 7) {\n                    iVar12 = *(in_EDX + (var_4h >> 0x18) * 2 + 0x818);\n                    if (iVar12 < 0) {\n                        uVar7 = 0x800000;\n                        do {\n                            if ((var_4h & uVar7) == 0) {\n                                iVar3 = *(in_EDX + (0x8cf - iVar12));\n                            }\n                            else {\n                                iVar3 = *(in_EDX + iVar12 * -4 + 0x233e);\n                            }\n                            iVar12 = iVar3;\n                            uVar7 = uVar7 >> 1;\n                        } while (iVar12 < 0);\n                    }\n                    uVar1 = *(iVar12 + 0xcb8 + in_EDX);\n                    var_4h = var_4h << (uVar1 & 0x1f);\n                    cVar6 = cVar6 - uVar1;\n                    if (cVar6 < '\\x01') {\n                        var_4h = var_4h | *puVar13 << (-cVar6 & 0x1fU);\n                        puVar13 = puVar13 + 1;\n                        cVar6 = cVar6 + '\\x10';\n                    }\n                    var_8h = iVar12 + 7;\n                }\n                cVar10 = uVar8 >> 3;\n                iVar12 = cVar10;\n                if (cVar10 < '\\x03') {\n                    iVar9 = in_EDX[iVar12 + 3];\n                    if (cVar10 != '\\0') {\n                        in_EDX[iVar12 + 3] = in_EDX[3];\n                        goto code_r0x0100806f;\n                    }\n                }\n                else {\n                    uVar1 = *(iVar12 + 0x10014b0);\n                    if (uVar1 < 3) {\n                        if (uVar1 == 0) {\n                            iVar9 = 1;\n                        }\n                        else {\n                            uVar8 = var_4h >> (0x20 - uVar1 & 0x1f);\n                            var_4h = var_4h << (uVar1 & 0x1f);\n                            cVar6 = cVar6 - *(iVar12 + 0x10014b0);\n                            if (cVar6 < '\\x01') {\n                                var_4h = var_4h | *puVar13 << (-cVar6 & 0x1fU);\n                                puVar13 = puVar13 + 1;\n                                cVar6 = cVar6 + '\\x10';\n                            }\n                            iVar9 = uVar8 + *(iVar12 * 4 + 0x10014e8);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 3) {\n                            uVar8 = 0;\n                        }\n                        else {\n                            uVar8 = var_4h >> (0x23 - uVar1 & 0x1f);\n                            var_4h = var_4h << (uVar1 - 3 & 0x1f);\n                            cVar6 = cVar6 + ('\\x03' - *(iVar12 + 0x10014b0));\n                            if (cVar6 < '\\x01') {\n                                var_4h = var_4h | *puVar13 << (-cVar6 & 0x1fU);\n                                puVar13 = puVar13 + 1;\n                                cVar6 = cVar6 + '\\x10';\n                            }\n                        }\n                        iVar9 = *((var_4h >> 0x19) + 0xdb4 + in_EDX);\n                        var_4h = var_4h << (*(iVar9 + 0xe34 + in_EDX) & 0x1f);\n                        cVar6 = cVar6 - *(iVar9 + 0xe34 + in_EDX);\n                        if (cVar6 < '\\x01') {\n                            var_4h = var_4h | *puVar13 << (-cVar6 & 0x1fU);\n                            puVar13 = puVar13 + 1;\n                            cVar6 = cVar6 + '\\x10';\n                        }\n                        iVar9 = *(iVar12 * 4 + 0x10014e8) + uVar8 * 8 + iVar9;\n                    }\n                    in_EDX[5] = in_EDX[4];\n                    in_EDX[4] = in_EDX[3];\ncode_r0x0100806f:\n                    in_EDX[3] = iVar9;\n                }\n                var_8h = var_8h + 2;\n                arg_ch = arg_8h - iVar9;\n                do {\n                    uVar2 = *((arg_ch & in_EDX[2]) + iVar5);\n                    *(iVar5 + arg_8h) = uVar2;\n                    if (arg_8h < 0x101) {\n                        *(in_EDX[1] + iVar5 + arg_8h) = uVar2;\n                    }\n                    arg_8h = arg_8h + 1;\n                    arg_ch = arg_ch + 1;\n                    var_8h = var_8h + -1;\n                } while (0 < var_8h);\n            }\n        } while (arg_8h < iVar11);\n    }\n    *(in_EDX + 0xbad) = cVar6;\n    in_EDX[0xbac] = var_4h;\n    in_EDX[0xac1] = puVar13;\n    return arg_8h;\n}\n",
        "token_count": 1862
    },
    "010080e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010080e2(int32_t *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar3 = arg_8h[0xac2];\n    arg_8h._3_1_ = *(arg_8h + 0xbad);\n    iVar4 = *arg_8h;\n    arg_10h = arg_10h + arg_ch;\n    puVar11 = arg_8h[0xac1];\n    uVar5 = arg_8h[0xbac];\n    uVar7 = arg_ch;\n    if (arg_ch < arg_10h) {\n        do {\n            iVar10 = *(arg_8h + (uVar5 >> 0x16) * 2 + 0x18);\n            if (iVar10 < 0) {\n                uVar7 = 0x200000;\n                do {\n                    if ((uVar5 & uVar7) == 0) {\n                        iVar2 = *(arg_8h + (0x38f - iVar10));\n                    }\n                    else {\n                        iVar2 = *(arg_8h + iVar10 * -4 + 0xe3e);\n                    }\n                    iVar10 = iVar2;\n                    uVar7 = uVar7 >> 1;\n                } while (iVar10 < 0);\n            }\n            if (puVar3 <= puVar11) {\n                return -1;\n            }\n            uVar1 = *(iVar10 + 0xa18 + arg_8h);\n            arg_8h._3_1_ = arg_8h._3_1_ - uVar1;\n            uVar5 = uVar5 << (uVar1 & 0x1f);\n            if (arg_8h._3_1_ < '\\x01') {\n                uVar5 = uVar5 | *puVar11 << (-arg_8h._3_1_ & 0x1fU);\n                puVar11 = puVar11 + 1;\n                arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n            }\n            uVar7 = iVar10 - 0x100;\n            if (uVar7 < 0) {\n                *(iVar4 + arg_ch) = uVar7;\n                uVar7 = arg_ch + 1;\n            }\n            else {\n                var_4h = uVar7 & 7;\n                if (var_4h == 7) {\n                    iVar10 = *(arg_8h + (uVar5 >> 0x18) * 2 + 0x818);\n                    if (iVar10 < 0) {\n                        uVar8 = 0x800000;\n                        do {\n                            if ((uVar5 & uVar8) == 0) {\n                                iVar2 = *(arg_8h + (0x8cf - iVar10));\n                            }\n                            else {\n                                iVar2 = *(arg_8h + iVar10 * -4 + 0x233e);\n                            }\n                            iVar10 = iVar2;\n                            uVar8 = uVar8 >> 1;\n                        } while (iVar10 < 0);\n                    }\n                    uVar1 = *(iVar10 + 0xcb8 + arg_8h);\n                    arg_8h._3_1_ = arg_8h._3_1_ - uVar1;\n                    uVar5 = uVar5 << (uVar1 & 0x1f);\n                    if (arg_8h._3_1_ < '\\x01') {\n                        uVar5 = uVar5 | *puVar11 << (-arg_8h._3_1_ & 0x1fU);\n                        puVar11 = puVar11 + 1;\n                        arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                    }\n                    var_4h = iVar10 + 7;\n                }\n                cVar6 = uVar7 >> 3;\n                if (cVar6 < '\\x03') {\n                    iVar10 = arg_8h[cVar6 + 3];\n                    if (cVar6 != '\\0') {\n                        arg_8h[cVar6 + 3] = arg_8h[3];\n                        goto code_r0x01008382;\n                    }\n                }\n                else {\n                    iVar9 = cVar6;\n                    uVar1 = *(iVar9 + 0x10014b0);\n                    if (uVar1 < 3) {\n                        if (uVar1 == 0) {\n                            iVar10 = *(iVar9 * 4 + 0x10014e8);\n                        }\n                        else {\n                            uVar7 = uVar5 >> (0x20 - uVar1 & 0x1f);\n                            uVar5 = uVar5 << (uVar1 & 0x1f);\n                            arg_8h._3_1_ = arg_8h._3_1_ - *(iVar9 + 0x10014b0);\n                            if (arg_8h._3_1_ < '\\x01') {\n                                uVar5 = uVar5 | *puVar11 << (-arg_8h._3_1_ & 0x1fU);\n                                puVar11 = puVar11 + 1;\n                                arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                            }\n                            iVar10 = uVar7 + *(iVar9 * 4 + 0x10014e8);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 3) {\n                            uVar7 = 0;\n                        }\n                        else {\n                            uVar7 = uVar5 >> (0x23 - uVar1 & 0x1f);\n                            uVar5 = uVar5 << (uVar1 - 3 & 0x1f);\n                            arg_8h._3_1_ = arg_8h._3_1_ + ('\\x03' - uVar1);\n                            if (arg_8h._3_1_ < '\\x01') {\n                                uVar5 = uVar5 | *puVar11 << (-arg_8h._3_1_ & 0x1fU);\n                                puVar11 = puVar11 + 1;\n                                arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                            }\n                        }\n                        iVar10 = *((uVar5 >> 0x19) + 0xdb4 + arg_8h);\n                        uVar5 = uVar5 << (*(iVar10 + 0xe34 + arg_8h) & 0x1f);\n                        arg_8h._3_1_ = arg_8h._3_1_ - *(iVar10 + 0xe34 + arg_8h);\n                        if (arg_8h._3_1_ < '\\x01') {\n                            uVar5 = uVar5 | *puVar11 << (-arg_8h._3_1_ & 0x1fU);\n                            puVar11 = puVar11 + 1;\n                            arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                        }\n                        iVar10 = *(iVar9 * 4 + 0x10014e8) + uVar7 * 8 + iVar10;\n                    }\n                    arg_8h[5] = arg_8h[4];\n                    arg_8h[4] = arg_8h[3];\ncode_r0x01008382:\n                    arg_8h[3] = iVar10;\n                }\n                var_4h = var_4h + 2;\n                uVar7 = arg_ch;\n                arg_ch = (arg_ch - iVar10 & arg_8h[2]) + iVar4;\n                do {\n                    *(iVar4 + uVar7) = *arg_ch;\n                    uVar7 = uVar7 + 1;\n                    arg_ch = arg_ch + 1;\n                    var_4h = var_4h + -1;\n                } while (0 < var_4h);\n            }\n            arg_ch = uVar7;\n        } while (uVar7 < arg_10h);\n    }\n    arg_8h[0xbac] = uVar5;\n    arg_8h[0xbb0] = arg_8h[2] & uVar7;\n    *(arg_8h + 0xbad) = arg_8h._3_1_;\n    arg_8h[0xac1] = puVar11;\n    return uVar7 - arg_10h;\n}\n",
        "token_count": 2018
    },
    "010083ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010083ed(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    uVar2 = CONCAT44(arg_8h, arg_ch);\n    if (arg_ch < 0x101) {\n        iVar1 = 0x101 - arg_ch;\n        if (arg_10h <= 0x101 - arg_ch) {\n            iVar1 = arg_10h;\n        }\n        uVar2 = fcn.01007e02(arg_ch, iVar1);\n        arg_10h = arg_10h + (arg_ch - uVar2);\n        *((uVar2 >> 0x20) + 0x2ec0) = uVar2;\n        if (arg_10h < 1) {\n            return arg_10h;\n        }\n    }\n    iVar1 = fcn.010080e2(uVar2 >> 0x20, uVar2, arg_10h);\n    return iVar1;\n}\n",
        "token_count": 233
    },
    "01008438": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.01008438(int32_t param_1, uint32_t param_2, uint *param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    if (*(param_1 + 0x2b0c) != NULL) {\n        puVar2 = *(param_1 + 0x2b0c);\n        for (uVar1 = param_2 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = *param_3;\n            param_3 = param_3 + 1;\n            puVar2 = puVar2 + 1;\n        }\n        for (uVar1 = param_2 & 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = *param_3;\n            param_3 = param_3 + 1;\n            puVar2 = puVar2 + 1;\n        }\n        if ((*(param_1 + 0x2ec4) != 0) && (*(param_1 + 0x2ecc) < 0x8000)) {\n            fcn.01007461(param_1, *(param_1 + 0x2b0c), param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "01008485": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.01008485(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uchar uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    bool bVar7;\n    uint var_2d8h;\n    uint var_d8h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    iVar5 = 0;\n    do {\n        uVar1 = fcn.0100781c();\n        *(&var_1ch + iVar5) = uVar1;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 0x14);\n    if (*(arg_8h + 0x2ebc) == 0) {\n        fcn.0100878e(arg_8h, 0x14, &var_1ch, 8, &var_2d8h, &var_d8h);\n        iVar5 = 0;\n        if (0 < arg_ch) {\n            do {\n                iVar2 = *(&var_2d8h + (*(arg_8h + 0x2eb0) >> 0x18) * 2);\n                if (iVar2 < 0) {\n                    uVar3 = 0x800000;\n                    do {\n                        if ((uVar3 & *(arg_8h + 0x2eb0)) == 0) {\n                            iVar2 = *(&var_d8h + -iVar2);\n                        }\n                        else {\n                            iVar2 = *(&var_d8h + -iVar2 * 4 + 2);\n                        }\n                        uVar3 = uVar3 >> 1;\n                    } while (iVar2 < 0);\n                }\n                var_4h = iVar2;\n                fcn.01007779(arg_8h, *(&var_1ch + iVar2));\n                if (*(arg_8h + 0x2ebc) != 0) {\n                    return false;\n                }\n                if (iVar2 == 0x11) {\n                    uVar3 = fcn.0100781c(arg_8h, 4);\n                    uVar3 = (uVar3 & 0xff) + 4;\ncode_r0x01008557:\n                    if (arg_ch <= uVar3 + iVar5) {\n                        uVar3 = arg_ch - iVar5;\n                    }\n                    if (0 < uVar3) {\n                        puVar6 = iVar5 + arg_14h;\n                        for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                            *puVar6 = 0;\n                            puVar6 = puVar6 + 1;\n                        }\n                        for (uVar4 = uVar3 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                            *puVar6 = 0;\n                            puVar6 = puVar6 + 1;\n                        }\n                        iVar5 = iVar5 + uVar3;\n                    }\n                    iVar5 = iVar5 + -1;\n                }\n                else {\n                    if (iVar2 == 0x12) {\n                        uVar3 = fcn.0100781c(arg_8h, 5);\n                        uVar3 = (uVar3 & 0xff) + 0x14;\n                        goto code_r0x01008557;\n                    }\n                    if (iVar2 == 0x13) {\n                        uVar3 = fcn.0100781c(arg_8h, 1);\n                        uVar3 = (uVar3 & 0xff) + 4;\n                        var_4h = uVar3;\n                        if (arg_ch <= uVar3 + iVar5) {\n                            uVar3 = arg_ch - iVar5;\n                            var_4h = uVar3;\n                        }\n                        iVar2 = *(&var_2d8h + (*(arg_8h + 0x2eb0) >> 0x18) * 2);\n                        if (iVar2 < 0) {\n                            uVar4 = 0x800000;\n                            do {\n                                if ((uVar4 & *(arg_8h + 0x2eb0)) == 0) {\n                                    iVar2 = *(&var_d8h + -iVar2);\n                                }\n                                else {\n                                    iVar2 = *(&var_d8h + -iVar2 * 4 + 2);\n                                }\n                                uVar4 = uVar4 >> 1;\n                            } while (iVar2 < 0);\n                        }\n                        var_4h = uVar3;\n                        fcn.01007779(arg_8h, *(&var_1ch + iVar2));\n                        uVar1 = *((*(iVar5 + arg_10h) - iVar2) + 0x10015c5);\n                        if (0 < uVar3) {\n                            puVar6 = iVar5 + arg_14h;\n                            for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                                *puVar6 = CONCAT22(CONCAT11(uVar1, uVar1), CONCAT11(uVar1, uVar1));\n                                puVar6 = puVar6 + 1;\n                            }\n                            iVar5 = iVar5 + var_4h;\n                            for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n                                *puVar6 = uVar1;\n                                puVar6 = puVar6 + 1;\n                            }\n                        }\n                        iVar5 = iVar5 + -1;\n                    }\n                    else {\n                        *(iVar5 + arg_14h) = *((*(iVar5 + arg_10h) - var_4h) + 0x10015c5);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < arg_ch);\n        }\n        bVar7 = *(arg_8h + 0x2ebc) == 0;\n    }\n    else {\n        bVar7 = false;\n    }\n    return bVar7;\n}\n",
        "token_count": 1384
    },
    "01008747": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.01008747(int32_t param_1)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    iVar2 = 0;\n    do {\n        uVar1 = fcn.0100781c();\n        *(param_1 + 0xe34 + iVar2) = uVar1;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 8);\n    if (*(param_1 + 0x2ebc) == 0) {\n        iVar2 = fcn.0100898b(param_1, param_1 + 0xe34, param_1 + 0xdb4);\n        bVar3 = iVar2 != 0;\n    }\n    else {\n        bVar3 = false;\n    }\n    return bVar3;\n}\n",
        "token_count": 182
    },
    "01001ddf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.01001ddf(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpPathName;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpPathName, 0x104);\n    if (iVar1 != 0) {\n        fcn.01005b32(&lpPathName, 0x1001290);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, &lpPathName);\n        iVar1 = (*_sym.imp.KERNEL32.dll__lopen)(&lpPathName, 0x40);\n        if (iVar1 != -1) {\n            uVar2 = (*_sym.imp.KERNEL32.dll__llseek)(iVar1, 0, 2);\n            (*_sym.imp.KERNEL32.dll__lclose)(iVar1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "01001f4b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.01001f4b(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 == 0xffffffff) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(unaff_retaddr, 0);\n    }\n    else {\n        uVar1 = uVar1 & 0x10;\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "01002f7a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.01002f7a(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack260 [260];\n    \n    iVar3 = 0;\n    do {\n        (*_sym.imp.USER32.dll_wsprintfA)(auStack260, 0x1001348, iVar3);\n        iVar3 = iVar3 + 1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(param_2, param_1);\n        fcn.01005b32(param_2, &stack0xfffffef4);\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(param_2);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_2);\n        pcVar1 = _sym.imp.KERNEL32.dll_CreateDirectoryA;\n        if (iVar2 == -1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_2, 0);\n            if (iVar3 != 0) {\n                *0x100b880 = 1;\n                return true;\n            }\n            break;\n        }\n    } while (iVar3 < 400);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(param_1, 0x1001344, 0, param_2);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_2);\n        (*pcVar1)(param_2, 0);\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 352
    },
    "0100366a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100366a(int32_t arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_10ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 1;\n    var_8h = 0;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&var_10ch, 0x100ac44);\n    fcn.01005b32(&var_10ch, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)(&var_10ch, 0x40000000, 0, 0, 2, 0x80, 0);\n    if (iVar1 == -1) {\n        *0x100aa5c = 0x80070052;\n        var_4h = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1, arg_14h, arg_8h, &var_8h, 0);\n        if ((iVar2 == 0) || (arg_8h != var_8h)) {\n            *0x100aa5c = 0x80070052;\n            var_4h = 0;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 336
    },
    "0100370f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0100370f(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint lpLibFileName;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpLibFileName, 0x100ac44);\n    fcn.01005b32(&lpLibFileName, arg_8h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&lpLibFileName);\n    if ((uVar1 == 0xffffffff) || ((uVar1 & 0x10) != 0)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(arg_8h);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(&lpLibFileName, 0, 8);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "01003e60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.01003e60(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar1 + 0x14);\n    if (iVar1 == 0) {\n        fcn.010038cc(0, 0x4b5, 0, 0, 0x10, 0);\n        *0x100aa5c = fcn.01003547();\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar1, param_1);\n        fcn.01005b32(iVar1, 0x10013c4);\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(iVar1, 0x40000000, 0, 0, 1, 0x4000080, 0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(iVar1);\n        if (iVar2 != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n            if ((uVar3 != 0xffffffff) && ((uVar3 & 0x10) != 0)) {\n                *0x100aa5c = 0;\n                return 1;\n            }\n        }\n        *0x100aa5c = fcn.01003547();\n    }\n    return 0;\n}\n",
        "token_count": 366
    },
    "01004161": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.01004161(uint hModule, uint lpName, uint hWndParent, uint lpDialogFunc, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, lpName, 5);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, iVar1),  iVar1 != 0)) {\n        if (arg_18h == 0) {\n            arg_18h = 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_DialogBoxIndirectParamA)(hModule, iVar1, hWndParent, lpDialogFunc, arg_18h);\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar1);\n        if (iVar2 != -1) {\n            return iVar2;\n        }\n    }\n    fcn.010038cc(0, 0x4fb, 0, 0, 0x10, 0);\n    return arg_1ch;\n}\n",
        "token_count": 257
    },
    "01004e56": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01004e56(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint uVar2;\n    uint uType;\n    uint arg_1ch;\n    \n    if (arg_ch != 0x10) {\n        if (arg_ch == 0x110) {\n            uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            fcn.01002969(arg_8h, uVar2);\n            (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x100abb4);\n            (*_sym.imp.USER32.dll_SendDlgItemMessageA)(arg_8h, 0x835, 0xc5, 0x103, 0);\n            if (*0x100aa64 != 1) {\n                return 1;\n            }\n            uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x836, 0);\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar2);\n            return 1;\n        }\n        if (arg_ch != 0x111) {\n            return 0;\n        }\n        if (arg_10h == 1) {\n            iVar1 = (*_sym.imp.USER32.dll_GetDlgItemTextA)(arg_8h, 0x835, 0x100ac44, 0x104);\n            if ((iVar1 == 0) || (iVar1 = fcn.0100285f(0x100ac44),  iVar1 == 0)) {\n                arg_1ch = 0;\n                uType = 0x10;\n                uVar2 = 0;\n                arg_10h_00 = 0;\n                arg_ch_00 = 0x4bf;\n            }\n            else {\n                iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x100ac44);\n                if (iVar1 == -1) {\n                    uType = 0x54a;\n                    uVar2 = arg_8h;\n                    iVar1 = fcn.010038cc(arg_8h, 0x54a, 0x100ac44, 0, 0x20, 4);\n                    if (iVar1 != 6) {\n                        return 1;\n                    }\n                    arg_10h_00 = 0;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x100ac44);\n                    if (iVar1 == 0) {\n                        arg_1ch = 0x100ac44;\n                        arg_ch_00 = 0x4cb;\n                        goto code_r0x01005001;\n                    }\n                }\n                fcn.01005b32(0x100ac44, 0x1001251);\n                iVar1 = fcn.01003e60(0x100ac44);\n                if (iVar1 != 0) {\n                    if ((*0x100ac44 != '\\\\') || (uVar2 = 0,  *0x100ac45 != '\\\\')) {\n                        uVar2 = 1;\n                    }\n                    iVar1 = fcn.01003f0d(0x100ac44, uVar2, 1);\n                    if (iVar1 != 0) {\n                        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 1);\n                    }\n                    return 1;\n                }\n                arg_1ch = 0;\n                uType = 0x10;\n                uVar2 = 0;\n                arg_10h_00 = 0;\n                arg_ch_00 = 0x4be;\n            }\ncode_r0x01005001:\n            fcn.010038cc(arg_8h, arg_ch_00, arg_10h_00, uVar2, uType, arg_1ch);\n            return 1;\n        }\n        if (arg_10h == 2) {\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n            *0x100aa5c = 0x800704c7;\n            return 1;\n        }\n        if (arg_10h != 0x836) {\n            return 1;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_LoadStringA)(*0x100b4a4, 1000, 0x100a640, 0x200);\n        if (iVar1 == 0) {\n            arg_8h = 0;\n            fcn.010038cc(0, 0x4b1, 0, 0, 0x10, 0);\n        }\n        else {\n            iVar1 = fcn.010046d4(arg_8h, 0x100a640, 0x100a338);\n            if (iVar1 == 0) {\n                return 1;\n            }\n            iVar1 = (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x835, 0x100a338);\n            if (iVar1 != 0) {\n                return 1;\n            }\n            fcn.010038cc(arg_8h, 0x4c0, 0, 0, 0x10, 0);\n        }\n    }\n    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n    return 1;\n}\n",
        "token_count": 1196
    },
    "01005bca": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.01005bca(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 == 0xffffffff) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = ~(uVar1 >> 4) & 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "01005fdb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.01005fdb(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    param_1[0x1f0] = param_1 + 0x3b7;\n    param_1[0x1f1] = param_1 + 0x12e;\n    param_1[0x1f2] = param_1 + 0x5b9;\n    param_1[499] = param_1[0xe];\n    *(param_1 + 0x7da) = *(param_1 + 0x1c);\n    *(param_1 + 0x1f7) = *(param_1 + 0x72);\n    iVar1 = (*param_1[9])(0, param_1 + 0x1ef);\n    if (iVar1 == -1) {\ncode_r0x01006064:\n        fcn.01007068(*param_1, 0xb, 0);\n        uVar2 = 0;\n    }\n    else {\n        if (param_1[10] != 0) {\n            param_1[0x1f9] = 0;\n            param_1[0x1fa] = param_1[0xe];\n            param_1[0x1fb] = param_1[0x13];\n            *(param_1 + 0x1fc) = *(param_1 + 0x28);\n            *(param_1 + 0x7f2) = *(param_1 + 0x1c);\n            param_1[0x1fd] = *(param_1 + 0x72);\n            iVar1 = (*param_1[10])(param_1 + 0x1f9);\n            if (iVar1 == -1) goto code_r0x01006064;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 427
    },
    "0100607b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100607b(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    \n    iVar2 = (*arg_8h[4])(arg_8h[0x21], arg_8h[0x12], arg_8h[0x2a]);\n    if ((arg_8h[0x2a] == iVar2) &&\n       (uVar3 = *(arg_8h[0x12] + 4) + arg_ch,  uVar3 < arg_8h[0x26] || uVar3 == arg_8h[0x26])) {\n        piVar5 = arg_8h[0x12];\n        uVar1 = *(piVar5 + 1);\n        uVar3 = (*arg_8h[4])(arg_8h[0x21], arg_8h[0xf] + arg_ch, uVar1);\n        if (uVar1 == uVar3) {\n            if (*piVar5 != 0) {\n                uVar4 = fcn.01007083(arg_8h[0xf] + arg_ch);\n                iVar2 = fcn.01007083(arg_8h[0x12] + 4, arg_8h[0x2a] + -4, uVar4);\n                piVar5 = arg_8h[0x12];\n                if (iVar2 != *piVar5) goto code_r0x01006199;\n            }\n            *(piVar5 + 1) = *(piVar5 + 1) + arg_ch;\n            if ((arg_ch == 0) && (*(arg_8h[0x12] + 6) != 0)) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = 1;\n            }\n            if (arg_8h[10] == 0) {\n                return 1;\n            }\n            arg_8h[0x1f9] = 2;\n            arg_8h[0x1fa] = arg_8h[0xe];\n            *(arg_8h + 0x1fc) = *(arg_8h + 0x2a) + -8;\n            if (*(arg_8h + 0x2a) + -8 == 0) {\n                arg_8h[0x1fb] = 0;\n            }\n            else {\n                arg_8h[0x1fb] = arg_8h[0x12] + 8;\n            }\n            arg_8h[0x1fd] = arg_8h[0xf] + arg_ch;\n            *(arg_8h + 0x1fe) = *(arg_8h[0x12] + 4);\n            arg_8h[0x1ff] = uVar4;\n            *(arg_8h + 0x200) = arg_ch;\n            iVar2 = (*arg_8h[10])(arg_8h + 0x1f9);\n            if (iVar2 != -1) {\n                return 1;\n            }\n            uVar4 = 0xb;\n            goto code_r0x0100619d;\n        }\n    }\ncode_r0x01006199:\n    uVar4 = 4;\ncode_r0x0100619d:\n    fcn.01007068(*arg_8h, uVar4, 0);\n    return 0;\n}\n",
        "token_count": 794
    },
    "010061ad": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010061ad(char *arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = (*arg_10h[7])(arg_10h[0x22], 0, 1);\n    iVar5 = (*arg_10h[4])(arg_10h[0x22], arg_8h, arg_ch);\n    if (0 < iVar5) {\n        cVar2 = arg_8h[arg_ch + -1];\n        arg_8h[arg_ch + -1] = '\\0';\n        pcVar1 = arg_8h + 1;\n        do {\n            cVar3 = *arg_8h;\n            arg_8h = arg_8h + 1;\n        } while (cVar3 != '\\0');\n        if (((arg_8h + (1 - pcVar1) < arg_ch) || (cVar2 == '\\0')) &&\n           (iVar4 = (*arg_10h[7])(arg_10h[0x22], arg_8h + iVar4 + (1 - pcVar1), 0),  iVar4 != -1)) {\n            return 1;\n        }\n    }\n    fcn.01007068(*arg_10h, 4, 0);\n    return 0;\n}\n",
        "token_count": 323
    },
    "01006234": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.01006234(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar2 = (*param_1[7])(param_1[0x22], 0, 1);\n    if (iVar2 == -1) {\n        fcn.01007068(*param_1, 4, 0);\n        uVar3 = 0;\n    }\n    else {\n        *(param_1 + 0x7de) = *(param_1 + 0x2b);\n        piVar1 = param_1 + 0x1ef;\n        *(param_1 + 0x7da) = *(param_1 + 0x1c);\n        *piVar1 = iVar2;\n        param_1[499] = param_1[0xe];\n        iVar4 = (*param_1[9])(5, piVar1);\n        if ((iVar4 == -1) ||\n           (((*(param_1 + 0x2b) = *(param_1 + 0x7de),  *(param_1 + 0x7de) != 0 && (*piVar1 != iVar2)) &&\n            (iVar2 = (*param_1[7])(param_1[0x22], *piVar1, 0),  iVar2 == -1)))) {\n            fcn.01007068(*param_1, 0xb, 0);\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 362
    },
    "0100666d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0100666d(uint *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint *arg_10h_00;\n    char *pcVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint uVar8;\n    int32_t var_24h;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_10h_00 = arg_8h;\n    pcVar2 = arg_8h + 0x5b9;\n    iVar5 = 0x6ba - pcVar2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2[arg_8h + iVar5] = cVar1;\n        pcVar2 = pcVar2 + 1;\n        puVar3 = arg_ch;\n    } while (cVar1 != '\\0');\n    do {\n        cVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar4 = puVar3 - arg_ch;\n    puVar3 = arg_8h + 0x6b9;\n    do {\n        pcVar2 = puVar3 + 1;\n        puVar3 = puVar3 + 1;\n    } while (*pcVar2 != '\\0');\n    puVar7 = arg_ch;\n    for (uVar6 = uVar4 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar3 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar3 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    iVar5 = (*arg_8h[3])(arg_8h + 0x6ba, 0x8000, 0x180);\n    arg_10h_00[0x22] = iVar5;\n    if (iVar5 != -1) {\n        iVar5 = (*arg_10h_00[3])(arg_10h_00 + 0x6ba, 0x8000, 0x180);\n        arg_10h_00[0x21] = iVar5;\n        if (iVar5 != -1) {\n            iVar5 = (*arg_10h_00[4])(arg_10h_00[0x22], &var_24h, 0x24);\n            if ((iVar5 != 0x24) || (var_24h != 0x4643534d)) {\ncode_r0x010067ee:\n                var_ch._0_2_ = 0;\n                uVar8 = 2;\n                goto code_r0x01006921;\n            }\n            if (var_ch != 0x103) {\n                uVar8 = 3;\n                goto code_r0x01006921;\n            }\n            if ((arg_14h != -1) && ((arg_10h != var_4h || (arg_14h != var_4h._2_2_)))) {\n                var_ch._0_2_ = 0;\n                uVar8 = 10;\n                goto code_r0x01006921;\n            }\n            puVar3 = &var_24h;\n            puVar7 = arg_10h_00 + 0x14;\n            for (iVar5 = 9; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            arg_8h = NULL;\n            if (((*(arg_10h_00 + 0x6e) & 4) != 0) &&\n               (iVar5 = (*arg_10h_00[4])(arg_10h_00[0x22], &arg_8h, 4),  iVar5 != 4)) goto code_r0x010067ee;\n            if (arg_10h_00[0x28] != (arg_8h & 0xffff)) {\n                if (arg_10h_00[0x13] != 0) {\n                    (*arg_10h_00[1])(arg_10h_00[0x13]);\n                    arg_10h_00[0x13] = 0;\n                }\n                uVar4 = arg_8h & 0xffff;\n                arg_10h_00[0x28] = uVar4;\n                if (uVar4 == 0) goto code_r0x010067cb;\n                iVar5 = (*arg_10h_00[2])(uVar4);\n                arg_10h_00[0x13] = iVar5;\n                if (iVar5 != 0) goto code_r0x010067cb;\ncode_r0x0100683b:\n                var_ch._0_2_ = 0;\n                uVar8 = 5;\n                goto code_r0x01006921;\n            }\ncode_r0x010067cb:\n            if ((arg_10h_00[0x28] != 0) &&\n               (iVar5 = (*arg_10h_00[4])(arg_10h_00[0x22], arg_10h_00[0x13], arg_10h_00[0x28]), \n               arg_10h_00[0x28] != iVar5)) goto code_r0x010067ee;\n            iVar5 = (arg_8h >> 0x10 & 0xff) + 8;\n            if (arg_10h_00[0x11] == 0) {\n                arg_10h_00[0x29] = iVar5;\n                iVar5 = (*arg_10h_00[2])(iVar5);\n                arg_10h_00[0x11] = iVar5;\n                if (iVar5 == 0) goto code_r0x0100683b;\ncode_r0x0100681d:\n                iVar5 = (arg_8h >> 0x18) + 8;\n                if (arg_10h_00[0x12] == 0) {\n                    arg_10h_00[0x2a] = iVar5;\n                    iVar5 = (*arg_10h_00[2])(iVar5);\n                    arg_10h_00[0x12] = iVar5;\n                    if (iVar5 == 0) goto code_r0x0100683b;\n                }\n                else if (iVar5 != arg_10h_00[0x2a]) goto code_r0x0100684b;\n                if ((*(arg_10h_00 + 0x6e) & 1) == 0) {\n                    *(arg_10h_00 + 0x1b5) = 0;\n                    *(arg_10h_00 + 0x2b6) = 0;\n                }\n                else {\n                    iVar5 = fcn.010061ad(arg_10h_00 + 0x1b5, 0x100, arg_10h_00);\n                    if (iVar5 == 0) {\n                        return false;\n                    }\n                    iVar5 = fcn.010061ad(arg_10h_00 + 0x2b6, 0x100, arg_10h_00);\n                    if (iVar5 == 0) {\n                        return false;\n                    }\n                }\n                if ((*(arg_10h_00 + 0x6e) & 2) == 0) {\n                    *(arg_10h_00 + 0x3b7) = 0;\n                    *(arg_10h_00 + 0x12e) = 0;\n                }\n                else {\n                    iVar5 = fcn.010061ad(arg_10h_00 + 0x3b7, 0x100, arg_10h_00);\n                    if (iVar5 == 0) {\n                        return false;\n                    }\n                    iVar5 = fcn.010061ad(arg_10h_00 + 0x12e, 0x100, arg_10h_00);\n                    if (iVar5 == 0) {\n                        return false;\n                    }\n                }\n                iVar5 = (*arg_10h_00[7])(arg_10h_00[0x22], 0, 1);\n                arg_10h_00[0xb] = iVar5;\n                if ((iVar5 != -1) && (iVar5 = (*arg_10h_00[7])(arg_10h_00[0x22], arg_10h_00[0x18], 0),  iVar5 != -1)) {\n                    *(arg_10h_00 + 0x2b) = *(arg_10h_00 + 0x1b);\n                    iVar5 = fcn.01005fdb(arg_10h_00);\n                    return iVar5 != 0;\n                }\n                var_ch._0_2_ = 0;\n                uVar8 = 4;\n            }\n            else {\n                if (iVar5 == arg_10h_00[0x29]) goto code_r0x0100681d;\ncode_r0x0100684b:\n                var_ch._0_2_ = 0;\n                uVar8 = 9;\n            }\n            goto code_r0x01006921;\n        }\n    }\n    var_ch._0_2_ = 0;\n    uVar8 = 1;\ncode_r0x01006921:\n    fcn.01007068(*arg_10h_00, uVar8, var_ch);\n    return false;\n}\n",
        "token_count": 2246
    },
    "010069c2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.010069c2(int32_t param_1)\n\n{\n    fcn.01006979(0xf, param_1);\n    if (*(param_1 + 0x4c) != 0) {\n        (**(param_1 + 4))(*(param_1 + 0x4c));\n    }\n    if (*(param_1 + 0x44) != 0) {\n        (**(param_1 + 4))(*(param_1 + 0x44));\n    }\n    if (*(param_1 + 0x48) != 0) {\n        (**(param_1 + 4))(*(param_1 + 0x48));\n    }\n    if (*(param_1 + 0x88) != -1) {\n        (**(param_1 + 0x18))(*(param_1 + 0x88));\n    }\n    if (*(param_1 + 0x84) != -1) {\n        (**(param_1 + 0x18))(*(param_1 + 0x84));\n    }\n    (**(param_1 + 4))(param_1);\n    return 1;\n}\n",
        "token_count": 253
    },
    "01006e88": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.01006e88(uint *arg_8h, uint arg_ch, char *arg_10h, uint noname_3, code *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_4h;\n    \n    arg_8h[0xe] = arg_20h;\n    arg_8h[9] = arg_18h;\n    arg_8h[10] = arg_1ch;\n    var_4h = 0;\n    *(arg_8h + 0xae) = 0;\n    iVar4 = arg_8h + (0x5b9 - arg_10h);\n    pcVar2 = arg_10h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2[iVar4] = cVar1;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = fcn.0100666d(arg_8h, arg_ch, 0, 0xffff);\n    if (iVar3 != 0) {\n        arg_8h[0x27] = 0;\n        arg_8h[0x24] = 0xffff;\n        do {\n            cVar1 = *arg_10h;\n            arg_10h[iVar4] = cVar1;\n            arg_10h = arg_10h + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = fcn.01006234(arg_8h);\n        if (iVar4 != 0) {\n            while (*(arg_8h + 0x2b) != 0) {\n                do {\n                    *(arg_8h + 0x2b) = *(arg_8h + 0x2b) + -1;\n                    iVar4 = fcn.01006931();\n                    if (iVar4 == 0) goto code_r0x01007035;\n                    arg_8h[0x1f0] = arg_8h + 0x2d;\n                    arg_8h[0x1ef] = arg_8h[0x1d];\n                    arg_8h[0x1f1] = arg_8h + 0x1b5;\n                    arg_8h[0x1f2] = arg_8h + 0x2b6;\n                    *(arg_8h + 0x1f5) = *(arg_8h + 0x7e);\n                    *(arg_8h + 0x7d6) = *(arg_8h + 0x20);\n                    *(arg_8h + 0x1f6) = *(arg_8h + 0x82);\n                    arg_8h[499] = arg_8h[0xe];\n                    *(arg_8h + 0x7de) = *(arg_8h + 0x1f);\n                    if ((*(arg_8h + 0x1f) & 0xfffd) == 0xfffd) {\n                        if (arg_8h[0x27] == 0) {\n                            uVar5 = 1;\n                            iVar4 = (*arg_18h)(1);\n                            if (iVar4 == -1) goto code_r0x01006f9b;\n                        }\n                        else {\ncode_r0x01006fda:\n                            uVar5 = 2;\n                            iVar4 = (*arg_18h)(2, arg_8h + 0x1ef);\n                            arg_8h[0x23] = iVar4;\n                            if (iVar4 == -1) {\ncode_r0x01006f9b:\n                                fcn.01007068(uVar5, 0xb, 0, *arg_8h);\n                                goto code_r0x01007035;\n                            }\n                            if (iVar4 == 0) {\n                                if ((*(arg_8h + 0x1f) & 0xfffe) == 0xfffe) {\n                                    *(arg_8h + 0xae) = *(arg_8h + 0xae) + 1;\n                                }\n                            }\n                            else {\n                                iVar4 = fcn.01006d39(arg_8h);\n                                if (iVar4 == 0) goto code_r0x01007035;\n                            }\n                        }\n                    }\n                    else if (arg_8h[0x27] == 0) {\n                        if ((*(arg_8h + 0x7de) < *(arg_8h + 0x6a)) || (0xfffb < *(arg_8h + 0x7de)))\n                        goto code_r0x01006fda;\n                    }\n                    else {\n                        *(arg_8h + 0x2b) = 0;\n                    }\n                } while (*(arg_8h + 0x2b) != 0);\n                iVar4 = fcn.01006234();\n                if (iVar4 == 0) goto code_r0x01007035;\n            }\n            *(arg_8h + 0x2b) = *(arg_8h + 0x2b) + -1;\n            var_4h = 1;\n        }\n    }\ncode_r0x01007035:\n    if (arg_8h[0x22] != -1) {\n        (*arg_8h[6])(arg_8h[0x22]);\n    }\n    iVar4 = arg_8h[0x21];\n    if (iVar4 != -1) {\n        (*arg_8h[6])(iVar4);\n    }\n    arg_8h[0x21] = -1;\n    arg_8h[0x22] = 0xffffffff;\n    return var_4h;\n}\n",
        "token_count": 1305
    },
    "0100383d": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100383d(uint arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint hDC;\n    \n    if (arg_ch == 0x10) {\n        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 2);\n    }\n    else if (arg_ch == 0x110) {\n        hDC = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        fcn.01002969(arg_8h, hDC);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x100abb4);\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x838, *0x100ae64);\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n    }\n    else {\n        if (arg_ch != 0x111) {\n            return 0;\n        }\n        if (5 < arg_10h) {\n            if (7 < arg_10h) {\n                if (arg_10h != 0x839) {\n                    return 1;\n                }\n                *0x100ac3c = 1;\n            }\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, arg_10h);\n            return 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 302
    },
    "01003d9a": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.01003d9a(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    \n    iVar1 = fcn.01002a34(0x10013bc, 0, 0);\n    arg_ch = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar1 + 1);\n    if (arg_ch == 0) {\n        fcn.010038cc(0, 0x4b5, 0, 0, 0x10, 0);\n        *0x100aa5c = fcn.01003547();\n    }\n    else {\n        iVar1 = fcn.01002a34(0x10013bc, arg_ch, iVar1);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg_ch, 0x10013b4);\n            if (iVar1 == 0) {\n                (*_sym.imp.KERNEL32.dll_LocalFree)(arg_ch);\n            }\n            else {\n                iVar1 = fcn.010038cc(0, 0x3e9, arg_ch, 0, 0x20, 4);\n                (*_sym.imp.KERNEL32.dll_LocalFree)(arg_ch);\n                if (iVar1 != 6) {\n                    *0x100aa5c = 0x800704c7;\n                    return 0;\n                }\n                *0x100aa5c = 0;\n            }\n            return 1;\n        }\n        fcn.010038cc(0, 0x4b1, 0, 0, 0x10, 0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(arg_ch);\n        *0x100aa5c = 0x80070714;\n    }\n    return 0;\n}\n",
        "token_count": 404
    },
    "01007461": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01007461(int32_t arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    char *pcVar7;\n    uint var_8h;\n    \n    if (arg_10h < 7) {\n        *(arg_8h + 0x2ec8) = *(arg_8h + 0x2ec8) + arg_10h;\n    }\n    else {\n        uVar3 = *(arg_ch + arg_10h + -6);\n        uVar2 = *(arg_ch + arg_10h + -2);\n        *(arg_ch + arg_10h + -6) = 0xe8e8e8e8;\n        *(arg_ch + arg_10h + -2) = 0xe8e8;\n        uVar1 = *(arg_8h + 0x2ec8) + -10 + arg_10h;\n        pcVar7 = arg_ch;\n        while( true ) {\n            for (; *pcVar7 != -0x18; pcVar7 = pcVar7 + 1) {\n                *(arg_8h + 0x2ec8) = *(arg_8h + 0x2ec8) + 1;\n            }\n            uVar4 = *(arg_8h + 0x2ec8);\n            puVar6 = pcVar7 + 1;\n            if (uVar1 <= uVar4) break;\n            uVar5 = *puVar6;\n            if (uVar5 < *(arg_8h + 0x2ec4)) {\n                *puVar6 = uVar5 - uVar4;\n            }\n            else if (-uVar5 < uVar4 || -uVar4 == uVar5) {\n                *puVar6 = *(arg_8h + 0x2ec4) + uVar5;\n            }\n            pcVar7 = pcVar7 + 5;\n            *(arg_8h + 0x2ec8) = *(arg_8h + 0x2ec8) + 5;\n        }\n        *(arg_8h + 0x2ec8) = uVar1 + 10;\n        *(arg_ch + arg_10h + -6) = uVar3;\n        *(arg_ch + arg_10h + -2) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 571
    },
    "010021b7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.010021b7(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if ((param_1 & 1) == 0) {\n        uVar1 = -((param_1 & 2) != 0) & 0x101;\n    }\n    else {\n        uVar1 = 0x104;\n    }\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "01003f0d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01003f0d(uint lpString2, uint32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t arg_ch_00;\n    uint32_t arg_10h_00;\n    uint *puVar6;\n    bool bVar7;\n    bool bVar8;\n    uint var_318h;\n    uint lpBuffer;\n    uint var_14h;\n    uint var_10h;\n    uint lpString1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_ch == 0) {\n        return 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)(0x104, &lpBuffer);\n    pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(lpString2);\n    if (iVar3 == 0) {\n        fcn.010038cc(0, 0x4bc, 0, 0, 0x10, 0);\n        *0x100aa5c = fcn.01003547();\n    }\n    else {\n        uVar4 = fcn.01005e67(0, &var_4h);\n        if (uVar4 == 0) {\n            var_318h._0_1_ = 0;\n            puVar6 = &var_318h + 1;\n            for (iVar3 = 0x7f; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = 0;\n            *(puVar6 + 2) = 0;\n            *0x100aa5c = fcn.01003547();\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(0, &var_318h, 0x200, 0);\n            (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar5);\n            uVar5 = 0x4b0;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(0, 0, 0, 0, &var_14h, &var_10h, 0, 0);\n            if (iVar3 != 0) {\n                (*pcVar1)(&lpBuffer);\n                (*_sym.imp.KERNEL32.dll_lstrcpynA)(&lpString1, lpString2, 3);\n                iVar3 = 0x200;\n                uVar2 = 0;\n                do {\n                    if (var_4h == iVar3) break;\n                    iVar3 = iVar3 << 1;\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 < 8);\n                if (uVar2 == 8) {\n                    fcn.010038cc(0, 0x4c5, 0, 0, 0x10, 0);\n                    return 0;\n                }\n                if (((*0x100b494 & 8) == 0) || ((var_10h._1_1_ & 0x80) == 0)) {\n                    arg_ch_00 = *(uVar2 * 4 + 0x100bbc0);\n                    arg_10h_00 = *0x100b498;\n                }\n                else {\n                    arg_ch_00 = *(uVar2 * 4 + 0x100bbc0) << 1;\n                    arg_10h_00 = (*0x100b498 >> 2) + *0x100b498;\n                }\n                if (((arg_ch & 1) == 0) || ((arg_ch & 2) == 0)) {\n                    if ((arg_ch & 1) == 0) {\n                        bVar7 = arg_10h_00 < uVar4;\n                        bVar8 = arg_10h_00 == uVar4;\n                    }\n                    else {\n                        bVar7 = arg_ch_00 < uVar4;\n                        bVar8 = arg_ch_00 == uVar4;\n                    }\n                }\n                else {\n                    bVar7 = arg_10h_00 + arg_ch_00 < uVar4;\n                    bVar8 = arg_10h_00 + arg_ch_00 == uVar4;\n                }\n                if (bVar7 || bVar8) {\n                    *0x100aa5c = 0;\n                    return 1;\n                }\n                uVar5 = fcn.01001fce(arg_10h, arg_ch_00, arg_10h_00, &lpString1);\n                return uVar5;\n            }\n            var_318h._0_1_ = 0;\n            puVar6 = &var_318h + 1;\n            for (iVar3 = 0x7f; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = 0;\n            *(puVar6 + 2) = 0;\n            *0x100aa5c = fcn.01003547();\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(0, &var_318h, 0x200, 0);\n            (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar5);\n            uVar5 = 0x4f9;\n        }\n        fcn.010038cc(0, uVar5, lpString2, &var_318h, 0x10, 0);\n        (*pcVar1)(&lpBuffer);\n    }\n    return 0;\n}\n",
        "token_count": 1343
    },
    "010049db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.010049db(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar3 = fcn.01002e6f();\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (*0x100aa4c != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x100aa4c, 0x842, 0);\n        pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar4);\n        uVar4 = (*pcVar1)(*0x100aa4c, 0x841, 5);\n        (*pcVar2)(uVar4);\n    }\n    iVar3 = fcn.01003c60(*0x100aba0);\n    if (iVar3 == 0) {\n        iVar3 = 0x4ba;\n    }\n    else {\n        iVar3 = fcn.01005ebf(0x1002e03, 0x1002e10, fcn.01003b9b, fcn.01002b9d, fcn.01002c23, fcn.01002cb2, fcn.01002d05\n                             , 1, 0x100aba8);\n        if (iVar3 != 0) {\n            iVar5 = fcn.01006e88(iVar3, \"*MEMCAB\", 0x1001251, 0, fcn.01004888, 0, 0x100aba0);\n            if (iVar5 == 0) goto code_r0x01004abd;\n            iVar3 = fcn.010069c2(iVar3);\n            if (iVar3 != 0) goto code_r0x01004abd;\n        }\n        iVar3 = *0x100aba8 + 0x514;\n    }\n    fcn.010038cc(*0x100aa4c, iVar3, 0, 0, 0x10, 0);\n    iVar5 = 0;\ncode_r0x01004abd:\n    if (*0x100aba0 != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(*0x100aba0);\n        *0x100aba0 = 0;\n    }\n    if ((iVar5 == 0) && (*0x100ac38 == 0)) {\n        fcn.010038cc(0, 0x4f8, 0, 0, 0x10, 0);\n    }\n    if (((*0x100b898 & 1) == 0) && ((*0x100b494 & 1) == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x100aa4c, 0xfa1, iVar5, 0);\n    }\n    return iVar5;\n}\n",
        "token_count": 670
    },
    "01005f4f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01005f4f(uint *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    uint var_1ch;\n    uint var_ch;\n    ushort var_8h;\n    uint16_t var_6h;\n    uint var_4h;\n    \n    iVar1 = (*arg_8h[4])(arg_ch, &var_24h, 0x24);\n    if ((iVar1 == 0x24) && (var_24h == 0x4643534d)) {\n        if (var_ch == 0x103) {\n            *arg_10h = var_1ch;\n            *(arg_10h + 1) = var_ch._2_2_;\n            *(arg_10h + 6) = var_8h;\n            *(arg_10h + 2) = var_4h;\n            *(arg_10h + 10) = var_4h._2_2_;\n            arg_10h[3] = var_6h >> 2 & 1;\n            arg_10h[4] = var_6h & 1;\n            arg_10h[5] = var_6h & 2;\n            return 1;\n        }\n        fcn.01007068(*arg_8h, 3, var_ch);\n    }\n    return 0;\n}\n",
        "token_count": 328
    },
    "01002a34": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01002a34(uint arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindResourceA;\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, arg_8h, 10);\n    uVar3 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, uVar2);\n    if ((uVar3 <= arg_10h) && (arg_ch != NULL)) {\n        if (uVar3 != 0) {\n            uVar2 = (*pcVar1)(0, arg_8h, 10);\n            uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar2);\n            puVar4 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar2);\n            if (puVar4 != NULL) {\n                puVar6 = puVar4;\n                for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                    *arg_ch = *puVar6;\n                    puVar6 = puVar6 + 1;\n                    arg_ch = arg_ch + 1;\n                }\n                for (uVar5 = uVar3 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                    *arg_ch = *puVar6;\n                    puVar6 = puVar6 + 1;\n                    arg_ch = arg_ch + 1;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeResource)(puVar4);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 433
    },
    "01002b9d": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01002b9d(uint32_t arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    iVar1 = arg_8h * 0x18;\n    if (*(iVar1 + 0x100b4c4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(iVar1 + 0x100b4d4), arg_ch, arg_10h, &arg_10h, 0);\n        if (iVar1 == 0) {\n            return 0xffffffff;\n        }\n        return arg_10h;\n    }\n    if (*(iVar1 + 0x100b4c4) == 1) {\n        uVar3 = *(iVar1 + 0x100b4d0) - *(iVar1 + 0x100b4cc);\n        if (arg_10h < uVar3) {\n            uVar3 = arg_10h;\n        }\n        puVar4 = *(iVar1 + 0x100b4c8) + *(iVar1 + 0x100b4cc);\n        for (uVar2 = uVar3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *arg_ch = *puVar4;\n            puVar4 = puVar4 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        for (uVar2 = uVar3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *arg_ch = *puVar4;\n            puVar4 = puVar4 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        *(iVar1 + 0x100b4cc) = *(iVar1 + 0x100b4cc) + uVar3;\n        return uVar3;\n    }\n    return arg_8h;\n}\n",
        "token_count": 461
    },
    "0100656e": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100656e(uint *arg_8h, uint16_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint uVar11;\n    \n    puVar5 = arg_ch;\n    puVar9 = arg_8h;\n    uVar6 = *(arg_8h + 0xb2) & 0xf;\n    if ((*(arg_8h + 0xb2) & 0xf) == 0) {\n        uVar4 = *(arg_8h[0x12] + 4);\n        *arg_ch = uVar4;\n        puVar9 = arg_8h[0xf];\n        puVar10 = arg_8h[0x10];\n        for (uVar8 = uVar4 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        for (uVar8 = uVar4 & 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        return 1;\n    }\n    if (uVar6 == 1) {\n        piVar1 = arg_8h + 0x12;\n        puVar10 = arg_8h + 0x10;\n        puVar2 = arg_8h + 0xf;\n        puVar3 = arg_8h + 0xd;\n        arg_8h = arg_8h[0x25];\n        iVar7 = fcn.01003772(*puVar3, *puVar2, *(*piVar1 + 4), *puVar10, &arg_8h);\n        if (iVar7 == 0) {\n            *arg_ch = arg_8h;\n            return 1;\n        }\n    }\n    else {\n        if (uVar6 == 2) {\n            piVar1 = arg_8h + 0x12;\n            puVar10 = arg_8h + 0x10;\n            puVar2 = arg_8h + 0xf;\n            puVar3 = arg_8h + 0xd;\n            arg_8h = *arg_ch;\n            iVar7 = fcn.01003772(*puVar3, *puVar2, *(*piVar1 + 4), *puVar10, &arg_8h);\n        }\n        else {\n            if (uVar6 != 3) {\n                uVar11 = 6;\n                goto code_r0x01006598;\n            }\n            piVar1 = arg_8h + 0x12;\n            puVar10 = arg_8h + 0x10;\n            puVar2 = arg_8h + 0xf;\n            puVar3 = arg_8h + 0xd;\n            arg_8h = *arg_ch;\n            iVar7 = fcn.010071a5(*puVar3, *puVar2, *(*piVar1 + 4), *puVar10, &arg_8h);\n        }\n        if (iVar7 == 0) {\n            *puVar5 = arg_8h;\n            return 1;\n        }\n    }\n    uVar11 = 7;\ncode_r0x01006598:\n    fcn.01007068(*puVar9, uVar11, 0);\n    return 0;\n}\n",
        "token_count": 865
    },
    "01007083": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t fcn.01007083(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    for (uVar2 = param_2 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        uVar1 = *param_1;\n        param_1 = param_1 + 1;\n        param_3 = param_3 ^ uVar1;\n    }\n    param_2 = param_2 & 3;\n    uVar2 = 0;\n    if (param_2 != 1) {\n        if (param_2 != 2) {\n            if (param_2 != 3) goto code_r0x010070df;\n            uVar2 = *param_1 << 0x10;\n            param_1 = param_1 + 1;\n        }\n        uVar2 = uVar2 | *param_1 << 8;\n        param_1 = param_1 + 1;\n    }\n    uVar2 = uVar2 | *param_1;\ncode_r0x010070df:\n    return uVar2 ^ param_3;\n}\n",
        "token_count": 274
    },
    "0100739f": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.0100739f(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = param_1 + 0xa18;\n    for (uVar1 = *(param_1 + 0x2eb5) * 8 + 0x100 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    for (iVar2 = 0; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = param_1 + 0x2b14;\n    for (uVar1 = *(param_1 + 0x2eb5) * 8 + 0x100 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    for (iVar2 = 0; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = param_1 + 0xcb8;\n    for (iVar2 = 0x3e; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    puVar3 = param_1 + 0x2db4;\n    for (iVar2 = 0x3e; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    return;\n}\n",
        "token_count": 466
    },
    "0100878e": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0100878e(uint param_1, uint32_t param_2, int32_t param_3, uint8_t param_4, uint *param_5, int32_t param_6)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int16_t *piVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    uint *puVar13;\n    uint32_t *puVar14;\n    int32_t aiStack164 [17];\n    uint32_t auStack96 [18];\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    char cStack5;\n    \n    piVar12 = aiStack164;\n    for (iVar7 = 0x10; piVar12 = piVar12 + 1,  iVar7 != 0; iVar7 = iVar7 + -1) {\n        *piVar12 = 0;\n    }\n    uVar8 = 0;\n    if (param_2 != 0) {\n        do {\n            aiStack164[*(uVar8 + param_3)] = aiStack164[*(uVar8 + param_3)] + 1;\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < param_2);\n    }\n    uVar8 = 1;\n    auStack96[1] = 0;\n    uVar4 = uVar8;\n    do {\n        piVar12 = aiStack164 + uVar4;\n        cVar2 = uVar4;\n        puVar1 = auStack96 + uVar4;\n        uVar4 = uVar4 + 1;\n        auStack96[uVar4] = (*piVar12 << (0x10U - cVar2 & 0x1f)) + *puVar1;\n    } while (uVar4 < 0x11);\n    if (auStack96[17] != 0x10000) {\n        if (auStack96[17] == 0) {\n            uVar8 = (1 << (param_4 & 0x1f)) << 1;\n            for (uVar4 = uVar8 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *param_5 = 0;\n                param_5 = param_5 + 1;\n            }\n            for (uVar8 = uVar8 & 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n                *param_5 = 0;\n                param_5 = param_5 + 1;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    uVar11 = param_4;\n    uVar10 = 0x10 - param_4;\n    uStack20 = uVar11;\n    uVar5 = uVar8;\n    uVar4 = uVar11;\n    if (uVar11 != 0) {\n        do {\n            auStack96[uVar8] = auStack96[uVar8] >> (uVar10 & 0x1f);\n            uVar5 = uVar8 + 1;\n            aiStack164[uVar8] = 1 << (uVar4 - 1 & 0x1f);\n            uVar8 = uVar5;\n            uVar4 = uVar4 - 1;\n        } while (uVar5 <= uVar11);\n        if (0x10 < uVar5) goto code_r0x01008866;\n    }\n    iVar7 = 0x10 - uVar5;\n    do {\n        uVar6 = iVar7;\n        uVar8 = uVar5 + 1;\n        iVar7 = iVar7 + -1;\n        aiStack164[uVar5] = 1 << (uVar6 & 0x1f);\n        uVar5 = uVar8;\n    } while (uVar8 < 0x11);\ncode_r0x01008866:\n    uVar8 = auStack96[uVar11 + 1] >> (uVar10 & 0x1f);\n    uStack24 = uVar10;\n    if (uVar8 != 0x10000) {\n        uVar4 = ((1 << (param_4 & 0x1f)) - uVar8) * 2;\n        puVar13 = param_5 + uVar8 * 2;\n        for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar13 = 0;\n            puVar13 = puVar13 + 1;\n        }\n        for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar13 = 0;\n            puVar13 = puVar13 + 1;\n        }\n    }\n    uStack12 = param_2;\n    uStack16 = 0;\n    if (0 < param_2) {\n        do {\n            uVar8 = uStack24;\n            uVar10 = *(uStack16 + param_3);\n            if (uVar10 != 0) {\n                puVar1 = auStack96 + uVar10;\n                uVar4 = *puVar1;\n                uVar5 = aiStack164[uVar10] + uVar4;\n                if (param_4 < uVar10) {\n                    cStack5 = uVar10 - param_4;\n                    *puVar1 = uVar5;\n                    iVar7 = uVar4 << (uStack20 & 0x1f);\n                    piVar9 = param_5 + (uVar4 >> (uVar8 & 0x1f)) * 2;\n                    do {\n                        if (*piVar9 == 0) {\n                            *(uStack12 * 4 + 2 + param_6) = 0;\n                            *(uStack12 * 4 + param_6) = 0;\n                            iVar3 = uStack12;\n                            uStack12 = uStack12 + 1;\n                            *piVar9 = -iVar3;\n                        }\n                        piVar9 = param_6 + *piVar9 * -4;\n                        if (iVar7 < 0) {\n                            piVar9 = piVar9 + 1;\n                        }\n                        iVar7 = iVar7 << 1;\n                        cStack5 = cStack5 + -1;\n                    } while (cStack5 != '\\0');\n                    *piVar9 = uStack16;\n                }\n                else {\n                    if (1 << (uStack20 & 0x1f) < uVar5) {\n                        return 0;\n                    }\n                    if (uVar4 < uVar5) {\n                        puVar14 = param_5 + uVar4 * 2;\n                        for (uVar8 = uVar5 - uVar4 >> 1; uVar8 != 0; uVar8 = uVar8 - 1) {\n                            *puVar14 = uStack16 & 0xffff | uStack16 << 0x10;\n                            puVar14 = puVar14 + 1;\n                        }\n                        for (uVar8 = (uVar5 - uVar4 & 1) != 0; uVar8 != 0; uVar8 = uVar8 - 1) {\n                            *puVar14 = uStack16 & 0xffff;\n                            puVar14 = puVar14 + 2;\n                        }\n                    }\n                    *puVar1 = uVar5;\n                }\n            }\n            uStack16 = uStack16 + 1;\n        } while (uStack16 < param_2);\n    }\n    return 1;\n}\n",
        "token_count": 1786
    },
    "0100898b": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0100898b(uint noname_0, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint16_t uVar10;\n    uint16_t var_50h;\n    uint var_4eh;\n    int16_t var_2eh;\n    int16_t var_2ch;\n    uint var_2ah;\n    uint var_1ch;\n    uint16_t *var_8h;\n    uint var_1h;\n    \n    puVar3 = &var_2ah;\n    for (iVar6 = 8; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar6 = 8;\n    puVar7 = arg_ch;\n    do {\n        (&var_2ch)[*puVar7] = (&var_2ch)[*puVar7] + 1;\n        puVar7 = puVar7 + 1;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar5 = 0xf;\n    var_4eh._0_2_ = 0;\n    iVar6 = 0;\n    iVar9 = 0x10;\n    do {\n        uVar2 = uVar5 & 0x1f;\n        uVar5 = uVar5 - 1;\n        *(&var_4eh + iVar6 + 2) = (*(&var_2ah + iVar6) << uVar2) + *(&var_4eh + iVar6);\n        iVar6 = iVar6 + 2;\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    iVar6 = 0;\n    if (var_2eh == 0) {\n        uVar5 = 6;\n        iVar9 = 7;\n        do {\n            *(&var_4eh + iVar6) = *(&var_4eh + iVar6) >> 9;\n            uVar2 = uVar5 & 0x1f;\n            uVar5 = uVar5 - 1;\n            iVar9 = iVar9 + -1;\n            *(&var_2ah + iVar6) = 1 << uVar2;\n            iVar6 = iVar6 + 2;\n        } while (iVar9 != 0);\n        uVar5 = 8;\n        puVar3 = &var_1ch;\n        iVar6 = 9;\n        do {\n            uVar2 = uVar5 & 0x1f;\n            uVar5 = uVar5 - 1;\n            *puVar3 = 1 << uVar2;\n            puVar3 = puVar3 + 2;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        puVar3 = arg_10h;\n        for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        var_1h._0_1_ = 0;\n        do {\n            uVar5 = arg_ch[var_1h];\n            if (uVar5 != 0) {\n                var_8h = &var_50h + uVar5;\n                uVar1 = *var_8h;\n                uVar10 = (&var_2ch)[uVar5] + uVar1;\n                if (0x80 < uVar10) {\n                    return 0;\n                }\n                if (uVar1 < uVar10) {\n                    uVar4 = uVar10 - uVar1;\n                    puVar3 = uVar1 + arg_10h;\n                    for (uVar8 = (uVar4 & 0xffff) >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n                        *puVar3 = CONCAT22(CONCAT11(var_1h, var_1h), CONCAT11(var_1h, var_1h));\n                        puVar3 = puVar3 + 1;\n                    }\n                    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                        *puVar3 = var_1h;\n                        puVar3 = puVar3 + 1;\n                    }\n                }\n                *var_8h = uVar10;\n            }\n            var_1h._0_1_ = var_1h + 1;\n        } while (var_1h < 8);\n        iVar6 = 1;\n    }\n    return iVar6;\n}\n",
        "token_count": 1131
    },
    "01005c1c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nbool fcn.01005c1c(char *param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    pcVar1 = param_1;\n    do {\n        cVar2 = *pcVar1;\n        if ((cVar2 < '0') || ('9' < cVar2)) {\n            if ('`' < cVar2) {\n                cVar2 = cVar2 + -0x20;\n            }\n            iVar3 = cVar2 + -0x37;\n            if ((iVar3 < 10) || (0xf < iVar3)) {\n                *param_2 = iVar4;\n                return pcVar1 != param_1;\n            }\n        }\n        else {\n            iVar4 = iVar4 + -3;\n            iVar3 = cVar2;\n        }\n        iVar4 = iVar4 * 0x10 + iVar3;\n        pcVar1 = (*_sym.imp.USER32.dll_CharNextA)(pcVar1);\n    } while( true );\n}\n",
        "token_count": 248
    },
    "010078be": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.010078be(int32_t param_1)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    *(param_1 + 0x2b04) = *(param_1 + 0x2b04) + -2;\n    if (*(param_1 + 0x2b04) + 4U < *(param_1 + 0x2b08)) {\n        puVar2 = param_1 + 0xc;\n        iVar3 = 3;\n        do {\n            *puVar2 = **(param_1 + 0x2b04);\n            *(param_1 + 0x2b04) = *(param_1 + 0x2b04) + 4;\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 233
    },
    "010015f6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.010015f6(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint pIdentifierAuthority;\n    uchar var_10h;\n    uchar var_fh;\n    int32_t hLibModule;\n    uint var_8h;\n    uint pSid;\n    \n    var_8h = 0;\n    pIdentifierAuthority._0_1_ = 0;\n    pIdentifierAuthority._1_1_ = 0;\n    pIdentifierAuthority._2_1_ = 0;\n    pIdentifierAuthority._3_1_ = 0;\n    var_10h = 0;\n    var_fh = 5;\n    hLibModule = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x1001244);\n    if (hLibModule != 0) {\n        pcVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, 0x100122c);\n        if (pcVar1 != NULL) {\n            var_8h = 1;\n            *arg_8h = 0;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                              (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid);\n            if (iVar2 != 0) {\n                (*pcVar1)(0, pSid, arg_8h);\n                (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    }\n    return var_8h;\n}\n",
        "token_count": 381
    },
    "01001b8b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "persist via Run registry key",
            "get common file path",
            "query or enumerate registry value",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.01001b8b(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpString;\n    uint lpBuffer;\n    uint lpcbData;\n    uint hKey;\n    \n    if (*0x100a2e0 != '\\0') {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0x2001f, &hKey);\n        if (iVar1 == 0) {\n            lpcbData = 0x238;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x100a2e0, 0, 0, &lpString, &lpcbData);\n            if (iVar1 == 0) {\n                lpBuffer._0_1_ = 0;\n                puVar2 = &lpBuffer + 1;\n                for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                *puVar2 = 0;\n                *(puVar2 + 2) = 0;\n                iVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n                if (iVar1 != 0) {\n                    fcn.01005b32(&lpBuffer, 0x1001251);\n                }\n                (*_sym.imp.USER32.dll_wsprintfA)\n                          (&lpString, \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\", &lpBuffer, 0x100ac44);\n                iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString);\n                (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0x100a2e0, 0, 1, &lpString, iVar1 + 1);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "01003566": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01003566(code *arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint hModule;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_wsprintfA;\n    var_8h = 1;\n    var_4h = 0;\n    (*_sym.imp.USER32.dll_wsprintfA)(&hModule, 0x1001330, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, &hModule, 10);\n    while( true ) {\n        if (iVar3 == 0) {\n            return var_8h;\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, iVar3);\n        puVar5 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar4);\n        if (puVar5 == NULL) break;\n        var_10h = *puVar5;\n        var_ch = puVar5[1];\n        puVar1 = puVar5 + 2;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar1);\n        iVar3 = (*arg_8h)(var_10h, var_ch, puVar1, iVar3 + 1 + puVar1);\n        if (iVar3 == 0) {\n            var_8h = 0;\n            (*_sym.imp.KERNEL32.dll_FreeResource)(puVar5);\n            return var_8h;\n        }\n        (*_sym.imp.KERNEL32.dll_FreeResource)();\n        var_4h = var_4h + 1;\n        (*pcVar2)(&hModule, 0x1001330, var_4h);\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, &hModule, 10);\n    }\n    *0x100aa5c = 0x80070714;\n    return 0;\n}\n",
        "token_count": 474
    },
    "01004560": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01004560(int32_t lpCommandLine, uint32_t lpExitCode)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_210h;\n    uint hProcess;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    if (lpCommandLine != 0) {\n        hProcess = 0;\n        var_ch = 0;\n        uStack12 = 0;\n        uStack8 = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, lpCommandLine, 0, 0, 0, 0x20, 0, 0, lpExitCode, &hProcess);\n        if (iVar2 == 0) {\n            *0x100aa5c = fcn.01003547();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(0, &var_210h, 0x200, 0);\n            (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar3);\n            fcn.010038cc(0, 0x4c4, lpCommandLine, &var_210h, 0x10, 0);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 0xffffffff);\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hProcess, &lpExitCode);\n            if ((((*0x100b888 == 0) && ((*0x100b48c & 1) != 0)) && ((*0x100b48c & 2) == 0)) &&\n               ((lpExitCode & 0xff000000) == 0xaa000000)) {\n                *0x100b48c = lpExitCode;\n            }\n            fcn.010028fa(lpExitCode);\n            pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n            (*pcVar1)(hProcess);\n            if ((*0x100b495 & 4) == 0) {\n                return 1;\n            }\n            if (-1 < lpExitCode) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 511
    },
    "010046d4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "link function at runtime on Windows",
            "get common file path"
        ],
        "decompiled_code": "\nbool __cdecl fcn.010046d4(uint arg_8h, uint arg_ch, char *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint arg_ch_00;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t hLibModule;\n    code *var_10h;\n    code *var_ch;\n    code *var_8h;\n    char *var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"SHELL32.DLL\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    hLibModule = iVar2;\n    if (iVar2 == 0) {\n        arg_ch_00 = 0x4c2;\n    }\n    else {\n        var_8h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"SHBrowseForFolder\");\n        if (((var_8h != NULL) && (var_10h = (*pcVar1)(iVar2, 0xc3),  var_10h != NULL)) &&\n           (var_ch = (*pcVar1)(iVar2, \"SHGetPathFromIDList\"),  var_ch != NULL)) {\n            if (*0x100aa80 == '\\0') {\n                (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104, 0x100aa80);\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x100aa80);\n                pcVar1 = _sym.imp.USER32.dll_CharPrevA;\n                var_4h = (*_sym.imp.USER32.dll_CharPrevA)(0x100aa80, iVar2 + 0x100aa80);\n                if ((*var_4h == '\\\\') && (pcVar3 = (*pcVar1)(0x100aa80, var_4h),  *pcVar3 != ':')) {\n                    *var_4h = '\\0';\n                }\n            }\n            var_34h = arg_8h;\n            var_28h = arg_ch;\n            *arg_10h = '\\0';\n            var_30h = 0;\n            var_2ch = 0;\n            var_24h = 1;\n            var_20h = 0x1002948;\n            var_1ch = 0x100aa80;\n            iVar2 = (*var_8h)(&var_34h);\n            if (iVar2 != 0) {\n                (*var_ch)(iVar2, 0x100aa80);\n                if (*0x100aa80 != '\\0') {\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_10h, 0x100aa80);\n                }\n                (*var_10h)(iVar2);\n            }\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n            return *arg_10h != '\\0';\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n        arg_ch_00 = 0x4c1;\n    }\n    fcn.010038cc(arg_8h, arg_ch_00, 0, 0, 0x10, 0);\n    return false;\n}\n",
        "token_count": 745
    },
    "01004b1a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "delete directory",
            "create directory",
            "get system information on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01004b1a(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpString2;\n    uint lpSystemInfo;\n    \n    if (arg_ch == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x100ac44, arg_8h);\n    }\n    else {\n        iVar1 = fcn.01002f7a(arg_8h, &lpString2);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        uVar2 = 0x100ac44;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x100ac44, &lpString2);\n        if (((*0x100b494 & 0x20) != 0) &&\n           (((((*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo),  lpSystemInfo == 0 || (lpSystemInfo == 1)) ||\n             (lpSystemInfo == 2)) || (lpSystemInfo == 3)))) {\n            uVar2 = 0x100ac44;\n            fcn.01005b32();\n        }\n        fcn.01005b32(0x100ac44, 0x1001251, uVar2);\n    }\n    iVar1 = fcn.01003e60(0x100ac44);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x100ac44, 0);\n        if (iVar1 == 0) {\n            *0x100aa5c = fcn.01003547();\n            return 0;\n        }\n        *0x100b880 = 1;\n    }\n    iVar1 = fcn.01003f0d(0x100ac44, arg_10h, 0);\n    if (iVar1 == 0) {\n        if (*0x100b880 != 0) {\n            *0x100b880 = 0;\n            (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(0x100ac44);\n        }\n        return 0;\n    }\n    *0x100aa5c = 0;\n    return 1;\n}\n",
        "token_count": 513
    },
    "01005e13": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01005e13(char *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpTotalNumberOfClusters;\n    uint lpNumberOfFreeClusters;\n    int32_t lpSectorsPerCluster;\n    int32_t lpBytesPerSector;\n    \n    lpSectorsPerCluster = 0;\n    lpBytesPerSector = 0;\n    lpNumberOfFreeClusters = 0;\n    lpTotalNumberOfClusters = 0;\n    if ((*arg_8h != '\\0') &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (arg_8h, &lpSectorsPerCluster, &lpBytesPerSector, &lpNumberOfFreeClusters, \n                           &lpTotalNumberOfClusters),  iVar1 != 0)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpBytesPerSector * lpSectorsPerCluster, lpNumberOfFreeClusters, 0x400);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 228
    },
    "0100198b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0100198b(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpLibFileName;\n    uint lpFilename;\n    uint lpcbData;\n    uint var_10h;\n    uint32_t var_ch;\n    uint hKey;\n    int32_t hLibModule;\n    \n    lpFilename._0_1_ = 0;\n    lpLibFileName._0_1_ = 0;\n    puVar5 = &lpFilename + 1;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &lpLibFileName + 1;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 0;\n    iVar4 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0, 0, 0x2001f, 0, &hKey, \n                       &var_10h);\n    if (iVar4 != 0) {\n        return;\n    }\n    hLibModule = 0;\n    do {\n        (*_sym.imp.USER32.dll_wsprintfA)(0x100a2e0, \"wextract_cleanup%d\", hLibModule);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x100a2e0, 0, 0, 0, &lpcbData);\n        if (iVar4 != 0) break;\n        hLibModule = hLibModule + 1;\n    } while (hLibModule < 200);\n    if (hLibModule == 200) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        *0x100a2e0 = 0;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpLibFileName, 0x104);\n    fcn.01005b32(&lpLibFileName, 0x1001278);\n    hLibModule = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    if (hLibModule == 0) {\ncode_r0x01001b0b:\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x100b4a4, &lpFilename, 0x104);\n        if (iVar4 == 0) goto code_r0x01001b23;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, 0x1001268);\n        var_ch = iVar4 != 0;\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n        if ((iVar4 != 0) == 0) goto code_r0x01001b0b;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpFilename, 0x104);\n        if (iVar4 != 0) {\n            fcn.01005b32(&lpFilename, 0x1001251);\n        }\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x100ac44);\n    iVar2 = (*pcVar1)(&lpFilename);\n    iVar4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar4 + 0x50 + iVar2);\n    if (iVar4 != 0) {\n        *0x100a330 = var_ch == 0;\n        pcVar3 = \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\";\n        if (var_ch == 0) {\n            pcVar3 = \"%s /D:%s\";\n        }\n        (*_sym.imp.USER32.dll_wsprintfA)(iVar4, pcVar3, &lpFilename, 0x100ac44);\n        iVar2 = (*pcVar1)(iVar4);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0x100a2e0, 0, 1, iVar4, iVar2 + 1);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(iVar4);\n        return;\n    }\n    fcn.010038cc(0, 0x4b5, 0, 0, 0x10, 0);\ncode_r0x01001b23:\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return;\n}\n",
        "token_count": 1171
    },
    "01001fb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.01001fb1(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_2, 0x100129c, param_1);\n    return param_2;\n}\n",
        "token_count": 54
    },
    "01002969": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01002969(uint hWnd, uint hDC)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &var_2ch);\n    var_24h = var_24h - var_2ch;\n    var_20h = var_20h - var_28h;\n    (*pcVar1)(hDC, &var_1ch);\n    var_8h = var_10h - var_18h;\n    var_14h = var_14h - var_1ch;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(hWnd);\n    var_4h = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 8);\n    var_ch = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 10);\n    (*_sym.imp.USER32.dll_ReleaseDC)(hWnd, uVar2);\n    var_1ch = (var_14h - var_24h) / 2 + var_1ch;\n    if (var_1ch < 0) {\n        var_1ch = 0;\n    }\n    else if (var_4h < var_1ch + var_24h) {\n        var_1ch = var_4h - var_24h;\n    }\n    var_18h = (var_8h - var_20h) / 2 + var_18h;\n    if (var_18h < 0) {\n        var_18h = 0;\n    }\n    else if (var_ch < var_18h + var_20h) {\n        var_18h = var_ch - var_20h;\n    }\n    (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, var_1ch, var_18h, 0, 0, 5);\n    return;\n}\n",
        "token_count": 539
    },
    "01005209": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.01005209(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = 0;\n    do {\n        *(uVar1 + 0x100b4c0) = 1;\n        uVar1 = uVar1 + 0x18;\n    } while (uVar1 < 0x3c0);\n    if (((*0x100b898 & 1) == 0) && ((*0x100b494 & 1) == 0)) {\n        iVar2 = fcn.01004161(*0x100b4a4, 0x7d5 - (*0x100a2bc != 0), 0, fcn.01005075, 0, 0);\n    }\n    else {\n        iVar2 = fcn.010049db();\n    }\n    if (iVar2 == 0) {\n        *0x100aa5c = 0x8007042b;\n    }\n    else {\n        iVar2 = fcn.01003566(fcn.0100366a);\n        if (iVar2 != 0) {\n            *0x100aa5c = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 277
    },
    "01005b32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.01005b32(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1);\n    pcVar3 = param_1 + iVar1;\n    if ((param_1 < pcVar3) && (pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar3),  *pcVar2 != '\\\\')) {\n        *pcVar3 = '\\\\';\n        pcVar3 = pcVar3 + 1;\n    }\n    for (; *param_1 == ' '; param_1 = param_1 + 1) {\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(pcVar3, param_1);\n    return;\n}\n",
        "token_count": 186
    },
    "01005b71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.01005b71(char *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1);\n    pcVar1 = _sym.imp.USER32.dll_CharPrevA;\n    pcVar3 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, param_1 + iVar2);\n    do {\n        pcVar3 = (*pcVar1)(param_1, pcVar3);\n        if (pcVar3 <= param_1) {\n            if (*pcVar3 != '\\\\') {\n                return 0;\n            }\n            break;\n        }\n    } while (*pcVar3 != '\\\\');\n    if ((pcVar3 == param_1) || (pcVar4 = (*pcVar1)(param_1, pcVar3),  *pcVar4 == ':')) {\n        pcVar3 = (*_sym.imp.USER32.dll_CharNextA)(pcVar3);\n    }\n    *pcVar3 = '\\0';\n    return 1;\n}\n",
        "token_count": 248
    },
    "01006931": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.01006931(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*param_1[4])(param_1[0x22], param_1 + 0x1d, 0x10);\n    if ((iVar1 == 0x10) && (iVar1 = fcn.010061ad(param_1 + 0x2d, 0x100, param_1),  iVar1 != 0)) {\n        return 1;\n    }\n    fcn.01007068(*param_1, 4, 0);\n    return 0;\n}\n",
        "token_count": 137
    },
    "010070e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.010070e6(int32_t *arg_8h, uint *arg_ch, code *arg_10h, code *arg_14h, int32_t *arg_18h, uint *arg_1ch, uint arg_20h\n            , uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    *arg_18h = *arg_8h + 0x1800;\n    if (arg_1ch == NULL) {\n        return arg_1ch;\n    }\n    *arg_1ch = 0;\n    puVar1 = (*arg_10h)(0x2c);\n    if (puVar1 != NULL) {\n        iVar2 = (*arg_10h)(0x2efc);\n        puVar1[10] = iVar2;\n        if (iVar2 == 0) {\n            (*arg_14h)(puVar1);\n        }\n        else {\n            puVar1[4] = arg_24h;\n            puVar1[5] = arg_28h;\n            puVar1[6] = arg_2ch;\n            puVar1[7] = arg_30h;\n            puVar1[1] = arg_10h;\n            puVar1[2] = arg_14h;\n            puVar1[3] = arg_20h;\n            puVar1[8] = *arg_8h;\n            puVar1[9] = arg_ch[1];\n            *puVar1 = 0x4349444c;\n            iVar2 = fcn.010072be(iVar2, *arg_ch, arg_10h, arg_14h, arg_20h, arg_24h, arg_28h, arg_2ch, arg_30h);\n            if (iVar2 != 0) {\n                *arg_1ch = puVar1;\n                return NULL;\n            }\n            (*arg_14h)(puVar1);\n        }\n    }\n    return 0x1;\n}\n",
        "token_count": 467
    },
    "01007262": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.01007262(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint noname_5, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    \n    *(arg_8h + 0x2b04) = arg_10h;\n    *(arg_8h + 0x2b08) = arg_10h + 4 + arg_14h;\n    *(arg_8h + 0x2b0c) = arg_18h;\n    fcn.01007774(arg_8h);\n    iVar1 = fcn.0100750f(arg_8h, arg_ch);\n    *(arg_8h + 0x2ecc) = *(arg_8h + 0x2ecc) + 1;\n    if (-1 < iVar1) {\n        *arg_20h = iVar1;\n        *(arg_8h + 0x2b10) = *(arg_8h + 0x2b10) + iVar1;\n    }\n    else {\n        *arg_20h = 0;\n    }\n    return -1 >= iVar1;\n}\n",
        "token_count": 277
    },
    "01007330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.01007330(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    *(param_1 + 0x2eb5) = 4;\n    uVar2 = 4;\n    do {\n        uVar2 = uVar2 + (1 << (*(*(param_1 + 0x2eb5) + 0x10014b0) & 0x1f));\n        *(param_1 + 0x2eb5) = *(param_1 + 0x2eb5) + 1;\n    } while (uVar2 < param_1[1]);\n    iVar1 = (*param_1[3000])(param_1[1] + 0x105);\n    *param_1 = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 188
    },
    "01007779": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01007779(int32_t param_1, uint8_t param_2)\n\n{\n    char cVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    char cVar4;\n    uint16_t *puVar5;\n    \n    *(param_1 + 0x2eb4) = *(param_1 + 0x2eb4) - param_2;\n    *(param_1 + 0x2eb0) = *(param_1 + 0x2eb0) << (param_2 & 0x1f);\n    cVar1 = *(param_1 + 0x2eb4);\n    if ('\\0' < cVar1) {\n        return;\n    }\n    puVar2 = *(param_1 + 0x2b04);\n    if (puVar2 < *(param_1 + 0x2b08)) {\n        cVar4 = cVar1 + '\\x10';\n        uVar3 = *puVar2;\n        puVar5 = puVar2 + 1;\n        *(param_1 + 0x2b04) = puVar5;\n        *(param_1 + 0x2eb4) = cVar4;\n        *(param_1 + 0x2eb0) = uVar3 << (-cVar1 & 0x1fU) | *(param_1 + 0x2eb0);\n        if ('\\0' < cVar4) {\n            return;\n        }\n        if (puVar5 < *(param_1 + 0x2b08)) {\n            uVar3 = *puVar5;\n            *(param_1 + 0x2b04) = puVar2 + 2;\n            *(param_1 + 0x2eb0) = *(param_1 + 0x2eb0) | uVar3 << (-cVar4 & 0x1fU);\n            *(param_1 + 0x2eb4) = cVar1 + ' ';\n            return;\n        }\n    }\n    *(param_1 + 0x2ebc) = 1;\n    return;\n}\n",
        "token_count": 473
    },
    "01007840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01007840(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = arg_ch;\n    puVar2 = arg_8h[0xac1];\n    uVar1 = arg_ch + arg_10h;\n    uVar4 = arg_ch;\n    if (arg_ch < uVar1) {\n        do {\n            if (arg_8h[0xac2] <= puVar2) {\n                return -1;\n            }\n            *(arg_ch + *arg_8h) = *puVar2;\n            arg_ch = arg_ch + 1;\n            puVar2 = puVar2 + 1;\n            uVar4 = arg_ch;\n        } while (arg_ch < uVar1);\n    }\n    arg_8h[0xac1] = puVar2;\n    arg_ch = 0x101;\n    if (uVar1 < 0x102) {\n        arg_ch = uVar1;\n    }\n    for (; uVar3 < arg_ch; uVar3 = uVar3 + 1) {\n        *(arg_8h[1] + *arg_8h + uVar3) = *(*arg_8h + uVar3);\n    }\n    arg_8h[0xbb0] = arg_8h[2] & uVar4;\n    return uVar4 - uVar1;\n}\n",
        "token_count": 346
    },
    "01001e52": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01001e52(uint phkResult, uint lpValueName)\n\n{\n    int32_t iVar1;\n    uint lpcbData;\n    \n    lpcbData = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000002, phkResult, 0, 0x20019, &phkResult);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(phkResult, lpValueName, 0, 0, 0, &lpcbData);\n        if (iVar1 != 0) {\n            lpcbData = 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return lpcbData;\n}\n",
        "token_count": 185
    },
    "01001ea3": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01001ea3(uint phkResult)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000002, phkResult, 0, 0x20019, &phkResult);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyA)(phkResult, 0, 0, 0, 0, 0, 0, &var_4h, 0, 0, 0, 0);\n        if (iVar1 != 0) {\n            var_4h = 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return var_4h;\n}\n",
        "token_count": 202
    },
    "0100288f": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0100288f(uint pHandles)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    int32_t var_1ch;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    var_4h = 0;\n    do {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_MsgWaitForMultipleObjects)(1, &pHandles, 0, 0xffffffff, 0xff);\n            if (iVar2 == 0) {\n                return;\n            }\n            iVar2 = (*pcVar1)(&lpMsg, 0, 0, 0, 1);\n        } while (iVar2 == 0);\n        do {\n            if (var_1ch == 0x12) {\n                var_4h = 1;\n            }\n            else {\n                (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            }\n            iVar2 = (*pcVar1)(&lpMsg, 0, 0, 0, 1);\n        } while (iVar2 != 0);\n    } while (var_4h == 0);\n    return;\n}\n",
        "token_count": 271
    },
    "01005ebf": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.01005ebf(code *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = (*arg_8h)(0x804);\n    if (puVar1 == NULL) {\n        fcn.01007068(arg_28h, 5, 0);\n        puVar1 = NULL;\n    }\n    else {\n        puVar1[0x22] = 0xffffffff;\n        puVar1[0x21] = 0xffffffff;\n        puVar1[1] = arg_ch;\n        puVar1[3] = arg_10h;\n        puVar1[4] = arg_14h;\n        puVar1[5] = arg_18h;\n        puVar1[6] = arg_1ch;\n        puVar1[7] = arg_20h;\n        puVar1[8] = arg_24h;\n        puVar1[0x12] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x13] = 0;\n        puVar1[2] = arg_8h;\n        *puVar1 = arg_28h;\n        *(puVar1 + 0xb2) = 0xf;\n        puVar1[0x28] = 0xffff;\n        puVar1[0x2a] = 0xffff;\n        puVar1[0x29] = 0xffff;\n    }\n    return puVar1;\n}\n",
        "token_count": 379
    },
    "0100740e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0100740e(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 1;\n    *(param_1 + 0x10) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 0x2ec0) = 0;\n    *(param_1 + 0x2b10) = 0;\n    *(param_1 + 0x2edc) = 1;\n    *(param_1 + 0x2ed4) = 0;\n    *(param_1 + 0x2ed8) = 0;\n    *(param_1 + 0x2eb8) = 1;\n    *(param_1 + 0x2ec4) = 0;\n    *(param_1 + 0x2ebc) = 0;\n    return;\n}\n",
        "token_count": 201
    },
    "010018b5": {
        "rules": [
            "shutdown system",
            "modify access privileges"
        ],
        "decompiled_code": "\nuint fcn.010018b5(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint NewState;\n    uint lpLuid;\n    uint var_8h;\n    uint TokenHandle;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    if (iVar2 == 0) {\n        uVar1 = 0x4f5;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, 0x1001254, &lpLuid);\n        NewState = 1;\n        var_8h = 2;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0, 0, 0);\n        if (iVar2 == 0) {\n            uVar1 = 0x4f6;\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2);\n            if (iVar2 != 0) {\n                return 1;\n            }\n            uVar1 = 0x4f7;\n        }\n    }\n    fcn.010038cc(0, uVar1, 0, 0, 0x10, 0);\n    return 0;\n}\n",
        "token_count": 319
    },
    "01001f6e": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.01001f6e(char *arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpBuffer;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpBuffer, 0x104);\n    if (iVar1 == 0) {\n        fcn.010038cc(0, 0x4f0, 0, 0, 0x10, 0);\n    }\n    return *arg_8h == lpBuffer;\n}\n",
        "token_count": 124
    },
    "01004112": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nuint fcn.01004112(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpBuffer;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpBuffer, 0x104);\n    if (iVar1 == 0) {\n        fcn.010038cc(0, 0x4f0, 0, 0, 0x10, 0);\n        *0x100aa5c = fcn.01003547();\n        return 0;\n    }\n    uVar2 = fcn.01003f0d(&lpBuffer, 2, 2);\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "01002e6f": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nbool fcn.01002e6f(void)\n\n{\n    uint uVar1;\n    \n    *0x100aba4 = fcn.01002a34(0x100133c, 0, 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, 0x100133c, 10);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar1);\n    *0x100aba0 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar1);\n    return *0x100aba0 != 0;\n}\n",
        "token_count": 136
    },
    "010058fe": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nuint fcn.010058fe(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x100b898 == 0) {\n        if (*0x100b884 == 0) {\n            iVar1 = fcn.01003d9a();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            if (*0x100b898 != 0) goto code_r0x01005935;\n        }\n        iVar1 = fcn.01004481();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\ncode_r0x01005935:\n    iVar1 = fcn.01003d13();\n    if ((iVar1 != 0) && (iVar1 = fcn.01005636(),  iVar1 != 0)) {\n        if ((*0x100b884 == 0) && ((*0x100b490 == 0 && (iVar1 = fcn.01004112(),  iVar1 == 0)))) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x100ac44);\n        if (iVar1 != 0) {\n            if ((*0x100b88c == 0) && (iVar1 = fcn.01005209(),  iVar1 == 0)) {\n                return 0;\n            }\n            if ((*0x100bba8 & 0xc0) == 0) {\n                *0x100ab84 = fcn.01001ef8(*0x100aa64);\n            }\n            else {\n                *0x100ab84 = 0;\n            }\n            if (((*0x100b884 == 0) && (*0x100b490 == 0)) && (iVar1 = fcn.01005288(),  iVar1 == 0)) {\n                return 0;\n            }\n            if ((*0x100b898 == 0) && (*0x100b884 == 0)) {\n                fcn.01004657();\n            }\n            return 1;\n        }\n        fcn.010038cc(0, 0x4bc, 0, 0, 0x10, 0);\n        *0x100aa5c = fcn.01003547();\n    }\n    return 0;\n}\n",
        "token_count": 505
    },
    "01005e67": {
        "rules": [
            "get disk size"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01005e67(uint lpRootPathName, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint lpTotalNumberOfClusters;\n    uint lpNumberOfFreeClusters;\n    int32_t lpSectorsPerCluster;\n    int32_t lpBytesPerSector;\n    \n    lpSectorsPerCluster = 0;\n    lpBytesPerSector = 0;\n    lpNumberOfFreeClusters = 0;\n    lpTotalNumberOfClusters = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                      (lpRootPathName, &lpSectorsPerCluster, &lpBytesPerSector, &lpNumberOfFreeClusters, \n                       &lpTotalNumberOfClusters);\n    if (iVar1 != 0) {\n        iVar1 = lpBytesPerSector * lpSectorsPerCluster;\n        (*_sym.imp.KERNEL32.dll_MulDiv)(iVar1, lpNumberOfFreeClusters, 0x400);\n        if (arg_ch != NULL) {\n            *arg_ch = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 231
    }
}