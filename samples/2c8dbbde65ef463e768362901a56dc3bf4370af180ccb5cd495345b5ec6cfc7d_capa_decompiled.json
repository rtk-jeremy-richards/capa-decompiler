{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 28672 named .text\n    iVar3 = *0x424734;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar2)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar4, 0x423f20, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar1)(uVar4, uVar6);\n                (*pcVar2)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x424728;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 847
    },
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    char *pcStack464;\n    int32_t iStack456;\n    uint uStack452;\n    char *pcStack448;\n    char *pcStack444;\n    uint uStack440;\n    uchar *puStack436;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack372;\n    \n    uStack372 = 0;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    *0x42472c = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    *0x42472c = *0x42472c & 0xbfffffff;\n    if ((*0x42472c != 6) && (pcVar3 = fcn.004064d9(),  pcVar3 != NULL)) {\n        (*pcVar3)();\n    }\n    pcVar10 = \"UXTHEME\";\n    do {\n        fcn.0040646b(pcVar10);\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        pcVar10 = pcVar10 + iVar4 + 1;\n    } while (*pcVar10 != '\\0');\n    fcn.004064d9();\n    *0x424724 = fcn.004064d9();\n    pcVar3 = fcn.004064d9();\n    if (pcVar3 != NULL) {\n        uStack424 = 0x403412;\n        iVar4 = (*pcVar3)();\n        if (iVar4 != 0) {\n            *0x42472c = *0x42472c | 0x40000000;\n        }\n    }\n    uStack424 = 0x403424;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack424 = 0;\n    uStack428 = 0x40342b;\n    *0x4247f8 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack428 = 0;\n    puStack436 = &stack0xfffffe8c;\n    uStack432 = 0x160;\n    uStack440 = NULL;\n    pcStack444 = 0x41fcf0;\n    pcStack448 = 0x403447;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    pcStack448 = \"NSIS Error\";\n    uStack452 = 0x423f20;\n    fcn.00406141();\n    iStack456 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    fcn.00406141(0x42a000);\n    *0x424720 = 0x400000;\n    uVar5 = 0x42a000;\n    if (*0x42a000 == '\\\"') {\n        uStack440 = CONCAT31(uStack440._1_3_, 0x22);\n        uVar5 = 0x42a001;\n    }\n    pcStack464 = uStack440;\n    puVar6 = fcn.00405b04(uVar5);\n    puVar7 = (*_sym.imp.USER32.dll_CharNextA)(puVar6);\n    pcStack444 = puVar7;\n    while (uVar2 = uStack452,  cVar1 = *puVar7,  cVar1 != '\\0') {\n        while (cVar1 == ' ') {\n            puVar7 = puVar7 + 1;\n            cVar1 = *puVar7;\n        }\n        uStack452 = CONCAT31(uStack452._1_3_, 0x20);\n        if (*puVar7 == '\\\"') {\n            puVar7 = puVar7 + 1;\n            uStack452 = uVar2 & 0xffffff00 | 0x22;\n        }\n        puVar8 = puVar7;\n        if (*puVar7 == '/') {\n            puVar8 = puVar7 + 1;\n            if ((*puVar8 == 'S') && ((*(puVar7 + 2) == ' ' || (*(puVar7 + 2) == '\\0')))) {\n                *0x4247e0 = 1;\n            }\n            if ((*puVar8 == (((str.NCRC[3] << 8 | str.NCRC[2]) << 8 | str.NCRC[1]) << 8 | str.NCRC[0])) &&\n               ((*(puVar7 + 5) == ' ' || (*(puVar7 + 5) == '\\0')))) {\n                uStack440 = uStack440 | 4;\n            }\n            if (*(puVar7 + -1) == (((str.__D[3] << 8 | str.__D[2]) << 8 | str.__D[1]) << 8 | str.__D[0])) {\n                *(puVar7 + -1) = '\\0';\n                fcn.00406141(0x42a400, puVar7 + 3);\n                break;\n            }\n        }\n        puVar7 = fcn.00405b04();\n        puVar6 = puVar8;\n        if (*puVar7 == '\\\"') {\n            puVar7 = puVar7 + 1;\n        }\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    uVar5 = 0x42b400;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, 0x42b400, puVar6);\n    iVar4 = fcn.00403353();\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x42b400, 0x3fb);\n        pcVar10 = 0x42b400;\n        sub.KERNEL32.dll_lstrcatA(0x42b400, \"\\\\Temp\");\n        iVar4 = fcn.00403353();\n        if (iVar4 == 0) {\n            (*pcVar3)(0x3fc, 0x42b400);\n            sub.KERNEL32.dll_lstrcatA(0x42b400, 0x40a1d0);\n            pcVar3 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableA;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(\"TEMP\", 0x42b400);\n            (*pcVar3)(0x40a1c4, 0x42b400);\n            iVar4 = fcn.00403353();\n            if (iVar4 == 0) goto code_r0x0040369e;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x42b000);\n    pcVar10 = 0x6;\n    iStack456 = 0x403604;\n    puStack436 = fcn.00402e14(6);\n    if (puStack436 == NULL) {\n        if (*0x424740 != 0) {\n            iStack456 = 0;\n            pcStack464 = 0x40361f;\n            puVar7 = fcn.00405b04(0x42a000);\n            if (0x429fff < puVar7) {\n                do {\n                    if (*puVar7 == (((*0x40a1bf << 8 | *0x40a1be) << 8 | *0x40a1bd) << 8 | *0x40a1bc)) break;\n                    puVar7 = puVar7 + -1;\n                } while (0x429fff < puVar7);\n            }\n            pcStack444 = \"Error launching installer\";\n            if (puVar7 < 0x42a000) goto code_r0x004036ca;\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n            pcVar10 = puVar7;\n            iVar4 = fcn.00405bc7();\n            if (iVar4 == 0) goto code_r0x0040369e;\n            fcn.00406141(0x42a400, puVar7);\n            pcVar10 = 0x42a800;\n            fcn.00406141(0x42a800, puVar7);\n            pcStack464 = NULL;\n        }\n        *0x4247ec = -1;\n        iStack456 = fcn.0040395e();\n    }\ncode_r0x0040369e:\n    while( true ) {\n        fcn.0040386c(pcVar10);\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (pcStack464 == NULL) break;\n        fcn.0040585d(pcStack464, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x004036ca:\n        iVar4 = fcn.004057c8();\n        pcStack464 = \"~nsu\";\n        sub.KERNEL32.dll_lstrcatA(0x42b400);\n        if (iVar4 != 0) {\n            sub.KERNEL32.dll_lstrcatA(0x42b400, 0x40a1b0);\n        }\n        pcVar10 = \".tmp\";\n        sub.KERNEL32.dll_lstrcatA(0x42b400);\n        iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x42b400, 0x42ac00);\n        if (iVar9 != 0) {\n            if (iVar4 == 0) {\n                fcn.004057ab();\n            }\n            else {\n                fcn.0040572e(0x42b400);\n            }\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x42b400);\n            if (*0x42a400 == '\\0') {\n                pcStack464 = 0x42a400;\n                fcn.00406141();\n            }\n            fcn.00406141(0x425000, puStack436);\n            iVar4 = 0x1a;\n            *0x425400 = *0x40a1a5 << 8 | *0x40a1a4;\n            do {\n                fcn.00406163(0x41f8f0, *(*0x424734 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x41f8f0);\n                if ((iStack456 != 0) && (iVar9 = (*_sym.imp.KERNEL32.dll_CopyFileA)(0x42bc00, 0x41f8f0, 1),  iVar9 != 0)\n                   ) {\n                    fcn.00405f20(0x41f8f0, 0);\n                    fcn.00406163(0x41f8f0, *(*0x424734 + 0x124));\n                    iVar9 = fcn.004057e0(0x41f8f0);\n                    if (iVar9 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar9);\n                        iStack456 = 0;\n                    }\n                }\n                *0x425400 = *0x425400 + 1;\n                *0x425400 = *0x425400 & 0xff00 | *0x425400;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            pcVar10 = 0x42b400;\n            fcn.00405f20(0x42b400, 0);\n        }\n    }\n    if (*0x4247d4 != 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffe3c);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar5);\n        if (iVar4 != 0) {\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, \"SeShutdownPrivilege\", &stack0xfffffe50);\n            pcStack448 = 0x1;\n            puStack436 = 0x2;\n            (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(iStack456, 0, &stack0xfffffe40, 0, 0, 0);\n        }\n        pcVar3 = fcn.004064d9(4);\n        uVar5 = 0x80040002;\n        if (((pcVar3 != NULL) && (iVar4 = (*pcVar3)(0, 0, 0, 0x25, 0x80040002),  iVar4 == 0)) ||\n           (iVar4 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0x80040002),  iVar4 == 0)) {\n            fcn.0040140b(9);\n        }\n    }\n    if (*0x4247ec != -1) {\n        iStack456 = *0x4247ec;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iStack456);\n    pcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018, uVar5);\n        *0x40a018 = -1;\n    }\n    if (*0x40a01c != -1) {\n        (*pcVar3)(*0x40a01c, uVar5);\n        *0x40a01c = -1;\n    }\n    fcn.004038c9();\n    fcn.00405909(0x42b800, 7);\n    return;\n}\n",
        "token_count": 3044
    },
    "0040661e": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040661e(uint *param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    uint var_90h;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    int32_t var_78h;\n    uint32_t var_74h;\n    uint8_t *var_70h;\n    int32_t var_6ch;\n    uint8_t *var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint16_t *var_58h;\n    uint16_t *var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t dwBytes;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t hMem;\n    \n    puVar12 = param_1;\n    puVar13 = &var_88h;\n    for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    uVar9 = var_44h;\n    puVar11 = var_54h;\n    if (var_30h == -1) {\n        return 1;\n    }\ncode_r0x00406651:\n    do {\n        uVar5 = var_20h;\n        uVar7 = var_2ch;\n        puVar4 = var_68h;\n        puVar3 = var_70h;\n        if (0x1c < var_88h) {\n            return 0xffffffff;\n        }\n    // switch table (29 cases) at 0x407070\n        switch(*(var_88h * 4 + 0x407070)) {\n        case 0x406667:\n            if (var_6ch == 0) goto code_r0x00407053;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            uVar1 = *puVar3;\n            if (0xe1 < uVar1) {\n                return 0xffffffff;\n            }\n            var_3ch = (uVar1 % 0x2d) % 9;\n            var_1ch = (1 << uVar1 / 0x2d) - 1;\n            var_18h = (1 << (uVar1 % 0x2d) / 9) - 1;\n            iVar10 = (0x300 << var_3ch + uVar1 / 0x2d) + 0x736;\n            iVar8 = iVar10 * 2;\n            if (iVar8 != var_78h) {\n                if (hMem != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n                }\n                hMem = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar8);\n                if (hMem == 0) {\n                    return 0xffffffff;\n                }\n                var_78h = iVar8;\n            }\n            while (iVar10 != 0) {\n                iVar10 = iVar10 + -1;\n                *(hMem + iVar10 * 2) = 0x400;\n            }\n            dwBytes = 0;\n            for (var_48h = 0; var_48h < 4; var_48h = var_48h + 1) {\ncode_r0x0040670c:\n                if (var_6ch == 0) {\n                    var_88h = 1;\n                    goto code_r0x00407053;\n                }\n                var_6ch = var_6ch + -1;\n                dwBytes = dwBytes | *var_70h << (var_48h << 3 & 0x1f);\n                var_70h = var_70h + 1;\n            }\n            if (dwBytes != var_74h) {\n                var_74h = dwBytes;\n                if (var_8h != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(var_8h);\n                }\n                var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n                if (var_8h == 0) {\n                    return 0xffffffff;\n                }\n            }\n            var_48h = 5;\n            *(var_8h + -1 + var_74h) = 0;\n            while (uVar7 = var_48h,  var_48h = var_48h - 1,  uVar7 != 0) {\ncode_r0x0040677c:\n                if (var_6ch == 0) {\n                    var_88h = 3;\n                    goto code_r0x00407053;\n                }\n                var_6ch = var_6ch + -1;\n                uVar1 = *var_70h;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n            }\n        case 0x4067a7:\n            var_84h = 6;\n            var_4ch = var_60h & var_1ch;\n            puVar11 = hMem + (var_38h * 0x10 + (var_60h & var_1ch)) * 2;\n            break;\n        case 0x40670c:\n            goto code_r0x0040670c;\n        case 0x40677c:\n            goto code_r0x0040677c;\n        case 0x4067cd:\n            if (dwBytes != 0) {\n                var_34h = 1;\n                var_84h = 7;\n                puVar11 = hMem + 0x180 + var_38h * 2;\n                break;\n            }\n            var_58h = ((var_5ch >> (8 - var_3ch & 0x1f)) + ((var_60h & var_18h) << (var_3ch & 0x1f))) * 0x600 + 0xe6c +\n                      hMem;\n            if (var_38h < 4) {\n                var_38h = 0;\n            }\n            else if (var_38h < 10) {\n                var_38h = var_38h + -3;\n            }\n            else {\n                var_38h = var_38h + -6;\n            }\n            if (var_34h != 0) {\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                uVar9 = 1;\n                var_5ch._1_1_ = *(uVar7 + var_8h);\n                do {\n                    uVar1 = var_5ch._1_1_;\n                    var_5ch._1_1_ = var_5ch._1_1_ << 1;\n                    var_48h = uVar1 >> 7;\n                    puVar11 = var_58h + ((uVar1 >> 7) + 1) * 0x100 + uVar9;\n                    uVar2 = *puVar11;\n                    var_54h = puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    bVar14 = uVar7 <= var_ch;\n                    if (bVar14) {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        dwBytes = 1;\n                        uVar9 = uVar9 * 2 + 1;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                    }\n                    else {\n                        dwBytes = 0;\n                        var_10h = uVar7;\n                        uVar9 = uVar9 * 2;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    dwBytes = bVar14;\n                    var_44h = uVar9;\n                    if (var_10h < 0x1000000) {\ncode_r0x00406866:\n                        if (var_6ch == 0) {\n                            var_88h = 0xd;\n                            goto code_r0x00407053;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                    if (var_48h != dwBytes) goto code_r0x00406944;\n                } while (uVar9 < 0x100);\n                goto code_r0x004069a8;\n            }\n            uVar9 = 1;\n            do {\n                puVar11 = var_58h + uVar9;\n                uVar2 = *puVar11;\n                var_54h = puVar11;\n                uVar7 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar7) {\n                    var_10h = uVar7;\n                    uVar9 = uVar9 * 2;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar7;\n                    var_ch = var_ch - uVar7;\n                    uVar9 = uVar9 * 2 + 1;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                }\n                var_44h = uVar9;\n                if (var_10h < 0x1000000) {\ncode_r0x004069e3:\n                    if (var_6ch == 0) {\n                        var_88h = 0xf;\n                        goto code_r0x00407053;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            } while (uVar9 < 0x100);\n            goto code_r0x004069ac;\n        case 0x406866:\n            goto code_r0x00406866;\n        case 0x40691f:\n            goto code_r0x0040691f;\n        case 0x4069b2:\n            goto code_r0x004069b2;\n        case 0x4069e3:\n            goto code_r0x004069e3;\n        case 0x406a6c:\n            if (dwBytes != 1) {\n                var_80h = 0x16;\n                var_20h = var_24h;\n                var_24h = var_28h;\n                var_28h = var_2ch;\n                var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 10;\n                var_58h = hMem + 0x664;\n                goto code_r0x00406ac4;\n            }\n            var_84h = 8;\n            puVar11 = hMem + 0x198 + var_38h * 2;\n            break;\n        case 0x406ad6:\n            if (dwBytes == 0) {\n                var_84h = 9;\n                puVar11 = hMem + ((var_38h + 0xf) * 0x10 + var_4ch) * 2;\n            }\n            else {\n                var_84h = 10;\n                puVar11 = hMem + 0x1b0 + var_38h * 2;\n            }\n            break;\n        case 0x406b19:\n            if (dwBytes != 0) goto code_r0x00406bd4;\n            if (var_60h == 0) {\n                return 0xffffffff;\n            }\n            var_38h = (6 < var_38h) * 2 + 9;\n        case 0x406b3d:\n            if (var_64h == 0) {\n                var_88h = 0x1b;\n                goto code_r0x00407053;\n            }\n            uVar7 = var_14h - var_2ch;\n            if (var_74h <= uVar7) {\n                uVar7 = uVar7 + var_74h;\n            }\n            var_5ch._0_1_ = *(uVar7 + var_8h);\n            *(var_14h + var_8h) = var_5ch;\n            var_60h = var_60h + 1;\n            var_68h = var_68h + 1;\n            var_64h = var_64h + -1;\n            *puVar4 = var_5ch;\n            goto code_r0x00406b78;\n        case 0x406b8a:\n            if (dwBytes == 0) goto code_r0x00406bcb;\n            var_84h = 0xb;\n            puVar11 = hMem + 0x1c8 + var_38h * 2;\n            break;\n        case 0x406bb1:\n            uVar6 = var_24h;\n            if (dwBytes != 0) {\n                var_20h = var_24h;\n                uVar6 = uVar5;\n            }\n            var_24h = var_28h;\n            var_28h = uVar6;\ncode_r0x00406bcb:\n            var_2ch = var_28h;\n            var_28h = uVar7;\ncode_r0x00406bd4:\n            var_80h = 0x15;\n            var_58h = hMem + 0xa68;\n        case 0x406ac4:\ncode_r0x00406ac4:\n            var_84h = 0x12;\n            puVar11 = var_58h;\n            break;\n        case 0x406beb:\n            var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 0xb;\n            goto code_r0x00406d9c;\n        case 0x406c02:\n            iVar8 = var_30h;\n            if (3 < var_30h) {\n                iVar8 = 3;\n            }\n            dwBytes = 6;\n            var_7ch = 0x19;\n            var_58h = iVar8 * 0x80 + 0x360 + hMem;\n            goto code_r0x00406efe;\n        case 0x406c30:\n            var_2ch = uVar9;\n            if (3 < uVar9) {\n                iVar8 = uVar9 >> 1;\n                dwBytes = iVar8 - 1;\n                uVar7 = (uVar9 & 1 | 2) << (dwBytes & 0x1f);\n                var_2ch = uVar7;\n                if (0xd < uVar9) {\n                    uVar9 = 0;\n                    var_48h = iVar8 - 5;\n                    goto code_r0x00406c9c;\n                }\n                var_58h = hMem + 0x55e + (uVar7 - uVar9) * 2;\ncode_r0x00406ce0:\n                uVar9 = 0;\n                var_50h = 1;\n                var_44h = 0;\n                for (var_48h = 0; var_48h < dwBytes; var_48h = var_48h + 1) {\n                    puVar11 = var_58h + var_50h;\n                    var_54h = puVar11;\n                    uVar2 = *puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    if (var_ch < uVar7) {\n                        var_10h = uVar7;\n                        var_50h = var_50h << 1;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    else {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        uVar9 = var_44h | 1 << (var_48h & 0x1f);\n                        var_44h = uVar9;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                        var_50h = var_50h * 2 + 1;\n                    }\n                    if (var_10h < 0x1000000) {\ncode_r0x00406cf4:\n                        if (var_6ch == 0) {\n                            var_88h = 0x10;\n                            goto code_r0x00407053;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                }\n                var_2ch = var_2ch + uVar9;\n            }\n            var_2ch = var_2ch + 1;\ncode_r0x00406d9c:\n            if (var_2ch == 0) {\n                var_30h = 0xffffffff;\n                goto code_r0x00407053;\n            }\n            if (var_60h < var_2ch) {\n                return 0xffffffff;\n            }\n            var_30h = var_30h + 2;\n            var_60h = var_60h + var_30h;\ncode_r0x00406dba:\n            do {\n                puVar3 = var_68h;\n                if (var_64h == 0) {\n                    var_88h = 0x1c;\n                    goto code_r0x00407053;\n                }\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                var_5ch._0_1_ = *(uVar7 + var_8h);\n                *(var_14h + var_8h) = var_5ch;\n                var_68h = var_68h + 1;\n                var_64h = var_64h + -1;\n                var_30h = var_30h + -1;\n                *puVar3 = var_5ch;\n                var_14h = (var_14h + 1) % var_74h;\n            } while (0 < var_30h);\n            goto code_r0x00406b7b;\n        case 0x406c71:\n            while (var_6ch != 0) {\n                var_10h = var_10h << 8;\n                uVar1 = *var_70h;\n                var_6ch = var_6ch + -1;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n                uVar7 = var_2ch;\n                do {\n                    var_48h = var_48h - 1;\ncode_r0x00406c9c:\n                    if (var_48h < 1) {\n                        dwBytes = 4;\n                        var_2ch = uVar7 + uVar9 * 0x10;\n                        var_58h = hMem + 0x644;\n                        goto code_r0x00406ce0;\n                    }\n                    uVar9 = uVar9 * 2;\n                    var_10h = var_10h >> 1;\n                    var_44h = uVar9;\n                    if (var_10h <= var_ch) {\n                        var_ch = var_ch - var_10h;\n                        uVar9 = uVar9 | 1;\n                        var_44h = uVar9;\n                    }\n                } while (0xffffff < var_10h);\n            }\n            var_88h = 0xc;\n            goto code_r0x00407053;\n        case 0x406cf4:\n            goto code_r0x00406cf4;\n        case 0x406dba:\n            goto code_r0x00406dba;\n        case 0x406e03:\n            if (dwBytes == 0) {\n                var_30h = 0;\n                iVar8 = var_4ch * 8 + 2;\ncode_r0x00406e1a:\n                var_58h = var_58h + iVar8;\n                dwBytes = 3;\n                goto code_r0x00406ef7;\n            }\n            var_84h = 0x13;\n            puVar11 = var_58h + 1;\n            break;\n        case 0x406e3c:\n            goto code_r0x00406e3c;\n        case 0x406e8a:\n            goto code_r0x00406e8a;\n        case 0x406ec0:\n            if (dwBytes == 0) {\n                var_30h = 8;\n                iVar8 = var_4ch * 8 + 0x82;\n                goto code_r0x00406e1a;\n            }\n            var_58h = var_58h + 0x102;\n            var_30h = 0x10;\n            dwBytes = 8;\ncode_r0x00406ef7:\n            var_7ch = 0x14;\n        case 0x406efe:\ncode_r0x00406efe:\n            var_50h = 1;\n            for (var_48h = dwBytes; 0 < var_48h; var_48h = var_48h - 1) {\n                puVar11 = var_58h + var_50h;\n                var_54h = puVar11;\n                uVar2 = *puVar11;\n                uVar9 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar9) {\n                    var_10h = uVar9;\n                    var_50h = var_50h << 1;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar9;\n                    var_ch = var_ch - uVar9;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                    var_50h = var_50h * 2 + 1;\n                }\n                if (var_10h < 0x1000000) {\ncode_r0x00406f0d:\n                    if (var_6ch == 0) {\n                        var_88h = 0x18;\n                        goto code_r0x00407053;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            }\n            uVar9 = var_50h - (1 << (dwBytes & 0x1f));\n            var_44h = uVar9;\n            var_88h = var_7ch;\n            goto code_r0x00406eb5;\n        case 0x406f0d:\n            goto code_r0x00406f0d;\n        case 0x406fb1:\n            var_30h = var_30h + uVar9;\n            var_88h = var_80h;\n            goto code_r0x00406eb5;\n        }\n        var_54h = puVar11;\ncode_r0x00406e3c:\n        uVar2 = *puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        bVar14 = uVar7 <= var_ch;\n        if (bVar14) {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            dwBytes = 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        else {\n            var_10h = uVar7;\n            dwBytes = 0;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        dwBytes = bVar14;\n        var_88h = var_84h;\n        if (var_10h < 0x1000000) {\ncode_r0x00406e8a:\n            if (var_6ch == 0) {\n                var_88h = 5;\n                goto code_r0x00407053;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n            var_88h = var_84h;\n        }\ncode_r0x00406eb5:\n    } while( true );\ncode_r0x00406944:\n    if (uVar9 < 0x100) {\n        puVar11 = var_58h + uVar9;\n        uVar2 = *puVar11;\n        var_54h = puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        if (var_ch < uVar7) {\n            var_10h = uVar7;\n            uVar9 = uVar9 * 2;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        else {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            uVar9 = uVar9 * 2 + 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        var_44h = uVar9;\n        if (var_10h < 0x1000000) {\ncode_r0x0040691f:\n            if (var_6ch == 0) {\n                var_88h = 0xe;\n                goto code_r0x00407053;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n        }\n        goto code_r0x00406944;\n    }\ncode_r0x004069a8:\n    var_34h = 0;\ncode_r0x004069ac:\n    var_5ch._0_1_ = var_44h;\ncode_r0x004069b2:\n    if (var_64h == 0) {\n        var_88h = 0x1a;\ncode_r0x00407053:\n        puVar12 = &var_88h;\n        for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *param_1 = *puVar12;\n            puVar12 = puVar12 + 1;\n            param_1 = param_1 + 1;\n        }\n        return 0;\n    }\n    var_60h = var_60h + 1;\n    var_68h = var_68h + 1;\n    var_64h = var_64h + -1;\n    *puVar4 = var_5ch;\n    *(var_14h + var_8h) = var_5ch;\ncode_r0x00406b78:\n    var_14h = (var_14h + 1) % var_74h;\ncode_r0x00406b7b:\n    var_88h = 2;\n    goto code_r0x00406651;\n}\n",
        "token_count": 6620
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    char *pcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *lpBuffer;\n    int32_t iVar10;\n    int32_t *extraout_EDX;\n    uint uVar11;\n    int32_t **ppiVar12;\n    char *pcVar13;\n    int32_t **ppiVar14;\n    int32_t **ppiVar15;\n    char *pcVar16;\n    uint32_t uVar17;\n    uint uVar18;\n    bool bVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    ulong uVar22;\n    ulong uVar23;\n    uint in_stack_fffffdcc;\n    uint in_stack_fffffdd0;\n    uint uVar24;\n    uint lpFindFileData;\n    uint var_19ch;\n    uint32_t var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint32_t lpFileOp;\n    uint var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint lpRect;\n    uint var_50h;\n    uint lpValueName;\n    int32_t var_48h;\n    uint var_44h;\n    code *var_40h;\n    code *var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint32_t dwFileAttributes;\n    uint32_t fuLoad;\n    uint32_t lpLastWriteTime;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t *hFile;\n    uint8_t var_15h;\n    uint32_t var_14h;\n    int32_t *lpMultiByteStr;\n    uint32_t lpWideCharStr;\n    uint32_t hWndParent;\n    uint32_t var_4h;\n    \n    ppiVar14 = *0x40b840;\n    pcVar5 = _sym.imp.USER32.dll_ShowWindow;\n    hWndParent = *0x424728;\n    uVar11 = 0;\n    ppiVar12 = hWndChildAfter;\n    ppiVar15 = &var_38h;\n    for (iVar10 = 7; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *ppiVar15 = *ppiVar12;\n        ppiVar12 = ppiVar12 + 1;\n        ppiVar15 = ppiVar15 + 1;\n    }\n    iVar10 = var_34h * 0x400;\n    var_4h = 0;\n    pcVar13 = iVar10 + 0x425000;\n    pcVar16 = dwFileAttributes * 0x400 + 0x425000;\n    *0x40b83c = &var_34h;\n    if (0x41 < var_38h - 2U) goto code_r0x004029b8;\n    // switch table (66 cases) at 0x4029ca\n    switch(*((var_38h - 2U) * 4 + 0x4029ca)) {\n    case 0x401490:\ncode_r0x00401492:\n        fcn.00405268(in_stack_fffffdcc, in_stack_fffffdd0);\n        return 0x7fffffff;\n    case 0x40149c:\n        *0x423eec = *0x423eec + 1;\n        if (hWndParent == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014b7:\n        iVar10 = fcn.0040136d(var_34h);\n        uVar8 = fcn.00401389(iVar10 + -1, 0);\n        return uVar8;\n    case 0x4014ca:\n        fcn.00405268(var_34h, 0);\n        break;\n    case 0x4014d6:\n        uVar23 = fcn.00402b0a(0);\n        lpMultiByteStr = uVar23 >> 0x20;\n        iVar10 = uVar23;\n        if (iVar10 < 2) {\n            iVar10 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar10);\n        break;\n    case 0x4014f4:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(hWndParent);\n        break;\n    case 0x401502:\n        iVar10 = var_34h * 4;\n        if (fuLoad == 0) {\n            *(iVar10 + 0x424800) = *(iVar10 + 0x4247c0);\n            uVar11 = fcn.00402b0a(1);\n            *(var_34h * 4 + 0x4247c0) = uVar11;\n        }\n        else {\n            *(iVar10 + 0x4247c0) = *(iVar10 + 0x424800);\n        }\n        break;\n    case 0x401541:\n        puVar1 = fuLoad * 4 + 0x4247c0;\n        uVar8 = *puVar1;\n        uVar17 = (&var_34h)[uVar8 == 0];\n        *puVar1 = uVar8 & lpLastWriteTime;\n        return uVar17;\n    case 0x401562:\n        _var_14h = CONCAT44(lpMultiByteStr, var_14h);\n        goto code_r0x00402960;\n    case 0x40156f:\n        if (*0x423ef0 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x423ef0, dwFileAttributes);\n        }\n        if (*0x423f04 != 0) {\n            (*pcVar5)(*0x423f04, var_34h);\n        }\n        break;\n    case 0x40159d:\n        uVar11 = fcn.00402b2c(0xfffffff0);\n        iVar10 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar11, dwFileAttributes);\n        goto code_r0x004015ae;\n    case 0x4015bb:\n        uVar11 = fcn.00402b2c(0xfffffff0);\n        puVar3 = fcn.00405b72(uVar11);\n        if (puVar3 != NULL) {\n            do {\n                puVar3 = fcn.00405b04(puVar3, 0x5c);\n                uVar2 = *puVar3;\n                *puVar3 = 0;\n                hWndChildAfter = hWndChildAfter & 0xffffff | uVar2 << 0x18;\n                if (((uVar2 == 0) && (fuLoad != 0)) && (iVar10 = fcn.004057c8(),  iVar10 != 0)) {\n                    iVar10 = fcn.0040572e(uVar11);\n                }\n                else {\n                    iVar10 = fcn.004057ab(uVar11);\n                }\n                if ((iVar10 != 0) &&\n                   ((iVar10 != 0xb7 ||\n                    (uVar8 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar11),  (uVar8 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *puVar3 = hWndChildAfter._3_1_;\n                puVar3 = puVar3 + 1;\n            } while (hWndChildAfter._3_1_ != 0);\n        }\n        if (dwFileAttributes == 0) goto code_r0x004022a4;\n        fcn.00401423(0xffffffe6);\n        fcn.00406141(0x42a800, uVar11);\n        iVar10 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar11);\n        if (iVar10 == 0) {\n            var_4h = var_4h + 1;\n        }\n        break;\n    case 0x401659:\n        uVar11 = fcn.00402b2c(0);\n        iVar10 = fcn.00406444(uVar11);\n        lpLastWriteTime = dwFileAttributes;\n        goto joined_r0x00401a0c;\n    case 0x40166a:\n        uVar11 = fcn.00402b2c(0xffffffd0);\n        uVar24 = fcn.00402b2c(0xffffffdf);\n        fcn.00402b2c(0x13);\n        iVar10 = (*_sym.imp.KERNEL32.dll_MoveFileA)(uVar11, uVar24);\n        if (iVar10 == 0) {\n            if ((fuLoad == 0) || (iVar10 = fcn.00406444(uVar11),  iVar10 == 0)) goto code_r0x00402783;\n            fcn.00405f20(uVar11, uVar24);\n        }\n        goto code_r0x004022a4;\n    case 0x4016bb:\n        ppiVar14 = fcn.00402b2c(0);\n        iVar10 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(ppiVar14, 0x400, pcVar16, &hWndChildAfter);\n        if (iVar10 == 0) {\ncode_r0x004016fb:\n            var_4h = 1;\n            *pcVar16 = '\\0';\n        }\n        else if ((ppiVar14 < hWndChildAfter) && (*hWndChildAfter != '\\0')) {\n            iVar10 = fcn.00406444(ppiVar14);\n            if (iVar10 == 0) goto code_r0x004016fb;\n            fcn.00406141(hWndChildAfter, iVar10 + 0x2c);\n        }\n        if (fuLoad == 0) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(pcVar16, pcVar16, 0x400);\n        }\n        break;\n    case 0x40171f:\n        uVar11 = fcn.00402b2c(0xffffffff);\n        iVar10 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar11, 0, 0x400, pcVar13, &hWndChildAfter);\n        bVar19 = iVar10 == 0;\n        goto code_r0x0040173b;\n    case 0x401746:\n        uVar11 = fcn.00402b2c(0xffffffef);\n        iVar10 = fcn.00405d09(pcVar13, uVar11);\n        goto code_r0x004015ae;\n    case 0x401759:\n        uVar8 = fcn.00402b2c(0x31);\n        hWndChildAfter = var_34h & 7;\n        hWndParent = uVar8;\n        iVar10 = fcn.00405b46(uVar8);\n        if (iVar10 == 0) {\n            uVar24 = 0x42a800;\n            uVar11 = fcn.00406141(0x40a400, 0x42a800, uVar8);\n            uVar11 = fcn.00405ad9(uVar11);\n            sub.KERNEL32.dll_lstrcatA(uVar11);\n        }\n        else {\n            uVar24 = 0x40a400;\n            fcn.00406141(0x40a400);\n        }\n        fcn.004063ab(0x40a400);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar10 = fcn.00406444(0x40a400);\n                uVar8 = 0;\n                if (iVar10 != 0) {\n                    uVar8 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar10 + 0x14, &lpLastWriteTime);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar8) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00405cb5(0x40a400);\n            }\n            lpWideCharStr = fcn.00405cda(0x40a400, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (lpWideCharStr != -1) {\n                fcn.00405268(0xffffffea, hWndParent);\n                *0x4247f4 = *0x4247f4 + 1;\n                iVar10 = fcn.004030b5(fuLoad, lpWideCharStr, 0, 0);\n                *0x4247f4 = *0x4247f4 + -1;\n                if ((lpLastWriteTime != 0xffffffff) || (var_24h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)(lpWideCharStr, &lpLastWriteTime, 0, &lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(lpWideCharStr);\n                if (-1 < iVar10) goto code_r0x004029b8;\n                if (iVar10 == -2) {\n                    uVar7 = 0xffffffe9;\n                    fcn.00406163(0x40a400, 0xffffffe9);\n                    uVar18 = 0x40a400;\n                    sub.KERNEL32.dll_lstrcatA(uVar24, hWndParent, 0x40a400);\n                }\n                else {\n                    uVar7 = 0xffffffee;\n                    uVar18 = 0x40a400;\n                    fcn.00406163(0x40a400, 0xffffffee);\n                }\n                uVar24 = 0x200010;\n                uVar11 = 0x40a400;\n                goto code_r0x00402349;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.00405268(0xffffffe2, hWndParent);\n                bVar19 = hWndChildAfter == 0x2;\n                goto code_r0x004015b0;\n            }\n            fcn.00406141(0x40ac00, 0x425000);\n            fcn.00406141(0x425000, 0x40a400);\n            fcn.00406163(0x40a800, var_20h);\n            fcn.00406141(0x425000, 0x40ac00);\n            iVar10 = fcn.0040585d();\n        } while (iVar10 == 4);\n        if (iVar10 != 5) {\n            in_stack_fffffdd0 = 0x40a400;\n            in_stack_fffffdcc = 0xfffffffa;\n            goto code_r0x00401492;\n        }\n        *0x4247c8 = *0x4247c8 + 1;\n        goto code_r0x004029c1;\n    case 0x4018fd:\n        uVar11 = 0;\n        goto code_r0x00401934;\n    case 0x401900:\n        uVar11 = fcn.00402b2c(0x31);\n        uVar8 = fcn.0040585d(uVar11, var_34h);\n        if (uVar8 == 0) goto code_r0x00402783;\n        if (uVar8 == fuLoad) {\n            return lpLastWriteTime;\n        }\n        if (uVar8 == var_24h) {\n            return var_20h;\n        }\n        break;\n    case 0x401932:\n        uVar11 = 0xfffffff0;\ncode_r0x00401934:\n        uVar11 = fcn.00402b2c(uVar11);\n        fcn.00405909(uVar11, dwFileAttributes);\n        break;\n    case 0x401947:\n        uVar11 = fcn.00402b2c(1);\n        sub.KERNEL32.dll_lstrlenA(uVar11);\n        goto code_r0x00402960;\n    case 0x401959:\n        _var_14h = fcn.00402b0a(2);\n        uVar23 = fcn.00402b0a(3);\n        iVar10 = uVar23;\n        var_50h._0_2_ = uVar23;\n        var_50h._2_2_ = uVar23 >> 0x10;\n        lpValueName._0_2_ = uVar23 >> 0x20;\n        lpValueName._2_2_ = uVar23 >> 0x30;\n        hWndChildAfter = var_14h;\n        hFile = fcn.00402b2c(1);\n        iVar9 = sub.KERNEL32.dll_lstrlenA(hFile);\n        *pcVar13 = '\\0';\n        if (lpMultiByteStr == NULL) {\n            hWndChildAfter = iVar9;\n        }\n        if ((hWndChildAfter != NULL) &&\n           ((-1 < var_50h._2_2_ || (iVar10 = iVar9 + CONCAT22(var_50h._2_2_, var_50h),  -1 < iVar10)))) {\n            if (iVar9 < iVar10) {\n                iVar10 = iVar9;\n            }\n            fcn.00406141(pcVar13, hFile + iVar10);\n            if (hWndChildAfter < 0) {\n                iVar10 = sub.KERNEL32.dll_lstrlenA(pcVar13);\n                hWndChildAfter = hWndChildAfter + iVar10;\n                if (hWndChildAfter < 0) {\n                    hWndChildAfter = NULL;\n                }\n            }\n            if (hWndChildAfter < 0x400) {\n                pcVar13[hWndChildAfter] = '\\0';\n            }\n        }\n        break;\n    case 0x4019ed:\n        uVar11 = fcn.00402b2c(0x20);\n        uVar24 = fcn.00402b2c(0x31);\n        if (var_24h == 0) {\n            iVar10 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        }\n        else {\n            iVar10 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar11, uVar24);\n        }\n        goto joined_r0x00401a0c;\n    case 0x401a1e:\n        hWndChildAfter = fcn.00402b2c(1);\n        iVar9 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(hWndChildAfter, pcVar13, 0x400);\n        if ((iVar9 == 0) ||\n           ((fuLoad != 0 && (iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(hWndChildAfter, pcVar13),  iVar9 == 0)))) {\n            var_4h = 1;\n            *pcVar13 = '\\0';\n        }\n        *(iVar10 + 0x4253ff) = 0;\n        break;\n    case 0x401a5e:\n        uVar23 = fcn.00402b0a(0);\n        lpMultiByteStr = uVar23 >> 0x20;\n        uVar8 = uVar23;\n        uVar17 = fcn.00402b0a(1);\n        if (var_20h != 0) {\n            if (uVar8 < uVar17) {\n                return lpLastWriteTime;\n            }\n            if (uVar8 <= uVar17) {\n                return fuLoad;\n            }\n            return var_24h;\n        }\n        if (uVar8 < uVar17) {\n            return lpLastWriteTime;\n        }\n        if (uVar8 <= uVar17) {\n            return fuLoad;\n        }\n        return var_24h;\n    case 0x401a9e:\n        uVar23 = fcn.00402b0a(1);\n        iVar10 = uVar23;\n        uVar20 = fcn.00402b0a(2);\n        lpMultiByteStr = uVar23 >> 0x20;\n        hWndChildAfter = uVar23;\n        uVar21 = uVar20 & 0xffffffff00000000 | var_14h;\n        _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n        if (0xd < lpLastWriteTime) goto code_r0x00402960;\n    // switch table (14 cases) at 0x402ad2\n        switch(*(lpLastWriteTime * 4 + 0x402ad2)) {\n        case 0x401aca:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            break;\n        case 0x401ace:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            break;\n        case 0x401ad2:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            break;\n        case 0x401ad7:\n            goto joined_r0x00401b14;\n        case 0x401ae4:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            break;\n        case 0x401ae8:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            break;\n        case 0x401aec:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            break;\n        case 0x401af2:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            break;\n        case 0x401afb:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            if (iVar10 == 0) {\ncode_r0x00401b09:\n                _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            }\n            break;\n        case 0x401b05:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            if (iVar10 != 0) goto code_r0x00401b09;\n            break;\n        case 0x401b12:\n            uVar21 = uVar20 & 0xffffffff00000000 | var_14h;\njoined_r0x00401b14:\n            _var_14h = uVar21;\n            if (uVar20 == 0) {\n                var_4h = 1;\n                _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            }\n            break;\n        case 0x401b2a:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            break;\n        case 0x401b2e:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n            break;\n        case 0x401b32:\n            _var_14h = uVar20 & 0xffffffff00000000 | var_14h;\n        }\n        goto code_r0x00402960;\n    case 0x401b3f:\n        uVar11 = fcn.00402b2c(1);\n        uVar23 = fcn.00402b0a(2);\n        lpMultiByteStr = uVar23 >> 0x20;\n        (*_sym.imp.USER32.dll_wsprintfA)(pcVar13, uVar11, uVar23);\n        break;\n    case 0x401b63:\n        ppiVar12 = *0x40b840;\n        if (fuLoad == 0) {\n            if (dwFileAttributes != 0) {\n                if (*0x40b840 != NULL) {\n                    fcn.00406141(pcVar13, *0x40b840 + 1);\n                    *0x40b840 = *ppiVar14;\n                    goto code_r0x00401bd2;\n                }\n                goto code_r0x00402783;\n            }\n            ppiVar14 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x404);\n            fcn.00406163(ppiVar14 + 1, var_34h);\n            *ppiVar14 = *0x40b840;\n            *0x40b840 = ppiVar14;\n        }\n        else {\n            do {\n                fuLoad = fuLoad - 1;\n                if (ppiVar12 == NULL) goto code_r0x0040233b;\n                ppiVar12 = *ppiVar12;\n            } while (fuLoad != 0);\n            if (ppiVar12 == NULL) goto code_r0x0040233b;\n            ppiVar12 = ppiVar12 + 1;\n            pcVar13 = 0x40a400;\n            ppiVar14 = ppiVar12;\n            fcn.00406141(0x40a400, ppiVar12);\n            fcn.00406141(ppiVar12, *0x40b840 + 1);\ncode_r0x004028d6:\n            fcn.00406141(pcVar13, ppiVar14);\n        }\n        break;\n    case 0x401c0a:\n        uVar23 = fcn.00402b0a(3);\n        uVar21 = fcn.00402b0a(4);\n        lpMultiByteStr = uVar23 >> 0x20;\n        hWndParent = uVar23;\n        if ((var_20h & 1) != 0) {\n            hWndParent = fcn.00402b2c(0x33);\n            lpMultiByteStr = uVar21 >> 0x20;\n            hWndChildAfter = uVar21;\n        }\n        if ((var_20h & 2) != 0) {\n            uVar8 = fcn.00402b2c(0x44);\n            lpMultiByteStr = uVar21 >> 0x20;\n            hWndChildAfter = uVar21;\n            uVar21 = uVar21 & 0xffffffff00000000 | uVar8;\n        }\n        if (var_38h == 0x21) {\n            uVar23 = fcn.00402b0a();\n            lpMultiByteStr = uVar21 >> 0x20;\n            hWndChildAfter = uVar21;\n            lpMultiByteStr = uVar23 >> 0x20;\n            uVar22 = fcn.00402b0a(2);\n            lpMultiByteStr = uVar22 >> 0x20;\n            if (var_20h >> 2 == 0) {\n                lpWideCharStr = (*_sym.imp.USER32.dll_SendMessageA)(uVar23, uVar22, hWndParent, hWndChildAfter);\n                uVar21 = CONCAT44(lpMultiByteStr, hWndChildAfter);\n            }\n            else {\n                iVar10 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                                   (uVar23, uVar22, hWndParent, hWndChildAfter, 0, var_20h >> 2, &lpWideCharStr);\n                uVar21 = CONCAT44(lpMultiByteStr, hWndChildAfter);\n                var_4h = iVar10 == 0;\n            }\n        }\n        else {\n            pcVar16 = fcn.00402b2c(1);\n            lpMultiByteStr = uVar21 >> 0x20;\n            hWndChildAfter = uVar21;\n            pcVar4 = fcn.00402b2c(0x12);\n            lpMultiByteStr = uVar21 >> 0x20;\n            hWndChildAfter = uVar21;\n            lpWideCharStr =\n                 (*_sym.imp.USER32.dll_FindWindowExA)\n                           (hWndParent, hWndChildAfter, -(*pcVar16 != '\\0') & pcVar16, -(*pcVar4 != '\\0') & pcVar4);\n            lpMultiByteStr = uVar21 >> 0x20;\n            hWndChildAfter = uVar21;\n        }\n        _var_14h = uVar21 & 0xffffffff00000000 | var_14h;\n        hWndChildAfter = uVar21;\n        dwFileAttributes = var_34h;\njoined_r0x00402716:\n        if (-1 < dwFileAttributes) goto code_r0x00402960;\n        break;\n    case 0x401cda:\n        uVar23 = fcn.00402b0a(0);\n        lpMultiByteStr = uVar23 >> 0x20;\n        iVar10 = (*_sym.imp.USER32.dll_IsWindow)(uVar23);\n        lpLastWriteTime = dwFileAttributes;\njoined_r0x00401a0c:\n        if (iVar10 == 0) {\n            return fuLoad;\n        }\n        return lpLastWriteTime;\n    case 0x401cfb:\n        uVar23 = fcn.00402b0a(2);\n        lpMultiByteStr = uVar23 >> 0x20;\n        uVar22 = fcn.00402b0a(1);\n        lpMultiByteStr = uVar22 >> 0x20;\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar22, uVar23);\n        goto code_r0x00402960;\n    case 0x401d20:\n        iVar10 = *0x424788 + dwFileAttributes;\n        uVar23 = fcn.00402b0a(0);\n        lpMultiByteStr = uVar23 >> 0x20;\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar23, 0xffffffeb, iVar10);\n        break;\n    case 0x401d41:\n        if ((fuLoad & 0x100) == 0) {\n            uVar11 = (*_sym.imp.USER32.dll_GetDlgItem)(hWndParent, dwFileAttributes);\n            uVar23 = CONCAT44(lpMultiByteStr, uVar11);\n        }\n        else {\n            uVar23 = fcn.00402b0a(1);\n        }\n        hWndParent = fuLoad >> 0x1f;\n        uVar17 = fuLoad & 3;\n        uVar8 = fuLoad & 4;\n        hFile = fuLoad >> 0x1e & 1;\n        if ((fuLoad & 0x10000) == 0) {\n            lpWideCharStr = var_34h & 0xffff;\n        }\n        else {\n            lpWideCharStr = fcn.00402b2c(0);\n            lpMultiByteStr = uVar23 >> 0x20;\n            hWndChildAfter = uVar23;\n        }\n        hWndChildAfter = uVar23;\n        (*_sym.imp.USER32.dll_GetClientRect)(hWndChildAfter, &lpRect);\n        lpMultiByteStr = uVar23 >> 0x20;\n        hWndChildAfter = uVar23;\n        uVar11 = (*_sym.imp.USER32.dll_LoadImageA)\n                           (-(uVar8 != 0) & *0x424720, lpWideCharStr, uVar17, \n                            CONCAT22(var_50h._2_2_, var_50h) * hWndParent, \n                            CONCAT22(lpValueName._2_2_, lpValueName) * hFile, fuLoad & 0xfef0);\n        lpMultiByteStr = uVar23 >> 0x20;\n        hWndChildAfter = uVar23;\n        iVar10 = (*_sym.imp.USER32.dll_SendMessageA)(hWndChildAfter, 0x172, uVar17, uVar11);\n        lpMultiByteStr = uVar23 >> 0x20;\n        hWndChildAfter = uVar23;\n        if ((iVar10 != 0) && (uVar17 == 0)) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar10);\n            lpMultiByteStr = uVar23 >> 0x20;\n            hWndChildAfter = uVar23;\n        }\n        break;\n    case 0x401dff:\n        uVar11 = (*_sym.imp.USER32.dll_GetDC)(hWndParent);\n        uVar23 = fcn.00402b0a(2);\n        lpMultiByteStr = uVar23 >> 0x20;\n        uVar24 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar11, 0x5a, 0x48);\n        *0x40b800 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar23, uVar24);\n        *0x40b800 = -*0x40b800;\n        (*_sym.imp.USER32.dll_ReleaseDC)(hWndParent, uVar11);\n        uVar21 = fcn.00402b0a(3);\n        *0x40b814 = var_24h & 1;\n        *0x40b817 = 1;\n        *0x40b815 = var_24h & 2;\n        *0x40b816 = var_24h & 4;\n        fcn.00406163(0x40b81c, dwFileAttributes);\n        lpMultiByteStr = uVar21 >> 0x20;\n        *0x40b810 = uVar21;\n        (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x40b800);\n        lpMultiByteStr = uVar21 >> 0x20;\n        _var_14h = uVar21 & 0xffffffff00000000 | var_14h;\n        *0x40b810 = uVar21;\n        goto code_r0x00402960;\n    case 0x401e8f:\n        uVar23 = fcn.00402b0a(0);\n        lpMultiByteStr = uVar23 >> 0x20;\n        uVar22 = fcn.00402b0a(1);\n        lpMultiByteStr = uVar22 >> 0x20;\n        if (lpLastWriteTime == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar23, uVar22);\n        }\n        break;\n    case 0x401ec3:\n        pcVar13 = fcn.00402b2c(0);\n        iVar10 = 0x31;\n        var_74h = fcn.00402b2c(0x31);\n        pcVar16 = fcn.00402b2c(0x22);\n        fcn.00402b2c(0x15);\n        fcn.00401423(0xffffffec);\n        var_80h = var_24h;\n        var_7ch = hWndParent;\n        lpFileOp = lpLastWriteTime;\n        var_78h = -(*pcVar13 != '\\0') & pcVar13;\n        var_6ch = 0x42a800;\n        var_70h = -(*pcVar16 != '\\0') & pcVar16;\n        iVar9 = fcn.00405823(&var_84h);\n        if (iVar9 == 0) goto code_r0x00402783;\n        if ((var_80h & 0x40) != 0) {\n            fcn.0040654e(CONCAT22(lpValueName._2_2_, lpValueName));\n            goto code_r0x00401f8d;\n        }\n        break;\n    case 0x401f48:\n        uVar11 = fcn.00402b2c(0);\n        fcn.00405268(0xffffffeb, uVar11);\n        iVar10 = fcn.004057e0(uVar11);\n        if (iVar10 == 0) goto code_r0x00402783;\n        if (fuLoad != 0) {\n            iVar9 = fcn.0040654e(iVar10);\n            if (dwFileAttributes < 0) {\n                if (iVar9 != 0) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.0040609f(pcVar16, iVar9);\n            }\n        }\ncode_r0x00401f8d:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar10);\n        break;\n    case 0x401f98:\n        uVar11 = fcn.00402b2c(2);\n        hWndChildAfter = fcn.00406444(uVar11);\n        if (hWndChildAfter != NULL) {\n            fcn.0040609f(pcVar16, hWndChildAfter[5]);\n            _var_14h = CONCAT44(lpMultiByteStr, var_14h);\n            goto code_r0x00402960;\n        }\n        *pcVar13 = '\\0';\n        *pcVar16 = '\\0';\n        goto code_r0x00402783;\n    case 0x401fc8:\n        hFile = fcn.00402b2c(0xffffffee);\n        pcVar5 = fcn.004064d9(9, hFile, &lpMultiByteStr);\n        lpWideCharStr = (*pcVar5)();\n        *pcVar13 = '\\0';\n        *pcVar16 = '\\0';\n        var_4h = 1;\n        if ((lpWideCharStr != 0) &&\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, lpWideCharStr),  hWndChildAfter != NULL)) {\n            var_40h = fcn.004064d9(10);\n            var_3ch = fcn.004064d9(0xb);\n            iVar10 = (*var_40h)(hFile, 0, lpWideCharStr, hWndChildAfter);\n            ppiVar14 = hWndChildAfter;\n            if ((iVar10 != 0) &&\n               (ppiVar12 = hWndChildAfter,  iVar10 = (*var_3ch)(hWndChildAfter, 0x40a014, &hWndParent, &lpValueName), \n               ppiVar14 = hWndChildAfter,  iVar10 != 0)) {\n                uVar11 = *(hWndParent + 8);\n                fcn.0040609f(pcVar13, uVar11);\n                fcn.0040609f(ppiVar12, *(hWndParent + 0xc), pcVar13, uVar11, pcVar16);\n                var_4h = 0;\n                ppiVar14 = hWndChildAfter;\n            }\ncode_r0x00401bd2:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar14);\n        }\n        break;\n    case 0x402069:\n        var_4h = 1;\n        if (-1 < *0x4247f8) {\n            uVar11 = fcn.00402b2c(0xfffffff0);\n            hWndChildAfter = fcn.00402b2c(1);\n            if (((var_24h != 0) && (iVar10 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar11),  iVar10 != 0)) ||\n               (iVar10 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar11, 0, 8),  iVar10 != 0)) {\n                pcVar5 = sub.KERNEL32.dll_GetProcAddress(iVar10, hWndChildAfter);\n                if (pcVar5 == NULL) {\n                    fcn.00405268(0xfffffff7, hWndChildAfter);\n                }\n                else {\n                    var_4h = 0;\n                    if (fuLoad == 0) {\n                        (*pcVar5)(hWndParent, 0x400, 0x425000, 0x40b840, 0x40a000);\n                    }\n                    else {\n                        fcn.00401423(fuLoad);\n                        iVar9 = (*pcVar5)();\n                        if (iVar9 != 0) {\n                            var_4h = 1;\n                        }\n                    }\n                }\n                if ((lpLastWriteTime == 0) && (iVar9 = fcn.004038fe(iVar10),  iVar9 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar10);\n                }\n                break;\n            }\n        }\n        goto code_r0x004022a4;\n    case 0x402138:\n        lpMultiByteStr = fcn.00402b2c(0xfffffff0);\n        lpWideCharStr = fcn.00402b2c(0xffffffdf);\n        var_44h = fcn.00402b2c(2);\n        var_40h = fcn.00402b2c(0xffffffcd);\n        uVar11 = fcn.00402b2c(0x45);\n        lpValueName._0_2_ = uVar11;\n        lpValueName._2_2_ = uVar11 >> 0x10;\n        var_88h = var_24h & 0xfff;\n        var_3ch = var_24h >> 0x10 & 0xffff;\n        uVar8 = var_24h >> 0xc & 7;\n        iVar10 = fcn.00405b46(lpWideCharStr);\n        if (iVar10 == 0) {\n            fcn.00402b2c(0x21);\n        }\n        iVar10 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x408410, 0, 1, 0x408400, &hWndChildAfter);\n        if (-1 < iVar10) {\n            hWndParent = (***hWndChildAfter)(hWndChildAfter, 0x408420, &hFile);\n            if (-1 < hWndParent) {\n                hWndParent = (*(*hWndChildAfter)[0x14])(hWndChildAfter, lpWideCharStr);\n                if ((var_24h & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x42a800);\n                }\n                if (uVar8 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar8);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_3ch);\n                if (*var_40h != 0x0) {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, var_40h, var_88h);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, var_44h);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, CONCAT22(lpValueName._2_2_, lpValueName));\n                if (-1 < hWndParent) {\n                    hWndParent = 0x80004005;\n                    iVar10 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (0, 0, lpMultiByteStr, 0xffffffff, lpWideCharStr, 0x400);\n                    if (iVar10 != 0) {\n                        hWndParent = (**(*hFile + 0x18))(hFile, lpWideCharStr, 1);\n                    }\n                }\n                (**(*hFile + 8))(hFile);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < hWndParent) goto code_r0x004022a4;\n        }\n        var_4h = 1;\n        goto code_r0x004022a4;\n    case 0x4022b2:\n        iVar10 = fcn.00402b2c(0);\n        iVar9 = fcn.00402b2c(0x11);\n        hWndChildAfter = fcn.00402b2c(0x23);\n        iVar6 = fcn.00406444(iVar10);\n        if (iVar6 != 0) {\n            lpFileOp = hWndParent;\n            var_64h = 2;\n            iVar6 = sub.KERNEL32.dll_lstrlenA(iVar10);\n            *(iVar6 + 1 + iVar10) = 0;\n            iVar6 = sub.KERNEL32.dll_lstrlenA(iVar9);\n            *(iVar6 + 1 + iVar9) = 0;\n            var_50h._2_2_ = hWndChildAfter;\n            lpValueName._0_2_ = hWndChildAfter >> 0x10;\n            lpRect._0_2_ = fuLoad;\n            var_60h = iVar10;\n            var_5ch = iVar9;\n            fcn.00405268(0, hWndChildAfter);\n            iVar10 = (*_sym.imp.SHELL32.dll_SHFileOperationA)(&lpFileOp);\n            if (iVar10 == 0) break;\n        }\n        fcn.00405268(0xfffffff9, 0);\n        goto code_r0x00402783;\n    case 0x402334:\n        if (var_34h != 0xbadf00d) {\ncode_r0x0040233b:\n            uVar7 = 0x200010;\n            uVar18 = 0xffffffe8;\n            uVar24 = 0;\n            uVar11 = fcn.00406163(0, 0xffffffe8);\ncode_r0x00402349:\n            fcn.0040585d(uVar11, uVar24, uVar18, uVar7);\n            return 0x7fffffff;\n        }\n        *0x4247d4 = *0x4247d4 + 1;\n        break;\n    case 0x402363:\n        uVar24 = 0;\n        uVar18 = 0;\n        if (var_34h != 0) {\n            uVar24 = fcn.00402b2c(0);\n        }\n        if (dwFileAttributes != 0) {\n            uVar18 = fcn.00402b2c(0x11);\n        }\n        if (var_24h != 0) {\n            uVar11 = fcn.00402b2c(0x22);\n        }\n        uVar7 = fcn.00402b2c(0xffffffcd);\n        iVar10 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(uVar24, uVar18, uVar11, uVar7);\ncode_r0x004015ae:\n        bVar19 = iVar10 == 0;\ncode_r0x004015b0:\n        if (bVar19) goto code_r0x00402783;\n        break;\n    case 0x4023a7:\n        hWndChildAfter = hWndChildAfter & 0xffff | *0x40a010 << 0x10;\n        uVar11 = fcn.00402b2c(1);\n        lpMultiByteStr = fcn.00402b2c(0x12);\n        uVar24 = fcn.00402b2c(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (uVar11, lpMultiByteStr, &hWndChildAfter + 2, pcVar13, 0x3ff, uVar24);\n        bVar19 = *pcVar13 == '\\n';\ncode_r0x0040173b:\n        if (bVar19) {\ncode_r0x00402757:\n            var_4h = 1;\n            *pcVar13 = '\\0';\n        }\n        break;\n    case 0x4023e8:\n        if (var_24h == 0) {\n            iVar9 = fcn.00402b6c(2);\n            if (iVar9 == 0) goto code_r0x00402783;\n            uVar11 = fcn.00402b2c(0x33);\n            iVar10 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar9, uVar11);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar9);\n        }\n        else {\n            uVar11 = fcn.00402b2c(0x22);\n            iVar10 = fcn.00402bea(dwFileAttributes, uVar11, var_24h >> 1);\n        }\n        if (iVar10 != 0) goto code_r0x00402783;\n        break;\n    case 0x40243d:\n        lpMultiByteStr = var_20h;\n        uVar11 = fcn.00402b2c(2);\n        lpValueName._0_2_ = uVar11;\n        lpValueName._2_2_ = uVar11 >> 0x10;\n        uVar11 = fcn.00402b2c(0x11);\n        var_4h = 1;\n        hWndChildAfter = fcn.00402bbc(var_34h, uVar11, 2);\n        if (hWndChildAfter != NULL) {\n            uVar8 = 0;\n            if (var_24h == 1) {\n                fcn.00402b2c(0x23);\n                iVar10 = sub.KERNEL32.dll_lstrlenA(0x40ac00);\n                uVar8 = iVar10 + 1;\n            }\n            uVar23 = CONCAT44(var_44h, *0x40ac00);\n            if (var_24h == 4) {\n                uVar23 = fcn.00402b0a(3);\n                uVar8 = var_24h;\n            }\n            if (var_24h == 3) {\n                uVar8 = fcn.004030b5(lpLastWriteTime, 0, 0x40ac00, 0xc00);\n                var_44h = uVar23 >> 0x20;\n                *0x40ac00 = uVar23;\n            }\n            iVar10 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                               (hWndChildAfter, CONCAT22(lpValueName._2_2_, lpValueName), 0, lpMultiByteStr, 0x40ac00, \n                                uVar8);\n            var_44h = uVar23 >> 0x20;\n            *0x40ac00 = uVar23;\n            ppiVar14 = hWndChildAfter;\n            if (iVar10 == 0) {\n                var_4h = 0;\n            }\ncode_r0x004025a9:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar14);\n            var_44h = uVar23 >> 0x20;\n            *0x40ac00 = uVar23;\n        }\n        break;\n    case 0x4024da:\n        ppiVar14 = fcn.00402b6c(0x20019);\n        uVar11 = fcn.00402b2c(0x33);\n        *pcVar13 = '\\0';\n        if (ppiVar14 != NULL) {\n            lpMultiByteStr = 0x400;\n            iVar9 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                              (ppiVar14, uVar11, 0, &hWndChildAfter, pcVar13, &lpMultiByteStr);\n            if (iVar9 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_24h == 0;\n                    fcn.0040609f();\n                    uVar23 = CONCAT44(var_44h, *0x40ac00);\n                    goto code_r0x004025a9;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_24h;\n                    goto code_r0x004025a2;\n                }\n            }\n            *pcVar13 = '\\0';\n            uVar23 = CONCAT44(var_44h, *0x40ac00);\n            var_4h = 1;\n            goto code_r0x004025a9;\n        }\n        goto code_r0x00402783;\n    case 0x40254c:\n        ppiVar14 = fcn.00402b6c(0x20019);\n        uVar23 = fcn.00402b0a(3);\n        lpMultiByteStr = uVar23 >> 0x20;\n        *pcVar13 = '\\0';\n        if (ppiVar14 != NULL) {\n            hWndChildAfter = 0x3ff;\n            if (var_24h == 0) {\n                iVar9 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)(ppiVar14, uVar23, pcVar13, &hWndChildAfter, 0, 0, 0, 0);\n                if (iVar9 != 0) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(ppiVar14, uVar23, pcVar13, 0x3ff);\n            }\ncode_r0x004025a2:\n            *(iVar10 + 0x4253ff) = 0;\n            uVar23 = CONCAT44(var_44h, *0x40ac00);\n            goto code_r0x004025a9;\n        }\n        goto code_r0x00402783;\n    case 0x4025b4:\n        iVar10 = fcn.004060b8(pcVar13);\n        if (iVar10 != 0) goto code_r0x00401f8d;\n        break;\n    case 0x4025c8:\n        uVar11 = fcn.00402b2c(0xffffffed);\n        iVar10 = fcn.00405cda(uVar11, dwFileAttributes, fuLoad);\n        if (iVar10 == -1) goto code_r0x00402781;\ncode_r0x00402960:\n        fcn.0040609f(pcVar13);\n        break;\n    case 0x4025ea:\n        if (fuLoad == 0) {\n            uVar11 = fcn.00402b2c(0x11);\n            uVar11 = sub.KERNEL32.dll_lstrlenA(uVar11);\n        }\n        else {\n            uVar11 = 1;\n            *0x40a800 = fcn.00402b0a(1);\n            lpMultiByteStr = extraout_EDX;\n        }\n        if (*pcVar13 != '\\0') {\n            uVar24 = fcn.004060b8(pcVar13);\n            iVar10 = fcn.00405d81(uVar24, 0x40a800, uVar11);\n            goto code_r0x004015ae;\n        }\n        goto code_r0x00402783;\n    case 0x402631:\n        hWndParent = 0;\n        uVar23 = fcn.00402b0a(2);\n        lpMultiByteStr = uVar23 >> 0x20;\n        lpWideCharStr = uVar23;\n        if (lpWideCharStr < 1) break;\n        if (0x3ff < lpWideCharStr) {\n            lpWideCharStr = 0x3ff;\n        }\n        iVar10 = hWndParent;\n        if (*pcVar13 != '\\0') {\n            hWndChildAfter = hWndChildAfter & 0xffffff;\n            hFile = fcn.004060b8(pcVar13);\n            iVar10 = hWndParent;\n            if (0 < lpWideCharStr) {\n                while (iVar9 = fcn.00405d52(hFile, &var_15h, 1),  iVar9 != 0) {\n                    if (lpLastWriteTime != 0) {\n                        fcn.0040609f(pcVar16, var_15h);\n                        goto code_r0x004029c1;\n                    }\n                    if ((hWndChildAfter._3_1_ == 0xd) || (hWndChildAfter._3_1_ == 10)) {\n                        if ((hWndChildAfter._3_1_ == var_15h) || ((var_15h != 0xd && (var_15h != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0xffffffff, 0, 1);\n                        }\n                        else {\n                            pcVar16[iVar10] = var_15h;\n                            iVar10 = iVar10 + 1;\n                        }\n                        break;\n                    }\n                    pcVar16[iVar10] = var_15h;\n                    iVar10 = iVar10 + 1;\n                    hWndChildAfter = hWndChildAfter & 0xffffff | var_15h << 0x18;\n                    if ((var_15h == 0) || (lpWideCharStr <= iVar10)) break;\n                }\n            }\n        }\n        pcVar16[iVar10] = '\\0';\n        bVar19 = iVar10 == 0;\n        goto code_r0x004015b0;\n    case 0x4026ee:\n        if (*pcVar13 != '\\0') {\n            uVar23 = fcn.00402b0a(2);\n            uVar24 = 0;\n            uVar11 = fcn.004060b8(pcVar13);\n            lpMultiByteStr = uVar23 >> 0x20;\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar11, pcVar13, uVar23, uVar24, lpLastWriteTime);\n            pcVar13 = pcVar16;\n            goto joined_r0x00402716;\n        }\n        break;\n    case 0x402721:\n        iVar10 = fcn.004060b8(pcVar13);\n        if (iVar10 != 0) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar10);\n        }\n        break;\n    case 0x40273b:\n        iVar10 = fcn.004060b8(pcVar16);\n        if ((iVar10 != 0) && (iVar10 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar10, &lpFindFileData),  iVar10 != 0)) {\ncode_r0x00402796:\n            ppiVar14 = &var_19ch;\n            goto code_r0x004028d6;\n        }\n        goto code_r0x00402757;\n    case 0x402765:\n        uVar11 = fcn.00402b2c(2);\n        iVar10 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar11, &lpFindFileData);\n        if (iVar10 != -1) {\n            fcn.0040609f(pcVar16, iVar10);\n            goto code_r0x00402796;\n        }\n        *pcVar16 = '\\0';\ncode_r0x00402781:\n        *pcVar13 = '\\0';\ncode_r0x00402783:\n        var_4h = 1;\n        break;\n    case 0x4027a3:\n        lpWideCharStr = -0x29a;\n        uVar11 = fcn.00402b2c(0xfffffff0);\n        lpValueName._0_2_ = uVar11;\n        lpValueName._2_2_ = uVar11 >> 0x10;\n        iVar10 = fcn.00405b46(uVar11);\n        if (iVar10 == 0) {\n            fcn.00402b2c(0xffffffed);\n        }\n        fcn.00405cb5(uVar11);\n        hWndChildAfter = fcn.00405cda(uVar11, 0x40000000, 2);\n        pcVar5 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            hFile = *0x424738;\n            iVar10 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x424738);\n            if (iVar10 != 0) {\n                fcn.0040333c(0);\n                fcn.00403326(iVar10, hFile);\n                lpBuffer = (*pcVar5)(0x40, fuLoad);\n                lpMultiByteStr = lpBuffer;\n                if (lpBuffer != NULL) {\n                    fcn.004030b5(dwFileAttributes, 0, lpBuffer, fuLoad);\n                    for (; *lpBuffer != '\\0'; lpBuffer = lpBuffer + var_48h + 8) {\n                        var_48h = *lpBuffer;\n                        dwFileAttributes = lpBuffer[1] + iVar10;\n                        fcn.00405c95();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lpMultiByteStr, dwFileAttributes);\n                }\n                fcn.00405d81(hWndChildAfter, iVar10, hFile);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar10);\n                lpWideCharStr = fcn.004030b5(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (lpWideCharStr < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(CONCAT22(lpValueName._2_2_, lpValueName));\n            var_4h = 1;\n        }\ncode_r0x004022a4:\n        fcn.00401423();\n        break;\n    case 0x40289e:\n        _var_14h = fcn.00402b0a(0);\n        if (*0x42476c <= _var_14h) goto code_r0x00402783;\n        iVar10 = _var_14h * 0x418 + *0x424768;\n        if (-1 < fuLoad) {\n            pcVar13 = pcVar16;\n            if (fuLoad == 0) {\n                ppiVar14 = iVar10 + 0x18;\n                goto code_r0x004028d6;\n            }\n            goto code_r0x00402960;\n        }\n        fuLoad = -1 - fuLoad;\n        if (fuLoad == 0) {\n            fcn.00406163(iVar10 + 0x18, var_24h);\n            *(iVar10 + 9) = *(iVar10 + 9) | 1;\n        }\n        else {\n            uVar23 = fcn.00402b0a(1);\n            dwFileAttributes = uVar23;\n            lpValueName._0_2_ = uVar23 >> 0x20;\n            lpValueName._2_2_ = uVar23 >> 0x30;\n        }\n        *(iVar10 + fuLoad * 4) = dwFileAttributes;\n        if (lpLastWriteTime != 0) {\n            fcn.0040117d(var_14h);\n        }\n        break;\n    case 0x40292c:\n        uVar23 = fcn.00402b0a(0);\n        lpMultiByteStr = uVar23 >> 0x20;\n        uVar8 = uVar23;\n        if (0x1f < uVar8) goto code_r0x00402783;\n        if (lpLastWriteTime == 0) {\n            if (fuLoad == 0) {\n                fcn.00406163(pcVar16, *(*0x424734 + 0x94 + uVar8 * 4));\n            }\n            else {\n                *(*0x424734 + 0x94 + uVar8 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (fuLoad == 0) {\n                fcn.004012e2(0);\n                pcVar13 = pcVar16;\n                _var_14h = CONCAT44(lpMultiByteStr, var_14h);\n                goto code_r0x00402960;\n            }\n            fcn.00401299(uVar8);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x402993:\n        (*_sym.imp.USER32.dll_SendMessageA)(hWndParent, 0xb, *0x421d30 & var_34h, 0);\n        if (var_34h != 0) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(hWndParent, 0, 0);\n        }\n        break;\n    case 0x4029c3:\n        goto code_r0x004029c3;\n    }\ncode_r0x004029b8:\n    *0x4247c8 = *0x4247c8 + var_4h;\ncode_r0x004029c1:\n    var_34h = 0;\ncode_r0x004029c3:\n    return var_34h;\n}\n",
        "token_count": 14407
    },
    "00402e14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402e14(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint lpFileName;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t dwBytes;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = NULL;\n    var_8h = 0;\n    *0x424730 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x424730 = *0x424730 + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x42bc00, 0x400);\n    puVar1 = fcn.00405cda(0x42bc00, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x40a018 = puVar1;\n        return \"Error launching installer\";\n    }\n    *0x40a018 = puVar1;\n    fcn.00406141(0x42ac00, 0x42bc00);\n    uVar2 = fcn.00405b20(0x42ac00);\n    fcn.00406141(0x42c000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x41f8e8 = uVar3;\n    for (; uVar3 != 0; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x424738 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x4178d8;\n        iVar5 = fcn.00403326();\n        if (iVar5 == 0) {\n            fcn.00402d75(1);\n            goto code_r0x00403066;\n        }\n        if (*0x424738 == 0) {\n            puVar1 = &var_24h;\n            fcn.00405c95();\n            if (((((var_24h & 0xfffffff0) == 0) && (var_20h == -0x21524111)) && (var_14h == 0x74736e49)) &&\n               ((var_18h == 0x74666f73 && (var_1ch == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_24h;\n                *0x4247e0 = *0x4247e0 | arg_8h & 2;\n                *0x424738 = *0x41f8d8;\n                if (uVar3 < var_ch) goto code_r0x00403066;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_8h = var_8h + 1;\n                uVar3 = var_ch - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00402d75(0);\n        }\n        if (uVar3 < *0x41f8e8) {\n            puVar6 = fcn.00406590();\n            puVar1 = var_4h;\n            var_4h = puVar6;\n        }\n        *0x41f8d8 = *0x41f8d8 + uVar8;\n    }\n    fcn.00402d75(1);\n    if (*0x424738 != 0) {\n        if (var_8h != 0) {\n            fcn.0040333c(*0x41f8d8, puVar1);\n            iVar5 = fcn.00403326(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_4h != arg_8h)) goto code_r0x00403066;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.004065fe();\n        fcn.00405d09(&lpFileName, 0x42b400);\n        *0x40a01c = (*_sym.imp.KERNEL32.dll_CreateFileA)(&lpFileName, 0xc0000000, 0, 0, 2, 0x4000100, 0);\n        if (*0x40a01c == -1) {\n            return \"Error writing temporary file. Make sure your temp folder is valid.\";\n        }\n        *0x41f8ec = fcn.0040333c(*0x424738 + 0x1c);\n        *0x41f8e0 = (*0x41f8ec - (~var_24h & 4)) + -0x1c + var_ch;\n        iVar5 = fcn.004030b5(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x42473c = *puVar1;\n            if ((var_24h & 1) != 0) {\n                *0x424740 = *0x424740 + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x424734 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            puVar1[0xf] = *0x41f8dc;\n            fcn.00405c95(0x424760, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00403066:\n    return \n    \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1514
    },
    "0040386c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040386c(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018);\n        *0x40a018 = -1;\n    }\n    if (*0x40a01c != -1) {\n        (*pcVar1)(*0x40a01c);\n        *0x40a01c = -1;\n    }\n    fcn.004038c9();\n    fcn.00405909(0x42b800, 7);\n    return;\n}\n",
        "token_count": 150
    },
    "0040395e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040395e(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    \n    iVar7 = *0x424734;\n    pcVar2 = fcn.004064d9();\n    if (pcVar2 == NULL) {\n        *0x42b000 = 0x30;\n        *0x42b001 = 0x78;\n        *0x42b002 = 0;\n        fcn.00406028(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x420d30, 0);\n        if (*0x420d30 == '\\0') {\n            fcn.00406028(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x420d30, 0);\n        }\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    else {\n        (*pcVar2)();\n        fcn.0040609f();\n    }\n    fcn.00403c23();\n    *0x4247c0 = *0x42473c & 0x20;\n    *0x4247dc = 0x10000;\n    iVar3 = fcn.00405bc7();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x4236c0;\n        fcn.00406028(*(iVar7 + 0x44), *(iVar7 + 0x48) + *0x424778, *(iVar7 + 0x4c) + *0x424778, 0x4236c0, 0);\n        if (*0x4236c0 != '\\0') {\n            if (*0x4236c0 == '\\\"') {\n                uVar6 = 0x4236c1;\n                puVar4 = fcn.00405b04();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenA();\n            if (((uVar6 < iVar3 + -4 + uVar6) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.00405b20();\n            }\n            fcn.00405ad9();\n            fcn.00406141();\n        }\n    }\n    iVar3 = fcn.00405bc7();\n    if (iVar3 == 0) {\n        uStack148 = 0x403aa4;\n        fcn.00406163(0x42a400, *(iVar7 + 0x118));\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x424720;\n    *0x423f08 = (*_sym.imp.USER32.dll_LoadImageA)(*0x424720, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x00403b4a:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.00403c23();\n            if (*0x4247e0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x420d10, 5);\n                iVar7 = fcn.0040646b(\"RichEd20\");\n                if (iVar7 == 0) {\n                    fcn.0040646b(\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x423ec0);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, \"RichEdit\", 0x423ec0);\n                    *0x423ee4 = \"RichEdit20A\";\n                    (*_sym.imp.USER32.dll_RegisterClassA)(0x423ec0);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x424720, *0x423f00 + 0x69U & 0xffff, 0, 0x403cfb, 0);\n                fcn.0040140b(5);\n                fcn.004038ae(1);\n                return uVar5;\n            }\n            iVar7 = fcn.0040533a(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x00403c19;\n            }\n            if (*0x423eec == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x423ec0;\n        *0x423ec4 = fcn.00401000;\n        *0x423ed0 = *0x424720;\n        *0x423ee4 = 0x40a210;\n        *0x423ed4 = *0x423f08;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(0x423ec0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &stack0xffffff64, 0);\n            *0x420d10 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0x80, 0x40a210, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x424720, 0);\n            goto code_r0x00403b4a;\n        }\ncode_r0x00403c19:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1440
    },
    "00404bd4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404bd4(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_38h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_20h;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    uVar3 = arg_8h;\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_14h = *0x424768;\n    var_18h = *0x424734 + 0x94;\n    if (arg_ch == 0x110) {\n        var_20h = 0;\n        *0x4247a0 = arg_8h;\n        var_10h = 2;\n        *0x420d28 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42476c << 2);\n        var_ch = (*_sym.imp.USER32.dll_LoadImageA)(*0x424720, 0x6e, 0, 0, 0, 0);\n        *0x420d1c = 0xffffffff;\n        *0x420d24 = (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffffc, fcn.004051dc);\n        *0x420d14 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x420d14, var_ch, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x420d14);\n        iVar2 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar2 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_ch);\n        iVar2 = 0;\n        do {\n            iVar6 = *(var_18h + iVar2 * 4);\n            if (iVar6 != 0) {\n                if (iVar2 != 0x20) {\n                    var_10h = 0;\n                }\n                uVar3 = fcn.00406163(0, iVar6);\n                uVar3 = (*pcVar1)(var_8h, 0x143, 0, uVar3);\n                (*pcVar1)(var_8h, 0x151, uVar3, iVar2);\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < 0x21);\n        fcn.004041cf(arg_8h, 0x15, *(arg_14h + 0x30 + var_10h * 4));\n        fcn.004041cf(arg_8h, 0x16, *(arg_14h + 0x34 + var_10h * 4));\n        iVar2 = 0;\n        var_ch = 0;\n        if (*0x42476c < 1) {\ncode_r0x00404e13:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffff0, uVar4 & 0xfffffffb);\n        }\n        else {\n            var_1ch = var_14h + 8;\n            do {\n                puVar7 = var_1ch + 4;\n                if (*puVar7 != '\\0') {\n                    uVar4 = *var_1ch;\n                    var_54h = var_ch;\n                    var_50h = 0xffff0002;\n                    var_44h = uVar4 & 0x20;\n                    var_4ch = 0xd;\n                    var_40h = 0x20;\n                    var_3ch = puVar7;\n                    var_28h = iVar2;\n                    if ((uVar4 & 2) == 0) {\n                        if ((uVar4 & 4) == 0) {\n                            uVar3 = (*pcVar1)(var_4h, 0x1100, 0, &var_54h);\n                            *(*0x420d28 + iVar2 * 4) = uVar3;\n                        }\n                        else {\n                            var_ch = (*pcVar1)(var_4h, 0x110a, 3, var_ch);\n                        }\n                    }\n                    else {\n                        var_4ch = 0x4d;\n                        var_2ch = 1;\n                        uVar3 = (*pcVar1)(var_4h, 0x1100, 0, &var_54h);\n                        var_20h = 1;\n                        *(*0x420d28 + iVar2 * 4) = uVar3;\n                        var_ch = *(*0x420d28 + iVar2 * 4);\n                    }\n                }\n                iVar2 = iVar2 + 1;\n                var_1ch = var_1ch + 0x106;\n            } while (iVar2 < *0x42476c);\n            if (var_20h == 0) goto code_r0x00404e13;\n        }\n        if (var_10h == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.00404204(var_8h);\n            goto code_r0x004051c7;\n        }\n        uVar3 = var_4h;\n        fcn.00404204(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x42473c & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar2 = fcn.00404b22(var_4h, arg_ch != 0x413),  -1 < iVar2)\n            ))) {\n            puVar7 = iVar2 * 0x418 + 8 + var_14h;\n            uVar4 = *puVar7;\n            if ((uVar4 & 0x10) == 0) {\n                if ((uVar4 & 0x40) == 0) {\n                    uVar4 = uVar4 ^ 1;\n                }\n                else {\n                    uVar5 = uVar4 ^ 0x80;\n                    if (uVar5 < '\\0') {\n                        uVar4 = uVar4 & 0xffffff00 | uVar5 & 0xff | 1;\n                    }\n                    else {\n                        uVar4 = uVar4 & 0xffffff00 | uVar5 & 0xfe;\n                    }\n                }\n                *puVar7 = uVar4;\n                fcn.0040117d(iVar2);\n                arg_10h = iVar2 + 1;\n                arg_14h = ~*0x42473c >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x192) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x196) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar7 = *(var_ch + 0x5c) * 0x418 + 8 + var_14h;\n                    *puVar7 = *puVar7 | 0x20;\n                }\n                else {\n                    puVar7 = *(var_ch + 0x5c) * 0x418 + 8 + var_14h;\n                    *puVar7 = *puVar7 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar2 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar2 == -1))\n        goto code_r0x004051c7;\n        iVar2 = (*pcVar1)(var_8h, 0x150, iVar2, 0);\n        if ((iVar2 == -1) || (*(var_18h + iVar2 * 4) == 0)) {\n            iVar2 = 0x20;\n        }\n        fcn.00401299(iVar2);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar2);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x420d14 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x420d14);\n        }\n        if (*0x420d28 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x420d28);\n        }\n        *0x420d14 = 0;\n        *0x420d28 = 0;\n        *0x4247a0 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            iVar2 = arg_10h;\n            if (arg_10h != -1) {\n                iVar2 = arg_10h + -1;\n            }\n            fcn.00404ba2(8, iVar2);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x420d28);\n            fcn.00401299(arg_14h);\n            iVar2 = 0;\n            iVar6 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_18h + iVar2 * 4) != 0) {\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar6, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_20h = *0x420d28;\n        var_3ch = 0xf030;\n        var_14h = 0;\n        if (0 < *0x42476c) {\n            puVar7 = *0x424768 + 8;\n            do {\n                uVar4 = *(var_20h + var_14h * 4);\n                if (uVar4 != 0) {\n                    uVar5 = *puVar7;\n                    var_48h = 8;\n                    if ((uVar5 & 0x100) != 0) {\n                        var_38h = puVar7 + 4;\n                        var_48h = 9;\n                        *(puVar7 + 1) = *(puVar7 + 1) & 0xfe;\n                    }\n                    if ((uVar5 & 0x40) == 0) {\n                        iVar2 = (uVar5 & 1) + 1;\n                        if ((uVar5 & 0x10) != 0) {\n                            iVar2 = (uVar5 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar2 = 3;\n                    }\n                    var_40h = (iVar2 << 0xb | uVar5 & 8) * 2 | uVar5 & 0x20;\n                    var_44h = uVar4;\n                    (*pcVar1)(var_4h, 0x1102, (uVar5 >> 5 & 1U) + 1, uVar4);\n                    (*pcVar1)(var_4h, 0x110d, 0, &var_48h);\n                }\n                var_14h = var_14h + 1;\n                puVar7 = puVar7 + 0x106;\n            } while (var_14h < *0x42476c);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x423efc + 0x10) != 0) {\n            fcn.00404af5(5);\n            uVar3 = 0x3ff;\n            fcn.00404add();\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x42473c & 0x100) != 0)) {\n        iVar2 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar2, uVar3);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar2);\n        (*pcVar1)(uVar3);\n    }\ncode_r0x004051c7:\n    fcn.00404236(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3391
    },
    "004053a6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004053a6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar5 = arg_ch;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar8 = 0;\n    var_4h = *0x423f04;\n    if (arg_ch == 0x110) {\n        var_2ch = 0xffffffff;\n        var_20h = 0xffffffff;\n        var_34h = 2;\n        var_30h = 0;\n        var_28h = NULL;\n        var_24h = 0;\n        var_1ch = 0;\n        uStack28 = 0;\n        arg_10h = *(*0x424734 + 0x5c);\n        arg_ch = *(*0x424734 + 0x60);\n        *0x423ef0 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x423ee8 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x423f04 = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x423f04;\n        fcn.00404204(*0x423ef0);\n        *0x423ef4 = fcn.00404af5(4);\n        *0x423f0c = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_14h);\n        var_2ch = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n        var_2ch = var_ch - var_2ch;\n        (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x101b, 0, &var_34h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < arg_10h) {\n            (*pcVar2)(var_4h, 0x1001, 0, arg_10h);\n            (*pcVar2)(var_4h, 0x1026, 0, arg_10h);\n        }\n        if (-1 < arg_ch) {\n            (*pcVar2)(var_4h, 0x1024, 0, arg_ch);\n        }\n        fcn.004041cf(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x42473c & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x423ef0, 0);\n            if ((*0x42473c & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x423ef0 = 0;\n            }\n            fcn.00404204(*0x423ee8);\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x42473c & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, arg_ch);\n            (*pcVar2)(uVar3, 0x2001, 0, arg_10h);\n        }\ncode_r0x00405727:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &arg_ch);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040533a, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (iVar5 == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x423ef0, 0);\n                (*pcVar1)(var_4h, 8);\n                fcn.00404204(var_4h);\n                goto code_r0x004055af;\n            }\n        }\n        else {\ncode_r0x004055af:\n            if (iVar5 == 0x404) {\n                if (*0x423eec != 0) {\n                    *0x420100 = 2;\n                    fcn.004041a8();\n                    goto code_r0x004055d0;\n                }\n                (*pcVar1)(*0x424728, 8);\n                if (*0x4247cc == 0) {\n                    fcn.00405268(*(*0x420508 + 0x34), 0);\n                }\n                fcn.004041a8(1);\n            }\n            if ((iVar5 == 0x7b) && (arg_10h == var_4h)) {\n                arg_10h = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n                if (0 < arg_10h) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar4 = fcn.00406163(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuA)(uVar3, 0, 1, uVar4);\n                    iVar5 = arg_14h;\n                    iVar6 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_14h);\n                        iVar5 = var_14h;\n                        iVar6 = var_10h;\n                    }\n                    iVar5 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar5, iVar6, 0, arg_8h, 0);\n                    if (iVar5 == 1) {\n                        iVar5 = 1;\n                        var_34h = 0;\n                        var_28h = 0x420d30;\n                        var_24h = 0x1000;\n                        arg_8h = arg_10h;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, arg_8h, &var_3ch);\n                            iVar5 = iVar5 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar5);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_28h = puVar7;\n                            iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, iVar8, &var_3ch);\n                            puVar7 = puVar7 + iVar5;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 < arg_10h);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x00405727;\n            }\n        }\ncode_r0x004055d0:\n        uVar3 = fcn.00404236(iVar5, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 1991
    },
    "004058c1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004058c1(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.00405cb5(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "00405909": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405909(char *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpFindFileData;\n    uint var_120h;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t hFindFile;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_ch = fcn.00405bc7(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_ch != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00406141(0x421d38, arg_8h);\n            if (uVar1 == 0) {\n                fcn.00405b20(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatA(0x421d38, \"\\\\*.*\");\n            }\n            if ((*arg_8h != '\\0') || (*0x421d38 == '\\\\')) {\n                sub.KERNEL32.dll_lstrcatA(arg_8h, 0x40a014);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenA(arg_8h);\n            hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x421d38, &lpFindFileData);\n            if (hFindFile != -1) {\n                do {\n                    puVar5 = &var_120h;\n                    pcVar3 = fcn.00405b04(&var_120h, 0x3f);\n                    if ((*pcVar3 != '\\0') && (var_1ch != '\\0')) {\n                        puVar5 = &var_1ch;\n                    }\n                    if ((*puVar5 != '.') ||\n                       ((*(puVar5 + 1) != '\\0' && ((*(puVar5 + 1) != '.' || (*(puVar5 + 2) != '\\0')))))) {\n                        fcn.00406141(arg_8h + iVar2, puVar5);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            iVar4 = fcn.004058c1(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    *0x4247c8 = *0x4247c8 + 1;\n                                }\n                                else {\n                                    fcn.00405268(0xfffffff1, arg_8h);\n                                    fcn.00405f20(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.00405268(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.00405909(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(hFindFile, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = '\\0';\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_ch != 0) {\n                iVar2 = fcn.00406444(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.00405ad9(arg_8h);\n                iVar2 = fcn.004058c1(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.00405268(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.00405268(0xfffffff1, arg_8h);\n                    fcn.00405f20(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x4247c8 = *0x4247c8 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n        *0x4247c8 = *0x4247c8 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 1036
    },
    "00405bc7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00405bc7(uint param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    \n    fcn.00406141(0x422138, param_1);\n    pcVar1 = fcn.00405b72(0x422138);\n    if ((pcVar1 != NULL) &&\n       ((pcVar5 = pcVar1,  fcn.004063ab(pcVar1),  (*0x42473c & 0x80) == 0 || ((*pcVar1 != '\\0' && (*pcVar1 != '\\\\'))))))\n    {\n        while( true ) {\n            uVar4 = 0x422138;\n            iVar3 = sub.KERNEL32.dll_lstrlenA(0x422138);\n            if (iVar3 <= pcVar1 + -0x422138) {\n                fcn.00405ad9(0x422138, uVar4, pcVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x422138);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.00406444(0x422138);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            pcVar5 = 0x422138;\n            fcn.00405b20();\n        }\n    }\n    return false;\n}\n",
        "token_count": 332
    },
    "00405cb5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405cb5(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "00405db0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405db0(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *hFile;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n    *0x422ac0 = 0x4c554e;\n    if (param_2 != 0) {\n        uVar2 = fcn.00405cda(param_2, 0, 1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n        iVar3 = (*pcVar1)(param_2, 0x422ac0, 0x400);\n        if (iVar3 == 0) {\n            return;\n        }\n        if (0x400 < iVar3) {\n            return;\n        }\n    }\n    iVar3 = (*pcVar1)(param_1, 0x422ec0, 0x400);\n    if ((iVar3 != 0) && (iVar3 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)(0x4226c0, \"%s=%s\\r\\n\", 0x422ac0, 0x422ec0);\n        fcn.00406163(0x422ec0, *(*0x424734 + 0x128));\n        hFile = fcn.00405cda(0x422ec0, 0xc0000000, 4);\n        if (hFile != 0xffffffff) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, arg_10h + iVar3 + 10);\n            if ((lpBuffer != 0) && (puVar7 = arg_10h,  iVar4 = fcn.00405d52(hFile, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.00405c3f(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_10h + lpBuffer, \"[Rename]\\r\\n\");\n                    arg_10h = arg_10h + 10;\n                    puVar7 = arg_10h;\n                }\n                else {\n                    hFile = puVar7;\n                    puVar5 = fcn.00405c3f(iVar4 + 10, 0x40a3d0);\n                    puVar7 = arg_10h;\n                    if (puVar5 != NULL) {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        puVar7 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                fcn.00405c95(puVar7 + lpBuffer, 0x4226c0, iVar3);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 0);\n                fcn.00405d81(hFile, lpBuffer, arg_10h + iVar3);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hFile);\n        }\n    }\n    return;\n}\n",
        "token_count": 838
    },
    "00406444": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00406444(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, 0x422580);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x422580;\n    }\n    return uVar2;\n}\n",
        "token_count": 113
    },
    "0040117d": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x418 + 8 + *0x424768);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x42476c) {\n            puVar3 = uVar4 * 0x418 + 8 + *0x424768;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x106;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x42476c);\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "004012e2": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x424734 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x42476c == 0;\n            if (*0x42476c != 0) {\n                puVar2 = *0x424768 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x106;\n                } while (uVar1 < *0x42476c);\n                bVar3 = uVar1 == *0x42476c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00402c2e": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402c2e(uint arg_8h, uint lpSubKey, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10ch;\n    uint hKey;\n    \n    iVar1 = fcn.00405fc7(arg_8h, lpSubKey, CONCAT31((arg_10h & 0x300) >> 8, 8), &hKey);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(hKey, 0, &var_10ch, 0x105);\n            if (iVar1 != 0) break;\n            if ((arg_10h & 1) != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                return 0x3eb;\n            }\n            iVar1 = fcn.00402c2e(hKey, &var_10ch, arg_10h);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        pcVar2 = fcn.004064d9(3);\n        if (pcVar2 == NULL) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(arg_8h, lpSubKey);\n        }\n        else {\n            iVar1 = (*pcVar2)(arg_8h, lpSubKey, arg_10h & 0x300, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 367
    },
    "0040433a": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040433a(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n    pcVar3 = _sym.imp.USER32.dll_GetDlgItem;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x423efc - (iVar7 * 4 + 4));\n        }\n        cVar2 = *(iVar7 + *0x424778);\n        var_8h = 0;\n        pcVar10 = iVar7 + *0x424778 + 1;\n        var_4h = fcn.00404305;\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = pcVar10;\n        fcn.004041cf(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.004041cf(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.004041f1(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00404204(uVar6);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x424734 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar3)(uVar6, 0x443, 0, iVar7);\n        (*pcVar3)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenA(pcVar10);\n        (*pcVar3)(uVar6, 0x435, 0, uVar8);\n        *0x41fcfc = 0;\n        (*pcVar3)(uVar6, 0x449, cVar2, &var_ch);\n        *0x41fcfc = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x41fcfc != 0)) || (puVar1 = *0x420508 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x004045a7;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar5)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.004041f1(uVar9 & 1);\n        fcn.004045ba();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*pcVar3)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x4236c0;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar5)(uVar6, 1099, 0, &var_ch);\n                pcVar4 = _sym.imp.USER32.dll_LoadCursorA;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n                pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                uVar8 = 1;\n                uVar6 = var_4h;\n                fcn.004045de(arg_8h, var_4h);\n                uVar6 = (*pcVar4)(0, 0x7f00, arg_8h, uVar6, uVar8);\n                (*pcVar3)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar5)(*0x424728, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar5)(*0x424728, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x41fcfc = *0x41fcfc + 1;\n    }\ncode_r0x004045a7:\n    uVar6 = fcn.00404236(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1378
    },
    "00405268": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405268(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x423f04;\n    if (*0x423f04 != 0) {\n        var_8h = *0x4247f4;\n        uVar4 = *0x4247f4 & 1;\n        if (uVar4 == 0) {\n            fcn.00406163(0x420510, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenA(0x420510);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenA(lpString2);\n            if (0x7ff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatA(0x420510, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x423ee8, 0x420510);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x420510;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x1007 - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 + 0x420510) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 519
    },
    "00406590": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.00406590(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x4232c4 == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x4232c0) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x4232c0);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 310
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x424768;\n    iVar5 = arg_8h * 0x418 + *0x424768;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x42476c) {\n        do {\n            puVar1 = arg_8h * 0x418 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x42476c);\n    }\n    return 0;\n}\n",
        "token_count": 534
    },
    "00402d75": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d75(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_40h;\n    \n    if (arg_8h == 0) {\n        if (*0x41f8e4 == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            if (*0x424730 < uVar1) {\n                if (*0x424728 == 0) {\n                    *0x41f8e4 = (*_sym.imp.USER32.dll_CreateDialogParamA)(*0x424720, 0x6f, 0, fcn.00402cdd, 0);\n                    (*_sym.imp.USER32.dll_ShowWindow)(*0x41f8e4, 5);\n                }\n                else if ((*0x4247f4 & 1) != 0) {\n                    uVar2 = fcn.00402d59();\n                    (*_sym.imp.USER32.dll_wsprintfA)(&var_40h, \"... %d%%\", uVar2);\n                    fcn.00405268(0, &var_40h);\n                }\n            }\n        }\n        else {\n            fcn.00406515(0);\n        }\n    }\n    else {\n        if (*0x41f8e4 != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*0x41f8e4);\n        }\n        *0x41f8e4 = 0;\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00404236": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404236(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((((arg_8h - 0x133U < 6) &&\n         (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n         puVar2 != NULL)) && (puVar2[2] < 2)) && ((puVar2[4] < 3 && ((puVar2[5] & 0xffffffe0) == 0)))) {\n        uVar3 = *puVar2;\n        if ((puVar2[5] & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 494
    },
    "00404af5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404af5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x424768;\n    iVar3 = *0x42476c;\n    if (*0x42476c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x418;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 164
    },
    "0040533a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040533a(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x42476c;\n    iVar2 = *0x424768;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x4247f8 = *0x4247f8 | uVar1;\n    uVar5 = 0;\n    fcn.0040421b(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401389();\n                if (iVar2 != 0) {\n                    *0x4247cc = *0x4247cc + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x106;\n        } while (iVar4 != 0);\n    }\n    fcn.0040421b(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x4247cc;\n}\n",
        "token_count": 308
    },
    "00401389": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x424770,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x423f0c = *0x423f0c + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x423f0c, 30000, *0x423ef4, 0);\n            (*_sym.imp.USER32.dll_SendMessageA)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 320
    },
    "00402bea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402bea(uint arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    \n    if (*arg_ch == '\\0') {\n        uVar1 = 0x3eb;\n    }\n    else {\n        arg_10h = arg_10h | 0x100020;\n        uVar1 = fcn.00402ba4(arg_8h, &arg_10h);\n        arg_8h_00 = fcn.00405f4c(uVar1);\n        if (arg_8h_00 == 0) {\n            uVar1 = 6;\n        }\n        else {\n            uVar1 = fcn.00402c2e(arg_8h_00, arg_ch, arg_10h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 201
    },
    "00402cdd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402cdd(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    uint var_40h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        uVar1 = fcn.00402d59();\n        pcVar2 = \"unpacking data: %d%%\";\n        if (*0x424734 == 0) {\n            pcVar2 = \"verifying installer: %d%%\";\n        }\n        (*_sym.imp.USER32.dll_wsprintfA)(&var_40h, pcVar2, uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_40h);\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x406, &var_40h);\n    }\n    return 0;\n}\n",
        "token_count": 243
    },
    "004030b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004030b5(int32_t arg_8h, uint arg_ch, int32_t lpBuffer, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t lpNumberOfBytesRead;\n    \n    if (-1 < arg_8h) {\n        *0x41f8dc = arg_8h + *0x424798;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a01c, *0x41f8dc, 0, 0);\n    }\n    iVar1 = fcn.004031bd(4);\n    if (iVar1 < 0) {\n        return iVar1;\n    }\n    iVar1 = fcn.00405d52(*0x40a01c, &arg_8h, 4);\n    if (iVar1 != 0) {\n        *0x41f8dc = *0x41f8dc + 4;\n        iVar1 = fcn.004031bd(arg_8h);\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n        if (lpBuffer == 0) {\n            while( true ) {\n                if (arg_8h < 1) {\n                    return iVar1;\n                }\n                lpNumberOfBytesRead = arg_8h;\n                if (0x3fff < arg_8h) {\n                    lpNumberOfBytesRead = 0x4000;\n                }\n                iVar2 = fcn.00405d52(*0x40a01c, 0x4138d8, lpNumberOfBytesRead);\n                if (iVar2 == 0) break;\n                iVar2 = fcn.00405d81(arg_ch, 0x4138d8, lpNumberOfBytesRead);\n                if (iVar2 == 0) {\n                    return -2;\n                }\n                arg_8h = arg_8h - lpNumberOfBytesRead;\n                *0x41f8dc = *0x41f8dc + lpNumberOfBytesRead;\n                iVar1 = iVar1 + lpNumberOfBytesRead;\n            }\n        }\n        else {\n            iVar1 = arg_8h;\n            if (arg_14h <= arg_8h) {\n                iVar1 = arg_14h;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40a01c, lpBuffer, iVar1, &lpNumberOfBytesRead, 0);\n            if (iVar1 != 0) {\n                *0x41f8dc = *0x41f8dc + lpNumberOfBytesRead;\n                return lpNumberOfBytesRead;\n            }\n        }\n    }\n    return -3;\n}\n",
        "token_count": 591
    },
    "004045ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004045ba(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x41fcf8;\n    if (*0x4247cc == 0) {\n        uVar1 = *0x420d2c;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 90
    },
    "004049b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004049b2(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 1) {\n        fcn.00405841(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x466, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "00404b22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404b22(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x110c, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 321
    },
    "0040585d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040585d(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x4247e0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x4247e8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40a234 = *0x424728;\n        *0x40a238 = *0x424720;\n        *0x40a23c = param_1;\n        *0x40a240 = 0x423f20;\n        *0x40a244 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x40a230);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00405b72": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.00405b72(char *param_1)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    pcVar2 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    uVar3 = (*pcVar1)(pcVar2);\n    if (((*param_1 == '\\0') || (*pcVar2 != ':')) || (pcVar2[1] != '\\\\')) {\n        if ((*param_1 == '\\\\') && (param_1[1] == '\\\\')) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                pcVar2 = fcn.00405b04();\n                if (*pcVar2 == '\\0') goto code_r0x00405bbf;\n                pcVar2 = pcVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x00405bbf:\n            pcVar2 = NULL;\n        }\n    }\n    else {\n        pcVar2 = (*pcVar1)(uVar3);\n    }\n    return pcVar2;\n}\n",
        "token_count": 272
    },
    "00406028": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406028(uint arg_8h, int32_t arg_ch, uint lpValueName, uchar *arg_14h, int32_t hKey)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    var_4h = 0x400;\n    iVar2 = fcn.00405fc7(arg_8h, arg_ch, -(hKey != 0) & 0x100 | 0x20019, &hKey);\n    puVar1 = arg_14h;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, lpValueName, 0, &arg_ch, arg_14h, &var_4h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        puVar1[0x3ff] = 0;\n        if (iVar2 == 0) {\n            if (arg_ch == 1) {\n                return;\n            }\n            if (arg_ch == 2) {\n                return;\n            }\n        }\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 268
    },
    "00406163": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406163(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t *arg_8h_00;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint8_t *ppidl;\n    \n    puVar6 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x423efc - (arg_ch * 4 + 4));\n    }\n    puVar7 = arg_ch + *0x424778;\n    arg_8h_00 = 0x4236c0;\n    if ((0x4236bf < arg_8h) && (arg_8h + -0x4236c0 < 0x800)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar6;\n    }\n    do {\n        while( true ) {\n            uVar1 = *puVar7;\n            if ((uVar1 == 0) || (0x3ff < arg_8h_00 + -0x4236c0)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00406141(arg_8h, 0x4236c0);\n                }\n                return;\n            }\n            puVar6 = puVar7 + 1;\n            if (uVar1 < 4) break;\n            if (uVar1 == 4) {\n                *arg_8h_00 = *puVar6;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar7 = puVar7 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar7 = puVar6;\n            }\n        }\n        uVar2 = puVar7[2];\n        var_ch = uVar2;\n        uVar3 = *puVar6;\n        var_14h = uVar3;\n        uVar8 = (var_ch & 0x7f) << 7 | var_14h & 0x7f;\n        var_18h = CONCAT22(uVar3 >> 7, uVar3) | 0x8000;\n        var_10h = CONCAT22(uVar2 >> 7, uVar2) | 0x8000;\n        if (uVar1 == 2) {\n            puVar6 = 0x2;\n            iVar9 = 2;\n            if ((((*0x42472c < 0) && (*0x42472c != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n            if (*0x4247c4 != 0) {\n                puVar6 = 0x4;\n                iVar9 = 4;\n            }\n            if (uVar3 < '\\0') {\n                puVar6 = var_14h & 0x40;\n                fcn.00406028(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", (var_14h & 0x3f) + *0x424778, \n                             arg_8h_00, puVar6);\n                if (*arg_8h_00 == 0) {\n                    fcn.00406163(arg_8h_00, var_ch);\n                    goto code_r0x0040630a;\n                }\ncode_r0x0040630f:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatA(puVar6, \"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\", arg_8h_00);\n                }\n            }\n            else {\n                if (var_14h == 0x25) {\n                    puVar6 = 0x400;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(arg_8h_00, 0x400);\n                }\n                else {\n                    if (var_14h == 0x24) {\n                        puVar6 = 0x400;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(arg_8h_00, 0x400);\n                        iVar9 = 0;\n                    }\n                    while ((iVar9 != 0 &&\n                           (((iVar9 = iVar9 + -1,  *0x424724 == NULL || (!bVar4)) ||\n                            (puVar6 = arg_8h_00,  iVar5 = (**0x424724)(*0x424728, (&var_18h)[iVar9], 0, 0, arg_8h_00), \n                            iVar5 != 0))))) {\n                        puVar6 = (&var_18h)[iVar9];\n                        iVar5 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)(*0x424728, puVar6, &ppidl);\n                        if (iVar5 == 0) {\n                            puVar6 = ppidl;\n                            var_8h = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(ppidl, arg_8h_00);\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)(ppidl);\n                            if (var_8h != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x0040630a:\n                if (*arg_8h_00 != 0) goto code_r0x0040630f;\n            }\ncode_r0x00406320:\n            fcn.004063ab(arg_8h_00);\n        }\n        else if (uVar1 == 3) {\n            if (uVar8 == 0x1d) {\n                fcn.0040609f(arg_8h_00, *0x424728);\n            }\n            else {\n                fcn.00406141(arg_8h_00, uVar8 * 0x400 + 0x425000);\n            }\n            if (uVar8 - 0x15 < 7) goto code_r0x00406320;\n        }\n        else if (uVar1 == 1) {\n            fcn.00406163(arg_8h_00, -1 - uVar8);\n        }\n        iVar9 = sub.KERNEL32.dll_lstrlenA();\n        arg_8h_00 = arg_8h_00 + iVar9;\n        puVar7 = puVar7 + 3;\n    } while( true );\n}\n",
        "token_count": 1565
    },
    "004063ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004063ab(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.00405b46(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffffff00 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (pcVar4 = fcn.00405b04(\"*?|<>/\\\":\", uVar3),  *pcVar4 == '\\0')) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00405c95(puVar6, puVar7, iVar5 - puVar7);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffffff00 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 517
    },
    "00404661": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404661(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    uint32_t uVar9;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    code *var_38h;\n    int32_t var_34h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = *0x420508;\n    var_8h = *(*0x420508 + 0x38);\n    iVar6 = *(*0x420508 + 0x3c) * 0x400 + 0x425000;\n    if (arg_ch == 0x40b) {\n        fcn.00405841(0x3fb, iVar6);\n        fcn.004063ab(iVar6);\n    }\n    if (arg_ch == 0x110) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar2 = fcn.00405b46(iVar6);\n        if ((iVar2 != 0) && (iVar2 = fcn.00405b72(iVar6),  iVar2 == 0)) {\n            fcn.00405ad9(iVar6);\n        }\n        *0x423ef8 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextA)(uVar1, iVar6);\n        var_48h = *(arg_14h + 0x34);\n        var_4ch = 0x1;\n        fcn.004041cf(arg_8h);\n        fcn.004041cf(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.00404204(uVar1);\n        pcVar3 = fcn.004064d9(7);\n        if (pcVar3 == NULL) goto code_r0x0040499d;\n        (*pcVar3)(uVar1, 1);\n    }\n    iVar2 = var_8h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x0040499d;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar7 = &fcn.00404661::var_48h;\n            for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_4ch = arg_8h;\n            var_44h = 0x420d30;\n            var_38h = fcn.004049b2;\n            var_34h = iVar6;\n            var_40h = fcn.00406163(0x420108, iVar2);\n            var_3ch = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&fcn.00404661::var_4ch);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                fcn.00405ad9(iVar6);\n                if ((*(*0x424734 + 0x11c) != 0) && (iVar6 == 0x42a400)) {\n                    uVar1 = 0;\n                    fcn.00406163(0, *(*0x424734 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x4236c0, 0x420d30);\n                    if (iVar2 != 0) {\n                        sub.KERNEL32.dll_lstrcatA(uVar1, 0x4236c0, 0x42a400);\n                    }\n                }\n                *0x420d20 = *0x420d20 + 1;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x3fb, iVar6);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.00405841(0x3fb, iVar6);\n        iVar2 = fcn.00405bc7(iVar6);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00406141(0x41fd00, iVar6);\n        var_48h = 1;\n        var_ch = fcn.004064d9();\n        if (var_ch != NULL) {\n            puVar8 = NULL;\n            do {\n                var_4ch = &fcn.00404661::var_24h;\n                iVar2 = (*var_ch)(0x41fd00, &fcn.00404661::var_2ch, &fcn.00404661::var_18h);\n                if (iVar2 != 0) {\n                    var_2ch = var_2ch >> 10 | var_28h << 0x16;\n                    var_28h = var_28h >> 10;\n                    var_8h = 1;\n                    goto code_r0x004048f6;\n                }\n                if (puVar8 != NULL) {\n                    *puVar8 = 0;\n                }\n                var_48h = 0x41fd00;\n                var_4ch = 0x404870;\n                puVar8 = fcn.00405b20();\n                *puVar8 = 0;\n                puVar8 = puVar8 + -1;\n                *puVar8 = 0x5c;\n            } while (puVar8 != 0x41fd00);\n        }\n        var_4ch = iVar6;\n        fcn.00406141(0x41fd00);\n        puVar8 = fcn.00405b72(0x41fd00);\n        if (puVar8 != NULL) {\n            *puVar8 = 0;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (0x41fd00, &fcn.00404661::var_10h, &fcn.00404661::var_14h, &fcn.00404661::var_ch, \n                           &fcn.00404661::var_20h);\n        if (iVar6 != 0) {\n            var_48h = 0x400;\n            var_4ch = var_ch;\n            var_2ch = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_14h);\n            var_28h = var_2ch >> 0x1f;\n            var_8h = 1;\n        }\ncode_r0x004048f6:\n        uVar9 = 5;\n        var_4ch = 0x4048fd;\n        uVar4 = fcn.00404af5();\n        if (((var_8h != 0) && (var_28h == 0)) && (var_2ch < uVar4)) {\n            var_4h = 2;\n        }\n        if (*(*0x423efc + 0x10) != 0) {\n            var_4ch = uVar4;\n            fcn.00404add(0x3ff, 0xfffffffb);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x400, 0x41fcf0);\n                uVar9 = arg_8h;\n            }\n            else {\n                uVar9 = 0x400;\n                fcn.00404a18(0x400, 0x400, var_2ch, var_28h);\n            }\n        }\n        *0x4247e4 = var_4h;\n        if (var_4h == 0) {\n            uVar9 = 7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_1ch + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.004041f1(var_4h == 0, uVar9);\n        if ((var_4h == 0) && (*0x420d20 == 0)) {\n            fcn.004045ba();\n        }\n        *0x420d20 = 0;\n    }\ncode_r0x0040499d:\n    fcn.00404236(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2146
    },
    "004060b8": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004060b8(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_4h = 1;\n    cVar2 = '\\n';\n    cVar6 = '9';\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_4h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if (('/' < uVar1) && (uVar1 < '8')) {\n            cVar2 = '\\b';\n            cVar6 = '7';\n        }\n        if ((uVar1 & 0xdf) == 0x58) {\n            cVar2 = '\\x10';\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (cVar6 < uVar4)) {\n            if ((cVar2 != '\\x10') || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_4h * iVar7;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        iVar7 = cVar2 * iVar7 + iVar5;\n    } while( true );\n}\n",
        "token_count": 447
    },
    "004031bd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004031bd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    param_1 = (*0x41f8dc - *0x40b848) + param_1;\n    *0x424730 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x424730 = *0x424730 + 500;\n    if (0 < param_1) {\n        fcn.0040333c(*0x41f8ec);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a01c, *0x40b848, 0);\n        *0x41f8d8 = 0;\n        *0x41f8e8 = param_1;\n        do {\n            iVar3 = 0x4000;\n            if (*0x41f8e0 - *0x41f8ec < 0x4001) {\n                iVar3 = *0x41f8e0 - *0x41f8ec;\n            }\n            iVar1 = fcn.00403326(0x4138d8, iVar3);\n            if (iVar1 == 0) {\n                return -1;\n            }\n            *0x41f8ec = *0x41f8ec + iVar3;\n            *0x40b868 = 0x4138d8;\n            *0x40b86c = iVar3;\n            do {\n                if ((*0x424734 != 0) && (*0x4247e0 == 0)) {\n                    *0x41f8d8 = (*0x41f8e8 - *0x41f8dc) + *0x40b848;\n                    fcn.00402d75(0);\n                }\n                *0x40b870 = 0x40b8d8;\n                *0x40b874 = 0x8000;\n                iVar1 = fcn.0040661e();\n                if (iVar1 < 0) {\n                    return -3;\n                }\n                iVar1 = *0x40b870 + -0x40b8d8;\n                if (iVar1 == 0) {\n                    if (*0x40b86c != 0) {\n                        return -3;\n                    }\n                    if (iVar3 == 0) {\n                        return -3;\n                    }\n                    break;\n                }\n                iVar4 = iVar1;\n                iVar2 = fcn.00405d81(*0x40a01c, 0x40b8d8, iVar1);\n                if (iVar2 == 0) {\n                    return iVar4;\n                }\n                *0x40b848 = *0x40b848 + iVar1;\n            } while (*0x40b86c != 0);\n        } while (0 < (*0x41f8dc - *0x40b848) + unaff_EDI);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a01c, *0x41f8dc, 0, 0);\n    }\n    fcn.00402d75(1);\n    return 0;\n}\n",
        "token_count": 721
    },
    "0040646b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040646b(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpBuffer;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    if (0x104 < uVar1) {\n        uVar1 = 0;\n    }\n    if ((uVar1 == 0) || ((&stack0xfffffedb)[uVar1] == '\\\\')) {\n        iVar2 = 1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    (*_sym.imp.USER32.dll_wsprintfA)(&lpBuffer + uVar1, \"%s%s.dll\", iVar2 + 0x40a014, arg_8h);\n    (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(&lpBuffer, 0, 8);\n    return;\n}\n",
        "token_count": 204
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x42476c != 0)) {\n        puVar2 = *0x424768 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x106;\n        } while (uVar3 < *0x42476c);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00402b2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402b2c(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.00406163((uVar1 >> 4) * 0x400 + 0x40a400, *(*0x40b83c + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.004063ab(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "00403c23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403c23(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    uVar3 = 0xffff;\n    uVar1 = fcn.004060b8(0x42b000);\n    do {\n        if (*0x424784 != 0) {\n            puVar2 = *(*0x424734 + 100) * *0x424784 + *0x424780;\n            iVar4 = *0x424784;\n            do {\n                puVar2 = puVar2 - *(*0x424734 + 100);\n                iVar4 = iVar4 + -1;\n                if (((*puVar2 ^ uVar1) & uVar3) == 0) {\n                    *0x423f00 = *(puVar2 + 1);\n                    *0x4247e8 = *(puVar2 + 3);\n                    *0x423efc = puVar2 + 5;\n                    if (*0x423efc != NULL) {\n                        fcn.0040609f(0x42b000, *puVar2);\n                        fcn.00403cdc();\n                        piVar5 = *0x424768;\n                        for (iVar4 = *0x42476c; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            if (*piVar5 != 0) {\n                                fcn.00406163(piVar5 + 6, *piVar5);\n                            }\n                            piVar5 = piVar5 + 0x106;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar4 != 0);\n        }\n        if (uVar3 == 0xffff) {\n            uVar3 = 0x3ff;\n        }\n        else {\n            uVar3 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 430
    },
    "004041cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004041cf(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00406163(0, param_3);\n    sub.USER32.dll_SetDlgItemTextA(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "00404305": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404305(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x41fcfc + arg_8h, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    *arg_14h = iVar1;\n    *0x41fcfc = *0x41fcfc + iVar1;\n    return 0;\n}\n",
        "token_count": 134
    },
    "0040461a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040461a(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.004041cf(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 1000, *(arg_14h + 0x3c) * 0x400 + 0x425000);\n    }\n    fcn.00404236(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 147
    },
    "00404a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a18(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int8_t iVar5;\n    uint arg_ch_00;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint *arg_8h;\n    uint var_40h;\n    uint var_20h;\n    \n    arg_ch_00 = 0xffffffdc;\n    if (arg_14h == 0) {\n        iVar5 = 0x14;\n        if (arg_10h < 0x100000) {\n            iVar5 = 10;\n            arg_ch_00 = 0xffffffdd;\n        }\n        if (arg_10h < 0x400) {\n            iVar5 = 0;\n            arg_ch_00 = 0xffffffde;\n        }\n        if (arg_10h < 0xffff3333) {\n            arg_10h = (1 << iVar5) / 0x14 + arg_10h;\n        }\n        uVar6 = arg_10h >> iVar5;\n        uVar7 = ((arg_10h & 0xffffff) * 10 >> iVar5) % 10;\n    }\n    else {\n        uVar6 = arg_10h >> 0x14 | arg_14h << 0xc;\n        uVar7 = 0;\n    }\n    uVar1 = fcn.00406163(&var_20h, 0xffffffdf);\n    arg_8h = &var_40h;\n    uVar2 = fcn.00406163(arg_8h, arg_ch_00);\n    pcVar9 = \"%u.%u%s%s\";\n    uVar8 = 0x420d30;\n    iVar3 = fcn.00406163(0x420d30, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenA(0x420d30, uVar8, arg_ch, pcVar9, uVar6, uVar7, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar3 + iVar4);\n    sub.USER32.dll_SetDlgItemTextA(*0x423ef8, nIDDlgItem, 0x420d30);\n    return;\n}\n",
        "token_count": 554
    },
    "00405ad9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405ad9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, iVar1 + param_1);\n    if (*pcVar2 != '\\\\') {\n        sub.KERNEL32.dll_lstrcatA(param_1, 0x40a014);\n    }\n    return param_1;\n}\n",
        "token_count": 117
    },
    "00405b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00405b20(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = param_1 + iVar1;\n    do {\n        if (*pcVar2 == '\\\\') break;\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar2);\n    } while (param_1 < pcVar2);\n    *pcVar2 = '\\0';\n    return pcVar2 + 1;\n}\n",
        "token_count": 129
    },
    "00405d09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00405d09(uchar *arg_8h, uint lpPathName)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = arg_8h;\n    iVar4 = 100;\n    do {\n        iVar4 = iVar4 + -1;\n        arg_8h = *0x40a3cc;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        arg_8h._0_3_ = CONCAT12(arg_8h._2_1_ + uVar2 % 0x1a, arg_8h._0_2_);\n        arg_8h = arg_8h & 0xff000000 | arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &arg_8h, 0, puVar1);\n        if (iVar3 != 0) {\n            return puVar1;\n        }\n    } while (iVar4 != 0);\n    *puVar1 = 0;\n    return NULL;\n}\n",
        "token_count": 256
    },
    "0040609f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040609f(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_1, 0x4083a4, param_2);\n    return;\n}\n",
        "token_count": 52
    },
    "0040654e": {
        "rules": [
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040654e(uint hProcess)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpExitCode;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 100);\n    while (iVar2 == 0x102) {\n        fcn.00406515(0xf);\n        iVar2 = (*pcVar1)(hProcess, 100);\n    }\n    (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hProcess, &lpExitCode);\n    return lpExitCode;\n}\n",
        "token_count": 148
    },
    "00405cda": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405cda(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "004057e0": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004057e0(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x422538 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                      (0, lpCommandLine, 0, 0, 0, 0x4000000, 0, 0, 0x422538, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "00405823": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00405823(uint *param_1)\n\n{\n    param_1[9] = 0;\n    *param_1 = 0x3c;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExA)(param_1);\n    return;\n}\n",
        "token_count": 61
    },
    "00405fc7": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405fc7(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00405f4c(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(iVar1, lpSubKey, 0, arg_10h, arg_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 144
    },
    "00405ff5": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405ff5(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00405f4c(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, arg_10h, 0, arg_14h, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "004038ae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004038ae(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x41fcf4; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004038c9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004038c9(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x41fcf4;\n    fcn.004038ae(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x41fcf4 = NULL;\n    return;\n}\n",
        "token_count": 147
    },
    "004038fe": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004038fe(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x41fcf4;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "00405b04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405b04(char *param_1, char param_2)\n\n{\n    for (; (*param_1 != '\\0' && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00405c3f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405c3f(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 248
    },
    "00405c95": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405c95(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00406515": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406515(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004065fe": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004065fe(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(iVar1 + param_1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x78) = 0xffffffff;\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    return;\n}\n",
        "token_count": 150
    },
    "004064d9": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.004064d9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = *(param_1 * 8 + 0x40a258);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    if ((iVar1 == 0) && (iVar1 = fcn.0040646b(uVar2),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, *(param_1 * 8 + 0x40a25c));\n    return uVar2;\n}\n",
        "token_count": 154
    },
    "00405f20": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid fcn.00405f20(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 5;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileExA)(param_1, param_2, 5);\n    if (iVar1 == 0) {\n        fcn.00405db0(param_2, uVar2);\n    }\n    *0x4247d0 = *0x4247d0 + 1;\n    return;\n}\n",
        "token_count": 122
    },
    "00405d52": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405d52(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 143
    },
    "0040572e": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040572e(uint lpFileName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar pSecurityDescriptor;\n    uint var_1fh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpSecurityAttributes;\n    uchar *var_8h;\n    uint var_4h;\n    \n    var_1fh._0_1_ = 0;\n    stack0xffffffe0 = 0x40837c;\n    var_18h = 0x40837c;\n    var_8h = &pSecurityDescriptor;\n    var_14h = 0;\n    var_4h = 0;\n    pSecurityDescriptor = 1;\n    var_1fh._1_2_ = 4;\n    var_10h = 0x40836c;\n    lpSecurityAttributes = 0xc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(lpFileName, &lpSecurityAttributes);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 != 0xb7) {\n            return iVar2;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityA)(lpFileName, 0x80000007, &pSecurityDescriptor);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 362
    },
    "004057ab": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nuint fcn.004057ab(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_1, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 99
    },
    "00405d81": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405d81(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 143
    }
}