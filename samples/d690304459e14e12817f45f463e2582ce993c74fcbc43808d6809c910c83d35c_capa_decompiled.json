{
    "00401e6f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e6f(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00402ee8(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00401160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401160(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBX;\n    \n    if ((noname_1 != '\\0') && (7 < *(noname_0 + 0x18))) {\n        if (unaff_EBX != 0) {\n            fcn.00401550(8, *(noname_0 + 4));\n        }\n        fcn.00401260();\n    }\n    *(noname_0 + 0x18) = 7;\n    fcn.00401240();\n    return;\n}\n",
        "token_count": 151
    },
    "004017f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.004017f0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar3;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004026fe(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar3 = *(unaff_EBP + 8) | 0xf;\n    if (uVar3 == 0xffffffff) {\n        uVar3 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar1 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar1;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar3 / 3 < uVar2) && (uVar1 <= -uVar2 - 2)) {\n            uVar3 = uVar2 + uVar1;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    arg_8h_01 = fcn.00401750(uVar3 + 1);\n    if (*(unaff_EBP + 0xc) != 0) {\n        if (*(extraout_ECX + 0x18) < 0x10) {\n            arg_10h = extraout_ECX + 4;\n        }\n        else {\n            arg_10h = *(extraout_ECX + 4);\n        }\n        fcn.00401765(arg_8h_01, uVar3 + 1, arg_10h, *(unaff_EBP + 0xc));\n    }\n    fcn.004017a3(1, 0);\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 4) = arg_8h_01;\n    *(extraout_ECX + 0x18) = uVar3;\n    fcn.0040172f(arg_8h_00);\n    fcn.00402734();\n    return;\n}\n",
        "token_count": 587
    },
    "00401d25": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d25(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x40d090) {\n        return;\n    }\n    *0x40deb8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x40debc = &arg_8h;\n    *0x40ddf8 = 0x10001;\n    *0x40dda0 = 0xc0000409;\n    *0x40dda4 = 1;\n    var_328h = *0x40d090;\n    var_324h = *0x40d094;\n    *0x40ddac = unaff_retaddr;\n    *0x40de84 = in_GS;\n    *0x40de88 = in_FS;\n    *0x40de8c = in_ES;\n    *0x40de90 = in_DS;\n    *0x40de94 = unaff_EDI;\n    *0x40de98 = unaff_ESI;\n    *0x40de9c = unaff_EBX;\n    *0x40dea0 = in_EDX;\n    *0x40dea4 = in_ECX;\n    *0x40dea8 = in_EAX;\n    *0x40deac = unaff_EBP;\n    *0x40deb0 = unaff_retaddr;\n    *0x40deb4 = in_CS;\n    *0x40dec0 = in_SS;\n    *0x40ddf0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004059dc(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x40a240);\n    if (*0x40ddf0 == 0) {\n        fcn.004059dc(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 826
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004023db": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004023db(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x402486;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.004024b2;\n        uStack36 = *0x40d090 ^ &fcn.004023db::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004023db::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.004046b1();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.004023db::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 718
    },
    "004038c1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004039b4: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004039b9)\n// WARNING: Removing unreachable block (ram,0x004039e7)\n// WARNING: Removing unreachable block (ram,0x004039bf)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004038c1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004049b8(0x40c228, 0x18);\n    fcn.00405d89(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x40e104 != 1) {\n        *0x40e100 = 1;\n        *0x40e0fc = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00404465(*0x40fa88);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00404465(*0x40fa84);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040445c();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00404465(*piVar2);\n                        iVar3 = fcn.0040445c();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00404465(*0x40fa88);\n                        piVar1 = fcn.00404465(*0x40fa84);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004037fb(0x40a190);\n        }\n        fcn.004037fb(0x40a198);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00405caf(8);\n    }\n    return;\n}\n",
        "token_count": 790
    },
    "00404d3a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404d3a(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004049b8(0x40c2b8, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.004046b1();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.00405947();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.00405990(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00404e00();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.00405947();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.004049fd();\n    return;\n}\n",
        "token_count": 566
    },
    "00404e00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404e00(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004046b1();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.004046b1();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004050c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050c8(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00402619(*(unaff_EBP + -0x28));\n    iVar1 = fcn.004046b1();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.004046b1();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.004025f2(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00404e60(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00406f83": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406f83(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00405caf(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040704c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040704c(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040445c();\n    var_4h = 0;\n    if (*0x40e808 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x40e808 = fcn.004043ea(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x40e80c = fcn.004043ea(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x40e810 = fcn.004043ea(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x40e818 = fcn.004043ea(uVar3);\n        if (*0x40e818 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x40e814 = fcn.004043ea(uVar3);\n        }\n    }\n    if ((*0x40e814 != iVar1) && (*0x40e818 != iVar1)) {\n        pcVar4 = fcn.00404465(*0x40e814);\n        pcVar5 = fcn.00404465(*0x40e818);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040718e;\n        }\n    }\n    if ((((*0x40e80c != iVar1) && (pcVar4 = fcn.00404465(*0x40e80c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x40e810 != iVar1 && (pcVar4 = fcn.00404465(*0x40e810),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040718e:\n    pcVar4 = fcn.00404465(*0x40e808);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 814
    },
    "004013f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004013f0(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00401540();\n    if (uVar1 < 2) {\n        return 1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 63
    },
    "00401530": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401530(uint32_t param_1)\n\n{\n    code *pcVar1;\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 < 2) {\n        fcn.00401000();\n        fcn.0040228b(&stack0xfffffff0, 0x40c5b8);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00401fe7(param_1 * 2);\n    return;\n}\n",
        "token_count": 134
    },
    "00401410": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00401410(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint32_t var_ch_2;\n    int32_t var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    int32_t in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    int32_t arg_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x409890;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00401410::var_ch_3;\n    uVar5 = var_ch_2 | 7;\n    uVar2 = fcn.004013f0();\n    if (uVar5 <= uVar2) {\n        uVar1 = *(var_8h + 0x18);\n        uVar4 = uVar1 >> 1;\n        var_ch_2 = uVar5;\n        if ((uVar5 / 3 < uVar4) && (uVar1 <= uVar2 - uVar4)) {\n            var_ch_2 = uVar4 + uVar1;\n        }\n    }\n    var_4h = 0;\n    arg_18h = 0x401481;\n    uVar3 = fcn.00401530();\n    var_4h = 0xffffffff;\n    if (var_10h_2 != 0) {\n        in_stack_ffffffd0 = fcn.00401370();\n        in_stack_ffffffcc = var_ch_2 + 1;\n        fcn.00401550();\n        arg_18h = var_10h_2;\n    }\n    fcn.00401160(var_8h, 1, in_stack_ffffffcc, in_stack_ffffffd0, arg_18h);\n    *(var_8h + 4) = uVar3;\n    *(var_8h + 0x18) = var_ch_2;\n    fcn.00401240();\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 548
    },
    "00401050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401050(uint param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00401efe(param_3, param_4 * 2, param_2, in_EAX * 2);\n    return;\n}\n",
        "token_count": 75
    },
    "00401070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401070(uint param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00401d34(param_3, param_4 * 2, param_2, in_EAX * 2);\n    return;\n}\n",
        "token_count": 76
    },
    "004010a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004010a0(void)\n\n{\n    char16_t *pcVar1;\n    char16_t *pcVar2;\n    \n    pcVar1 = L\"rajuyeweledowemu\";\n    do {\n        pcVar2 = pcVar1;\n        pcVar1 = pcVar2 + 1;\n    } while (*pcVar2 != L'\\0');\n    return pcVar2 + -0x205e2c >> 1;\n}\n",
        "token_count": 101
    },
    "004010c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004010c0(void)\n\n{\n    fcn.00401050();\n    return;\n}\n",
        "token_count": 24
    },
    "004010e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004010e0(void)\n\n{\n    fcn.00401070();\n    return;\n}\n",
        "token_count": 24
    },
    "00401370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401370(void)\n\n{\n    int32_t in_EAX;\n    \n    if (7 < *(in_EAX + 0x18)) {\n        return *(in_EAX + 4);\n    }\n    return in_EAX + 4;\n}\n",
        "token_count": 60
    },
    "00401520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401520(void)\n\n{\n    int32_t in_EAX;\n    \n    if (7 < *(in_EAX + 0x18)) {\n        return *(in_EAX + 4);\n    }\n    return in_EAX + 4;\n}\n",
        "token_count": 60
    },
    "00401620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401620(void)\n\n{\n    fcn.004010c0();\n    return;\n}\n",
        "token_count": 24
    },
    "00401630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401630(void)\n\n{\n    fcn.004010e0();\n    return;\n}\n",
        "token_count": 24
    },
    "0040165e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040165e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00401d34(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 68
    },
    "004016f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016f9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00401640(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    },
    "00401714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401714(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040165e(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    },
    "00401765": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401765(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.004016f9(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "00401784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401784(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00401714(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 70
    },
    "00401cb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401cb1(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004026cb(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.00401e12(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.std::logic_error.0;\n    fcn.00401c86(arg_8h_00 + 0xc);\n    fcn.00402734();\n    return;\n}\n",
        "token_count": 198
    },
    "004039ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004039ed(uint arg_8h)\n\n{\n    fcn.004038c1(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "0040439e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004043b2)\n// WARNING: Removing unreachable block (ram,0x004043b8)\n// WARNING: Removing unreachable block (ram,0x004043ba)\n\nvoid fcn.0040439e(void)\n\n{\n    return;\n}\n",
        "token_count": 63
    },
    "004093f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004093f0(void)\n\n{\n    uint arg_8h;\n    uchar auStack2052 [2048];\n    uint32_t uStack4;\n    \n    uStack4 = *0x40d090 ^ auStack2052;\n    *0x40ed20 = *0x40ed20 * 0x343fd + 0x269ec3;\n    (*_sym.imp.USER32.dll_OemToCharW)(\"zegivofojilela fuwevesohobaxagapufogu guhulivori\", auStack2052);\n    arg_8h = 0;\n    (*_sym.imp.KERNEL32.dll_IsBadHugeReadPtr)(0, 0);\n    fcn.00401d25(arg_8h);\n    return;\n}\n",
        "token_count": 173
    },
    "00402372": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402372(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00405815(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "00401270": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401270(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.004013e0();\n    if (uVar2 < in_EAX) {\n        fcn.00401b46();\n    }\n    iVar3 = fcn.004013e0();\n    uVar2 = iVar3 - in_EAX;\n    if (param_3 < iVar3 - in_EAX) {\n        uVar2 = param_3;\n    }\n    if (param_1 == param_2) {\n        fcn.00401380();\n        fcn.00401380();\n        return param_1;\n    }\n    cVar1 = fcn.00401300();\n    if (cVar1 != '\\0') {\n        iVar3 = fcn.00401520(uVar2);\n        fcn.00401370(*(param_1 + 0x18), iVar3 + in_EAX * 2);\n        fcn.00401550();\n        fcn.00401240();\n    }\n    return param_1;\n}\n",
        "token_count": 276
    },
    "00401380": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401380(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_EDI + 0x14) < param_1) {\n        fcn.00401b46();\n    }\n    uVar1 = *(unaff_EDI + 0x14) - param_1;\n    if (uVar1 < in_EAX) {\n        in_EAX = uVar1;\n    }\n    if (in_EAX != 0) {\n        iVar2 = fcn.00401370(uVar1 - in_EAX);\n        fcn.00401370(*(unaff_EDI + 0x18) - param_1, iVar2 + (param_1 + in_EAX) * 2);\n        fcn.00401580();\n        fcn.00401240();\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00409480": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00409480(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    iVar3 = 0;\n    if (0 < unaff_EBX) {\n        do {\n            if (iVar3 < 0xaaa) {\n                (*pcVar1)(0, 0);\n            }\n            uVar2 = fcn.004093f0();\n            *(iVar3 + unaff_EDI) = *(iVar3 + unaff_EDI) ^ uVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00403485": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403485(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004049b8(0x40c1e8, 0xc);\n    fcn.00405d89(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x40e0cc;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x40e0c8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004034c9;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00402ee8(arg_8h_00);\ncode_r0x004034c9:\n        fcn.00402ee8(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004034ec();\n    fcn.004049fd();\n    return;\n}\n",
        "token_count": 399
    }
}