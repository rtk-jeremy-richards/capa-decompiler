{
    "004028ef": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.004028ef(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    int32_t unaff_EBX;\n    uint unaff_EDI;\n    bool bVar4;\n    ulong uVar5;\n    uint var_80h;\n    uint var_40h;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    uVar5 = fcn.00405e76();\n    iVar3 = uVar5 >> 0x20;\n    bVar4 = *0x4401b4 < uVar5;\n    uVar2 = *0x4401b4;\n    while( true ) {\n        iVar1 = (-bVar4 & 0xfffffffc) + 4;\n        if (SCARRY4(-bVar4 & 0xfffffffc, 4) == iVar1 < 0) break;\n        fcn.0040d9a8();\n        bVar4 = 0xfffffffb < &stack0xffffffb8;\n        uVar2 = extraout_ECX;\n        iVar3 = extraout_EDX;\n    }\n    uVar5 = CONCAT44(iVar3 * 0x10 + uVar2, iVar1);\n    do {\n        *(uVar5 + 8) = uVar5 >> 0x20;\n        uVar5 = fcn.004091d6(unaff_EDI, var_40h, in_stack_ffffffc0, in_stack_ffffffc4, in_stack_ffffffc8);\n        if (unaff_EBX != 0) goto code_r0x00402969;\n    } while (*0xfffffffc != 0);\n    if (*0xfffffffc == 0) {\ncode_r0x00402969:\n        fcn.0040a8e4(unaff_EDI, var_40h);\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 532
    },
    "00402c03": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c03(uint *arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_EDX;\n    uint32_t uVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    bool bVar5;\n    uint uVar6;\n    uint in_stack_fffffedc;\n    uint var_14h;\n    uint var_4h;\n    \n    uVar1 = *0x44020c ^ &stack0xfffffffc;\n    (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsW)();\n    uVar4 = (unaff_EBX - *0x4010d4) * 0x40;\n    uVar6 = 0xffff8160;\n    fcn.0040aff9();\n    fcn.0040c4bf(1, uVar6, uVar1, in_stack_fffffedc);\n    (*_sym.imp.ADVAPI32.dll_StartServiceCtrlDispatcherW)(uVar4, arg_8h);\n    puVar2 = arg_8h;\n    uVar1 = extraout_EDX;\n    do {\n        *puVar2 = 0xa001018a;\n        bVar5 = false;\n        while (!bVar5) {\n            uVar1 = uVar1 << 0x10 | uVar4;\n            if (uVar1 != 0) goto code_r0x00402c8a;\n            bVar5 = 0 < *0x4;\n            puVar2 = *0x4;\n            if (*0x4 != NULL) {\n                *(uVar4 + 0x4c) = 0;\ncode_r0x00402c8a:\n                uVar3 = *(uVar4 + 0x40) | 1;\n                uVar1 = *(uVar3 * 4 + 0x4400e8);\n                puVar2 = (arg_ch & 0xff) * 0x400 + uVar4;\n                do {\n                    uVar6 = fcn.0040bb16();\n                    uVar4 = extraout_ECX;\n                    do {\n                        puVar2[uVar4 * 2 + 1] = uVar6;\n                        uVar4 = uVar3 | uVar1;\n                        puVar2 = arg_8h;\n                    } while (arg_8h != NULL);\n                } while( true );\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 566
    },
    "004037ce": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004037ce(uint noname_0, int32_t hWnd)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ushort *unaff_EBX;\n    int32_t unaff_EDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int32_t var_408h;\n    uint var_e0h;\n    uint var_88h;\n    uint var_20h;\n    uint uVar6;\n    \n    uVar6 = 0xffffffff;\n    *unaff_EBX = 2;\n    do {\n        do {\n        } while (hWnd != 0);\n        iVar2 = (*_sym.imp.USER32.dll_SetWindowLongW)(&hWnd, uVar6);\n    } while (iVar2 != 0);\n    *(unaff_EDI + 8) = 0x723f6c60;\n    *0x4401c4 = fcn.0040aff9(0x629);\n    *0x4401c4 = *0x4401c4 >> 0x10;\n    uVar4 = fcn.00402efa(0);\n    do {\n        uVar5 = (*_sym.imp.KERNEL32.dll_LCMapStringA)(uVar4, uVar4);\n        uVar1 = *(uVar5 + 0x14);\n        uVar3 = uVar1;\n        while (uVar4 = uVar5 & 0xffffffff00000000 | uVar3,  uVar1 == 0) {\n            uVar3 = var_408h + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 368
    },
    "00407238": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00407238(uint noname_0, uchar *noname_1, uint noname_2, uint noname_3, uint32_t noname_4, uint noname_5, \n            uint noname_6, uint arg_24h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint unaff_EBP;\n    int16_t unaff_SI;\n    uint16_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    uint unaff_retaddr;\n    uint32_t var_c4h;\n    uint var_30h;\n    uint *var_1ch;\n    uint uStack24;\n    uint *var_10h;\n    uint *var_ch;\n    uint noname_2_00;\n    uchar *var_4h;\n    \n    var_4h = 0xffffffff;\n    noname_2_00 = 0x4402d4;\n    puVar2 = *in_FS_OFFSET;\ncode_r0x00407248:\n    var_10h = &fcn.00407238::var_30h;\n    var_ch = puVar2;\n    do {\n        uStack24 = 0x407253;\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n        var_10h = var_1ch;\n        while (var_10h = var_10h + -1,  var_10h == NULL) {\n            puVar2 = var_10h;\n            if (unaff_SI < 0) goto code_r0x00407248;\n            if (arg_24h == '\\0') {\n                uVar1 = *unaff_EDI;\n                puVar4 = noname_1;\n                if (*unaff_EDI == 0) {\n                    puVar4 = *(var_c4h + 0x44);\n                    uVar1 = var_c4h;\n                }\n                bVar5 = noname_4 < *(puVar4 + 0x50);\n                if (!bVar5 && noname_4 != *(puVar4 + 0x50)) {\n                    var_ch = 0xffffb976;\n                    var_10h = 0x4072a7;\n                    fcn.00404d0b();\n                    bVar5 = false;\n                    uVar1 = 0;\n                    puVar4 = var_4h;\n                }\n                while (puVar4 = puVar4 + 1,  !bVar5) {\n                    *puVar4 = uVar1;\n                }\n                var_ch = *unaff_EDI;\n                var_10h = &fcn.00407238::var_ch;\n                do {\n                    uStack24 = 0x4072ce;\n                    fcn.0040865f(var_10h, var_ch, noname_2_00, 0xffffffff, unaff_EBP, unaff_retaddr, noname_0, noname_1\n                                 , noname_2, noname_3, noname_4);\n                    uStack24 = 0x4072d5;\n                    puVar2 = fcn.00402c03(var_10h, var_ch, noname_2_00);\n                    *puVar2 = 0;\n                    uStack24 = 0x4072dd;\n                    iVar3 = fcn.00407fc6(var_10h, var_ch, noname_2_00);\n                    while (iVar3 == 0) {\n                        uStack24 = 0x4072e9;\n                        iVar3 = fcn.00405821();\n                        unaff_retaddr = 0x200;\n                        var_10h = 0x4403d4;\n                    }\n                } while( true );\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 893
    },
    "0040d921": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d921(uint noname_0, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint8_t *puVar2;\n    uint8_t extraout_DL;\n    int32_t in_EDX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    code *in_stack_0000000c;\n    uint8_t auStack8968 [8692];\n    uint var_110h;\n    int32_t var_40h;\n    uint var_3ah;\n    uint var_36h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4402ac;\n    uStack16 = *in_FS_OFFSET;\n    uStack20 = 0x40d935;\n    pcVar1 = (**(in_EDX + 0x58))();\n    if (pcVar1 != NULL) {\n        pcVar1 = in_stack_0000000c;\n    }\n    do {\n        pcVar1 = pcVar1 >> 0x10;\n        if (arg_ch != stack0xffffffbe) goto code_r0x0040d960;\n    } while (unaff_EDI != stack0xffffffbe);\n    pcVar1 = *(unaff_EBP + 4);\ncode_r0x0040d960:\n    uStack20 = 0x40d962;\n    puVar2 = (*pcVar1)();\n    do {\n        puVar2 = &stack0xffffdcf8 + (puVar2 >> 3);\n        *puVar2 = *puVar2 | extraout_DL;\n    } while( true );\n}\n",
        "token_count": 387
    },
    "004044ef": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004044ef(uint arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t *piVar5;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t *piVar6;\n    uint64_t uVar7;\n    int32_t var_408h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_40h;\n    uint16_t *puStack12;\n    uint var_4h;\n    \n    puStack12 = 0x440160;\n    do {\n        uVar7 = (*_sym.imp.GDI32.dll_ScaleWindowExtEx)();\n        if ((uVar7 & 0x20000) != 0) goto code_r0x00404523;\n    } while (unaff_ESI < 0);\n    uVar7 = CONCAT44(*(unaff_EDI + 0x24), *(unaff_EDI + 0x28) - *(unaff_EDI + 0x24));\ncode_r0x00404523:\n    piVar5 = uVar7 >> 0x20;\n    iVar2 = uVar7 >> 1;\n    iVar4 = extraout_ECX;\n    piVar6 = piVar5;\n    if (iVar2 == 0) {\n        iVar2 = 0x250000;\n    }\n    do {\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *piVar6 = iVar2;\n            piVar6 = piVar6 + 1;\n        }\n        iVar4 = 1;\n        piVar6 = piVar5;\n        iVar2 = unaff_ESI;\n    } while (unaff_ESI < 0);\n    do {\n        *(unaff_ESI + 4) = var_64h;\n        var_64h = 0xffef - var_408h;\n    } while (var_64h != 0xd);\n    do {\n        do {\n            puVar1 = puStack12;\n            puStack12 = 0x404579;\n            uVar3 = fcn.0040d9a8();\n        } while (0 < uVar3);\n    } while ((*puVar1 == arg_ch) ||\n            (arg_ch = (uVar3 & 0xffff0000 | *puVar1) + 4,  iVar4 = extraout_ECX_00,  puStack12 = puVar1,  arg_ch == 0));\n    do {\n        (**(iVar4 + 8))(arg_8h, var_60h, puVar1);\n        iVar4 = extraout_ECX_01;\n    } while( true );\n}\n",
        "token_count": 652
    },
    "004079cb": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004079cb(uint arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t extraout_EDX;\n    code *unaff_EBX;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar5;\n    bool bVar6;\n    uint var_118h;\n    uint var_24h;\n    uint FileHandle;\n    uint *puStack16;\n    uint var_4h;\n    \n    (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)();\n    puStack16 = NULL;\n    uVar2 = (*_sym.imp.GDI32.dll_OffsetViewportOrgEx)();\n    puVar5 = unaff_EDI;\n    do {\n        unaff_ESI[0x1c] = uVar2;\n        while (uVar2 = (*unaff_EBX)(),  iVar3 = arg_14h,  (unaff_EDI & 0x40000000) != 0) {\n            while (iVar3 == 0) {\n                bVar6 = true;\n                iVar3 = 0;\n                while (*(puVar5 + 1) = 1,  unaff_ESI = unaff_EDI,  puVar5 = puStack16,  !bVar6) {\n                    *unaff_EDI = 0xffffffff;\n                    *(unaff_EDI + 5) = 10;\n                    bVar6 = *(*0x44017c + unaff_EBX * 8) == -1;\n                    uVar1 = *0x44017c + unaff_EBX * 8;\n                    iVar3 = *0x44017c;\n                    if (bVar6) {\n                        (*_sym.imp.KERNEL32.dll_LoadResource)();\n                        goto code_r0x00407a2f;\n                    }\n                }\n            }\n        }\n    } while( true );\n    while (uVar4 == 0x4401ac) {\ncode_r0x00407a2f:\n        (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)();\n        uVar4 = (uVar1 | 0x4711) << 0x10 | extraout_EDX;\n        if (uVar4 == 0) goto code_r0x00407a64;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapFree)();\ncode_r0x00407a64:\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 593
    },
    "0040aa06": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: arg_ch\n\nuint __cdecl fcn.0040aa06(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    uint arg_8h_00;\n    int32_t extraout_EDX;\n    uint32_t *unaff_EBX;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t unaff_retaddr;\n    char in_stack_00000100;\n    int32_t var_80ch;\n    uint var_80h;\n    uint arg_ch_00;\n    int32_t noname_3;\n    uint uVar5;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar4 = arg_8h;\n    iVar2 = arg_ch;\n    if (unaff_EBX == '\\0') {\n        fcn.00405eb6();\n        puVar3 = fcn.0040987b();\n        do {\n            do {\n            } while (*(puVar3 + 0xd) != '\\0');\n            puVar3 = *(arg_8h + 0x34);\n            while (puVar3 == unaff_EBX) {\n                uVar4 = puVar3 | 2;\n                *(arg_8h + 0xc) = uVar4;\n                *(arg_8h + 0x10) = uVar4;\n                puVar3 = uVar4 + 1;\n            }\n        } while( true );\n    }\n    do {\n        if (0x60 < unaff_EBX) {\n            unaff_EBX = unaff_EBX & 0xffffff00 | unaff_EBX - 0x20;\n        }\n        fcn.00404d0b();\n        while( true ) {\n            uVar1 = *unaff_EBX;\n            unaff_EDI = unaff_EDI & 0xfffffffe;\n            unaff_EBX = unaff_EBX - unaff_EDI;\n            if (unaff_EBX == NULL) break;\n            if (arg_8h < 0xc000) {\n                do {\n                    uVar1 = uVar1 & 0xffff;\n                    *(extraout_EDX + 0x38) = uVar1;\n                } while (unaff_ESI == 0);\n                do {\n                    do {\n                        fcn.004079cb(unaff_ESI, unaff_ESI, uVar4, iVar2);\n                    } while (arg_ch == 0);\n                } while (in_stack_00000100 != '\\0');\n                uVar5 = 0x4401d0;\n                iVar2 = extraout_ECX;\n                do {\n                    noname_3 = iVar2;\n                    arg_ch = *(arg_10h + arg_ch * 4);\n                    iVar2 = arg_10h;\n                } while (arg_ch != 0);\n                fcn.00404262();\n                do {\n                    fcn.0040407d();\n                } while (var_80ch != 0);\n                unaff_retaddr = unaff_retaddr + 0x440240;\n                arg_ch_00 = arg_8h_00;\n                iVar2 = fcn.00408e3f(arg_8h_00);\n                uVar5 = fcn.004091d6(iVar2 + arg_8h, arg_ch_00, unaff_retaddr, noname_3, uVar5);\n                return uVar5;\n            }\n        }\n        unaff_EBX = arg_14h;\n        uVar4 = unaff_ESI;\n        if (arg_14h == '\\0') {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 871
    },
    "00402e79": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00402e79(uint arg_8h, uint noname_1, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    int32_t unaff_ESI;\n    uint var_dch;\n    int32_t var_b8h;\n    uint var_9ch;\n    int32_t *var_24h;\n    int32_t var_20h;\n    uint var_2h;\n    \n    *(in_ECX + 0x44) = arg_8h;\n    do {\n    } while (var_b8h == 0);\n    (**(*var_24h + 4))();\n    do {\n        *(extraout_EDX + 0x10) = unaff_ESI;\n        *(unaff_ESI + 0x18) = arg_10h;\n        do {\n        } while (0 < *arg_14h);\n    } while (extraout_ECX < arg_14h);\n    if (*(var_20h + 0x23) != '\\0') {\n        *(unaff_ESI + 0xc) = *(unaff_ESI + 0xc);\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 314
    },
    "00402fa7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402fa7(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint extraout_ECX;\n    code *pcVar3;\n    code *extraout_EDX;\n    int32_t unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t *unaff_EDI;\n    uint var_194h;\n    int32_t *var_78h;\n    int32_t *var_ch;\n    code *var_8h;\n    uint var_1h;\n    \n    pcVar3 = var_8h;\n    do {\n        do {\n            (*pcVar3)();\n            var_1h._0_1_ = unaff_ESI >> 0x18;\n            pcVar3 = var_8h;\n        } while (var_1h != '\\0');\n        unaff_EDI[1] = 0x703f5360;\n        unaff_EBX = unaff_EBX + 0xb2;\n        *unaff_EDI = 0x74477152;\n        iVar1 = *0x401e44;\n        var_8h = 0xfffff9ee;\n        fcn.00404d0b();\n        var_ch = *(extraout_EDX + 0x40) & 2;\n        pcVar3 = extraout_EDX;\n    } while (var_ch != NULL);\n    *(iVar1 + 0x10) = 0;\n    *(iVar1 + 0x34) = extraout_ECX;\n    *var_78h = unaff_EBX;\n    var_78h[1] = unaff_EBX;\n    while( true ) {\n        piVar2 = var_ch;\n        *(iVar1 + 0x24) = var_78h;\n        var_ch = 0x403010;\n        fcn.0040987b();\n        if (-1 < *unaff_EDI) break;\n        var_78h = 0x1;\n    }\n    do {\n        *(iVar1 + 0x10) = piVar2;\n        do {\n            fcn.0040a675(0x403010, 0xfffff9ee, unaff_ESI, unaff_EBP);\n        } while (*0x440054 == unaff_EDI);\n        *0x44018c = 0x4402f8;\n        unaff_EDI = var_ch;\n    } while( true );\n}\n",
        "token_count": 603
    },
    "00403f4b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403f81)\n// WARNING: Removing unreachable block (ram,0x00403f8a)\n// WARNING: Removing unreachable block (ram,0x00403f94)\n// WARNING: Removing unreachable block (ram,0x00403f98)\n// WARNING: Removing unreachable block (ram,0x00403f9e)\n// WARNING: Removing unreachable block (ram,0x00403fb4)\n// WARNING: Removing unreachable block (ram,0x00403fcb)\n// WARNING: Removing unreachable block (ram,0x00403fd1)\n// WARNING: Removing unreachable block (ram,0x00403fd9)\n// WARNING: Removing unreachable block (ram,0x00403ffc)\n// WARNING: Removing unreachable block (ram,0x00403ffe)\n// WARNING: Removing unreachable block (ram,0x00404005)\n// WARNING: Removing unreachable block (ram,0x00404009)\n// WARNING: Removing unreachable block (ram,0x0040400f)\n// WARNING: Removing unreachable block (ram,0x0040401c)\n// WARNING: Removing unreachable block (ram,0x00404032)\n// WARNING: Removing unreachable block (ram,0x0040402a)\n// WARNING: Removing unreachable block (ram,0x0040403b)\n// WARNING: Removing unreachable block (ram,0x00404046)\n// WARNING: Removing unreachable block (ram,0x0040405e)\n// WARNING: Removing unreachable block (ram,0x00404070)\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00403f4b(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint var_1005h;\n    uint var_1c0h;\n    uint var_1a4h;\n    uint var_74h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_2h;\n    \n    (**(in_ECX + 8))(*in_FS_OFFSET, 0x4400d4, 0xffffffff);\n    do {\n    } while( true );\n}\n",
        "token_count": 534
    },
    "00404b2a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404c04)\n\nvoid fcn.00404b2a(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *extraout_ECX;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint unaff_EBP;\n    uchar *puVar4;\n    uchar *puVar5;\n    code *unaff_ESI;\n    char *unaff_EDI;\n    uint unaff_retaddr;\n    uint arg_8h;\n    uint uVar6;\n    uint arg_10h;\n    \n    puVar5 = &stack0xfffffffc;\n    iVar3 = unaff_EBX;\n    *0x4401d0 = (*unaff_ESI)();\n    arg_10h = 1;\n    uVar6 = 0x440210;\n    *0x440028 = (*_sym.imp.USER32.dll_GetWindowRect)();\n    puVar4 = &stack0xfffffffc;\n    if (*0x440010 != 0) goto code_r0x00404b61;\n    do {\n        uVar6 = *(puVar5 + 0x14);\n        puVar4 = puVar5;\ncode_r0x00404b61:\n        arg_8h = *(puVar4 + 0x10);\n        puVar5 = puVar4 + 1;\n    } while (*unaff_EDI != '=');\n    *(puVar4 + -3) = 7;\n    do {\n        *(puVar4 + -99) = unaff_EBX;\n        iVar2 = fcn.0040d2db(arg_8h, uVar6, arg_10h);\n        *(extraout_ECX + 0xc) = *(iVar2 + 0xc);\n    } while (*(unaff_EBX + 0x10) == 0);\n    uVar1 = *(puVar4 + 0xd);\n    fcn.0040bfd8(arg_8h, uVar6, arg_10h, iVar3, unaff_EBP, unaff_retaddr, param_1, param_2);\n    iVar3 = extraout_EDX;\n    if (uVar1 <= *(puVar4 + -0x1f)) {\n        fcn.004090c4(0x440274, unaff_EBX, arg_8h, uVar6, arg_10h);\n        *extraout_ECX = 0x2d;\n        do {\n            *(puVar4 + -3) = -uVar1;\n            iVar3 = extraout_EDX_00;\n        } while (uVar1 != 0);\n    }\n    do {\n        *(*(puVar4 + -0xc3) + 0x44) = iVar3;\n        iVar3 = *(*(puVar4 + -0xc3) + 0x44);\n    } while (*(iVar3 + 0xa0) == 0);\n    uVar6 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)();\n    *(puVar4 + -0x1adf) = uVar6;\n    do {\n        fcn.004052bc(*(puVar4 + -0x2f));\n    } while( true );\n}\n",
        "token_count": 734
    },
    "00404d85": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404e66) overlaps instruction at (ram,0x00404e65)\n// \n\nvoid __cdecl fcn.00404d85(int32_t *hMenu, uint *arg_ch, uint arg_10h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint32_t extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *piVar4;\n    int32_t *in_EDX;\n    int32_t *piVar5;\n    int32_t *unaff_EBX;\n    int32_t *piVar6;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    bool bVar7;\n    bool in_ZF;\n    ulong uVar8;\n    uchar uStack0000005c;\n    uchar uStack00000088;\n    uint var_1a0h;\n    ushort uVar9;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x4403d8;\n    uStack16 = *in_FS_OFFSET;\n    *in_EDX = in_ECX;\n    do {\n        *(unaff_ESI + 5 + in_ECX) = 10;\n    } while (in_ZF);\n    var_4h = 0;\n    *arg_ch = 0x440390;\n    uVar9 = *(in_ECX + 0x10);\n    fcn.0040c2ad();\n    *hMenu = uVar9;\n    do {\n        iVar2 = (*_sym.imp.USER32.dll_GetSubMenu)(hMenu);\n    } while (iVar2 == unaff_EDI);\n    bVar7 = 0xfffffffb < extraout_ECX;\n    uVar8 = fcn.0040a0ef(in_ECX);\n    piVar6 = *0x38;\n    do {\n    } while (!bVar7);\n    do {\n        piVar1 = hMenu[0x82] + uVar8 * 2;\n    } while (*piVar1 == 10);\n    piVar4 = extraout_ECX_00;\n    piVar5 = uVar8 >> 0x20;\n    if (*piVar1 < 10) {\n        **0x38 = uVar8;\n        uStack0000005c = SUB41(unaff_EBX, 0);\n        piVar4 = extraout_ECX_00;\n        piVar5 = piVar6;\n        unaff_EBX = extraout_ECX_00;\n        if (extraout_ECX_00 == NULL) {\n            out(piVar6, &var_4h + -0x15);\n            uStack00000088 = uStack0000005c;\n            (*((piVar6 - 1U & 0x20) << 0x18))(0, 0, &var_4h);\n            (*&uStack16)(&uStack16);\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\ncode_r0x00404e42:\n    do {\n        piVar6 = unaff_EBX;\n        unaff_EBX = piVar4;\n    } while (piVar6 == *0x30);\n    do {\n        piVar3 = *0x30 + 1;\n        piVar5[0xe] = piVar3;\n        piVar5 = *0x34;\n        while( true ) {\n            piVar4 = *0x38;\n            unaff_EBX = piVar6;\n            if (piVar6 == '\\0') goto code_r0x00404e42;\n            if (piVar3 <= hMenu) break;\n            **0x38 = **0x38 + piVar5;\n            piVar4[1] = piVar4[1] - piVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 893
    },
    "004050b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Variable defined which should be unmapped: var_23h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004050b7(uint *arg_8h)\n\n{\n    int32_t noname_1;\n    uint *puVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_EDX;\n    code *extraout_EDX_00;\n    int32_t *unaff_EBX;\n    int32_t *unaff_ESI;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    uint var_114h;\n    uint var_40h;\n    ushort *puVar6;\n    uchar uStack40;\n    uint var_23h;\n    uint var_1ch;\n    uint in_stack_ffffffe4;\n    uint var_14h;\n    uchar auStack20 [3];\n    uint var_dh;\n    uint arg_20h;\n    uint var_4h;\n    \n    arg_20h = 1;\n    do {\n        (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)(0x4402e4);\n    } while ((*0x440034 & 0x100) == 0);\n    noname_1 = *unaff_ESI + unaff_ESI * 2;\n    puVar1 = extraout_EDX >> 0x1f;\n    do {\n        do {\n            bVar4 = CARRY4(puVar1, extraout_EDX);\n            puVar1 = puVar1 + extraout_EDX;\n            bVar5 = puVar1 == NULL;\n            uVar3 = puVar1 + 1;\n        } while (!bVar4);\n        while (_auStack20 = uVar3,  uVar3 = 0x4400a8,  puVar1 = arg_8h,  bVar5) {\n            bVar5 = unaff_EBX == '0';\n            if (!bVar5) {\n                *arg_8h = *(noname_1 + 0x10);\n                *unaff_EBX = noname_1;\n                if (0 < *(noname_1 + 0xc)) {\n                    uVar3 = 0x4400a7;\n                    _auStack20 = _auStack20 & 0xffffff | *(arg_8h + 0x3d) << 0x18;\n                }\n                fcn.0040468d(0x4400fc, noname_1, in_stack_ffffffe4, noname_1, _auStack20, noname_1, arg_20h, 0);\n                _uStack40 = 1;\n                (*extraout_EDX_00)(1);\n                uVar3 = uVar3 + 0x60;\n                do {\n                    fcn.0040adbf();\n                    uVar2 = extraout_ECX;\n                    while (noname_1 == 0) {\n                        uVar2 = uVar2 & 0xffffff00;\n                        if (arg_8h._3_1_ < 0x20) {\n                            do {\n                                _uStack40 = CONCAT11(uVar2 >> 0x10, uStack40);\n                                _uStack40 = _uStack40 & 0xffff0000 | _uStack40;\n                                fcn.00409bb1(_uStack40);\n                                uVar3 = uVar3 | 0x80000000;\n                                uVar2 = extraout_ECX_00;\n                                _uStack40 = uVar3;\n                            } while (uVar3 == 0);\n                            puVar6 = 0x4402e0;\n                            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(0x4402e0, 0x103);\n                            do {\n                                fcn.004052fb();\n                                *puVar6 = 0;\n                            } while( true );\n                        }\n                    }\n                } while( true );\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 954
    },
    "0040ae25": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ae25(uint *arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_EDX;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    int32_t in_FS_OFFSET;\n    ulong uVar5;\n    uint var_30ch;\n    int32_t aiStack736 [112];\n    uint var_11ch;\n    int32_t iStack276;\n    uint var_68h;\n    uint var_58h;\n    uint var_24h;\n    uint uStack24;\n    int32_t iStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \ncode_r0x0040ae3b:\n    do {\n        var_8h = 0x40ae45;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        do {\n            if (iVar3 != 0) goto code_r0x0040ae3b;\n        } while (unaff_EBX != 0x42bdf0);\n        if (unaff_EBX == 0x42bdf0) {\n            var_4h = *(*0x44011c + 0x88);\n            var_8h = 0x40ae77;\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n            iVar4 = uVar5;\n            *(arg_ch + 0x210) = 0x42bdf0;\n            iVar3 = extraout_ECX_00;\n            do {\n                uVar1 = *(iVar3 + 4);\n                do {\n                    *(arg_ch + 8) = iVar3;\n                    *(arg_ch + 4) = uVar1;\n                    *(iVar3 + 4) = arg_ch;\n                    iVar3 = *(unaff_EDI + 4);\n                } while (iVar3 == 0);\n                iVar4 = iVar4 - (uVar5 >> 0x20) >> 1;\n            } while (iVar4 != 0);\n            var_8h = 0x100;\n            var_4h = *(&stack0xfffffd20 + in_FS_OFFSET);\n            iVar3 = *(*(var_4h + 0xc) + 0x14);\n            if ((*(iVar3 + 0x10) != 0) && (*(iVar3 + 0x28) != 0)) {\n                uStack16 = 0x40aeca;\n                iVar4 = fcn.0040c104();\n                iVar3 = var_8h;\n                if (iVar4 == var_8h) {\n                    var_4h = 0x405245;\n                    fcn.00404262();\n                    var_24h = *arg_8h;\n                    *(iVar3 + 0xc) = *(iVar3 + 0xc) + 0x220105;\n                    var_8h = 0xffffabee;\n                    uStack16 = 0x405274;\n                    var_4h = extraout_EDX;\n                    pcVar2 = fcn.0040cf57();\n                    do {\n                    } while (iStack276 == 0);\n                    iStack20 = extraout_ECX + 0x1c;\n                    uStack24 = 0x405296;\n                    (*pcVar2)();\n                    uStack24 = 0x40529b;\n                    fcn.00402bf1();\n                    *(pcVar2 + 4) = 0;\n                    return;\n                }\n            }\n            uStack16 = 0x5eb3;\n            iStack20 = 0x40aedd;\n            iStack20 = fcn.0040c084();\n            uStack24 = 0x40aee4;\n            (*_sym.imp.USER32.dll_GetWindowRect)();\n            return;\n        }\n        pe_dos_header = 0xd8;\n    } while( true );\n}\n",
        "token_count": 929
    },
    "004052bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004052bc(code *param_1)\n\n{\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint var_8h;\n    \n    var_8h = 0x4052c2;\n    (*param_1)();\n    if (*(unaff_ESI + 0x24) != 0) goto code_r0x004052da;\n    do {\n        *(unaff_ESI + 0x60) = 0;\n        *(unaff_ESI + 0x5c) = unaff_EDI;\n        *(unaff_ESI + 0x54) = unaff_EDI;\n        *(unaff_ESI + 0x4c) = unaff_EDI;\ncode_r0x004052da:\n        unaff_EDI = var_8h;\n    } while ((unaff_EBX & 0x400) != 0);\n    return;\n}\n",
        "token_count": 212
    },
    "00407178": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00407178(void)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint unaff_EBP;\n    uint *unaff_ESI;\n    uint var_ech;\n    uint var_60h;\n    uint var_10h;\n    uint in_stack_fffffff0;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    *unaff_ESI = 0x4403b4;\n    *unaff_ESI = 0x440310;\n    *unaff_ESI = 0x4400d8;\n    if (unaff_ESI != 0x43be1d) {\n        fcn.004060a1(0x3c20);\n        (*_sym.imp.ADVAPI32.dll_ChangeServiceConfigW)(*0x44039c);\n        do {\n            pcVar1 = *(*0x4403c8 + 0x10) + 0x43;\n            *pcVar1 = *pcVar1 + -1;\n            *0x4403c8 = *(*0x4400c8 + 0x10);\n        } while( true );\n    }\n    fcn.0040c084();\n    do {\n        *0x43be1d = 0x440210;\n        while( true ) {\n            iVar2 = fcn.00403f4b(0x4598, in_stack_fffffff0, in_stack_fffffff4, 0xffffffff, unaff_EBP);\n            if (iVar2 == 0) break;\n            if (unaff_EBX != 0x43be1d) {\n                return;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 407
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004090c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nushort __cdecl fcn.004090c4(int32_t arg_8h, uint noname_1, uint arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    int32_t iVar6;\n    uchar *unaff_EDI;\n    uchar *puVar7;\n    bool bVar8;\n    bool bVar9;\n    bool bVar10;\n    ushort in_FPUControlWord;\n    uint unaff_retaddr;\n    uint var_434h;\n    uint var_134h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_1ch;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = *0x440390;\n    iVar4 = fcn.0040b963(arg_8h, unaff_EDI, unaff_EBX, 0, unaff_EBP, unaff_retaddr);\n    var_14h = NULL;\n    *unaff_EDI = iVar4;\n    do {\n        puVar7 = unaff_EDI;\n        unaff_EDI = puVar7 + 1;\n    } while (*0x4 == iVar4);\n    var_4h._0_1_ = SUB41(uVar3, 0);\n    pe_dos_header = var_4h._0_1_;\n    iVar1 = *(iVar4 + 2);\n    piVar5 = fcn.004081fc(0, arg_8h);\n    do {\n        piVar2 = *(extraout_ECX + 4);\n    } while (piVar2 <= piVar5);\n    *arg_14h = 0;\n    iVar4 = extraout_ECX;\n    do {\n        iVar6 = iVar4;\n        *piVar5 = -piVar2;\n        iVar4 = iVar6 + 1;\n        while (iVar1 != 0) {\n            piVar5 = iVar6 + 0xd;\n            if (iVar1 != '\\0') {\n                while (*(iVar4 + 0x48) == 0) {\n                    piVar5 = var_14h;\n                    if (puVar7[0x76] == '\\0') {\n                        piVar5 = NULL;\n                        iVar4 = arg_8h;\n                    }\n                }\n                *(puVar7 + 0x35) = *(iVar4 + 0x34);\n                piVar5[0xe] = 0;\n                *(piVar5 + 0xd) = 0;\n                bVar10 = SCARRY4(piVar5, 0x40);\n                bVar9 = piVar5 + 0x10 < 0;\n                bVar8 = piVar5 == 0xffffffc0;\n                do {\n                    do {\n                    } while (!bVar8 && bVar10 == bVar9);\n                    bVar10 = false;\n                    bVar9 = *0x2 < '\\0';\n                    bVar8 = *0x2 == '\\0';\n                } while (bVar8);\n                fcn.0040adbf(puVar7 + 2);\n                return in_FPUControlWord;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 865
    },
    "004091d6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_38ch\n// WARNING: Variable defined which should be unmapped: var_388h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004091d6(int32_t *arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int16_t *piVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t *extraout_ECX;\n    int32_t in_EDX;\n    uint32_t uVar6;\n    int32_t *extraout_EDX;\n    uint32_t extraout_EDX_00;\n    int32_t *piVar7;\n    int16_t *unaff_EDI;\n    uint *puVar8;\n    ulong uVar9;\n    uint var_820h;\n    uint var_810h;\n    code *var_41ch;\n    uint var_394h;\n    uint var_38ch;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint var_208h;\n    uint var_1a8h;\n    uint var_12ah;\n    uint var_118h;\n    uint uStackY40;\n    uint *puStackY36;\n    uint *var_1ch;\n    uint arg_8h_00;\n    int32_t *var_10h;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    piVar7 = arg_8h;\n    var_4h = *(in_EDX + 0x24);\n    piVar1 = arg_8h;\ncode_r0x004091e0:\n    piVar5 = unaff_EDI & piVar1;\n    var_4h = var_4h & piVar1;\n    do {\n        piVar1 = piVar1 - piVar5;\n        do {\n            piVar1 = piVar1 >> 1;\n            var_12ah._0_2_ = SUB42(piVar5, 0);\n            if (piVar1 != NULL) goto code_r0x004091e0;\n        } while (piVar1 == NULL);\n        piVar2 = arg_8h[0x11];\ncode_r0x00409201:\n        piVar1 = piVar2;\n        piVar2 = piVar1;\n        uVar6 = var_4h;\n    } while (piVar1 <= piVar5);\ncode_r0x0040920c:\n    var_4h = uVar6;\n    piVar2 = piVar2 + -0x3e3;\n    if ((piVar2 == NULL) || (*unaff_EDI != 0)) goto code_r0x00409201;\n    var_8h = 0x200;\n    uVar6 = arg_18h;\n    do {\n        uVar6 = uVar6 - piVar2;\n        piVar5 = *piVar2;\n        if (piVar5 != 0x1a) goto code_r0x0040920c;\n    } while (unaff_EDI == 0x200);\n    var_10h = arg_8h + 6;\n    do {\n        uVar9 = (*var_41ch)();\n        uVar6 = uVar9 >> 0x20;\n        piVar3 = uVar9;\n    } while (piVar3 == unaff_EDI);\n    *piVar3 = 0;\n    puVar8 = &fcn.004091d6::var_10h;\n    *0x4402ab = SUB41(extraout_ECX, 0);\n    if (piVar3 == unaff_EDI) {\n        var_4h = var_4h & 0xffffff00 | arg_8h & 0xff;\n        piVar3 = *0x440280;\n        arg_8h = extraout_ECX;\n    }\n    piVar7 = piVar7 + -1;\n    if (uVar6 == 0) {\ncode_r0x004092a2:\n        *0x440268 = *0x440268 | uVar6;\n    }\n    else {\n        while (piVar7 != 0xffffffff) {\n            if (piVar3 == 0x1) goto code_r0x004092a2;\n        }\n    }\n    (*var_8h[5])();\n    piVar5 = var_10h;\n    var_118h = 0;\n    var_4h = CONCAT31(var_4h._1_3_, 0x11);\n    puVar4 = &fcn.004091d6::var_1a8h;\n    arg_8h_00 = 0x440268;\n    var_1ch = var_8h;\n    puStackY36 = 0x4092d8;\n    fcn.00405651(var_8h);\n    var_1ch = 0x4092e2;\n    fcn.00407fc6(arg_8h_00, puVar4, var_10h);\n    do {\n        puVar4 = *arg_8h;\n        piVar2 = arg_8h;\n        if (*piVar5 != puVar4) break;\n        puVar4 = NULL;\n        for (; piVar2 != NULL; piVar2 = piVar2 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n    } while (extraout_EDX == NULL);\n    do {\n        puVar4 = piVar2 + -1 + puVar4;\n    } while (puVar8 == puVar4);\n    do {\n    } while ((*(*piVar7 + 4 + puVar8) & 1) != 0);\n    piVar5 = extraout_EDX;\n    if (*piVar7 != 'F') {\n        *(extraout_EDX + 0x3f) = *(extraout_EDX + 0x3f) + '\\x01';\n        piVar5 = piVar1;\n        piVar7 = piVar1;\n    }\n    do {\n        do {\n        } while (puVar8 < piVar5[3]);\n        piVar5 = piVar5 + var_1ch;\n        puVar4 = *puVar8[0x11];\n        if (puVar8 == puVar4) goto code_r0x00409347;\n    } while (puVar4 < 0x8);\n    var_8h = puVar8[0x11] + -8;\n    var_4h = 0xffffffff;\ncode_r0x00409347:\n    do {\n        puStackY36 = puVar8;\n    } while (puVar4[2] != 0xd);\n    do {\n        uStackY40 = 0x409360;\n        fcn.00404b2a();\n        *0x44025c = *0x44025c + 1;\n    } while (*0x44025c != 0);\n    piVar7 = piVar7[puVar4];\n    do {\n        if (piVar7 != NULL) {\n            piVar7 = *(puVar4 + 10);\n        }\n        while ((extraout_EDX_00 & 0x1801) == 0) {\n            if (piVar7 == 0) {\n                piVar7 = arg_8h;\n            }\n            do {\n            } while (puVar4 == NULL);\n        }\n    } while( true );\n}\n",
        "token_count": 1727
    },
    "00409659": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00409659(int32_t arg_8h, int32_t arg_ch, uint noname_2, int32_t *arg_14h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_EDX;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    int32_t iVar6;\n    int32_t unaff_ESI;\n    bool bVar7;\n    uint64_t uVar8;\n    uint var_1a4h;\n    uchar auStackY256 [120];\n    uint32_t var_84h;\n    uint uStackY104;\n    uint uStackY100;\n    uint uStack72;\n    int32_t noname_1;\n    uint32_t uStack52;\n    int32_t var_20h;\n    uint uStack32;\n    uint32_t var_14h;\n    int16_t *var_bp_10h;\n    uint uStack12;\n    int32_t var_4h;\n    \n    noname_1 = unaff_ESI;\n    (**(unaff_ESI + 8))();\n    do {\n    } while (uStack52 != 0);\n    var_20h = var_20h + 1;\n    uVar3 = extraout_ECX_00;\n    iVar5 = extraout_EDX;\ncode_r0x00409683:\n    iVar6 = unaff_EBX;\n    unaff_EBX = iVar6 + 1;\n    *(iVar5 + 1) = uStack52;\n    iVar5 = iVar5 + 2;\n    puVar1 = &fcn.00409659::var_20h + uStack52;\n    do {\n        var_84h = uVar3 - uStack52;\n        uVar3 = var_84h;\n        while( true ) {\n            if (var_84h != 0) goto code_r0x00409683;\n            do {\n                do {\n                    uVar3 = *(iVar6 + 5);\n                } while (uVar3 == *(iVar6 + 9));\n            } while (unaff_ESI == 0);\n            uStack52 = var_14h;\n            if (var_14h == 0) break;\n            if (var_4h <= puVar1) {\n                do {\n                    *arg_14h = unaff_ESI;\n                    uVar3 = uVar3 * 4 + 0x440020;\n                    unaff_ESI = arg_8h;\n                } while (var_14h != uVar3);\n                uVar8 = fcn.0040d2db(0x4096cb, noname_1, 0);\n                var_bp_10h = uVar8;\n                do {\n                } while (arg_ch == unaff_EBX);\n                do {\n                } while (*var_bp_10h != uVar8);\n                if (*(extraout_ECX_01 + 0x58) != uVar8 >> 0x20) {\n                    uStack72 = 0x440194;\n                }\n                var_4h = 0;\n                var_14h = var_14h & 0xffff | var_bp_10h << 0x10;\n                *(var_bp_10h + 2) = unaff_EBX;\n                *(var_bp_10h + 0xa0) = unaff_EBX;\n                *(var_bp_10h + 0x9e) = var_bp_10h;\n                *var_bp_10h = var_bp_10h;\n                *(var_bp_10h + 0x32) = var_bp_10h;\n                uVar3 = (uVar8 & 0xffffffff | ZEXT48(&fcn.00409659::var_14h) << 0x20) / 0xf;\n                if ((0xf1eeeeed < uVar3) && (bVar7 = uVar3 == 0xf1eeeeee,  -0xe111112 < uVar3)) {\n                    fcn.00405eb6();\n                    var_4h = 0xffffffff;\n                    if (!bVar7) {\n                        *(var_14h + 0x2c) = 0;\n                        uStackY100 = uStack12;\n                        uStackY104 = 0x40b6f3;\n                        (*0xf)();\n                    }\n                    uStackY100 = 0x40b70e;\n                    fcn.0040d655(uStack32, uStack72);\n                    pcVar2 = swi(3);\n                    puVar4 = (*pcVar2)();\n                    return puVar4;\n                }\n                fcn.00405eb6();\n                if (extraout_ECX < 0x14) {\n                    fcn.00404d0b();\n                    *0x3c = 0;\n                }\n                return &stack0xffffff00;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1123
    },
    "0040a3e5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040a3e5(void)\n\n{\n    uint uVar1;\n    ushort *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar *extraout_ECX;\n    ushort *extraout_ECX_00;\n    uint *puVar7;\n    uint *puVar8;\n    int32_t unaff_EBX;\n    uchar *unaff_ESI;\n    uchar *puVar9;\n    ushort *puVar10;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    bool bVar11;\n    ulong uVar12;\n    \n    iVar6 = *in_FS_OFFSET;\n    *iVar6 = &stack0xfffffffc;\n    fcn.0040bb16();\n    uVar1 = *(iVar6 + 0x10);\n    iVar4 = fcn.00403c50(0x440240);\n    *unaff_ESI = *extraout_ECX;\n    puVar9 = unaff_ESI + 0x1d;\n    do {\n        *(iVar6 + -0x30) = iVar4;\n        do {\n            *(iVar6 + -0x38) = unaff_EDI;\n            *(iVar6 + -0x3c) = unaff_EBX;\n            *(iVar6 + -0x4c) = unaff_EBX;\n        } while (iVar4 != unaff_EBX);\n    } while (-1 < iVar4);\n    bVar11 = *(iVar6 + -0x154) != 0;\n    do {\n        puVar10 = -bVar11 & *(iVar6 + -8);\n        while( true ) {\n            *(iVar6 + -0x2c) = unaff_EBX;\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            bVar11 = false;\n            if ((uVar5 & 0x100) != 0) break;\n            if (uVar5 != 0) goto code_r0x0040a463;\n        }\n    } while( true );\ncode_r0x0040a463:\n    do {\n        *puVar10 = uVar1;\n        **0xa001000e = *0xa0010016;\n        puVar8 = *(puVar9 + -0x14);\n        bVar11 = *(puVar9 + -8) < puVar8;\n    } while (bVar11);\n    do {\n        *(puVar10 + 8) = unaff_EDI;\n        if (!bVar11) {\n            uVar12 = fcn.004052fb();\n            puVar8 = uVar12 >> 0x20;\n            *uVar12 = 9;\n            puVar10 = extraout_ECX_00;\n        }\n        piVar3 = *0x4401a0;\n        puVar10 = puVar10 & 0xf00000;\n        bVar11 = puVar10 < 0x44028c;\n    } while (puVar10 == 0x44028c);\n    puVar2 = *(unaff_EDI + 0x14);\n    *(puVar9 + -0x2c) = 0x440280;\n    puVar7 = *(puVar9 + -4);\n    *puVar7 = 0x440244;\n    iVar6 = *(puVar9 + -4) + -1;\n    if (iVar6 == 0) {\n        iVar6 = puVar7[0x15];\n        if (iVar6 == 0) goto code_r0x0040a4e7;\n        puVar7 = *(puVar2 + 2);\n        puVar10 = puVar2;\n    }\n    *piVar3 = iVar6;\n    puVar7 = puVar7 & 0xff7fffff;\ncode_r0x0040a4e7:\n    *puVar8 = puVar7;\n    do {\n        *(puVar9 + -0x18) = puVar2;\n        uVar12 = (*(puVar9 + -8))(0x80058000, puVar9 + -8);\n    } while (-1 < uVar12);\n    (-puVar10)[-1] = uVar12 + '0';\n    do {\n        *-puVar10 = 0;\n    } while (puVar9[-0x18] != '\\0');\n    return (uVar12 >> 0x20) + -4;\n}\n",
        "token_count": 983
    },
    "0040ce65": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nuint64_t __fastcall fcn.0040ce65(uint param_1, code *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar5;\n    uint64_t uVar6;\n    uint var_54h;\n    uint var_38h;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = *(unaff_ESI + 0x24);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (*(iVar1 + unaff_EDI * 4) != 0);\n    uVar3 = *0x401dc0;\n    iVar1 = (*param_2)();\n    pcVar4 = uVar3 + *0x4017d8;\n    if (iVar1 == 0) {\n        fcn.0040aff9(0x4a82);\n        uVar6 = (*pcVar4)(2, 0);\n        return uVar6;\n    }\n    fcn.00404d0b(0x514f, iVar1);\n    iVar1 = fcn.0040c084(0x40d4);\n    bVar5 = *(iVar1 + 0x30) == extraout_ECX;\n    if (!bVar5) {\n        *(extraout_ECX + 4) = iVar1;\n        iVar1 = 0x4c4;\n        if (bVar5) goto code_r0x0040cf29;\n    }\n    piVar2 = iVar1 + 0x48;\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    param_2 = 0x40ceb2;\n    iVar1 = *(iVar1 + 0x1033ac8);\ncode_r0x0040cf29:\n    return CONCAT44(param_2, iVar1) | 0x20000;\n}\n",
        "token_count": 499
    },
    "0040d23e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_384h\n// WARNING: Variable defined which should be unmapped: var_38ch\n// WARNING: Variable defined which should be unmapped: var_388h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d23e(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    bool bVar4;\n    int64_t iVar5;\n    uint var_5d0h;\n    code *var_41ch;\n    uint var_394h;\n    uint var_38ch;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint var_fdh;\n    uint var_54h;\n    uint uStackY40;\n    int32_t var_10h;\n    uint var_4h;\n    \n    var_10h = 0;\n    iVar5 = (*var_41ch)();\n    iVar3 = iVar5;\n    bVar4 = iVar3 == unaff_EDI;\n    if (!bVar4) goto code_r0x0040d27e;\ncode_r0x0040d27a:\n    unaff_EBX = iVar3 + 0x24;\ncode_r0x0040d27e:\n    if (!bVar4) goto code_r0x0040d281;\n    goto code_r0x0040d2aa;\ncode_r0x0040d281:\n    bVar4 = arg_8h == 4;\n    if (!bVar4) {\n        iVar2 = unaff_EBX;\n        if (var_fdh == '\\0') {\n            do {\n                unaff_EBX = iVar2;\n                iVar2 = var_10h;\n            } while (iVar3 != 0);\ncode_r0x0040d2aa:\n            if (0xffffffff < iVar5) {\n                uStackY40 = 0x40d2cc;\n                iVar3 = fcn.0040c61a(&fcn.0040d23e::var_54h);\n                *(iVar3 + 0x28) = extraout_ECX;\n                *(iVar3 + 0x2c) = extraout_ECX;\n                *(iVar3 + 0x30) = extraout_ECX;\n                return;\n            }\n        }\n        puVar1 = unaff_EBX + 0x1c;\n        *puVar1 = *puVar1 | 0x8000;\n        bVar4 = *puVar1 == 0;\n    }\n    goto code_r0x0040d27a;\n}\n",
        "token_count": 623
    },
    "0040d2db": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: Locale\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d2db(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint arg_ch;\n    uint noname_2;\n    code *in_EDX;\n    uint extraout_EDX;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    code *pcVar3;\n    ulong uVar4;\n    uint var_1f8h;\n    uint var_60h;\n    uint var_48h;\n    uint noname_2_00;\n    int32_t var_24h;\n    uint noname_4;\n    uint noname_5;\n    uint noname_6;\n    uint noname_7;\n    uint noname_8;\n    uint *Locale;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    do {\n        uVar4 = (*in_EDX)(in_EAX);\n        in_EDX = uVar4 >> 0x20;\n        in_EAX = unaff_EBX;\n    } while (unaff_EBX != var_4h);\n    iVar2 = unaff_EBX;\n    pcVar3 = uVar4;\n    if (*unaff_ESI != '=') {\n        iVar2 = (var_8h - var_24h) + 1;\n        pcVar3 = *0x4400d4;\n    }\n    do {\n        *(unaff_ESI + 0x44018c) = iVar2;\n    } while (*(unaff_EBP + iVar2 * 2) != 10);\n    var_8h = *0x4400d8 ^ &stack0xfffffffc;\n    Locale = 0x40d32a;\n    var_4h = unaff_EBP;\n    iVar2 = (*pcVar3)();\n    do {\n        piVar1 = iVar2 + 0x38;\n        iVar2 = *0x8003;\n    } while (*piVar1 == 0);\n    do {\n        Locale = &fcn.0040d2db::Locale;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTimeFormatA)();\n    } while (-1 < iVar2);\n    Locale = NULL;\n    (*_sym.imp.USER32.dll_ReleaseDC)();\n    fcn.00408512();\n    iVar2 = *(unaff_EBX + 0x29);\n    if (iVar2 == 0) {\n        do {\n            (*_sym.imp.USER32.dll_GetDlgCtrlID)();\n        } while( true );\n    }\n    *(iVar2 + 0x38) = unaff_EBX + 1;\n    *(iVar2 + 0x34) = var_8h;\n    noname_8 = 1;\n    noname_7 = 0;\n    noname_5 = 0x440208;\n    noname_4 = 0x4401d8;\n    noname_6 = extraout_EDX;\n    arg_ch = fcn.00407178();\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    noname_2_00 = noname_2;\n    fcn.0040d16e(arg_10h, arg_ch, noname_2, 10000, noname_4, noname_5, noname_6, noname_7, noname_8, Locale, var_8h, \n                 var_4h);\n    do {\n        fcn.004091d6(iVar2, arg_ch, noname_2_00, 10000, noname_4);\n    } while( true );\n}\n",
        "token_count": 893
    },
    "0040468d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040468d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    ulong uVar3;\n    uint var_14h;\n    uint var_ch;\n    \n    do {\n    } while (*(unaff_ESI + 0x44) != 2);\n    uVar3 = fcn.0040cf31(*(in_EAX + 0xa0));\n    puVar1 = uVar3;\n    *puVar1 = 0x2a;\n    *(puVar1 + 0xe) = var_14h;\n    uVar2 = uVar3 >> 0x38;\n    do {\n        *(puVar1 + 0xf) = *(uVar2 * 4 + 0x440358);\n        uVar2 = *0x4402dc;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "004064c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004064c4(uint32_t arg_8h)\n\n{\n    char in_AL;\n    uint32_t uVar1;\n    int32_t var_1ad0h;\n    int32_t var_1ac0h;\n    uint32_t uVar2;\n    \n    uVar2 = arg_8h;\n    do {\n        do {\n            uVar1 = uVar2 - 0xf0000;\n            uVar2 = arg_8h;\n        } while (uVar1 < 0x20000);\n    } while ((uVar1 == 0x20000) || (uVar2 = uVar1,  in_AL == '\\x01'));\n    return var_1ac0h + var_1ad0h;\n}\n",
        "token_count": 170
    },
    "0040bfd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: uMode\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nuint64_t __cdecl\nfcn.0040bfd8(int32_t *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint noname_6, \n            uint arg_24h)\n\n{\n    uint32_t arg_14h_00;\n    uint *puVar1;\n    uint32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    ushort *puVar8;\n    uint32_t unaff_EDI;\n    uint *puVar9;\n    uchar uVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    uint uStack00000034;\n    uint var_1e4h;\n    uint var_44h;\n    uint uStackY68;\n    uint uStackY64;\n    uint *var_38h;\n    uint32_t var_34h;\n    uint noname_0;\n    uint noname_1;\n    int32_t *piVar13;\n    uint *uMode;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    do {\n        iVar5 = *(unaff_EBX + 0x3c);\n    } while (iVar5 == 0);\n    puVar9 = unaff_EDI | 0x58dd;\n    uVar10 = in_EAX < 0x4;\n    if (4 < in_EAX) {\n        var_1ch = 0x7a51;\n        iVar2 = fcn.0040aff9();\n        *(unaff_EBX + -2) = *(iVar2 + 0x38);\n        piVar13 = &fcn.0040bfd8::uMode;\n        uVar10 = unaff_EBX + -3 == 0;\n        uMode = 0x40c023;\n        (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n        iVar2 = *arg_8h;\n        do {\n            uMode = 0x40c033;\n            uVar11 = (**(iVar2 + 0xc))();\n            iVar2 = uVar11;\n            *(iVar5 + 0xb0) = unaff_EBX + -3;\n        } while (!uVar10);\n        do {\n            piVar3 = piVar13;\n            if (*(iVar2 + 0xc + iVar5) == puVar9) break;\n            piVar3 = arg_8h;\n        } while (uVar11 >> 0x20 == *((puVar9 >> 8 & 0xff) + 0x4401a0));\n        do {\n            uMode = 0x40c063;\n            fcn.0040aa06(piVar3, var_1ch, var_18h, arg_24h);\n            piVar3 = arg_8h;\n        } while( true );\n    }\n    if ((in_EAX != 0x4) && (uVar10 = *0x44008c < 3,  *0x44008c == 3)) {\n        return CONCAT44(arg_14h, in_EAX);\n    }\n    while (arg_14h_00 = *in_EAX,  !uVar10) {\n        var_1ch = 0x40c0c4;\n        fcn.00402e79(0x4401b8, 0x10, 0x4401b8, arg_14h_00);\n        in_EAX = puVar9[0x20];\n    }\n    uMode = arg_ch;\n    piVar13 = arg_8h;\n    var_1ch = unaff_EBX + -2;\n    var_18h = puVar9;\n    piVar3 = (*in_EAX[0x14])();\n    uStack00000034 = 0xffffffff;\n    uVar12 = fcn.00405d4e(piVar13, uMode);\n    puVar7 = uVar12;\n    while( true ) {\n        if (arg_8h == NULL) {\n            return uVar12 & 0xffffffff00000000 | ZEXT48(puVar7);\n        }\n        if (*(puVar7 + 0x45) == uVar12 >> 0x20) break;\n        puVar7 = *puVar7;\n    }\n    puVar4 = puVar7;\n    if (0x1 < puVar9) goto code_r0x0040c14e;\n    do {\n        puVar1 = var_1ch;\n        arg_8h = piVar3;\n    } while (piVar3 == NULL);\n    do {\n        do {\n            puVar4 = puVar1;\n            puVar1 = var_1ch;\n        } while (puVar4 <= var_18h);\ncode_r0x0040c14e:\n        puVar1 = puVar4;\n    } while (arg_8h != 0x123);\n    _pe_dos_header = puVar7;\n    *arg_ch = 0x440118;\n    *0x4402d8 = 0x440118;\n    do {\n    } while ((arg_14h_00 & 0xff) != 0xe6);\n    noname_1 = 7;\n    noname_0 = 4;\n    piVar13 = piVar3;\n    do {\n        var_34h = 0x40c187;\n        fcn.0040c4bf(noname_0, noname_1, piVar13, uMode);\n        var_34h = 0x40c199;\n        fcn.0040d23e(noname_0);\n        noname_0 = 0x44003c;\n    } while (*0x10 == 0x2c);\n    var_34h = *(piVar3 + 0x440094);\n    var_38h = 0x440330;\n    puVar8 = *0x401bd0 + 4;\n    uStackY64 = 0x5c55;\n    uStackY68 = 0x40c201;\n    fcn.00405eb6();\n    uStackY68 = 0x4402c0;\n    do {\n        var_44h = 0x40c20b;\n        iVar5 = fcn.00404b2a();\n    } while (iVar5 == 2);\n    var_38h = &fcn.0040bfd8::var_44h;\n    uStackY64 = 0x40c225;\n    var_34h = arg_14h_00;\n    uVar6 = (*&stack0xfffffffc)();\n    if (*(puVar9 + 1) == uVar6) {\n        do {\n            uVar6 = uVar6 - 0x29;\n        } while (0x4d < uVar6);\n        puVar8 = 0x43b4fd;\n        uStackY64 = 0x5b2f;\n        uStackY68 = 0x40c26d;\n        uVar11 = fcn.0040cf57();\n        uVar6 = uVar11 >> 0x20;\n        puVar7 = uVar11;\n        if (0xe7 < uVar11) {\n            if (uVar11 < 0xf0) goto code_r0x0040c28e;\n            goto code_r0x0040c279;\n        }\n    }\n    else {\n        *(uVar6 + 0x2c) = extraout_ECX;\n    }\n    puVar7 = &fcn.0040bfd8::var_1ch;\ncode_r0x0040c279:\n    uVar6 = puVar7 >> 8 & 0x3f;\n    do {\n        piVar3 = *(uVar6 + 0x438370);\n        uVar6 = arg_14h_00 * 0x53;\ncode_r0x0040c28e:\n        iVar5 = *0x440194;\n    } while (*(*0x440194 + 4) != uVar6);\n    do {\n        *puVar8 = piVar3;\n        puVar8 = puVar8 + 1;\n    } while (iVar5 == '\\0');\n    *(puVar9 + 9) = puVar8;\n    return CONCAT44(uVar6, *(puVar9 + 5));\n}\n",
        "token_count": 1993
    },
    "0040cb2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040cb2c(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t arg_18h;\n    uint extraout_ECX;\n    uint in_EDX;\n    uint extraout_EDX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_40h;\n    uint *arg_8h_00;\n    uint noname_1;\n    uint noname_2_00;\n    uint arg_14h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004064c4(in_EDX);\n    do {\n    } while (unaff_EDI != 0);\n    arg_18h = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n    (**(arg_18h + 4))();\n    arg_8h_00 = *0x8;\n    do {\n    } while (*0x4402e0 != 2);\n    noname_2_00 = 0;\n    **0x8 = extraout_ECX;\n    noname_1 = *(unaff_ESI + 0x4c);\n    arg_14h_00 = extraout_EDX;\n    (*_sym.imp.CFGMGR32.dll_CM_Get_Child)();\n    do {\n        fcn.00403f4b(arg_8h_00, noname_1, noname_2_00, arg_14h_00, arg_18h);\n    } while( true );\n}\n",
        "token_count": 401
    },
    "00403b23": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_134h\n\nvoid __fastcall fcn.00403b23(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    uint var_134h;\n    uint var_10h;\n    uint var_8h;\n    uint uStack8;\n    \n    uStack8 = 0;\n    do {\n        if (in_EAX == 0) break;\n    } while (unaff_EDI + in_EAX == -1);\n    *(unaff_EBX + -4) = &var_8h;\n    (*_sym.imp.KERNEL32.dll_FindNextFileW)(param_2, 0x440294, param_2, 0x44039c);\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 204
    },
    "0040662a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b927)\n// WARNING: Removing unreachable block (ram,0x0040b932)\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040662a(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint arg_10h;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint *puVar5;\n    uint *extraout_ECX_00;\n    code *extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    code *extraout_ECX_03;\n    uint extraout_ECX_04;\n    ushort extraout_DX;\n    uint32_t extraout_EDX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t iVar8;\n    code *unaff_EBX;\n    uint unaff_EBP;\n    code **unaff_ESI;\n    code *unaff_EDI;\n    code *pcVar9;\n    uchar uVar10;\n    bool bVar11;\n    char cVar12;\n    char cVar13;\n    ulong uVar14;\n    uint unaff_retaddr;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint var_818h;\n    uint var_814h;\n    uint var_4c0h;\n    uint var_4bch;\n    uint var_210h;\n    uint var_140h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    char cStack268;\n    uint var_e0h;\n    uint var_9ch;\n    int32_t var_5ch;\n    uint var_2ch;\n    uint uStack44;\n    uint var_24h;\n    uint noname_1;\n    uint var_1ch;\n    uint var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint *puVar15;\n    uint *noname_5;\n    \n    noname_5 = 0xffffffff;\n    var_8h = 0x440224;\n    var_130h = 0x128;\n    var_ch = unaff_EBX;\n    (*unaff_EDI)();\n    pcVar9 = var_ch;\n    var_ch = 0x406653;\n    iVar4 = fcn.0040b069();\n    if (iVar4 == 0x63d16698) {\n        var_ch = 0xffffaf93;\n        fcn.004060a1();\n        fcn.004060a1();\n        arg_10h = var_ch;\n        noname_1 = 0xffffe6d6;\n        var_24h = 0x40669c;\n        fcn.0040cf57();\n        var_24h = arg_ch;\n        uStack44 = 0x4066aa;\n        fcn.0040aac0(arg_ch, noname_1, arg_10h);\n        return;\n    }\n    do {\n        if ((iVar4 == -0x3778343e) && (cStack268 == '.')) break;\n        if (iVar4 != -0x3d6c1c6e) {\n            var_ch = &fcn.0040662a::var_130h;\n            fcn.004060a1();\n            *(&fcn.0040662a::var_ch + 2 + unaff_ESI) = *0x4403cc;\n            if (extraout_ECX_03 < unaff_EBX) {\n                fcn.0040c5b7(var_2ch, pcVar9, 0x3c3f, var_ch, var_8h, noname_5, unaff_EBP, unaff_retaddr, arg_8h, arg_ch\n                             , noname_2, arg_14h, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024);\n                fcn.0040bb16();\n            }\n            do {\n                fcn.00402bf1();\n            } while (unaff_ESI == NULL);\n            do {\n                iVar4 = fcn.004081fc(0x44025c, 0x44025c);\n                *(iVar4 + var_5ch * 4) = extraout_ECX_04;\n            } while( true );\n        }\n        var_8h = 0x5c1a;\n        uVar14 = fcn.0040aff9();\n        pcVar9 = uVar14 >> 0x20;\n        for (iVar4 = uVar14; bVar11 = iVar4 == uVar14 >> 0x20,  bVar11; iVar4 = *(iVar4 + 0x28)) {\n        }\n        do {\n        } while (bVar11);\n        iVar4 = *0x44036c;\n    } while (var_10ch._3_1_ != '.');\n    var_ch = 0xffff9df2;\n    uVar14 = fcn.0040c084();\n    uVar7 = uVar14 >> 0x20;\n    iVar4 = uVar14;\n    uVar6 = uVar7;\n    if (iVar4 == -1) {\n        uVar6 = var_ch;\n        var_8h = uVar7;\n    }\n    puVar5 = extraout_ECX_00;\n    if ((uVar6 & 1) != 0) {\n        do {\n            *(&stack0xffffffdc + uVar6 * 4) = *puVar5;\n            fcn.004066ae();\n            puVar5 = extraout_ECX;\n            uVar6 = extraout_EDX;\n        } while( true );\n    }\n    iVar8 = iVar4;\n    (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n    do {\n        unaff_EBX[0x318] = 0x1;\n        pcVar3 = (*_sym.imp.USER32.dll_CopyRect)();\n    } while (pcVar3 == unaff_EBX);\n    uVar10 = *unaff_ESI == unaff_EBX;\n    if (uVar10) {\n        var_24h = arg_8h;\n    }\n    (*unaff_ESI[2])();\n    *(puVar5 + -0x130) = extraout_DX;\n    puVar5[-0x12f] = pcVar9;\n    pcVar3 = extraout_ECX_01;\n    (*unaff_EBX)();\n    pcVar9 = pcVar3;\n    if (uVar10) {\n        pcVar9 = puVar5[3];\n        *(pcVar3 + 0x10) = &stack0xffffffe4;\n        unaff_EBX = pcVar3;\n    }\n    *(iVar8 + 0x54) = 0;\n    *(iVar8 + 0x4c) = 0;\n    if ((*(iVar8 + 0x3c) & unaff_EBX) != 0) {\n        pcVar3 = puVar5[-7][0xf] + -puVar5[-4];\n        *puVar5[-7] = pcVar3;\n        *(iVar8 + 0x24) = *(iVar8 + 0x24) + 4;\n        puVar5[-0x4b] = 0x44033c;\n    }\n    puVar5[-0x4a] = iVar8;\n    puVar5[-0x38] = 1;\n    puVar5[-0x50] = pcVar3;\ncode_r0x00405fc5:\n    fcn.00402fa7(pcVar9, iVar4);\n    iVar8 = extraout_EDX_00;\n    do {\n        piVar1 = puVar5[3];\n        cVar13 = '\\0';\n        cVar12 = piVar1 < 0;\n        puVar2 = noname_5;\n        if (piVar1 == NULL) {\ncode_r0x00406014:\n            do {\n                do {\n                    do {\n                        puVar15 = puVar2;\n                        piVar1[2] = var_8h;\n                        uVar14 = CONCAT44(iVar8, 0xffff);\n                        puVar2 = noname_5;\n                    } while (cVar13 == cVar12);\n                    if (puVar5[-2] != puVar15) goto code_r0x0040603c;\n                    cVar13 = SBORROW4(*(iVar8 + 4), 1);\n                    iVar4 = *(iVar8 + 4) + -1;\n                    cVar12 = iVar4 < 0;\n                } while (iVar4 == 0);\n                while( true ) {\n                    cVar13 = SBORROW4(iVar4, 1);\n                    cVar12 = iVar4 + -1 < 0;\n                    puVar2 = puVar15;\n                    if (iVar4 == 1) break;\n                    var_8h = 0x40603c;\n                    uVar14 = (**(*piVar1 + 0x128))();\n                    var_8h = extraout_ECX_02;\ncode_r0x0040603c:\n                    iVar8 = uVar14 >> 0x20;\n                    iVar4 = uVar14;\n                    if (iVar4 != 0) {\n                        iVar4 = iVar4 - puVar5[-4];\n                        puVar5[-9] = iVar4;\n                    }\n                    if (var_8h == 0) {\n                        var_8h = 0x406054;\n                        fcn.00404a5b();\n                        var_8h = *puVar15;\n                        var_ch = 0x40605b;\n                        fcn.0040a197(var_8h, noname_5, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, noname_2, arg_14h);\n                        return;\n                    }\n                }\n            } while( true );\n        }\n        if (puVar5[-0x206] == 0) goto code_r0x00405fc5;\n        iVar8 = puVar5[-0x205];\n        cVar13 = '\\0';\n        cVar12 = _pe_nt_image_headers32 < 0;\n        if (_pe_nt_image_headers32 != 0) {\n            noname_5 = 0x4;\n            var_8h = 0x406005;\n            fcn.0040c61a(4);\n            var_8h = *0x4403d4;\n            var_ch = 0x406010;\n            fcn.004050b7(*0x4403d4);\n            iVar8 = extraout_EDX_01;\n            puVar2 = noname_5;\n            goto code_r0x00406014;\n        }\n    } while( true );\n}\n",
        "token_count": 2548
    },
    "00403cf4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint __cdecl fcn.00403cf4(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t *var_14h;\n    uint arg_ch;\n    \n    piVar1 = fcn.0040adbf();\n    if ((*(*piVar1 + 4 + unaff_ESI) & 1) != 0) {\n        arg_ch = 0x11;\n        fcn.00402efa();\n        var_14h = piVar1 + 2;\n        fcn.0040d921(var_14h, arg_ch);\n    }\n    fcn.00405626(var_14h);\n    do {\n        iVar2 = fcn.00403496();\n    } while (0x4402e0 < iVar2);\n    *0x4403e0 = 0x10;\n    return *0x4401b8;\n}\n",
        "token_count": 226
    },
    "00408842": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b927)\n// WARNING: Removing unreachable block (ram,0x0040b932)\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00408842(uint noname_0, int32_t arg_ch, uint noname_2, int32_t arg_14h, uint arg_18h, uint noname_5, \n            uint32_t arg_20h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint *puVar5;\n    uint *extraout_ECX_00;\n    code *extraout_ECX_01;\n    code *pcVar6;\n    code *extraout_ECX_02;\n    int32_t in_ECX;\n    code *extraout_ECX_03;\n    uint extraout_ECX_04;\n    ushort extraout_DX;\n    uint32_t extraout_EDX;\n    uint32_t uVar7;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t iVar8;\n    int32_t extraout_EDX_02;\n    code *pcVar9;\n    code *unaff_EBX;\n    uint unaff_EBP;\n    code **unaff_ESI;\n    code **ppcVar10;\n    code **ppcVar11;\n    uint32_t unaff_EDI;\n    uint uVar12;\n    uchar uVar13;\n    bool bVar14;\n    char cVar15;\n    char cVar16;\n    ulong uVar17;\n    uint var_80ch;\n    uchar auStack308 [39];\n    char cStack269;\n    uint var_108h;\n    uint var_7ch;\n    uint var_64h;\n    int32_t iStack96;\n    uint uStack88;\n    int32_t var_50h;\n    int32_t var_44h;\n    uint noname_2_00;\n    uchar *noname_3;\n    code *noname_4;\n    uint *arg_8h;\n    uint *puVar18;\n    uint noname_0_00;\n    code **noname_7;\n    uint noname_8;\n    uint *noname_9;\n    uint var_1ch;\n    code *arg_8h_00;\n    uint var_10h;\n    code *var_8h;\n    uint32_t var_4h;\n    \n    if (in_ECX != 0) {\n        *0x440070 = 0;\n        fcn.0040c61a(unaff_EBX);\n    }\n    fcn.0040a519();\n    do {\n    } while (arg_14h != -3);\n    fcn.0040cf31();\n    var_4h = 0xffffffff;\n    fcn.0040c446(unaff_EDI, var_1ch, 0, unaff_EDI, unaff_EBX, 0xffffffff);\n    while( true ) {\n        fcn.004034af();\n        uVar12 = 0;\n        uVar13 = arg_ch == 0;\n        if (uVar13) break;\n        unaff_EDI = *(extraout_EDX_02 + 4);\n    }\n    pcVar3 = unaff_ESI[5];\n    arg_8h_00 = unaff_ESI[3];\n    ppcVar10 = unaff_ESI;\n    do {\n        var_1ch = 0x4088c6;\n        fcn.00403a41(arg_8h_00, pcVar3, unaff_ESI, unaff_EDI, unaff_EBX, var_4h, unaff_EBP);\n        var_4h = arg_20h;\n        ppcVar11 = ppcVar10;\n        while( true ) {\n            ppcVar10 = ppcVar11;\n            arg_8h_00 = NULL;\n            if (!uVar13) break;\n            ppcVar11 = ppcVar10 + 3;\n            uVar13 = arg_20h == '\\0';\n            if (!uVar13) {\n                noname_9 = &fcn.00408842::var_80ch;\n                noname_8 = 0;\n                arg_8h = &stack0x00000250;\n                noname_0_00 = 0x440058;\n                pcVar9 = arg_20h & 0xff;\n                noname_7 = ppcVar11;\n                fcn.0040a81e(arg_8h);\n                noname_4 = pcVar9;\n                iVar4 = (*unaff_EBX)();\n                if (iVar4 == 0) {\n                    uVar12 = 0xffffd453;\n                    fcn.004060a1();\n                    *ppcVar11 = 0x4403a4;\n                    ppcVar10[5] = pcVar9;\n                    ppcVar10[6] = pcVar9;\n                    ppcVar10[7] = pcVar9;\n                    ppcVar10[6] = &fcn.00408842::var_108h;\n                    fcn.00407c14(uVar12, noname_4, arg_8h, noname_0_00, noname_7);\n                    do {\n                        fcn.0040aa06(0x28, 0x28, noname_0_00, noname_7);\n                    } while( true );\n                }\n                iVar4 = fcn.0040b069();\n                if (iVar4 == 0x63d16698) {\n                    fcn.004060a1();\n                    var_44h = 0x406680;\n                    fcn.004060a1();\n                    uVar12 = 0xffffe6d6;\n                    var_50h = 0x40669c;\n                    fcn.0040cf57();\n                    var_50h = arg_ch;\n                    uStack88 = 0x4066aa;\n                    fcn.0040aac0(0, uVar12, unaff_EDI);\n                    return;\n                }\n                goto code_r0x0040b8e5;\n            }\n        }\n    } while( true );\n    while( true ) {\n        if (iVar4 != -0x3d6c1c6e) {\n            noname_3 = &stack0xfffffecc;\n            noname_2_00 = 0x3c3f;\n            fcn.004060a1();\n            var_8h = unaff_EBX;\n            (&stack0xfffffff2)[ppcVar11] = *0x4403cc;\n            if (extraout_ECX_03 < pcVar9) {\n                var_44h = noname_0_00;\n                fcn.0040c5b7(noname_0_00, uVar12, noname_2_00, noname_3, noname_4, arg_8h, noname_0_00, noname_7, \n                             noname_8, noname_9, var_1ch, arg_8h_00, pcVar3, unaff_ESI, unaff_EDI, var_8h, var_4h);\n                fcn.0040bb16();\n            }\n            do {\n                fcn.00402bf1();\n            } while (ppcVar11 == NULL);\n            do {\n                var_44h = 0x44025c;\n                iVar4 = fcn.004081fc(0x44025c, 0x44025c);\n                *(iVar4 + iStack96 * 4) = extraout_ECX_04;\n            } while( true );\n        }\n        noname_4 = 0x5c1a;\n        uVar17 = fcn.0040aff9();\n        uVar12 = uVar17 >> 0x20;\n        iVar4 = uVar17;\n        while (bVar14 = iVar4 == uVar17 >> 0x20,  bVar14) {\n            iVar4 = *(iVar4 + 0x28);\n            var_1ch = CONCAT13(0x20, var_1ch);\n        }\n        do {\n        } while (bVar14);\n        iVar4 = *0x44036c;\n        if (cStack269 == '.') break;\ncode_r0x0040b8e5:\n        if ((iVar4 == -0x3778343e) && (var_108h == '.')) break;\n    }\n    uVar17 = fcn.0040c084();\n    var_44h = uVar17;\n    uVar7 = uVar17 >> 0x20;\n    if (var_44h == -1) {\n        uVar7 = unaff_EDI;\n    }\n    puVar5 = extraout_ECX_00;\n    if ((uVar7 & 1) != 0) {\n        do {\n            *(&stack0xffffffdc + uVar7 * 4) = *puVar5;\n            fcn.004066ae();\n            puVar5 = extraout_ECX;\n            uVar7 = extraout_EDX;\n        } while( true );\n    }\n    iVar4 = var_44h;\n    (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n    do {\n        pcVar9[0x318] = 0x1;\n        pcVar3 = (*_sym.imp.USER32.dll_CopyRect)();\n    } while (pcVar3 == pcVar9);\n    uVar13 = *ppcVar11 == pcVar9;\n    if (uVar13) {\n        var_50h = noname_0;\n    }\n    (*ppcVar10[5])();\n    iVar8 = var_44h;\n    *(puVar5 + -0x130) = extraout_DX;\n    puVar5[-0x12f] = uVar12;\n    var_44h = 0x405f75;\n    pcVar6 = extraout_ECX_01;\n    (*pcVar9)();\n    pcVar3 = pcVar6;\n    if (uVar13) {\n        pcVar3 = puVar5[3];\n        *(pcVar6 + 0x10) = &fcn.00408842::var_44h;\n        pcVar9 = pcVar6;\n    }\n    *(iVar8 + 0x54) = 0;\n    *(iVar8 + 0x4c) = 0;\n    if ((*(iVar8 + 0x3c) & pcVar9) != 0) {\n        pcVar6 = puVar5[-7][0xf] + -puVar5[-4];\n        *puVar5[-7] = pcVar6;\n        *(iVar8 + 0x24) = *(iVar8 + 0x24) + 4;\n        puVar5[-0x4b] = 0x44033c;\n    }\n    puVar5[-0x4a] = iVar8;\n    puVar5[-0x38] = 1;\n    puVar5[-0x50] = pcVar6;\ncode_r0x00405fc5:\n    var_44h = 0x405fca;\n    fcn.00402fa7(pcVar3, iVar4);\n    iVar8 = extraout_EDX_00;\n    do {\n        piVar1 = puVar5[3];\n        cVar16 = '\\0';\n        cVar15 = piVar1 < 0;\n        puVar2 = arg_8h;\n        if (piVar1 == NULL) {\ncode_r0x00406014:\n            do {\n                do {\n                    do {\n                        puVar18 = puVar2;\n                        piVar1[2] = noname_4;\n                        uVar17 = CONCAT44(iVar8, 0xffff);\n                        puVar2 = arg_8h;\n                    } while (cVar16 == cVar15);\n                    if (puVar5[-2] != puVar18) goto code_r0x0040603c;\n                    cVar16 = SBORROW4(*(iVar8 + 4), 1);\n                    iVar4 = *(iVar8 + 4) + -1;\n                    cVar15 = iVar4 < 0;\n                } while (iVar4 == 0);\n                while( true ) {\n                    cVar16 = SBORROW4(iVar4, 1);\n                    cVar15 = iVar4 + -1 < 0;\n                    puVar2 = puVar18;\n                    if (iVar4 == 1) break;\n                    uVar17 = (**(*piVar1 + 0x128))();\n                    noname_4 = extraout_ECX_02;\ncode_r0x0040603c:\n                    iVar8 = uVar17 >> 0x20;\n                    iVar4 = uVar17;\n                    if (iVar4 != 0) {\n                        iVar4 = iVar4 - puVar5[-4];\n                        puVar5[-9] = iVar4;\n                    }\n                    if (noname_4 == 0) {\n                        fcn.00404a5b();\n                        fcn.0040a197(*puVar18, arg_8h, noname_0_00, noname_7, noname_8, noname_9, var_1ch, arg_8h_00);\n                        return;\n                    }\n                }\n            } while( true );\n        }\n        if (puVar5[-0x206] == 0) goto code_r0x00405fc5;\n        iVar8 = puVar5[-0x205];\n        cVar16 = '\\0';\n        cVar15 = _pe_nt_image_headers32 < 0;\n        if (_pe_nt_image_headers32 != 0) {\n            arg_8h = 0x4;\n            fcn.0040c61a(4);\n            noname_4 = *0x4403d4;\n            fcn.004050b7(*0x4403d4);\n            iVar8 = extraout_EDX_01;\n            puVar2 = arg_8h;\n            goto code_r0x00406014;\n        }\n    } while( true );\n}\n",
        "token_count": 3208
    },
    "0040c446": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c446(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_ESI;\n    uint uStackY28;\n    uint var_10h;\n    \n    uVar2 = fcn.0040c084();\n    uStackY28 = arg_1ch;\n    do {\n        puVar3 = unaff_ESI * 0x14 + extraout_ECX;\n    } while ((*(puVar3 + 1) & 1) != 0);\n    *puVar3 = 0xffffffff;\n    *(puVar3 + 5) = 10;\n    do {\n        uVar1 = uStackY28;\n        puVar3[2] = arg_18h;\n        uStackY28 = 0x40c494;\n        puVar3 = fcn.00404d0b(uVar2);\n        *0xa16 = 1;\n        arg_18h = uVar1;\n    } while( true );\n}\n",
        "token_count": 272
    },
    "00404262": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\nvoid fcn.00404262(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00404d0b": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\nvoid fcn.00404d0b(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "00405eb6": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\nvoid fcn.00405eb6(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004060a1": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\nvoid fcn.004060a1(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0040aff9": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040aff9(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 42
    },
    "0040c084": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\nvoid fcn.0040c084(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0040cf57": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040cf57(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 42
    },
    "0040477c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Variable defined which should be unmapped: var_22h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.0040477c(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint hMem, uint arg_ch)\n\n{\n    uint32_t noname_2_00;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    uint unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *in_FS_OFFSET;\n    bool bVar4;\n    ulong uVar5;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack00000094;\n    int32_t iStack000000e8;\n    uint var_74h;\n    uint var_38h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_44h;\n    uint *noname_0_00;\n    uint var_ch_2;\n    uint var_22h;\n    uint var_1ch;\n    \n    noname_2_00 = *in_FS_OFFSET;\n    do {\n    } while ((noname_2_00 & 0xff) == 0xed);\n    noname_0_00 = 0xffff79bc;\n    fcn.0040aff9();\n    do {\n        iVar3 = *0x4401c0;\n        puVar1 = fcn.00408842(noname_0_00, unaff_ESI, noname_2_00, 0x44037c, 0x80000000, unaff_EBP, var_18h);\n        *puVar1 = 0;\n    } while (iVar3 != -1);\n    *0x80000008 = 0x44025c;\n    uVar5 = (*_sym.imp.KERNEL32.dll_LoadResource)();\n    puVar1 = uVar5;\n    *0x80000018 = puVar1;\n    *0x8000001c = puVar1;\n    *0x80000020 = puVar1;\n    do {\n        puVar1[1] = extraout_ECX;\n        *puVar1 = uVar5 >> 0x20;\n    } while (puVar1[2] == unaff_ESI);\n    *noname_0_00 = extraout_ECX;\n    do {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalFree)(var_14h);\n        iVar3 = *0x440370;\n    } while (iVar2 < 0);\n    do {\n        do {\n            bVar4 = -1 < iVar3;\n            iVar3 = *0x440370;\n        } while (bVar4);\n        iVar3 = var_14h;\n    } while (var_2ch != 6);\n    if (noname_2_00 == 0) {\n        var_14h = -1;\n    }\n    uStack00000094 = 0x44ce9c;\n    *in_FS_OFFSET = noname_2_00;\n    // WARNING: Could not recover jumptable at 0x004048e4. Too many branches\n    // WARNING: Treating indirect jump as call\n    iStack000000e8 = var_14h;\n    (**(var_14h * 4 + 0x440134))();\n    return;\n}\n",
        "token_count": 826
    },
    "00408744": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408744(uint arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    char **extraout_ECX;\n    char **ppcVar2;\n    char **extraout_ECX_00;\n    int32_t in_EDX;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    code *pcVar3;\n    int32_t unaff_EDI;\n    code *pcVar4;\n    uint var_1b8h;\n    uint var_84h;\n    uint hdc;\n    uint var_ch;\n    \n    *(*(unaff_ESI + 0x28) + 0x50) = unaff_ESI;\n    pcVar3 = unaff_EBP + 1;\n    ppcVar2 = unaff_EDI * 5;\n    do {\n        pcVar4 = in_EDX + -0x30 + unaff_EDI * 10;\n    } while (*(arg_ch + 0xc) != unaff_EDI);\n    do {\n        pcVar1 = *ppcVar2;\n        while (pcVar1 < 0) {\n            do {\n            } while (var_ch < 0xe7);\n            pcVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)();\n            ppcVar2 = extraout_ECX;\n            if (pcVar1 == NULL) goto code_r0x0040879c;\n            while (*pcVar1 != '.') {\n                pcVar4 = pcVar1 + 0x34;\n                if (*(pcVar1 + 0x34) != pcVar3) {\n                    (*_sym.imp.GDI32.dll_SetViewportOrgEx)();\n                    goto code_r0x004087d5;\n                }\ncode_r0x0040879c:\n                pcVar3 = *0x44002c;\n                pcVar1 = (**0x44002c)();\n                ppcVar2 = extraout_ECX_00;\n                if (pcVar1 != NULL) {\ncode_r0x004087d5:\n                    do {\n                        (*pcVar4)();\n                    } while( true );\n                }\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 484
    },
    "00405821": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00405821(void)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_ESI;\n    uchar in_ZF;\n    char in_SF;\n    char in_OF;\n    uint var_1d8h;\n    uint var_18h;\n    uint var_4h;\n    \n    do {\n        if (!in_ZF && in_OF == in_SF) {\n            in_EAX = fcn.00405e76();\n        }\n        while( true ) {\n            in_OF = '\\0';\n            in_SF = in_EAX < 0;\n            in_ZF = in_EAX == 0;\n            if (in_ZF) break;\n            in_EAX = *(unaff_ESI + 0xc);\n        }\n    } while( true );\n}\n",
        "token_count": 185
    },
    "00405b4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00405b4d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    code *unaff_ESI;\n    int32_t unaff_EDI;\n    uchar in_ZF;\n    uint var_234h;\n    uint var_22ch;\n    uint uStackY24;\n    uint in_stack_fffffff0;\n    uint var_8h;\n    \n    (*unaff_ESI)();\n    do {\n    } while (!in_ZF);\n    uStackY24 = 0x405b85;\n    iVar1 = fcn.0040ae25(&fcn.00405b4d::var_22ch, in_stack_fffffff0, 0, unaff_EDI);\n    do {\n        *(unaff_EDI + iVar1) = extraout_ECX - iVar1;\n        *((extraout_ECX - iVar1) + 5 + *0x440064) = iVar1;\n    } while( true );\n}\n",
        "token_count": 258
    },
    "004094b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.004094b2(void)\n\n{\n    uint unaff_EDI;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint var_4h;\n    \n    fcn.0040477c(unaff_EDI, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, in_stack_ffffffd8, \n                 in_stack_ffffffdc, in_stack_ffffffe0, in_stack_ffffffe4, in_stack_ffffffe8);\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 187
    },
    "00405e76": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e76(uint param_1, uint param_2)\n\n{\n    uint32_t in_EAX;\n    uint unaff_EBX;\n    uint *unaff_ESI;\n    uint unaff_EDI;\n    uint in_stack_ffffffe0;\n    uint var_ch;\n    uint var_4h;\n    \n    if (0x7f < in_EAX) {\n        *unaff_ESI = 0x4402ac;\n        fcn.0040662a(param_2, unaff_EDI, unaff_EBX, in_stack_ffffffe0);\n        if (unaff_ESI == NULL) {\n            return;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00405e8f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4402d8)();\n    return;\n}\n",
        "token_count": 196
    },
    "00408512": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.00408512(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_24h;\n    uint var_8h;\n    uint uVar2;\n    \n    uVar2 = 0xffffffff;\n    iVar1 = *in_FS_OFFSET;\n    do {\n        iVar1 = (*_sym.imp.USER32.dll_GetCapture)(*0x4401e4, 0, iVar1, 0x4403c4, uVar2);\n        if (iVar1 == 0) {\n            if (extraout_ECX != 0) {\n                return;\n            }\n            goto code_r0x00408562;\n        }\n    } while (var_24h == 0x80);\n    *0x440374 = (*_sym.imp.KERNEL32.dll_SetEndOfFile)();\ncode_r0x00408562:\n    *unaff_EBX = 7;\n    return;\n}\n",
        "token_count": 237
    },
    "0040ac19": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nvoid fcn.0040ac19(void)\n\n{\n    uint in_stack_00000020;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_10h;\n    uint *puStack12;\n    uint uStack8;\n    \n    uStack8 = in_stack_00000020;\n    puStack12 = &fcn.0040ac19::var_24h;\n    var_10h = 0xffffe819;\n    uStack24 = 0x40ac4a;\n    fcn.0040aff9();\n    uStack24 = 0x9df8;\n    uStack28 = 0x40ac50;\n    fcn.0040abb8();\n    uStack28 = 0x1c32;\n    uStack32 = 0xfffffad5;\n    uStack36 = 0x40ac65;\n    fcn.00404d0b();\n    uStack36 = 0x2f39;\n    var_24h = 0x40ac8a;\n    fcn.00404262();\n    uStack36 = 0x40ac95;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    return;\n}\n",
        "token_count": 279
    },
    "0040470a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040470a(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uchar *unaff_EBX;\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t var_688h;\n    int32_t var_684h;\n    uint var_64ch;\n    uchar *var_310h;\n    uint var_14h;\n    uint var_ch;\n    \n    *0x440148 = fcn.00408512();\n    puVar1 = *0x440148;\n    if (*0x440148 != unaff_EBX) goto code_r0x0040474e;\n    fcn.0040ac9a(unaff_ESI);\n    if (var_688h != var_684h) {\n        *(unaff_EDI + 4) = *(unaff_EBX + 4);\n        do {\n            fcn.00404b2a();\n            puVar1 = var_310h;\ncode_r0x0040474e:\n            *puVar1 = 0;\n        } while( true );\n    }\n    *in_FS_OFFSET = &var_ch;\n    *(unaff_EBX + 8) = arg_8h;\n    *(unaff_EBX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 295
    },
    "00405079": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405079(ushort *param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_4h;\n    \n    iVar1 = *in_FS_OFFSET - unaff_EDI;\n    if (*(unaff_ESI + 0x14) < 0x10) {\n        *param_1 = unaff_EDI;\n        iVar1 = *(unaff_EBX + 0x18);\n        *(unaff_EBX + 0x2c) = *(iVar1 + 0x1c);\n        *(unaff_EBX + 0x24) = 2;\n    }\n    return iVar1;\n}\n",
        "token_count": 179
    },
    "00407918": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_368h\n// WARNING: Variable defined which should be unmapped: var_354h\n// WARNING: Variable defined which should be unmapped: var_34ch\n\nvoid __cdecl fcn.00407918(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    uint32_t extraout_EDX;\n    uint unaff_EBX;\n    uint *unaff_ESI;\n    uint32_t *in_FS_OFFSET;\n    uint var_368h;\n    uint var_354h;\n    uint var_34ch;\n    uint in_stack_ffffffac;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *in_FS_OFFSET;\n    uVar3 = *0x440118 ^ &stack0xfffffffc;\n    *unaff_ESI = 0;\n    uVar5 = uVar3;\n    if (arg_10h == uVar3) {\n        iVar4 = fcn.0040ac9a(uVar3);\n        uVar3 = iVar4 + arg_8h;\n    }\n    fcn.0040c446(uVar3 + arg_ch, unaff_EBX, 0x2e, uVar3 + arg_ch, uVar5, in_stack_ffffffac);\n    uVar5 = extraout_ECX;\n    uVar3 = extraout_EDX;\n    do {\n        *(uVar3 + 4) = uVar5;\n        uVar2 = uVar3;\n        do {\n            uVar3 = uVar2;\n            uVar5 = uVar1 & 0xff;\n            uVar2 = arg_10h;\n        } while (uVar5 != 0x99);\n    } while( true );\n}\n",
        "token_count": 445
    },
    "00407c14": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00407c14(uint32_t noname_0, int32_t noname_1, int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t iVar5;\n    int32_t extraout_EDX;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    int32_t unaff_ESI;\n    char *arg_8h_00;\n    int16_t *unaff_EDI;\n    ulong uVar6;\n    uint unaff_retaddr;\n    uint var_1h;\n    uchar auStack1080 [936];\n    int32_t iStack144;\n    uint var_8ch;\n    uint var_3eh;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint var_24h;\n    uint uStack28;\n    uint uStack24;\n    char *var_18h;\n    int32_t var_14h;\n    char *var_10h;\n    uint32_t var_4h;\n    uint32_t var_8h;\n    \n    iVar4 = *(in_ECX + 0x30);\n    iVar5 = *(iVar4 + 0x18);\n    *(in_EAX + 0x18) = iVar5;\n    var_8h = unaff_EBP;\n    do {\n        uVar3 = unaff_EBX - iVar5;\n        if (uVar3 == 0) goto code_r0x00407c52;\n        var_4h = 0x4eef;\n        var_14h = 0x407c41;\n        uVar6 = fcn.00404262();\n        iVar5 = uVar6 >> 0x20;\n        unaff_EDI = *(unaff_ESI + 8);\n        iVar4 = extraout_ECX - unaff_EBX;\n    } while (iVar4 == uVar6);\n    do {\n        *uVar6 = 0;\n        var_14h = 0x407c50;\n        uVar6 = (*(uVar6 >> 0x20))();\n        iVar5 = uVar6 >> 0x20;\n        uVar3 = *uVar6;\n        iVar4 = extraout_ECX_00;\ncode_r0x00407c52:\n        uVar6 = CONCAT44(iVar5, uVar3);\n    } while (noname_0 <= uVar3);\n    uVar3 = unaff_EBX | -(iVar4 != 0) & 0x80000000;\n    do {\n        do {\n            uVar3 = uVar3 | var_18h;\n        } while (*0x4400a4 != 0x40);\n    } while ((*unaff_EDI != unaff_ESI) < uVar3);\n    uVar2 = *(unaff_ESI + 0x120);\n    var_4h = var_4h & 0xffffff | uVar3 << 0x18;\n    uStack40 = 0x40;\n    uStack28 = uVar2;\n    do {\n        var_10h = 0x407c9c;\n        uStack24 = uVar2;\n        var_18h = uVar2;\n        iVar4 = fcn.0040cf8c(var_4h, var_8h, unaff_retaddr);\n    } while (iVar4 != 0);\n    var_10h = *(unaff_ESI + 0x4402b4);\n    uVar1 = *(noname_1 + 1);\n    var_14h = -0x2eaf;\n    var_18h = 0x407ccd;\n    fcn.00404d0b();\n    arg_8h_00 = var_10h;\n    *((uVar3 & 0xffffff00 | uVar1) + 8) = 0;\n    *(var_14h + 0xc) = 0;\n    iStack144 = extraout_ECX_01 + arg_8h;\n    var_14h = 0xffffffff;\n    var_18h = var_10h;\n    uStack24 = 0x407d03;\n    var_10h = &fcn.00407c14::var_8h;\n    fcn.00406c40(arg_8h_00);\n    do {\n        *arg_8h_00 = var_14h + ',';\n        arg_8h_00 = arg_8h_00 + 1;\n    } while ((var_8h & 0x20) == 0);\n    var_14h = 0x440334;\n    var_18h = &stack0xfffffbc8;\n    do {\n        uStack28 = 0x4401a4;\n        uStack24 = 0x440158;\n        uStack36 = 0x407d58;\n        iVar4 = fcn.0040ce65();\n    } while (*(iVar4 + 0x88) != 0);\n    *0x4403b0 = 0x440318;\n    uStack36 = 100;\n    uStack40 = 0;\n    uStack44 = 0x407d75;\n    fcn.0040abb8();\n    // WARNING: Could not recover jumptable at 0x00407d7c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(extraout_EDX + 4))();\n    return;\n}\n",
        "token_count": 1356
    },
    "00402b47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "connect pipe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00402b47(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint8_t in_CF;\n    uint var_1ch;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = unaff_EDI + 0x65fc + in_CF;\n    uVar1 = fcn.0040aff9(0xfffffe05, 0x1003, *in_FS_OFFSET, 0x440224, 0xffffffff);\n    *(iVar2 + 8) = uVar1;\n    iVar2 = iVar2 + *0x401ba4;\n    fcn.00404d0b(0xffffd751, unaff_ESI + 1, 0xffffffff);\n    *(iVar2 + 0x30) = *0x440110;\n    (*_sym.imp.KERNEL32.dll_ConnectNamedPipe)(unaff_ESI + 0x29);\n    fcn.00405eb6(0xffff6936);\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 367
    },
    "004030a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403139) overlaps instruction at (ram,0x00403135)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004030a3(uint arg_8h, int32_t arg_ch, int32_t noname_2, int32_t *arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    code *pcVar4;\n    uint8_t uVar5;\n    int32_t *extraout_ECX;\n    int32_t *piVar6;\n    int32_t *extraout_ECX_00;\n    int32_t iVar7;\n    uint uVar8;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    bool bVar9;\n    bool bVar10;\n    ulong uVar11;\n    int32_t *piStack00000020;\n    uint var_1158h;\n    uint var_5dch;\n    uint var_54h;\n    uint var_32h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_14h;\n    uint var_ch;\n    uint *var_4h;\n    \n    var_4h = 0xffffffff;\n    fcn.004079cb(unaff_ESI, *in_FS_OFFSET, 0x4400e4, 0xffffffff);\n    uVar8 = *0x440274;\n    do {\n    } while (arg_ch == 0);\n    var_4h = &fcn.004030a3::var_4h;\n    uVar11 = fcn.00409f49();\n    iVar7 = uVar11 >> 0x20;\n    *(unaff_EBX + iVar7 * 4) = uVar8;\n    piVar3 = uVar11;\n    if ((uVar11 < extraout_ECX) ||\n       (*0x4400e4 = SUB41(extraout_ECX, 0),  piVar3 = arg_14h,  piVar6 = extraout_ECX,  unaff_EBX = noname_2, \n       0 < *arg_14h)) {\n        noname_2 = unaff_EBX;\n        piVar6 = piVar3[0xf];\n        iVar7 = 0x4030c6;\n        arg_14h = piVar6;\n    }\n    while( true ) {\n        uVar11 = CONCAT44(iVar7, piVar3);\n        *(iVar7 + 0x3f) = piVar6;\n        bVar9 = CARRY4(piVar6, piVar6);\n        piVar6 = piVar6 * 2;\n        bVar10 = piVar6 == NULL;\n        piStack00000020 = piVar6;\n        if (!bVar9 && !bVar10) break;\n        while( true ) {\n            iVar7 = uVar11 >> 0x20;\n            piVar3 = uVar11;\n            if (arg_14h == NULL) break;\n            if (piVar3 != NULL) {\n                uVar5 = piVar6;\n                *(noname_2 + 0x6a) = *(noname_2 + 0x6a) + uVar5;\n                puVar1 = noname_2 + 0x6850ce45;\n                uVar2 = *puVar1;\n                *puVar1 = *puVar1 + uVar5;\n                *(piVar6 + -1) = *(piVar6 + -1) + (piVar6 >> 8) + CARRY1(uVar2, uVar5);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar11 = fcn.00404d0b();\n            uVar8 = uVar11 >> 0x20;\n            pcVar4 = uVar11;\n            if (*(noname_2 + 0x3f) == 0) goto code_r0x0040317c;\n            if (iVar7 != 0xe8bc) goto code_r0x00403185;\n            bVar10 = (*0x440058 & 1) == 0;\n            piVar6 = extraout_ECX_00;\n            noname_2 = noname_2 + -1;\n            if (bVar10) goto code_r0x00403172;\n        }\n    }\ncode_r0x00403172:\n    uVar8 = uVar11 >> 0x20;\n    pcVar4 = uVar11;\n    if (bVar10) {\ncode_r0x0040317c:\n        (*pcVar4)();\n        uVar8 = extraout_EDX;\n    }\ncode_r0x00403185:\n    do {\n        fcn.0040c6d6(8, uVar8);\n        uVar8 = extraout_EDX_00;\n    } while( true );\n}\n",
        "token_count": 1141
    },
    "004034af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004034af(void)\n\n{\n    do {\n        (*_sym.imp.USER32.dll_GetMenuItemID)();\n    } while( true );\n}\n",
        "token_count": 33
    },
    "00403a41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.00403a41(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar extraout_CL;\n    uchar uVar3;\n    uint extraout_ECX;\n    uint extraout_EDX;\n    uint *noname_2_00;\n    uint unaff_EBP;\n    code *unaff_ESI;\n    int32_t unaff_EDI;\n    uint unaff_retaddr;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_ch;\n    uint noname_4_00;\n    uint var_4h;\n    \n    noname_4_00 = 0x440240;\n    noname_2_00 = 0x4402e4;\n    puVar1 = fcn.00404a5b(unaff_ESI + -1, 0, 0x440240, &stack0x00000008);\n    *puVar1 = 8;\n    fcn.0040c2ad();\n    iVar4 = *(unaff_EDI + 0x4c);\n    *(unaff_EDI + 0x4c) = extraout_ECX;\n    *0x440278 = noname_1;\n    iVar4 = *(iVar4 + 4);\n    if (iVar4 == 8) {\n        noname_2_00 = 0x4e02e4;\n        *0x8 = extraout_EDX;\n        *0xc = extraout_EDX;\n    }\n    *noname_2_00 = 0x44d9bc;\n    noname_2_00[1] = 0x44d9e8;\n    noname_2_00[3] = 0x44d9f8;\n    var_4h = 0x440060;\n    *0x4403c8 = noname_2_00[5];\n    puVar1 = noname_2_00;\n    iVar2 = (*unaff_ESI)();\n    uVar3 = extraout_CL;\n    if (unaff_EDI == 0) {\n        (**(iVar2 + 4))();\n        *(unaff_ESI + 0x2c) = noname_2_00;\n        var_4h = 1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetHandleCount)();\n        uVar3 = 2;\n    }\n    *(iVar2 + 0x41) = uVar3;\n    do {\n        iVar2 = fcn.0040a197(puVar1, iVar4, noname_2_00, noname_2_00, noname_4_00, var_4h, unaff_EBP, unaff_retaddr);\n    } while (iVar2 == 0);\n    return 0xe0018e00;\n}\n",
        "token_count": 702
    },
    "00405626": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405626(uint arg_8h)\n\n{\n    uint unaff_EBX;\n    uint var_4h;\n    \n    *0x4402e4 = unaff_EBX;\n    fcn.0040aff9(0x2566);\n    return;\n}\n",
        "token_count": 64
    },
    "004066ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004066ae(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t unaff_ESI;\n    uint32_t var_1ad8h;\n    uint var_1ac8h;\n    uchar auStack132 [128];\n    \n    uVar2 = *0x440340;\n    do {\n        do {\n            uVar1 = uVar2 ^ auStack132;\n            uVar2 = var_1ad8h;\n        } while (var_1ad8h != unaff_ESI);\n        unaff_ESI = 0x5432;\n        uVar2 = fcn.00404d0b(0x1dc, uVar1);\n    } while( true );\n}\n",
        "token_count": 165
    },
    "00406c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c40(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    int32_t in_ECX;\n    ushort *in_EDX;\n    uint *puVar2;\n    uint *puVar3;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_50h;\n    uint *var_28h;\n    ushort *var_14h;\n    uint var_ch;\n    \n    do {\n        *in_FS_OFFSET = &var_ch;\n    } while (in_ECX != 0);\n    if (**0x3c != 0x4550) {\n        uVar1 = *in_EDX;\n        do {\n            **0x3c = uVar1;\n            *0x3c = *0x3c + 1;\n        } while( true );\n    }\ncode_r0x00406c89:\n    puVar2 = **0x3c;\ncode_r0x00406c8b:\n    puVar3 = puVar2;\n    if (puVar2[1] == unaff_ESI) goto code_r0x00406cae;\n    puVar2 = puVar2 + 1;\n    puVar3 = unaff_EBX;\n    do {\n        unaff_EBX = puVar3;\n        if (arg_8h != 0) {\n            *0x3c = *(unaff_ESI + 0x20);\n            if (*0x3c == NULL) {\n                puVar3 = puVar2;\n                unaff_EBX = var_28h;\n                if (*0x3c < 0) {\n                    if (var_28h != 0x80000005) goto code_r0x00406c8b;\n                }\n                else if (var_14h != in_EDX) goto code_r0x00406c89;\n            }\ncode_r0x00406cae:\n            *puVar3 = 10;\n            puVar2 = puVar3;\n        }\n        (*0x3c)[0xe] = unaff_ESI;\n        puVar3 = unaff_EBX;\n    } while( true );\n}\n",
        "token_count": 482
    },
    "00407f0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00407f3e) overlaps instruction at (ram,0x00407f3d)\n// \n\nvoid __cdecl fcn.00407f0f(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    char in_CL;\n    code *extraout_EDX;\n    uint extraout_EDX_00;\n    char *unaff_EBX;\n    int32_t unaff_ESI;\n    uint var_14h;\n    \n    if (unaff_ESI == 0) {\n        *unaff_EBX = *unaff_EBX + 'R';\n        puVar1 = unaff_EBX + 0x57108b00;\n        uVar2 = in_CL - 6U & 7;\n        *puVar1 = *puVar1 >> uVar2 | *puVar1 << 8 - uVar2;\n    }\n    else {\n        fcn.004060a1(0xffffaa9b);\n        (*extraout_EDX)(*0x440214 ^ 0xfc);\n    }\n    do {\n        *arg_8h = 0x6dfdf2f8;\n        fcn.00404d0b();\n        fcn.0040ad2b();\n        *(arg_ch + 0x1b) = extraout_EDX_00;\n    } while( true );\n}\n",
        "token_count": 314
    },
    "004081fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004081fc(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *extraout_EDX;\n    code *unaff_ESI;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint32_t var_20h;\n    uint var_14h;\n    uint var_10h;\n    int32_t iVar4;\n    uint var_bp_4h;\n    \n    iVar4 = 0x440108;\n    *0x440380 = (*unaff_ESI)(*in_FS_OFFSET, 0x440108, 0xffffffff);\n    do {\n        (*unaff_ESI)();\n    } while (*0x440158 == iVar4);\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(0x4d, (*(arg_ch + 6) & 0x10) + 0xd9);\n    pcVar2 = uVar3 >> 0x20;\n    do {\n        var_14h = 0x7fffffff;\n        pcVar1 = pcVar2;\n        while (pcVar2 = pcVar1,  var_20h <= uVar3) {\n            pcVar1 = pcVar2;\n            if (unaff_ESI < pcVar2) {\n                fcn.004060a1(0xffffc2c8, var_14h);\n                var_14h = 0;\n                pcVar1 = extraout_EDX;\n                unaff_ESI = pcVar2;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 396
    },
    "0040856a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040856a(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint32_t in_EDX;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar auStack324 [36];\n    uint var_11ch;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x440070;\n    uStack16 = *in_FS_OFFSET;\n    do {\n        uVar3 = *0x44038c ^ auStack324;\n        while( true ) {\n            do {\n                var_11ch = 0x440300;\n                uVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(in_EDX, in_ECX, uVar3);\n                in_EDX = uVar2 >> 0x20;\n                uVar1 = uVar2;\n                in_ECX = extraout_ECX;\n            } while (uVar1 == 0);\n            if (arg_10h != unaff_ESI) break;\n            in_EDX = in_EDX & 0xffffff00 | *(uVar1 - 2);\n            uVar3 = uVar1;\n            if (*(uVar1 - 2) == 0) {\n                *unaff_EBX = 0;\n                do {\n                    fcn.0040adbf();\n                } while( true );\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 379
    },
    "0040987b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040987b(uint param_1)\n\n{\n    int32_t extraout_EDX;\n    uint in_stack_00000040;\n    uint var_5d0h;\n    int32_t var_7ch;\n    \n    fcn.00407fc6(in_stack_00000040, var_7ch + 0x44, param_1);\n    // WARNING: Could not recover jumptable at 0x0040989c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(extraout_EDX + 0x70))();\n    return;\n}\n",
        "token_count": 136
    },
    "00409bb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409bb1(void)\n\n{\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 33
    },
    "0040a81e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0040a81e(uint arg_8h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint var_4h;\n    \n    *(unaff_ESI + 0x20) = unaff_ESI + 0x18;\n    *(unaff_ESI + 0x24) = in_EAX;\n    iVar1 = fcn.0040ac9a(0xffffffff);\n    *(iVar1 + 4) = unaff_EDI;\n    *(iVar1 + 0xc) = arg_8h;\n    fcn.0040a235(arg_8h_00);\n    return *0xffffffff | 0xffffff00;\n}\n",
        "token_count": 195
    },
    "0040ac9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac9a(uint arg_8h)\n\n{\n    uint unaff_EDI;\n    \n    *0x440164 = unaff_EDI;\n    *0x4403b4 = arg_8h;\n    return;\n}\n",
        "token_count": 57
    },
    "0040adbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040adbf(void)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint *puVar3;\n    uint var_84h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    iVar1 = *0x401e84;\n    puVar3 = &var_84h;\n    do {\n        in_EAX = in_EAX & 0xffff;\n        puVar3 = puVar3 + in_EAX;\n    } while (*(unaff_EBX + 0x6c) <= puVar3);\n    uStack8 = in_EAX | 0x766d;\n    uStack12 = 0x40adf8;\n    (*_sym.imp.KERNEL32.dll_ExitProcess)();\n    uStack16 = 0x4230;\n    uStack20 = 0x40ae0c;\n    iVar2 = fcn.00404262();\n    *(iVar2 + 0x440280) = *(iVar2 + 0x11d + iVar1);\n    *0x4401ec = iVar2 + 1;\n    return;\n}\n",
        "token_count": 273
    },
    "0040aee8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_36h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_23h\n\nvoid __cdecl fcn.0040aee8(uint noname_0, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    ulong uVar2;\n    uint var_240h;\n    uint var_4ch;\n    uint uStackY76;\n    uint var_40h;\n    uint var_3ch;\n    uint var_36h;\n    uint var_23h;\n    uint fnMapMode;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)();\n    *unaff_ESI = 0;\n    uVar2 = fcn.00402b47(unaff_EDI + 0x13, arg_ch + 0x4c, &fcn.0040aee8::var_240h, arg_ch, 0);\n    while( true ) {\n        unaff_ESI[1] = 0x44011c;\n        *unaff_ESI = 0x440164;\n        if (uVar2 != 0) break;\n        uVar2 = fcn.0040a519();\n    }\n    *unaff_EDI = uVar2 >> 0x20;\n    uStackY76 = 0x40af4a;\n    (*_sym.imp.GDI32.dll_SetMapMode)();\n    *unaff_ESI = 0;\n    fcn.0040c950(unaff_EDI + 0x10, 0);\n    uVar1 = *(*unaff_EDI[4] + 0x440394);\n    do {\n        *(unaff_EDI + 0x29) = *(unaff_EDI + 0x29) ^ uVar1;\n        uVar1 = unaff_EDI[3];\n    } while( true );\n}\n",
        "token_count": 457
    },
    "0040b18a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0040b18a(uint *arg_8h, int32_t noname_1, uint noname_2, uint noname_3, uint hWnd)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint *extraout_EDX;\n    uint extraout_EDX_00;\n    uint uVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    bool in_ZF;\n    uchar uVar5;\n    char cVar6;\n    char cVar7;\n    ulong uVar8;\n    uint unaff_retaddr;\n    uint in_stack_00000018;\n    uint var_5a0h;\n    uint var_360h;\n    uint var_130h;\n    int32_t var_6ch;\n    int32_t var_28h;\n    uint uStack32;\n    uint *var_18h;\n    uint uStack24;\n    uint *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    var_8h = 0x4401e8;\n    var_10h = &fcn.0040b18a::var_360h;\n    do {\n    } while (!in_ZF);\n    var_18h = 0x40b1aa;\n    var_ch = unaff_ESI;\n    puVar1 = fcn.00403cf4(unaff_ESI);\n    *puVar1 = 0xc;\n    iVar2 = extraout_ECX;\n    do {\n        if (puVar1 < 0) {\ncode_r0x0040b1d6:\n            var_10h = &fcn.0040b18a::var_18h;\n            *(iVar2 + 0x10) = *0x10;\n            *(iVar2 + 0x20) = iVar2 + 0x18;\n            do {\n                uStack24 = hWnd;\n                var_18h = 0x40b1f5;\n                iVar2 = (*_sym.imp.USER32.dll_SetPropW)();\n            } while (iVar2 == 0);\n            cVar7 = SCARRY4(var_6ch, *(extraout_ECX_01 + 4));\n            var_6ch = var_6ch + *(extraout_ECX_01 + 4);\n            cVar6 = var_6ch < 0;\n            uVar5 = var_6ch == 0;\n            do {\n                uStack24 = 0x40b20a;\n                fcn.0040d664();\n                while (var_10h = extraout_EDX,  uVar5 || cVar7 != cVar6) {\n                    cVar7 = '\\0';\n                    cVar6 = *(arg_8h + 2) < '\\0';\n                    uVar5 = *(arg_8h + 2) == '\\0';\n                    if (!cVar6) {\n                        *(unaff_ESI + 0x14) = &fcn.0040b18a::var_5a0h;\n                        var_18h = &fcn.0040b18a::var_130h;\n                        do {\n                            do {\n                                uStack32 = 0x40b239;\n                                iVar2 = fcn.00405626(var_18h);\n                            } while (iVar2 == 0);\n                            uVar4 = 0xaaaaaaa;\n                        } while (unaff_EDI == 0xaaaaaaa);\n                        var_4h = 0;\n                        do {\n                            var_8h = 0xfde9;\n                            var_ch = 0x40b256;\n                            (*_sym.imp.KERNEL32.dll_DuplicateHandle)();\n                            uVar3 = extraout_EDX_00;\n                            while (*var_10h = unaff_EDI,  var_10h + 1 == var_28h) {\n                                while ((0x1f < uVar3 && (0x20 < uVar4))) {\n                                    var_8h = arg_8h & 0xff;\n                                    var_ch = 0x40b27f;\n                                    uVar8 = (*_sym.imp.USER32.dll_EnableWindow)();\n                                    uVar3 = uVar8 >> 0x20;\n                                    iVar2 = uVar8;\n                                    while (-1 < iVar2) {\n                                        do {\n                                        } while (iVar2 != 0);\n                                        *0x440030 = 0x44006c;\n                                        iVar2 = noname_1;\n                                        uVar4 = var_4h;\n                                        unaff_EDI = unaff_EBP;\n                                    }\n                                }\n                            }\n                        } while( true );\n                    }\n                }\n            } while( true );\n        }\n        var_ch = noname_1;\n        arg_8h = puVar1;\n        if (puVar1 >= 0) {\n            *(unaff_EDI + 0x12) = 1;\n            iVar2 = noname_1;\n            goto code_r0x0040b1d6;\n        }\n        uStack24 = 0x40b1c4;\n        puVar1 = fcn.0040d16e(noname_1, noname_1, var_8h, var_4h, unaff_EBP, unaff_retaddr, puVar1, noname_1, noname_2, \n                              noname_3, hWnd, in_stack_00000018);\n        iVar2 = extraout_ECX_00;\n    } while( true );\n}\n",
        "token_count": 1322
    },
    "0040b815": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b8a7)\n// WARNING: Removing unreachable block (ram,0x0040b8b8)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b815(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *extraout_ECX;\n    uint32_t *puVar4;\n    uint32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint64_t uVar5;\n    uint var_e0h;\n    uint in_stack_ffffffe4;\n    uint var_ch;\n    uint var_4h;\n    \n    puVar4 = *0x4401a4;\n    uVar5 = (*_sym.imp.KERNEL32.dll_IsValidLocale)();\n    uVar2 = uVar5;\n    puVar1 = extraout_ECX;\n    if (uVar2 == unaff_EDI) goto code_r0x0040b851;\n    *in_FS_OFFSET = 0x40b828;\n    uVar2 = uVar2 & 0x80;\n    if ((uVar5 & 0x80) != 0) goto code_r0x0040b856;\ncode_r0x0040b84e:\n    unaff_EDI = unaff_EBX + 0x10;\n    puVar1 = puVar4;\ncode_r0x0040b851:\n    puVar4 = puVar1;\n    if (uVar2 != 0xfffffffe) goto code_r0x0040b856;\n    goto code_r0x0040b86e;\ncode_r0x0040b856:\n    puVar1 = puVar4;\n    if ((unaff_EBX & unaff_ESI) != 0) {\n        unaff_ESI = *puVar4;\n        unaff_EDI = unaff_ESI + (uVar5 >> 0x20);\n        if (unaff_EDI != unaff_ESI) {\n            if (puVar4 != 0x2f) {\n                iVar3 = uVar2 - 0x18;\n                if (iVar3 == 0) goto code_r0x0040b885;\ncode_r0x0040b86e:\n                in_stack_ffffffe4 = *in_FS_OFFSET;\n                goto code_r0x0040b87e;\n            }\n            goto code_r0x0040b851;\n        }\n        goto code_r0x0040b84e;\n    }\n    goto code_r0x0040b851;\ncode_r0x0040b87e:\n    iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(unaff_EDI);\ncode_r0x0040b885:\n    do {\n        if (-1 < iVar3) break;\n        iVar3 = fcn.0040a3d8(in_stack_ffffffe4);\n    } while ('\\0' < iVar3);\n    goto code_r0x0040b87e;\n}\n",
        "token_count": 712
    },
    "0040b963": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b963(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, code *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    code *unaff_EBX;\n    int32_t unaff_ESI;\n    ulong uVar4;\n    uint uStack000000d0;\n    uint var_24h;\n    uint var_ch;\n    int32_t iVar5;\n    uint var_4h;\n    \n    (*unaff_EBX)();\n    uStack000000d0 = 3;\n    iVar5 = unaff_ESI * 2;\n    do {\n        uVar4 = (*arg_1ch)(iVar5);\n        uVar2 = extraout_ECX;\n        while( true ) {\n            do {\n                iVar3 = uVar4 >> 0x20;\n            } while (-1 < uVar2);\n            if (*(in_EDX + 0x3c) < uVar4) break;\n            uVar1 = CONCAT31(uVar4 >> 8, 1) + 0x10000;\n            uVar2 = in_EDX;\ncode_r0x0040b9a0:\n            uVar4 = CONCAT44(iVar3, uVar1);\n            uVar2 = uVar2 - iVar3;\n            if (uVar2 != 0) {\n                if (uVar2 == '\\0') {\n                    do {\n                        iVar3 = 0x440088;\n                        for (; (uVar1 & 8) == 0; uVar1 = uVar1 & 0xffffff00 | in_EDX >> 0x18) {\n                            if (in_EDX == 0x42bdf0) goto code_r0x0040b9a0;\n                            uVar2 = in_EDX;\n                        }\n                    } while( true );\n                }\n                goto code_r0x0040b9a0;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 471
    },
    "0040c4bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c4bf(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    char in_AL;\n    char in_CL;\n    int32_t unaff_ESI;\n    uint var_34h;\n    uint var_18h;\n    \n    do {\n    } while (in_AL == in_CL);\n    (*_sym.imp.GDI32.dll_SetBkColor)();\n    *(unaff_ESI + 0x14) = *(unaff_ESI + 0x14) + 1;\n    return;\n}\n",
        "token_count": 130
    },
    "0040c6d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0040c6d6(uint noname_0, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char unaff_BL;\n    bool bVar2;\n    uint noname_1;\n    int32_t in_stack_0000000c;\n    uint var_204h;\n    uint var_44h;\n    uint var_8h;\n    uint noname_0_00;\n    \n    (*_sym.imp.USER32.dll_DestroyMenu)();\n    while (**0x440184 == unaff_BL) {\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    }\n    do {\n    } while (-0x7ff00001 < (arg_ch & 0xff));\n    fcn.00408744(noname_0, arg_ch);\n    noname_1 = 0x3afe;\n    fcn.00404d0b();\n    noname_0_00 = 0x440318;\n    iVar1 = fcn.00405079(0x4400c4);\n    bVar2 = SCARRY4(in_stack_0000000c, iVar1);\n    in_stack_0000000c = in_stack_0000000c + iVar1;\n    if (in_stack_0000000c != 0 && bVar2 == in_stack_0000000c < 0) goto code_r0x0040c780;\n    fcn.004058c2();\n    do {\n        do {\n            iVar1 = fcn.00405b4d(noname_0_00, noname_1, noname_0, arg_ch, in_stack_0000000c);\n        } while (iVar1 != 0);\n        iVar1 = (*_sym.imp.GDI32.dll_SetMapMode)();\ncode_r0x0040c780:\n        in_stack_0000000c = (*_sym.imp.USER32.dll_CreateWindowExW)(iVar1);\n    } while( true );\n}\n",
        "token_count": 441
    },
    "0040c7ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c82e)\n// WARNING: Removing unreachable block (ram,0x0040c832)\n// WARNING: Removing unreachable block (ram,0x0040c83d)\n// WARNING: Removing unreachable block (ram,0x0040c847)\n// WARNING: Removing unreachable block (ram,0x0040c7e5)\n// WARNING: Removing unreachable block (ram,0x0040c7e7)\n// WARNING: Removing unreachable block (ram,0x0040c7f7)\n// WARNING: Removing unreachable block (ram,0x0040c7f9)\n// WARNING: Removing unreachable block (ram,0x0040c80b)\n// WARNING: Removing unreachable block (ram,0x0040c818)\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl\nfcn.0040c7ca(int32_t arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint var_40h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_2h;\n    \n    // WARNING: Do nothing block with infinite loop\n    do {\n    } while( true );\n}\n",
        "token_count": 299
    },
    "0040d525": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable"
        ],
        "decompiled_code": "\nuint32_t fcn.0040d525(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    uint var_168h;\n    uint var_100h;\n    uint var_b0h;\n    uint8_t uStack24;\n    \n    uVar1 = (*unaff_EDI)();\n    *(unaff_ESI + 0x14) = uVar1;\n    *unaff_EDI = *unaff_EDI + 0x747273;\n    fcn.0040c084(0x4ca5, uVar1, 4);\n    fcn.00404d0b(0x2b2c);\n    *0x440364 = (*0x57ee)();\n    iVar2 = (*0x57ee)(*0x440144, 0x440110);\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)((iVar2 >> 1) * 2, unaff_EBP);\n    *0x4401e4 = 0x4400d8;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    return uVar3 & 0xffffff00 | uStack24;\n}\n",
        "token_count": 296
    },
    "0040a235": {
        "rules": [
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a235(int32_t arg_8h)\n\n{\n    uint32_t in_ECX;\n    uint in_EDX;\n    uint32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_44h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_8h;\n    \n    do {\n    } while (*(arg_8h + 4) < 0x101);\n    *(CONCAT44(in_EDX, unaff_EBX) / var_8h) = unaff_ESI;\n    (**((in_ECX | unaff_EDI - CONCAT44(in_EDX, unaff_EBX) % var_8h) + 8))();\n    while ((*(unaff_ESI + 0x20) == 0 && (unaff_EBX != *0x440108))) {\n        if ((unaff_EBX & 8) != 0) {\n            unaff_ESI = unaff_EBX;\n        }\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 256
    },
    "004052fb": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.004052fb(void)\n\n{\n    uint *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_8h;\n    uint uVar2;\n    \n    uVar2 = 0xffffffff;\n    uVar1 = *in_FS_OFFSET;\n    do {\n        fcn.0040d9a8(uVar1, 0x440278, uVar2);\n        *unaff_ESI = 0;\n    } while( true );\n}\n",
        "token_count": 125
    },
    "004081a6": {
        "rules": [
            "allocate memory"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004081a6(uint32_t Msg)\n\n{\n    int32_t extraout_ECX;\n    uint var_28h;\n    \n    do {\n    } while ((Msg & 2) == 0);\n    (*_sym.imp.KERNEL32.dll_VirtualAlloc)();\n    fcn.00403c50(0);\n    (*_sym.imp.USER32.dll_SendMessageW)(*(extraout_ECX + 4), Msg, 2, *0x14);\n    return;\n}\n",
        "token_count": 109
    },
    "00409e4c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00409e4c(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    int32_t extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    code *pcVar6;\n    uint uVar7;\n    uint32_t noname_5;\n    int32_t *piVar8;\n    int32_t *noname_0;\n    bool bVar9;\n    ulong uVar10;\n    int32_t *var_8h_3;\n    uint var_8h_2;\n    uint var_bp_ch;\n    uint32_t uStackY1144;\n    int32_t in_stack_fffffb90;\n    uchar *noname_0_00;\n    uint noname_1;\n    uchar *noname_2;\n    int32_t *noname_4;\n    uint32_t uVar11;\n    uint uVar12;\n    uint in_stack_fffffbc0;\n    uint in_stack_fffffbc4;\n    uint32_t *puStack1080;\n    uint var_10h;\n    uint var_8h;\n    \n    puVar4 = &stack0xfffffffc;\n    noname_5 = *(param_3 + 0x24);\n    uVar12 = 0x6236;\n    fcn.0040aff9();\n    uVar11 = noname_5;\n    do {\n        (*_sym.imp.GDI32.dll_SetWindowExtEx)();\n        puVar1 = puStack1080;\n        puVar2 = var_8h_3[2];\n        iVar5 = extraout_ECX;\n        if (var_8h_3[2] != NULL) break;\ncode_r0x00409eb0:\n        if (puVar1 != NULL) goto code_r0x00409ed5;\n        iVar5 = iVar5 + -1;\n        puVar2 = puVar1;\n        if (iVar5 == 0) break;\n    } while( true );\n    puVar1 = puVar2;\n    if ((iVar5 == 0) && (uVar11 = *puVar2,  iVar5 != 0)) {\n        *(uVar11 + 8) = 0;\n        uVar12 = 0xffffd600;\n        fcn.0040c084();\n        iVar5 = extraout_ECX_00;\ncode_r0x00409ed5:\n        puVar1 = puStack1080;\n        if (uVar11 < 0) {\n            if ((param_3 & uVar11) == 0) {\n                iVar5 = *0x440284;\n                fcn.00404f28();\n                fcn.00405626(iVar5);\n            }\n            piVar8 = &stack0xfffffbb8;\n            uVar11 = 0x44002c;\n            fcn.004044ef(0x44002c, uVar12);\n            fcn.0040bb16();\n            noname_0 = extraout_ECX_01;\n            do {\n                uVar3 = fcn.004067d2(noname_0, puVar4, var_8h_2, uVar11, uVar12, in_stack_fffffbc0, in_stack_fffffbc4);\n                while (uVar3 == 0) {\n                    uVar10 = (*_sym.imp.USER32.dll_DrawTextW)();\n                    pcVar6 = uVar10 >> 0x20;\n                    uVar3 = uVar10;\n                    while ((uVar3 == noname_5 && (piVar8 = *piVar8,  piVar8 == pcVar6))) {\n                        uVar3 = CONCAT31(uVar3 >> 8, 1);\n                        *(noname_5 + 8) = pcVar6;\n                        *(noname_5 + 0x10) = uVar3;\n                        piVar8 = noname_0;\n                        if ((*(var_8h_3 * 2 + 0x4403e0) & 0x14) == 0) {\n                            do {\n                                puVar4 = (*pcVar6)();\n                                uVar10 = fcn.0040d664();\n                                pcVar6 = uVar10 >> 0x20;\n                            } while (uVar10 != -1);\n                            if (in_stack_fffffb90 != -4) {\n                                puVar4 = &stack0xfffffbac;\n                                noname_5 = uVar11;\n                                noname_0 = *0x4402a8;\n                            }\n                            uVar12 = 0x4401d0;\n                            piVar8 = noname_0;\n                            noname_4 = var_8h_3;\n                            do {\n                                noname_0_00 = 0x409fe5;\n                                uVar10 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)();\n                                noname_2 = uVar10 >> 0x20;\n                            } while (uVar10 == 0);\n                            if (uVar11 >> 0x18 == '\\0') {\n                                noname_0_00 = noname_2;\n                                puVar4 = noname_2;\n                            }\n                            noname_1 = 0x40a000;\n                            uVar10 = (*noname_0)();\n                            uVar7 = uVar10 >> 0x20;\n                            if (uStackY1144 <= uVar10) goto code_r0x0040a025;\n                            do {\n                                do {\n                                    bVar9 = *0x10 == 0x470;\n                                    fcn.0040468d(noname_0_00, noname_1, noname_2, piVar8, noname_4, noname_5, uVar12, \n                                                 puVar4);\n                                } while (!bVar9);\n                                (*_sym.imp.ADVAPI32.dll_FreeSid)();\n                                uVar7 = *(*var_8h_3 + 0x14);\ncode_r0x0040a025:\n                                uVar12 = uVar7;\n                            } while( true );\n                        }\n                    }\n                }\n            } while( true );\n        }\n    }\n    goto code_r0x00409eb0;\n}\n",
        "token_count": 1404
    },
    "00402d6b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00402d6b(uint32_t arg_8h, uint noname_1, int32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint arg_8h_00;\n    int32_t in_EDX;\n    int32_t extraout_EDX;\n    uint8_t uVar3;\n    uint32_t *unaff_EBX;\n    uint32_t *arg_14h_00;\n    uint unaff_ESI;\n    uint32_t unaff_EDI;\n    uint32_t **in_FS_OFFSET;\n    char in_stack_000000ec;\n    int32_t iStackY2064;\n    uint arg_ch;\n    int32_t noname_3;\n    uint uVar4;\n    uint var_14h;\n    int32_t in_stack_ffffffec;\n    uint var_ch;\n    int32_t var_8h;\n    \n    do {\n        var_8h = 0x440300;\n    } while (*in_FS_OFFSET != unaff_EBX);\n    do {\n    } while (*(in_ECX + 8) != *(in_ECX + 0xc));\n    do {\n    } while (in_EDX != 0x440300);\n    do {\n        arg_14h_00 = unaff_EBX;\n        uVar3 = arg_14h;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        unaff_EBX = arg_14h;\n        if (0x60 < uVar3) {\n            unaff_EBX = arg_14h & 0xffffff00 | uVar3 - 0x20;\n        }\n        uVar4 = unaff_ESI;\n        fcn.00404d0b();\n        while( true ) {\n            uVar1 = *unaff_EBX;\n            unaff_EDI = unaff_EDI & 0xfffffffe;\n            unaff_EBX = unaff_EBX - unaff_EDI;\n            if (unaff_EBX == NULL) break;\n            if (arg_8h < 0xc000) {\n                *(extraout_EDX + 0x38) = uVar1 & 0xffff;\n                do {\n                    fcn.004079cb(unaff_ESI, 0xffffb310, uVar4, arg_14h_00);\n                } while (in_stack_000000ec != '\\0');\n                uVar4 = 0x4401d0;\n                iVar2 = extraout_ECX;\n                do {\n                    noname_3 = iVar2;\n                    var_8h = *(arg_10h + var_8h * 4);\n                    iVar2 = arg_10h;\n                } while (var_8h != 0);\n                fcn.00404262(0xffff60b5, 0x440360);\n                do {\n                    fcn.0040407d();\n                } while (iStackY2064 != 0);\n                in_stack_ffffffec = in_stack_ffffffec + 0x440240;\n                arg_ch = arg_8h_00;\n                iVar2 = fcn.00408e3f(arg_8h_00);\n                uVar4 = fcn.004091d6(iVar2 + arg_8h, arg_ch, in_stack_ffffffec, noname_3, uVar4);\n                return uVar4;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 824
    },
    "004049da": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004049da(uint *param_1)\n\n{\n    uchar extraout_AH;\n    uint *puVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    uchar extraout_DL;\n    int32_t unaff_EBX;\n    uchar **unaff_EBP;\n    uint *unaff_ESI;\n    uint in_FS_OFFSET;\n    uchar in_ZF;\n    uchar uVar2;\n    uint var_4ch;\n    uint var_14h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    uchar *puStack4;\n    \n    do {\n        var_ch = 0xffffe73a;\n        var_8h = param_1;\n        var_4h = param_1;\n        puStack4 = unaff_EBP;\n        fcn.0040aff9();\n        if (!in_ZF) {\n            *(extraout_ECX + 1) = extraout_AH;\n            break;\n        }\n        param_1 = extraout_ECX;\n        unaff_EBP = &puStack4;\n    } while (in_ZF);\n    *(var_4h + 2) = extraout_DL;\n    puVar1 = var_4h;\n    do {\n        *puVar1 = 0x4401b4;\n        puVar1 = var_4h;\n        do {\n            *puVar1 = 0x4402c4;\n            puVar1 = fcn.004037ce(var_ch, var_8h);\n        } while (unaff_EBX != 0);\n        puVar1 = extraout_ECX_00;\n    } while (*0x44024c == -1);\n    *0x34 = 0;\n    uVar2 = 1;\n    do {\n        fcn.004052fb();\n        var_4h = unaff_ESI;\n    } while (uVar2);\n    do {\n        *in_FS_OFFSET = &var_ch;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "0040520c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040520c(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    uint extraout_EDX;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    ulong uVar5;\n    int32_t iStackY276;\n    int32_t iVar6;\n    \n    iVar6 = 0x44003c;\n    uVar5 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)(param_2, *in_FS_OFFSET, 0x44003c, 0xffffffff);\n    uVar3 = uVar5 >> 0x20;\n    if (uVar5 == 0) {\n        iVar2 = *unaff_ESI;\n        bVar4 = iVar2 != unaff_EDI;\n        unaff_EDI = param_2;\n        if ((bVar4) &&\n           (((*(iVar2 + 0x10) == 0 || (*(iVar2 + 0x28) == 0)) ||\n            (iVar2 = fcn.0040c104(),  unaff_EDI = param_2,  iVar2 != iVar6)))) {\n            uVar3 = fcn.0040c084(0x5eb3);\n            (*_sym.imp.USER32.dll_GetWindowRect)(uVar3);\n            return;\n        }\n        fcn.00404262(0xffffd315);\n        uVar3 = extraout_EDX;\n    }\n    *(unaff_EDI + 0xc) = *(unaff_EDI + 0xc) + 0x220105;\n    pcVar1 = fcn.0040cf57(0xffffabee, uVar3);\n    do {\n    } while (iStackY276 == 0);\n    (*pcVar1)(extraout_ECX + 0x1c);\n    fcn.00402bf1();\n    *(pcVar1 + 4) = 0;\n    return;\n}\n",
        "token_count": 465
    },
    "00405651": {
        "rules": [
            "contain loop",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405651(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint var_b4h;\n    uint noname_2;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = unaff_ESI;\n    (*_sym.imp.KERNEL32.dll_LockResource)();\n    fcn.0040ac9a(arg_8h_00);\n    noname_2 = *(unaff_ESI + 0x58);\n    iVar1 = (*unaff_EBX)(8);\n    do {\n        *(unaff_ESI + 0x10) = unaff_EDI;\n        while( true ) {\n            *(unaff_ESI + 0x14) = unaff_EDI;\n            if (iVar1 == 0) break;\n            iVar1 = fcn.004079cb(&arg_8h, &arg_8h, noname_2, arg_8h_00);\n        }\n    } while( true );\n}\n",
        "token_count": 251
    },
    "004064f5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004064f5(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    uint32_t extraout_ECX;\n    uint32_t extraout_EDX;\n    code *unaff_EDI;\n    uint var_28h;\n    uint var_14h;\n    uint uStack20;\n    uint *puStack16;\n    uint uStack12;\n    \n    do {\n        uStack12 = arg_10h;\n        puStack16 = &fcn.004064f5::var_14h;\n        uStack20 = 0x406502;\n        (*unaff_EDI)();\n        while (extraout_EDX < extraout_ECX) {\n            arg_10h = 0xffffffff;\n        }\n    } while( true );\n}\n",
        "token_count": 172
    },
    "00408e3f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408e3f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    bool in_ZF;\n    uint var_98h;\n    uint var_40h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ZF) {\n        fcn.00404d0b(0xffffcc10);\n        do {\n            var_8h = 2;\n            iVar1 = fcn.00404a5b();\n        } while (iVar1 != -1);\n    }\n    fcn.00408735(var_8h);\n    (*_sym.imp.GDI32.dll_SetWindowExtEx)();\n    do {\n        *(extraout_ECX + 0x98) = extraout_ECX + 0x9c;\n    } while( true );\n}\n",
        "token_count": 234
    },
    "0040a8e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a8e4(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_8h;\n    \n    var_8h = 0x440308;\n    do {\n        *(in_ECX + 0x24) = 1;\n        while (in_ECX = var_8h,  arg_ch == 0) {\n            if (arg_ch != 0) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 135
    },
    "0040c650": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c67a)\n// WARNING: Removing unreachable block (ram,0x0040c6af)\n// WARNING: Removing unreachable block (ram,0x0040c6bf)\n// WARNING: Removing unreachable block (ram,0x0040c6c4)\n// WARNING: Removing unreachable block (ram,0x0040c6cc)\n\nvoid __cdecl fcn.0040c650(uint arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_184h;\n    uint cchText;\n    uint var_8h;\n    uint var_4h;\n    \n    do {\n        do {\n        } while (*in_FS_OFFSET == 0);\n    } while( true );\n}\n",
        "token_count": 165
    },
    "0040c950": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x0040c9db)\n// WARNING: Removing unreachable block (ram,0x0040c9e7)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c950(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t noname_9;\n    uint32_t extraout_ECX;\n    uint extraout_EDX;\n    int32_t unaff_EBX;\n    uint unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    char in_SF;\n    char in_OF;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint var_cch;\n    int32_t var_c4h;\n    uint var_c0h;\n    uint var_60h;\n    uint var_56h;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    int32_t iStack64;\n    uchar uStack60;\n    uint var_37h;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint *var_1ch;\n    uint var_18h;\n    uint arg_10h;\n    uint noname_3;\n    uint noname_4;\n    int32_t in_stack_fffffff4;\n    int32_t noname_5;\n    uint var_4h;\n    \n    noname_9 = in_EAX;\n    if (in_OF != in_SF) {\n        noname_9 = unaff_EDI + 0x70;\n        unaff_EBX = in_EAX;\n        unaff_ESI = unaff_EDI;\n    }\n    noname_5 = unaff_ESI;\n    if (var_1ch == unaff_ESI) goto code_r0x0040c97e;\n    do {\n        in_stack_0000000c = 0;\n        while (noname_9 == unaff_EBX) {\n            noname_9 = *(unaff_ESI + 0x30);\n            in_stack_fffffff4 = noname_5;\ncode_r0x0040c97e:\n            noname_5 = in_stack_fffffff4;\n            if (arg_ch < unaff_EBX) {\n                noname_4 = 0x40;\n                noname_3 = 0x20;\n                arg_10h = 0x440298;\n                var_18h = 0x40c999;\n                fcn.00408512();\n                var_18h = 0x44008c;\n                var_1ch = 0x40c9aa;\n                fcn.00407178();\n                var_1ch = unaff_EBX + 0x18;\n                uStack36 = 0x40c9b6;\n                (*_sym.imp.USER32.dll_GetMenu)();\n                uStack36 = 0x40c9bd;\n                fcn.00407fc6(var_1ch, var_18h, arg_10h);\n                uStack36 = 0x40c9c4;\n                fcn.00404b2a();\n                uStack36 = 0x40c9cd;\n                var_c0h._0_2_ = fcn.004050b7(var_1ch);\n                *(unaff_ESI + -1 + arg_ch) = 0;\n                *(var_c4h + 0x48) = extraout_EDX;\n                do {\n                    var_18h = 0;\n                    uStack36 = 0x40ca09;\n                    fcn.0040d16e(var_1ch, 0, arg_10h, noname_3, noname_4, noname_5, 0xffffff00, unaff_EBP, unaff_retaddr\n                                 , noname_9, arg_ch, in_stack_0000000c);\n                    var_1ch = 0xffffff00;\n                } while (unaff_ESI != -0x100);\n                var_18h = 0xffffff00;\n                var_1ch = 0x40ca20;\n                uStack36 = (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n                _uStack60 = _uStack60 & 0xffff00ff;\n                var_cch = 0x440054;\n                do {\n                    puStack48 = &fcn.0040c950::var_cch;\n                    uStack40 = *0xffffff08;\n                    uStack44 = 0;\n                    uStack52 = var_56h;\n                    stack0xffffffc8 = 0x40ca45;\n                    var_1ch = puStack48;\n                    fcn.0040d581();\n                    stack0xffffffc8 = 0;\n                    iStack64 = &fcn.0040c950::var_37h + 1;\n                    uStack68 = 0x1e;\n                    uStack72 = var_60h;\n                    uStack76 = 0x40ca5e;\n                    _uStack60 = extraout_ECX;\n                    fcn.0040c5cc();\n                    uStack76 = 0xfffff7c9;\n                    uStack80 = 0x40ca6e;\n                    fcn.0040cf57();\n                    uStack80 = *0xffffff10;\n                    uStack84 = 0x40ca77;\n                    uStack36 = (*_sym.imp.KERNEL32.dll_lstrcmpW)();\n                } while( true );\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1288
    },
    "0040d9a8": {
        "rules": [
            "modify service"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d9a8(uint param_1)\n\n{\n    char *pcVar1;\n    \n    fcn.004060a1(0x3c20, param_1);\n    (*_sym.imp.ADVAPI32.dll_ChangeServiceConfigW)(*0x44039c);\n    do {\n        pcVar1 = *(*0x4403c8 + 0x10) + 0x43;\n        *pcVar1 = *pcVar1 + -1;\n        *0x4403c8 = *(*0x4400c8 + 0x10);\n    } while( true );\n}\n",
        "token_count": 138
    },
    "0040d581": {
        "rules": [
            "query environment variable"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0040d581(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *unaff_ESI;\n    uint var_4h;\n    uint lpBuffer;\n    uint var_10h_2;\n    uint var_4h_2;\n    \n    fcn.00404d0b(0x2b2c);\n    *0x440364 = (*unaff_ESI)();\n    iVar1 = (*unaff_ESI)(*0x440144, 0x440110);\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)((iVar1 >> 1) * 2, lpBuffer);\n    *0x4401e4 = 0x4400d8;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    return uVar2 & 0xffffff00 | var_4h_2;\n}\n",
        "token_count": 221
    }
}