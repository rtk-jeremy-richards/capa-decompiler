{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 24576 named .text\n    iVar3 = *0x4466d0;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar2)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar4, 0x4426c0, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar1)(uVar4, uVar6);\n                (*pcVar2)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x4466c8;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 852
    },
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    code *pcVar9;\n    code *pcVar10;\n    uint uVar11;\n    uint uVar12;\n    char *pcVar13;\n    uint32_t *puStack464;\n    char *pcStack460;\n    uint uStack456;\n    int32_t iStack452;\n    uint uStack448;\n    uint uStack444;\n    char *pcStack440;\n    uint uStack436;\n    uint32_t *puStack432;\n    uchar *puStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uchar auStack364 [364];\n    \n    uStack408 = 0x4030dd;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack408 = 0x8001;\n    uStack412 = 0x4030e8;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    uStack412 = 0;\n    uStack416 = 0x4030ef;\n    *0x446778 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack416 = 8;\n    uStack420 = 0x4030fb;\n    *0x4466c4 = fcn.00405e90();\n    uStack420 = 0;\n    puStack428 = &stack0xfffffe94;\n    uStack424 = 0x160;\n    puStack432 = NULL;\n    uStack436 = 0x429480;\n    pcStack440 = 0x403117;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    pcStack440 = \"NSIS Error\";\n    uStack444 = 0x4426c0;\n    uStack448 = 0x403126;\n    fcn.00405b65();\n    uStack448 = 0x40312c;\n    uStack448 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    iStack452 = 0x46f000;\n    uStack456 = 0x403138;\n    fcn.00405b65();\n    uStack456 = 0;\n    pcStack460 = 0x40313f;\n    *0x4466c0 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    puStack464 = 0x46f000;\n    if (*0x46f000 == '\\\"') {\n        uStack436 = CONCAT31(uStack436._1_3_, 0x22);\n        puStack464 = 0x46f001;\n    }\n    pcStack460 = uStack436;\n    puVar3 = fcn.00405620();\n    puVar4 = (*_sym.imp.USER32.dll_CharNextA)(puVar3);\n    pcStack440 = puVar4;\n    while (uVar2 = uStack448,  cVar1 = *puVar4,  cVar1 != '\\0') {\n        while (cVar1 == ' ') {\n            puVar4 = puVar4 + 1;\n            cVar1 = *puVar4;\n        }\n        uStack448 = CONCAT31(uStack448._1_3_, 0x20);\n        if (*puVar4 == '\\\"') {\n            puVar4 = puVar4 + 1;\n            uStack448 = uVar2 & 0xffffff00 | 0x22;\n        }\n        puVar5 = puVar4;\n        if (*puVar4 == '/') {\n            puVar5 = puVar4 + 1;\n            if ((*puVar5 == 'S') && ((*(puVar4 + 2) == ' ' || (*(puVar4 + 2) == '\\0')))) {\n                *0x446760 = 1;\n            }\n            if ((*puVar5 == (((str.NCRC[3] << 8 | str.NCRC[2]) << 8 | str.NCRC[1]) << 8 | str.NCRC[0])) &&\n               ((*(puVar4 + 5) == ' ' || (*(puVar4 + 5) == '\\0')))) {\n                uStack436 = uStack436 | 4;\n            }\n            if (*(puVar4 + -1) == (((str.__D[3] << 8 | str.__D[2]) << 8 | str.__D[1]) << 8 | str.__D[0])) {\n                *(puVar4 + -1) = '\\0';\n                fcn.00405b65(0x471000, puVar4 + 3);\n                break;\n            }\n        }\n        puVar4 = fcn.00405620();\n        puVar3 = puVar5;\n        if (*puVar4 == '\\\"') {\n            puVar4 = puVar4 + 1;\n        }\n    }\n    pcVar8 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    pcVar13 = 0x479000;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x2000, 0x479000, puVar3);\n    iVar6 = fcn.00403082();\n    if (iVar6 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x479000, 0x1ffb);\n        pcVar13 = \"\\\\Temp\";\n        sub.KERNEL32.dll_lstrcatA(0x479000, \"\\\\Temp\");\n        iVar6 = fcn.00403082();\n        if (iVar6 == 0) {\n            (*pcVar8)(0x1ffc, 0x479000);\n            sub.KERNEL32.dll_lstrcatA(0x479000, 0x409164);\n            pcVar8 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableA;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(\"TEMP\", 0x479000);\n            (*pcVar8)(0x409158, 0x479000);\n            iVar6 = fcn.00403082();\n            if (iVar6 == 0) goto code_r0x00403370;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x477000);\n    iStack452 = 0x4032d6;\n    puStack432 = fcn.00402c29(uStack412);\n    if (puStack432 == NULL) {\n        if (*0x4466dc != 0) {\n            iStack452 = 0;\n            uStack456 = 0x46f000;\n            pcStack460 = 0x4032f1;\n            puVar4 = fcn.00405620();\n            if (0x46efff < puVar4) {\n                do {\n                    if (*puVar4 == (((*0x409153 << 8 | *0x409152) << 8 | *0x409151) << 8 | *0x409150)) break;\n                    puVar4 = puVar4 + -1;\n                } while (0x46efff < puVar4);\n            }\n            pcStack440 = \"Error launching installer\";\n            if (puVar4 < 0x46f000) goto code_r0x0040339b;\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n            puStack464 = 0x403342;\n            iVar6 = fcn.004056e3();\n            if (iVar6 == 0) goto code_r0x00403370;\n            puStack464 = puVar4;\n            fcn.00405b65(0x471000);\n            fcn.00405b65(0x473000, puVar4);\n            pcStack460 = NULL;\n            pcVar13 = puVar4;\n        }\n        *0x44676c = -1;\n        iStack452 = fcn.004035ee();\n    }\ncode_r0x00403370:\n    while( true ) {\n        fcn.00403514();\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (pcStack460 == NULL) break;\n        fcn.00405379(pcStack460, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x0040339b:\n        pcStack460 = \"~nsu.tmp\";\n        puStack464 = 0x479000;\n        sub.KERNEL32.dll_lstrcatA();\n        pcVar13 = 0x479000;\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x479000, 0x475000);\n        if (iVar6 != 0) {\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x479000, 0);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x479000);\n            if (*0x471000 == '\\0') {\n                puStack464 = 0x475000;\n                pcStack460 = 0x471000;\n                fcn.00405b65();\n            }\n            puStack464 = puStack432;\n            fcn.00405b65(0x447000);\n            iVar6 = 0x1a;\n            *0x449000 = *0x409141 << 8 | *0x409140;\n            do {\n                fcn.00405b87(0x427480, *(*0x4466d0 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x427480);\n                if ((iStack452 != 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_CopyFileA)(0x47d000, 0x427480, 1),  iVar7 != 0)\n                   ) {\n                    fcn.00405a19(0x427480, 0);\n                    fcn.00405b87(0x427480, *(*0x4466d0 + 0x124));\n                    iVar7 = fcn.00405318(0x427480);\n                    if (iVar7 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                        iStack452 = 0;\n                    }\n                }\n                *0x449000 = *0x449000 + 1;\n                *0x449000 = *0x449000 & 0xff00 | *0x449000;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            pcVar13 = NULL;\n            fcn.00405a19(0x479000);\n        }\n    }\n    if (*0x446754 != 0) {\n        uVar12 = 3;\n        pcVar8 = fcn.00405e90(3);\n        pcVar9 = fcn.00405e90(4);\n        pcVar10 = fcn.00405e90(5);\n        if (((pcVar8 != NULL) && (pcVar9 != NULL)) && (pcVar10 != NULL)) {\n            uVar11 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffe34);\n            iVar6 = (*pcVar8)(uVar11);\n            if (iVar6 != 0) {\n                (*pcVar9)(0, \"SeShutdownPrivilege\", &stack0xfffffe40);\n                puStack464 = 0x1;\n                iStack452 = 2;\n                (*pcVar10)(pcVar13, 0, &stack0xfffffe30, 0, 0, 0);\n            }\n        }\n        iVar6 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n        if (iVar6 == 0) {\n            fcn.0040140b(uVar12, 9);\n        }\n    }\n    if (*0x44676c != -1) {\n        iStack452 = *0x44676c;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iStack452);\n    if (*0x409018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409018);\n        *0x409018 = -1;\n    }\n    fcn.00403559();\n    fcn.00405425(0x47b000, 7);\n    return;\n}\n",
        "token_count": 2751
    },
    "00405f90": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00405f90(uint *param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    uint var_90h;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    int32_t var_78h;\n    uint32_t var_74h;\n    uint8_t *var_70h;\n    int32_t var_6ch;\n    uint8_t *var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint16_t *var_58h;\n    uint16_t *var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t dwBytes;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t hMem;\n    \n    puVar12 = param_1;\n    puVar13 = &var_88h;\n    for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    uVar9 = var_44h;\n    puVar11 = var_54h;\n    if (var_30h == -1) {\n        return 1;\n    }\ncode_r0x00405fc3:\n    do {\n        uVar5 = var_20h;\n        uVar7 = var_2ch;\n        puVar4 = var_68h;\n        puVar3 = var_70h;\n        if (0x1c < var_88h) {\n            return 0xffffffff;\n        }\n    // switch table (29 cases) at 0x4069e2\n        switch(*(var_88h * 4 + 0x4069e2)) {\n        case 0x405fd9:\n            if (var_6ch == 0) goto code_r0x004069c5;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            uVar1 = *puVar3;\n            if (0xe1 < uVar1) {\n                return 0xffffffff;\n            }\n            var_3ch = (uVar1 % 0x2d) % 9;\n            var_1ch = (1 << uVar1 / 0x2d) - 1;\n            var_18h = (1 << (uVar1 % 0x2d) / 9) - 1;\n            iVar10 = (0x300 << var_3ch + uVar1 / 0x2d) + 0x736;\n            iVar8 = iVar10 * 2;\n            if (iVar8 != var_78h) {\n                if (hMem != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n                }\n                hMem = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar8);\n                if (hMem == 0) {\n                    return 0xffffffff;\n                }\n                var_78h = iVar8;\n            }\n            while (iVar10 != 0) {\n                iVar10 = iVar10 + -1;\n                *(hMem + iVar10 * 2) = 0x400;\n            }\n            dwBytes = 0;\n            for (var_48h = 0; var_48h < 4; var_48h = var_48h + 1) {\ncode_r0x0040607e:\n                if (var_6ch == 0) {\n                    var_88h = 1;\n                    goto code_r0x004069c5;\n                }\n                var_6ch = var_6ch + -1;\n                dwBytes = dwBytes | *var_70h << (var_48h << 3 & 0x1f);\n                var_70h = var_70h + 1;\n            }\n            if (dwBytes != var_74h) {\n                var_74h = dwBytes;\n                if (var_8h != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(var_8h);\n                }\n                var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n                if (var_8h == 0) {\n                    return 0xffffffff;\n                }\n            }\n            var_48h = 5;\n            *(var_8h + -1 + var_74h) = 0;\n            while (uVar7 = var_48h,  var_48h = var_48h - 1,  uVar7 != 0) {\ncode_r0x004060ee:\n                if (var_6ch == 0) {\n                    var_88h = 3;\n                    goto code_r0x004069c5;\n                }\n                var_6ch = var_6ch + -1;\n                uVar1 = *var_70h;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n            }\n        case 0x406119:\n            var_84h = 6;\n            var_4ch = var_60h & var_1ch;\n            puVar11 = hMem + (var_38h * 0x10 + (var_60h & var_1ch)) * 2;\n            break;\n        case 0x40607e:\n            goto code_r0x0040607e;\n        case 0x4060ee:\n            goto code_r0x004060ee;\n        case 0x40613f:\n            if (dwBytes != 0) {\n                var_34h = 1;\n                var_84h = 7;\n                puVar11 = hMem + 0x180 + var_38h * 2;\n                break;\n            }\n            var_58h = ((var_5ch >> (8 - var_3ch & 0x1f)) + ((var_60h & var_18h) << (var_3ch & 0x1f))) * 0x600 + 0xe6c +\n                      hMem;\n            if (var_38h < 4) {\n                var_38h = 0;\n            }\n            else if (var_38h < 10) {\n                var_38h = var_38h + -3;\n            }\n            else {\n                var_38h = var_38h + -6;\n            }\n            if (var_34h != 0) {\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                uVar9 = 1;\n                var_5ch._1_1_ = *(uVar7 + var_8h);\n                do {\n                    uVar1 = var_5ch._1_1_;\n                    var_5ch._1_1_ = var_5ch._1_1_ << 1;\n                    var_48h = uVar1 >> 7;\n                    puVar11 = var_58h + ((uVar1 >> 7) + 1) * 0x100 + uVar9;\n                    uVar2 = *puVar11;\n                    var_54h = puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    bVar14 = uVar7 <= var_ch;\n                    if (bVar14) {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        dwBytes = 1;\n                        uVar9 = uVar9 * 2 + 1;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                    }\n                    else {\n                        dwBytes = 0;\n                        var_10h = uVar7;\n                        uVar9 = uVar9 * 2;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    dwBytes = bVar14;\n                    var_44h = uVar9;\n                    if (var_10h < 0x1000000) {\ncode_r0x004061d8:\n                        if (var_6ch == 0) {\n                            var_88h = 0xd;\n                            goto code_r0x004069c5;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                    if (var_48h != dwBytes) goto code_r0x004062b6;\n                } while (uVar9 < 0x100);\n                goto code_r0x0040631a;\n            }\n            uVar9 = 1;\n            do {\n                puVar11 = var_58h + uVar9;\n                uVar2 = *puVar11;\n                var_54h = puVar11;\n                uVar7 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar7) {\n                    var_10h = uVar7;\n                    uVar9 = uVar9 * 2;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar7;\n                    var_ch = var_ch - uVar7;\n                    uVar9 = uVar9 * 2 + 1;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                }\n                var_44h = uVar9;\n                if (var_10h < 0x1000000) {\ncode_r0x00406355:\n                    if (var_6ch == 0) {\n                        var_88h = 0xf;\n                        goto code_r0x004069c5;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            } while (uVar9 < 0x100);\n            goto code_r0x0040631e;\n        case 0x4061d8:\n            goto code_r0x004061d8;\n        case 0x406291:\n            goto code_r0x00406291;\n        case 0x406324:\n            goto code_r0x00406324;\n        case 0x406355:\n            goto code_r0x00406355;\n        case 0x4063de:\n            if (dwBytes != 1) {\n                var_80h = 0x16;\n                var_20h = var_24h;\n                var_24h = var_28h;\n                var_28h = var_2ch;\n                var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 10;\n                var_58h = hMem + 0x664;\n                goto code_r0x00406436;\n            }\n            var_84h = 8;\n            puVar11 = hMem + 0x198 + var_38h * 2;\n            break;\n        case 0x406448:\n            if (dwBytes == 0) {\n                var_84h = 9;\n                puVar11 = hMem + ((var_38h + 0xf) * 0x10 + var_4ch) * 2;\n            }\n            else {\n                var_84h = 10;\n                puVar11 = hMem + 0x1b0 + var_38h * 2;\n            }\n            break;\n        case 0x40648b:\n            if (dwBytes != 0) goto code_r0x00406546;\n            if (var_60h == 0) {\n                return 0xffffffff;\n            }\n            var_38h = (6 < var_38h) * 2 + 9;\n        case 0x4064af:\n            if (var_64h == 0) {\n                var_88h = 0x1b;\n                goto code_r0x004069c5;\n            }\n            uVar7 = var_14h - var_2ch;\n            if (var_74h <= uVar7) {\n                uVar7 = uVar7 + var_74h;\n            }\n            var_5ch._0_1_ = *(uVar7 + var_8h);\n            *(var_14h + var_8h) = var_5ch;\n            var_60h = var_60h + 1;\n            var_68h = var_68h + 1;\n            var_64h = var_64h + -1;\n            *puVar4 = var_5ch;\n            goto code_r0x004064ea;\n        case 0x4064fc:\n            if (dwBytes == 0) goto code_r0x0040653d;\n            var_84h = 0xb;\n            puVar11 = hMem + 0x1c8 + var_38h * 2;\n            break;\n        case 0x406523:\n            uVar6 = var_24h;\n            if (dwBytes != 0) {\n                var_20h = var_24h;\n                uVar6 = uVar5;\n            }\n            var_24h = var_28h;\n            var_28h = uVar6;\ncode_r0x0040653d:\n            var_2ch = var_28h;\n            var_28h = uVar7;\ncode_r0x00406546:\n            var_80h = 0x15;\n            var_58h = hMem + 0xa68;\n        case 0x406436:\ncode_r0x00406436:\n            var_84h = 0x12;\n            puVar11 = var_58h;\n            break;\n        case 0x40655d:\n            var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 0xb;\n            goto code_r0x0040670e;\n        case 0x406574:\n            iVar8 = var_30h;\n            if (3 < var_30h) {\n                iVar8 = 3;\n            }\n            dwBytes = 6;\n            var_7ch = 0x19;\n            var_58h = iVar8 * 0x80 + 0x360 + hMem;\n            goto code_r0x00406870;\n        case 0x4065a2:\n            var_2ch = uVar9;\n            if (3 < uVar9) {\n                iVar8 = uVar9 >> 1;\n                dwBytes = iVar8 - 1;\n                uVar7 = (uVar9 & 1 | 2) << (dwBytes & 0x1f);\n                var_2ch = uVar7;\n                if (0xd < uVar9) {\n                    uVar9 = 0;\n                    var_48h = iVar8 - 5;\n                    goto code_r0x0040660e;\n                }\n                var_58h = hMem + 0x55e + (uVar7 - uVar9) * 2;\ncode_r0x00406652:\n                uVar9 = 0;\n                var_50h = 1;\n                var_44h = 0;\n                for (var_48h = 0; var_48h < dwBytes; var_48h = var_48h + 1) {\n                    puVar11 = var_58h + var_50h;\n                    var_54h = puVar11;\n                    uVar2 = *puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    if (var_ch < uVar7) {\n                        var_10h = uVar7;\n                        var_50h = var_50h << 1;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    else {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        uVar9 = var_44h | 1 << (var_48h & 0x1f);\n                        var_44h = uVar9;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                        var_50h = var_50h * 2 + 1;\n                    }\n                    if (var_10h < 0x1000000) {\ncode_r0x00406666:\n                        if (var_6ch == 0) {\n                            var_88h = 0x10;\n                            goto code_r0x004069c5;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                }\n                var_2ch = var_2ch + uVar9;\n            }\n            var_2ch = var_2ch + 1;\ncode_r0x0040670e:\n            if (var_2ch == 0) {\n                var_30h = 0xffffffff;\n                goto code_r0x004069c5;\n            }\n            if (var_60h < var_2ch) {\n                return 0xffffffff;\n            }\n            var_30h = var_30h + 2;\n            var_60h = var_60h + var_30h;\ncode_r0x0040672c:\n            do {\n                puVar3 = var_68h;\n                if (var_64h == 0) {\n                    var_88h = 0x1c;\n                    goto code_r0x004069c5;\n                }\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                var_5ch._0_1_ = *(uVar7 + var_8h);\n                *(var_14h + var_8h) = var_5ch;\n                var_68h = var_68h + 1;\n                var_64h = var_64h + -1;\n                var_30h = var_30h + -1;\n                *puVar3 = var_5ch;\n                var_14h = (var_14h + 1) % var_74h;\n            } while (0 < var_30h);\n            goto code_r0x004064ed;\n        case 0x4065e3:\n            while (var_6ch != 0) {\n                var_10h = var_10h << 8;\n                uVar1 = *var_70h;\n                var_6ch = var_6ch + -1;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n                uVar7 = var_2ch;\n                do {\n                    var_48h = var_48h - 1;\ncode_r0x0040660e:\n                    if (var_48h < 1) {\n                        dwBytes = 4;\n                        var_2ch = uVar7 + uVar9 * 0x10;\n                        var_58h = hMem + 0x644;\n                        goto code_r0x00406652;\n                    }\n                    uVar9 = uVar9 * 2;\n                    var_10h = var_10h >> 1;\n                    var_44h = uVar9;\n                    if (var_10h <= var_ch) {\n                        var_ch = var_ch - var_10h;\n                        uVar9 = uVar9 | 1;\n                        var_44h = uVar9;\n                    }\n                } while (0xffffff < var_10h);\n            }\n            var_88h = 0xc;\n            goto code_r0x004069c5;\n        case 0x406666:\n            goto code_r0x00406666;\n        case 0x40672c:\n            goto code_r0x0040672c;\n        case 0x406775:\n            if (dwBytes == 0) {\n                var_30h = 0;\n                iVar8 = var_4ch * 8 + 2;\ncode_r0x0040678c:\n                var_58h = var_58h + iVar8;\n                dwBytes = 3;\n                goto code_r0x00406869;\n            }\n            var_84h = 0x13;\n            puVar11 = var_58h + 1;\n            break;\n        case 0x4067ae:\n            goto code_r0x004067ae;\n        case 0x4067fc:\n            goto code_r0x004067fc;\n        case 0x406832:\n            if (dwBytes == 0) {\n                var_30h = 8;\n                iVar8 = var_4ch * 8 + 0x82;\n                goto code_r0x0040678c;\n            }\n            var_58h = var_58h + 0x102;\n            var_30h = 0x10;\n            dwBytes = 8;\ncode_r0x00406869:\n            var_7ch = 0x14;\n        case 0x406870:\ncode_r0x00406870:\n            var_50h = 1;\n            for (var_48h = dwBytes; 0 < var_48h; var_48h = var_48h - 1) {\n                puVar11 = var_58h + var_50h;\n                var_54h = puVar11;\n                uVar2 = *puVar11;\n                uVar9 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar9) {\n                    var_10h = uVar9;\n                    var_50h = var_50h << 1;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar9;\n                    var_ch = var_ch - uVar9;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                    var_50h = var_50h * 2 + 1;\n                }\n                if (var_10h < 0x1000000) {\ncode_r0x0040687f:\n                    if (var_6ch == 0) {\n                        var_88h = 0x18;\n                        goto code_r0x004069c5;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            }\n            uVar9 = var_50h - (1 << (dwBytes & 0x1f));\n            var_44h = uVar9;\n            var_88h = var_7ch;\n            goto code_r0x00406827;\n        case 0x40687f:\n            goto code_r0x0040687f;\n        case 0x406923:\n            var_30h = var_30h + uVar9;\n            var_88h = var_80h;\n            goto code_r0x00406827;\n        }\n        var_54h = puVar11;\ncode_r0x004067ae:\n        uVar2 = *puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        bVar14 = uVar7 <= var_ch;\n        if (bVar14) {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            dwBytes = 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        else {\n            var_10h = uVar7;\n            dwBytes = 0;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        dwBytes = bVar14;\n        var_88h = var_84h;\n        if (var_10h < 0x1000000) {\ncode_r0x004067fc:\n            if (var_6ch == 0) {\n                var_88h = 5;\n                goto code_r0x004069c5;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n            var_88h = var_84h;\n        }\ncode_r0x00406827:\n    } while( true );\ncode_r0x004062b6:\n    if (uVar9 < 0x100) {\n        puVar11 = var_58h + uVar9;\n        uVar2 = *puVar11;\n        var_54h = puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        if (var_ch < uVar7) {\n            var_10h = uVar7;\n            uVar9 = uVar9 * 2;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        else {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            uVar9 = uVar9 * 2 + 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        var_44h = uVar9;\n        if (var_10h < 0x1000000) {\ncode_r0x00406291:\n            if (var_6ch == 0) {\n                var_88h = 0xe;\n                goto code_r0x004069c5;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n        }\n        goto code_r0x004062b6;\n    }\ncode_r0x0040631a:\n    var_34h = 0;\ncode_r0x0040631e:\n    var_5ch._0_1_ = var_44h;\ncode_r0x00406324:\n    if (var_64h == 0) {\n        var_88h = 0x1a;\ncode_r0x004069c5:\n        puVar12 = &var_88h;\n        for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *param_1 = *puVar12;\n            puVar12 = puVar12 + 1;\n            param_1 = param_1 + 1;\n        }\n        return 0;\n    }\n    var_60h = var_60h + 1;\n    var_68h = var_68h + 1;\n    var_64h = var_64h + -1;\n    *puVar4 = var_5ch;\n    *(var_14h + var_8h) = var_5ch;\ncode_r0x004064ea:\n    var_14h = (var_14h + 1) % var_74h;\ncode_r0x004064ed:\n    var_88h = 2;\n    goto code_r0x00405fc3;\n}\n",
        "token_count": 6592
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    code *pcVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    int32_t iVar10;\n    uint uVar11;\n    int32_t *piVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint uVar15;\n    int32_t **ppiVar16;\n    uint *puVar17;\n    int32_t **ppiVar18;\n    bool bVar19;\n    uint in_stack_fffffdf0;\n    uint in_stack_fffffdf4;\n    uint uVar20;\n    uint uVar21;\n    int32_t **ppiVar22;\n    uint lpFindFileData;\n    uint *puStack420;\n    uint *puStack416;\n    uint uStack408;\n    int32_t *piStack404;\n    int32_t **ppiStack400;\n    uint var_178h;\n    int32_t lpFileOp;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_4ah;\n    uint lpValueName;\n    uint lpRect;\n    int32_t var_38h;\n    int32_t lpWideCharStr;\n    int32_t *lpMultiByteStr;\n    int32_t **nNumberOfBytesToWrite;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *dwFileAttributes;\n    int32_t *var_1ch;\n    int32_t *lpLastWriteTime;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint8_t var_9h;\n    int32_t *lpNumberOfBytesWritten;\n    int32_t *var_4h;\n    \n    ppiVar9 = *0x41339c;\n    pcVar6 = _sym.imp.USER32.dll_ShowWindow;\n    lpWideCharStr = *0x4466c8;\n    uVar15 = 0;\n    ppiVar16 = hWndChildAfter;\n    ppiVar18 = &fcn.00401434::var_28h;\n    for (iVar14 = 7; iVar14 != 0; iVar14 = iVar14 + -1) {\n        *ppiVar18 = *ppiVar16;\n        ppiVar16 = ppiVar16 + 1;\n        ppiVar18 = ppiVar18 + 1;\n    }\n    iVar14 = var_24h * 0x2000;\n    var_4h = NULL;\n    ppiVar16 = iVar14 + 0x447000;\n    ppiVar18 = dwFileAttributes * 0x2000 + 0x447000;\n    *0x413398 = &fcn.00401434::var_24h;\n    if (0x41 < var_28h - 2U) goto code_r0x00402892;\n    // switch table (66 cases) at 0x4028a4\n    switch(*((var_28h - 2U) * 4 + 0x4028a4)) {\n    case 0x401490:\ncode_r0x00401492:\n        fcn.00404e50(in_stack_fffffdf0, in_stack_fffffdf4);\n        return 0x7fffffff;\n    case 0x40149c:\n        *0x44268c = *0x44268c + 1;\n        if (*0x4466c8 == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014b7:\n        iVar14 = fcn.0040136d(var_24h);\n        piVar12 = fcn.00401389(iVar14 + -1, 0);\n        return piVar12;\n    case 0x4014ca:\n        fcn.00404e50(var_24h, 0);\n        break;\n    case 0x4014d6:\n        iVar14 = fcn.004029e0(0);\n        if (iVar14 < 2) {\n            iVar14 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar14);\n        break;\n    case 0x4014f0:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(*0x4466c8);\n        break;\n    case 0x4014fe:\n        iVar14 = var_24h * 4;\n        if (var_1ch == NULL) {\n            *(iVar14 + 0x446780) = *(iVar14 + 0x446740);\n            uVar15 = fcn.004029e0(1);\n            *(var_24h * 4 + 0x446740) = uVar15;\n        }\n        else {\n            *(iVar14 + 0x446740) = *(iVar14 + 0x446780);\n        }\n        break;\n    case 0x401539:\n        puVar1 = var_1ch * 4 + 0x446740;\n        uVar13 = *puVar1;\n        piVar12 = (&fcn.00401434::var_24h)[uVar13 == 0];\n        *puVar1 = uVar13 & lpLastWriteTime;\n        return piVar12;\n    case 0x40155a:\n        goto code_r0x0040283a;\n    case 0x401567:\n        if (*0x442690 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x442690, dwFileAttributes);\n        }\n        if (*0x4426a4 != 0) {\n            (*pcVar6)(*0x4426a4, var_24h);\n        }\n        break;\n    case 0x401595:\n        uVar15 = fcn.004029fd(0xfffffff0);\n        iVar14 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar15, dwFileAttributes);\n        goto code_r0x004015a6;\n    case 0x4015b3:\n        uVar15 = fcn.004029fd(0xfffffff0);\n        puVar3 = fcn.0040568e(uVar15);\n        if (puVar3 != NULL) {\n            do {\n                puVar3 = fcn.00405620(puVar3, 0x5c);\n                uVar2 = *puVar3;\n                *puVar3 = 0;\n                hWndChildAfter = hWndChildAfter & 0xffffff | uVar2 << 0x18;\n                iVar14 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(uVar15, 0);\n                if ((iVar14 == 0) &&\n                   ((iVar14 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar14 != 0xb7 ||\n                    (uVar13 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar15),  (uVar13 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *puVar3 = hWndChildAfter._3_1_;\n                puVar3 = puVar3 + 1;\n            } while (hWndChildAfter._3_1_ != 0);\n        }\n        if (dwFileAttributes == NULL) goto code_r0x0040217c;\n        fcn.00401423(0xffffffe6);\n        fcn.00405b65(0x473000, uVar15);\n        iVar14 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar15);\n        if (iVar14 == 0) {\n            var_4h = var_4h + 1;\n        }\n        break;\n    case 4199999:\n        uVar15 = fcn.004029fd(0);\n        iVar14 = fcn.00405e69(uVar15);\n        lpLastWriteTime = dwFileAttributes;\n        goto joined_r0x004019df;\n    case 0x401650:\n        uVar15 = fcn.004029fd(0xffffffd0);\n        uVar11 = fcn.004029fd(0xffffffdf);\n        fcn.004029fd(0x13);\n        iVar14 = (*_sym.imp.KERNEL32.dll_MoveFileA)(uVar15, uVar11);\n        if (iVar14 == 0) {\n            if ((var_1ch == NULL) || (iVar14 = fcn.00405e69(uVar15),  iVar14 == 0)) goto code_r0x00402663;\n            fcn.00405a19(uVar15, uVar11);\n        }\n        goto code_r0x0040217c;\n    case 0x4016a1:\n        ppiVar9 = fcn.004029fd(0);\n        iVar14 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(ppiVar9, 0x2000, ppiVar18, &fcn.00401434::hWndChildAfter);\n        if (iVar14 == 0) {\ncode_r0x004016e1:\n            var_4h = 0x1;\n            *ppiVar18 = 0;\n        }\n        else if ((ppiVar9 < hWndChildAfter) && (*hWndChildAfter != '\\0')) {\n            iVar14 = fcn.00405e69(ppiVar9);\n            if (iVar14 == 0) goto code_r0x004016e1;\n            fcn.00405b65(hWndChildAfter, iVar14 + 0x2c);\n        }\n        if (var_1ch == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(ppiVar18, ppiVar18, 0x2000);\n        }\n        break;\n    case 0x401705:\n        uVar15 = fcn.004029fd(0xffffffff);\n        iVar14 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar15, 0, 0x2000, ppiVar16, &fcn.00401434::hWndChildAfter);\n        bVar19 = iVar14 == 0;\n        goto code_r0x00401721;\n    case 0x40172c:\n        uVar15 = fcn.004029fd(0xffffffef);\n        iVar14 = fcn.00405825(ppiVar16, uVar15);\n        goto code_r0x004015a6;\n    case 0x40173f:\n        piVar12 = fcn.004029fd(0x31);\n        hWndChildAfter = var_24h & 7;\n        lpNumberOfBytesWritten = piVar12;\n        iVar14 = fcn.00405662(piVar12);\n        if (iVar14 == 0) {\n            uVar11 = 0x473000;\n            uVar15 = fcn.00405b65(0x409398, 0x473000, piVar12);\n            uVar15 = fcn.004055f5(uVar15);\n            sub.KERNEL32.dll_lstrcatA(uVar15);\n        }\n        else {\n            uVar11 = 0x409398;\n            fcn.00405b65(0x409398);\n        }\n        fcn.00405dd0(0x409398);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar14 = fcn.00405e69(0x409398);\n                uVar13 = 0;\n                if (iVar14 != 0) {\n                    uVar13 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar14 + 0x14, &fcn.00401434::lpLastWriteTime);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar13) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.004057d1(0x409398);\n            }\n            lpWideCharStr = fcn.004057f6(0x409398, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (lpWideCharStr != -1) {\n                fcn.00404e50(0xffffffea, lpNumberOfBytesWritten);\n                *0x446774 = *0x446774 + 1;\n                iVar14 = fcn.00402e62(var_1ch, lpWideCharStr, 0, 0);\n                *0x446774 = *0x446774 + -1;\n                if ((lpLastWriteTime != 0xffffffff) || (var_14h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (lpWideCharStr, &fcn.00401434::lpLastWriteTime, 0, &fcn.00401434::lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(lpWideCharStr);\n                if (-1 < iVar14) goto code_r0x00402892;\n                if (iVar14 == -2) {\n                    uVar21 = 0xffffffe9;\n                    fcn.00405b87(0x409398, 0xffffffe9);\n                    uVar20 = 0x409398;\n                    sub.KERNEL32.dll_lstrcatA(uVar11, lpNumberOfBytesWritten, 0x409398);\n                }\n                else {\n                    uVar21 = 0xffffffee;\n                    uVar20 = 0x409398;\n                    fcn.00405b87(0x409398, 0xffffffee);\n                }\n                uVar11 = 0x200010;\n                uVar15 = 0x409398;\n                goto code_r0x00402221;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.00404e50(0xffffffe2, lpNumberOfBytesWritten);\n                bVar19 = hWndChildAfter == 0x2;\n                goto code_r0x004015a8;\n            }\n            fcn.00405b65(0x40d398, 0x447000);\n            fcn.00405b65(0x447000, 0x409398);\n            fcn.00405b87(0x40b398, var_10h);\n            fcn.00405b65(0x447000, 0x40d398);\n            iVar14 = fcn.00405379();\n        } while (iVar14 == 4);\n        if (iVar14 != 5) {\n            in_stack_fffffdf4 = 0x409398;\n            in_stack_fffffdf0 = 0xfffffffa;\n            goto code_r0x00401492;\n        }\n        *0x446748 = *0x446748 + 1;\n        goto code_r0x0040289b;\n    case 0x4018e3:\n        uVar15 = 0;\n        goto code_r0x0040191a;\n    case 0x4018e6:\n        uVar15 = fcn.004029fd(0x31);\n        piVar12 = fcn.00405379(uVar15, var_24h);\n        if (piVar12 == NULL) goto code_r0x00402663;\n        if (piVar12 == var_1ch) {\n            return lpLastWriteTime;\n        }\n        if (piVar12 == var_14h) {\n            return var_10h;\n        }\n        break;\n    case 0x401918:\n        uVar15 = 0xfffffff0;\ncode_r0x0040191a:\n        uVar15 = fcn.004029fd(uVar15);\n        fcn.00405425(uVar15, dwFileAttributes);\n        break;\n    case 0x40192d:\n        uVar15 = fcn.004029fd(1);\n        sub.KERNEL32.dll_lstrlenA(uVar15);\n        goto code_r0x0040283a;\n    case 0x40193f:\n        hWndChildAfter = fcn.004029e0(2);\n        iVar14 = fcn.004029e0(3);\n        nNumberOfBytesToWrite = fcn.004029fd(1);\n        *ppiVar16 = 0;\n        if (((var_1ch == NULL) || (hWndChildAfter != NULL)) &&\n           ((iVar10 = sub.KERNEL32.dll_lstrlenA(nNumberOfBytesToWrite),  -1 < iVar14 ||\n            (iVar14 = iVar14 + iVar10,  -1 < iVar14)))) {\n            if (iVar10 < iVar14) {\n                iVar14 = iVar10;\n            }\n            fcn.00405b65(ppiVar16, nNumberOfBytesToWrite + iVar14);\n            iVar14 = hWndChildAfter;\n            if (hWndChildAfter != NULL) {\n                if (hWndChildAfter < 0) {\n                    iVar10 = sub.KERNEL32.dll_lstrlenA(ppiVar16);\n                    hWndChildAfter = iVar14 + iVar10;\n                    if (hWndChildAfter < 0) {\n                        hWndChildAfter = NULL;\n                    }\n                }\n                if (hWndChildAfter < 0x2000) {\n                    *(hWndChildAfter + ppiVar16) = 0;\n                }\n            }\n        }\n        break;\n    case 0x4019c0:\n        uVar15 = fcn.004029fd(0x20);\n        uVar11 = fcn.004029fd(0x31);\n        if (var_14h == NULL) {\n            iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        }\n        else {\n            iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar15, uVar11);\n        }\n        goto joined_r0x004019df;\n    case 0x4019f1:\n        hWndChildAfter = fcn.004029fd(1);\n        iVar10 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(hWndChildAfter, ppiVar16, 0x2000);\n        if ((iVar10 == 0) ||\n           ((var_1ch != NULL && (iVar10 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(hWndChildAfter, ppiVar16),  iVar10 == 0))))\n        {\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        *(iVar14 + 0x448fff) = 0;\n        break;\n    case 0x401a31:\n        uVar13 = fcn.004029e0(0);\n        uVar4 = fcn.004029e0(1);\n        if (var_10h != NULL) {\n            if (uVar13 < uVar4) {\n                return lpLastWriteTime;\n            }\n            if (uVar13 <= uVar4) {\n                return var_1ch;\n            }\n            return var_14h;\n        }\n        if (uVar13 < uVar4) {\n            return lpLastWriteTime;\n        }\n        if (uVar13 <= uVar4) {\n            return var_1ch;\n        }\n        return var_14h;\n    case 0x401a63:\n        fcn.004029e0(1);\n        iVar14 = fcn.004029e0(2);\n        if (0xc < lpLastWriteTime) goto code_r0x0040283a;\n    // switch table (13 cases) at 0x4029ac\n        switch(*(lpLastWriteTime * 4 + 0x4029ac)) {\n        case 0x401a84:\n            break;\n        case 0x401a88:\n            break;\n        case 0x401a8c:\n            break;\n        case 0x401a93:\n            goto joined_r0x00401ace;\n        case 0x401aa0:\n            break;\n        case 0x401aa4:\n            break;\n        case 0x401aa8:\n            break;\n        case 0x401aac:\n            break;\n        case 0x401ab5:\n            break;\n        case 0x401abf:\n            break;\n        case 0x401acc:\njoined_r0x00401ace:\n            if (iVar14 == 0) {\n                var_4h = 0x1;\n            }\n            break;\n        case 0x401ae4:\n            break;\n        case 0x401ae8:\n        }\n        goto code_r0x0040283a;\n    case 0x401af0:\n        uVar15 = fcn.004029fd(1);\n        uVar11 = fcn.004029e0(2);\n        (*_sym.imp.USER32.dll_wsprintfA)(ppiVar16, uVar15, uVar11);\n        break;\n    case 0x401b11:\n        if (var_1ch != NULL) {\n            do {\n                var_1ch = var_1ch + -1;\n                if (ppiVar9 == NULL) goto code_r0x00402213;\n                ppiVar9 = *ppiVar9;\n            } while (var_1ch != NULL);\n            if (ppiVar9 == NULL) goto code_r0x00402213;\n            puVar17 = 0x409398;\n            fcn.00405b65(0x409398, ppiVar9 + 1);\n            ppiVar16 = *0x41339c + 1;\n            fcn.00405b65(ppiVar9 + 1, ppiVar16);\n            goto code_r0x004027b8;\n        }\n        if (dwFileAttributes != NULL) {\n            if (*0x41339c != NULL) {\n                fcn.00405b65(ppiVar16, *0x41339c + 1);\n                *0x41339c = *ppiVar9;\n                ppiVar22 = ppiVar16;\n                goto code_r0x00401b80;\n            }\n            goto code_r0x00402663;\n        }\n        ppiVar9 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x2004);\n        fcn.00405b87(ppiVar9 + 1, var_24h);\n        *ppiVar9 = *0x41339c;\n        *0x41339c = ppiVar9;\n        break;\n    case 0x401bb8:\n        lpWideCharStr = fcn.004029e0(3);\n        hWndChildAfter = fcn.004029e0(4);\n        if ((var_10h & 1) != 0) {\n            lpWideCharStr = fcn.004029fd(0x33);\n        }\n        if ((var_10h & 2) != 0) {\n            hWndChildAfter = fcn.004029fd(0x44);\n        }\n        if (var_28h == 0x21) {\n            uVar15 = fcn.004029e0();\n            uVar11 = fcn.004029e0(2);\n            if (var_10h >> 2 == 0) {\n                lpNumberOfBytesWritten =\n                     (*_sym.imp.USER32.dll_SendMessageA)(uVar15, uVar11, lpWideCharStr, hWndChildAfter);\n                dwFileAttributes = var_24h;\n            }\n            else {\n                iVar14 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                                   (uVar15, uVar11, lpWideCharStr, hWndChildAfter, 0, var_10h >> 2, \n                                    &fcn.00401434::lpNumberOfBytesWritten);\n                var_4h = iVar14 == 0;\n                dwFileAttributes = var_24h;\n            }\n        }\n        else {\n            pcVar7 = fcn.004029fd(1);\n            pcVar5 = fcn.004029fd(0x12);\n            lpNumberOfBytesWritten =\n                 (*_sym.imp.USER32.dll_FindWindowExA)\n                           (lpWideCharStr, hWndChildAfter, -(*pcVar7 != '\\0') & pcVar7, -(*pcVar5 != '\\0') & pcVar5);\n            dwFileAttributes = var_24h;\n        }\njoined_r0x004025f6:\n        if (-1 < dwFileAttributes) goto code_r0x0040283a;\n        break;\n    case 0x401c78:\n        uVar15 = fcn.004029e0(0);\n        iVar14 = (*_sym.imp.USER32.dll_IsWindow)(uVar15);\n        lpLastWriteTime = dwFileAttributes;\njoined_r0x004019df:\n        if (iVar14 == 0) {\n            return var_1ch;\n        }\n        return lpLastWriteTime;\n    case 0x401c95:\n        uVar15 = fcn.004029e0(2);\n        uVar15 = fcn.004029e0(1, uVar15);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar15);\n        goto code_r0x0040283a;\n    case 0x401cb0:\n        uVar15 = fcn.004029e0(0, 0xffffffeb, *0x446708 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar15);\n        break;\n    case 0x401ccc:\n        uVar15 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x4466c8, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar15, &fcn.00401434::lpRect);\n        uVar11 = fcn.004029fd(0, 0, var_38h * var_1ch, lpWideCharStr * var_1ch, 0x10);\n        uVar11 = (*_sym.imp.USER32.dll_LoadImageA)(0, uVar11);\n        iVar14 = (*_sym.imp.USER32.dll_SendMessageA)(uVar15, 0x172, 0, uVar11);\n        if (iVar14 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar14);\n        }\n        break;\n    case 0x401d26:\n        uVar15 = (*_sym.imp.USER32.dll_GetDC)(*0x4466c8);\n        uVar11 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar15, 0x5a, 0x48);\n        uVar11 = fcn.004029e0(2, uVar11);\n        *0x4133a0 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar11);\n        *0x4133a0 = -*0x4133a0;\n        (*_sym.imp.USER32.dll_ReleaseDC)(lpWideCharStr, uVar15);\n        *0x4133b0 = fcn.004029e0(3);\n        *0x4133b4 = var_14h & 1;\n        *0x4133b7 = 1;\n        *0x4133b5 = var_14h & 2;\n        *0x4133b6 = var_14h & 4;\n        fcn.00405b87(0x4133bc, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x4133a0);\ncode_r0x0040283a:\n        fcn.00405ac3(ppiVar16);\n        break;\n    case 0x401dac:\n        uVar15 = fcn.004029e0(0);\n        uVar11 = fcn.004029e0(1);\n        if (lpLastWriteTime == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar15, uVar11);\n        }\n        break;\n    case 0x401dd8:\n        pcVar7 = fcn.004029fd(0);\n        uVar15 = fcn.004029fd(0x31);\n        pcVar5 = fcn.004029fd(0x22);\n        fcn.004029fd(0x15);\n        fcn.00401423(0xffffffec);\n        iVar14 = (*_sym.imp.SHELL32.dll_ShellExecuteA)\n                           (lpWideCharStr, -(*pcVar7 != '\\0') & pcVar7, uVar15, -(*pcVar5 != '\\0') & pcVar5, 0x473000, \n                            lpLastWriteTime);\n        if (iVar14 < 0x21) goto code_r0x00402663;\n        break;\n    case 0x401e32:\n        uVar15 = fcn.004029fd(0);\n        uVar11 = 0xffffffeb;\n        fcn.00404e50(0xffffffeb, uVar15);\n        hWndChildAfter = fcn.00405318(uVar15);\n        pcVar6 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        if (hWndChildAfter == NULL) goto code_r0x00402663;\n        ppiVar9 = hWndChildAfter;\n        if (var_1ch != NULL) {\n            while (iVar14 = (*pcVar6)(hWndChildAfter, 100),  iVar14 == 0x102) {\n                fcn.00405ec9(0xf);\n            }\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hWndChildAfter, &fcn.00401434::lpNumberOfBytesWritten);\n            if (dwFileAttributes < 0) {\n                ppiVar9 = hWndChildAfter;\n                if (lpNumberOfBytesWritten != NULL) {\n                    var_4h = 0x1;\n                }\n            }\n            else {\n                fcn.00405ac3(uVar11, lpNumberOfBytesWritten, ppiVar18);\n                ppiVar9 = hWndChildAfter;\n            }\n        }\ncode_r0x00401ea1:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar9);\n        break;\n    case 0x401eac:\n        uVar15 = fcn.004029fd(2);\n        hWndChildAfter = fcn.00405e69(uVar15);\n        if (hWndChildAfter != NULL) {\n            fcn.00405ac3(ppiVar18, hWndChildAfter[5]);\n            goto code_r0x0040283a;\n        }\n        *ppiVar16 = 0;\n        *ppiVar18 = 0;\n        goto code_r0x00402663;\n    case 0x401edc:\n        nNumberOfBytesToWrite = fcn.004029fd(0xffffffee);\n        lpNumberOfBytesWritten =\n             sub.VERSION.dll_GetFileVersionInfoSizeA(nNumberOfBytesToWrite, &fcn.00401434::lpMultiByteStr);\n        *ppiVar16 = 0;\n        *ppiVar18 = 0;\n        var_4h = 0x1;\n        if ((lpNumberOfBytesWritten != NULL) &&\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, lpNumberOfBytesWritten),  hWndChildAfter != NULL\n           )) {\n            piStack404 = lpNumberOfBytesWritten;\n            uStack408 = 0;\n            puStack416 = 0x401f27;\n            ppiVar22 = nNumberOfBytesToWrite;\n            ppiStack400 = hWndChildAfter;\n            iVar14 = sub.VERSION.dll_GetFileVersionInfoA();\n            ppiVar9 = hWndChildAfter;\n            if (iVar14 != 0) {\n                puStack416 = &fcn.00401434::lpValueName;\n                puStack420 = &fcn.00401434::lpWideCharStr;\n                lpFindFileData = 0x409014;\n                ppiVar22 = hWndChildAfter;\n                iVar14 = sub.VERSION.dll_VerQueryValueA();\n                ppiVar9 = hWndChildAfter;\n                if (iVar14 != 0) {\n                    fcn.00405ac3(ppiVar16, *(lpWideCharStr + 8));\n                    fcn.00405ac3(ppiVar18, *(lpWideCharStr + 0xc));\n                    var_4h = NULL;\n                    ppiVar9 = hWndChildAfter;\n                    ppiVar22 = ppiVar18;\n                }\n            }\ncode_r0x00401b80:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar9, ppiVar22);\n        }\n        break;\n    case 0x401f67:\n        var_4h = 0x1;\n        if (-1 < *0x446778) {\n            uVar15 = fcn.004029fd(0xfffffff0);\n            hWndChildAfter = fcn.004029fd(1);\n            if (((var_14h != NULL) && (iVar14 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar15),  iVar14 != 0)) ||\n               (iVar14 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar15, 0, 8),  iVar14 != 0)) {\n                pcVar6 = sub.KERNEL32.dll_GetProcAddress(iVar14, hWndChildAfter);\n                if (pcVar6 == NULL) {\n                    fcn.00404e50(0xfffffff7, hWndChildAfter);\n                }\n                else {\n                    var_4h = NULL;\n                    if (var_1ch == NULL) {\n                        (*pcVar6)(lpWideCharStr, 0x2000, 0x447000, 0x41339c, 0x409000);\n                    }\n                    else {\n                        fcn.00401423(var_1ch);\n                        iVar10 = (*pcVar6)();\n                        if (iVar10 != 0) {\n                            var_4h = 0x1;\n                        }\n                    }\n                }\n                if ((lpLastWriteTime == NULL) && (iVar10 = fcn.0040358e(iVar14),  iVar10 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar14);\n                }\n                break;\n            }\n        }\n        goto code_r0x0040217c;\n    case 0x402036:\n        lpMultiByteStr = fcn.004029fd(0xfffffff0);\n        lpWideCharStr = fcn.004029fd(0xffffffdf);\n        nNumberOfBytesToWrite = fcn.004029fd(2);\n        pcVar7 = fcn.004029fd(0xffffffcd);\n        lpValueName = fcn.004029fd(0x45);\n        iVar14 = fcn.00405662(lpWideCharStr);\n        if (iVar14 == 0) {\n            fcn.004029fd(0x21);\n        }\n        iVar14 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x407384, 0, 1, 0x407374, &fcn.00401434::hWndChildAfter);\n        if (-1 < iVar14) {\n            iVar14 = (***hWndChildAfter)(hWndChildAfter, 0x407394, &fcn.00401434::lpNumberOfBytesWritten);\n            if (-1 < iVar14) {\n                iVar14 = (*(*hWndChildAfter)[0x14])(hWndChildAfter, lpWideCharStr);\n                if ((var_14h & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x473000);\n                }\n                uVar13 = var_14h >> 8 & 0x7f;\n                if (uVar13 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar13);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_14h >> 0x10);\n                if (*pcVar7 != '\\0') {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, pcVar7, var_14h & 0xff);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, nNumberOfBytesToWrite);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpValueName);\n                if (-1 < iVar14) {\n                    iVar14 = -0x7fffbffb;\n                    iVar10 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (0, 0, lpMultiByteStr, 0xffffffff, lpWideCharStr, 0x2000);\n                    if (iVar10 != 0) {\n                        iVar14 = (**(*lpNumberOfBytesWritten + 0x18))(lpNumberOfBytesWritten, lpWideCharStr, 1);\n                    }\n                }\n                (**(*lpNumberOfBytesWritten + 8))(lpNumberOfBytesWritten);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < iVar14) goto code_r0x0040217c;\n        }\n        var_4h = 0x1;\n        goto code_r0x0040217c;\n    case 0x40218a:\n        iVar14 = fcn.004029fd(0);\n        iVar10 = fcn.004029fd(0x11);\n        hWndChildAfter = fcn.004029fd(0x23);\n        iVar8 = fcn.00405e69(iVar14);\n        if (iVar8 != 0) {\n            lpFileOp = lpWideCharStr;\n            var_60h = 2;\n            iVar8 = sub.KERNEL32.dll_lstrlenA(iVar14);\n            *(iVar8 + 1 + iVar14) = 0;\n            iVar8 = sub.KERNEL32.dll_lstrlenA(iVar10);\n            *(iVar8 + 1 + iVar10) = 0;\n            var_4ah = hWndChildAfter;\n            var_54h._0_2_ = var_1ch._0_2_;\n            var_5ch = iVar14;\n            var_58h = iVar10;\n            fcn.00404e50(0, hWndChildAfter);\n            iVar14 = (*_sym.imp.SHELL32.dll_SHFileOperationA)(&fcn.00401434::lpFileOp);\n            if (iVar14 == 0) break;\n        }\n        fcn.00404e50(0xfffffff9, 0);\n        goto code_r0x00402663;\n    case 0x40220c:\n        if (var_24h != 0xbadf00d) {\ncode_r0x00402213:\n            uVar21 = 0x200010;\n            uVar20 = 0xffffffe8;\n            uVar11 = 0;\n            uVar15 = fcn.00405b87(0, 0xffffffe8);\ncode_r0x00402221:\n            fcn.00405379(uVar15, uVar11, uVar20, uVar21);\n            return 0x7fffffff;\n        }\n        *0x446754 = *0x446754 + 1;\n        break;\n    case 0x40223b:\n        uVar11 = 0;\n        uVar20 = 0;\n        if (var_24h != NULL) {\n            uVar11 = fcn.004029fd(0);\n        }\n        if (dwFileAttributes != NULL) {\n            uVar20 = fcn.004029fd(0x11);\n        }\n        if (var_14h != NULL) {\n            uVar15 = fcn.004029fd(0x22);\n        }\n        uVar21 = fcn.004029fd(0xffffffcd);\n        iVar14 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(uVar11, uVar20, uVar15, uVar21);\ncode_r0x004015a6:\n        bVar19 = iVar14 == 0;\ncode_r0x004015a8:\n        if (bVar19) goto code_r0x00402663;\n        break;\n    case 0x40227f:\n        hWndChildAfter = hWndChildAfter & 0xffff | *0x409010 << 0x10;\n        uVar15 = fcn.004029fd(1);\n        lpMultiByteStr = fcn.004029fd(0x12);\n        uVar11 = fcn.004029fd(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (uVar15, lpMultiByteStr, &fcn.00401434::hWndChildAfter + 2, ppiVar16, 0x1fff, uVar11);\n        bVar19 = *ppiVar16 == '\\n';\ncode_r0x00401721:\n        if (bVar19) {\ncode_r0x00402637:\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        break;\n    case 0x4022c0:\n        if (var_14h == NULL) {\n            iVar10 = fcn.00402b07(2);\n            if (iVar10 == 0) goto code_r0x00402663;\n            uVar15 = fcn.004029fd(0x33);\n            iVar14 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar10, uVar15);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar10);\n        }\n        else {\n            uVar15 = fcn.004029fd(0x22);\n            uVar11 = fcn.00402af2(dwFileAttributes, uVar15, var_14h & 2);\n            iVar14 = fcn.00402a3d(uVar11, dwFileAttributes, uVar15);\n        }\n        if (iVar14 != 0) goto code_r0x00402663;\n        break;\n    case 0x40231c:\n        uVar15 = fcn.00402af2(var_24h);\n        lpMultiByteStr = var_10h;\n        lpValueName = fcn.004029fd(2);\n        uVar11 = fcn.004029fd(0x11);\n        var_4h = 0x1;\n        piVar12 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                            (uVar15, uVar11, 0, 0, 0, *0x446770 | 2, 0, &fcn.00401434::hWndChildAfter, 0);\n        if (piVar12 == NULL) {\n            if (var_14h == 0x1) {\n                fcn.004029fd(0x23);\n                iVar14 = sub.KERNEL32.dll_lstrlenA(0x40d398);\n                piVar12 = iVar14 + 1;\n            }\n            if (var_14h == 0x4) {\n                *0x40d398 = fcn.004029e0(3);\n                piVar12 = var_14h;\n            }\n            if (var_14h == 0x3) {\n                piVar12 = fcn.00402e62(lpLastWriteTime, 0, 0x40d398, 0x6000);\n            }\n            iVar14 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                               (hWndChildAfter, lpValueName, 0, lpMultiByteStr, 0x40d398, piVar12);\n            ppiVar9 = hWndChildAfter;\n            if (iVar14 == 0) {\n                var_4h = NULL;\n            }\ncode_r0x00402490:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar9);\n        }\n        break;\n    case 0x4023c8:\n        ppiVar9 = fcn.00402b07(0x20019);\n        uVar15 = fcn.004029fd(0x33);\n        *ppiVar16 = 0;\n        if (ppiVar9 != NULL) {\n            lpMultiByteStr = 0x2000;\n            iVar10 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                               (ppiVar9, uVar15, 0, &fcn.00401434::hWndChildAfter, ppiVar16, \n                                &fcn.00401434::lpMultiByteStr);\n            if (iVar10 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_14h == NULL;\n                    fcn.00405ac3();\n                    goto code_r0x00402490;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_14h;\n                    goto code_r0x00402489;\n                }\n            }\n            *ppiVar16 = 0;\n            var_4h = 0x1;\n            goto code_r0x00402490;\n        }\n        goto code_r0x00402663;\n    case 0x40243a:\n        ppiVar9 = fcn.00402b07(0x20019);\n        uVar15 = fcn.004029e0(3);\n        *ppiVar16 = 0;\n        if (ppiVar9 != NULL) {\n            hWndChildAfter = 0x1fff;\n            if (var_14h == NULL) {\n                iVar10 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)\n                                   (ppiVar9, uVar15, ppiVar16, &fcn.00401434::hWndChildAfter, 0, 0, 0, 0);\n                if (iVar10 != 0) goto code_r0x00402663;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(ppiVar9, uVar15, ppiVar16, 0x1fff);\n            }\ncode_r0x00402489:\n            *(iVar14 + 0x448fff) = 0;\n            goto code_r0x00402490;\n        }\n        goto code_r0x00402663;\n    case 0x40249b:\n        if (*ppiVar16 != '\\0') {\n            ppiVar9 = fcn.00405adc(ppiVar16);\n            goto code_r0x00401ea1;\n        }\n        break;\n    case 0x4024af:\n        uVar15 = fcn.004029fd(0xffffffed);\n        iVar14 = fcn.004057f6(uVar15, dwFileAttributes, var_1ch);\n        if (iVar14 != -1) goto code_r0x0040283a;\ncode_r0x00402661:\n        *ppiVar16 = 0;\n        goto code_r0x00402663;\n    case 0x4024d1:\n        if (var_1ch == NULL) {\n            uVar15 = fcn.004029fd(0x11);\n            uVar15 = sub.KERNEL32.dll_lstrlenA(uVar15);\n        }\n        else {\n            *0x40b398 = fcn.004029e0(1);\n            uVar15 = 1;\n        }\n        if (*ppiVar16 != '\\0') {\n            puVar17 = &fcn.00401434::hWndChildAfter;\n            uVar21 = 0;\n            uVar20 = 0x40b398;\n            uVar11 = fcn.00405adc(ppiVar16);\n            iVar14 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar11, ppiVar16, uVar20, uVar15, puVar17, uVar21);\n            goto code_r0x004015a6;\n        }\ncode_r0x00402663:\n        var_4h = 0x1;\n        break;\n    case 0x402519:\n        nNumberOfBytesToWrite = NULL;\n        lpWideCharStr = fcn.004029e0(2);\n        if (lpWideCharStr < 1) break;\n        if (0x1fff < lpWideCharStr) {\n            lpWideCharStr = 0x1fff;\n        }\n        iVar14 = nNumberOfBytesToWrite;\n        if (*ppiVar16 != '\\0') {\n            hWndChildAfter = hWndChildAfter & 0xffffff;\n            lpNumberOfBytesWritten = fcn.00405adc(ppiVar16);\n            iVar14 = nNumberOfBytesToWrite;\n            if (0 < lpWideCharStr) {\n                while (iVar10 = fcn.0040586e(lpNumberOfBytesWritten, &stack0xfffffff3, 1),  iVar10 != 0) {\n                    if (lpLastWriteTime != NULL) {\n                        fcn.00405ac3(ppiVar18, var_9h);\n                        goto code_r0x0040289b;\n                    }\n                    if ((hWndChildAfter._3_1_ == 0xd) || (hWndChildAfter._3_1_ == 10)) {\n                        if ((hWndChildAfter._3_1_ == var_9h) || ((var_9h != 0xd && (var_9h != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)(lpNumberOfBytesWritten, 0xffffffff, 0, 1);\n                        }\n                        else {\n                            *(iVar14 + ppiVar18) = var_9h;\n                            iVar14 = iVar14 + 1;\n                        }\n                        break;\n                    }\n                    *(iVar14 + ppiVar18) = var_9h;\n                    iVar14 = iVar14 + 1;\n                    hWndChildAfter = hWndChildAfter & 0xffffff | var_9h << 0x18;\n                    if ((var_9h == 0) || (lpWideCharStr <= iVar14)) break;\n                }\n            }\n        }\n        *(iVar14 + ppiVar18) = 0;\n        bVar19 = iVar14 == 0;\n        goto code_r0x004015a8;\n    case 0x4025d2:\n        if (*ppiVar16 != '\\0') {\n            uVar15 = fcn.004029e0(2, 0, lpLastWriteTime);\n            uVar11 = fcn.00405adc(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar11, ppiVar16, uVar15);\n            ppiVar16 = ppiVar18;\n            goto joined_r0x004025f6;\n        }\n        break;\n    case 0x402601:\n        if (*ppiVar16 != '\\0') {\n            uVar15 = fcn.00405adc(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar15);\n        }\n        break;\n    case 0x40261b:\n        if (*ppiVar18 != '\\0') {\n            puVar17 = &fcn.00401434::lpFindFileData;\n            uVar15 = fcn.00405adc(ppiVar18);\n            iVar14 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(uVar15, ppiVar18, puVar17);\n            if (iVar14 != 0) goto code_r0x00402676;\n        }\n        goto code_r0x00402637;\n    case 0x402645:\n        uVar15 = fcn.004029fd(2);\n        iVar14 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar15, &fcn.00401434::lpFindFileData);\n        if (iVar14 == -1) {\n            *ppiVar18 = 0;\n            goto code_r0x00402661;\n        }\n        fcn.00405ac3(ppiVar18, iVar14);\ncode_r0x00402676:\n        puVar17 = &fcn.00401434::var_178h;\ncode_r0x004027b8:\n        fcn.00405b65(ppiVar16, puVar17);\n        break;\n    case 0x402683:\n        lpNumberOfBytesWritten = 0xfffffd66;\n        uVar15 = fcn.004029fd(0xfffffff0);\n        lpValueName = uVar15;\n        iVar14 = fcn.00405662(uVar15);\n        if (iVar14 == 0) {\n            fcn.004029fd(0xffffffed);\n        }\n        fcn.004057d1(uVar15);\n        hWndChildAfter = fcn.004057f6(uVar15, 0x40000000, 2);\n        pcVar6 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            nNumberOfBytesToWrite = *0x4466d4;\n            iVar14 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x4466d4);\n            if (iVar14 != 0) {\n                fcn.0040306b(0);\n                fcn.00403055(iVar14, nNumberOfBytesToWrite);\n                piVar12 = (*pcVar6)(0x40, var_1ch);\n                lpMultiByteStr = piVar12;\n                if (piVar12 != NULL) {\n                    fcn.00402e62(dwFileAttributes, 0, piVar12, var_1ch);\n                    for (; *piVar12 != '\\0'; piVar12 = piVar12 + var_38h + 8) {\n                        var_38h = *piVar12;\n                        dwFileAttributes = piVar12[1] + iVar14;\n                        fcn.004057b1();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lpMultiByteStr, dwFileAttributes);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (hWndChildAfter, iVar14, nNumberOfBytesToWrite, &fcn.00401434::lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar14);\n                lpNumberOfBytesWritten = fcn.00402e62(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (lpNumberOfBytesWritten < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpValueName);\n            var_4h = 0x1;\n        }\ncode_r0x0040217c:\n        fcn.00401423();\n        break;\n    case 0x402784:\n        hWndChildAfter = fcn.004029e0(0);\n        if (*0x4466ec <= hWndChildAfter) goto code_r0x00402663;\n        iVar14 = hWndChildAfter * 0x2018 + *0x4466e8;\n        if (-1 < var_1ch) {\n            ppiVar16 = ppiVar18;\n            if (var_1ch == NULL) {\n                puVar17 = iVar14 + 0x18;\n                goto code_r0x004027b8;\n            }\n            goto code_r0x0040283a;\n        }\n        var_1ch = -1 - var_1ch;\n        if (var_1ch == NULL) {\n            fcn.00405b87(iVar14 + 0x18, var_14h);\n            *(iVar14 + 9) = *(iVar14 + 9) | 1;\n        }\n        else {\n            dwFileAttributes = fcn.004029e0(1);\n        }\n        *(iVar14 + var_1ch * 4) = dwFileAttributes;\n        if (lpLastWriteTime != NULL) {\n            fcn.0040117d(hWndChildAfter);\n        }\n        break;\n    case 0x40280a:\n        uVar13 = fcn.004029e0(0);\n        if (0x1f < uVar13) goto code_r0x00402663;\n        if (lpLastWriteTime == NULL) {\n            if (var_1ch == NULL) {\n                fcn.00405b87(ppiVar18, *(*0x4466d0 + 0x94 + uVar13 * 4));\n            }\n            else {\n                *(*0x4466d0 + 0x94 + uVar13 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (var_1ch == NULL) {\n                fcn.004012e2(0);\n                ppiVar16 = ppiVar18;\n                goto code_r0x0040283a;\n            }\n            fcn.00401299(uVar13);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x40286d:\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x4466c8, 0xb, *0x4394c0 & var_24h, 0);\n        if (var_24h != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpWideCharStr, 0, 0);\n        }\n        break;\n    case 0x40289d:\n        goto code_r0x0040289d;\n    }\ncode_r0x00402892:\n    *0x446748 = *0x446748 + var_4h;\ncode_r0x0040289b:\n    var_24h = NULL;\ncode_r0x0040289d:\n    return var_24h;\n}\n",
        "token_count": 12731
    },
    "00402c29": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402c29(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t dwBytes;\n    int32_t var_10h;\n    uint *hFile;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    var_4h = 0;\n    *0x4466cc = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x4466cc = *0x4466cc + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x47d000, 0x2000);\n    puVar1 = fcn.004057f6(0x47d000, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x409018 = puVar1;\n        return \"Error launching installer\";\n    }\n    *0x409018 = puVar1;\n    hFile = puVar1;\n    fcn.00405b65(0x475000, 0x47d000);\n    uVar2 = fcn.0040563c(0x475000);\n    fcn.00405b65(0x47f000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x427478 = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x4466d4 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x41f478;\n        iVar5 = fcn.00403055();\n        if (iVar5 == 0) {\n            fcn.00402bc5(1);\n            goto code_r0x00402e01;\n        }\n        if (*0x4466d4 == 0) {\n            puVar1 = &var_28h;\n            fcn.004057b1();\n            if (((((var_28h & 0xfffffff0) == 0) && (var_24h == -0x21524111)) && (var_18h == 0x74736e49)) &&\n               ((var_1ch == 0x74666f73 && (var_20h == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_28h;\n                *0x446760 = *0x446760 | arg_8h & 2;\n                *0x4466d4 = *0x413468;\n                if (uVar3 < var_10h) goto code_r0x00402e01;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_4h = var_4h + 1;\n                uVar3 = var_10h - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00402bc5(0);\n        }\n        if (uVar3 < *0x427478) {\n            puVar6 = fcn.00405f02();\n            puVar1 = var_8h;\n            var_8h = puVar6;\n        }\n        *0x413468 = *0x413468 + uVar8;\n    }\n    fcn.00402bc5(1, puVar1);\n    if (*0x4466d4 != 0) {\n        if (var_4h != 0) {\n            fcn.0040306b(*0x413468);\n            iVar5 = fcn.00403055(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_8h != arg_8h)) goto code_r0x00402e01;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.0040306b(*0x4466d4 + 0x1c);\n        iVar5 = fcn.00402e62(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x4466d8 = *puVar1;\n            if ((var_28h & 1) != 0) {\n                *0x4466dc = *0x4466dc + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x4466d0 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 1);\n            puVar1[0xf] = uVar2;\n            fcn.004057b1(0x4466e0, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00402e01:\n    return \n    \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1400
    },
    "00403514": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403514(void)\n\n{\n    if (*0x409018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409018);\n        *0x409018 = -1;\n    }\n    fcn.00403559();\n    fcn.00405425(0x47b000, 7);\n    return;\n}\n",
        "token_count": 81
    },
    "004035ee": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004035ee(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    code *pcStack148;\n    \n    iVar7 = *0x4466d0;\n    pcVar2 = fcn.00405e90();\n    if (pcVar2 == NULL) {\n        *0x477000 = 0x30;\n        *0x477001 = 0x78;\n        *0x477002 = 0;\n        fcn.00405a4c(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x4314c0, 0);\n        if (*0x4314c0 == '\\0') {\n            fcn.00405a4c(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x4314c0, 0);\n        }\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    else {\n        (*pcVar2)();\n        fcn.00405ac3();\n    }\n    fcn.004038b3();\n    *0x446740 = *0x4466d8 & 0x20;\n    *0x44675c = 0x10000;\n    iVar3 = fcn.004056e3();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x43e660;\n        fcn.00405a4c(*(iVar7 + 0x44), *(iVar7 + 0x48) + *0x4466f8, *(iVar7 + 0x4c) + *0x4466f8, 0x43e660, 0);\n        if (*0x43e660 != '\\0') {\n            if (*0x43e660 == '\\\"') {\n                uVar6 = 0x43e661;\n                puVar4 = fcn.00405620();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenA();\n            if (((uVar6 < iVar3 + -4 + uVar6) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.0040563c();\n            }\n            fcn.004055f5();\n            fcn.00405b65();\n        }\n    }\n    iVar3 = fcn.004056e3();\n    if (iVar3 == 0) {\n        pcStack148 = 0x403734;\n        fcn.00405b87(0x471000, *(iVar7 + 0x118));\n    }\n    pcStack148 = reloc.ADVAPI32.dll_RegEnumValueA;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x4466c0;\n    *0x4426a8 = (*_sym.imp.USER32.dll_LoadImageA)(*0x4466c0, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x004037da:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.004038b3();\n            if (*0x446760 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x4314a0, 5);\n                pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n                iVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"RichEd20\");\n                if (iVar7 == 0) {\n                    (*pcVar2)(\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x442660);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, \"RichEdit\", 0x442660);\n                    *0x442684 = \"RichEdit20A\";\n                    (*_sym.imp.USER32.dll_RegisterClassA)(0x442660);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x4466c0, *0x4426a0 + 0x69U & 0xffff, 0, 0x403980, 0);\n                fcn.0040140b(5);\n                fcn.0040353e(1);\n                return uVar5;\n            }\n            iVar7 = fcn.00404f22(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x004038a9;\n            }\n            if (*0x44268c == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x442660;\n        *0x442664 = fcn.00401000;\n        *0x442670 = *0x4466c0;\n        *0x442684 = 0x4091ec;\n        *0x442674 = *0x4426a8;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(0x442660);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &stack0xffffff64, 0);\n            *0x4314a0 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0x80, 0x4091ec, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x4466c0, 0);\n            goto code_r0x004037da;\n        }\ncode_r0x004038a9:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1467
    },
    "004047cd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047cd(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_10h = *0x4466e8;\n    var_14h = *0x4466d0 + 0x94;\n    if (arg_ch == 0x110) {\n        var_1ch = 0;\n        var_ch = 2;\n        *0x446720 = arg_8h;\n        *0x4314b8 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x4466ec << 2);\n        uVar2 = (*_sym.imp.USER32.dll_LoadBitmapA)(*0x4466c0, 0x6e);\n        *0x4314ac = 0xffffffff;\n        *0x4314b4 = (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffffc, fcn.00404dc4);\n        *0x4314a4 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x4314a4, uVar2, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x4314a4);\n        iVar3 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_14h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar2 = fcn.00405b87(0, iVar7);\n                uVar2 = (*pcVar1)(var_8h, 0x143, 0, uVar2);\n                (*pcVar1)(var_8h, 0x151, uVar2, iVar3);\n            }\n            uVar5 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.00403e53(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.00403e53(arg_8h, 0x16, *(arg_14h + 0x34 + uVar5 * 4));\n        iVar3 = 0;\n        uVar2 = 0;\n        if (*0x4466ec < 1) {\ncode_r0x004049f8:\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffff0, uVar5 & 0xfffffffb);\n        }\n        else {\n            var_18h = var_10h + 8;\n            do {\n                puVar8 = var_18h + 4;\n                if (*puVar8 != '\\0') {\n                    uVar5 = *var_18h;\n                    var_40h = uVar5 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar2;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar5 & 2) == 0) {\n                        if ((uVar5 & 4) == 0) {\n                            uVar4 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                            *(*0x4314b8 + iVar3 * 4) = uVar4;\n                        }\n                        else {\n                            uVar2 = (*pcVar1)(var_4h, 0x110a, 3, uVar2);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar2 = (*pcVar1)(var_4h, 0x1100, 0, &var_50h);\n                        var_1ch = 1;\n                        *(*0x4314b8 + iVar3 * 4) = uVar2;\n                        uVar2 = *(*0x4314b8 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_18h = var_18h + 0x806;\n            } while (iVar3 < *0x4466ec);\n            if (var_1ch == 0) goto code_r0x004049f8;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.00403e88(var_8h);\n            goto code_r0x00404daf;\n        }\n        fcn.00403e88(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x4466d8 & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar3 = fcn.0040471b(var_4h, arg_ch != 0x413),  -1 < iVar3)\n            ))) {\n            puVar8 = iVar3 * 0x2018 + 8 + var_10h;\n            uVar5 = *puVar8;\n            if ((uVar5 & 0x10) == 0) {\n                if ((uVar5 & 0x40) == 0) {\n                    uVar5 = uVar5 ^ 1;\n                }\n                else {\n                    uVar6 = uVar5 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xff | 1;\n                    }\n                    else {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xfe;\n                    }\n                }\n                *puVar8 = uVar5;\n                fcn.0040117d(iVar3);\n                arg_10h = iVar3 + 1;\n                arg_14h = ~*0x4466d8 >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x192) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x196) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x2018 + 8 + var_10h;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x2018 + 8 + var_10h;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x00404daf;\n        iVar3 = (*pcVar1)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_14h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x4314a4 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x4314a4);\n        }\n        if (*0x4314b8 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x4314b8);\n        }\n        *0x4314a4 = 0;\n        *0x4314b8 = 0;\n        *0x446720 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            iVar3 = arg_10h;\n            if (arg_10h != -1) {\n                iVar3 = arg_10h + -1;\n            }\n            fcn.0040479b(8, iVar3);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x4314b8);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_14h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x4314b8;\n        var_38h = 0xf030;\n        var_10h = 0;\n        if (0 < *0x4466ec) {\n            puVar8 = *0x4466e8 + 8;\n            do {\n                uVar5 = *(var_1ch + var_10h * 4);\n                if (uVar5 != 0) {\n                    uVar6 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar6 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar6 & 0x40) == 0) {\n                        iVar3 = (uVar6 & 1) + 1;\n                        if ((uVar6 & 0x10) != 0) {\n                            iVar3 = (uVar6 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar6 & 8) * 2 | uVar6 & 0x20;\n                    var_40h = uVar5;\n                    (*pcVar1)(var_4h, 0x1102, (uVar6 >> 5 & 1U) + 1, uVar5);\n                    (*pcVar1)(var_4h, 0x110d, 0, &var_44h);\n                }\n                var_10h = var_10h + 1;\n                puVar8 = puVar8 + 0x806;\n            } while (var_10h < *0x4466ec);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x44269c + 0x10) != 0) {\n            uVar2 = fcn.004046ee(5);\n            fcn.00404639(0x3ff, 0xfffffffb, uVar2);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x4466d8 & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3);\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar1)(uVar2);\n    }\ncode_r0x00404daf:\n    fcn.00403eba(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3390
    },
    "00404f8e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404f8e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar5 = arg_ch;\n    pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar8 = 0;\n    var_4h = *0x4426a4;\n    if (arg_ch == 0x110) {\n        var_2ch = 0xffffffff;\n        var_20h = 0xffffffff;\n        var_34h = 2;\n        var_30h = 0;\n        var_28h = NULL;\n        var_24h = 0;\n        var_1ch = 0;\n        uStack28 = 0;\n        arg_10h = *(*0x4466d0 + 0x5c);\n        arg_ch = *(*0x4466d0 + 0x60);\n        *0x442690 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x442688 = (*pcVar2)(arg_8h, 0x3ee);\n        *0x4426a4 = (*pcVar2)(arg_8h, 0x3f8);\n        var_4h = *0x4426a4;\n        fcn.00403e88(*0x442690);\n        *0x442694 = fcn.004046ee(4);\n        *0x4426ac = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_14h);\n        var_2ch = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        var_2ch = var_ch - var_2ch;\n        (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x101b, 0, &var_34h);\n        (*pcVar1)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < arg_10h) {\n            (*pcVar1)(var_4h, 0x1001, 0, arg_10h);\n            (*pcVar1)(var_4h, 0x1026, 0, arg_10h);\n        }\n        if (-1 < arg_ch) {\n            (*pcVar1)(var_4h, 0x1024, 0, arg_ch);\n        }\n        fcn.00403e53(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x4466d8 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x442690, 0);\n            if ((*0x4466d8 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x442690 = 0;\n            }\n            fcn.00403e88(*0x442688);\n        }\n        uVar3 = (*pcVar2)(arg_8h, 0x3ec);\n        (*pcVar1)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x4466d8 & 4) != 0) {\n            (*pcVar1)(uVar3, 0x409, 0, arg_ch);\n            (*pcVar1)(uVar3, 0x2001, 0, arg_10h);\n        }\ncode_r0x00405311:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &arg_ch);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00404f22, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n        if (iVar5 == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x442690, 0);\n                (*pcVar2)(var_4h, 8);\n                fcn.00403e88(var_4h);\n                goto code_r0x00405199;\n            }\n        }\n        else {\ncode_r0x00405199:\n            if (iVar5 == 0x404) {\n                if (*0x44268c != 0) {\n                    *0x42b490 = 2;\n                    fcn.00403e2c();\n                    goto code_r0x004051ba;\n                }\n                (*pcVar2)(*0x4466c8, 8);\n                if (*0x44674c == 0) {\n                    fcn.00404e50(*(*0x42d498 + 0x34), 0);\n                }\n                fcn.00403e2c(1);\n            }\n            if ((iVar5 == 0x7b) && (arg_10h == var_4h)) {\n                arg_10h = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n                if (0 < arg_10h) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar4 = fcn.00405b87(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuA)(uVar3, 0, 1, uVar4);\n                    iVar5 = arg_14h;\n                    iVar6 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_14h);\n                        iVar5 = var_14h;\n                        iVar6 = var_10h;\n                    }\n                    iVar5 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar5, iVar6, 0, arg_8h, 0);\n                    if (iVar5 == 1) {\n                        iVar5 = 1;\n                        var_34h = 0;\n                        var_28h = 0x4314c0;\n                        var_24h = 0x7fff;\n                        arg_8h = arg_10h;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, arg_8h, &var_3ch);\n                            iVar5 = iVar5 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar5);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_28h = puVar7;\n                            iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, iVar8, &var_3ch);\n                            puVar7 = puVar7 + iVar5;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 < arg_10h);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x00405311;\n            }\n        }\ncode_r0x004051ba:\n        uVar3 = fcn.00403eba(iVar5, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2006
    },
    "004053dd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004053dd(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.004057d1(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "00405425": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405425(char *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpFindFileData;\n    uint var_120h;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t hFindFile;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_ch = fcn.004056e3(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_ch != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00405b65(0x4394c8, arg_8h);\n            if (uVar1 == 0) {\n                fcn.0040563c(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatA(0x4394c8, \"\\\\*.*\");\n            }\n            if ((*arg_8h != '\\0') || (*0x4394c8 == '\\\\')) {\n                sub.KERNEL32.dll_lstrcatA(arg_8h, 0x409014);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenA(arg_8h);\n            hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x4394c8, &lpFindFileData);\n            if (hFindFile != -1) {\n                do {\n                    puVar5 = &var_120h;\n                    pcVar3 = fcn.00405620(&var_120h, 0x3f);\n                    if ((*pcVar3 != '\\0') && (var_1ch != '\\0')) {\n                        puVar5 = &var_1ch;\n                    }\n                    if ((*puVar5 != '.') ||\n                       ((*(puVar5 + 1) != '\\0' && ((*(puVar5 + 1) != '.' || (*(puVar5 + 2) != '\\0')))))) {\n                        fcn.00405b65(arg_8h + iVar2, puVar5);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            iVar4 = fcn.004053dd(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    *0x446748 = *0x446748 + 1;\n                                }\n                                else {\n                                    fcn.00404e50(0xfffffff1, arg_8h);\n                                    fcn.00405a19(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.00404e50(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.00405425(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(hFindFile, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = '\\0';\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_ch != 0) {\n                iVar2 = fcn.00405e69(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.004055f5(arg_8h);\n                iVar2 = fcn.004053dd(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.00404e50(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.00404e50(0xfffffff1, arg_8h);\n                    fcn.00405a19(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x446748 = *0x446748 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n        *0x446748 = *0x446748 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 1031
    },
    "004056e3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004056e3(uint param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    \n    fcn.00405b65(0x43b4c8, param_1);\n    pcVar1 = fcn.0040568e(0x43b4c8);\n    if ((pcVar1 != NULL) &&\n       ((pcVar5 = pcVar1,  fcn.00405dd0(pcVar1),  (*0x4466d8 & 0x80) == 0 || ((*pcVar1 != '\\0' && (*pcVar1 != '\\\\'))))))\n    {\n        while( true ) {\n            uVar4 = 0x43b4c8;\n            iVar3 = sub.KERNEL32.dll_lstrlenA(0x43b4c8);\n            if (iVar3 <= pcVar1 + -0x43b4c8) {\n                fcn.004055f5(0x43b4c8, uVar4, pcVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x43b4c8);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.00405e69(0x43b4c8);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            pcVar5 = 0x43b4c8;\n            fcn.0040563c();\n        }\n    }\n    return false;\n}\n",
        "token_count": 363
    },
    "004057d1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004057d1(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "0040589d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040589d(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t unaff_retaddr;\n    uchar *puStack116;\n    uint uStack112;\n    int32_t iStack108;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n    if (unaff_retaddr != 0) {\n        fcn.004057f6();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            return;\n        }\n        if (0x400 < iVar2) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)();\n    if ((iVar2 != 0) && (iVar2 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)();\n        fcn.00405b87(0x43de50, *(*0x4466d0 + 0x128));\n        iVar2 = fcn.004057f6();\n        if (iVar2 != -1) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if ((lpBuffer != 0) && (iVar4 = fcn.0040586e(iVar2, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.0040575b(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    iStack108 = 0x40599d;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n                    arg_10h = arg_10h + 10;\n                    puStack116 = arg_10h;\n                }\n                else {\n                    iStack108 = 0x4059b0;\n                    puVar5 = fcn.0040575b(iVar4 + 10, 0x40936c);\n                    if (puVar5 == NULL) {\n                        iVar2 = 0x40;\n                        puStack116 = arg_10h;\n                    }\n                    else {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        iVar2 = 0x40;\n                        puStack116 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                puStack116 = puStack116 + lpBuffer;\n                uStack112 = 0x43d650;\n                iStack108 = iVar3;\n                fcn.004057b1();\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, lpBuffer, arg_10h + iVar3, &stack0xffffff8c, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    return;\n}\n",
        "token_count": 777
    },
    "00405e69": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405e69(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, 0x43d510);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x43d510;\n    }\n    return uVar2;\n}\n",
        "token_count": 116
    },
    "0040117d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x2018 + 8 + *0x4466e8);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x4466ec) {\n            puVar3 = uVar4 * 0x2018 + 8 + *0x4466e8;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x806;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x4466ec);\n        }\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x4466e8;\n    iVar5 = arg_8h * 0x2018 + *0x4466e8;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x4466ec) {\n        do {\n            puVar1 = arg_8h * 0x2018 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x4466ec);\n    }\n    return 0;\n}\n",
        "token_count": 540
    },
    "004012e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x4466d0 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x4466ec == 0;\n            if (*0x4466ec != 0) {\n                puVar2 = *0x4466e8 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x806;\n                } while (uVar1 < *0x4466ec);\n                bVar3 = uVar1 == *0x4466ec;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 392
    },
    "00402e62": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402e62(int32_t nDenominator, uint hFile, uint32_t arg_10h, uint32_t nNumber)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint var_54h;\n    int32_t var_14h;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = nNumber;\n    uVar5 = arg_10h;\n    var_8h = nNumber;\n    if (arg_10h == 0) {\n        var_8h = 0x8000;\n    }\n    var_4h = 0;\n    uVar2 = arg_10h;\n    if (arg_10h == 0) {\n        uVar2 = 0x417470;\n    }\n    if (-1 < nDenominator) {\n        fcn.0040306b(*0x446718 + nDenominator);\n    }\n    iVar1 = fcn.00403055(&nNumber, 4);\n    if (iVar1 != 0) {\n        if ((nNumber & 0x80000000) == 0) {\n            if (uVar5 == 0) {\n                while( true ) {\n                    if (nNumber < 1) {\n                        return var_4h;\n                    }\n                    uVar5 = var_8h;\n                    if (nNumber < var_8h) {\n                        uVar5 = nNumber;\n                    }\n                    iVar1 = fcn.00403055();\n                    if (iVar1 == 0) break;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, 0x413470, uVar5, &arg_10h, 0);\n                    if ((iVar1 == 0) || (uVar5 != arg_10h)) {\n                        return 0xfffffffe;\n                    }\n                    var_4h = var_4h + uVar5;\n                    nNumber = nNumber - uVar5;\n                }\n            }\n            else {\n                if (nNumber < uVar4) {\n                    uVar4 = nNumber;\n                }\n                iVar1 = fcn.00403055(uVar5, uVar4);\n                if (iVar1 != 0) {\n                    return uVar4;\n                }\n            }\n        }\n        else {\n            var_ch = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            fcn.00405f70();\n            uVar5 = nNumber & 0x7fffffff;\n            nNumber = uVar5;\n            if (uVar5 == 0) {\n                return var_4h;\n            }\n            while( true ) {\n                uVar4 = 0x4000;\n                if (nNumber < 0x4000) {\n                    uVar4 = nNumber;\n                }\n                uVar6 = 0x413470;\n                iVar1 = fcn.00403055();\n                if (iVar1 == 0) break;\n                nNumber = nNumber - uVar4;\n                *0x4133f8 = 0x413470;\n                *0x4133fc = uVar4;\n                while( true ) {\n                    *0x413404 = var_8h;\n                    *0x413400 = uVar2;\n                    var_14h = fcn.00405f90(uVar6);\n                    if (var_14h < 0) {\n                        return 0xfffffffc;\n                    }\n                    iVar3 = *0x413400 - uVar2;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                    if (((*0x446774 & 1) != 0) && ((200 < iVar1 - var_ch || (nNumber == 0)))) {\n                        uVar6 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar5 - nNumber, 100, uVar5);\n                        (*_sym.imp.USER32.dll_wsprintfA)(&var_54h, \"... %d%%\", uVar6);\n                        uVar6 = 0;\n                        fcn.00404e50(0, &var_54h);\n                        var_ch = iVar1;\n                    }\n                    if (iVar3 == 0) break;\n                    if (arg_10h == 0) {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, uVar2, iVar3, &lpNumberOfBytesWritten, 0);\n                        if (iVar1 == 0) {\n                            return 0xfffffffe;\n                        }\n                        if (lpNumberOfBytesWritten != iVar3) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        var_8h = var_8h - iVar3;\n                        uVar2 = *0x413400;\n                    }\n                    var_4h = var_4h + iVar3;\n                    if (var_14h == 1) {\n                        return var_4h;\n                    }\n                }\n                if (nNumber < 1) {\n                    return var_4h;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1158
    },
    "00403eba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403eba(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((arg_8h - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "00403f9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f9c(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar3 = _sym.imp.USER32.dll_GetDlgItem;\n    pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x44269c - (iVar7 * 4 + 4));\n        }\n        cVar2 = *(iVar7 + *0x4466f8);\n        var_8h = 0;\n        pcVar10 = iVar7 + *0x4466f8 + 1;\n        var_4h = fcn.00403f67;\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = pcVar10;\n        fcn.00403e53(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.00403e53(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.00403e75(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00403e88(uVar6);\n        pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x4466d0 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar5)(uVar6, 0x443, 0, iVar7);\n        (*pcVar5)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenA(pcVar10);\n        (*pcVar5)(uVar6, 0x435, 0, uVar8);\n        *0x42948c = 0;\n        (*pcVar5)(uVar6, 0x449, cVar2, &var_ch);\n        *0x42948c = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x42948c != 0)) || (puVar1 = *0x42d498 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x00404213;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar5)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.00403e75(uVar9 & 1);\n        fcn.00404226();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*pcVar3)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x43e660;\n            if (var_8h - var_ch < 0x4000) {\n                (*pcVar5)(uVar6, 1099, 0, &var_ch);\n                pcVar4 = _sym.imp.USER32.dll_LoadCursorA;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n                pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(arg_8h, \"open\", var_4h, 0, 0, 1);\n                uVar6 = (*pcVar4)(0, 0x7f00);\n                (*pcVar3)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar5)(*0x4466c8, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar5)(*0x4466c8, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x42948c = *0x42948c + 1;\n    }\ncode_r0x00404213:\n    uVar6 = fcn.00403eba(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1380
    },
    "004046ee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004046ee(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x4466e8;\n    iVar3 = *0x4466ec;\n    if (*0x4466ec != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x2018;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 166
    },
    "00404e50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e50(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x4426a4;\n    if (*0x4426a4 != 0) {\n        var_8h = *0x446774;\n        uVar4 = *0x446774 & 1;\n        if (uVar4 == 0) {\n            fcn.00405b87(0x42d4a0, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenA(0x42d4a0);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenA(lpString2);\n            if (0x3fff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatA(0x42d4a0, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x442688, 0x42d4a0);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x42d4a0;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x1007 - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 + 0x42d4a0) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 536
    },
    "00404f22": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404f22(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x4466ec;\n    iVar2 = *0x4466e8;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x446778 = *0x446778 | uVar1;\n    uVar5 = 0;\n    fcn.00403e9f(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401389();\n                if (iVar2 != 0) {\n                    *0x44674c = *0x44674c + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x806;\n        } while (iVar4 != 0);\n    }\n    fcn.00403e9f(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x44674c;\n}\n",
        "token_count": 308
    },
    "00405f02": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.00405f02(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x43e254 == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x43e250) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x43e250);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 308
    },
    "00401389": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x4466f0,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x4426ac = *0x4426ac + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x4426ac, 30000, *0x442694, 0);\n            (*_sym.imp.USER32.dll_SendMessageA)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 318
    },
    "00404226": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404226(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x429488;\n    if (*0x44674c == 0) {\n        uVar1 = *0x4314bc;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 87
    },
    "0040471b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040471b(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x110c, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 321
    },
    "00405379": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405379(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x446760 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x446768 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x409214 = *0x4466c8;\n        *0x409218 = *0x4466c0;\n        *0x40921c = param_1;\n        *0x409220 = 0x4426c0;\n        *0x409224 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x409210);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0040568e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.0040568e(char *param_1)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    pcVar2 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    uVar3 = (*pcVar1)(pcVar2);\n    if (((*param_1 == '\\0') || (*pcVar2 != ':')) || (pcVar2[1] != '\\\\')) {\n        if ((*param_1 == '\\\\') && (param_1[1] == '\\\\')) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                pcVar2 = fcn.00405620();\n                if (*pcVar2 == '\\0') goto code_r0x004056db;\n                pcVar2 = pcVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x004056db:\n            pcVar2 = NULL;\n        }\n    }\n    else {\n        pcVar2 = (*pcVar1)(uVar3);\n    }\n    return pcVar2;\n}\n",
        "token_count": 269
    },
    "00405b87": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405b87(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *ppidl;\n    int32_t var_4h;\n    \n    puVar7 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x44269c - (arg_ch * 4 + 4));\n    }\n    puVar5 = *0x4466f8 + arg_ch;\n    arg_8h_00 = 0x43e660;\n    if ((0x43e65f < arg_8h) && (arg_8h + -0x10f998 < 0x4000)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar7;\n    }\n    do {\n        while( true ) {\n            uVar1 = *puVar5;\n            if ((uVar1 == 0) || (0x1fff < arg_8h_00 + -0x10f998)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00405b65(arg_8h, 0x43e660);\n                }\n                return;\n            }\n            puVar6 = puVar5 + 1;\n            if (uVar1 < 4) break;\n            if (uVar1 == 4) {\n                *arg_8h_00 = *puVar6;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar6;\n            }\n        }\n        uVar2 = puVar5[2];\n        var_ch = uVar2;\n        uVar3 = *puVar6;\n        puVar7 = uVar3;\n        uVar8 = (var_ch & 0x7f) << 7 | puVar7 & 0x7f;\n        var_18h = CONCAT22(uVar3 >> 7, uVar3) | 0x8000;\n        var_10h = CONCAT22(uVar2 >> 7, uVar2) | 0x8000;\n        var_14h = puVar7;\n        if (uVar1 == 2) {\n            iVar9 = 2;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n            if ((((iVar4 < 0) && (iVar4 != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = 1;\n            }\n            if (*0x446744 != 0) {\n                var_10h = 0x4;\n                iVar9 = 4;\n            }\n            if (uVar3 < '\\0') {\n                var_18h = (puVar7 & 0x3f) + *0x4466f8;\n                var_10h = puVar7 & 0x40;\n                var_14h = arg_8h_00;\n                fcn.00405a4c(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", var_18h, arg_8h_00, var_10h);\n                if (*arg_8h_00 == 0) {\n                    fcn.00405b87(arg_8h_00, var_ch);\n                    goto code_r0x00405d2c;\n                }\ncode_r0x00405d31:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatA();\n                }\n            }\n            else {\n                if (puVar7 == 0x25) {\n                    var_10h = 0x2000;\n                    var_18h = 0x405cb9;\n                    var_14h = arg_8h_00;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n                }\n                else {\n                    if (puVar7 == 0x24) {\n                        var_10h = 0x2000;\n                        var_18h = 0x405ccc;\n                        var_14h = arg_8h_00;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)();\n                        iVar9 = 0;\n                    }\n                    while (iVar9 != 0) {\n                        iVar9 = iVar9 + -1;\n                        if ((*0x4466c4 != NULL) && (var_4h != 0)) {\n                            var_10h = arg_8h_00;\n                            var_14h = NULL;\n                            var_18h = NULL;\n                            iVar4 = (**0x4466c4)(*0x4466c8, (&fcn.00405b87::var_18h)[iVar9]);\n                            if (iVar4 == 0) break;\n                        }\n                        var_10h = &fcn.00405b87::ppidl;\n                        var_14h = (&fcn.00405b87::var_18h)[iVar9];\n                        var_18h = *0x4466c8;\n                        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)();\n                        if (iVar4 == 0) {\n                            var_14h = ppidl;\n                            var_18h = 0x405d16;\n                            var_10h = arg_8h_00;\n                            iVar4 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)();\n                            var_18h = ppidl;\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                            if (iVar4 != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x00405d2c:\n                if (*arg_8h_00 != 0) goto code_r0x00405d31;\n            }\ncode_r0x00405d42:\n            fcn.00405dd0(arg_8h_00);\n        }\n        else if (uVar1 == 3) {\n            if (uVar8 == 0x1d) {\n                fcn.00405ac3(arg_8h_00, *0x4466c8);\n            }\n            else {\n                fcn.00405b65(arg_8h_00, uVar8 * 0x2000 + 0x447000);\n            }\n            if (uVar8 - 0x15 < 7) goto code_r0x00405d42;\n        }\n        else if (uVar1 == 1) {\n            fcn.00405b87(arg_8h_00, -1 - uVar8);\n        }\n        iVar4 = sub.KERNEL32.dll_lstrlenA();\n        arg_8h_00 = arg_8h_00 + iVar4;\n        puVar5 = puVar5 + 3;\n    } while( true );\n}\n",
        "token_count": 1733
    },
    "00405dd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405dd0(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.00405662(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffffff00 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (pcVar4 = fcn.00405620(\"*?|<>/\\\":\", uVar3),  *pcVar4 == '\\0')) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.004057b1(puVar6, puVar7, iVar5 - puVar7);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffffff00 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "004045d3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004045d3(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 1) {\n        fcn.0040535d(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x466, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00405a4c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a4c(uint hKey, uint lpcbData, uint lpValueName, uchar *lpType, int32_t samDesired)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = lpType;\n    *lpType = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpcbData, 0, -(samDesired != 0) & 0x100 | 0x20019, &samDesired)\n    ;\n    if (iVar2 == 0) {\n        lpcbData = 0x2000;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(samDesired, lpValueName, 0, &lpType, puVar1, &lpcbData);\n        if ((iVar2 != 0) || ((lpType != 0x1 && (lpType != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x1fff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(samDesired);\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0040136d": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nvoid fcn.0040136d(int32_t param_1)\n\n{\n    if (param_1 < 0) {\n        fcn.00405adc((param_1 + 1) * -0x2000 + 0x447000);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "004029fd": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nuint fcn.004029fd(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.00405b87((uVar1 >> 4) * 0x2000 + 0x409398, *(*0x413398 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.00405dd0(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 147
    },
    "0040424a": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040424a(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.00403e53(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 1000, *(arg_14h + 0x3c) * 0x2000 + 0x447000);\n    }\n    fcn.00403eba(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 149
    },
    "00404291": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.00404291(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint32_t arg_10h_00;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    uint32_t uVar9;\n    uint *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    int32_t var_30h;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = *0x42d498;\n    var_8h = *(*0x42d498 + 0x38);\n    iVar6 = *(*0x42d498 + 0x3c) * 0x2000 + 0x447000;\n    if (arg_ch == 0x40b) {\n        fcn.0040535d(0x3fb, iVar6);\n        fcn.00405dd0(iVar6);\n    }\n    if (arg_ch == 0x110) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar2 = fcn.00405662(iVar6);\n        if ((iVar2 != 0) && (iVar2 = fcn.0040568e(iVar6),  iVar2 == 0)) {\n            fcn.004055f5(iVar6);\n        }\n        *0x442698 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextA)(uVar1, iVar6);\n        var_44h = *(arg_14h + 0x34);\n        var_48h = 0x1;\n        fcn.00403e53(arg_8h);\n        fcn.00403e53(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.00403e88(uVar1);\n        pcVar3 = fcn.00405e90(7);\n        if (pcVar3 == NULL) goto code_r0x004045be;\n        (*pcVar3)(uVar1, 1);\n    }\n    iVar2 = var_8h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x004045be;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar7 = &fcn.00404291::var_44h;\n            for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_48h = arg_8h;\n            var_40h = 0x4314c0;\n            var_34h = fcn.004045d3;\n            var_30h = iVar6;\n            var_3ch = fcn.00405b87(0x42b498, iVar2);\n            var_38h = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&fcn.00404291::var_48h);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                fcn.004055f5(iVar6);\n                if ((*(*0x4466d0 + 0x11c) != 0) && (iVar6 == 0x471000)) {\n                    uVar1 = 0;\n                    fcn.00405b87(0, *(*0x4466d0 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x43e660, 0x4314c0);\n                    if (iVar2 != 0) {\n                        sub.KERNEL32.dll_lstrcatA(uVar1, 0x43e660, 0x471000);\n                    }\n                }\n                *0x4314b0 = *0x4314b0 + 1;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x3fb, iVar6);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.0040535d(0x3fb, iVar6);\n        iVar2 = fcn.004056e3(iVar6);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00405b65(0x429490, iVar6);\n        puVar8 = NULL;\n        var_44h = 0;\n        var_ch = fcn.00405e90();\n        if (var_ch != NULL) {\n            do {\n                var_48h = &fcn.00404291::var_14h;\n                iVar2 = (*var_ch)(0x429490, &fcn.00404291::var_28h, &fcn.00404291::var_1ch);\n                if (iVar2 != 0) {\n                    var_ch = 0xa;\n                    uVar4 = var_24h << 0x16;\n                    var_24h = var_24h >> 10;\n                    var_8h = 1;\n                    uVar4 = var_28h >> 10 | uVar4;\n                    goto code_r0x00404528;\n                }\n                if (puVar8 != NULL) {\n                    *puVar8 = 0;\n                }\n                var_44h = 0x429490;\n                var_48h = 0x40449f;\n                puVar8 = fcn.0040563c();\n                *puVar8 = 0;\n                puVar8 = puVar8 + -1;\n                *puVar8 = 0x5c;\n            } while (puVar8 != 0x429490);\n        }\n        var_48h = iVar6;\n        fcn.00405b65(0x429490);\n        puVar8 = fcn.0040568e(0x429490);\n        if (puVar8 != NULL) {\n            *puVar8 = 0;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (0x429490, &fcn.00404291::var_10h, &fcn.00404291::var_18h, &fcn.00404291::var_ch, \n                           &fcn.00404291::var_24h);\n        uVar4 = arg_ch;\n        if (iVar6 != 0) {\n            var_44h = 0x400;\n            var_48h = var_ch;\n            uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_18h);\n            var_8h = 1;\n        }\ncode_r0x00404528:\n        uVar9 = 5;\n        var_48h = 0x40452f;\n        arg_10h_00 = fcn.004046ee();\n        if ((var_8h != 0) && (uVar4 < arg_10h_00)) {\n            var_4h = 2;\n        }\n        if (*(*0x44269c + 0x10) != 0) {\n            var_48h = arg_10h_00;\n            fcn.00404639(0x3ff, 0xfffffffb, arg_10h_00);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x400, 0x429480);\n                uVar9 = arg_8h;\n            }\n            else {\n                uVar9 = 0x400;\n                fcn.00404639(0x400, 0xfffffffc, uVar4);\n            }\n        }\n        *0x446764 = var_4h;\n        if (var_4h == 0) {\n            uVar9 = 7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_20h + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.00403e75(var_4h == 0, uVar9);\n        if ((var_4h == 0) && (*0x4314b0 == 0)) {\n            fcn.00404226();\n        }\n        *0x4314b0 = 0;\n    }\ncode_r0x004045be:\n    fcn.00403eba(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2173
    },
    "00405adc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405adc(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_4h = 1;\n    cVar2 = '\\n';\n    cVar6 = '9';\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_4h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if (('/' < uVar1) && (uVar1 < '8')) {\n            cVar2 = '\\b';\n            cVar6 = '7';\n        }\n        if ((uVar1 & 0xdf) == 0x58) {\n            cVar2 = '\\x10';\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (cVar6 < uVar4)) {\n            if ((cVar2 != '\\x10') || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_4h * iVar7;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        iVar7 = cVar2 * iVar7 + iVar5;\n    } while( true );\n}\n",
        "token_count": 446
    },
    "00402a3d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402a3d(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10ch;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpSubKey, 0, *0x446770 | 8, &phkResult);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(phkResult, 0, &var_10ch, 0x105);\n            if (iVar1 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                goto code_r0x00402ace;\n            }\n            iVar1 = fcn.00402a3d(phkResult, &var_10ch, 0);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        pcVar2 = fcn.00405e90(2);\n        if (pcVar2 == NULL) {\n            if ((*0x446770 != 0) || (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(hKey, lpSubKey),  iVar1 != 0)) {\ncode_r0x00402ace:\n                iVar1 = 1;\n            }\n        }\n        else {\n            iVar1 = (*pcVar2)(hKey, lpSubKey, *0x446770, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 394
    },
    "00402b42": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b42(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_40h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        iVar2 = *0x413468;\n        if (*0x427478 <= *0x413468) {\n            iVar2 = *0x427478;\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, *0x427478);\n        (*_sym.imp.USER32.dll_wsprintfA)(&var_40h, \"verifying installer: %d%%\", uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_40h);\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x406, &var_40h);\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "00404639": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404639(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint arg_ch_00;\n    int8_t iVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint *arg_8h;\n    uint var_40h;\n    uint var_20h;\n    \n    iVar6 = 0x14;\n    arg_ch_00 = 0xffffffdc;\n    if (arg_10h < 0x100000) {\n        iVar6 = 10;\n        arg_ch_00 = 0xffffffdd;\n    }\n    if (arg_10h < 0x400) {\n        iVar6 = 0;\n        arg_ch_00 = 0xffffffde;\n    }\n    if (arg_10h < 0xffff3333) {\n        arg_10h = arg_10h + (1 << iVar6) / 0x14;\n    }\n    uVar1 = fcn.00405b87(&var_20h, 0xffffffdf);\n    arg_8h = &var_40h;\n    uVar2 = fcn.00405b87(arg_8h, arg_ch_00);\n    uVar5 = ((arg_10h & 0xffffff) * 10 >> iVar6) % 10;\n    arg_10h = arg_10h >> iVar6;\n    pcVar8 = \"%u.%u%s%s\";\n    uVar7 = 0x4314c0;\n    iVar3 = fcn.00405b87(0x4314c0, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenA(0x4314c0, uVar7, arg_ch, pcVar8, arg_10h, uVar5, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar3 + iVar4);\n    sub.USER32.dll_SetDlgItemTextA(*0x442698, nIDDlgItem, 0x4314c0);\n    return;\n}\n",
        "token_count": 494
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x4466ec != 0)) {\n        puVar2 = *0x4466e8 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x806;\n        } while (uVar3 < *0x4466ec);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00402af2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402af2(int32_t param_1)\n\n{\n    if (param_1 == 0) {\n        param_1 = *0x446744 + -0x7fffffff;\n    }\n    return param_1;\n}\n",
        "token_count": 56
    },
    "004038b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004038b3(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    uVar4 = 0xffff;\n    uVar1 = fcn.00405adc(0x477000);\n    do {\n        if (*0x446704 != 0) {\n            puVar3 = *(*0x4466d0 + 100) * *0x446704 + *0x446700;\n            iVar5 = *0x446704;\n            do {\n                puVar3 = puVar3 - *(*0x4466d0 + 100);\n                iVar5 = iVar5 + -1;\n                if (((*puVar3 ^ uVar1) & uVar4) == 0) {\n                    *0x4426a0 = *(puVar3 + 1);\n                    *0x446768 = *(puVar3 + 3);\n                    *0x44269c = puVar3 + 5;\n                    if (*0x44269c != NULL) {\n                        fcn.00405ac3(0x477000, *puVar3);\n                        uVar2 = fcn.00405b87(0x4426c0, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextA)(*0x4314a0, uVar2);\n                        piVar6 = *0x4466e8;\n                        for (iVar5 = *0x4466ec; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            if (*piVar6 != 0) {\n                                fcn.00405b87(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x806;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar5 != 0);\n        }\n        if (uVar4 == 0xffff) {\n            uVar4 = 0x3ff;\n        }\n        else {\n            uVar4 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 479
    },
    "00403e53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403e53(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00405b87(0, param_3);\n    sub.USER32.dll_SetDlgItemTextA(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "00403f67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f67(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x42948c + arg_8h, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    *arg_14h = iVar1;\n    *0x42948c = *0x42948c + iVar1;\n    return 0;\n}\n",
        "token_count": 135
    },
    "004055f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004055f5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, iVar1 + param_1);\n    if (*pcVar2 != '\\\\') {\n        sub.KERNEL32.dll_lstrcatA(param_1, 0x409014);\n    }\n    return param_1;\n}\n",
        "token_count": 116
    },
    "0040563c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.0040563c(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = param_1 + iVar1;\n    do {\n        if (*pcVar2 == '\\\\') break;\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar2);\n    } while (param_1 < pcVar2);\n    *pcVar2 = '\\0';\n    return pcVar2 + 1;\n}\n",
        "token_count": 129
    },
    "00405825": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00405825(uchar *arg_8h, uint lpPathName)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = arg_8h;\n    iVar4 = 100;\n    do {\n        iVar4 = iVar4 + -1;\n        arg_8h = *0x409368;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        arg_8h._0_3_ = CONCAT12(arg_8h._2_1_ + uVar2 % 0x1a, arg_8h._0_2_);\n        arg_8h = arg_8h & 0xff000000 | arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &arg_8h, 0, puVar1);\n        if (iVar3 != 0) {\n            return puVar1;\n        }\n    } while (iVar4 != 0);\n    *puVar1 = 0;\n    return NULL;\n}\n",
        "token_count": 253
    },
    "00405ac3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405ac3(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_1, 0x407318, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "004057f6": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004057f6(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "00405318": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405318(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x43d4c8 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, lpCommandLine, 0, 0, 0, 0, 0, 0, 0x43d4c8, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 146
    },
    "00402b07": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402b07(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004029fd(0x22, 0, *0x446770 | arg_8h, &arg_8h);\n    uVar1 = fcn.00402af2(*(*0x413398 + 4), uVar1);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 138
    },
    "0040353e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040353e(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x429484; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00403559": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403559(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x429484;\n    fcn.0040353e(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x429484 = NULL;\n    return;\n}\n",
        "token_count": 143
    },
    "0040358e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040358e(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x429484;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "00405620": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405620(char *param_1, char param_2)\n\n{\n    for (; (*param_1 != '\\0' && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040575b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040575b(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "004057b1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004057b1(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00405ec9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ec9(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00405f70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405f70(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(iVar1 + param_1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x78) = 0xffffffff;\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    return;\n}\n",
        "token_count": 151
    },
    "00403082": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nvoid fcn.00403082(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.00405dd0(0x479000);\n    iVar1 = fcn.00405662(0x479000);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.004055f5(0x479000);\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x479000, 0);\n    fcn.00405825(0x477000, 0x479000);\n    return;\n}\n",
        "token_count": 122
    },
    "00405e90": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00405e90(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 * 8 + 0x409238);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    if ((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, *(param_1 * 8 + 0x40923c));\n    return;\n}\n",
        "token_count": 148
    },
    "0040586e": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040586e(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 143
    }
}