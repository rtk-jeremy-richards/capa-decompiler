{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00404571": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404571(uint32_t arg_8h)\n\n{\n    fcn.0040454e();\n    if ((arg_8h & 1) != 0) {\n        fcn.004049e2();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00404aa3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404aa3(uint32_t arg_8h)\n\n{\n    fcn.00404a93();\n    if ((arg_8h & 1) != 0) {\n        fcn.004049e2();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040aa2b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040aa2b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00406116();\n    var_4h = 0;\n    if (*0x7fad88 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x402c1c);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x402c10);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x7fad88 = fcn.004060a4(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402c00);\n        *0x7fad8c = fcn.004060a4(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402bec);\n        *0x7fad90 = fcn.004060a4(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402bd0);\n        *0x7fad98 = fcn.004060a4(uVar3);\n        if (*0x7fad98 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x402bb8);\n            *0x7fad94 = fcn.004060a4(uVar3);\n        }\n    }\n    if ((*0x7fad94 != iVar1) && (*0x7fad98 != iVar1)) {\n        pcVar4 = fcn.0040611f(*0x7fad94);\n        pcVar5 = fcn.0040611f(*0x7fad98);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040ab6d;\n        }\n    }\n    if ((((*0x7fad8c != iVar1) && (pcVar4 = fcn.0040611f(*0x7fad8c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x7fad90 != iVar1 && (pcVar4 = fcn.0040611f(*0x7fad90),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040ab6d:\n    pcVar4 = fcn.0040611f(*0x7fad88);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 834
    },
    "0040c50e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c50e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9b40 ^ &stack0xfffffffc;\n    fcn.00404737(arg_10h);\n    var_14h = fcn.0040d4f9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040ca71(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c567:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c5a7;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c599:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c5a7;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c599;\n        goto code_r0x0040c567;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c5a7:\n    fcn.00409abb(unaff_EBX);\n    return;\n}\n",
        "token_count": 512
    },
    "0040c5b6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c5b6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9b40 ^ &stack0xfffffffc;\n    fcn.00404737(arg_10h);\n    var_14h = fcn.0040d4f9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040cfb5(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c60f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c64f;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c641:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c64f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c641;\n        goto code_r0x0040c60f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c64f:\n    fcn.00409abb(unaff_EBX);\n    return;\n}\n",
        "token_count": 513
    },
    "0040d4f9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d7bb)\n// WARNING: Removing unreachable block (ram,0x0040d784)\n// WARNING: Removing unreachable block (ram,0x0040db6c)\n// WARNING: Removing unreachable block (ram,0x0040d793)\n// WARNING: Removing unreachable block (ram,0x0040d79b)\n// WARNING: Removing unreachable block (ram,0x0040d7a1)\n// WARNING: Removing unreachable block (ram,0x0040d7a4)\n// WARNING: Removing unreachable block (ram,0x0040d7ab)\n// WARNING: Removing unreachable block (ram,0x0040d7b5)\n// WARNING: Removing unreachable block (ram,0x0040d810)\n// WARNING: Removing unreachable block (ram,0x0040d80a)\n// WARNING: Removing unreachable block (ram,0x0040d816)\n// WARNING: Removing unreachable block (ram,0x0040d833)\n// WARNING: Removing unreachable block (ram,0x0040d835)\n// WARNING: Removing unreachable block (ram,0x0040d83d)\n// WARNING: Removing unreachable block (ram,0x0040d840)\n// WARNING: Removing unreachable block (ram,0x0040d845)\n// WARNING: Removing unreachable block (ram,0x0040d848)\n// WARNING: Removing unreachable block (ram,0x0040db75)\n// WARNING: Removing unreachable block (ram,0x0040d853)\n// WARNING: Removing unreachable block (ram,0x0040db8c)\n// WARNING: Removing unreachable block (ram,0x0040db93)\n// WARNING: Removing unreachable block (ram,0x0040d85e)\n// WARNING: Removing unreachable block (ram,0x0040d871)\n// WARNING: Removing unreachable block (ram,0x0040d873)\n// WARNING: Removing unreachable block (ram,0x0040d880)\n// WARNING: Removing unreachable block (ram,0x0040d885)\n// WARNING: Removing unreachable block (ram,0x0040d88b)\n// WARNING: Removing unreachable block (ram,0x0040d894)\n// WARNING: Removing unreachable block (ram,0x0040d89b)\n// WARNING: Removing unreachable block (ram,0x0040d8b3)\n// WARNING: Removing unreachable block (ram,0x0040d8c4)\n// WARNING: Removing unreachable block (ram,0x0040d8d2)\n// WARNING: Removing unreachable block (ram,0x0040d911)\n// WARNING: Removing unreachable block (ram,0x0040d91a)\n// WARNING: Removing unreachable block (ram,0x0040db32)\n// WARNING: Removing unreachable block (ram,0x0040d928)\n// WARNING: Removing unreachable block (ram,0x0040d932)\n// WARNING: Removing unreachable block (ram,0x0040db4d)\n// WARNING: Removing unreachable block (ram,0x0040d93f)\n// WARNING: Removing unreachable block (ram,0x0040d946)\n// WARNING: Removing unreachable block (ram,0x0040d950)\n// WARNING: Removing unreachable block (ram,0x0040d955)\n// WARNING: Removing unreachable block (ram,0x0040d965)\n// WARNING: Removing unreachable block (ram,0x0040d96a)\n// WARNING: Removing unreachable block (ram,0x0040d974)\n// WARNING: Removing unreachable block (ram,0x0040d979)\n// WARNING: Removing unreachable block (ram,0x0040d98b)\n// WARNING: Removing unreachable block (ram,0x0040d998)\n// WARNING: Removing unreachable block (ram,0x0040d9a7)\n// WARNING: Removing unreachable block (ram,0x0040d9b4)\n// WARNING: Removing unreachable block (ram,0x0040d9d1)\n// WARNING: Removing unreachable block (ram,0x0040d9d5)\n// WARNING: Removing unreachable block (ram,0x0040d9dc)\n// WARNING: Removing unreachable block (ram,0x0040d9e5)\n// WARNING: Removing unreachable block (ram,0x0040d9e8)\n// WARNING: Removing unreachable block (ram,0x0040d9f9)\n// WARNING: Removing unreachable block (ram,0x0040da07)\n// WARNING: Removing unreachable block (ram,0x0040da12)\n// WARNING: Removing unreachable block (ram,0x0040da19)\n// WARNING: Removing unreachable block (ram,0x0040da44)\n// WARNING: Removing unreachable block (ram,0x0040da49)\n// WARNING: Removing unreachable block (ram,0x0040da54)\n// WARNING: Removing unreachable block (ram,0x0040da5d)\n// WARNING: Removing unreachable block (ram,0x0040da63)\n// WARNING: Removing unreachable block (ram,0x0040da66)\n// WARNING: Removing unreachable block (ram,0x0040da8c)\n// WARNING: Removing unreachable block (ram,0x0040da91)\n// WARNING: Removing unreachable block (ram,0x0040da96)\n// WARNING: Removing unreachable block (ram,0x0040daa3)\n// WARNING: Removing unreachable block (ram,0x0040dab4)\n// WARNING: Removing unreachable block (ram,0x0040dae5)\n// WARNING: Removing unreachable block (ram,0x0040daba)\n// WARNING: Removing unreachable block (ram,0x0040dae0)\n// WARNING: Removing unreachable block (ram,0x0040dac4)\n// WARNING: Removing unreachable block (ram,0x0040dada)\n// WARNING: Removing unreachable block (ram,0x0040dad3)\n// WARNING: Removing unreachable block (ram,0x0040dae8)\n// WARNING: Removing unreachable block (ram,0x0040db15)\n// WARNING: Removing unreachable block (ram,0x0040daf2)\n// WARNING: Removing unreachable block (ram,0x0040d97d)\n// WARNING: Removing unreachable block (ram,0x0040d95a)\n// WARNING: Removing unreachable block (ram,0x0040db50)\n// WARNING: Removing unreachable block (ram,0x0040d896)\n// WARNING: Removing unreachable block (ram,0x0040db5a)\n// WARNING: Removing unreachable block (ram,0x0040db9b)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040d4f9(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.004052f4();\n        *puVar2 = 0x16;\n        fcn.00407b13(0, 0, 0, 0, 0);\n        fcn.00409abb(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040d58c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40dbc1\n    (**0x40dbc1)();\n    return;\n}\n",
        "token_count": 1879
    },
    "00403120": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00403120(void)\n\n{\n    *0x7fb191 = 0x6c;\n    *0x7fb18b = 0x6d;\n    *0x7fb18a = 0x69;\n    *0x7fb18c = 0x67;\n    *0x7fb190 = 100;\n    *0x7fb193 = 0;\n    *0x7fb18d = 0x33;\n    *0x7fb189 = 0x73;\n    *0x7fb192 = 0x6c;\n    *0x7fb18f = 0x2e;\n    *0x7fb18e = 0x32;\n    *0x7fb188 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x7fb188);\n    return;\n}\n",
        "token_count": 197
    },
    "00403190": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403190(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uchar auStack56 [4];\n    uint uStack52;\n    uchar auStack48 [48];\n    \n    if (*0x2f51bbc == 3) {\n        uStack52 = 0;\n        fcn.004092a0(auStack48, 0, 0x30);\n        (*_sym.imp.KERNEL32.dll_GetDefaultCommConfigA)(0x402d1c, &uStack52, auStack56);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n    }\n    *param_1 = param_3 ^ param_2;\n    return;\n}\n",
        "token_count": 168
    },
    "0040ca71": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ca71(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040cf72;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040cba6;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040cbad;\ncode_r0x0040cba6:\n                        do {\n                            var_4h = 1;\ncode_r0x0040cbad:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040cbbb;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040cbbb:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9dc4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9dc4 < iVar12) {\n                if (iVar12 < *0x7f9dc0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x7f9dc0;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040cf72;\n            }\n            var_10h = *0x7f9dc4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040cd5e;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040cd5e:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040cf72:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3676
    },
    "0040cfb5": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cfb5(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040d4b6;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x7f9de0 - 1;\n        iVar4 = *0x7f9de0 + (*0x7f9de0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x7f9de0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040d0ea;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040d0f1;\ncode_r0x0040d0ea:\n                        do {\n                            var_4h = 1;\ncode_r0x0040d0f1:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040d0ff;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040d0ff:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9ddc - *0x7f9de0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9ddc < iVar12) {\n                if (iVar12 < *0x7f9dd8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x7f9dec;\n                    iVar4 = *0x7f9de4 + (*0x7f9de4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9de4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x7f9de4 + (*0x7f9de4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9de4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x7f9dec + *0x7f9dd8;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040d4b6;\n            }\n            var_10h = *0x7f9ddc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x7f9de0 - 1;\n            iVar12 = *0x7f9de0 + (*0x7f9de0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x7f9de0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040d2a2;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040d2a2:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x7f9de4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040d4b6:\n    var_20h = iVar12 << (0x1fU - *0x7f9de4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x7f9de8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x7f9de8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3707
    },
    "0040454e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040454e(uint *param_1)\n\n{\n    *param_1 = 0x401240;\n    if (param_1[2] != 0) {\n        fcn.00404e8b(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040696f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00406a62: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00406a67)\n// WARNING: Removing unreachable block (ram,0x00406a95)\n// WARNING: Removing unreachable block (ram,0x00406a6d)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040696f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406b34(0x7f7e48, 0x18);\n    fcn.00407cb5(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x7fa774 != 1) {\n        *0x7fa770 = 1;\n        *0x7fa76c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040611f(*0x2f5360c);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040611f(*0x2f53608);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00406116();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040611f(*piVar2);\n                        iVar3 = fcn.00406116();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040611f(*0x2f5360c);\n                        piVar1 = fcn.0040611f(*0x2f53608);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004068a9(0x4011f8);\n        }\n        fcn.004068a9(0x401200);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00407bdb(8);\n    }\n    return;\n}\n",
        "token_count": 805
    },
    "00409abb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409abb(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7f9b40) {\n        return;\n    }\n    *0x7faeb8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7faebc = &arg_8h;\n    *0x7fadf8 = 0x10001;\n    *0x7fada0 = 0xc0000409;\n    *0x7fada4 = 1;\n    var_328h = *0x7f9b40;\n    var_324h = *0x7f9b44;\n    *0x7fadac = unaff_retaddr;\n    *0x7fae84 = in_GS;\n    *0x7fae88 = in_FS;\n    *0x7fae8c = in_ES;\n    *0x7fae90 = in_DS;\n    *0x7fae94 = unaff_EDI;\n    *0x7fae98 = unaff_ESI;\n    *0x7fae9c = unaff_EBX;\n    *0x7faea0 = in_EDX;\n    *0x7faea4 = in_ECX;\n    *0x7faea8 = in_EAX;\n    *0x7faeac = unaff_EBP;\n    *0x7faeb0 = unaff_retaddr;\n    *0x7faeb4 = in_CS;\n    *0x7faec0 = in_SS;\n    *0x7fadf0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040ac4a(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402c68);\n    if (*0x7fadf0 == 0) {\n        fcn.0040ac4a(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 856
    },
    "0040a80d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040a80d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00407bdb(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00403220": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00403220(uint32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uStack20;\n    uchar auStack4 [4];\n    \n    uVar3 = *param_1;\n    uVar4 = param_1[1];\n    fcn.00403200();\n    uStack20 = uVar3;\n    puVar1 = *0x7fa0e4;\n    iVar2 = *0x7fa0e0;\n    if (*0x2f51bbc == 0x14) {\n        (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n        puVar1 = *0x7fa0e4;\n        iVar2 = *0x7fa0e0;\n    }\n    do {\n        if (*0x2f51bbc == 0xfa9) {\n            *0x2f51bb8 = 0xedeb2e40;\n        }\n        else if (*0x2f51bbc == 0x3eb) {\n            *0x2f51b2c = 0;\n        }\n        *0x2f51bb4 = 0xf4ea3dee;\n        fcn.00403210();\n        if (*0x2f51bbc == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)(0, param_1);\n        }\n        uVar4 = uVar4 - (uVar3 >> 5 ^ uVar3 * 0x10 + iVar2 ^ uStack20 + 0x23f);\n        if (*0x2f51bbc == 0xc) {\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, auStack4, 0);\n        }\n        fcn.00403180();\n        fcn.00403190();\n        uVar3 = uVar3 - unaff_ESI;\n        uStack20 = uVar4;\n    } while (uVar4 != 0xfffffdc2);\n    puVar1[1] = 0xfffffdc2;\n    *puVar1 = uVar3;\n    return;\n}\n",
        "token_count": 503
    },
    "004033d0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.004033d0(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    \n    fcn.0040c9e0();\n    pcVar5 = _sym.imp.KERNEL32.dll_GetNumberFormatW;\n    pcVar4 = _sym.imp.KERNEL32.dll_WriteProfileSectionA;\n    pcVar3 = _sym.imp.KERNEL32.dll_FindNextVolumeW;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    uVar6 = *0x2f51b30;\n    uVar1 = *0x2f51bbc >> 3;\n    while (uVar1 != 0) {\n        if (*0x2f51bbc == 0x959) {\n            (*pcVar5)();\n            (*pcVar3)();\n            (*pcVar4)();\n            (*pcVar2)();\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExW)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_EnumResourceTypesW)();\n            (*_sym.imp.KERNEL32.dll_SetThreadPriorityBoost)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)();\n            (*_sym.imp.KERNEL32.dll_BeginUpdateResourceW)();\n            (*_sym.imp.KERNEL32.dll_GetComputerNameA)();\n            (*_sym.imp.KERNEL32.dll_FindResourceExA)();\n        }\n        fcn.00403220();\n        uVar6 = uVar6 - 1;\n        uVar1 = uVar6;\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "00403200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403200(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 45
    },
    "00403210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403210(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 47
    },
    "00403510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403510(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00403550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00403550(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uchar *puStack3040;\n    uchar *puStack3036;\n    uint uStack3032;\n    uint uStack3028;\n    uchar *puStack3024;\n    uchar *puStack3020;\n    uint uStack3016;\n    uchar *puStack3012;\n    uchar auStack2948 [4];\n    uchar auStack2944 [4];\n    uint uStack2940;\n    uint uStack2936;\n    uint uStack2932;\n    uint uStack2928;\n    uint uStack2924;\n    uint uStack2920;\n    uint uStack2912;\n    uint uStack2908;\n    uint uStack2904;\n    uint uStack2900;\n    uint uStack2896;\n    uint uStack2892;\n    uint uStack2888;\n    uint uStack2884;\n    uint uStack2880;\n    uint uStack2876;\n    uint uStack2872;\n    uint uStack2864;\n    uint uStack2860;\n    uint uStack2856;\n    uint uStack2852;\n    uint uStack2848;\n    uint uStack2844;\n    uint uStack2840;\n    uint uStack2836;\n    uint uStack2832;\n    uint uStack2828;\n    ushort uStack2824;\n    ushort uStack2822;\n    ushort uStack2820;\n    uint uStack2818;\n    uint uStack2814;\n    ushort uStack2810;\n    ushort uStack2808;\n    uint uStack2806;\n    uint uStack2802;\n    uint uStack2798;\n    ushort uStack2794;\n    uchar auStack2668 [500];\n    uchar auStack2168 [2168];\n    \n    if (*0x2f51bbc == 0xac) {\n        (*_sym.imp.USER32.dll_GetWindowLongW)();\n        (*_sym.imp.ole32.dll_OleQueryLinkFromData)();\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)();\n        (*_sym.imp.KERNEL32.dll_GetShortPathNameW)();\n        puStack3012 = NULL;\n        uStack3016 = 0x4035a9;\n        (*_sym.imp.KERNEL32.dll_DeleteTimerQueueTimer)();\n        uStack3016 = 0;\n        puStack3020 = NULL;\n        puStack3024 = NULL;\n        uStack3028 = 0x4035b5;\n        (*_sym.imp.KERNEL32.dll_SetHandleInformation)();\n        fcn.004044cd();\n        fcn.0040454e();\n        uStack2932 = 0x402e1c;\n        fcn.004044de(&stack0xfffff48c);\n        uStack2928 = 0x402e98;\n        fcn.0040454e();\n        fcn.00404531(0x7fa0d0);\n        uStack2936 = 0x402ea4;\n        fcn.0040454e();\n        fcn.004046fd(0);\n        fcn.0040487d(0, 0);\n        fcn.004049ed(0, 0);\n        fcn.004046fd(0);\n        fcn.00404713(0, 0);\n        fcn.0040472c();\n        puStack3012 = 0x403648;\n        fcn.004049cb(0);\n    }\n    pcVar5 = _sym.imp.USER32.dll_SetCaretPos;\n    pcVar4 = _sym.imp.USER32.dll_GetSysColorBrush;\n    pcVar1 = _sym.imp.USER32.dll_CharLowerBuffW;\n    iVar8 = 0;\n    do {\n        if (iVar8 < 0x9430) {\n            (*pcVar5)();\n            (*pcVar1)();\n            (*pcVar4)();\n        }\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x15460);\n    *0x2f51bbc = *0x2f51bbc + 0x11b1b;\n    fcn.00403530();\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n    pcVar5 = _sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA;\n    pcVar4 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    pcVar1 = _sym.imp.GDI32.dll_GetColorAdjustment;\n    uVar9 = 0;\n    if (*0x2f51bbc != 0) {\n        do {\n            (*0x2f51b30)[uVar9] = *(*0x2f534c4 + 0x11b1b + uVar9);\n            if (*0x2f51bbc == 0xa8) {\n                (*pcVar4)();\n                (*pcVar1)();\n                (*pcVar5)();\n            }\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < *0x2f51bbc);\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DebugBreak;\n    pcVar5 = _sym.imp.KERNEL32.dll_GetConsoleDisplayMode;\n    pcVar4 = _sym.imp.KERNEL32.dll_lstrlenW;\n    pcVar1 = _sym.imp.KERNEL32.dll_ReadConsoleA;\n    iVar8 = 0;\n    do {\n        if (*0x2f51bbc + iVar8 == 0xe) {\n            (*pcVar1)();\n            (*pcVar5)();\n            (*pcVar6)();\n            puStack3012 = 0x403753;\n            (*pcVar4)();\n            puStack3012 = NULL;\n            uStack3016 = 0;\n            puStack3020 = NULL;\n            puStack3024 = NULL;\n            uStack3028 = 0x403761;\n            (*_sym.imp.KERNEL32.dll_FindResourceExA)();\n            uStack3028 = 0;\n            uStack3032 = 0;\n            puStack3036 = NULL;\n            puStack3040 = 0x40376d;\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n            puStack3040 = &stack0xfffff594;\n            (*_sym.imp.KERNEL32.dll_GetCPInfoExW)(0, 0);\n            (*_sym.imp.KERNEL32.dll_lstrlenA)(0x402e2c);\n            (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                      (0, &stack0xfffff44c, &stack0xfffff440, &stack0xfffff480, &stack0xfffff450);\n            (*_sym.imp.KERNEL32.dll_InterlockedExchangeAdd)(&stack0xfffff430, 0);\n            (*_sym.imp.KERNEL32.dll_GetCalendarInfoA)(0, 0, 0, &stack0xfffff788, 0, &stack0xfffff420);\n        }\n        pcVar3 = _sym.imp.GDI32.dll_GetCharWidthW;\n        pcVar2 = _sym.imp.GDI32.dll_GetCharABCWidthsW;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x4f9409);\n    iVar8 = 0x4cc;\n    do {\n        (*pcVar3)();\n        puStack3012 = NULL;\n        uStack3016 = 0x40380a;\n        (*pcVar2)();\n        pcVar5 = _sym.imp.KERNEL32.dll_SetLastError;\n        pcVar4 = _sym.imp.KERNEL32.dll_GetLastError;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetConsoleAliasW;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    do {\n        (*pcVar4)();\n        (*pcVar5)();\n        (*pcVar1)();\n        if (iVar8 < 0x3b9f9c7) {\n            uStack2900 = 0x1b1f4c31;\n            uStack2896 = 0x62549a1c;\n            uStack2912 = 0x71b2ec6;\n            uStack2860 = 0x37beb127;\n            uStack2844 = 0x5f430172;\n            uStack2836 = 0x671b5d09;\n            uStack2940 = 0x2e853ae6;\n            uStack2876 = 0x52c4b444;\n            uStack2840 = 0x46a518f9;\n            uStack2848 = 0x35125e2b;\n            uStack2920 = 0x1ad10849;\n            uStack2872 = 0x381ee696;\n            uStack2924 = 0xe11e6c2;\n            uStack2864 = 0x5a39ca87;\n            uStack2824 = 0x888b;\n            uStack2822 = 0xc687;\n            uStack2888 = 0x860776d9;\n            uStack2904 = 0x5e38854d;\n            uStack2856 = 0xae3c1051;\n            uStack2908 = 0x11a722d3;\n            uStack2880 = 0x43bb0286;\n            uStack2852 = 0xbc2138cd;\n            uStack2932 = 0xaf698675;\n            uStack2936 = 0xc6aa655c;\n            uStack2884 = 0x187691d1;\n            uStack2828 = 0xf250e268;\n            uStack2892 = 0xe5da3acd;\n            uStack2832 = 0x7914cc58;\n        }\n    } while ((iVar8 < 0xbf08be) && (iVar8 = iVar8 + 1,  iVar8 < 0x19be898c));\n    fcn.004033d0();\n    fcn.00403510();\n    pcVar6 = _sym.imp.KERNEL32.dll_RemoveDirectoryW;\n    pcVar5 = _sym.imp.KERNEL32.dll_IsBadCodePtr;\n    pcVar4 = _sym.imp.KERNEL32.dll_TzSpecificLocalTimeToSystemTime;\n    pcVar1 = _sym.imp.KERNEL32.dll_ScrollConsoleScreenBufferW;\n    iVar8 = 0x7b;\n    do {\n        if (*0x2f51bbc == 0x86) {\n            (*pcVar6)();\n            uStack2806 = 0;\n            uStack2802 = 0;\n            uStack2798 = 0;\n            uStack2794 = 0;\n            uStack2822 = 0;\n            uStack2820 = 0;\n            uStack2818 = 0;\n            uStack2814 = 0;\n            uStack2810 = 0;\n            uStack2808 = 0;\n            uStack2824 = 0;\n            (*pcVar4)();\n            puStack3012 = 0x403d0a;\n            (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)();\n            puStack3012 = &stack0xfffff458;\n            uStack3016 = 0;\n            puStack3020 = &stack0xfffff45c;\n            puStack3024 = &stack0xfffff47c;\n            uStack3028 = 0;\n            uStack3032 = 0x403d30;\n            (*pcVar1)();\n            uStack3032 = 0;\n            puStack3036 = 0x403d34;\n            (*pcVar5)();\n            puStack3036 = &stack0xfffff494;\n            puStack3040 = NULL;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            (*_sym.imp.KERNEL32.dll_EnumResourceNamesW)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, 0);\n        }\n        pcVar7 = _sym.imp.KERNEL32.dll_TlsAlloc;\n        pcVar3 = _sym.imp.KERNEL32.dll_GetWindowsDirectoryA;\n        pcVar2 = _sym.imp.KERNEL32.dll_BackupSeek;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    iVar8 = 0x180ef;\n    do {\n        if (*0x2f51bbc == 0x1f) {\n            (*pcVar3)();\n            puStack3012 = NULL;\n            uStack3016 = 0x403db4;\n            (*pcVar2)();\n            uStack3016 = 0x403db6;\n            (*pcVar7)();\n        }\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    fcn.00403120();\n    *0x2f51b34 = *0x2f51b30;\n    (**0x2f51b30)();\n    return;\n}\n",
        "token_count": 2860
    },
    "00406a9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a9b(uint arg_8h)\n\n{\n    fcn.0040696f(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "004078ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004078de)\n// WARNING: Removing unreachable block (ram,0x004078e4)\n// WARNING: Removing unreachable block (ram,0x004078e6)\n\nvoid fcn.004078ca(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00421276": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid fcn.00421276(void)\n\n{\n    in(0x3c);\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 49
    },
    "00406d1c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406d1c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406b34(0x7f7e68, 0xc);\n    fcn.00407cb5(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x7fa77c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x7fa778;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00406d60;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404e8b(arg_8h_00);\ncode_r0x00406d60:\n        fcn.00404e8b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00406d83();\n    fcn.00406b79();\n    return;\n}\n",
        "token_count": 403
    }
}