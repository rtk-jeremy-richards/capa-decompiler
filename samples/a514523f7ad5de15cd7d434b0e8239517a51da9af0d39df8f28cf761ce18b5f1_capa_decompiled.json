{
    "0040879c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040879c(uint *param_1)\n\n{\n    *param_1 = 0x4012b4;\n    if (param_1[2] != 0) {\n        fcn.0040884d(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00406f70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406f70(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.00408cff(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.00408cf4(arg_10h);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 189
    },
    "00406fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406fc0(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t arg_8h;\n    \n    if (param_1 == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = param_1;\n        if (0xffffffff / param_1 == 0) {\n            param_1 = 0;\n            fcn.004086cf(&param_1);\n            fcn.00409cf9(&stack0xfffffff0, 0x8009c8);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.00408fd8(arg_8h);\n    return;\n}\n",
        "token_count": 166
    },
    "00407110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00407110(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x20) != 0) {\n        return **(in_EAX + 0x30);\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "00407130": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00407130(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x24) != 0) {\n        return **(in_EAX + 0x34);\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "00407150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00407150(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x20) != 0) {\n        return **(in_EAX + 0x30);\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "00407170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00407170(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x24) != 0) {\n        return **(in_EAX + 0x34);\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "00407190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407190(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint auStack16 [4];\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 < 2) {\n        auStack16[0] = 0;\n        fcn.004086cf(auStack16);\n        auStack16[0] = 0x401244;\n        fcn.00409cf9(auStack16, 0x8009c8);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00408fd8(param_1 * 2);\n    return;\n}\n",
        "token_count": 168
    },
    "004074e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.004074e0(uint noname_0, int32_t noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    int32_t arg_10h;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint auStack44 [3];\n    uint var_28h;\n    uint auStack28 [2];\n    uchar *puStack20;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_2;\n    \n    var_14h = 0x7ffe30;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    puStack20 = &stack0xffffffc8;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(in_ECX + 0x18);\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            uVar5 = uVar3 + uVar1;\n        }\n    }\n    uVar4 = uVar5 + 1;\n    var_10h_2 = 0;\n    if (uVar4 == 0) {\n        uVar4 = 0;\n    }\n    else if (0xffffffff / uVar4 == 0) {\n        auStack28[0] = 0;\n        fcn.004086cf(auStack28);\n        auStack44[0] = 0x401244;\n        fcn.00409cf9(auStack44, 0x8009c8);\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        puStack20 = &stack0xffffffbc;\n        fcn.00406fc0(var_4h + 1);\n        return 0x4075b2;\n    }\n    puStack20 = &stack0xffffffc8;\n    arg_8h_00 = fcn.00408fd8(uVar4);\n    var_10h_2 = 0xffffffff;\n    if (noname_1 != 0) {\n        if (*(in_ECX + 0x18) < 0x10) {\n            arg_10h = in_ECX + 4;\n        }\n        else {\n            arg_10h = *(in_ECX + 4);\n        }\n        fcn.00408cff(arg_8h_00, uVar5 + 1, arg_10h, noname_1);\n    }\n    if (0xf < *(in_ECX + 0x18)) {\n        fcn.00408cf4();\n    }\n    puVar2 = in_ECX + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h_00;\n    *(in_ECX + 0x18) = uVar5;\n    *(in_ECX + 0x14) = noname_1;\n    if (0xf < uVar5) {\n        puVar2 = arg_8h_00;\n    }\n    *(puVar2 + noname_1) = 0;\n    *in_FS_OFFSET = var_18h;\n    return puVar2;\n}\n",
        "token_count": 949
    },
    "0040997d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040997d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x409a28;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00409a54;\n        uStack36 = *0x8022c8 ^ &fcn.0040997d::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040997d::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040fd2b();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040997d::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 725
    },
    "00409c6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c6d(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x8022c8) {\n        return;\n    }\n    *0x805500 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x805504 = &arg_8h;\n    *0x805440 = 0x10001;\n    *0x8053e8 = 0xc0000409;\n    *0x8053ec = 1;\n    var_328h = *0x8022c8;\n    var_324h = *0x8022cc;\n    *0x8053f4 = unaff_retaddr;\n    *0x8054cc = in_GS;\n    *0x8054d0 = in_FS;\n    *0x8054d4 = in_ES;\n    *0x8054d8 = in_DS;\n    *0x8054dc = unaff_EDI;\n    *0x8054e0 = unaff_ESI;\n    *0x8054e4 = unaff_EBX;\n    *0x8054e8 = in_EDX;\n    *0x8054ec = in_ECX;\n    *0x8054f0 = in_EAX;\n    *0x8054f4 = unaff_EBP;\n    *0x8054f8 = unaff_retaddr;\n    *0x8054fc = in_CS;\n    *0x805508 = in_SS;\n    *0x805438 = (*_fcn.004010dc)();\n    fcn.0041004c(1);\n    (*_fcn.004010c8)(0);\n    (*_fcn.004010c4)(0x40239c);\n    if (*0x805438 == 0) {\n        fcn.0041004c(1);\n    }\n    uVar1 = (*_fcn.004010d8)(0xc0000409);\n    (*_fcn.004010d4)(uVar1);\n    return;\n}\n",
        "token_count": 815
    },
    "0040afa6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040afa6(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040edfc(0x800440, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.0040fd2b();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0041126b();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.004112c0(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040b06c();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0041126b();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040ee41();\n    return;\n}\n",
        "token_count": 568
    },
    "0040b06c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040b06c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040fd2b();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040fd2b();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0040b347": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b347(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00409bbb(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040fd2b();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040fd2b();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00409b94(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040b0cc(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "0040c897": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040c98a: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040c98f)\n// WARNING: Removing unreachable block (ram,0x0040c9bd)\n// WARNING: Removing unreachable block (ram,0x0040c995)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c897(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040edfc(0x800580, 0x18);\n    fcn.0040e304(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x804cdc != 1) {\n        *0x804cd8 = 1;\n        *0x804cd4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040fadf(*0xbfb06c);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040fadf(*0xbfb068);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040fad6();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040fadf(*piVar2);\n                        iVar3 = fcn.0040fad6();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040fadf(*0xbfb06c);\n                        piVar1 = fcn.0040fadf(*0xbfb068);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040c7d1(0x4011fc);\n        }\n        fcn.0040c7d1(0x401204);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040e22a(8);\n    }\n    return;\n}\n",
        "token_count": 801
    },
    "0040ccb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ccb0(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040e22a(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00414b21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00414b21(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040fad6();\n    var_4h = 0;\n    if (*0x805718 == 0) {\n        iVar2 = (*_fcn.0040105c)(0x402d30);\n        pcVar4 = _fcn.00401050;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_fcn.00401050)(iVar2, 0x402d24);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x805718 = fcn.0040fa64(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402d14);\n        *0x80571c = fcn.0040fa64(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402d00);\n        *0x805720 = fcn.0040fa64(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402ce4);\n        *0x805728 = fcn.0040fa64(uVar3);\n        if (*0x805728 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x402ccc);\n            *0x805724 = fcn.0040fa64(uVar3);\n        }\n    }\n    if ((*0x805724 != iVar1) && (*0x805728 != iVar1)) {\n        pcVar4 = fcn.0040fadf(*0x805724);\n        pcVar5 = fcn.0040fadf(*0x805728);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00414c63;\n        }\n    }\n    if ((((*0x80571c != iVar1) && (pcVar4 = fcn.0040fadf(*0x80571c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x805720 != iVar1 && (pcVar4 = fcn.0040fadf(*0x805720),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00414c63:\n    pcVar4 = fcn.0040fadf(*0x805718);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 806
    },
    "00405fd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fd0(uint *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint unaff_ESI;\n    uint arg_8h;\n    uint *puVar5;\n    \n    *param_1 = 0x40367c;\n    if ((*(param_1 + 0x10) & 1) != 0) {\n        fcn.00408cf4(*param_1[4]);\n    }\n    *param_1[4] = 0;\n    *param_1[8] = 0;\n    *param_1[0xc] = 0;\n    *param_1[5] = 0;\n    *param_1[9] = 0;\n    *param_1[0xd] = 0;\n    param_1[0x10] = param_1[0x10] & 0xfffffffe;\n    param_1[0xf] = 0;\n    puVar1 = param_1[0xe];\n    *param_1 = 0x403640;\n    puVar5 = param_1;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.00407d73(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.00407d9b(unaff_ESI);\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00408cf4(puVar1);\n    }\n    arg_8h = param_1[1];\n    fcn.00408482(arg_8h);\n    fcn.00408cf4(param_1[1], arg_8h, unaff_ESI, puVar5);\n    return;\n}\n",
        "token_count": 488
    },
    "00406660": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406660(uint *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint unaff_ESI;\n    uint arg_8h;\n    uint *puVar5;\n    \n    *param_1 = 0x403714;\n    if ((*(param_1 + 0x10) & 1) != 0) {\n        fcn.00408cf4(*param_1[4]);\n    }\n    *param_1[4] = 0;\n    *param_1[8] = 0;\n    *param_1[0xc] = 0;\n    *param_1[5] = 0;\n    *param_1[9] = 0;\n    *param_1[0xd] = 0;\n    param_1[0x10] = param_1[0x10] & 0xfffffffe;\n    param_1[0xf] = 0;\n    puVar1 = param_1[0xe];\n    *param_1 = 0x4036c0;\n    puVar5 = param_1;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.00407d73(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.00407d9b(unaff_ESI);\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00408cf4(puVar1);\n    }\n    arg_8h = param_1[1];\n    fcn.00408482(arg_8h);\n    fcn.00408cf4(param_1[1], arg_8h, unaff_ESI, puVar5);\n    return;\n}\n",
        "token_count": 488
    },
    "00406cb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t * __fastcall fcn.00406cb0(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t unaff_retaddr;\n    \n    uVar1 = *param_1;\n    if (uVar1 != 0) {\n        fcn.00407d73(0);\n        iVar2 = *(uVar1 + 4);\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            *(uVar1 + 4) = iVar2 + -1;\n        }\n        puVar3 = ~-(*(uVar1 + 4) != 0) & uVar1;\n        fcn.00407d9b();\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    if ((unaff_retaddr & 1) != 0) {\n        fcn.00408cf4(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 229
    },
    "00407e14": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e14(uint32_t arg_8h)\n\n{\n    fcn.00407df5();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408cf4();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00407e5d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e5d(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401274;\n    fcn.00407df5();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408cf4();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00407eac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407eac(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401280;\n    fcn.00407df5();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408cf4();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00408805": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408805(uint32_t arg_8h)\n\n{\n    fcn.0040879c();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408cf4();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00408826": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408826(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4012d4;\n    fcn.0040879c();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408cf4();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00408f97": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408f97(uint32_t arg_8h)\n\n{\n    fcn.00408f87();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408cf4();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040aed7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aed7(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401430;\n    fcn.0040879c();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408cf4();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "004105a2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004105a2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040edfc(0x8006d0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00409242();\n        *puVar2 = 0;\n        puVar2 = fcn.0040922f();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0xbf9f00)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0xbf9f20;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00415d73(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040922f();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00409242();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0041052d(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00410674(0x8006d0);\n                goto code_r0x0041066e;\n            }\n        }\n        puVar2 = fcn.00409242();\n        *puVar2 = 0;\n        puVar2 = fcn.0040922f();\n        *puVar2 = 9;\n        fcn.00408bf9(0, 0, 0, 0, 0);\n    }\ncode_r0x0041066e:\n    fcn.0040ee41();\n    return;\n}\n",
        "token_count": 630
    },
    "004155a6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004155a6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040edfc(0x800810, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00409242();\n        *puVar2 = 0;\n        puVar2 = fcn.0040922f();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0xbf9f00)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0xbf9f20;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00415d73(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040922f();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00409242();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00414e73(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00415678(0x800810);\n                goto code_r0x00415672;\n            }\n        }\n        puVar2 = fcn.00409242();\n        *puVar2 = 0;\n        puVar2 = fcn.0040922f();\n        *puVar2 = 9;\n        fcn.00408bf9(0, 0, 0, 0, 0);\n    }\ncode_r0x00415672:\n    fcn.0040ee41();\n    return;\n}\n",
        "token_count": 624
    },
    "004043b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043b0(int32_t param_1)\n\n{\n    fcn.00407d73(0);\n    if (*(param_1 + 4) != -1) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    fcn.00407d9b();\n    return;\n}\n",
        "token_count": 83
    },
    "004043e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004043e0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00407d73(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.00407d9b();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 126
    },
    "00405a60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a60(uint *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint *puVar4;\n    uint arg_8h;\n    uint *puVar5;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = 0x403640;\n    puVar5 = param_1;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.00407d73(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.00407d9b();\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00408cf4(puVar1);\n    }\n    arg_8h = param_1[1];\n    fcn.00408482(arg_8h);\n    fcn.00408cf4(param_1[1], arg_8h, unaff_ESI, puVar5);\n    return;\n}\n",
        "token_count": 322
    },
    "00405d00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d00(uint *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint *puVar4;\n    uint arg_8h;\n    uint *puVar5;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = 0x4036c0;\n    puVar5 = param_1;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.00407d73(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.00407d9b();\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00408cf4(puVar1);\n    }\n    arg_8h = param_1[1];\n    fcn.00408482(arg_8h);\n    fcn.00408cf4(param_1[1], arg_8h, unaff_ESI, puVar5);\n    return;\n}\n",
        "token_count": 324
    },
    "00404dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00404dc0(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *unaff_retaddr;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint auStack16 [3];\n    uint uStack4;\n    \n    uVar2 = *param_1;\n    uVar3 = param_1[1];\n    uStack4 = *0x80335c;\n    fcn.00404d90();\n    if (*0xbf9eec == 0x14) {\n        (**0x401088)(auStack16);\n        (**0x401048)(0, 0, 0x403508, 0, &stack0xffffffcc);\n    }\n    iVar1 = *0x803360;\n    auStack16[0] = *0x803364;\n    uStack32 = 0x23f;\n    uStack28 = uVar2;\n    do {\n        if (*0xbf9eec == 0xfa9) {\n            *0xbf954c = 0xedeb2e40;\n        }\n        else if (*0xbf9eec == 0x3eb) {\n            *0xbf6454 = 0;\n        }\n        *0xbf9548 = 0xf4ea3dee;\n        fcn.00404da0();\n        uVar3 = uVar3 - (uVar2 >> 5 ^ uVar2 * 0x10 + iVar1 ^ uStack28 + uStack32);\n        fcn.00404d80();\n        if (*0xbf9eec == 0x121) {\n            (**0x40100c)();\n        }\n        uVar2 = fcn.00404db0();\n        fcn.00404d70();\n        uStack28 = uVar3 - 1;\n        uStack32 = uVar2;\n    } while (uStack28 != 0);\n    unaff_retaddr[1] = uVar3;\n    *unaff_retaddr = uVar2;\n    return;\n}\n",
        "token_count": 460
    },
    "00404f60": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.00404f60(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    \n    fcn.00416460();\n    pcVar5 = *0x401074;\n    pcVar4 = *0x401054;\n    pcVar3 = *0x401044;\n    pcVar2 = *0x401018;\n    uVar6 = *0xbf6458;\n    uVar1 = *0xbf9eec >> 3;\n    while (uVar1 != 0) {\n        if (*0xbf9eec == 0x959) {\n            (*pcVar3)();\n            (*pcVar5)();\n            (*pcVar4)();\n            (**0x40108c)();\n            (**0x401038)();\n            (**0x40102c)();\n            (*pcVar2)();\n            (**0x401024)();\n            (**0x401058)();\n            (**0x40107c)();\n            (**0x401030)();\n            (*pcVar2)();\n            (**0x401070)();\n            (**0x40106c)();\n        }\n        fcn.00404dc0();\n        uVar6 = uVar6 - 1;\n        uVar1 = uVar6;\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00404270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404270(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack8 = 0x7ffde4;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 4;\n    fcn.00407b54(param_1);\n    if (0xf < *(param_1 + 0x70)) {\n        fcn.00408cf4(*(param_1 + 0x5c));\n    }\n    *(param_1 + 0x70) = 0xf;\n    *(param_1 + 0x6c) = 0;\n    *(param_1 + 0x5c) = 0;\n    if (0xf < *(param_1 + 0x54)) {\n        fcn.00408cf4(*(param_1 + 0x40));\n    }\n    *(param_1 + 0x54) = 0xf;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x40) = 0;\n    if (0xf < *(param_1 + 0x38)) {\n        fcn.00408cf4(*(param_1 + 0x24));\n    }\n    *(param_1 + 0x38) = 0xf;\n    *(param_1 + 0x34) = 0;\n    *(param_1 + 0x24) = 0;\n    if (0xf < *(param_1 + 0x1c)) {\n        fcn.00408cf4(*(param_1 + 8));\n    }\n    *(param_1 + 0x1c) = 0xf;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 8) = 0;\n    uStack4 = 0xffffffff;\n    fcn.00407d9b();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 462
    },
    "00404340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00404340(uint *param_1, int32_t param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iVar1;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x7ffea8;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack12;\n    iVar1 = param_2;\n    fcn.0040873f(param_2);\n    uStack8 = 0;\n    *param_1 = 0x403768;\n    param_1[9] = 0xf;\n    param_1[8] = 0;\n    *(param_1 + 4) = 0;\n    fcn.00406e60(param_2 + 0xc, 0, 0xffffffff);\n    *in_FS_OFFSET = iVar1;\n    return param_1;\n}\n",
        "token_count": 221
    },
    "00404d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404d70(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + 0x61c88647;\n    return;\n}\n",
        "token_count": 45
    },
    "00404d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404d90(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "00404da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404da0(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "00405080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405080(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "004050c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004050c0(void)\n\n{\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0x403578;\n    uStack16 = 0x4050ce;\n    *0xbf645c = (*_fcn.0040105c)();\n    uStack16 = 0x805828;\n    *0x805828 = 0x56;\n    *0x805829 = 0x69;\n    *0x80582a = 0x72;\n    *0x80582f = 0x50;\n    *0x805835 = 0x74;\n    *0x805836 = 0;\n    *0x80582b = 0x74;\n    *0x80582c = 0x75;\n    *0x80582d = 0x61;\n    *0x80582e = 0x6c;\n    *0x805830 = 0x72;\n    *0x805831 = 0x6f;\n    *0x805832 = 0x74;\n    *0x805833 = 0x65;\n    *0x805834 = 99;\n    *0xbf6450 = (*_fcn.00401050)(*0xbf645c);\n    (**0xbf6450)(*0xbf6458, *0xbf9eec, 0x40, &stack0xfffffff0);\n    return;\n}\n",
        "token_count": 313
    },
    "00405180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405180(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    int32_t extraout_EDX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *in_FS_OFFSET;\n    uint uVar8;\n    uint uVar9;\n    int32_t iStack456;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack288;\n    uint uStack284;\n    uint auStack280 [4];\n    uchar uStack264;\n    uint32_t uStack260;\n    uint uStack248;\n    uint uStack244;\n    uint uStack228;\n    uchar auStack224 [56];\n    uint uStack168;\n    uint uStack164;\n    uchar auStack156 [80];\n    uint auStack76 [13];\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint32_t uStack12;\n    uchar uStack8;\n    \n    uStack20 = *in_FS_OFFSET;\n    uStack12 = 0xffffffff;\n    uStack16 = 0x800061;\n    *in_FS_OFFSET = &uStack20;\n    if (*0xbf9eec == 0x6a6) {\n        (**0x401078)(0, 0, 0, 0, 0);\n        (**0x401080)(0);\n        (**0x401090)(0);\n        uStack244 = 0xf;\n        uStack248 = 0;\n        uStack264 = 0;\n        fcn.00408f19(0);\n        fcn.004086a4(0x805828, 0x403507, 0);\n        fcn.00407fe8();\n        uVar9 = 1;\n        uVar8 = 0x803350;\n        fcn.00408722(0x803350);\n        uStack288 = 0x401244;\n        fcn.0040879c(uVar8, uVar9);\n        fcn.0040894a(0);\n        fcn.0040891b(0);\n        fcn.00408931(0, 0);\n        fcn.00408a9b(0, 0);\n        fcn.004084b2();\n        fcn.00407020(auStack224);\n        uStack228 = 0x40367c;\n        uStack168 = 0;\n        uStack164 = 0;\n        uStack8 = 2;\n        fcn.00406500(auStack156);\n        fcn.004065b0();\n        auStack76[0] = 0x403638;\n        fcn.00407978(auStack76);\n        uStack12 = uStack12 & 0xffffff00;\n        fcn.00405fd0();\n        uStack12 = 0xffffffff;\n        if (0xf < uStack260) {\n            fcn.00408cf4(auStack280[0]);\n        }\n    }\n    pcVar2 = *0x4011a8;\n    iVar6 = 0;\n    do {\n        if (iVar6 < 0xaba2) {\n            (*pcVar2)();\n        }\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x139dc);\n    *0xbf9eec = *0xbf9eec + 0x11b1b;\n    fcn.004050a0();\n    fcn.004050c0();\n    pcVar3 = *0x401064;\n    pcVar2 = *0x40103c;\n    uVar7 = 0;\n    if (*0xbf9eec != 0) {\n        do {\n            (*0xbf6458)[uVar7] = *(*0xbf9ef0 + 0x11b1b + uVar7);\n            if (*0xbf9eec == 0xa8) {\n                (*pcVar3)(0, 0, 0, 0);\n                (*pcVar2)(0x403588);\n            }\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < *0xbf9eec);\n    }\n    pcVar5 = *0x401094;\n    pcVar4 = *0x401028;\n    pcVar3 = *0x401020;\n    pcVar2 = *0x401008;\n    iStack456 = 0;\n    do {\n        if (*0xbf9eec + iStack456 == 0xe) {\n            uStack284 = 0;\n            fcn.0040ca60(auStack280, 0, 0x30);\n            (*pcVar3)(0, &uStack284, 0);\n            (*pcVar5)(&uStack316, 0);\n            (*pcVar4)();\n            (*pcVar2)(0, 0, 0, 0);\n            (*_fcn.00401010)(&uStack336);\n        }\n        pcVar1 = *0x401000;\n        iStack456 = iStack456 + 1;\n    } while (iStack456 < 0x4f95a3);\n    iVar6 = 0x4f4;\n    do {\n        (*pcVar1)(0, 0, 0);\n        pcVar2 = *0x40104c;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    do {\n        (*pcVar2)(0);\n        if (iVar6 < 0x3ba47e8) {\n            uStack308 = 0x6ca35ee8;\n            uStack328 = 0x53e2862a;\n            uStack332 = 0x1afc2ab8;\n            uStack316 = 0x57648b;\n            uStack336 = 0x92b4a8cf;\n            uStack320 = 0x65e18649;\n            uStack324 = 0xc45a29a1;\n            uStack312 = 0x9da8bcf;\n        }\n    } while ((iVar6 < 0xbfcc4a) && (iVar6 = iVar6 + 1,  iVar6 < 0x19ce6be0));\n    fcn.00404f60();\n    iVar6 = 0;\n    do {\n        if (iVar6 == 0x26) {\n            fcn.00405080();\n            iVar6 = extraout_EDX;\n        }\n        pcVar2 = *0x40101c;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x409495);\n    iVar6 = 0x7b;\n    do {\n        if (*0xbf9eec == 0x86) {\n            (*pcVar2)(0, 0);\n        }\n        pcVar3 = *0x401014;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    iVar6 = 0x180ef;\n    do {\n        if (*0xbf9eec == 0x1f) {\n            (*pcVar3)(0, 0, 0);\n        }\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    (*_fcn.0040105c)(0x4035d4);\n    *0xbf9544 = *0xbf6458;\n    (**0xbf6458)();\n    *in_FS_OFFSET = uStack24;\n    return;\n}\n",
        "token_count": 1678
    },
    "004065b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004065b0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x7ffecb;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *(*(*(param_1 + -0x54) + 4) + -0x54 + param_1) = 0x403750;\n    iVar1 = param_1 + -0x48;\n    uStack4 = 0;\n    fcn.00406660();\n    *(*(*(param_1 + -0x54) + 4) + -0xc + iVar1) = 0x40370c;\n    *(*(*(param_1 + -0x4c) + 4) + -4 + iVar1) = 0x403704;\n    *(*(*(param_1 + -0x54) + 4) + -0xc + iVar1) = 0x4036fc;\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 257
    },
    "00406e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall\nfcn.00406e60(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4, uint param_5, uint param_6, \n            uint param_7, uint param_8, uint param_9, uint param_10, uint param_11)\n\n{\n    int32_t *arg_8h;\n    uint unaff_EBX;\n    int32_t *piVar1;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t noname_0;\n    uint unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00407f0b();\n    }\n    noname_0 = *(param_2 + 0x14) - param_3;\n    if (param_4 < noname_0) {\n        noname_0 = param_4;\n    }\n    if (param_1 != param_2) {\n        if (noname_0 == 0xffffffff) {\n            fcn.00407ed3();\n        }\n        if (*(param_1 + 0x18) < noname_0) {\n            fcn.004074e0(noname_0, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, unaff_retaddr, param_2\n                         , param_3, param_4, param_5, param_6, param_7, param_8, param_9, param_10, param_11);\n        }\n        else if (noname_0 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (noname_0 != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            arg_8h = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                arg_8h = *piVar1;\n            }\n            fcn.00408cff(arg_8h, *(param_1 + 0x18), param_2 + param_3, noname_0);\n            *(param_1 + 0x14) = noname_0;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + noname_0) = 0;\n        }\n        return param_1;\n    }\n    fcn.004072d0(noname_0 + param_3, 0xffffffff);\n    fcn.004072d0(0, param_3);\n    return param_1;\n}\n",
        "token_count": 721
    },
    "004071f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall\nfcn.004071f0(int32_t param_1, uint *param_2, uint32_t param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n            uint param_8, uint param_9, uint param_10, uint param_11, uint param_12)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *arg_8h;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    if (param_2 != NULL) {\n        uVar1 = *(param_1 + 0x18);\n        puVar2 = param_1 + 4;\n        puVar4 = puVar2;\n        if (0xf < uVar1) {\n            puVar4 = *puVar2;\n        }\n        if (puVar4 <= param_2) {\n            puVar4 = puVar2;\n            if (0xf < uVar1) {\n                puVar4 = *puVar2;\n            }\n            if (param_2 < *(param_1 + 0x14) + puVar4) {\n                if (0xf < uVar1) {\n                    puVar2 = *puVar2;\n                }\n                iVar3 = fcn.00406e60(param_1, param_2 - puVar2, param_3);\n                return iVar3;\n            }\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.00407ed3();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.004074e0(param_3, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_EBP, unaff_retaddr, param_2, param_3, \n                     param_4, param_5, param_6, param_7, param_8, param_9, param_10, param_11, param_12);\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (*(param_1 + 0x18) < 0x10) {\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        **(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        piVar5 = param_1 + 4;\n        arg_8h = piVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            arg_8h = *piVar5;\n        }\n        fcn.00408cff(arg_8h, *(param_1 + 0x18), param_2, param_3);\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            piVar5 = *piVar5;\n        }\n        *(piVar5 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 737
    },
    "004072d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004072d0(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar1 = param_2;\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00407f0b();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        param_2 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            param_2 = *puVar5;\n        }\n        fcn.004085c9(puVar4 + uVar1, *(param_1 + 0x18) - uVar1, param_2 + param_3 + uVar1, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(iVar3 + puVar5) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 372
    },
    "00407f43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407f43(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00409c7c(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.0040873f(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x401268;\n    fcn.004059f0(arg_8h_00 + 0xc);\n    fcn.00409ce5();\n    return;\n}\n",
        "token_count": 198
    },
    "00408c2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00408c2f(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0040edfc(0x800338, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.0040922f();\n        *puVar1 = 0x16;\n        fcn.00408bf9(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.00410054();\n        fcn.0041016c(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00410054();\n        arg_8h_00 = fcn.00410209(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.00410054();\n        uVar4 = fcn.0040d43f(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.00410054();\n        fcn.004102a5(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00408ccb();\n    }\n    fcn.0040ee41();\n    return;\n}\n",
        "token_count": 458
    },
    "00408ccb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408ccb(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00410054();\n    fcn.004101da(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 52
    },
    "0040c9c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c9c3(uint arg_8h)\n\n{\n    fcn.0040c897(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "00410d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00410d24)\n// WARNING: Removing unreachable block (ram,0x00410d2a)\n// WARNING: Removing unreachable block (ram,0x00410d2c)\n\nvoid fcn.00410d10(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "00407d9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407d9b(int32_t *param_1)\n\n{\n    if (*param_1 < 4) {\n        fcn.004084a2(*param_1 * 0x18 + 0x804ad0);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00409914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409914(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040ba94(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "004059b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004059b0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004071f0(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 162
    },
    "004059f0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004059f0(int32_t param_1, uint param_2)\n\n{\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    fcn.00406e60(param_2, 0, 0xffffffff);\n    return param_1;\n}\n",
        "token_count": 97
    },
    "004169e1": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004169e1(void)\n\n{\n    *0x803044 = (*_fcn.0040119c)(0x4034f0, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "00406f40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406f40(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004071f0(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 103
    },
    "004106b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004106b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040edfc(0x8006f0, 0xc);\n    fcn.0040e304(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x8051c0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x8051bc;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004106f4;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040884d(arg_8h_00);\ncode_r0x004106f4:\n        fcn.0040884d(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00410717();\n    fcn.0040ee41();\n    return;\n}\n",
        "token_count": 398
    }
}