{
    "00401027": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __cdecl fcn.00401027(char *arg_8h)\n\n{\n    uint var_4h;\n    \n    return 0x32 < *arg_8h - 0x23U && *arg_8h != 'V';\n}\n",
        "token_count": 71
    },
    "00401c75": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00401f16)\n\nint32_t __cdecl fcn.00401c75(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint16_t *puStack64;\n    uint var_bp_ch;\n    \n    iVar4 = fcn.0040358f();\n    iVar5 = 0;\n    if (*(iVar4 + *(iVar4 + 0x3c)) == 0x4550) {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        puStack64 = iVar4 + *(iVar4 + iVar5 + 0x24);\n        uStack80 = 0;\n        do {\n            uStack76 = 0;\n            do {\n                cVar1 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + uStack80 * 4) + uStack76);\n                cVar2 = *(arg_8h + uStack76);\n                if (cVar1 == '\\0') break;\n                uStack76 = uStack76 + 1;\n            } while ((cVar2 != '\\0' && cVar1 == cVar2) && uStack76 < 0x20);\n            if (cVar1 == cVar2) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *puStack64 * 4);\n            }\n            uStack80 = uStack80 + 1;\n            puStack64 = puStack64 + 1;\n        } while (uStack80 < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 460
    },
    "00403414": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nbool __fastcall fcn.00403414(uint param_1, uint32_t param_2)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    uint32_t unaff_ESI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    var_28h = 0;\n    var_24h = param_2;\n    var_1ch = unaff_ESI;\n    do {\n        uVar1 = rdtsc();\n        uVar2 = rdtsc();\n        uVar3 = uVar2 - uVar1;\n        if (var_28h == 0) {\n            var_1ch = uVar3;\n            var_24h = uVar3;\n        }\n        if (uVar3 < var_1ch) {\n            var_1ch = uVar3;\n        }\n        var_28h = var_28h + 1;\n        if (var_24h < uVar3) {\n            var_24h = uVar3;\n        }\n    } while (var_28h != 100);\n    return var_24h == var_1ch && (var_1ch == 0 || (var_1ch == 0x53 || var_1ch == 3));\n}\n",
        "token_count": 381
    },
    "00401070": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401070(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    bool bVar2;\n    uint uStack108;\n    int32_t iStack96;\n    char acStack72 [32];\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint8_t uStack23;\n    uint16_t uStack22;\n    uint var_ch;\n    \n    iStack32 = 0x3a14dde0;\n    uStack28 = uStack28 & 0x1d44c109;\n    uStack22 = uStack22 ^ 0xe2f7;\n    uStack23 = uStack23 ^ 0xff;\n    iStack96 = 0;\n    do {\n        bVar2 = 0xe779bcad < uStack40;\n        uStack40 = uStack40 + 0x18864352;\n        iStack36 = iStack36 + bVar2;\n        acStack72[iStack96] = *(iStack96 + 0x448235) - *(iStack96 + 0x44826d);\n        iStack96 = iStack96 + 1;\n    } while (iStack96 != 0xe);\n    arg_8h_00 = fcn.00403bd2();\n    iStack36 = 0xffffffff;\n    uStack40 = 0xe56f85e9;\n    pcVar1 = fcn.00401f67(arg_8h_00, acStack72);\n    uStack108 = 0;\n    if (0xff < pcVar1) {\n        uStack108 = (*pcVar1)(0, arg_ch, iStack32 + -0x3a14cde0, arg_8h);\n    }\n    return uStack108;\n}\n",
        "token_count": 431
    },
    "0040125a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040125a(void)\n\n{\n    uint16_t uVar1;\n    uchar extraout_var;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    uint uStack360;\n    int32_t iStack332;\n    uint uStack300;\n    uint uStack288;\n    int32_t iStack284;\n    uint uStack280;\n    uint uStack276;\n    uchar auStack272 [12];\n    uint uStack260;\n    ushort uStack254;\n    int32_t iStack252;\n    uchar *puStack248;\n    int32_t *piStack244;\n    int32_t iStack240;\n    uint auStack232 [4];\n    uint16_t uStack214;\n    uint auStack208 [4];\n    uint32_t uStack192;\n    uint32_t uStack188;\n    uchar auStack168 [12];\n    uchar auStack156 [6];\n    ushort auStack150 [3];\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t *piStack136;\n    char cStack113;\n    uint uStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    ushort uStack94;\n    uchar uStack89;\n    int32_t iStack88;\n    uint16_t uStack82;\n    uint32_t uStack80;\n    uint uStack76;\n    int32_t iStack72;\n    int32_t iStack56;\n    uint uStack40;\n    uint uStack24;\n    uint var_ch;\n    \n    uStack24 = 0x48bf3cd7;\n    uStack140 = 0;\n    uStack144 = 0xa61fb26;\n    auStack232[0] = 0;\n    piStack244 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    puStack248 = auStack168;\n    uStack40 = uStack40 & 0x502fffff;\n    iStack252 = 0x2db970;\n    uStack254 = uStack40._2_2_;\n    uStack260 = 0xea3;\n    uStack276 = (*_sym.imp.GDI32.dll_GetBoundsRect)(0x2db970, auStack168, 0xea3);\n    iStack56 = iStack252 * 2;\n    uStack280 = 0xa7fc5;\n    iStack284 = 0x49e;\n    uStack288 = 0;\n    (*_sym.imp.ADVAPI32.dll_RegNotifyChangeKeyValue)(0xa7fc5, uStack40 ^ 0x48bf372b, 0x49e, 0, uStack40 ^ 0x48bf372b);\n    (*_sym.imp.GDI32.dll_PaintRgn)(0x227726, 0x5df714);\n    uVar2 = (*_sym.imp.USER32.dll_RemoveClipboardFormatListener)(0xcf7b35);\n    uStack82 = 0;\n    if (5 < *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xa4)) {\n        iVar3 = fcn.0040358f();\n        piStack136 = iVar3 + *(iVar3 + 0x3c);\n        uStack89 = 0;\n        uStack82 = uStack300._2_2_ * uStack300._2_2_;\n        puStack248 = *piStack136;\n        uStack80 = uStack80 ^ 0x471812bc;\n        if ((uStack192 < 0x1775a3db) <= uStack188) {\ncode_r0x00401693:\n            iVar3 = fcn.0040358f();\n            iStack240 = 0;\n            if (*(iVar3 + *(iVar3 + 0x3c)) == 0x4550) {\n                iStack240 = iVar3 + *(iVar3 + 0x3c);\n            }\n            uStack82 = uStack300._2_2_ | 0xfd26;\n            uStack214 = *(iStack240 + 0x48);\n            if (uStack214 < 6) {\n                return 0x62;\n            }\n            uStack76 = 0;\n            uStack80 = 0;\n            iStack88 = iStack284 * 0x5844d71d;\n            iStack252 = 0x62;\n            if (uStack214 == 6 && *(iStack240 + 0x4a) == 0) {\n                return 0x62;\n            }\n            uStack89 = extraout_var;\n            iVar3 = fcn.00403414();\n            iStack252 = 0x62;\n            if (iVar3 != 0) {\n                return 0x62;\n            }\n            fcn.004038a0();\n            (*_sym.imp.KERNEL32.dll_VerifyScripts)(0x91b, 0x4482a2, 0xb9c, 0x448294, 0xed5);\n            return 0x62;\n        }\n        uStack82 = uStack300._2_2_ ^ 0xffff;\n        piStack244 = NULL;\n        if (puStack248 == 0x4550) {\n            piStack244 = piStack136;\n        }\n        uVar1 = *(piStack244 + 0x12);\n        iStack88 = iStack284 * 0x3211128c;\n        uStack140 = uStack140 & 0xffff0000 | uVar1;\n        if (5 < uVar1) {\n            uStack76 = 0;\n            uStack80 = 0;\n            if ((uVar1 != 6 || *(piStack244 + 0x4a) != 0) && (iVar3 = fcn.00403414(),  iVar3 == 0)) {\n                (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n                uStack76 = 0;\n                uStack80 = 0;\n                uStack82 = uStack300._2_2_ * -0x4b67;\n                iStack252 = 0x62;\n                uStack89 = extraout_var;\n                if (*(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xa4) < 0x48bf3cddU - iStack72) {\n                    return 0x62;\n                }\n                goto code_r0x00401693;\n            }\n        }\n    }\n    sub.LZ32.dll_LZSeek(0x30eb, 0x1dd1d, 0x16);\n    uStack94 = 0x7f7b;\n    auStack150[0] = 0x14;\n    uStack104 = uVar2 & 0xff000000 | uStack104 & 0xffffff;\n    auStack208[0] = 0xa7a;\n    (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorControl)(&iStack284, auStack150, auStack208);\n    uStack112 = 0;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack300 = 0xbf3;\n    cStack113 = uStack360._3_1_ * '1';\n    (*_sym.imp.USER32.dll_GetRawInputBuffer)(auStack156, &uStack300, 0xbf3);\n    (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorControl)(auStack272, 6, 0x1b);\n    piStack136 = iStack332 * iStack332;\n    (*_sym.imp.USER32.dll_GetTitleBarInfo)(0x9bc2e5, auStack232);\n    return 1;\n}\n",
        "token_count": 1703
    },
    "00402271": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.00402271(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t in_FS_OFFSET;\n    bool bVar4;\n    uint32_t uStack120;\n    int32_t *piStack116;\n    uint var_ch;\n    \n    iVar1 = *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xc);\n    piVar2 = iVar1 + 0x14;\n    piStack116 = *(iVar1 + 0x14);\n    if (piStack116 != piVar2) {\n        do {\n            if (arg_ch != NULL && piStack116[4] == arg_ch) {\n                return piStack116 + -2;\n            }\n            if (*(piStack116 + 9) >> 1 != 0) {\n                uStack120 = 0;\n                do {\n                    iVar3 = *(piStack116[10] + uStack120 * 2);\n                    if (iVar3 - 0x41U < 0x1a) {\n                        iVar3 = iVar3 + 0x20;\n                    }\n                    bVar4 = *(arg_8h + uStack120 * 2) == iVar3;\n                    uStack120 = uStack120 + 1;\n                } while ((bVar4 && iVar3 != 0) && uStack120 < *(piStack116 + 9) >> 1);\n                if (bVar4) {\n                    return piStack116[4];\n                }\n            }\n            piStack116 = *piStack116;\n        } while (piStack116 != piVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 396
    },
    "00403bd2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t fcn.00403bd2(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uchar in_XMM1 [16];\n    int32_t iStack184;\n    int32_t iStack176;\n    int32_t iStack172;\n    uint32_t uStack168;\n    uint32_t uStack160;\n    int16_t aiStack138 [32];\n    uint64_t auStack74 [4];\n    int16_t iStack42;\n    uchar uStack35;\n    uint16_t uStack34;\n    uint32_t uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    uint var_bp_ch;\n    \n    uVar2 = uStack34;\n    iStack24 = 0x3c53fb68;\n    iStack42 = 0x3431;\n    uStack160 = 6;\n    while( true ) {\n        iStack176 = 0;\n        do {\n            uStack34 = uVar2 ^ 0xafda;\n            *(auStack74 + iStack176) = *(iStack176 + 0x44820f) - *(iStack176 + 0x44826d);\n            iStack176 = iStack176 + 1;\n        } while (iStack176 != 0xe);\n        iStack172 = 0;\n        do {\n            iVar3 = 0x3c53fb88 - iStack24;\n            uVar1 = *(auStack74 + iStack172);\n            in_XMM1 = psraw(CONCAT142(SUB1614(CONCAT133(CONCAT121(SUB1612(CONCAT115(CONCAT101(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(uVar1 >> 0x38, \n                                                                      CONCAT114(SUB161(in_XMM1 >> 0x38, 0), \n                                                                                SUB1614(in_XMM1, 0))) >> 0x70, 0), \n                                                            CONCAT113(uVar1 >> 0x30, SUB1613(in_XMM1, 0))) >> 0x68, 0), \n                                                            CONCAT112(SUB161(in_XMM1 >> 0x30, 0), SUB1612(in_XMM1, 0)))\n                                                            >> 0x60, 0), CONCAT111(uVar1 >> 0x28, SUB1611(in_XMM1, 0)))\n                                                            >> 0x58, 0), \n                                                            CONCAT110(SUB161(in_XMM1 >> 0x28, 0), SUB1610(in_XMM1, 0)))\n                                                            >> 0x50, 0), CONCAT19(uVar1 >> 0x20, SUB169(in_XMM1, 0))) >>\n                                                            0x48, 0), \n                                                            CONCAT18(SUB161(in_XMM1 >> 0x20, 0), SUB168(in_XMM1, 0))) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (SUB167(in_XMM1, 0) >> 0x18) << 0x30) >> 0x30, 0), \n                                                            uVar1 >> 0x10), (SUB165(in_XMM1, 0) >> 0x10) << 0x20) >>\n                                                            0x20, 0), uVar1 >> 8), (SUB163(in_XMM1, 0) >> 8) << 0x10) >>\n                                              0x10, 0), SUB162(in_XMM1, 0) & 0xff | uVar1 << 8), 8);\n            *(aiStack138 + iStack172) = in_XMM1;\n            iStack172 = iStack172 + 8;\n        } while (iStack172 != iVar3);\n        iStack28 = -(0x4260f268 < uStack32) - iStack28;\n        uStack32 = 0x4260f268 - uStack32;\n        uStack35 = 0x18;\n        if (aiStack138[0] == 0x3431 - iStack42) break;\n        uStack34 = uVar2 ^ 0xffff;\n        if ((uStack160 < 5) && (iStack184 = fcn.00402271(aiStack138, 0),  uStack160 - 1 < 2)) {\n            if (iStack184 + *(iStack184 + 0x3c) == 0 || *(iStack184 + *(iStack184 + 0x3c)) != 0x4550) {\n                iStack184 = 0;\n            }\n            return iStack184;\n        }\n        uStack168 = uStack160 - 1;\n        uStack160 = uStack168;\n    }\n    return 0;\n}\n",
        "token_count": 1134
    },
    "00401c09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_7h\n\nuint __cdecl fcn.00401c09(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint var_7h;\n    \n    uVar1 = 0;\n    if (arg_10h != 0) {\n        uVar1 = *0x404e2c;\n    }\n    *0x404d80 = arg_8h;\n    *0x404d8c = arg_ch;\n    *0x404d90 = arg_10h;\n    return uVar1;\n}\n",
        "token_count": 140
    },
    "00401c43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401c43(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = var_8h;\n    do {\n        var_8h = iVar1;\n        iVar1 = var_8h + 1;\n    } while (*(arg_8h + var_8h) != '\\0');\n    return var_8h;\n}\n",
        "token_count": 119
    },
    "00401f67": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00401f67(uint arg_8h, int32_t arg_ch)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uStack124;\n    uint32_t uStack120;\n    code *pcStack116;\n    uint8_t uStack109;\n    uint32_t uStack108;\n    uint uStack104;\n    uint uStack100;\n    ushort uStack96;\n    ushort uStack94;\n    int32_t iStack92;\n    ushort *puStack88;\n    char *pcStack84;\n    uchar uStack77;\n    uint32_t uStack76;\n    char acStack70 [32];\n    uint8_t uStack38;\n    uchar uStack37;\n    ushort uStack30;\n    uint32_t uStack28;\n    uint var_8h;\n    \n    uVar1 = uStack30;\n    uStack28 = 0x62314fd9;\n    uStack30 = 0xd998;\n    uStack38 = 0xd3;\n    uStack77 = 0x44;\n    pcStack84 = acStack70;\n    uStack108 = 0;\n    do {\n        acStack70[uStack108] = *(uStack108 + 0x44821d) - *((uStack108 & 0xf) + 0x44826d);\n        uStack108 = uStack108 + 1;\n    } while (uStack108 != 0x18);\n    uStack104 = 0;\n    if (arg_ch == 0) {\n        return 0;\n    }\n    pcStack116 = fcn.00401c75(pcStack84);\n    uStack104 = 0;\n    if (pcStack116 == NULL) {\n        return 0;\n    }\n    puStack88 = &uStack96;\n    uStack109 = uStack38 ^ 4;\n    uStack37 = 0x7b;\n    if (0x9a < uStack109) {\n        iStack92 = arg_ch;\n        uStack76 = 0;\n        uVar3 = uStack76;\n        do {\n            uStack76 = uVar3;\n            uStack120 = uStack76;\n            uVar3 = uStack76 + (uStack28 ^ 0x62314fd8);\n        } while (*(arg_ch + uStack76) != '\\0');\n        uStack37 = 0xc6;\n        uStack96 = uStack76;\n        uVar2 = uStack76 & 0xffff;\n        uStack100 = 0;\n        uStack94 = uStack96;\n        uStack76 = uVar3;\n        uStack30 = uVar1;\n        if (uVar2 == 0) {\n            return 0;\n        }\n    }\n    uStack124 = 0;\n    (*pcStack116)(arg_8h, &uStack96, 0, &uStack124);\n    return uStack124;\n}\n",
        "token_count": 660
    },
    "0040248f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040248f(int32_t arg_8h)\n\n{\n    code *pcStack32;\n    int16_t *piStack28;\n    \n    if (arg_8h == 0) {\n        for (pcStack32 = fcn.00403523;\n            (*pcStack32 != 0x5a4d || (piStack28 = pcStack32,  *(pcStack32 + *(pcStack32 + 0x3c)) != 0x4550));\n            pcStack32 = pcStack32 + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        piStack28 = fcn.00402271(arg_8h, 0);\n    }\n    return piStack28;\n}\n",
        "token_count": 170
    },
    "00402533": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00402533(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uStack44;\n    uint var_bp_ch;\n    \n    if (arg_10h != 0) {\n        uStack44 = 0;\n        do {\n            *(arg_8h + uStack44) = *(arg_ch + uStack44) - *((uStack44 & 0xf) + 0x44826d);\n            uStack44 = uStack44 + 1;\n        } while (uStack44 != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00402635": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402635(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iStack376;\n    int32_t iStack332;\n    uint8_t uStack309;\n    uint8_t auStack301 [77];\n    uchar uStack224;\n    char cStack45;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint16_t uStack26;\n    uint32_t uStack24;\n    uint var_ch;\n    \n    uVar3 = uStack26;\n    uStack24 = 0x349e1805;\n    uStack309 = arg_10h;\n    iStack332 = 0;\n    do {\n        uVar6 = *(iStack332 * 4 + 0x404d98);\n        uStack26 = uVar3 ^ 0xffff;\n        for (; uVar6 < arg_10h; uVar6 = uVar6 + 0x25) {\n            uVar7 = uVar6 * iStack332 + 4 ^ uStack309;\n            uStack309 = uVar7;\n            uVar7 = uVar7 & 0xff;\n            uVar1 = auStack301[uVar7];\n            uStack36 = ~uStack36;\n            uStack40 = ~uStack40;\n            uVar2 = *(*0x404d94 + uVar6 % 0x29);\n            *(arg_8h + uVar6) = *(arg_ch + uVar6) - uVar2;\n            uStack26 = uVar3 + 0x8d7b;\n            auStack301[uVar7] = uVar2 ^ uVar1 + 1;\n        }\n        uStack224 = 0;\n        iStack332 = iStack332 + 1;\n        uStack44 = uStack44 * 2;\n    } while (iStack332 != 0x25);\n    uStack40 = uStack40 ^ 0x5b0bb668;\n    iStack376 = 0;\n    iVar4 = iStack376;\n    do {\n        iStack376 = iVar4;\n        cStack45 = cStack45 + '\\f';\n        uStack44 = uStack44 | 0x7c70b0d6;\n        iVar4 = iStack376 + (uStack24 ^ 0x349e1804);\n    } while (auStack301[iStack376] != 0);\n    uVar5 = 0;\n    if (iStack376 == 0x100) {\n        uVar5 = 0x42;\n    }\n    return uVar5;\n}\n",
        "token_count": 651
    },
    "0040367a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00403728)\n\nvoid __cdecl fcn.0040367a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iStack52;\n    uint32_t uStack48;\n    uint var_ch;\n    \n    iVar1 = 0;\n    if (*(arg_ch + *(arg_ch + 0x3c)) == 0x4550) {\n        iVar1 = arg_ch + *(arg_ch + 0x3c);\n    }\n    if (*(iVar1 + 6) != 0) {\n        iStack52 = *(iVar1 + 0x14) + 0x18 + iVar1;\n        uStack48 = 0;\n        do {\n            fcn.004033b7(arg_8h + *(iStack52 + 0xc), arg_ch + *(iStack52 + 0x14), *(iStack52 + 0x10));\n            uStack48 = uStack48 + 1;\n            iStack52 = iStack52 + 0x28;\n        } while (uStack48 < *(iVar1 + 6));\n    }\n    fcn.004033b7(arg_8h, arg_ch, *(iVar1 + 0x54));\n    return;\n}\n",
        "token_count": 299
    },
    "00403813": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ah\n\nint32_t __cdecl fcn.00403813(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ah;\n    \n    arg_8h_00 = fcn.00401070(0x40, 0x17000);\n    var_24h = 0;\n    if (arg_8h_00 != 0) {\n        fcn.0040367a(arg_8h_00, arg_ch);\n        *(arg_8h + 0x48) = arg_8h_00;\n        *(arg_8h + 0x4c) = arg_8h_00 + -0x400000;\n        var_24h = arg_8h_00 + 0x29da;\n    }\n    return var_24h;\n}\n",
        "token_count": 244
    },
    "004038a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t fcn.004038a0(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    int32_t iStack220;\n    code *pcStack200;\n    uchar auStack168 [40];\n    uint uStack128;\n    uint uStack124;\n    int16_t *piStack104;\n    uint32_t uStack100;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint auStack60 [2];\n    uint uStack52;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    ushort uStack34;\n    uint32_t uStack32;\n    int32_t iStack28;\n    int16_t iStack22;\n    uint var_ch;\n    \n    iStack22 = -0x3ce2;\n    uStack44 = 0x50dcd5c1;\n    fcn.0040301e(auStack60);\n    uStack128 = auStack60[0];\n    uStack124 = 0x11200;\n    uStack68 = *0x404d84;\n    uStack40 = uStack40 ^ 0x101ad651;\n    uStack72 = *0x404d80;\n    uStack76 = *0x404d8c;\n    uStack64 = *0x404d88;\n    uStack80 = *0x404d90;\n    for (pcStack200 = fcn.00403523;\n        (*pcStack200 != iStack22 + -0x68d1 || (*(pcStack200 + *(pcStack200 + 0x3c)) != 0x4550));\n        pcStack200 = pcStack200 + -0x1000 & uStack44 + 0xaf231a3f) {\n    }\n    uStack34 = 0;\n    piStack104 = pcStack200;\n    uVar1 = *(pcStack200 + *(pcStack200 + 0x3c) + 0x50);\n    uStack100 = uVar1;\n    pcVar2 = fcn.00403813(auStack168, uStack52);\n    iStack220 = 0;\n    if (pcVar2 != NULL) {\n        iStack220 = 0x50dcd5c3 - uStack44;\n        bVar4 = 0xb4cea3c2 < uStack32;\n        uStack32 = uStack32 + 0x4b315c3d;\n        iStack28 = iStack28 + bVar4;\n        uVar3 = 0xc9;\n        if (uVar1 == 0) {\n            uVar3 = uStack44 ^ 0x50dcd509;\n        }\n        (*pcVar2)(auStack168, uStack52, uVar1 - 4);\n        iStack220 = (3 < uVar1 && uVar1 - 4 != 0) + uVar3 + iStack220;\n    }\n    return iStack220;\n}\n",
        "token_count": 689
    },
    "004019cb": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004019cb(void)\n\n{\n    uint32_t unaff_EBX;\n    uint unaff_ESI;\n    uchar *puStack156;\n    uchar *puStack152;\n    uchar *puStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uchar *puStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    int32_t iStack112;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uchar *puStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    int32_t iStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    uint var_ch;\n    \n    uStack24 = 0x4d45d2d7;\n    iStack48 = 0;\n    var_ch = unaff_ESI;\n    do {\n        puStack120 = &stack0xffffffd9;\n        uStack40 = uStack40 & 0xffff00ff;\n        puStack156 = &stack0xffffffd9;\n        puStack152 = 0x342;\n        iStack112 = iStack48;\n        uStack116 = 0xa79390;\n        uStack124 = 0x342;\n        iStack112 = (*_sym.imp.KERNEL32.dll_SetFileIoOverlappedRange)(0xa79390);\n        iStack36 = 0;\n        do {\n            uStack144 = unaff_EBX ^ 0x4d45d99e;\n            uStack40 = iStack36;\n            puStack148 = 0x401a11;\n            puStack140 = uStack144;\n            uStack52 = sub.KERNEL32.dll_SetSystemPowerState();\n            puStack152 = 0xb5a5e8;\n            iStack56 = 0xb5a5e8;\n            puStack156 = 0x401a31;\n            uStack64 = (*_sym.imp.GDI32.dll_CreateHalftonePalette)();\n            puStack72 = &stack0xffffff64;\n            puStack80 = &stack0xffffffdb;\n            iStack68 = iStack20 + -0x4d45d2d6;\n            iStack32 = iStack32 * 2;\n            puStack156 = 0x4d45db0a - iStack20;\n            uStack40 = CONCAT13(6, uStack40);\n            puStack148 = &stack0xffffffdb;\n            puStack132 = 0xa999e5;\n            puStack140 = 0xfa9;\n            uStack144 = 0x44827e;\n            uStack84 = 0xa999e5;\n            uStack88 = 0x44827e;\n            uStack92 = 0xfa9;\n            puStack152 = puStack156;\n            puStack136 = puStack156;\n            puStack76 = puStack148;\n            uStack124 = (*_sym.imp.USER32.dll_ToUnicodeEx)();\n            uStack128 = 0x5d1;\n            uStack92 = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(0x5d1);\n            iStack36 = uStack40 + iStack56;\n        } while (iStack36 != 0x9f);\n        var_ch = 0x7ae024bb;\n        puStack136 = 0x4d45da23 - unaff_EBX;\n        uStack24 = CONCAT31(uStack24 >> 8 & 0xff | (uStack24._2_2_ + 0xe84c << 0x10) >> 8, 1);\n        puStack140 = &stack0xffffffe8;\n        uStack144 = 0xaa7c78;\n        puStack148 = 0x401bb1;\n        puStack132 = puStack136;\n        puStack132 = sub.USER32.dll_DdeAddData();\n        uStack28 = 0xffffffff;\n        iStack32 = -0x54031601;\n        iStack48 = iStack112 + uStack24 + -0x4d45d2d6;\n        uStack40 = uStack40 & 0xffff | uStack40._2_2_ * uStack40._2_2_ << 0x10;\n    } while (iStack48 != 0xf3);\n    return;\n}\n",
        "token_count": 1039
    },
    "004021bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Removing unreachable block (ram,0x00402206)\n\nuint __cdecl fcn.004021bd(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_bp_4h;\n    \n    return *(in_FS_OFFSET + arg_8h);\n}\n",
        "token_count": 81
    },
    "0040301e": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.0040301e(uint arg_8h)\n\n{\n    uchar *arg_ch;\n    uint uVar1;\n    code *pcVar2;\n    int32_t arg_10h;\n    int32_t iVar3;\n    ushort in_stack_ffffff6c;\n    uint uVar4;\n    int32_t iStack136;\n    uint uStack132;\n    int32_t *piStack128;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack84;\n    char acStack75 [16];\n    uchar uStack59;\n    ushort uStack58;\n    int32_t iStack56;\n    uint32_t uStack52;\n    ushort uStack42;\n    uint uStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_bp_ch;\n    \n    iStack36 = 0x1f70381;\n    iStack104 = 0;\n    iStack100 = 0;\n    do {\n        iStack104 = *(iStack100 * 0x6c + 0x404068) + iStack104 + *(iStack100 * 0x6c + 0x404060);\n        iStack100 = iStack100 + 1;\n    } while (iStack100 != 0x20);\n    iStack84 = 0;\n    uStack42 = 0xb2f1;\n    do {\n        uStack40 = 0x739bccc0;\n        iVar3 = 0x1f7038f - iStack36;\n        acStack75[iStack84] = *(iStack84 + 0x448235) - *(iStack84 + 0x44826d);\n        uStack32 = 0xa74f3c7b;\n        uStack28 = 0xffffffff;\n        iStack84 = iStack84 + 1;\n    } while (iStack84 != iVar3);\n    uVar1 = fcn.00403bd2();\n    uVar4 = CONCAT22(0x9ebf, in_stack_ffffff6c);\n    pcVar2 = fcn.00401f67(uVar1, acStack75);\n    iVar3 = (*pcVar2)(0, iStack104, 0x1000, 4, 0x1000, 0, 4, uVar4);\n    *piStack128 = iVar3 + 0x11cc7;\n    piStack128[1] = 0x11200;\n    piStack128[2] = iVar3 + 0x4a36;\n    uStack59 = 0xd9;\n    piStack128[3] = uStack52 ^ 0x1f74011;\n    iStack104 = 0;\n    iStack108 = 0;\n    do {\n        iStack56 = 0;\n        arg_10h = *(iStack108 * 0x6c + 0x404068) + *(iStack108 * 0x6c + 0x404060);\n        arg_ch = *(iStack108 * 0x6c + 0x404064);\n        uStack58 = 0x1149;\n        *(iVar3 + iStack104) = *arg_ch;\n        fcn.004033b7(iVar3 + iStack104, arg_ch, arg_10h);\n        uVar1 = fcn.00403bd2();\n        fcn.00401f67(uVar1, uStack132);\n        iStack108 = iStack108 + 1;\n        iStack104 = arg_10h + iStack104;\n        iStack56 = 0x20e9dab - iStack136;\n    } while (iStack108 != 0x20);\n    fcn.00402635(iVar3, iVar3, arg_8h);\n    return 0;\n}\n",
        "token_count": 868
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401000(int32_t arg_8h, int32_t arg_ch)\n\n{\n    // [00] -r-x section size 12288 named .text\n    return arg_ch * arg_ch * arg_ch + arg_8h * arg_8h * arg_8h;\n}\n",
        "token_count": 71
    },
    "004011b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004011b9(uint *arg_8h, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    uint var_8h;\n    \n    *arg_ch = *arg_8h * *arg_10h + 4U ^ *arg_ch;\n    return;\n}\n",
        "token_count": 86
    },
    "0040120b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040120b(int32_t *arg_8h)\n\n{\n    uint var_4h;\n    \n    return *arg_8h << 1;\n}\n",
        "token_count": 43
    },
    "0040122b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040122b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    \n    *0x404d88 = arg_8h;\n    *0x404d90 = arg_10h;\n    *0x404d8c = arg_ch;\n    fcn.0040125a();\n    return;\n}\n",
        "token_count": 87
    },
    "004019b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004019b0(void)\n\n{\n    uint unaff_EBX;\n    uint unaff_EBP;\n    \n    fcn.0040122b(unaff_EBX, unaff_EBP, &stack0x00000008);\n    return;\n}\n",
        "token_count": 57
    },
    "00402235": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402235(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00403bd2();\n    fcn.00401f67(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "004033b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004033b7(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_10h != 0) {\n        var_1ch = 0;\n        do {\n            *(arg_8h + var_1ch) = *(arg_ch + var_1ch);\n            var_1ch = var_1ch + 1;\n        } while (var_1ch != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 156
    },
    "0040358f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid fcn.0040358f(void)\n\n{\n    uint64_t uVar1;\n    uchar in_XMM1 [16];\n    int32_t iStack164;\n    int32_t iStack156;\n    uint64_t auStack118 [4];\n    uchar auStack86 [64];\n    uint16_t uStack22;\n    uint var_bp_ch;\n    \n    uStack22 = uStack22 | 0xbe13;\n    iStack156 = 0;\n    do {\n        *(auStack118 + iStack156) = *(iStack156 + 0x448204) - *(iStack156 + 0x44826d);\n        iStack156 = iStack156 + 1;\n    } while (iStack156 != 0xb);\n    iStack164 = 0;\n    do {\n        uVar1 = *(auStack118 + iStack164);\n        in_XMM1 = psraw(CONCAT142(SUB1614(CONCAT133(CONCAT121(SUB1612(CONCAT115(CONCAT101(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(uVar1 >> 0x38, \n                                                                      CONCAT114(SUB161(in_XMM1 >> 0x38, 0), \n                                                                                SUB1614(in_XMM1, 0))) >> 0x70, 0), \n                                                            CONCAT113(uVar1 >> 0x30, SUB1613(in_XMM1, 0))) >> 0x68, 0), \n                                                            CONCAT112(SUB161(in_XMM1 >> 0x30, 0), SUB1612(in_XMM1, 0)))\n                                                            >> 0x60, 0), CONCAT111(uVar1 >> 0x28, SUB1611(in_XMM1, 0)))\n                                                            >> 0x58, 0), \n                                                            CONCAT110(SUB161(in_XMM1 >> 0x28, 0), SUB1610(in_XMM1, 0)))\n                                                            >> 0x50, 0), CONCAT19(uVar1 >> 0x20, SUB169(in_XMM1, 0))) >>\n                                                            0x48, 0), \n                                                            CONCAT18(SUB161(in_XMM1 >> 0x20, 0), SUB168(in_XMM1, 0))) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (SUB167(in_XMM1, 0) >> 0x18) << 0x30) >> 0x30, 0), \n                                                            uVar1 >> 0x10), (SUB165(in_XMM1, 0) >> 0x10) << 0x20) >>\n                                                            0x20, 0), uVar1 >> 8), (SUB163(in_XMM1, 0) >> 8) << 0x10) >>\n                                          0x10, 0), SUB162(in_XMM1, 0) & 0xff | uVar1 << 8), 8);\n        *(auStack86 + iStack164 * 2) = in_XMM1;\n        iStack164 = iStack164 + 8;\n    } while (iStack164 != 0x20);\n    fcn.00402271(auStack86, 0);\n    return;\n}\n",
        "token_count": 793
    },
    "00402902": {
        "rules": [
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid fcn.00402902(void)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char *extraout_ECX;\n    uint8_t *unaff_EDI;\n    unkbyte6 Var3;\n    \n    Var3 = (*_sym.imp.USER32.dll_GetPriorityClipboardFormat)();\n    uVar1 = *unaff_EDI;\n    *extraout_ECX = *extraout_ECX << (extraout_ECX & 0x1f);\n    uVar2 = in(Var3 >> 0x20);\n    out(0xdb, Var3 + 0x28826241 + (Var3 < uVar1) & 0xffffff00 | uVar2);\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 184
    },
    "0040225a": {
        "rules": [
            "PEB access",
            "get process heap force flags"
        ],
        "decompiled_code": "\nuint fcn.0040225a(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(*(in_FS_OFFSET + 0x18) + 0x30);\n}\n",
        "token_count": 41
    }
}