{
    "00404858": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404858(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00404909(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "004014e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004014e0(void)\n\n{\n    int32_t iVar1;\n    uint extraout_var;\n    \n    if (*0x42b678 == 0) {\n        iVar1 = *0x42b678;\n        fcn.0040410c(0);\n        if (*0x42b678 == 0) {\n            *0x42b66c = *0x42b66c + 1;\n            *0x42b678 = *0x42b66c;\n        }\n        fcn.00404134(iVar1, extraout_var);\n    }\n    return *0x42b678;\n}\n",
        "token_count": 141
    },
    "00401640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00401640(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_ESI;\n    \n    iVar1 = *in_EAX;\n    if (unaff_ESI < *(iVar1 + 0xc)) {\n        iVar2 = *(*(iVar1 + 8) + unaff_ESI * 4);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (*(iVar1 + 0x14) != '\\0') {\n        iVar1 = fcn.00403dea();\n        if (unaff_ESI < *(iVar1 + 0xc)) {\n            return *(*(iVar1 + 8) + unaff_ESI * 4);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 204
    },
    "00401870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401870(code **param_1)\n\n{\n    *param_1 = vtable.std::ctype_wchar_t_.0;\n    if (param_1[5] != NULL) {\n        fcn.00404909(param_1[4]);\n    }\n    *param_1 = vtable.std::ctype_base.0;\n    *param_1 = vtable.std::locale::facet.0;\n    return;\n}\n",
        "token_count": 97
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402d70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402d70(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        uVar1 = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.004038a0(param_1 + 4, 0x10, uVar1, param_3);\n        }\n        fcn.00403320(uVar1, *(param_1 + 0x18) + 1);\n    }\n    *(param_1 + 0x18) = 0xf;\n    fcn.00403260(param_3);\n    return;\n}\n",
        "token_count": 177
    },
    "00402de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402de0(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if (*(param_1 + 0x28) == 0) {\n        in_EAX = in_EAX | 4;\n    }\n    fcn.00401c70(in_EAX, param_1);\n    return;\n}\n",
        "token_count": 79
    },
    "00403290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00403290(int32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    char cVar2;\n    \n    uVar1 = fcn.004034e0();\n    if (uVar1 < param_2) {\n        fcn.0040419a();\n    }\n    if (*(param_1 + 0x18) < param_2) {\n        fcn.00403500(param_2, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, param_5\n                     , param_6);\n        return param_2 != 0;\n    }\n    if ((cVar2 != '\\0') && (param_2 < 0x10)) {\n        uVar1 = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            uVar1 = param_2;\n        }\n        fcn.00402d70(1, uVar1);\n        return param_2 != 0;\n    }\n    if (param_2 == 0) {\n        fcn.00403260(0);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 330
    },
    "004034e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004034e0(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00403760();\n    if (uVar1 < 2) {\n        return 1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 63
    },
    "00403a10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403a10(uint32_t param_1)\n\n{\n    code *pcVar1;\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 == 0) {\n        fcn.00401000();\n        fcn.00405f6f(&stack0xfffffff0, 0x429070);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.0040520b(param_1);\n    return;\n}\n",
        "token_count": 130
    },
    "0040502c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040511f: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00405124)\n// WARNING: Removing unreachable block (ram,0x00405152)\n// WARNING: Removing unreachable block (ram,0x0040512a)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040502c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408dd0(0x428af0, 0x18);\n    fcn.004082d9(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x42b870 != 1) {\n        *0x42b86c = 1;\n        *0x42b868 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.004093f5(*0x4d1c54);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.004093f5(*0x4d1c50);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.004093ec();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.004093f5(*piVar2);\n                        iVar3 = fcn.004093ec();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.004093f5(*0x4d1c54);\n                        piVar1 = fcn.004093f5(*0x4d1c50);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00404f66(0x4241d8);\n        }\n        fcn.00404f66(0x4241e0);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004081ff(8);\n    }\n    return;\n}\n",
        "token_count": 804
    },
    "00405bf3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00405bf3(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x405c9e;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00405cca;\n        uStack36 = *0x42a268 ^ &fcn.00405bf3::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00405bf3::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00409641();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00405bf3::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 722
    },
    "00405ee3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ee3(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x42a268) {\n        return;\n    }\n    *0x42c0a8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x42c0ac = &arg_8h;\n    *0x42bfe8 = 0x10001;\n    *0x42bf90 = 0xc0000409;\n    *0x42bf94 = 1;\n    var_328h = *0x42a268;\n    var_324h = *0x42a26c;\n    *0x42bf9c = unaff_retaddr;\n    *0x42c074 = in_GS;\n    *0x42c078 = in_FS;\n    *0x42c07c = in_ES;\n    *0x42c080 = in_DS;\n    *0x42c084 = unaff_EDI;\n    *0x42c088 = unaff_ESI;\n    *0x42c08c = unaff_EBX;\n    *0x42c090 = in_EDX;\n    *0x42c094 = in_ECX;\n    *0x42c098 = in_EAX;\n    *0x42c09c = unaff_EBP;\n    *0x42c0a0 = unaff_retaddr;\n    *0x42c0a4 = in_CS;\n    *0x42c0b0 = in_SS;\n    *0x42bfe0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004092f5(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x425494);\n    if (*0x42bfe0 == 0) {\n        fcn.004092f5(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 842
    },
    "0040a6e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a6e9(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004081ff(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0040b448": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040b448(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409641();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00409641();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0040b710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b710(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00405e31(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00409641();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00409641();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00405e0a(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040b4a8(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0040fc13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040fc13(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004093ec();\n    var_4h = 0;\n    if (*0x42c2d4 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x42c2d4 = fcn.0040937a(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x42c2d8 = fcn.0040937a(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x42c2dc = fcn.0040937a(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x42c2e4 = fcn.0040937a(uVar3);\n        if (*0x42c2e4 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x42c2e0 = fcn.0040937a(uVar3);\n        }\n    }\n    if ((*0x42c2e0 != iVar1) && (*0x42c2e4 != iVar1)) {\n        pcVar4 = fcn.004093f5(*0x42c2e0);\n        pcVar5 = fcn.004093f5(*0x42c2e4);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040fd55;\n        }\n    }\n    if ((((*0x42c2d8 != iVar1) && (pcVar4 = fcn.004093f5(*0x42c2d8),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x42c2dc != iVar1 && (pcVar4 = fcn.004093f5(*0x42c2dc),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040fd55:\n    pcVar4 = fcn.004093f5(*0x42c2d4);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 849
    },
    "004116fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004116fe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42a268 ^ &stack0xfffffffc;\n    fcn.00407121(arg_10h);\n    var_14h = fcn.00412f69(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004124e1(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00411757:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00411797;\n        }\n        if (iVar1 != 2) {\ncode_r0x00411789:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00411797;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00411789;\n        goto code_r0x00411757;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00411797:\n    fcn.00405ee3(unaff_EBX);\n    return;\n}\n",
        "token_count": 494
    },
    "004117a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004117a6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42a268 ^ &stack0xfffffffc;\n    fcn.00407121(arg_10h);\n    var_14h = fcn.00412f69(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00412a25(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004117ff:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041183f;\n        }\n        if (iVar1 != 2) {\ncode_r0x00411831:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041183f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00411831;\n        goto code_r0x004117ff;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041183f:\n    fcn.00405ee3(unaff_EBX);\n    return;\n}\n",
        "token_count": 498
    },
    "004124e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004124e1(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004129e2;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00412616;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0041261d;\ncode_r0x00412616:\n                        do {\n                            var_4h = 1;\ncode_r0x0041261d:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0041262b;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0041262b:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42aed4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42aed4 < iVar12) {\n                if (iVar12 < *0x42aed0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x42aed0;\n                    uVar5 = 1;\n                }\n                goto code_r0x004129e2;\n            }\n            var_10h = *0x42aed4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004127ce;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004127ce:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004129e2:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3660
    },
    "00412a25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412a25(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00412f26;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x42aef0 - 1;\n        iVar4 = *0x42aef0 + (*0x42aef0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x42aef0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00412b5a;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00412b61;\ncode_r0x00412b5a:\n                        do {\n                            var_4h = 1;\ncode_r0x00412b61:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00412b6f;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00412b6f:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42aeec - *0x42aef0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42aeec < iVar12) {\n                if (iVar12 < *0x42aee8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x42aefc;\n                    iVar4 = *0x42aef4 + (*0x42aef4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42aef4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x42aef4 + (*0x42aef4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42aef4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x42aefc + *0x42aee8;\n                    uVar5 = 1;\n                }\n                goto code_r0x00412f26;\n            }\n            var_10h = *0x42aeec - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x42aef0 - 1;\n            iVar12 = *0x42aef0 + (*0x42aef0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x42aef0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00412d12;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00412d12:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x42aef4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00412f26:\n    var_20h = iVar12 << (0x1fU - *0x42aef4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x42aef8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x42aef8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3665
    },
    "00401780": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00401780(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar auStack136 [8];\n    uchar auStack128 [108];\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x423280;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        iVar1 = fcn.0040520b(0x20);\n        uStack4 = 0;\n        if (iVar1 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = fcn.00401620();\n            uStack4 = CONCAT31(uStack4._1_3_, 1);\n            fcn.00401350(auStack128, uVar2);\n            iVar3 = fcn.00401760();\n        }\n        uStack12 = 2;\n        *param_1 = iVar3;\n        if (iVar1 != 0) {\n            fcn.004013d0(auStack136);\n            fcn.00401f20();\n        }\n    }\n    *in_FS_OFFSET = uStack20;\n    return 2;\n}\n",
        "token_count": 329
    },
    "00402b60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402b60(uint param_1, uint8_t param_2)\n\n{\n    fcn.00401600();\n    if ((param_2 & 1) != 0) {\n        fcn.00404ca8(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 69
    },
    "00403000": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00403000(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x40) & 1) != 0) {\n        fcn.00402e10();\n        fcn.00403490();\n    }\n    fcn.00402e70();\n    fcn.00402ee0();\n    *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) & 0xfffffffe;\n    *(unaff_ESI + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "00401520": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401520(int32_t param_1)\n\n{\n    fcn.0040410c(0);\n    if (*(param_1 + 4) != -1) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    fcn.00404134();\n    return;\n}\n",
        "token_count": 80
    },
    "00401550": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401550(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040410c(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.00404134();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 123
    },
    "004037e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.004037e0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack36;\n    uchar auStack32 [4];\n    uint uStack28;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x423298;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar3 = 0;\n    fcn.0040410c(0);\n    iVar2 = *0x4d1b00;\n    uStack8 = 0;\n    iStack36 = *0x4d1b00;\n    fcn.004014e0();\n    iVar1 = fcn.00401640();\n    if ((iVar1 == 0) && (iVar1 = iVar2,  iVar2 == 0)) {\n        iVar2 = fcn.00401780(&iStack36);\n        if (iVar2 == -1) {\n            fcn.0040487b(\"bad cast\");\n            fcn.00405f6f(auStack32, 0x429038);\n        }\n        *0x4d1b00 = iVar3;\n        fcn.00401520();\n        fcn.00401590();\n        iVar1 = iVar3;\n    }\n    uStack20 = 0xffffffff;\n    fcn.00404134();\n    *in_FS_OFFSET = uStack28;\n    return iVar1;\n}\n",
        "token_count": 358
    },
    "00403260": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403260(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uStack4;\n    \n    uStack4 = param_1 & 0xffffff;\n    *(param_1 + 0x14) = param_2;\n    iVar1 = fcn.00403310(&uStack4 + 3);\n    fcn.004010f0(iVar1 + param_2);\n    return;\n}\n",
        "token_count": 107
    },
    "00403500": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00403500(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4231a0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar5 = var_8h | 0xf;\n    uVar1 = fcn.004034e0();\n    if (((uVar5 <= uVar1) && (uVar4 = *(in_ECX + 0x18) >> 1,  var_8h = uVar5,  uVar5 / 3 < uVar4)) &&\n       (*(in_ECX + 0x18) <= uVar1 - uVar4)) {\n        var_8h = uVar4 + *(in_ECX + 0x18);\n    }\n    var_4h = 0;\n    uVar2 = fcn.00403750(var_8h + 1);\n    if (var_ch != 0) {\n        uVar3 = fcn.00403310(var_ch);\n        fcn.004038a0(uVar2, var_8h + 1, uVar3);\n    }\n    fcn.00402d70(1, 0);\n    *(in_ECX + 4) = uVar2;\n    *(in_ECX + 0x18) = var_8h;\n    fcn.00403260(var_ch);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 493
    },
    "00409eb5": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00409eb5(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "004212e0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.004212e0(uint32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iStack1772;\n    int32_t iStack1108;\n    int32_t iStack1088;\n    uchar auStack1084 [56];\n    uchar auStack1028 [1028];\n    \n    iVar4 = *0x42b47c;\n    iVar3 = *0x42b474;\n    iVar2 = *0x42b470;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetTapeParameters;\n    uVar5 = param_1[1];\n    uVar7 = *param_1;\n    iStack1772 = -0x3910c8e0;\n    iStack1088 = *0x42b478;\n    iStack1108 = 0x20;\n    do {\n        if (*0x4a616c == 0x36f) {\n            (*_sym.imp.KERNEL32.dll_SleepEx)(0, 0);\n        }\n        uVar6 = uVar7 * 0x10 + iStack1088;\n        *0x4a450c = 0xe9ea0636;\n        if (*0x4a616c == 0x3f5) {\n            (*_sym.imp.KERNEL32.dll_SetSystemTimeAdjustment)(0, 0);\n        }\n        if (*0x4a616c == 0x6e6) {\n            (*_sym.imp.KERNEL32.dll_CreateMutexW)(0, 0, 0);\n            iStack1088 = 0;\n            fcn.00409300(auStack1084, 0, 0x30);\n            (*_sym.imp.KERNEL32.dll_SetDefaultCommConfigW)(0, &iStack1088, 0);\n        }\n        uVar5 = uVar5 - ((uVar7 >> 5) + iVar4 ^ uVar6 ^ iStack1772 + uVar7);\n        if (*0x4a616c == 0x839) {\n            (*pcVar1)(0, 0, auStack1084);\n            (*_sym.imp.KERNEL32.dll_GetTapeStatus)(0);\n            (*pcVar1)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WriteTapemark)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_SleepEx)(0, 0);\n            (*_sym.imp.KERNEL32.dll_DeleteVolumeMountPointA)(0);\n        }\n        if (*0x4a616c == 0x78c) {\n            sub.KERNEL32.dll_GetSystemPowerStatus(0);\n            (*_sym.imp.KERNEL32.dll_ReadConsoleA)(0, auStack1028, 0, auStack1084, 0);\n        }\n        *0x4a4510 = 0xcbd61084;\n        *0x4a4514 = 0xffffffff;\n        uVar7 = uVar7 - (uVar5 * 0x10 + iVar2 ^ (uVar5 >> 5) + iVar3 ^ iStack1772 + uVar5);\n        if (*0x4a616c == 0x417) {\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(0, 0);\n        }\n        iStack1772 = iStack1772 + 0x61c88647;\n        iStack1108 = iStack1108 + -1;\n    } while (iStack1108 != 0);\n    *param_1 = uVar7;\n    param_1[1] = uVar5;\n    return;\n}\n",
        "token_count": 841
    },
    "00422cf0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00422cf0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = *0x4a616c;\n    iVar4 = *0x4a4508;\n    if (*0x4a616c == 0x2ab) {\n        (*_sym.imp.KERNEL32.dll__lwrite)(0, 0, 0);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_SleepEx;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetPriorityClass;\n    for (uVar3 = uVar3 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        if (*0x4a616c == 0xe1b) {\n            (*pcVar1)(0, 0);\n        }\n        if (*0x4a616c == 0x710) {\n            (*pcVar2)(0, 0);\n            (*_sym.imp.KERNEL32.dll_LoadResource)(0, 0);\n        }\n        fcn.004212e0(iVar4);\n        if (*0x4a616c == 0xe60) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n        }\n        iVar4 = iVar4 + 8;\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "00401110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401110(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00404dda(param_1, param_2, param_3, param_4);\n    return param_1;\n}\n",
        "token_count": 59
    },
    "00401140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401140(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.0040471d(param_1, param_2, param_3, param_4);\n    return param_1;\n}\n",
        "token_count": 60
    },
    "004011c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004011c0(code **param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4231f8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0040477a();\n    uStack4 = 0;\n    *param_1 = vtable.std::logic_error.0;\n    fcn.00401ef0(param_2);\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 155
    },
    "004012c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** fcn.004012c0(code **param_1, uint param_2)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x4231d8;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0040477a();\n    uStack4 = 0;\n    *param_1 = vtable.std::runtime_error.0;\n    fcn.00401ef0(param_2);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 160
    },
    "00401350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00401350(uint param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x423194;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0040410c(0);\n    uStack8 = 0;\n    fcn.00401ea0();\n    fcn.00401ea0();\n    fcn.00401ea0();\n    fcn.00401ea0();\n    uStack8 = CONCAT31(uStack8._1_3_, 4);\n    fcn.00404056(param_1, param_1);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 204
    },
    "004013d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004013d0(uint param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack8 = 0x423194;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 4;\n    fcn.00403eed(param_1);\n    fcn.00401f20();\n    fcn.00401f20();\n    fcn.00401f20();\n    fcn.00401f20();\n    uStack4 = 0xffffffff;\n    fcn.00404134();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 159
    },
    "00401440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401440(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    uchar auStack20 [20];\n    \n    puVar3 = fcn.004045d6(auStack20);\n    uVar1 = puVar3[1];\n    *unaff_ESI = *puVar3;\n    uVar2 = puVar3[2];\n    unaff_ESI[1] = uVar1;\n    uVar1 = puVar3[3];\n    unaff_ESI[2] = uVar2;\n    unaff_ESI[3] = uVar1;\n    return;\n}\n",
        "token_count": 152
    },
    "00401620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401620(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00401ef0(*in_EAX + 0x18, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "004016e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004016e0(code **param_1, int32_t param_2)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4231f8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004047fb(param_2);\n    uStack8 = 0;\n    *param_1 = vtable.std::logic_error.0;\n    fcn.00401ef0(param_2 + 0xc);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 171
    },
    "004018a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004018a0(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_EDI;\n    \n    puVar1 = fcn.00401440();\n    *(unaff_EDI + 8) = *puVar1;\n    *(unaff_EDI + 0xc) = puVar1[1];\n    *(unaff_EDI + 0x10) = puVar1[2];\n    *(unaff_EDI + 0x14) = puVar1[3];\n    puVar1 = fcn.00401470();\n    *(unaff_EDI + 0x18) = *puVar1;\n    *(unaff_EDI + 0x1c) = puVar1[1];\n    return;\n}\n",
        "token_count": 167
    },
    "00401c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401c70(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uchar auStack140 [12];\n    uchar auStack128 [56];\n    uchar auStack72 [36];\n    uint uStack36;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x42330e;\n    *in_FS_OFFSET = &uStack12;\n    *(param_1 + 8) = param_2 & 0x17;\n    uVar1 = *(param_1 + 0xc) & param_2 & 0x17;\n    if (uVar1 != 0) {\n        if ((uVar1 & 4) != 0) {\n            fcn.00401ec0(\"ios_base::badbit set\");\n            uStack8 = 0;\n            fcn.00401c50();\n            fcn.00405f6f(auStack128, 0x428fc4);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 2) != 0) {\n            fcn.00401ec0(\"ios_base::failbit set\");\n            uStack20 = 1;\n            fcn.00401c50();\n            fcn.00405f6f(auStack140, 0x428fc4);\n        }\n        fcn.00401ec0(\"ios_base::eofbit set\");\n        uStack20 = 2;\n        fcn.00401c50();\n        fcn.00405f6f(auStack72, 0x428fc4);\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 424
    },
    "00401db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00401db0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    \n    *(unaff_EDI + 0x24) = 0;\n    *(unaff_EDI + 4) = 0;\n    *(unaff_EDI + 0xc) = 0;\n    *(unaff_EDI + 0x10) = 0x201;\n    *(unaff_EDI + 0x14) = 6;\n    *(unaff_EDI + 0x18) = 0;\n    *(unaff_EDI + 0x1c) = 0;\n    *(unaff_EDI + 0x20) = 0;\n    fcn.00401d60();\n    iVar1 = fcn.0040520b(4);\n    if (iVar1 != 0) {\n        uVar2 = fcn.004015d0();\n        *(unaff_EDI + 0x24) = uVar2;\n        return;\n    }\n    *(unaff_EDI + 0x24) = 0;\n    return;\n}\n",
        "token_count": 251
    },
    "00401e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401e60(ulong param_1)\n\n{\n    fcn.00404cc0(param_1);\n    return;\n}\n",
        "token_count": 32
    },
    "00401e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401e80(void)\n\n{\n    int32_t in_EAX;\n    code **arg_8h;\n    \n    arg_8h = in_EAX + 0x54;\n    fcn.004022d0();\n    *arg_8h = vtable.std::basic_ios_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *arg_8h = vtable.std::ios_base.0;\n    fcn.00403d11(arg_8h);\n    return;\n}\n",
        "token_count": 114
    },
    "00402240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00402240(int32_t *param_1)\n\n{\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x423367;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x428098;\n    param_1[2] = 0x4280a0;\n    fcn.00402e00();\n    uStack4 = 0;\n    fcn.00402f50(param_1, param_1 + 3);\n    uStack12 = 1;\n    *(param_1 + *(*param_1 + 4)) =\n         vtable.std::basic_stringstream_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    fcn.00402fb0(param_1 + 3);\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 245
    },
    "004022d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004022d0(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x42323b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *(*(*(param_1 + -0x54) + 4) + -0x54 + param_1) =\n         vtable.std::basic_stringstream_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    uStack4 = 0;\n    fcn.00402360();\n    fcn.00402330();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 174
    },
    "00402a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402a60(uint param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uchar auStack28 [4];\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4232d8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00403480();\n    fcn.00403140();\n    uStack8 = 0;\n    fcn.00403100();\n    *in_FS_OFFSET = auStack28;\n    return param_1;\n}\n",
        "token_count": 141
    },
    "00402ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402ad0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uchar auStack12 [12];\n    \n    puVar3 = fcn.00403070();\n    uVar1 = *puVar3;\n    uVar2 = puVar3[1];\n    puVar3 = fcn.00403050();\n    fcn.00403090(auStack12, *puVar3, puVar3[1], uVar1, uVar2);\n    return;\n}\n",
        "token_count": 120
    },
    "00402cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402cc0(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.00401f40();\n    if (uVar2 < param_3) {\n        fcn.004041d2();\n    }\n    iVar3 = fcn.00401f40();\n    uVar2 = iVar3 - param_3;\n    if (param_4 < iVar3 - param_3) {\n        uVar2 = param_4;\n    }\n    if (param_1 == param_2) {\n        fcn.00403200(uVar2 + param_3, 0xffffffff);\n        fcn.00403200(0, param_3);\n        return param_1;\n    }\n    cVar1 = fcn.00403290(uVar2, 0);\n    if (cVar1 != '\\0') {\n        iVar3 = fcn.00403310(uVar2);\n        uVar4 = fcn.00403310(*(param_1 + 0x18), iVar3 + param_3);\n        fcn.004038a0(uVar4);\n        fcn.00403260(uVar2);\n    }\n    return param_1;\n}\n",
        "token_count": 313
    },
    "00402d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402d50(uint param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00401100(param_1);\n    fcn.00403190(param_1, uVar1);\n    return;\n}\n",
        "token_count": 56
    },
    "00402e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e60(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x30) = **(param_2 + 0x30) - param_1;\n    **(param_2 + 0x20) = **(param_2 + 0x20) + param_1 * 2;\n    return;\n}\n",
        "token_count": 91
    },
    "00402ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402ed0(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x34) = **(param_2 + 0x34) - param_1;\n    **(param_2 + 0x24) = **(param_2 + 0x24) + param_1 * 2;\n    return;\n}\n",
        "token_count": 91
    },
    "00402f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t * fcn.00402f50(int32_t *param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x42332b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00403350(param_1);\n    uStack12 = 1;\n    fcn.00403330(param_1 + 2);\n    *(param_1 + *(*param_1 + 4)) = vtable.std::basic_iostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *in_FS_OFFSET = param_2;\n    return param_1;\n}\n",
        "token_count": 181
    },
    "00402fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.00402fb0(code **param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x423218;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00403390(param_1);\n    uStack8 = 0;\n    *param_1 = vtable.std::basic_stringbuf_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    fcn.00403410();\n    fcn.00403400();\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 180
    },
    "00403090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403090(int32_t param_1, uint param_2, uint param_3)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    fcn.00403420(param_2, param_3);\n    fcn.00403420(param_2, param_3);\n    cVar1 = fcn.004034b0();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00403940(unaff_ESI, *(unaff_EBX + 0x10), *(param_1 + 4));\n        fcn.00403440();\n        *(unaff_EBX + 0x10) = uVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 187
    },
    "00403200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403200(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0x14) < param_2) {\n        fcn.004041d2();\n    }\n    uVar1 = *(param_1 + 0x14) - param_2;\n    if (uVar1 < param_3) {\n        param_3 = uVar1;\n    }\n    if (param_3 != 0) {\n        iVar2 = fcn.00403310(uVar1 - param_3);\n        iVar2 = fcn.00403310(*(param_1 + 0x18) - param_2, iVar2 + param_2 + param_3);\n        fcn.004039a0(iVar2 + param_2);\n        fcn.00403260(*(param_1 + 0x14) - param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 235
    },
    "00403350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00403350(int32_t *param_1, uint param_2)\n\n{\n    *(param_1 + *(*param_1 + 4)) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    param_1[1] = 0;\n    fcn.00403640(param_2);\n    return param_1;\n}\n",
        "token_count": 91
    },
    "00403390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** fcn.00403390(code **param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x4231bb;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    fcn.00404227();\n    uStack4 = 0;\n    iVar1 = fcn.0040520b(4);\n    if (iVar1 == 0) {\n        pcVar2 = NULL;\n    }\n    else {\n        pcVar2 = fcn.004015d0();\n    }\n    param_1[0xe] = pcVar2;\n    fcn.00403680();\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 231
    },
    "00403450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403450(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *unaff_ESI;\n    \n    uVar1 = fcn.004036c0();\n    iVar2 = fcn.00401050(4, uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00401170();\n        *unaff_ESI = uVar1;\n        return;\n    }\n    *unaff_ESI = 0;\n    return;\n}\n",
        "token_count": 115
    },
    "00403600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00403600(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        in_EAX = fcn.00403310();\n        if (in_EAX <= param_2) {\n            iVar1 = fcn.00403310();\n            in_EAX = iVar1 + *(param_1 + 0x14);\n            if (param_2 < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 152
    },
    "004036c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004036c0(void)\n\n{\n    fcn.0040520b(4);\n    return;\n}\n",
        "token_count": 27
    },
    "00403770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403770(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4232b8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00401d80();\n    uStack4 = 0;\n    fcn.004037e0();\n    uStack4 = 0xffffffff;\n    fcn.00401600();\n    fcn.00401750();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 145
    },
    "00403940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403940(uint param_1, uint param_2, uint param_3)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = uStack8 & 0xffffff00;\n    uVar1 = fcn.00403a70();\n    uStack4 = uStack4 & 0xffffff00 | uVar1;\n    puVar2 = fcn.00403480(uStack4, uStack8);\n    fcn.00403ab0(&param_2, param_3, *puVar2);\n    fcn.00403ab0(&param_1);\n    fcn.00403ad0();\n    return;\n}\n",
        "token_count": 168
    },
    "00403a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403a80(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00401110(param_3, param_2, param_1);\n    return;\n}\n",
        "token_count": 50
    },
    "00403ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ab0(uint param_1)\n\n{\n    fcn.00403b80(param_1);\n    return;\n}\n",
        "token_count": 33
    },
    "00403ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403ad0(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_ESI;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = uStack4 & 0xffffff00;\n    uStack8 = uStack8 & 0xffffff00;\n    fcn.00403ab0(&param_1, param_1, uStack4, uStack8);\n    fcn.00403b90();\n    return param_1 + ((in_EAX - unaff_ESI) / 0x1c) * 0x1c;\n}\n",
        "token_count": 146
    },
    "00403b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403b30(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00401140(param_3, param_2, param_1);\n    return;\n}\n",
        "token_count": 50
    },
    "00403b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403b50(void)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EDI;\n    \n    if (in_EAX != unaff_EDI) {\n        do {\n            fcn.00403b70();\n            in_EAX = in_EAX + 0x1c;\n        } while (in_EAX != unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00403b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403b90(int32_t param_1)\n\n{\n    int32_t unaff_EBX;\n    \n    if (param_1 != unaff_EBX) {\n        do {\n            fcn.00403be0();\n            param_1 = param_1 + 0x1c;\n        } while (param_1 != unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00405158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405158(uint arg_8h)\n\n{\n    fcn.0040502c(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "0040994e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409bf2)\n\nfloat10 fcn.0040994e(double param_1)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    double dVar5;\n    double dVar6;\n    uchar auVar7 [16];\n    double dVar8;\n    double in_XMM7_Qa;\n    \n    dVar2 = in_XMM7_Qa & *0x425260;\n    dVar3 = in_XMM7_Qa & *0x425268;\n    if (*0x425388 <= dVar2) {\n        return *0x425398 + *((param_1._4_4_ >> 0x1f) * -8 + 0x425270);\n    }\n    if (*0x425378 <= dVar2) {\n        if (*0x425370 <= dVar2) {\n            if (*0x425368 <= dVar2) {\n                iVar1 = 0x300;\n                dVar3 = *0x425350 / dVar2;\n            }\n            else {\n                iVar4 = (dVar2 + *0x425360 >> 0x2c) - *0x425340;\n                iVar1 = iVar4 * 3;\n                dVar3 = *(iVar4 * 0x18 + 0x425f08);\n                dVar3 = (dVar2 - dVar3) / (dVar2 * dVar3 + *0x425358);\n            }\n            dVar5 = dVar3 * dVar3;\n            dVar6 = dVar5 * dVar5;\n            dVar8 = dVar3 * dVar3 * dVar3 * dVar3;\n            dVar5 = (((*0x425330 * dVar6 + *0x425320) * dVar6 + *0x425310) * dVar6 + *0x425300) * dVar5;\n            auVar7 = CONCAT88(((*0x425338 * dVar8 + *0x425328) * dVar8 + *0x425318) * dVar8 + *0x425308, dVar5);\n            auVar7 = shufpd(auVar7, auVar7, 1);\n            return *(iVar1 * 8 + 0x425ef8) - (((dVar5 + SUB168(auVar7, 0)) * dVar3 - *(iVar1 * 8 + 0x425f00)) - dVar3) |\n                   in_XMM7_Qa ^ dVar2;\n        }\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((((((*0x4252f0 * dVar5 + *0x4252e0) * dVar5 + *0x4252d0) * dVar5 + *0x4252c0) * dVar5 + *0x4252b0) *\n                   dVar5 + *0x4252a0) * dVar5 + *0x425290) * dVar5 + _str.RUUUUU) * dVar2;\n        auVar7 = CONCAT88(((((((*0x4252f8 * dVar3 + *0x4252e8) * dVar3 + *0x4252d8) * dVar3 + *0x4252c8) * dVar3 +\n                            *0x4252b8) * dVar3 + *0x4252a8) * dVar3 + *0x425298) * dVar3 + *0x425288, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (*0x425380 <= dVar2) {\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((*0x425330 * dVar5 + *0x425320) * dVar5 + *0x425310) * dVar5 + *0x425300) * dVar2;\n        auVar7 = CONCAT88(((*0x425338 * dVar3 + *0x425328) * dVar3 + *0x425318) * dVar3 + *0x425308, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (dVar2 != *0x425348) {\n        if (*0x425390 <= dVar2) {\n            return *0x425398 * *0x425398 + param_1;\n        }\n        return *0x425398 * *0x425398 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 1179
    },
    "0040a158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a16c)\n// WARNING: Removing unreachable block (ram,0x0040a172)\n// WARNING: Removing unreachable block (ram,0x0040a174)\n\nvoid fcn.0040a158(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "00421250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory"
        ],
        "decompiled_code": "\nvoid fcn.00421250(void)\n\n{\n    uchar auStack4 [4];\n    \n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*0x4a4508, *0x4a616c, 0x40, auStack4);\n    return;\n}\n",
        "token_count": 61
    },
    "00421290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421290(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack28 [28];\n    \n    if (*0x4a616c == 0x37) {\n        (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsA)(0, auStack28, 0);\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0);\n        in_EAX = (*_sym.imp.KERNEL32.dll_FreeLibraryAndExitThread)(0, 0);\n    }\n    *(*0x4a4508 + in_EAX) = *(*0x4d1afc + 0xa2401 + in_EAX);\n    return;\n}\n",
        "token_count": 148
    },
    "00422d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00422d90(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iStack1048;\n    uchar auStack1032 [1032];\n    \n    *0x4a6168 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x427f48);\n    pcVar3 = _sym.imp.KERNEL32.dll_GetPrivateProfileStructA;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetLocalTime;\n    iVar4 = 0x2bd9db;\n    do {\n        iVar6 = 0x5e38dc8f;\n        iVar4 = iVar4 + -1;\n        *0x4a6164 = 0;\n    } while (iVar4 != 0);\n    *0x4a616c = *0x42b53c + 0xa2401;\n    uVar5 = 0;\n    do {\n        if (*0x4a616c == 0xfc) {\n            (*_sym.imp.KERNEL32.dll_GetLocalTime)(0);\n        }\n        (*pcVar2)();\n        if (*0x4a616c == 0xe7c) {\n            (*pcVar1)(0);\n            (*pcVar3)(0, 0, auStack1032, 0, 0);\n        }\n        if (((0x9c184e5 < uVar5) && (iStack1048 != 0x6a9fe)) && (iVar6 != 0x1b53b01e)) break;\n        uVar5 = uVar5 + 1;\n    } while ((uVar5 >> 0x1f < 0x14) || ((uVar5 >> 0x1f < 0x15 && (uVar5 < 0xc7cfc130))));\n    *0x4a4508 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, *0x4a616c);\n    pcVar2 = _sym.imp.KERNEL32.dll_CreateSemaphoreW;\n    pcVar1 = _sym.imp.KERNEL32.dll_EnumResourceNamesW;\n    iVar4 = 0;\n    do {\n        if (*0x4a616c == 0x1266) {\n            (*pcVar1)(0, 0, 0, 0);\n        }\n        if (iVar4 == 0xe6fb57) {\n            *0x4d1afc = *0x42b468;\n        }\n        if (*0x4a616c == 0x13f5) {\n            (*pcVar2)(0, 0, 0, 0);\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x3230176c);\n    uVar5 = 0;\n    if (*0x4a616c != 0) {\n        do {\n            fcn.00421290();\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *0x4a616c);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_AddAtomW;\n    iVar4 = 0xe972f0;\n    do {\n        if (*0x4a616c == 0x94d) {\n            (*pcVar1)(0);\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_MoveFileW;\n        pcVar2 = _sym.imp.KERNEL32.dll_GetTimeZoneInformation;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    iVar4 = 0;\n    do {\n        if (iVar4 == 0xd26c) {\n            fcn.00421250();\n        }\n        if (*0x4a616c == 0x7a) {\n            (*pcVar2)(0);\n            (*pcVar3)(0, 0);\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x3dc4a3);\n    fcn.00422cf0();\n    return 0;\n}\n",
        "token_count": 930
    },
    "00405b8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405b8a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040be5d(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "00403680": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403680(void)\n\n{\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x10) = unaff_ESI + 8;\n    *(unaff_ESI + 0x14) = unaff_ESI + 0xc;\n    *(unaff_ESI + 0x20) = unaff_ESI + 0x18;\n    *(unaff_ESI + 0x24) = unaff_ESI + 0x1c;\n    *(unaff_ESI + 0x30) = unaff_ESI + 0x28;\n    *(unaff_ESI + 0x34) = unaff_ESI + 0x2c;\n    fcn.00402ee0();\n    fcn.00402e70();\n    return;\n}\n",
        "token_count": 180
    },
    "00403100": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint32_t fcn.00403100(void)\n\n{\n    uint32_t in_EAX;\n    \n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 78
    },
    "00403110": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403110(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0xc) != 0) {\n        fcn.00403440();\n        fcn.00403490();\n    }\n    *(unaff_ESI + 0xc) = 0;\n    *(unaff_ESI + 0x10) = 0;\n    *(unaff_ESI + 0x14) = 0;\n    return;\n}\n",
        "token_count": 107
    },
    "0040a053": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a053(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408dd0(0x428c68, 0xc);\n    fcn.004082d9(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x42bd30;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x42bd2c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040a097;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404909(arg_8h_00);\ncode_r0x0040a097:\n        fcn.00404909(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040a0ba();\n    fcn.00408e15();\n    return;\n}\n",
        "token_count": 397
    }
}