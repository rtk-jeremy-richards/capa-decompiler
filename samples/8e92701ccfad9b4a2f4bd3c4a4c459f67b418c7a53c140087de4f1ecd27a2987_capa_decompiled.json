{
    "0041e1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0041e1b0(code *arg_8h, int32_t arg_ch)\n\n{\n    char32_t cVar1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    \n    cVar1 = str.eOU[0];\n    *0x442030 = *0x442030 - (arg_ch + -99);\n    if (str.eOU[4] == L'\\x00043f58') {\n        *0x44203c = (*0x442038 + -0x11) - (*0x44203c + *0x442018);\n    }\n    if (str.eOU[0] == L'\\t') {\n        *0x442034 = *0x442034 * *0x442030 - *0x442038;\n        *0x442030 = *0x442034 + *0x442038 * 0x47;\n    }\n    else if (str.eOU[0] == L'C') {\n        *0x442030 = *0x442034 + 0xf927 + *0x442030;\n    }\n    else if (str.eOU[0] == L'\u00fc') {\n        *0x442030 = *0x442038 * *0x442030 - *0x442034;\n    }\n    else {\n        *0x442038 = (0x2c - *0x442030) + (*0x442038 + -9) * 2;\n    }\n    *0x442030 = *0x44202c + 0x6abd5 + arg_ch + *0x442030;\n    var_8h = 0;\n    while ((var_8h < 10 &&\n           (*0x442030 = *0x442030 *\n                        L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[var_8h], \n           *0x44203c != str.eOU[2]))) {\n        var_8h = var_8h + 1;\n    }\n    for (var_8h = 6; 4 < var_8h; var_8h = var_8h + -1) {\n        L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[var_8h] =\n             L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[var_8h] - arg_ch;\n    }\n    *0x442030 = *0x442030 * 3 + 0x5d;\n    *0x44202c = *0x442034 + ((*0x442034 + 0xf916) - *0x442034);\n    // WARNING: Could not recover jumptable at 0x0041e402. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*arg_8h)(cVar1, arg_ch + *0x442030 * 2);\n    return;\n}\n",
        "token_count": 792
    },
    "0041e430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0041e430(uchar *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uint var_14h;\n    uchar *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    var_4h = arg_8h;\n    var_10h = arg_ch;\n    *0x442030 = (*0x442036 - 0x1bfe) + *0x442034 + *0x442030 * 2;\n    for (var_8h = 6; 4 < var_8h; var_8h = var_8h + -1) {\n        L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[var_8h] =\n             L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[var_8h] - *0x442034;\n    }\n    *0x44203c = *0x442036 * 0x47 + *0x44202c;\n    if (*0x44202c < str.eOU[0]) {\n        *0x442018 = *0x442018 / *0x442034;\n    }\n    while (arg_10h != 0) {\n        *0x442030 = *0x442036 * 0x47 + arg_10h + -1;\n        *var_4h = *var_10h;\n        var_4h = var_4h + 1;\n        var_10h = var_10h + 1;\n        arg_10h = arg_10h + -1;\n    }\n    *0x442034 = (*0x442036 - 9) - *0x44203c;\n    *0x44203c = *0x442036 * 0x47 + *0x44202c;\n    if (str.eOU[4] == L'\\x00043f58') {\n        *0x44202c = (var_ch + -0x11) - (*0x44202c + *0x442018);\n    }\n    if (str.eOU[0] == L'\\t') {\n        *0x442034 = *0x442034 * var_ch - *0x44202c;\n    }\n    else if ((str.eOU[0] != L'C') && (str.eOU[0] != L'\u00fc')) {\n        *0x44202c = (0x2c - var_ch) + (*0x44202c + L'\\xfffffff7') * 2;\n    }\n    return arg_8h;\n}\n",
        "token_count": 660
    },
    "0041e660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e7af)\n// WARNING: Removing unreachable block (ram,0x0041e7bb)\n// WARNING: Removing unreachable block (ram,0x0041e7e3)\n// WARNING: Removing unreachable block (ram,0x0041e815)\n// WARNING: Removing unreachable block (ram,0x0041e7f7)\n// WARNING: Removing unreachable block (ram,0x0041e831)\n// WARNING: Removing unreachable block (ram,0x0041e861)\n// WARNING: Removing unreachable block (ram,0x0041e845)\n// WARNING: Removing unreachable block (ram,0x0041e87c)\n\nuint16_t fcn.0041e660(void)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    *0x442036 = 0xf4;\n    for (var_10h = 0x24a9; var_10h < 0x25c9; var_10h = var_10h + 4) {\n        if (str.eOU[2] < *0x442036) {\n            *0x442028 = *0x442030;\n        }\n        iVar1 = *0x442030 + 0xf927;\n        if (*0x442036 + *0x45297c == 0x3d3) {\n            *0x442030 = *0x442036 * *0x442030 - *0x44202c;\n            *0x442036 = (*0x442036 - 9) - *0x442034;\n        }\n        if (str.eOU[2] < *0x442036) {\n            *0x442028 = *0x442030;\n        }\n        *0x442034 = *0x442034 - ((*0x442030 + -0x5d) - *0x442036);\n        *0x442038 = (iVar1 + *0x442038) - ((*0x44202c + -0x5d) - *0x44203c);\n        *0x44202c = (*0x442034 - 0x11) - *0x442036;\n        *0x442036 = *0x442030 + '\\'' + *0x442036;\n        *0x45297c = *(*0x45220c + var_10h + -0x24a9) + 0x1026e04;\n        *(*0x45220c + var_10h + -0x24a9) = *0x45297c;\n        if (str.eOU[0] == L'\\t') {\n            *0x442036 = *0x442034 * *0x442036 - *0x442038;\n            *0x442034 = *0x442036 + *0x442038 * 0x47;\n        }\n        else if (str.eOU[0] == L'C') {\n            *0x442034 = (*0x442036 - 0x6d9) + *0x442034;\n        }\n        else if (str.eOU[0] == L'\u00fc') {\n            *0x442034 = *0x442034 * *0x442038 - *0x442036;\n        }\n        else {\n            *0x442038 = *0x442034 + 0x2c + ((*0x442038 + -9) - *0x442034) * 2;\n        }\n        *0x442036 = *0x44203c + '\\'' + *0x442036;\n    }\n    return *0x442034;\n}\n",
        "token_count": 819
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nchar main(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint lpBuffer;\n    uint var_4h;\n    \n    *0x442030 = *0x442030 + 0x31 + *0x442036;\n    fcn.00420820(fcn.0041f270);\n    *0x442030 = 0x40e;\n    uVar2 = fcn.004250fa(0x40e);\n    if (str.eOU[4] == L'\\x00043f58') {\n        *0x44203c = (*0x442036 - 0x11) - (*0x44203c + *0x442018);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(uVar2, *0x442030);\n    *0x442036 = uVar1 + *0x442030 * '\\x02';\n    *0x452984 = 0;\n    while ((*0x452984 < 10 &&\n           (*0x442036 = *0x442036 *\n                        L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[*0x452984], \n           *0x44203c != str.eOU[2]))) {\n        *0x452984 = *0x452984 + 1;\n    }\n    uVar2 = fcn.00420b60(0x1f, 10);\n    fcn.00421610(uVar2);\n    *0x442030 = (*0x442036 - 0x1bfe) + uVar1 + *0x442030 * 2;\n    if (*0x442014 / str.eOU[4] == 0xe32f) {\n        *0x44203c = *0x442036 * *0x44203c - *0x442038;\n    }\n    else {\n        *0x442018 = *0x44203c + L',' + *0x442038 + *0x442018;\n    }\n    uVar2 = fcn.00420860(0, 10);\n    fcn.00421610(uVar2);\n    if (str.eOU[4] == L'\\x00043f58') {\n        *0x44203c = (*0x442036 - 0x11) - (*0x44203c + *0x442018);\n    }\n    if (str.eOU[0] == L'\\t') {\n        *0x44203c = *0x442036 * 0x47 + (*0x44203c * *0x44203c - *0x442036);\n    }\n    else if (str.eOU[0] == L'C') {\n        *0x44203c = *0x44203c * 2 + L'\uf927';\n    }\n    else if (str.eOU[0] == L'\u00fc') {\n        *0x44203c = *0x442036 * *0x44203c - *0x44203c;\n    }\n    else {\n        *0x442036 = (',' - *0x44203c) + (*0x442036 - 9) * '\\x02';\n    }\n    *0x442036 = *0x442036 * *0x44203c - uVar1;\n    for (*0x452984 = 6; 4 < *0x452984; *0x452984 = *0x452984 + -1) {\n        L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[*0x452984] =\n             L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[*0x452984] - *0x442038;\n    }\n    uVar1 = fcn.0041f2d0(*0x442036);\n    if (str.eOU[2] < *0x44203c) {\n        *0x442028 = *0x442036;\n    }\n    cVar3 = uVar1;\n    *0x442036 = cVar3 + '\\'' + *0x442036;\n    if (str.eOU[2] < *0x442038) {\n        *0x442028 = *0x44203c;\n    }\n    if (str.eOU[4] == L'\\x00043f58') {\n        *0x442036 = (*0x44203c + -0x11) - (*0x442036 + *0x442018);\n    }\n    uVar5 = *0x442036 * *0x44203c - cVar3;\n    if (str.eOU[4] == L'\\x00043f58') {\n        *0x44203c = (uVar5 - 0x11) - (*0x44203c + *0x442018);\n    }\n    if (str.eOU[0] == L'\\t') {\n        uVar5 = uVar5 * *0x44203c - uVar5;\n        *0x44203c = uVar5 + uVar5 * 0x47;\n    }\n    else if (str.eOU[0] == L'C') {\n        *0x44203c = uVar5 + 0xf927 + *0x44203c;\n    }\n    else if (str.eOU[0] == L'\u00fc') {\n        *0x44203c = uVar5 * *0x44203c - uVar5;\n    }\n    *0x442036 = (*0x44203c + -0x11) - cVar3;\n    for (*0x452984 = 6; 4 < *0x452984; *0x452984 = *0x452984 + -1) {\n        L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[*0x452984] =\n             L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[*0x452984] - *0x442038;\n    }\n    *0x442030 = *0x442030 - 0x43be1c;\n    if (*0x442036 < str.eOU[0]) {\n        *0x442018 = *0x442018 / *0x442030;\n    }\n    *0x44203c = *0x44203c - ((uVar1 - 0x5d) - *0x442036);\n    if (*0x442014 / str.eOU[4] == 0xe32f) {\n        *0x44203c = *0x442036 * *0x44203c - *0x442038;\n    }\n    else {\n        *0x442018 = *0x44203c + L',' + *0x442038 + *0x442018;\n    }\n    if (str.eOU[2] < *0x44203c) {\n        *0x442028 = *0x442036 + 0x10;\n    }\n    uVar5 = (*0x44203c + -0x11) - cVar3;\n    if (str.eOU[2] < *0x442038) {\n        *0x442028 = *0x44203c;\n    }\n    if (uVar5 < str.eOU[0]) {\n        *0x442018 = *0x442018 / *0x44203c;\n    }\n    if (str.eOU[2] < *0x442038) {\n        *0x442028 = *0x44203c;\n    }\n    *0x442036 = cVar3 + uVar5 + 0x87;\n    *0x452984 = 0;\n    while ((*0x452984 < 10 &&\n           (*0x44203c = *0x44203c *\n                        L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[*0x452984], \n           *0x44203c - str.eOU[2] != 0))) {\n        *0x452984 = *0x452984 + 1;\n    }\n    uVar4 = *0x442036;\n    *0x452984 = 0;\n    while ((*0x452984 < 10 &&\n           (*0x442036 = *0x442036 *\n                        L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[*0x452984], \n           (uVar4 - 0x1bfe) + uVar1 + *0x44203c * 2 != str.eOU[2]))) {\n        *0x452984 = *0x452984 + 1;\n    }\n    if (str.eOU[4] == L'\\x00043f58') {\n        *0x442036 = 0xbf - (*0x442036 + *0x442018);\n    }\n    *0x44203c = 0x43be30;\n    for (*0x452984 = 6; 4 < *0x452984; *0x452984 = *0x452984 + -1) {\n        L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[*0x452984] =\n             L\"}\\x1bOU\\x88\\x10\u00b4\u00b3\\x9f\\x99}\\x000a8228\u74d8\\x000a2f6f\\x0008fe66\\x000c5774\ud844\udc02\u2b53\"[*0x452984] - *0x44203c;\n    }\n    *0x44203c = uVar1 + *0x44203c + 0x2c + *0x442036;\n    if (*0x442014 / str.eOU[4] == 0xe32f) {\n        *0x44203c = *0x442036 * *0x44203c - *0x442038;\n    }\n    else {\n        *0x442018 = *0x44203c + 0x2c + *0x442038 + *0x442018;\n    }\n    if (*0x442014 / str.eOU[4] != 0xe32f) {\n        *0x442018 = *0x44203c + 0x2c + *0x442030 + 0x43be1c + *0x442018;\n    }\n    cVar3 = *0x442036 * 'G' + -0x30;\n    *0x44202c = *0x44202c - ((*0x442038 + L'\\xffffffa3') - *0x442036);\n    *0x442030 = *0x442030 + 0x43be1c;\n    *0x442036 = cVar3;\n    *0x44203c = 0x43b2d0;\n    return cVar3;\n}\n",
        "token_count": 2700
    },
    "0041f2d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.0041f2d0(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    char32_t cVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    uVar6 = *0x442030 * 'G' + arg_8h;\n    *0x45220c = 0x444018;\n    *0x442034 = (*0x44202c + -9) - uVar6;\n    *0x442036 = *0x44203c * -0x46 + -0x35 + uVar6 * -0x72;\n    fcn.004287b0(0x444018, 0x43b2d0, 0x33fe);\n    uVar6 = *0x442036 * *0x442036 - *0x44203c;\n    var_24h = 0x94a3e9;\n    if (*0x44203c < str.eOU[0]) {\n        *0x442018 = *0x442018 / *0x442030;\n    }\n    *0x442034 = *0x44203c + -0x1bfe + uVar6 + *0x442034 * 2;\n    var_18h = 0xc;\n    var_20h = 0x69;\n    *0x44202c = uVar6 + *0x442038 * 2;\n    var_10h = 0xb9;\n    *0x442036 = (*0x442034 + -0x11) - *0x44203c;\n    while( true ) {\n        if (*0x442034 < 0x499c) {\n            *0x442030 = *0x44203c + *0x442034 * 2;\n        }\n        if (var_24h == 0) break;\n        if (*0x442030 < *0x442036) {\n            *0x442036 = (*0x442038 + -9) - *0x44203c;\n            *0x442034 = (*0x442030 + -9) - *0x442038;\n        }\n        else {\n            *0x442038 = *0x442038 - (-0x51 - *0x442036);\n        }\n        fcn.0041e660();\n        if (str.eOU[0] == L'\\t') {\n            *0x442036 = *0x442034 * *0x442036 - *0x44202c;\n        }\n        else if ((str.eOU[0] != L'C') && (str.eOU[0] != L'\u00fc')) {\n            *0x44202c = *0x442034 + 0x2c + ((*0x44202c + L'\\xfffffff7') - *0x442034) * 2;\n        }\n        var_24h = var_24h + -1;\n        *0x442034 = *0x442030 * 0x47 + *0x442038;\n    }\n    *0x442030 = *0x44203c + L'\uf927' + *0x442030;\n    var_24h = 0x94a3e9;\n    if (str.eOU[0] == L'\\t') {\n        *0x442036 = *0x442034 * *0x442036 - *0x44202c;\n        *0x442034 = *0x442036 + *0x44202c * 0x47;\n    }\n    else if (str.eOU[0] == L'C') {\n        *0x442034 = (*0x442036 - 0x6d9) + *0x442034;\n    }\n    else if (str.eOU[0] == L'\u00fc') {\n        *0x442034 = *0x442034 * *0x44202c - *0x442036;\n    }\n    else {\n        *0x44202c = *0x442034 + 0x2c + ((*0x44202c + L'\\xfffffff7') - *0x442034) * 2;\n    }\n    do {\n        if (*0x442036 < str.eOU[0]) {\n            *0x442018 = *0x442018 / *0x44203c;\n        }\n        if (*0x442036 < *0x442030) {\n            *0x442030 = *0x442036 * *0x442030 - *0x44203c;\n            if (*0x442030 == L'\\x005f4875') {\n                if (str.eOU[0] == L'\\t') {\n                    cVar4 = *0x442036 * *0x442038;\n                    *0x442038 = cVar4 + -0x75;\n                    *0x442036 = cVar4 - 2;\n                }\n                else if (str.eOU[0] == L'C') {\n                    *0x442036 = *0x442038 + '\\'' + *0x442036;\n                }\n                else if (str.eOU[0] == L'\u00fc') {\n                    *0x442036 = *0x442036 * 'u' - *0x442038;\n                }\n                else {\n                    *0x442030 = *0x442036 + 0x2c + (0x5f486c - *0x442036) * 2;\n                }\n            }\n            *0x442036 = *0x442038 + '\\x02' + *0x442030 + *0x442036 * '\\x02';\n        }\n        if (str.eOU[2] < *0x442036) {\n            *0x442028 = *0x44202c;\n        }\n        iVar2 = *0x44202c;\n        if (var_20h < 5) {\n            if (str.eOU[0] == L'\\t') {\n                *0x442036 = *0x442034 * *0x442036 - *0x44202c;\n                *0x442034 = *0x442036 + iVar2 * 0x47;\n            }\n            else if (str.eOU[0] == L'C') {\n                *0x442034 = (*0x442036 - 0x6d9) + *0x442034;\n            }\n            else if (str.eOU[0] == L'\u00fc') {\n                *0x442034 = *0x442034 * iVar2 - *0x442036;\n            }\n            else {\n                *0x44202c = *0x442034 + 0x2c + ((*0x44202c + L'\\xfffffff7') - *0x442034) * 2;\n            }\n            if (str.eOU[0] == L'\\t') {\n                *0x44203c = *0x442034 * *0x44203c - *0x442036;\n                *0x442034 = *0x442036 * 0x47 + *0x44203c;\n            }\n            else if (str.eOU[0] == L'C') {\n                *0x442034 = *0x44203c + -0x6d9 + *0x442034;\n            }\n            else if (str.eOU[0] == L'\u00fc') {\n                *0x442034 = *0x442036 * *0x442034 - *0x44203c;\n            }\n            else {\n                *0x442036 = (',' - *0x442034) + (*0x442036 - 9) * '\\x02';\n            }\n            var_20h = var_20h - 1;\n        }\n        else {\n            *0x442034 = *0x442034 + iVar2 + 0x2c + *0x442036;\n        }\n        iVar3 = *0x44203c;\n        iVar2 = *0x442030;\n        *0x442034 = iVar3 + -0x1bfe + iVar2 + *0x442034 * 2;\n        if (*0x442014 / str.eOU[4] == 0xe32f) {\n            *0x44202c = *0x442034 * *0x44202c - *0x442036;\n        }\n        else {\n            *0x442018 = *0x442036 + *0x442018 + 0x2c + *0x44202c;\n        }\n        if ((*0x442036 < 0x53a6) && (*0x442034 = (iVar2 + -9) - iVar3,  str.eOU[4] == L'\\x00043f58')) {\n            *0x442036 = (*0x442034 + -0x11) - (*0x442036 + *0x442018);\n        }\n        cVar4 = *0x442034;\n        if (*0x442014 / str.eOU[4] == 0xe32f) {\n            *0x442036 = cVar4 * *0x442036 - *0x44203c;\n        }\n        else {\n            *0x442018 = *0x442036 + 0x2c + *0x44203c + *0x442018;\n        }\n        iVar1 = *0x44202c;\n        if (var_10h < 3) {\n            if (str.eOU[4] == L'\\x00043f58') {\n                *0x442036 = (cVar4 + -0x11) - (*0x442036 + *0x442018);\n            }\n            if (str.eOU[0] == L'\\t') {\n                *0x442036 = cVar4 * *0x442036 - *0x44202c;\n                *0x442034 = *0x442036 + iVar1 * 0x47;\n            }\n            else if (str.eOU[0] == L'C') {\n                *0x442034 = (*0x442036 - 0x6d9) + *0x442034;\n            }\n            else if (str.eOU[0] == L'\u00fc') {\n                *0x442034 = *0x442034 * iVar1 - *0x442036;\n            }\n            else {\n                *0x44202c = *0x442034 + 0x2c + ((*0x44202c + L'\\xfffffff7') - *0x442034) * 2;\n            }\n            if (*0x442014 / str.eOU[4] == 0xe32f) {\n                *0x442036 = *0x442034 * *0x442036 - *0x44203c;\n            }\n            else {\n                *0x442018 = *0x442036 + 0x2c + *0x44203c + *0x442018;\n            }\n        }\n        else {\n            *0x442034 = *0x442034 - ((*0x442036 - 0x5d) - iVar1);\n        }\n        *0x442038 = (*0x442030 + L'\\xfffffff7') - var_10h;\n        if (0x2230 < *0x442030) {\n            *0x442034 = iVar2 * 0x47 + iVar3;\n        }\n        cVar7 = *0x442036;\n        if (*0x442038 == cVar7) {\n            if (*0x442014 / str.eOU[4] == 0xe32f) {\n                *0x44202c = *0x442034 * *0x44202c - *0x442036;\n            }\n            else {\n                *0x442018 = *0x442036 + *0x442018 + 0x2c + *0x44202c;\n            }\n            if (*0x442014 / str.eOU[4] == 0xe32f) {\n                cVar7 = *0x442036 * *0x44203c - *0x44202c;\n                *0x442036 = cVar7;\n            }\n            else {\n                cVar7 = *0x442036 + 0x2c + *0x44202c + *0x442018;\n                *0x442018 = cVar7;\n            }\n        }\n        if (var_10h < 0x13) {\n            if (*0x442030 < str.eOU[0]) {\n                *0x442018 = *0x442018 / *0x44203c;\n            }\n            uVar5 = var_10h - 1;\n            if (*0x44202c < str.eOU[0]) {\n                *0x442018 = *0x442018 / *0x442036;\n            }\n            if (str.eOU[0] == L'\\t') {\n                *0x44203c = *0x442034 * *0x44203c - *0x442036;\n                *0x442034 = *0x442036 * 0x47 + *0x44203c;\n            }\n            else if (str.eOU[0] == L'C') {\n                *0x442034 = iVar3 + -0x6d9 + *0x442034;\n            }\n            else if (str.eOU[0] == L'\u00fc') {\n                *0x442034 = *0x442036 * *0x442034 - iVar3;\n            }\n            else {\n                *0x442036 = (',' - *0x442034) + (*0x442036 - 9) * '\\x02';\n            }\n            if (str.eOU[0] == L'\\t') {\n                var_10h = *0x442038 * uVar5 - *0x442030;\n                *0x442038 = *0x442030 * 0x47 + var_10h;\n                cVar7 = str.eOU[0];\n            }\n            else {\n                cVar7 = *0x442038;\n                if (str.eOU[0] == L'C') {\n                    *0x442038 = var_10h + 0xf926 + *0x442038;\n                    var_10h = uVar5;\n                }\n                else if (str.eOU[0] == L'\u00fc') {\n                    *0x442038 = *0x442030 * *0x442038 - uVar5;\n                    cVar7 = *0x442038;\n                    var_10h = uVar5;\n                }\n                else {\n                    *0x442030 = (0x2c - *0x442038) + (*0x442030 + L'\\xfffffff7') * 2;\n                    var_10h = uVar5;\n                }\n            }\n        }\n        if (str.eOU[0] == L'\\t') {\n            cVar7 = *0x442034 * *0x442030 - *0x44203c;\n            *0x442034 = *0x44203c * 0x47 + cVar7;\n            *0x442030 = cVar7;\n        }\n        else if (str.eOU[0] == L'C') {\n            *0x442034 = *0x442030 + -0x6d9 + *0x442034;\n            cVar7 = *0x442030;\n        }\n        else if (str.eOU[0] == L'\u00fc') {\n            *0x442034 = *0x442034 * *0x44203c - *0x442030;\n        }\n        else {\n            cVar7 = (*0x44203c + L'\\xfffffff7') - *0x442034;\n            *0x44203c = *0x442034 + 0x2c + cVar7 * 2;\n        }\n        if (var_24h == 0) {\n            if ((*0x442038 != L'\\x5023558a') || (*0x442038 == L'\\x5023558a')) {\n                *0x442036 = 0x93;\n                *0x442030 = *0x442038 + L',' + arg_8h + *0x442030;\n                *0x442038 = *0x44203c + L'\\x00068f79' + *0x442038 * 2;\n                fcn.00420750(*0x442038, 0x93);\n                *0x442038 = *0x442036 + *0x44202c * 0x47;\n                *0x44203c = fcn.0041e1b0(*0x45220c, *0x442034);\n                *0x442036 = (*0x442034 + -0x11) - *0x44203c;\n                return *0x442034;\n            }\n            LOCK();\n            *0x44202c = cVar7;\n        }\n        else {\n            if (str.eOU[0] == L'\\t') {\n                *0x442030 = *0x442034 * *0x442030 - *0x44203c;\n                *0x442034 = *0x44203c * 0x47 + *0x442030;\n            }\n            else if (str.eOU[0] == L'C') {\n                *0x442034 = *0x442030 + -0x6d9 + *0x442034;\n            }\n            else if (str.eOU[0] == L'\u00fc') {\n                *0x442034 = *0x442034 * *0x44203c - *0x442030;\n            }\n            else {\n                *0x44203c = *0x442034 + 0x2c + ((*0x44203c + L'\\xfffffff7') - *0x442034) * 2;\n            }\n            if (*0x44202c == *0x442030) {\n                if (*0x44202c < str.eOU[0]) {\n                    *0x442018 = *0x442018 / *0x442036;\n                }\n                if (str.eOU[0] == L'\\t') {\n                    *0x44202c = *0x44203c * *0x44202c - *0x442036;\n                    *0x44203c = *0x442036 * 0x47 + *0x44202c;\n                }\n                else if (str.eOU[0] == L'C') {\n                    *0x44203c = *0x44202c + L'\uf927' + *0x44203c;\n                }\n                else if (str.eOU[0] == L'\u00fc') {\n                    *0x44203c = *0x442036 * *0x44203c - *0x44202c;\n                }\n                else {\n                    *0x442036 = (',' - *0x44203c) + (*0x442036 - 9) * '\\x02';\n                }\n            }\n            if (str.eOU[0] == L'\\t') {\n                *0x44202c = *0x442036 * *0x44202c - *0x442030;\n                *0x442036 = *0x442030 * 'G' + *0x44202c;\n            }\n            else if (str.eOU[0] == L'C') {\n                *0x442036 = *0x44202c + '\\'' + *0x442036;\n            }\n            else if (str.eOU[0] == L'\u00fc') {\n                *0x442036 = *0x442036 * *0x442030 - *0x44202c;\n            }\n            else {\n                *0x442030 = *0x442036 + 0x2c + ((*0x442030 + L'\\xfffffff7') - *0x442036) * 2;\n            }\n            if (*0x442036 < str.eOU[0]) {\n                *0x442018 = *0x442018 / *0x44203c;\n            }\n            if (*0x442036 == 0x42742c) {\n                if (*0x44203c < str.eOU[0]) {\n                    *0x442018 = *0x442018 / *0x442030;\n                }\n                if (str.eOU[2] < *0x44202c) {\n                    *0x442028 = *0x442030;\n                }\n                fcn.00401010();\n            }\n            else {\n                *0x442030 = *0x442036 * *0x442030 - var_24h;\n            }\n            *0x442038 = (*0x44203c + L'\\xffffffef') - var_24h;\n            fcn.0041e660();\n            *0x442038 = var_24h + 0xf927 + *0x442038;\n            var_24h = var_24h - 1;\n            if (str.eOU[2] < *0x442030) {\n                *0x442028 = *0x44203c;\n            }\n            *0x442034 = *0x442036 == 0;\n            if (*0x442034 == 0) {\n                if (str.eOU[2] < *0x442030) {\n                    *0x442028 = *0x44203c;\n                }\n            }\n            else {\n                *0x442034 = *0x442034 + *0x44202c + 0x2c + *0x442036;\n                if (str.eOU[0] == L'\\t') {\n                    *0x44203c = *0x442034 * *0x44203c - *0x442038;\n                    *0x442034 = *0x442038 * 0x47 + *0x44203c;\n                }\n                else if (str.eOU[0] == L'C') {\n                    *0x442034 = *0x44203c + -0x6d9 + *0x442034;\n                }\n                else if (str.eOU[0] == L'\u00fc') {\n                    *0x442034 = *0x442034 * *0x442038 - *0x44203c;\n                }\n                else {\n                    *0x442038 = *0x442034 + 0x2c + ((*0x442038 + L'\\xfffffff7') - *0x442034) * 2;\n                }\n            }\n            if (var_24h < 10) {\n                *0x442036 = (*0x442030 + -9) - *0x442034;\n                (*_sym.imp.KERNEL32.dll_Sleep)(0x52b);\n                *0x442030 = (*0x442038 + L'\\xffffffef') - *0x442036;\n            }\n            if (var_18h < 2) {\n                if (*0x442014 / str.eOU[4] == 0xe32f) {\n                    *0x442030 = *0x442034 * *0x442030 - *0x44203c;\n                }\n                else {\n                    *0x442018 = *0x442030 + L',' + *0x44203c + *0x442018;\n                }\n                *0x442030 = var_18h + 0xf926 + *0x442030;\n                var_18h = var_18h - 1;\n            }\n            else if (*0x442014 / str.eOU[4] == 0xe32f) {\n                *0x44202c = *0x442034 * *0x44202c - var_10h;\n            }\n            else {\n                *0x442018 = *0x44202c + L',' + var_10h + *0x442018;\n            }\n        }\n        *0x442036 = *0x44203c * '\\x02' + 8;\n        *0x44203c = (var_20h - 0x1bfe) + *0x442036 + *0x44203c * 2;\n    } while( true );\n}\n",
        "token_count": 5436
    },
    "0042010c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0042010d) overlaps instruction at (ram,0x0042010c)\n// \n\nuint16_t __cdecl fcn.0042010c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    char32_t cVar2;\n    char *unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint dwMilliseconds;\n    uint var_8h;\n    \n    *unaff_EBX = *unaff_EBX + (in_ECX >> 8);\n    do {\n        *0x442034 = in_ECX;\n        while( true ) {\n            while( true ) {\n                while( true ) {\n                    if (*0x44202c == *0x442030) {\n                        if (*0x44202c < str.eOU[0]) {\n                            *0x442018 = *0x442018 / *0x442036;\n                        }\n                        *(unaff_EBP + -0x50) = str.eOU[0];\n                        if (*(unaff_EBP + -0x50) == 9) {\n                            *0x44202c = *0x44203c * *0x44202c - *0x442036;\n                            *0x44203c = *0x442036 * 0x47 + *0x44202c;\n                        }\n                        else if (*(unaff_EBP + -0x50) == 0x43) {\n                            *0x44203c = *0x44202c + L'\uf927' + *0x44203c;\n                        }\n                        else if (*(unaff_EBP + -0x50) == 0xfc) {\n                            *0x44203c = *0x442036 * *0x44203c - *0x44202c;\n                        }\n                        else {\n                            *0x442036 = (',' - *0x44203c) + (*0x442036 - 9) * '\\x02';\n                        }\n                    }\n                    *(unaff_EBP + -0x54) = str.eOU[0];\n                    if (*(unaff_EBP + -0x54) == 9) {\n                        *0x44202c = *0x442036 * *0x44202c - *0x442030;\n                        *0x442036 = *0x442030 * 'G' + *0x44202c;\n                    }\n                    else if (*(unaff_EBP + -0x54) == 0x43) {\n                        *0x442036 = *0x44202c + '\\'' + *0x442036;\n                    }\n                    else if (*(unaff_EBP + -0x54) == 0xfc) {\n                        *0x442036 = *0x442036 * *0x442030 - *0x44202c;\n                    }\n                    else {\n                        *0x442030 = *0x442036 + 0x2c + ((*0x442030 + L'\\xfffffff7') - *0x442036) * 2;\n                    }\n                    if (*0x442036 < str.eOU[0]) {\n                        *0x442018 = *0x442018 / *0x44203c;\n                    }\n                    if (*0x442036 == 0x42742c) {\n                        if (*0x44203c < str.eOU[0]) {\n                            *0x442018 = *0x442018 / *0x442030;\n                        }\n                        if (str.eOU[2] < *0x44202c) {\n                            *0x442028 = *0x442030;\n                        }\n                        fcn.00401010();\n                    }\n                    else {\n                        *0x442030 = *0x442036 * *0x442030 - *(unaff_EBP + -0x24);\n                    }\n                    *0x442038 = (*0x44203c + L'\\xffffffef') - *(unaff_EBP + -0x24);\n                    fcn.0041e660();\n                    *0x442038 = *(unaff_EBP + -0x24) + 0xf927 + *0x442038;\n                    *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + -1;\n                    if (str.eOU[2] < *0x442030) {\n                        *0x442028 = *0x44203c;\n                    }\n                    *0x442034 = *0x442036 == 0;\n                    if (*0x442034 == 0) {\n                        if (str.eOU[2] < *0x442030) {\n                            *0x442028 = *0x44203c;\n                        }\n                    }\n                    else {\n                        *0x442034 = *0x442034 + *0x44202c + 0x2c + *0x442036;\n                        *(unaff_EBP + -0x58) = str.eOU[0];\n                        if (*(unaff_EBP + -0x58) == 9) {\n                            *0x44203c = *0x442034 * *0x44203c - *0x442038;\n                            *0x442034 = *0x442038 * 0x47 + *0x44203c;\n                        }\n                        else if (*(unaff_EBP + -0x58) == 0x43) {\n                            *0x442034 = *0x44203c + -0x6d9 + *0x442034;\n                        }\n                        else if (*(unaff_EBP + -0x58) == 0xfc) {\n                            *0x442034 = *0x442034 * *0x442038 - *0x44203c;\n                        }\n                        else {\n                            *0x442038 = *0x442034 + 0x2c + ((*0x442038 + L'\\xfffffff7') - *0x442034) * 2;\n                        }\n                    }\n                    if (*(unaff_EBP + -0x24) < *(unaff_EBP + -8)) {\n                        *0x442036 = (*0x442030 + -9) - *0x442034;\n                        (*_sym.imp.KERNEL32.dll_Sleep)(*(unaff_EBP + -0xc));\n                        *0x442030 = (*0x442038 + L'\\xffffffef') - *0x442036;\n                    }\n                    if (*(unaff_EBP + -0x18) < 2) {\n                        if (*0x442014 / str.eOU[4] == 0xe32f) {\n                            *0x442030 = *0x442034 * *0x442030 - *0x44203c;\n                        }\n                        else {\n                            *0x442018 = *0x442030 + L',' + *0x44203c + *0x442018;\n                        }\n                        *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n                        *0x442030 = *(unaff_EBP + -0x18) + 0xf927 + *0x442030;\n                    }\n                    else if (*0x442014 / str.eOU[4] == 0xe32f) {\n                        *0x44202c = *0x442034 * *0x44202c - *(unaff_EBP + -0x10);\n                    }\n                    else {\n                        *0x442018 = *0x44202c + L',' + *(unaff_EBP + -0x10) + *0x442018;\n                    }\n                    while( true ) {\n                        *0x442036 = *0x44203c * '\\x02' + 8;\n                        *0x44203c = *(unaff_EBP + -0x20) + -0x1bfe + *0x442036 + *0x44203c * 2;\n                        if (*0x442036 < str.eOU[0]) {\n                            *0x442018 = *0x442018 / *0x44203c;\n                        }\n                        if (*0x442036 < *0x442030) {\n                            *0x442030 = *0x442036 * *0x442030 - *0x44203c;\n                            if (*0x442030 == L'\\x005f4875') {\n                                *(unaff_EBP + -0x30) = str.eOU[0];\n                                cVar1 = *0x442030;\n                                if (*(unaff_EBP + -0x30) == 9) {\n                                    *0x442038 = *0x442036 * *0x442038 - cVar1;\n                                    *0x442036 = cVar1 * 'G' + *0x442038;\n                                }\n                                else if (*(unaff_EBP + -0x30) == 0x43) {\n                                    *0x442036 = *0x442038 + '\\'' + *0x442036;\n                                }\n                                else if (*(unaff_EBP + -0x30) == 0xfc) {\n                                    *0x442036 = *0x442036 * cVar1 - *0x442038;\n                                }\n                                else {\n                                    *0x442030 = *0x442036 + 0x2c + ((*0x442030 + L'\\xfffffff7') - *0x442036) * 2;\n                                }\n                            }\n                            *0x442036 = *0x442038 + '\\x02' + *0x442030 + *0x442036 * '\\x02';\n                        }\n                        if (str.eOU[2] < *0x442036) {\n                            *0x442028 = *0x44202c;\n                        }\n                        if (*(unaff_EBP + -0x20) < 5) {\n                            *(unaff_EBP + -0x34) = str.eOU[0];\n                            if (*(unaff_EBP + -0x34) == 9) {\n                                *0x442036 = *0x442034 * *0x442036 - *0x44202c;\n                                *0x442034 = *0x442036 + *0x44202c * 0x47;\n                            }\n                            else if (*(unaff_EBP + -0x34) == 0x43) {\n                                *0x442034 = (*0x442036 - 0x6d9) + *0x442034;\n                            }\n                            else if (*(unaff_EBP + -0x34) == 0xfc) {\n                                *0x442034 = *0x442034 * *0x44202c - *0x442036;\n                            }\n                            else {\n                                *0x44202c = *0x442034 + 0x2c + ((*0x44202c + L'\\xfffffff7') - *0x442034) * 2;\n                            }\n                            *(unaff_EBP + -0x38) = str.eOU[0];\n                            if (*(unaff_EBP + -0x38) == 9) {\n                                *0x44203c = *0x442034 * *0x44203c - *0x442036;\n                                *0x442034 = *0x442036 * 0x47 + *0x44203c;\n                            }\n                            else if (*(unaff_EBP + -0x38) == 0x43) {\n                                *0x442034 = *0x44203c + -0x6d9 + *0x442034;\n                            }\n                            else if (*(unaff_EBP + -0x38) == 0xfc) {\n                                *0x442034 = *0x442036 * *0x442034 - *0x44203c;\n                            }\n                            else {\n                                *0x442036 = (',' - *0x442034) + (*0x442036 - 9) * '\\x02';\n                            }\n                            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -1;\n                        }\n                        else {\n                            *0x442034 = *0x442034 + *0x44202c + 0x2c + *0x442036;\n                        }\n                        *0x442034 = *0x44203c + -0x1bfe + *0x442030 + *0x442034 * 2;\n                        if (*0x442014 / str.eOU[4] == 0xe32f) {\n                            *0x44202c = *0x442034 * *0x44202c - *0x442036;\n                        }\n                        else {\n                            *0x442018 = *0x442036 + *0x442018 + 0x2c + *0x44202c;\n                        }\n                        if ((*0x442036 < 0x53a6) &&\n                           (*0x442034 = (*0x442030 + -9) - *0x44203c,  str.eOU[4] == L'\\x00043f58')) {\n                            *0x442036 = (*0x442034 + -0x11) - (*0x442036 + *0x442018);\n                        }\n                        if (*0x442014 / str.eOU[4] == 0xe32f) {\n                            *0x442036 = *0x442034 * *0x442036 - *0x44203c;\n                        }\n                        else {\n                            *0x442018 = *0x442036 + 0x2c + *0x44203c + *0x442018;\n                        }\n                        if (*(unaff_EBP + -0x10) < 3) {\n                            if (str.eOU[4] == L'\\x00043f58') {\n                                *0x442036 = (*0x442034 + -0x11) - (*0x442036 + *0x442018);\n                            }\n                            *(unaff_EBP + -0x3c) = str.eOU[0];\n                            if (*(unaff_EBP + -0x3c) == 9) {\n                                *0x442036 = *0x442034 * *0x442036 - *0x44202c;\n                                *0x442034 = *0x442036 + *0x44202c * 0x47;\n                            }\n                            else if (*(unaff_EBP + -0x3c) == 0x43) {\n                                *0x442034 = (*0x442036 - 0x6d9) + *0x442034;\n                            }\n                            else if (*(unaff_EBP + -0x3c) == 0xfc) {\n                                *0x442034 = *0x442034 * *0x44202c - *0x442036;\n                            }\n                            else {\n                                *0x44202c = *0x442034 + 0x2c + ((*0x44202c + L'\\xfffffff7') - *0x442034) * 2;\n                            }\n                            if (*0x442014 / str.eOU[4] == 0xe32f) {\n                                *0x442036 = *0x442034 * *0x442036 - *0x44203c;\n                            }\n                            else {\n                                *0x442018 = *0x442036 + 0x2c + *0x44203c + *0x442018;\n                            }\n                        }\n                        else {\n                            *0x442034 = *0x442034 - ((*0x442036 - 0x5d) - *0x44202c);\n                        }\n                        *0x442038 = (*0x442030 + L'\\xfffffff7') - *(unaff_EBP + -0x10);\n                        if (0x2230 < *0x442030) {\n                            *0x442034 = *0x442030 * 0x47 + *0x44203c;\n                        }\n                        cVar2 = *0x442036;\n                        if (*0x442038 == cVar2) {\n                            if (*0x442014 / str.eOU[4] == 0xe32f) {\n                                *0x44202c = *0x442034 * *0x44202c - *0x442036;\n                            }\n                            else {\n                                *0x442018 = *0x442036 + *0x442018 + 0x2c + *0x44202c;\n                            }\n                            if (*0x442014 / str.eOU[4] == 0xe32f) {\n                                cVar2 = *0x442036 * *0x44203c - *0x44202c;\n                                *0x442036 = cVar2;\n                            }\n                            else {\n                                cVar2 = *0x442036 + 0x2c + *0x44202c + *0x442018;\n                                *0x442018 = cVar2;\n                            }\n                        }\n                        if (*(unaff_EBP + -0x10) < 0x13) {\n                            if (*0x442030 < str.eOU[0]) {\n                                *0x442018 = *0x442018 / *0x44203c;\n                            }\n                            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -1;\n                            if (*0x44202c < str.eOU[0]) {\n                                *0x442018 = *0x442018 / *0x442036;\n                            }\n                            *(unaff_EBP + -0x40) = str.eOU[0];\n                            cVar2 = str.eOU[0];\n                            if (*(unaff_EBP + -0x40) == 9) {\n                                *0x44203c = *0x442034 * *0x44203c - *0x442036;\n                                *0x442034 = *0x442036 * 0x47 + *0x44203c;\n                            }\n                            else if (*(unaff_EBP + -0x40) == 0x43) {\n                                *0x442034 = *0x44203c + -0x6d9 + *0x442034;\n                            }\n                            else if (*(unaff_EBP + -0x40) == 0xfc) {\n                                *0x442034 = *0x442036 * *0x442034 - *0x44203c;\n                            }\n                            else {\n                                *0x442036 = (',' - *0x442034) + (*0x442036 - 9) * '\\x02';\n                            }\n                            *(unaff_EBP + -0x44) = str.eOU[0];\n                            if (*(unaff_EBP + -0x44) == 9) {\n                                *(unaff_EBP + -0x10) = *0x442038 * *(unaff_EBP + -0x10) - *0x442030;\n                                *0x442038 = *0x442030 * 0x47 + *(unaff_EBP + -0x10);\n                            }\n                            else {\n                                cVar2 = *0x442038;\n                                if (*(unaff_EBP + -0x44) == 0x43) {\n                                    *0x442038 = *(unaff_EBP + -0x10) + 0xf927 + *0x442038;\n                                }\n                                else if (*(unaff_EBP + -0x44) == 0xfc) {\n                                    cVar2 = *0x442030 * *0x442038 - *(unaff_EBP + -0x10);\n                                    *0x442038 = cVar2;\n                                }\n                                else {\n                                    *0x442030 = (0x2c - *0x442038) + (*0x442030 + L'\\xfffffff7') * 2;\n                                }\n                            }\n                        }\n                        *(unaff_EBP + -0x48) = str.eOU[0];\n                        if (*(unaff_EBP + -0x48) == 9) {\n                            cVar2 = *0x442034 * *0x442030 - *0x44203c;\n                            *0x442034 = *0x44203c * 0x47 + cVar2;\n                            *0x442030 = cVar2;\n                        }\n                        else if (*(unaff_EBP + -0x48) == 0x43) {\n                            *0x442034 = *0x442030 + -0x6d9 + *0x442034;\n                            cVar2 = *0x442030;\n                        }\n                        else if (*(unaff_EBP + -0x48) == 0xfc) {\n                            *0x442034 = *0x442034 * *0x44203c - *0x442030;\n                        }\n                        else {\n                            cVar2 = (*0x44203c + L'\\xfffffff7') - *0x442034;\n                            *0x44203c = *0x442034 + 0x2c + cVar2 * 2;\n                        }\n                        if (*(unaff_EBP + -0x24) != 0) break;\n                        if ((*0x442038 != L'\\x5023558a') || (*0x442038 == L'\\x5023558a')) {\n                            *0x442036 = 0x93;\n                            *0x442030 = *0x442038 + L',' + *(unaff_EBP + 8) + *0x442030;\n                            *0x442038 = *0x44203c + L'\\x00068f79' + *0x442038 * 2;\n                            fcn.00420750(*0x442038, 0x93);\n                            *0x442038 = *0x442036 + *0x44202c * 0x47;\n                            *0x44203c = fcn.0041e1b0(*0x45220c, *0x442034);\n                            *0x442036 = (*0x442034 + -0x11) - *0x44203c;\n                            return *0x442034;\n                        }\n                        LOCK();\n                        *0x44202c = cVar2;\n                    }\n                    *(unaff_EBP + -0x4c) = str.eOU[0];\n                    if (*(unaff_EBP + -0x4c) != 9) break;\n                    *0x442030 = *0x442034 * *0x442030 - *0x44203c;\n                    *0x442034 = *0x44203c * 0x47 + *0x442030;\n                }\n                if (*(unaff_EBP + -0x4c) != 0x43) break;\n                *0x442034 = *0x442030 + -0x6d9 + *0x442034;\n            }\n            if (*(unaff_EBP + -0x4c) == 0xfc) break;\n            *0x44203c = *0x442034 + 0x2c + ((*0x44203c + L'\\xfffffff7') - *0x442034) * 2;\n        }\n        in_ECX = *0x442034 * *0x44203c - *0x442030;\n    } while( true );\n}\n",
        "token_count": 5204
    },
    "00437beb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437e90)\n// WARNING: Removing unreachable block (ram,0x00437e59)\n// WARNING: Removing unreachable block (ram,0x00438240)\n// WARNING: Removing unreachable block (ram,0x00437e68)\n// WARNING: Removing unreachable block (ram,0x00437e70)\n// WARNING: Removing unreachable block (ram,0x00437e76)\n// WARNING: Removing unreachable block (ram,0x00437e79)\n// WARNING: Removing unreachable block (ram,0x00437e80)\n// WARNING: Removing unreachable block (ram,0x00437e8a)\n// WARNING: Removing unreachable block (ram,0x00437ee5)\n// WARNING: Removing unreachable block (ram,0x00437edf)\n// WARNING: Removing unreachable block (ram,0x00437eeb)\n// WARNING: Removing unreachable block (ram,0x00437f08)\n// WARNING: Removing unreachable block (ram,0x00437f0a)\n// WARNING: Removing unreachable block (ram,0x00437f12)\n// WARNING: Removing unreachable block (ram,0x00437f15)\n// WARNING: Removing unreachable block (ram,0x00437f1a)\n// WARNING: Removing unreachable block (ram,0x00437f1d)\n// WARNING: Removing unreachable block (ram,0x00438249)\n// WARNING: Removing unreachable block (ram,0x00437f28)\n// WARNING: Removing unreachable block (ram,0x00438260)\n// WARNING: Removing unreachable block (ram,0x00438267)\n// WARNING: Removing unreachable block (ram,0x00437f33)\n// WARNING: Removing unreachable block (ram,0x00437f46)\n// WARNING: Removing unreachable block (ram,0x00437f48)\n// WARNING: Removing unreachable block (ram,0x00437f55)\n// WARNING: Removing unreachable block (ram,0x00437f5a)\n// WARNING: Removing unreachable block (ram,0x00437f60)\n// WARNING: Removing unreachable block (ram,0x00437f69)\n// WARNING: Removing unreachable block (ram,0x00437f70)\n// WARNING: Removing unreachable block (ram,0x00437f88)\n// WARNING: Removing unreachable block (ram,0x00437f98)\n// WARNING: Removing unreachable block (ram,0x00437fa6)\n// WARNING: Removing unreachable block (ram,0x00437fe6)\n// WARNING: Removing unreachable block (ram,0x00437fef)\n// WARNING: Removing unreachable block (ram,0x00438206)\n// WARNING: Removing unreachable block (ram,0x00437ffd)\n// WARNING: Removing unreachable block (ram,0x00438007)\n// WARNING: Removing unreachable block (ram,0x00438221)\n// WARNING: Removing unreachable block (ram,0x00438014)\n// WARNING: Removing unreachable block (ram,0x0043801b)\n// WARNING: Removing unreachable block (ram,0x00438025)\n// WARNING: Removing unreachable block (ram,0x0043802a)\n// WARNING: Removing unreachable block (ram,0x0043803a)\n// WARNING: Removing unreachable block (ram,0x0043803f)\n// WARNING: Removing unreachable block (ram,0x00438049)\n// WARNING: Removing unreachable block (ram,0x0043804e)\n// WARNING: Removing unreachable block (ram,0x00438060)\n// WARNING: Removing unreachable block (ram,0x0043806d)\n// WARNING: Removing unreachable block (ram,0x0043807c)\n// WARNING: Removing unreachable block (ram,0x00438089)\n// WARNING: Removing unreachable block (ram,0x004380a6)\n// WARNING: Removing unreachable block (ram,0x004380aa)\n// WARNING: Removing unreachable block (ram,0x004380b1)\n// WARNING: Removing unreachable block (ram,0x004380ba)\n// WARNING: Removing unreachable block (ram,0x004380bd)\n// WARNING: Removing unreachable block (ram,0x004380ce)\n// WARNING: Removing unreachable block (ram,0x004380dd)\n// WARNING: Removing unreachable block (ram,0x004380e8)\n// WARNING: Removing unreachable block (ram,0x004380ef)\n// WARNING: Removing unreachable block (ram,0x0043811a)\n// WARNING: Removing unreachable block (ram,0x0043811f)\n// WARNING: Removing unreachable block (ram,0x0043812a)\n// WARNING: Removing unreachable block (ram,0x00438133)\n// WARNING: Removing unreachable block (ram,0x00438139)\n// WARNING: Removing unreachable block (ram,0x0043813c)\n// WARNING: Removing unreachable block (ram,0x00438162)\n// WARNING: Removing unreachable block (ram,0x00438167)\n// WARNING: Removing unreachable block (ram,0x0043816c)\n// WARNING: Removing unreachable block (ram,0x00438177)\n// WARNING: Removing unreachable block (ram,0x00438188)\n// WARNING: Removing unreachable block (ram,0x004381b9)\n// WARNING: Removing unreachable block (ram,0x0043818e)\n// WARNING: Removing unreachable block (ram,0x004381b4)\n// WARNING: Removing unreachable block (ram,0x00438198)\n// WARNING: Removing unreachable block (ram,0x004381ae)\n// WARNING: Removing unreachable block (ram,0x004381a7)\n// WARNING: Removing unreachable block (ram,0x004381bc)\n// WARNING: Removing unreachable block (ram,0x004381e9)\n// WARNING: Removing unreachable block (ram,0x004381c6)\n// WARNING: Removing unreachable block (ram,0x00438052)\n// WARNING: Removing unreachable block (ram,0x0043802f)\n// WARNING: Removing unreachable block (ram,0x00438224)\n// WARNING: Removing unreachable block (ram,0x00437f6b)\n// WARNING: Removing unreachable block (ram,0x0043822e)\n// WARNING: Removing unreachable block (ram,0x0043826f)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.00437beb(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.0042c335();\n        *puVar2 = 0x16;\n        fcn.0042dc2a();\n        fcn.00428ef5(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00437c74. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x438297\n    (**0x438297)();\n    return;\n}\n",
        "token_count": 1786
    },
    "00420750": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t fcn.00420750(void)\n\n{\n    uint dwSize;\n    int32_t var_ch;\n    uint lpflOldProtect;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    lpflOldProtect = 0x80;\n    *0x44203c = *0x44203c - (0x23 - var_ch);\n    *0x44202c = *0x44202c + 0x13cab;\n    (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(0xffffffff, *0x45220c, 0x4384, 0x80, &lpflOldProtect);\n    var_4h = 0;\n    while ((var_4h < 10 && (*0x44203c != *0x442008))) {\n        var_4h = var_4h + 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 203
    },
    "00420820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00420820(code *arg_8h)\n\n{\n    int32_t *in_ECX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (in_ECX == NULL) {\n        var_8h = 0;\n    }\n    else {\n        var_8h = in_ECX + *(*in_ECX + 4);\n    }\n    (*arg_8h)(var_8h);\n    return in_ECX;\n}\n",
        "token_count": 110
    },
    "00420860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.00420860(int32_t *param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint32_t arg_1ch;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack104;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x439f70;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack104 = *0x442530 ^ &stack0xfffffffc;\n    puStack20 = &uStack104;\n    *in_FS_OFFSET = &var_ch_2;\n    var_14h = 0;\n    fcn.004211f0(param_1);\n    var_4h = 0;\n    iVar3 = fcn.004213e0();\n    if (iVar3 != -1) {\n        uVar4 = fcn.00420ab0(&var_24h);\n        var_4h._0_1_ = 1;\n        var_20h = fcn.00421ac0(uVar4);\n        var_4h._0_1_ = 0;\n        fcn.00420a00();\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        if (param_1 == NULL) {\n            var_48h = 0;\n        }\n        else {\n            var_48h = param_1 + *(*param_1 + 4);\n        }\n        uVar1 = fcn.004211d0();\n        uVar4 = fcn.00420db0();\n        arg_1ch = uVar1;\n        puVar5 = fcn.00421480(uVar4);\n        fcn.00421400(&var_34h, *puVar5, puVar5[1], uVar4, var_48h, arg_1ch);\n        cVar2 = fcn.004214a0();\n        if (cVar2 != '\\0') {\n            var_14h = var_14h | 4;\n        }\n        var_4h = 0;\n    }\n    fcn.00420d60(var_14h, 0);\n    var_4h = 0xffffffff;\n    fcn.00421370();\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 690
    },
    "00420a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420a00(int32_t *param_1)\n\n{\n    uint *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*param_1 != 0) && (puVar1 = fcn.00420a50(),  puVar1 != NULL)) {\n        (***puVar1)(1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00420b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.00420b60(int32_t *param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint32_t arg_1ch;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack116;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x439fa0;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack116 = *0x442530 ^ &stack0xfffffffc;\n    puStack20 = &uStack116;\n    *in_FS_OFFSET = &var_ch_2;\n    var_14h = 0;\n    fcn.004211f0(param_1);\n    var_4h = 0;\n    iVar3 = fcn.004213e0();\n    if (iVar3 != -1) {\n        uVar4 = fcn.00420ab0(&var_2ch);\n        var_4h._0_1_ = 1;\n        var_28h = fcn.00421ac0(uVar4);\n        var_4h._0_1_ = 0;\n        fcn.00420a00();\n        var_24h = fcn.00420d40();\n        var_24h = var_24h & 0xe00;\n        var_20h = var_8h;\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        if (param_1 == NULL) {\n            var_54h = 0;\n        }\n        else {\n            var_54h = param_1 + *(*param_1 + 4);\n        }\n        uVar1 = fcn.004211d0();\n        uVar4 = fcn.00420db0();\n        arg_1ch = uVar1;\n        puVar5 = fcn.00421480(uVar4);\n        fcn.00421440(&var_3ch, *puVar5, puVar5[1], uVar4, var_54h, arg_1ch);\n        cVar2 = fcn.004214a0();\n        if (cVar2 != '\\0') {\n            var_14h = var_14h | 4;\n        }\n        var_4h = 0;\n    }\n    fcn.00420d60(var_14h, 0);\n    var_4h = 0xffffffff;\n    fcn.00421370();\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 761
    },
    "00420d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420d60(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        arg_ch = arg_ch & 0xff;\n        uVar1 = fcn.00420d90();\n        fcn.00420dd0(uVar1 | arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00420dd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420dd0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x38) == 0) {\n        var_8h = arg_8h | 4;\n    }\n    else {\n        var_8h = arg_8h;\n    }\n    fcn.00420e10(var_8h, arg_ch & 0xff);\n    return;\n}\n",
        "token_count": 124
    },
    "00421610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421685)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00421610(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar5;\n    ulong uVar6;\n    uint var_8h;\n    uint var_ch_3;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack160;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ah;\n    uint var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a048;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack160 = *0x442530 ^ &stack0xfffffffc;\n    puStack20 = &uStack160;\n    *in_FS_OFFSET = &var_ch_2;\n    var_14h = 0;\n    fcn.004211f0(var_8h);\n    var_4h = 0;\n    iVar3 = fcn.004213e0();\n    if (iVar3 != -1) {\n        iVar5 = fcn.00421960();\n        if (iVar5 < 2) {\n            var_54h = 0;\n            var_50h = 0;\n        }\n        else {\n            uVar6 = fcn.00421960();\n            var_54h = uVar6 + -1;\n            var_50h = (uVar6 >> 0x20) - (uVar6 == 0);\n        }\n        var_28h = var_54h;\n        var_24h = var_50h;\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        uVar4 = fcn.00420d40();\n        if ((uVar4 & 0x1c0) != 0x40) {\n            for (; ((var_14h == 0 && (-1 < var_24h)) && ((0 < var_24h || (var_28h != 0)))); var_28h = var_28h + -1) {\n                uVar1 = fcn.004211d0();\n                fcn.00420db0();\n                var_2ch = fcn.004219c0(uVar1);\n                var_30h = fcn.00421950();\n                cVar2 = fcn.00421930(&var_30h, &var_2ch);\n                if (cVar2 != '\\0') {\n                    var_14h = var_14h | 4;\n                }\n                var_24h = var_24h - (var_28h == 0);\n            }\n        }\n        if (var_14h == 0) {\n            fcn.00420db0();\n            var_34h = fcn.004219c0(var_ch_3);\n            var_38h = fcn.00421950();\n            cVar2 = fcn.00421930(&var_38h, &var_34h);\n            if (cVar2 != '\\0') {\n                var_14h = var_14h | 4;\n            }\n        }\n        for (; ((var_14h == 0 && (-1 < var_24h)) && ((0 < var_24h || (var_28h != 0)))); var_28h = var_28h + -1) {\n            uVar1 = fcn.004211d0();\n            fcn.00420db0();\n            var_3ch = fcn.004219c0(uVar1);\n            var_40h = fcn.00421950();\n            cVar2 = fcn.00421930(&var_40h, &var_3ch);\n            if (cVar2 != '\\0') {\n                var_14h = var_14h | 4;\n            }\n            var_24h = var_24h - (var_28h == 0);\n        }\n        var_4h = 0;\n    }\n    fcn.00421980(0, 0);\n    fcn.00420d60(var_14h, 0);\n    var_4h = 0xffffffff;\n    fcn.00421370();\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 1182
    },
    "004219c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004219df)\n\nuint __cdecl fcn.004219c0(uint arg_8h)\n\n{\n    uchar *arg_8h_00;\n    uint uVar1;\n    int32_t *in_ECX;\n    int64_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00421a40();\n    if (iVar2 < 1) {\n        uVar1 = fcn.00421a30(&arg_8h);\n        var_14h = (**(*in_ECX + 0xc))(uVar1);\n    }\n    else {\n        arg_8h_00 = fcn.00421a70();\n        *arg_8h_00 = arg_8h;\n        var_14h = fcn.00421a30(arg_8h_00);\n    }\n    return var_14h;\n}\n",
        "token_count": 224
    },
    "00421a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421a40(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 31
    },
    "00421ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421ac0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a278;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x442530 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 0;\n    fcn.00426372(0);\n    var_4h = 0;\n    var_1ch = *0x452988;\n    var_14h = fcn.00421bb0(uVar3, uVar1);\n    var_10h = fcn.00421c20(var_14h);\n    if (var_10h == 0) {\n        if (var_1ch == 0) {\n            iVar2 = fcn.00421cb0(&var_1ch, arg_8h);\n            if (iVar2 == -1) {\n                fcn.00429090(\"bad cast\");\n                fcn.00428f04(&var_2ch, 0x43fd7c);\n            }\n            else {\n                var_10h = var_1ch;\n                *0x452988 = var_1ch;\n                var_20h = var_1ch;\n                fcn.00420b20();\n                fcn.00421c00();\n            }\n        }\n        else {\n            var_10h = var_1ch;\n        }\n    }\n    iVar2 = var_10h;\n    var_4h = 0xffffffff;\n    fcn.0042639a();\n    *in_FS_OFFSET = var_ch;\n    return iVar2;\n}\n",
        "token_count": 473
    },
    "00421cb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00421cb0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t *in_FS_OFFSET;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a094;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x442530 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar2 = fcn.00429122(0x10);\n        var_4h = 0;\n        if (iVar2 == 0) {\n            var_48h = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00421f10(0, uVar1);\n            arg_8h_01 = fcn.00421da0(arg_8h_00);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_48h = fcn.00421fd0(arg_8h_01, arg_8h_00);\n        }\n        *arg_8h = var_48h;\n        var_4h = 0xffffffff;\n        if (iVar2 != 0) {\n            fcn.00421e70();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 429
    },
    "00421da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00421da0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint uVar2;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a0e4;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x442530 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = 0;\n    fcn.00426372(0);\n    var_4h = 0;\n    fcn.00421f30(uVar2, uVar1);\n    var_4h._0_1_ = 1;\n    fcn.00421f30();\n    var_4h._0_1_ = 2;\n    fcn.00421f30();\n    var_4h._0_1_ = 3;\n    fcn.00421f30();\n    var_4h = CONCAT31(var_4h._1_3_, 4);\n    if (arg_8h == 0) {\n        fcn.00421080(\"bad locale name\");\n        fcn.00428f04(&var_18h, 0x43fdf0);\n    }\n    fcn.0042668b(in_ECX, arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 366
    },
    "00421fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421fa0(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.004291a2(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 67
    },
    "0042257e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042257e(uint noname_0, uint arg_ch)\n\n{\n    uint *in_EDX;\n    int32_t unaff_EBP;\n    uint var_8h;\n    uint var_4h;\n    \n    *(unaff_EBP + -4) = *in_EDX;\n    if (*(unaff_EBP + 0xc) != 0) {\n        fcn.004225e0(*(unaff_EBP + -8), *(unaff_EBP + -4), *(unaff_EBP + 0xc));\n    }\n    fcn.00422f40(*(unaff_EBP + -4));\n    *(*(unaff_EBP + -8) + 0x14) = 0xf;\n    fcn.00422ef0(*(unaff_EBP + 0xc));\n    return;\n}\n",
        "token_count": 217
    },
    "00423040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423314)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00423040(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, char *arg_20h, \n            int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    char **ppcVar3;\n    char *pcVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint var_fch;\n    int32_t var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    int32_t var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_90h;\n    uint var_88h;\n    uint var_80h;\n    int32_t var_7ch;\n    int32_t var_78h;\n    uint *var_74h;\n    char *var_70h;\n    uint var_6ch;\n    uint var_50h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_25h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a1e8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x442530 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar5 = &var_80h;\n    var_34h = uVar1;\n    uVar2 = fcn.00420ab0(puVar5);\n    var_4h = 0;\n    var_14h = fcn.004246d0(uVar2);\n    var_4h = 0xffffffff;\n    fcn.00420a00(puVar5, uVar1);\n    fcn.00424300(&var_50h);\n    var_4h = 1;\n    var_25h._0_1_ = fcn.004242e0();\n    fcn.00422360();\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    var_15h = fcn.004247c0(0x30);\n    if ((*arg_20h == '+') || (*arg_20h == '-')) {\n        var_ech = 1;\n    }\n    else {\n        var_ech = 0;\n    }\n    stack0xffffffd8 = var_ech;\n    ppcVar3 = fcn.0042965d();\n    var_1ch._0_1_ = **ppcVar3;\n    var_1ch._1_1_ = 0x65;\n    var_1ch._2_1_ = 0;\n    var_30h = fcn.004295b0(arg_20h, 0x65, arg_30h);\n    var_20h = fcn.004295b0(arg_20h, var_1ch, arg_30h);\n    if (var_20h == 0) {\n        arg_2ch = 0;\n    }\n    pcVar4 = fcn.00422430();\n    if ((*pcVar4 != '\\x7f') && (pcVar4 = fcn.00422430(),  '\\0' < *pcVar4)) {\n        fcn.00423d50(arg_20h, arg_30h);\n        if (var_30h == 0) {\n            fcn.00423e00(arg_2ch, 0x30);\n        }\n        else {\n            if (var_20h == 0) {\n                fcn.00423e00(arg_24h, 0x30);\n                arg_24h = 0;\n            }\n            fcn.00423700(var_30h - arg_20h, arg_2ch, 0x30);\n        }\n        if (var_20h == 0) {\n            fcn.00423e00(arg_24h, 0x30);\n        }\n        else {\n            fcn.00423700((var_20h - arg_20h) + 1, arg_28h, 0x30);\n            fcn.00423700(var_20h - arg_20h, arg_24h, 0x30);\n            arg_28h = 0;\n        }\n        arg_24h = 0;\n        var_70h = fcn.00422430();\n        puVar5 = &var_1ch;\n        uVar8 = 0;\n        uVar2 = fcn.00423f70(0);\n        var_74h = fcn.00429560(uVar2, uVar8);\n        while (((*var_70h != '\\x7f' && ('\\0' < *var_70h)) && (*var_70h < var_74h - stack0xffffffd8))) {\n            puVar5 = var_74h - *var_70h;\n            var_74h = puVar5;\n            fcn.00423700(puVar5, 1, 0);\n            if ('\\0' < var_70h[1]) {\n                var_70h = var_70h + 1;\n            }\n        }\n        uVar2 = 0;\n        arg_20h = fcn.00423f70(0);\n        arg_2ch = 0;\n        arg_30h = fcn.00422450(uVar2, puVar5);\n    }\n    var_2ch = arg_24h + arg_28h + arg_2ch + arg_30h;\n    iVar6 = fcn.00421960();\n    if ((iVar6 < 1) || (uVar1 = fcn.00421960(),  uVar1 <= var_2ch)) {\n        var_f8h = 0;\n    }\n    else {\n        var_f8h = fcn.00421960();\n        var_f8h = var_f8h - var_2ch;\n    }\n    var_2ch = var_f8h;\n    var_10h = fcn.00420d40();\n    var_10h = var_10h & 0x1c0;\n    if ((var_10h == 0x40) || (var_10h == 0x100)) {\n        if (var_10h == 0x100) {\n            if (stack0xffffffd8 != 0) {\n                puVar5 = fcn.00424100(arg_8h, &var_90h, arg_10h, arg_14h, arg_20h, 1);\n                arg_10h = *puVar5;\n                arg_14h = puVar5[1];\n                arg_20h = arg_20h + 1;\n                arg_30h = arg_30h + -1;\n            }\n            puVar5 = fcn.00423c80(arg_8h, &var_98h, arg_10h, arg_14h, arg_1ch & 0xff, var_2ch);\n            arg_10h = *puVar5;\n            arg_14h = puVar5[1];\n            var_2ch = 0;\n        }\n    }\n    else {\n        puVar5 = fcn.00423c80(arg_8h, &var_88h, arg_10h, arg_14h, arg_1ch & 0xff, var_2ch);\n        arg_10h = *puVar5;\n        arg_14h = puVar5[1];\n        var_2ch = 0;\n    }\n    var_20h = fcn.004295b0(arg_20h, var_1ch, arg_30h);\n    if (var_20h != 0) {\n        var_78h = (var_20h - arg_20h) + 1;\n        puVar5 = fcn.00424170(arg_8h, &var_a0h, arg_10h, arg_14h, arg_20h, var_20h - arg_20h, var_25h);\n        puVar5 = fcn.00423c80(arg_8h, &var_a8h, *puVar5, puVar5[1], var_15h, arg_24h);\n        uVar2 = *puVar5;\n        uVar8 = puVar5[1];\n        uVar7 = 1;\n        uVar1 = fcn.004242c0();\n        puVar5 = fcn.00423c80(arg_8h, &var_b0h, uVar2, uVar8, uVar1 & 0xff, uVar7);\n        puVar5 = fcn.00423c80(arg_8h, &var_b8h, *puVar5, puVar5[1], var_15h, arg_28h);\n        arg_10h = *puVar5;\n        arg_14h = puVar5[1];\n        arg_20h = arg_20h + var_78h;\n        arg_30h = arg_30h - var_78h;\n    }\n    var_30h = fcn.004295b0(arg_20h, 0x65, arg_30h);\n    if (var_30h != 0) {\n        var_7ch = (var_30h - arg_20h) + 1;\n        puVar5 = fcn.00424170(arg_8h, &var_c0h, arg_10h, arg_14h, arg_20h, var_30h - arg_20h, var_25h);\n        puVar5 = fcn.00423c80(arg_8h, &var_c8h, *puVar5, puVar5[1], var_15h, arg_2ch);\n        uVar2 = *puVar5;\n        uVar8 = puVar5[1];\n        arg_2ch = 0;\n        uVar1 = fcn.00420d40();\n        if ((uVar1 & 4) == 0) {\n            var_fch = 0x43c254;\n        }\n        else {\n            var_fch = 0x43c258;\n        }\n        puVar5 = fcn.00424100(arg_8h, &var_d0h, uVar2, uVar8, var_fch, 1);\n        arg_10h = *puVar5;\n        arg_14h = puVar5[1];\n        arg_20h = arg_20h + var_7ch;\n        arg_30h = arg_30h - var_7ch;\n    }\n    puVar5 = fcn.00424170(arg_8h, &var_d8h, arg_10h, arg_14h, arg_20h, arg_30h, var_25h);\n    puVar5 = fcn.00423c80(arg_8h, &var_e0h, *puVar5, puVar5[1], var_15h, arg_2ch);\n    uVar2 = *puVar5;\n    uVar8 = puVar5[1];\n    uVar7 = 0;\n    fcn.00421980(0, 0);\n    fcn.00423c80(arg_8h, arg_ch, uVar2, uVar8, arg_1ch & 0xff, var_2ch);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    fcn.004223d0();\n    var_4h = 0xffffffff;\n    fcn.004223d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.00428ef5(uVar7);\n    return;\n}\n",
        "token_count": 2822
    },
    "00423700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423700(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_10h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x10) < arg_8h) {\n        fcn.004237c0();\n    }\n    if (*0x43c25c - *(in_ECX + 0x10) <= arg_ch) {\n        fcn.004240e0();\n    }\n    if (arg_ch != 0) {\n        arg_8h_00 = *(in_ECX + 0x10) + arg_ch;\n        cVar1 = fcn.00424000(arg_8h_00, 0);\n        if (cVar1 != '\\0') {\n            arg_10h_00 = *(in_ECX + 0x10) - arg_8h;\n            iVar2 = fcn.00422600();\n            iVar2 = iVar2 + arg_8h;\n            iVar3 = fcn.00422600();\n            fcn.00422540(iVar3 + arg_8h + arg_ch, iVar2, arg_10h_00);\n            fcn.00423f90(arg_8h, arg_ch, arg_10h & 0xff);\n            fcn.00422ef0(arg_8h_00);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 368
    },
    "004238e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423a95)\n\nvoid __cdecl\nfcn.004238e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, char *arg_20h, \n            uint32_t arg_24h)\n\n{\n    uint arg_14h_00;\n    uint32_t uVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar5;\n    uint arg_8h_00;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_7ch;\n    int32_t var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    uint32_t var_44h;\n    char *var_40h;\n    uint var_3ch;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a220;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x442530 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    puVar4 = &var_48h;\n    var_20h = uVar1;\n    uVar2 = fcn.00420ab0(puVar4);\n    var_4h = 0;\n    var_14h = fcn.004246d0(uVar2);\n    var_4h = 0xffffffff;\n    fcn.00420a00(puVar4, uVar1);\n    fcn.00424300(&var_3ch);\n    var_4h = 1;\n    if ((*arg_20h == '+') || (*arg_20h == '-')) {\n        var_78h = 1;\n    }\n    else {\n        if ((*arg_20h == '0') && ((arg_20h[1] == 'x' || (arg_20h[1] == 'X')))) {\n            var_74h = 2;\n        }\n        else {\n            var_74h = 0;\n        }\n        var_78h = var_74h;\n    }\n    var_18h = var_78h;\n    pcVar3 = fcn.00422430();\n    if ((*pcVar3 != '\\x7f') && (pcVar3 = fcn.00422430(),  '\\0' < *pcVar3)) {\n        var_40h = fcn.00422430();\n        var_44h = arg_24h;\n        while (((*var_40h != '\\x7f' && ('\\0' < *var_40h)) && (*var_40h < var_44h - var_18h))) {\n            var_44h = var_44h - *var_40h;\n            fcn.00429683(arg_20h + var_44h + 1, (arg_24h + 1) - var_44h, arg_20h + var_44h, (arg_24h + 1) - var_44h);\n            arg_20h[var_44h] = '\\0';\n            arg_24h = arg_24h + 1;\n            if ('\\0' < var_40h[1]) {\n                var_40h = var_40h + 1;\n            }\n        }\n    }\n    iVar5 = fcn.00421960();\n    if ((iVar5 < 1) || (uVar1 = fcn.00421960(),  uVar1 <= arg_24h)) {\n        var_84h = 0;\n    }\n    else {\n        var_84h = fcn.00421960();\n        var_84h = var_84h - arg_24h;\n    }\n    var_1ch = var_84h;\n    var_10h = fcn.00420d40();\n    var_10h = var_10h & 0x1c0;\n    if ((var_10h == 0x40) || (var_10h == 0x100)) {\n        if (var_10h == 0x100) {\n            puVar4 = fcn.00424100(arg_8h, &var_58h, arg_10h, arg_14h, arg_20h, var_18h);\n            arg_20h = arg_20h + var_18h;\n            arg_24h = arg_24h - var_18h;\n            puVar4 = fcn.00423c80(arg_8h, &var_60h, *puVar4, puVar4[1], arg_1ch & 0xff, var_1ch);\n            arg_10h = *puVar4;\n            arg_14h = puVar4[1];\n            var_1ch = 0;\n        }\n    }\n    else {\n        puVar4 = fcn.00423c80(arg_8h, &var_50h, arg_10h, arg_14h, arg_1ch & 0xff, var_1ch);\n        arg_10h = *puVar4;\n        arg_14h = puVar4[1];\n        var_1ch = 0;\n    }\n    uVar1 = fcn.004242e0();\n    puVar4 = fcn.00424170(arg_8h, &var_68h, arg_10h, arg_14h, arg_20h, arg_24h, uVar1 & 0xff);\n    uVar2 = *puVar4;\n    arg_14h_00 = puVar4[1];\n    arg_8h_00 = 0;\n    fcn.00421980(0, 0);\n    fcn.00423c80(arg_8h, arg_ch, uVar2, arg_14h_00, arg_1ch & 0xff, var_1ch);\n    var_4h = 0xffffffff;\n    fcn.004223d0();\n    *in_FS_OFFSET = var_ch;\n    fcn.00428ef5(arg_8h_00);\n    return;\n}\n",
        "token_count": 1481
    },
    "00423d50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423d50(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.004240a0(arg_8h);\n    if (cVar1 == '\\0') {\n        if (*0x43c25c - *(in_ECX + 0x10) <= arg_ch) {\n            fcn.004240e0();\n        }\n        if (arg_ch != 0) {\n            iVar2 = *(in_ECX + 0x10) + arg_ch;\n            cVar1 = fcn.00424000(iVar2, 0);\n            if (cVar1 != '\\0') {\n                iVar3 = fcn.00422600();\n                fcn.004225e0(iVar3 + *(in_ECX + 0x10), arg_8h, arg_ch);\n                fcn.00422ef0(iVar2);\n            }\n        }\n    }\n    else {\n        iVar2 = fcn.00422600();\n        in_ECX = fcn.00424340(in_ECX, arg_8h - iVar2, arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 300
    },
    "00423e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423e00(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x43c25c - *(in_ECX + 0x10) <= arg_8h) {\n        fcn.004240e0();\n    }\n    if (arg_8h != 0) {\n        arg_8h_00 = *(in_ECX + 0x10) + arg_8h;\n        cVar1 = fcn.00424000(arg_8h_00, 0);\n        if (cVar1 != '\\0') {\n            fcn.00423f90(*(in_ECX + 0x10), arg_8h, arg_ch & 0xff);\n            fcn.00422ef0(arg_8h_00);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 230
    },
    "00424000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00424000(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00424490();\n    if (uVar1 < arg_8h) {\n        fcn.004240e0();\n    }\n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.004244d0(arg_8h, *(in_ECX + 0x10));\n    }\n    else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n        if (arg_8h == 0) {\n            fcn.00422ef0(0);\n        }\n    }\n    else {\n        if (arg_8h < *(in_ECX + 0x10)) {\n            var_8h = arg_8h;\n        }\n        else {\n            var_8h = *(in_ECX + 0x10);\n        }\n        fcn.00422560(1, var_8h);\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 268
    },
    "00424100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00424100(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint8_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    while (arg_1ch != 0) {\n        iVar2 = arg_8h + 8;\n        uVar1 = fcn.004247c0(*arg_18h);\n        uVar1 = uVar1 & 0xff;\n        fcn.004242b0(iVar2);\n        fcn.00424250(uVar1);\n        arg_1ch = arg_1ch + -1;\n        fcn.004242b0();\n        arg_18h = arg_18h + 1;\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return arg_ch;\n}\n",
        "token_count": 215
    },
    "00424170": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.00424170(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    while( true ) {\n        var_4h = fcn.004295b0(arg_18h, 0, arg_1ch);\n        if (var_4h == 0) {\n            var_1ch = arg_1ch;\n        }\n        else {\n            var_1ch = var_4h - arg_18h;\n        }\n        var_8h = var_1ch;\n        puVar1 = fcn.00424100(arg_8h, &var_10h, arg_10h, arg_14h, arg_18h, var_1ch);\n        arg_10h = *puVar1;\n        arg_14h = puVar1[1];\n        arg_18h = arg_18h + var_8h;\n        arg_1ch = arg_1ch - var_8h;\n        if (arg_1ch == 0) break;\n        if (arg_20h != 0) {\n            puVar1 = fcn.00423c80(arg_8h, &var_18h, arg_10h, arg_14h, arg_20h, 1);\n            arg_10h = *puVar1;\n            arg_14h = puVar1[1];\n        }\n        arg_18h = arg_18h + 1;\n        arg_1ch = arg_1ch + -1;\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return arg_ch;\n}\n",
        "token_count": 441
    },
    "00424250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00424250(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uchar *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 4) != 0) {\n        var_4h = fcn.004219c0(arg_8h & 0xff);\n        var_8h = fcn.00421950();\n        cVar1 = fcn.00421930(&var_8h, &var_4h);\n        if (cVar1 == '\\0') {\n            return in_ECX;\n        }\n    }\n    *in_ECX = 1;\n    return in_ECX;\n}\n",
        "token_count": 163
    },
    "00424340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424340(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00422450();\n    if (uVar2 < arg_ch) {\n        fcn.004237c0();\n    }\n    iVar3 = fcn.00422450();\n    if (iVar3 - arg_ch < arg_10h) {\n        arg_10h = iVar3 - arg_ch;\n    }\n    if (*0x43c25c - *(in_ECX + 0x10) <= arg_10h) {\n        fcn.004240e0();\n    }\n    if (arg_10h != 0) {\n        iVar3 = *(in_ECX + 0x10) + arg_10h;\n        cVar1 = fcn.00424000(iVar3, 0);\n        if (cVar1 != '\\0') {\n            iVar4 = fcn.00422600();\n            iVar4 = iVar4 + arg_ch;\n            iVar5 = fcn.00422600();\n            fcn.004225e0(iVar5 + *(in_ECX + 0x10), iVar4, arg_10h);\n            fcn.00422ef0(iVar3);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 349
    },
    "00424400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424400(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t arg_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x10) < arg_8h) {\n        fcn.004237c0();\n    }\n    if (*(in_ECX + 0x10) - arg_8h < arg_ch) {\n        arg_ch = *(in_ECX + 0x10) - arg_8h;\n    }\n    if (arg_ch != 0) {\n        arg_10h = (*(in_ECX + 0x10) - arg_8h) - arg_ch;\n        iVar1 = fcn.00422600();\n        iVar1 = iVar1 + arg_8h + arg_ch;\n        iVar2 = fcn.00422600();\n        fcn.00422540(iVar2 + arg_8h, iVar1, arg_10h);\n        fcn.00422ef0(*(in_ECX + 0x10) - arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 275
    },
    "00424490": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00424490(void)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00424680();\n    if (uVar1 < 2) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = uVar1 - 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 97
    },
    "004244d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004244d0(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a250;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_18h = var_8h | 0xf;\n    uVar1 = fcn.00424490();\n    if (uVar1 < var_18h) {\n        var_18h = var_8h;\n    }\n    else if (var_18h / 3 < param_1[5] >> 1) {\n        uVar1 = param_1[5];\n        iVar2 = fcn.00424490();\n        uVar1 = iVar2 - (uVar1 >> 1);\n        if (param_1[5] < uVar1 || param_1[5] == uVar1) {\n            var_18h = (param_1[5] >> 1) + param_1[5];\n        }\n        else {\n            var_18h = fcn.00424490();\n        }\n    }\n    var_4h = 0;\n    arg_8h = fcn.00424660(var_18h + 1);\n    var_4h = 0xffffffff;\n    if (var_ch_2 != 0) {\n        iVar2 = var_ch_2;\n        arg_ch = fcn.00422600();\n        fcn.004225e0(arg_8h, arg_ch, iVar2);\n    }\n    fcn.00422560(1, 0);\n    *param_1 = arg_8h;\n    param_1[5] = var_18h;\n    fcn.00422ef0(var_ch_2);\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 540
    },
    "004246d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004246d0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a278;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x442530 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 0;\n    fcn.00426372(0);\n    var_4h = 0;\n    var_1ch = *0x45298c;\n    var_14h = fcn.00421bb0(uVar3, uVar1);\n    var_10h = fcn.00421c20(var_14h);\n    if (var_10h == 0) {\n        if (var_1ch == 0) {\n            iVar2 = fcn.004248e0(&var_1ch, arg_8h);\n            if (iVar2 == -1) {\n                fcn.00429090(\"bad cast\");\n                fcn.00428f04(&var_2ch, 0x43fd7c);\n            }\n            else {\n                var_10h = var_1ch;\n                *0x45298c = var_1ch;\n                var_20h = var_1ch;\n                fcn.00420b20();\n                fcn.00421c00();\n            }\n        }\n        else {\n            var_10h = var_1ch;\n        }\n    }\n    iVar2 = var_10h;\n    var_4h = 0xffffffff;\n    fcn.0042639a();\n    *in_FS_OFFSET = var_ch;\n    return iVar2;\n}\n",
        "token_count": 475
    },
    "004247d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004247d0(int32_t arg_8h)\n\n{\n    uint var_10h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((arg_8h != 0) && (var_4h = fcn.00429122(arg_8h),  var_4h == 0)) {\n        fcn.00424830(0);\n        fcn.00428f04(&var_10h, 0x44003c);\n    }\n    return var_4h;\n}\n",
        "token_count": 128
    },
    "004248e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004248e0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t *in_FS_OFFSET;\n    uint arg_10h;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a094;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x442530 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar2 = fcn.00429122(0x18);\n        var_4h = 0;\n        if (iVar2 == 0) {\n            var_48h = 0;\n        }\n        else {\n            arg_10h = 0;\n            arg_8h_00 = fcn.00421f10(0, 1, uVar1);\n            arg_8h_01 = fcn.00421da0(arg_8h_00);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_48h = fcn.004249d0(arg_8h_01, arg_8h_00, arg_10h);\n        }\n        *arg_8h = var_48h;\n        var_4h = 0xffffffff;\n        if (iVar2 != 0) {\n            fcn.00421e70();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 453
    },
    "00425000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00425000(uchar *arg_8h)\n\n{\n    uchar *puVar1;\n    uint var_10h;\n    uchar *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.004296e0(arg_8h);\n    var_8h = var_8h + 1;\n    puVar1 = fcn.004250fa(var_8h);\n    var_ch = puVar1;\n    for (; var_8h != 0; var_8h = var_8h + -1) {\n        *var_ch = *arg_8h;\n        var_ch = var_ch + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return puVar1;\n}\n",
        "token_count": 182
    },
    "004262b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004262b3(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00429916(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[0x15] != NULL) {\n        fcn.00425629();\n    }\n    if (*(extraout_ECX + 0x14) != '\\0') {\n        fcn.00426268();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00425387();\n    fcn.004299b5();\n    return;\n}\n",
        "token_count": 201
    },
    "0042900b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042900b(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.004291a2(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 82
    },
    "00428c07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00428c07(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x428cb2;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00428cde;\n        uStack36 = *0x442530 ^ &fcn.00428c07::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00428c07::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0042eadc();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00428c07::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 722
    },
    "00428ef5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428ef5(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x442530) {\n        return;\n    }\n    *0x452e98 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x452e9c = &arg_8h;\n    *0x452dd8 = 0x10001;\n    *0x452d80 = 0xc0000409;\n    *0x452d84 = 1;\n    var_328h = *0x442530;\n    var_324h = *0x442534;\n    *0x452d8c = unaff_retaddr;\n    *0x452e64 = in_GS;\n    *0x452e68 = in_FS;\n    *0x452e6c = in_ES;\n    *0x452e70 = in_DS;\n    *0x452e74 = unaff_EDI;\n    *0x452e78 = unaff_ESI;\n    *0x452e7c = unaff_EBX;\n    *0x452e80 = in_EDX;\n    *0x452e84 = in_ECX;\n    *0x452e88 = in_EAX;\n    *0x452e8c = unaff_EBP;\n    *0x452e90 = unaff_retaddr;\n    *0x452e94 = in_CS;\n    *0x452ea0 = in_SS;\n    *0x452dd0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00434c07(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x43cf1c);\n    if (*0x452dd0 == 0) {\n        fcn.00434c07(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 829
    },
    "004291a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004291a2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4530b0, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0042c335();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0042c2f3(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0042a953": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a953(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00430480(0x4404e0, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar4 = fcn.0042eadc();\n    *(iVar4 + 0x90) = *(iVar4 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0042edec();\n        }\n        iVar4 = *(iVar1 + 8);\n        iVar3 = *(iVar4 + iVar5 * 8);\n        *(unaff_EBP + -0x20) = iVar3;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar4 + 4 + iVar5 * 8) != 0) {\n            *(iVar2 + 8) = iVar3;\n            fcn.0042ee40(*(*(iVar1 + 8) + 4 + iVar5 * 8), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar3;\n        iVar5 = iVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042aa15();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0042edec();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.004304c5();\n    return;\n}\n",
        "token_count": 571
    },
    "0042aa15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042aa15(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042eadc();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0042eadc();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0042ace8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ace8(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00428e43(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0042eadc();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0042eadc();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00428e1c(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0042aa74(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0042f8bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0042f9c3: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0042f9c8)\n// WARNING: Removing unreachable block (ram,0x0042f9f7)\n// WARNING: Removing unreachable block (ram,0x0042f9ce)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042f8bd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00430480(0x4407b0, 0x20);\n    fcn.00430ab1(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x4530e4 != 1) {\n        *0x4530e0 = 1;\n        *0x4530dc = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x453b28);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x453b24);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0042e92c();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0042e92c();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x453b28);\n                        piVar2 = (*pcVar1)(*0x453b24);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x43b288;\n            while (*(unaff_EBP + -0x1c) < 0x43b294) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x43b298;\n        while (*(unaff_EBP + -0x20) < 0x43b29c) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004309d8(8);\n    }\n    return;\n}\n",
        "token_count": 1028
    },
    "004344fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004344fa(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004309d8(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0043474e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043474e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x442530 ^ &stack0xfffffffc;\n    fcn.0042c791(arg_10h);\n    var_14h = fcn.00437beb(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00437149(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004347a7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004347e7;\n        }\n        if (iVar1 != 2) {\ncode_r0x004347d9:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004347e7;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004347d9;\n        goto code_r0x004347a7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004347e7:\n    fcn.00428ef5(unaff_EBX);\n    return;\n}\n",
        "token_count": 500
    },
    "004347f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004347f6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x442530 ^ &stack0xfffffffc;\n    fcn.0042c791(arg_10h);\n    var_14h = fcn.00437beb(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0043769a(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043484f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043488f;\n        }\n        if (iVar1 != 2) {\ncode_r0x00434881:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043488f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00434881;\n        goto code_r0x0043484f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043488f:\n    fcn.00428ef5(unaff_EBX);\n    return;\n}\n",
        "token_count": 499
    },
    "004351de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004351de(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = *unaff_EDI;\n    if (((*(unaff_EBX + 0xc) & 0x40) == 0) || (*(unaff_EBX + 8) != 0)) {\n        *unaff_EDI = 0;\n        if (0 < arg_ch) {\n            do {\n                arg_ch = arg_ch + -1;\n                fcn.004351ab();\n                if (*in_EAX == -1) {\n                    if (*unaff_EDI != 0x2a) break;\n                    fcn.004351ab();\n                }\n            } while (0 < arg_ch);\n            if (*unaff_EDI != 0) {\n                return;\n            }\n        }\n        *unaff_EDI = iVar1;\n    }\n    else {\n        *in_EAX = *in_EAX + arg_ch;\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00435240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00435240(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t *piVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint8_t *puVar10;\n    int32_t *piVar11;\n    int32_t **ppiVar12;\n    bool bVar13;\n    int64_t iVar14;\n    int32_t *var_280h;\n    int32_t *var_27ch;\n    int32_t var_278h;\n    uint var_274h;\n    uchar *var_270h;\n    char *var_268h;\n    uint var_264h;\n    int32_t *var_260h;\n    int32_t var_25ch;\n    int32_t var_258h;\n    uint var_254h;\n    int32_t var_24ch;\n    uint var_248h;\n    uint32_t var_244h;\n    uint8_t *var_240h;\n    int32_t var_23ch;\n    int32_t *var_238h;\n    int32_t var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    uchar *var_228h;\n    int32_t var_224h;\n    int32_t *var_220h;\n    int32_t **var_21ch;\n    int32_t *var_218h;\n    uint8_t var_211h;\n    uint32_t var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x442530 ^ &stack0xfffffffc;\n    var_230h = arg_8h;\n    var_21ch = arg_14h;\n    var_258h = 0;\n    var_210h = 0;\n    var_238h = NULL;\n    var_218h = NULL;\n    var_234h = 0;\n    var_25ch = 0;\n    var_23ch = 0;\n    fcn.0042c791(arg_10h);\n    var_264h = fcn.0042c335();\n    if (arg_8h != 0) {\n        if ((*(arg_8h + 0xc) & 0x40) == 0) {\n            uVar4 = fcn.0043082c(arg_8h);\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar9 = 0x442d30;\n            }\n            else {\n                iVar9 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x453a20);\n            }\n            if ((*(iVar9 + 0x24) & 0x7f) == 0) {\n                if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                    iVar9 = 0x442d30;\n                }\n                else {\n                    iVar9 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x453a20);\n                }\n                if ((*(iVar9 + 0x24) & 0x80) == 0) goto code_r0x00435345;\n            }\n        }\n        else {\ncode_r0x00435345:\n            if (arg_ch != NULL) {\n                var_211h = *arg_ch;\n                var_224h = 0;\n                var_228h = NULL;\n                var_244h = 0;\n                var_260h = NULL;\n                if (var_211h != 0) {\n                    do {\n                        puVar10 = arg_ch + 1;\n                        var_240h = puVar10;\n                        if (var_224h < 0) break;\n                        if (var_211h - 0x20 < 0x59) {\n                            uVar4 = *(var_211h + 0x43efe0) & 0xf;\n                        }\n                        else {\n                            uVar4 = 0;\n                        }\n                        var_244h = *(uVar4 * 9 + 0x43f000 + var_244h) >> 4;\n    // switch table (8 cases) at 0x435e54\n                        switch(var_244h) {\n                        case 0:\ncode_r0x004355dc:\n                            var_23ch = 0;\n                            iVar9 = fcn.00435160(var_211h, &var_254h);\n                            if (iVar9 != 0) {\n                                fcn.004351ab();\n                                var_240h = arg_ch + 2;\n                                if (*puVar10 == 0) goto code_r0x004352b6;\n                            }\n                            fcn.004351ab();\n                            break;\n                        case 1:\n                            var_218h = 0xffffffff;\n                            var_274h = 0;\n                            var_25ch = 0;\n                            var_238h = NULL;\n                            var_234h = 0;\n                            var_210h = 0;\n                            var_23ch = 0;\n                            break;\n                        case 2:\n                            if (var_211h == 0x20) {\n                                var_210h = var_210h | 2;\n                            }\n                            else if (var_211h == 0x23) {\n                                var_210h = var_210h | 0x80;\n                            }\n                            else if (var_211h == 0x2b) {\n                                var_210h = var_210h | 1;\n                            }\n                            else if (var_211h == 0x2d) {\n                                var_210h = var_210h | 4;\n                            }\n                            else if (var_211h == 0x30) {\n                                var_210h = var_210h | 8;\n                            }\n                            break;\n                        case 3:\n                            if (var_211h == 0x2a) {\n                                var_21ch = arg_14h + 1;\n                                var_238h = *arg_14h;\n                                if (var_238h < 0) {\n                                    var_210h = var_210h | 4;\n                                    var_238h = -var_238h;\n                                }\n                            }\n                            else {\n                                var_238h = var_238h * 10 + -0x30 + var_211h;\n                            }\n                            break;\n                        case 4:\n                            var_218h = NULL;\n                            break;\n                        case 5:\n                            if (var_211h == 0x2a) {\n                                var_21ch = arg_14h + 1;\n                                var_218h = *arg_14h;\n                                if (var_218h < 0) {\n                                    var_218h = 0xffffffff;\n                                }\n                            }\n                            else {\n                                var_218h = var_218h * 10 + -0x30 + var_211h;\n                            }\n                            break;\n                        case 6:\n                            if (var_211h == 0x49) {\n                                uVar1 = *puVar10;\n                                if ((uVar1 == 0x36) && (arg_ch[2] == 0x34)) {\n                                    var_210h = var_210h | 0x8000;\n                                    var_240h = arg_ch + 3;\n                                }\n                                else if ((uVar1 == 0x33) && (arg_ch[2] == 0x32)) {\n                                    var_210h = var_210h & 0xffff7fff;\n                                    var_240h = arg_ch + 3;\n                                }\n                                else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                         ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                    var_244h = 0;\n                                    goto code_r0x004355dc;\n                                }\n                            }\n                            else if (var_211h == 0x68) {\n                                var_210h = var_210h | 0x20;\n                            }\n                            else if (var_211h == 0x6c) {\n                                if (*puVar10 == 0x6c) {\n                                    var_210h = var_210h | 0x1000;\n                                    var_240h = arg_ch + 2;\n                                }\n                                else {\n                                    var_210h = var_210h | 0x10;\n                                }\n                            }\n                            else if (var_211h == 0x77) {\n                                var_210h = var_210h | 0x800;\n                            }\n                            break;\n                        case 7:\n                            if (var_211h < 'e') {\n                                if (var_211h == 100) {\ncode_r0x0043589e:\n                                    var_210h = var_210h | 0x40;\ncode_r0x004358a5:\n                                    var_21ch = arg_14h;\n                                    var_228h = 0xa;\ncode_r0x004358af:\n                                    if (((var_210h & 0x8000) == 0) && ((var_210h & 0x1000) == 0)) {\n                                        ppiVar12 = var_21ch + 1;\n                                        if ((var_210h & 0x20) == 0) {\n                                            piVar11 = *var_21ch;\n                                            if ((var_210h & 0x40) == 0) {\n                                                piVar7 = NULL;\n                                                var_21ch = ppiVar12;\n                                            }\n                                            else {\n                                                piVar7 = piVar11 >> 0x1f;\n                                                var_21ch = ppiVar12;\n                                            }\n                                        }\n                                        else {\n                                            if ((var_210h & 0x40) == 0) {\n                                                piVar11 = *var_21ch;\n                                            }\n                                            else {\n                                                piVar11 = *var_21ch;\n                                            }\n                                            piVar7 = piVar11 >> 0x1f;\n                                            var_21ch = ppiVar12;\n                                        }\n                                    }\n                                    else {\n                                        piVar11 = *var_21ch;\n                                        piVar7 = var_21ch[1];\n                                        var_21ch = var_21ch + 2;\n                                    }\n                                    if ((((var_210h & 0x40) != 0) && (piVar7 < 1)) && (piVar7 < 0)) {\n                                        bVar13 = piVar11 != NULL;\n                                        piVar11 = -piVar11;\n                                        piVar7 = -(piVar7 + bVar13);\n                                        var_210h = var_210h | 0x100;\n                                    }\n                                    if ((var_210h & 0x9000) == 0) {\n                                        piVar7 = NULL;\n                                    }\n                                    iVar14 = CONCAT44(piVar7, piVar11);\n                                    if (var_218h < 0) {\n                                        var_218h = 0x1;\n                                    }\n                                    else {\n                                        var_210h = var_210h & 0xfffffff7;\n                                        if (0x200 < var_218h) {\n                                            var_218h = 0x200;\n                                        }\n                                    }\n                                    if ((piVar11 | piVar7) == 0) {\n                                        var_234h = 0;\n                                    }\n                                    piVar11 = &var_dh;\n                                    while( true ) {\n                                        pcVar8 = iVar14;\n                                        piVar7 = var_218h + -1;\n                                        if ((var_218h < 1) && (iVar14 == 0)) break;\n                                        var_218h = piVar7;\n                                        iVar14 = fcn.00434540();\n                                        iVar9 = extraout_ECX + 0x30;\n                                        if (0x39 < iVar9) {\n                                            iVar9 = iVar9 + var_258h;\n                                        }\n                                        *piVar11 = iVar9;\n                                        piVar11 = piVar11 + -1;\n                                        var_268h = pcVar8;\n                                    }\n                                    var_228h = &var_dh + -piVar11;\n                                    var_220h = piVar11 + 1;\n                                    var_218h = piVar7;\n                                    if (((var_210h & 0x200) != 0) && ((var_228h == NULL || (*var_220h != '0')))) {\n                                        *piVar11 = '0';\n                                        var_228h = &var_ch + -piVar11;\n                                        var_220h = piVar11;\n                                    }\n                                }\n                                else if (var_211h < 'T') {\n                                    if (var_211h == 0x53) {\n                                        if ((var_210h & 0x830) == 0) {\n                                            var_210h = var_210h | 0x800;\n                                        }\n                                        goto code_r0x004356b6;\n                                    }\n                                    if (var_211h == 0x41) {\ncode_r0x00435669:\n                                        var_211h = var_211h + 0x20;\n                                        var_274h = 1;\ncode_r0x004358d4:\n                                        var_210h = var_210h | 0x40;\n                                        var_268h = 0x200;\n                                        piVar11 = &var_20ch;\n                                        pcVar8 = var_268h;\n                                        piVar7 = &var_20ch;\n                                        if (var_218h < 0) {\n                                            var_218h = 0x6;\n                                        }\n                                        else if (var_218h == NULL) {\n                                            if (var_211h == 0x67) {\n                                                var_218h = 0x1;\n                                            }\n                                        }\n                                        else {\n                                            if (0x200 < var_218h) {\n                                                var_218h = 0x200;\n                                            }\n                                            if (0xa3 < var_218h) {\n                                                pcVar8 = var_218h + 0x15d;\n                                                var_220h = &var_20ch;\n                                                var_260h = fcn.0042cbeb(pcVar8);\n                                                piVar11 = var_260h;\n                                                piVar7 = var_260h;\n                                                if (var_260h == NULL) {\n                                                    var_218h = 0xa3;\n                                                    piVar11 = &var_20ch;\n                                                    pcVar8 = var_268h;\n                                                    piVar7 = var_220h;\n                                                }\n                                            }\n                                        }\n                                        var_220h = piVar7;\n                                        var_268h = pcVar8;\n                                        pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n                                        var_280h = *arg_14h;\n                                        var_21ch = arg_14h + 2;\n                                        var_27ch = arg_14h[1];\n                                        pcVar5 = (*_sym.imp.KERNEL32.dll_DecodePointer)\n                                                           (*0x4429f8, &var_280h, piVar11, var_268h, var_211h, var_218h\n                                                            , var_274h, &var_254h);\n                                        (*pcVar5)();\n                                        uVar4 = var_210h & 0x80;\n                                        if ((uVar4 != 0) && (var_218h == NULL)) {\n                                            pcVar5 = (*pcVar6)(*0x442a04, piVar11, &var_254h);\n                                            (*pcVar5)();\n                                        }\n                                        if ((var_211h == 0x67) && (uVar4 == 0)) {\n                                            pcVar6 = (*pcVar6)(*0x442a00, piVar11, &var_254h);\n                                            (*pcVar6)();\n                                        }\n                                        if (*piVar11 == '-') {\n                                            var_210h = var_210h | 0x100;\n                                            piVar11 = piVar11 + 1;\n                                            var_220h = piVar11;\n                                        }\ncode_r0x004357ef:\n                                        var_228h = fcn.004296e0(piVar11);\n                                    }\n                                    else if (var_211h == 0x43) {\n                                        var_21ch = arg_14h;\n                                        if ((var_210h & 0x830) == 0) {\n                                            var_210h = var_210h | 0x800;\n                                        }\ncode_r0x0043572f:\n                                        if ((var_210h & 0x810) == 0) {\n                                            var_20ch._0_1_ = *var_21ch;\n                                            var_228h = 0x1;\n                                            var_21ch = var_21ch + 1;\n                                        }\n                                        else {\n                                            uVar2 = *var_21ch;\n                                            var_21ch = var_21ch + 1;\n                                            iVar9 = fcn.00435143(&var_228h, &var_20ch, 0x200, uVar2);\n                                            if (iVar9 != 0) {\n                                                var_25ch = 1;\n                                            }\n                                        }\n                                        var_220h = &var_20ch;\n                                    }\n                                    else if ((var_211h == 0x45) || (var_211h == 0x47)) goto code_r0x00435669;\n                                }\n                                else {\n                                    if (var_211h == 0x58) goto code_r0x00435a31;\n                                    if (var_211h == 0x5a) {\n                                        piVar11 = *arg_14h;\n                                        var_21ch = arg_14h + 1;\n                                        if ((piVar11 == NULL) || (var_220h = piVar11[1],  var_220h == NULL)) {\n                                            var_220h = *0x442ad0;\n                                            piVar11 = *0x442ad0;\n                                            goto code_r0x004357ef;\n                                        }\n                                        var_228h = *piVar11;\n                                        if ((var_210h & 0x800) == 0) {\n                                            var_23ch = 0;\n                                        }\n                                        else {\n                                            var_228h = var_228h / 2;\n                                            var_23ch = 1;\n                                        }\n                                    }\n                                    else {\n                                        if (var_211h == 0x61) goto code_r0x004358d4;\n                                        if (var_211h == 99) goto code_r0x0043572f;\n                                    }\n                                }\ncode_r0x00435c11:\n                                if (var_25ch == 0) {\n                                    if ((var_210h & 0x40) != 0) {\n                                        if ((var_210h & 0x100) == 0) {\n                                            if ((var_210h & 1) == 0) {\n                                                if ((var_210h & 2) == 0) goto code_r0x00435c5e;\n                                                var_22ch._0_1_ = 0x20;\n                                            }\n                                            else {\n                                                var_22ch._0_1_ = 0x2b;\n                                            }\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2d;\n                                        }\n                                        var_234h = 1;\n                                    }\ncode_r0x00435c5e:\n                                    pcVar8 = var_238h + (-var_234h - var_228h);\n                                    var_268h = pcVar8;\n                                    if ((var_210h & 0xc) == 0) {\n                                        do {\n                                            if (pcVar8 < 1) break;\n                                            pcVar8 = pcVar8 + -1;\n                                            fcn.004351ab();\n                                        } while (var_224h != -1);\n                                    }\n                                    fcn.004351de(&var_22ch, var_234h);\n                                    if (((var_210h & 8) != 0) && (pcVar8 = var_268h,  (var_210h & 4) == 0)) {\n                                        do {\n                                            if (pcVar8 < 1) break;\n                                            fcn.004351ab();\n                                            pcVar8 = pcVar8 + -1;\n                                        } while (var_224h != -1);\n                                    }\n                                    if ((var_23ch == 0) || (var_228h < 1)) {\n                                        fcn.004351de(var_220h, var_228h);\n                                    }\n                                    else {\n                                        var_270h = var_228h;\n                                        piVar11 = var_220h;\n                                        do {\n                                            uVar2 = *piVar11;\n                                            var_270h = var_270h + -1;\n                                            piVar11 = piVar11 + 2;\n                                            iVar9 = fcn.00435143(&var_278h, &var_ch, 6, uVar2);\n                                            if ((iVar9 != 0) || (var_278h == 0)) {\n                                                var_224h = -1;\n                                                break;\n                                            }\n                                            fcn.004351de(&var_ch, var_278h);\n                                        } while (var_270h != NULL);\n                                    }\n                                    if ((-1 < var_224h) && (pcVar8 = var_268h,  (var_210h & 4) != 0)) {\n                                        do {\n                                            if (pcVar8 < 1) break;\n                                            fcn.004351ab();\n                                            pcVar8 = pcVar8 + -1;\n                                        } while (var_224h != -1);\n                                    }\n                                }\n                            }\n                            else {\n                                if ('p' < var_211h) {\n                                    if (var_211h == 0x73) {\ncode_r0x004356b6:\n                                        piVar11 = var_218h;\n                                        if (var_218h == 0xffffffff) {\n                                            piVar11 = 0x7fffffff;\n                                        }\n                                        var_21ch = arg_14h + 1;\n                                        var_220h = *arg_14h;\n                                        if ((var_210h & 0x810) == 0) {\n                                            piVar7 = var_220h;\n                                            if (var_220h == NULL) {\n                                                var_220h = *0x442ad0;\n                                                piVar7 = *0x442ad0;\n                                            }\n                                            for (; (piVar11 != NULL && (piVar11 = piVar11 + -1,  *piVar7 != '\\0'));\n                                                piVar7 = piVar7 + 1) {\n                                            }\n                                            var_228h = piVar7 - var_220h;\n                                        }\n                                        else {\n                                            if (var_220h == NULL) {\n                                                var_220h = *0x442ad4;\n                                            }\n                                            var_23ch = 1;\n                                            for (piVar7 = var_220h;\n                                                (piVar11 != NULL && (piVar11 = piVar11 + -1,  *piVar7 != 0));\n                                                piVar7 = piVar7 + 2) {\n                                            }\n                                            var_228h = piVar7 - var_220h >> 1;\n                                        }\n                                        goto code_r0x00435c11;\n                                    }\n                                    if (var_211h == 0x75) goto code_r0x004358a5;\n                                    if (var_211h != 0x78) goto code_r0x00435c11;\n                                    var_258h = 0x27;\ncode_r0x00435a63:\n                                    var_228h = 0x10;\n                                    if ((var_210h & 0x80) != 0) {\n                                        var_22ch._1_1_ = var_258h + 'Q';\n                                        var_22ch._0_1_ = 0x30;\n                                        var_234h = 2;\n                                    }\n                                    goto code_r0x004358af;\n                                }\n                                if (var_211h == 0x70) {\n                                    var_218h = 0x8;\ncode_r0x00435a31:\n                                    var_258h = 7;\n                                    var_21ch = arg_14h;\n                                    goto code_r0x00435a63;\n                                }\n                                if (var_211h < 'e') goto code_r0x00435c11;\n                                arg_14h = var_21ch;\n                                if (var_211h < 'h') goto code_r0x004358d4;\n                                if (var_211h == 0x69) goto code_r0x0043589e;\n                                if (var_211h != 0x6e) {\n                                    if (var_211h != 0x6f) goto code_r0x00435c11;\n                                    var_228h = 0x8;\n                                    if ((var_210h & 0x80) != 0) {\n                                        var_210h = var_210h | 0x200;\n                                    }\n                                    goto code_r0x004358af;\n                                }\n                                piVar11 = *var_21ch;\n                                var_21ch = var_21ch + 1;\n                                iVar9 = fcn.00434fd8();\n                                if (iVar9 == 0) goto code_r0x004352b6;\n                                if ((var_210h & 0x20) == 0) {\n                                    *piVar11 = var_224h;\n                                }\n                                else {\n                                    *piVar11 = var_224h;\n                                }\n                                var_25ch = 1;\n                            }\n                            if (var_260h != NULL) {\n                                fcn.004291a2(var_260h);\n                                var_260h = NULL;\n                            }\n                            break;\n                        default:\n                            goto code_r0x004352b6;\n                        case 0xbad1abe1:\n                            break;\n                        }\n                        var_211h = *var_240h;\n                        arg_ch = var_240h;\n                        arg_14h = var_21ch;\n                    } while (var_211h != 0);\n                    if ((var_244h != 0) && (var_244h != 7)) goto code_r0x004352b6;\n                }\n                if (var_248h != '\\0') {\n                    *(var_24ch + 0x70) = *(var_24ch + 0x70) & 0xfffffffd;\n                }\n                goto code_r0x00435e42;\n            }\n        }\n    }\ncode_r0x004352b6:\n    puVar3 = fcn.0042c335();\n    *puVar3 = 0x16;\n    fcn.0042dc2a();\n    if (var_248h != '\\0') {\n        *(var_24ch + 0x70) = *(var_24ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00435e42:\n    fcn.00428ef5(unaff_EBX);\n    return;\n}\n",
        "token_count": 6044
    },
    "00435fdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00435fdc(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x442530 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0042e92c();\n    var_14h = 0;\n    if (*0x4539e8 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x00436139;\n        *0x4539e8 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, \"GetActiveWindow\");\n        *0x4539ec = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x4539f0 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x4539f8 = (*pcVar4)(uVar3);\n        if (*0x4539f8 != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x4539f4 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x4539f4 == var_18h) || (*0x4539f8 == var_18h)) {\ncode_r0x004360e8:\n        if ((((*0x4539ec != var_18h) && (pcVar4 = (*pcVar6)(*0x4539ec),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x4539f0 != var_18h && (pcVar4 = (*pcVar6)(*0x4539f0),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4539f4);\n        pcVar5 = (*pcVar6)(*0x4539f8);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x004360e8;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x4539e8);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00436139:\n    fcn.00428ef5(unaff_EBX);\n    return;\n}\n",
        "token_count": 938
    },
    "00437149": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00437149(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x442530 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0043728d;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00437294;\ncode_r0x0043728d:\n                        do {\n                            bVar6 = true;\ncode_r0x00437294:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x004372a2;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x004372a2:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4435f4 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4435f4 < iVar14) {\n                if (iVar14 < *0x4435f0) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x4435f0;\n                }\n                goto code_r0x0043764d;\n            }\n            iVar13 = *0x4435f4 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00437441;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00437441:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0043764d:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00428ef5(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3260
    },
    "0043769a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0043769a(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x442530 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x443614;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x443610 + -1;\n        iVar14 = *0x443610 + (*0x443610 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x443610 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x004377de;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x004377e5;\ncode_r0x004377de:\n                        do {\n                            bVar6 = true;\ncode_r0x004377e5:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x004377f3;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x004377f3:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x44360c - *0x443610) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x44360c < iVar14) {\n                if (iVar14 < *0x443608) {\n                    iVar14 = iVar14 + *0x44361c;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x443614 + (*0x443614 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x443614 + (*0x443614 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x44361c + *0x443608;\n                }\n                goto code_r0x00437b9e;\n            }\n            iVar13 = *0x44360c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x443610 + -1;\n            iVar13 = *0x443610 + (*0x443610 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x443610 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00437992;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00437992:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x443614 + 1 + (*0x443614 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00437b9e:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x443618 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x443618 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00428ef5(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3207
    },
    "00439481": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00439481(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = arg_10h;\n    uVar8 = 0;\n    var_4h._0_2_ = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        uVar5 = 0;\n        arg_10h = NULL;\n        do {\n            uVar9 = *puVar4;\n            uVar1 = puVar4[1];\n            uVar2 = puVar4[2];\n            bVar3 = false;\n            uVar6 = (uVar8 * 2 | uVar5 >> 0x1f) * 2 | uVar5 * 2 >> 0x1f;\n            uVar5 = uVar5 * 4;\n            uVar8 = (arg_10h * 2 | uVar8 >> 0x1f) * 2 | uVar8 * 2 >> 0x1f;\n            uVar7 = uVar9 + uVar5;\n            *puVar4 = uVar5;\n            puVar4[1] = uVar6;\n            puVar4[2] = uVar8;\n            if ((uVar7 < uVar5) || (uVar7 < uVar9)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar7;\n            uVar5 = uVar6;\n            if (bVar3) {\n                bVar3 = false;\n                uVar5 = uVar6 + 1;\n                if ((uVar5 < uVar6) || (uVar5 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar5;\n                if (bVar3) {\n                    uVar8 = uVar8 + 1;\n                    puVar4[2] = uVar8;\n                }\n            }\n            bVar3 = false;\n            uVar9 = uVar5 + uVar1;\n            if ((uVar9 < uVar5) || (uVar9 < uVar1)) {\n                bVar3 = true;\n            }\n            puVar4[1] = uVar9;\n            if (bVar3) {\n                uVar8 = uVar8 + 1;\n                puVar4[2] = uVar8;\n            }\n            bVar3 = false;\n            arg_10h = (uVar8 + uVar2) * 2 | uVar9 >> 0x1f;\n            uVar8 = uVar7 * 2;\n            uVar9 = uVar9 * 2 | uVar7 >> 0x1f;\n            puVar4[2] = arg_10h;\n            *puVar4 = uVar8;\n            puVar4[1] = uVar9;\n            uVar5 = uVar8 + *arg_8h;\n            if ((uVar5 < uVar8) || (uVar5 < *arg_8h)) {\n                bVar3 = true;\n            }\n            *puVar4 = uVar5;\n            uVar8 = uVar9;\n            if (bVar3) {\n                uVar8 = uVar9 + 1;\n                bVar3 = false;\n                if ((uVar8 < uVar9) || (uVar8 == 0)) {\n                    bVar3 = true;\n                }\n                puVar4[1] = uVar8;\n                if (bVar3) {\n                    arg_10h = arg_10h + 1;\n                    puVar4[2] = arg_10h;\n                }\n            }\n            arg_ch = arg_ch + -1;\n            arg_8h = arg_8h + 1;\n            puVar4[1] = uVar8;\n            puVar4[2] = arg_10h;\n        } while (arg_ch != 0);\n    }\n    if (puVar4[2] == 0) {\n        uVar8 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -0x10;\n            uVar5 = uVar8 >> 0x10;\n            uVar8 = uVar8 << 0x10 | *puVar4 >> 0x10;\n            puVar4[1] = uVar8;\n            *puVar4 = *puVar4 << 0x10;\n        } while (uVar5 == 0);\n        puVar4[2] = uVar5;\n    }\n    uVar8 = puVar4[2];\n    if ((uVar8 & 0x8000) == 0) {\n        uVar5 = puVar4[1];\n        do {\n            var_4h._0_2_ = var_4h + -1;\n            uVar9 = uVar8 * 2;\n            uVar8 = uVar9 | uVar5 >> 0x1f;\n            uVar5 = uVar5 * 2 | *puVar4 >> 0x1f;\n            *puVar4 = *puVar4 * 2;\n            puVar4[1] = uVar5;\n            puVar4[2] = uVar8;\n        } while ((uVar9 & 0x8000) == 0);\n    }\n    *(puVar4 + 10) = var_4h;\n    return;\n}\n",
        "token_count": 1358
    },
    "004212c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004212c0(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    cVar1 = fcn.00421330();\n    if (cVar1 == '\\0') {\n        fcn.00420db0();\n        iVar2 = fcn.00421350();\n        if (iVar2 == -1) {\n            var_4h = 4;\n        }\n    }\n    fcn.00420d60(var_4h, 0);\n    return param_1;\n}\n",
        "token_count": 143
    },
    "004257a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.004257a0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00429916(0x14);\n    fcn.00426372(0);\n    iVar2 = *0x45299c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar2;\n    arg_8h_00 = fcn.00421bb0();\n    iVar1 = fcn.00421c20(arg_8h_00);\n    if ((iVar1 == 0) && (iVar2 == 0)) {\n        iVar2 = fcn.0042568c(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00429090(\"bad cast\");\n            fcn.00428f04(unaff_EBP + -0x20, 0x43fd7c);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n        *0x45299c = iVar2;\n        fcn.00420b20();\n        fcn.004264c3(iVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042639a();\n    fcn.004299b5();\n    return;\n}\n",
        "token_count": 407
    },
    "00425b85": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00425b85(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00429916(0x14);\n    fcn.00426372(0);\n    iVar2 = *0x4529a0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar2;\n    arg_8h_00 = fcn.00421bb0();\n    iVar1 = fcn.00421c20(arg_8h_00);\n    if ((iVar1 == 0) && (iVar2 == 0)) {\n        iVar2 = fcn.00425a7a(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00429090(\"bad cast\");\n            fcn.00428f04(unaff_EBP + -0x20, 0x43fd7c);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n        *0x4529a0 = iVar2;\n        fcn.00420b20();\n        fcn.004264c3(iVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042639a();\n    fcn.004299b5();\n    return;\n}\n",
        "token_count": 410
    },
    "004299d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004299d8(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00430480(0x440398, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.0042c335();\n        *puVar2 = 0x16;\n        fcn.0042dc2a();\n        goto code_r0x00429abb;\n    }\n    fcn.00429deb(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.0043082c(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x442d30;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x453a20);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x442d30;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x453a20);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x00429a8e;\n        }\n        puVar2 = fcn.0042c335();\n        *puVar2 = 0x16;\n        fcn.0042dc2a();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00429a8e:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.0043070a(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00429ac4();\ncode_r0x00429abb:\n    fcn.004304c5();\n    return;\n}\n",
        "token_count": 757
    },
    "00429acc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00429acc(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00430480(0x4403b8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.0042c335();\n        *puVar3 = 0x16;\n        fcn.0042dc2a();\n        goto code_r0x00429bb7;\n    }\n    fcn.00429deb(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.0043082c(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x442d30;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x453a20);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x442d30;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x453a20);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x00429b82;\n        }\n        puVar3 = fcn.0042c335();\n        *puVar3 = 0x16;\n        fcn.0042dc2a();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00429b82:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.0042f14c(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00429bc0();\ncode_r0x00429bb7:\n    fcn.004304c5();\n    return;\n}\n",
        "token_count": 804
    },
    "00420e10": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420e10(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_14h;\n    \n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    if ((*(in_ECX + 0xc) & *(in_ECX + 0x10)) != 0) {\n        if (arg_ch == '\\0') {\n            if ((*(in_ECX + 0xc) & *(in_ECX + 0x10) & 4) == 0) {\n                if ((*(in_ECX + 0xc) & *(in_ECX + 0x10) & 2) == 0) {\n                    uVar1 = fcn.00420f80(&var_54h, 1);\n                    fcn.00420fd0(\"ios_base::eofbit set\", uVar1);\n                    fcn.00428f04(&var_4ch, 0x43fbd8);\n                }\n                else {\n                    uVar1 = fcn.00420f80(&var_38h, 1);\n                    fcn.00420fd0(\"ios_base::failbit set\", uVar1);\n                    fcn.00428f04(&var_30h, 0x43fbd8);\n                }\n            }\n            else {\n                uVar1 = fcn.00420f80(&var_1ch, 1);\n                fcn.00420fd0(\"ios_base::badbit set\", uVar1);\n                fcn.00428f04(&var_14h, 0x43fbd8);\n            }\n        }\n        else {\n            fcn.00428f04(0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "004214b0": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid fcn.004214b0(void)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43a020;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    uVar1 = fcn.00420d40();\n    if ((uVar1 & 2) != 0) {\n        fcn.004212c0();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 176
    },
    "004311e1": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004311e1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00430480(0x440810, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0042c348();\n        *puVar2 = 0;\n        puVar2 = fcn.0042c335();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x453a08)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x453a20;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00436cfa(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0042c335();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0042c348();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00430ae4(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004312ad();\n                goto code_r0x004312a4;\n            }\n        }\n        puVar2 = fcn.0042c348();\n        *puVar2 = 0;\n        puVar2 = fcn.0042c335();\n        *puVar2 = 9;\n        fcn.0042dc2a();\n    }\ncode_r0x004312a4:\n    fcn.004304c5();\n    return;\n}\n",
        "token_count": 608
    },
    "00429122": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429122(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *var_10h;\n    char *var_4h;\n    \n    do {\n        iVar2 = fcn.0042c25f(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0042f106(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x452c88 & 1) == 0) {\n        *0x452c88 = *0x452c88 | 1;\n        var_4h = \"bad allocation\";\n        fcn.00428fa1(&var_4h);\n        *0x452c7c = vtable.std::bad_alloc.0;\n        fcn.0042a7a0(0x43a65f);\n    }\n    fcn.004290ae(0x452c7c);\n    var_10h = vtable.std::bad_alloc.0;\n    fcn.00428f04(&var_10h, 0x44003c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 277
    },
    "00439e90": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.00439e90(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "00401010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401010(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    uint32_t unaff_EBX;\n    code *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    pcVar2 = in_EAX + 0x440c24;\n    *pcVar2 = *pcVar2 + pcVar2;\n    *pcVar2 = *pcVar2 + pcVar2;\n    cVar1 = *pcVar2;\n    *(unaff_EDI + 0x45014c) = 1;\n    if (cVar1 == '\\0') {\n        (*unaff_ESI)(*0x450de8);\n        (*(unaff_EBX & 0xffff0000 | CONCAT11((unaff_EBX >> 8) + in_EAX, unaff_EBX)))();\n        (*_fcn.004344a0)();\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "004012f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004283f2(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 64
    },
    "00401310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401310(uint arg_8h)\n\n{\n    fcn.00428736(arg_8h);\n    return;\n}\n",
        "token_count": 33
    },
    "00401330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401330(uint arg_8h)\n\n{\n    fcn.0042875d(arg_8h);\n    return;\n}\n",
        "token_count": 34
    },
    "00401360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401360(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((unaff_EDI <= unaff_ESI) && (unaff_ESI < 0x18)) {\n        func_0x00400ee2();\n        return 1;\n    }\n    *(unaff_EDI + 0x3a) = *(unaff_EDI + 0x3a) + in_EAX;\n    return in_EAX;\n}\n",
        "token_count": 137
    },
    "004211f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004211f0(uint arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x439ff8;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x442530 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00421560(arg_8h);\n    var_4h = 0;\n    cVar1 = fcn.004212a0(arg_8h, uVar3);\n    if (cVar1 != '\\0') {\n        iVar4 = fcn.00421540();\n        if (iVar4 != 0) {\n            fcn.00421540();\n            fcn.004212c0();\n        }\n    }\n    uVar2 = fcn.004212a0(arg_8h, uVar3);\n    *(in_ECX + 4) = uVar2;\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 296
    },
    "004212a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __fastcall fcn.004212a0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00420d90(param_1);\n    return iVar1 == 0;\n}\n",
        "token_count": 72
    },
    "00421560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00421560(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    iVar1 = fcn.00420db0();\n    if (iVar1 != 0) {\n        piVar2 = fcn.00420db0();\n        (**(*piVar2 + 4))();\n    }\n    return in_ECX;\n}\n",
        "token_count": 122
    },
    "004215c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004215c0(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00420db0();\n    if (iVar1 != 0) {\n        piVar2 = fcn.00420db0();\n        (**(*piVar2 + 8))(piVar2, param_1);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00421c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421c00(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004264c3(param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "00421f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00421f10(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00421f70(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "00422470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint * __cdecl fcn.00422470(uint *arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uchar *arg_8h_01;\n    uint var_8h;\n    uchar var_2h;\n    uint var_1h;\n    \n    if (in_ECX != arg_8h) {\n        fcn.00422ed0(&var_1h);\n        arg_8h_01 = &var_2h;\n        arg_8h_00 = fcn.00422ed0(arg_8h_01);\n        cVar1 = fcn.004246b0(arg_8h_00, arg_8h_01);\n        if ((cVar1 == '\\0') || (arg_8h[5] < 0x10)) {\n            fcn.00422560(1, 0);\n            if (arg_8h[5] < 0x10) {\n                fcn.00422540(in_ECX, arg_8h, arg_8h[4] + 1);\n            }\n            else {\n                *in_ECX = *arg_8h;\n                *arg_8h = 0;\n            }\n            in_ECX[4] = arg_8h[4];\n            in_ECX[5] = arg_8h[5];\n            fcn.00422560(0, 0);\n        }\n        else {\n            fcn.00422eb0(arg_8h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 362
    },
    "00422540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422540(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004291e0(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 52
    },
    "004225e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004225e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004287b0(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 53
    },
    "00422630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422630(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00422650(&arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 51
    },
    "00422ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422ed0(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00422650(in_ECX + 0x18);\n    return arg_8h;\n}\n",
        "token_count": 58
    },
    "00422f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422f40(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00429117(arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "00422f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00422f60(uint noname_0, uchar *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    char *pcVar1;\n    char var_ah;\n    char var_9h;\n    uint var_8h;\n    char *var_4h;\n    \n    *arg_ch = 0x25;\n    var_4h = arg_ch + 1;\n    if ((arg_14h & 0x20) != 0) {\n        *var_4h = 0x2b;\n        var_4h = arg_ch + 2;\n    }\n    if ((arg_14h & 0x10) != 0) {\n        *var_4h = 0x23;\n        var_4h = var_4h + 1;\n    }\n    *var_4h = 0x2e;\n    var_4h[1] = 0x2a;\n    pcVar1 = var_4h + 2;\n    if (arg_10h != '\\0') {\n        var_4h[2] = arg_10h;\n        pcVar1 = var_4h + 3;\n    }\n    var_4h = pcVar1;\n    arg_14h = arg_14h & 0x3000;\n    if (arg_14h == 0x2000) {\n        var_9h = 'f';\n    }\n    else {\n        if (arg_14h == 0x3000) {\n            var_ah = 'a';\n        }\n        else {\n            var_ah = (arg_14h != 0x1000) * '\\x02' + 'e';\n        }\n        var_9h = var_ah;\n    }\n    *var_4h = var_9h;\n    var_4h[1] = '\\0';\n    return arg_ch;\n}\n",
        "token_count": 423
    },
    "00423eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423eb0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.00422450();\n    if (uVar2 < arg_ch) {\n        fcn.004237c0();\n    }\n    iVar3 = fcn.00422450();\n    var_4h = iVar3 - arg_ch;\n    if (arg_10h < var_4h) {\n        var_4h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00424400(arg_ch + var_4h, *0x43c25c);\n        fcn.00424400(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.00424000(var_4h, 0);\n        if (cVar1 != '\\0') {\n            uVar2 = var_4h;\n            iVar3 = fcn.00422600();\n            iVar3 = iVar3 + arg_ch;\n            arg_8h_00 = fcn.00422600();\n            fcn.004225e0(arg_8h_00, iVar3, uVar2);\n            fcn.00422ef0(var_4h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 351
    },
    "00423f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423f70(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00422600();\n    return iVar1 + arg_8h;\n}\n",
        "token_count": 59
    },
    "00424660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424660(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.004247d0(arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "004246b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004246b0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00424ff0(arg_8h, arg_ch);\n    return cVar1 == '\\0';\n}\n",
        "token_count": 59
    },
    "00424d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424d20(int32_t param_1)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0042976b(*(param_1 + 8));\n    fcn.0042976b(*(param_1 + 0x10));\n    fcn.0042976b(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 102
    },
    "00424dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00424dd0(int32_t param_1, uint param_2, char param_3)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack136;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint8_t *var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint8_t **var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a300;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack136 = *0x442530 ^ &stack0xfffffffc;\n    puStack20 = &uStack136;\n    *in_FS_OFFSET = &var_ch_3;\n    var_14h = fcn.00424fc0();\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    var_4h = 0;\n    if (var_ch_2 == '\\0') {\n        var_54h = var_14h[2];\n    }\n    else {\n        var_54h = 0x43c2b0;\n    }\n    fcn.00424da0(&var_1ch);\n    uVar2 = fcn.00425000(var_54h);\n    *(param_1 + 8) = uVar2;\n    fcn.00424da0(&var_24h);\n    uVar2 = fcn.00424fd0();\n    uVar2 = fcn.00425000(uVar2);\n    *(param_1 + 0x10) = uVar2;\n    fcn.00424da0(&var_2ch);\n    uVar2 = fcn.00424fe0();\n    uVar2 = fcn.00425000(uVar2);\n    *(param_1 + 0x14) = uVar2;\n    var_4h = 0xffffffff;\n    fcn.00424da0(&var_34h);\n    uVar1 = fcn.004247c0(**var_14h);\n    *(param_1 + 0xc) = uVar1;\n    fcn.00424da0(&var_3ch);\n    uVar1 = fcn.004247c0(*var_14h[1]);\n    *(param_1 + 0xd) = uVar1;\n    if (var_ch_2 != '\\0') {\n        fcn.00424da0(&var_44h);\n        uVar1 = fcn.004247c0(0x2e);\n        *(param_1 + 0xc) = uVar1;\n        fcn.00424da0(&var_4ch);\n        uVar1 = fcn.004247c0(0x2c);\n        *(param_1 + 0xd) = uVar1;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 823
    },
    "00425cda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00425cda(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00429916(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x43c3ac;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    fcn.00425c40(*(unaff_EBP + 8), arg_ch_00);\n    fcn.004299b5();\n    return;\n}\n",
        "token_count": 313
    },
    "0042ab03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0042ab03(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t *unaff_EDI;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    if (unaff_EDI == NULL) {\n        fcn.0042edec();\n        var_ch = fcn.0042eda0();\n    }\n    var_1h._0_1_ = var_ch;\n    var_8h = var_ch;\n    if (*unaff_EDI != var_ch && var_ch <= *unaff_EDI) {\n        do {\n            piVar3 = *(*(arg_8h + 0x1c) + 0xc);\n            for (iVar2 = *piVar3; piVar3 = piVar3 + 1,  0 < iVar2; iVar2 = iVar2 + -1) {\n                iVar1 = fcn.0042a8a5(unaff_EDI[1] + var_8h, *piVar3, *(arg_8h + 0x1c));\n                if (iVar1 != 0) {\n                    var_1h._0_1_ = 1;\n                    break;\n                }\n            }\n            var_ch = var_ch + 1;\n            var_8h = var_8h + 0x10;\n        } while (var_ch < *unaff_EDI);\n    }\n    return var_ch & 0xffffff00 | var_1h;\n}\n",
        "token_count": 386
    },
    "0042f9fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f9fd(uint arg_8h)\n\n{\n    fcn.0042f8bd(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "00430429": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043043d)\n// WARNING: Removing unreachable block (ram,0x00430443)\n// WARNING: Removing unreachable block (ram,0x00430445)\n\nvoid fcn.00430429(void)\n\n{\n    return;\n}\n",
        "token_count": 61
    },
    "00428b9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428b9e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042b476(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "00421e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00421e70(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x43a134;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x442530 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 4;\n    fcn.00426618(param_1);\n    var_4h._0_1_ = 3;\n    fcn.00421f50(uVar1);\n    var_4h._0_1_ = 2;\n    fcn.00421f50();\n    var_4h._0_1_ = 1;\n    fcn.00421f50();\n    var_4h = var_4h._1_3_ << 8;\n    fcn.00421f50();\n    var_4h = 0xffffffff;\n    fcn.0042639a();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 274
    },
    "0042639a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042639a(int32_t *param_1)\n\n{\n    if (*param_1 < 4) {\n        fcn.00426d4a(*param_1 * 0x18 + 0x452a60);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00422600": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00422600(uint *param_1)\n\n{\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = param_1;\n    if (0xf < param_1[5]) {\n        var_8h = *param_1;\n    }\n    return var_8h;\n}\n",
        "token_count": 78
    },
    "0042c771": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c771(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.004291a2(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00421400": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421400(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    (**(*in_ECX + 0x20))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    return arg_8h;\n}\n",
        "token_count": 110
    },
    "004393e4": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004393e4(void)\n\n{\n    *0x443620 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "004250fa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004250fa(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *apcStack20 [3];\n    char *pcStack8;\n    \n    do {\n        iVar2 = fcn.0042c25f(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0042f106(param_1);\n    } while (iVar2 != 0);\n    if ((*0x452c88 & 1) == 0) {\n        *0x452c88 = *0x452c88 | 1;\n        pcStack8 = \"bad allocation\";\n        fcn.00428fa1(&pcStack8);\n        *0x452c7c = vtable.std::bad_alloc.0;\n        fcn.0042a7a0(0x43a65f);\n    }\n    fcn.004290ae(0x452c7c);\n    apcStack20[0] = vtable.std::bad_alloc.0;\n    fcn.00428f04(apcStack20, 0x44003c);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 273
    },
    "0042ef92": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ef92(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00430480(0x440770, 0xc);\n    fcn.00430ab1(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4530a8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4530a4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0042efd6;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004291a2(arg_8h_00);\ncode_r0x0042efd6:\n        fcn.004291a2(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0042eff9();\n    fcn.004304c5();\n    return;\n}\n",
        "token_count": 397
    }
}