{
    "0100160f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100160f(char *arg_8h, int32_t arg_ch, char *arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (arg_ch == 0) {\n        uVar1 = 0x80070057;\n    }\n    else {\n        do {\n            if (*arg_10h == '\\0') break;\n            *arg_8h = *arg_10h;\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + 1;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n        if (arg_ch == 0) {\n            arg_8h = arg_8h + -1;\n            uVar1 = 0x8007007a;\n        }\n        *arg_8h = '\\0';\n    }\n    return uVar1;\n}\n",
        "token_count": 209
    },
    "01001942": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.01001942(char **arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    pcVar3 = *arg_8h;\n    iVar4 = 0;\n    while( true ) {\n        in_EAX = fcn.0100662b(arg_ch, in_EAX & 0xffff0000 | *pcVar3);\n        if (in_EAX == 0) {\n            *arg_8h = pcVar3;\n            cVar1 = *pcVar3;\n            while ((iVar2 = fcn.0100662b(arg_ch, cVar1),  iVar2 == 0 && (pcVar3[iVar4] != '\\0'))) {\n                iVar4 = iVar4 + 1;\n                cVar1 = pcVar3[iVar4];\n            }\n            pcVar3 = pcVar3 + iVar4;\n            if (*pcVar3 != '\\0') {\n                *pcVar3 = '\\0';\n                pcVar3 = pcVar3 + 1;\n            }\n            return pcVar3;\n        }\n        if (*pcVar3 == '\\0') break;\n        pcVar3 = pcVar3 + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 292
    },
    "01001a5b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.01001a5b(void)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    if (*0x100b2e0 != '\\0') {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0x20006, &hKey);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(hKey, 0x100b2e0);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0100221e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0100221e(void)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x100ba60 == 0) && (iVar1 = fcn.01001fd9(*0x100bb84, *0x100ba64),  iVar1 == 0)) {\n        return 0xffffffff;\n    }\n    return 2;\n}\n",
        "token_count": 80
    },
    "01002251": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01002251(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (((arg_8h & 2) == 0) && (iVar1 = fcn.0100221e(),  iVar1 != 2)) {\n        return;\n    }\n    if (((arg_8h & 4) == 0) && (iVar1 = fcn.01003ebe(0, 0x522, 0x1001271, 0, 0x40, 4),  iVar1 != 6)) {\n        return;\n    }\n    if (*0x100ba64 == 0) {\n        (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n    }\n    else {\n        fcn.010019c3();\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "010022ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010022ac(uchar *arg_8h, uint uSize, char *arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint *puVar6;\n    uint var_118h;\n    int32_t var_114h;\n    uchar *hKey;\n    int32_t var_10ch;\n    uint lpString1;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    var_10ch = 0;\n    *arg_8h = 0;\n    if (*arg_10h == '#') {\n        cVar2 = (*_sym.imp.USER32.dll_CharUpperA)(arg_10h[1]);\n        pcVar1 = _sym.imp.USER32.dll_CharNextA;\n        uVar3 = (*_sym.imp.USER32.dll_CharNextA)(arg_10h + 1);\n        arg_10h = (*pcVar1)(uVar3);\n        if (cVar2 == 'S') goto code_r0x010023dc;\n        if (cVar2 != 'W') {\n            var_118h = 0x104;\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, 0x10012b4);\n            fcn.010066cf(&lpString1, 0x104, arg_10h);\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000002, &lpString1, 0, 0x20019, &hKey);\n            if (iVar4 != 0) goto code_r0x010023ef;\n            puVar6 = NULL;\n            uVar3 = 0x1001271;\n            puVar5 = hKey;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x1001271, 0, &var_114h, arg_8h, &var_118h);\n            if (iVar4 == 0) {\n                if (var_114h == 2) {\n                    iVar4 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(arg_8h, &lpString1, 0x104);\n                    if (iVar4 == 0) goto code_r0x010023af;\n                    puVar6 = &lpString1;\n                    puVar5 = arg_8h;\n                    uVar3 = uSize;\n                    fcn.010021c4(arg_8h, uSize);\n                }\n                else {\ncode_r0x010023af:\n                    if (var_114h != 1) goto code_r0x010023c2;\n                }\n                var_10ch = 1;\n            }\ncode_r0x010023c2:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey, puVar5, uVar3, puVar6);\n            goto code_r0x010023e6;\n        }\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(arg_8h, uSize);\n    }\n    else {\ncode_r0x010023dc:\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(arg_8h, uSize);\ncode_r0x010023e6:\n        if (var_10ch != 0) goto code_r0x010023f9;\n    }\ncode_r0x010023ef:\n    fcn.010066cf(arg_8h, uSize, arg_10h);\ncode_r0x010023f9:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 816
    },
    "01002410": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01002410(int32_t arg_8h, uint lptstrFilename, uint arg_10h, int32_t *arg_14h)\n\n{\n    uint arg_8h_00;\n    uint arg_14h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t *piVar3;\n    ulong uVar4;\n    uint uVar5;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t lplpBuffer;\n    int32_t puLen;\n    uint lpdwHandle;\n    int32_t dwLen;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hMem;\n    \n    hMem = 0;\n    var_10h = 0;\n    var_8h = 0;\n    if (0 < *(arg_8h + 0x7c)) {\n        var_ch = 0;\n        do {\n            piVar3 = var_ch + arg_8h + 0x84 + *(arg_8h + 0x80);\n            iVar1 = fcn.010022ac(lptstrFilename, arg_10h, piVar3[0xe] + 0x84 + arg_8h);\n            if (iVar1 == 0) goto code_r0x01002558;\n            uVar5 = lptstrFilename;\n            dwLen = sub.VERSION.dll_GetFileVersionInfoSizeA();\n            if (dwLen == 0) {\n                if ((*piVar3 != 0) || (piVar3[1] != 0)) goto code_r0x01002558;\n            }\n            else {\n                hMem = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, dwLen);\n                if ((hMem == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(hMem, uVar5),  iVar1 == 0))\n                goto code_r0x01002558;\n                iVar2 = sub.VERSION.dll_GetFileVersionInfoA(lptstrFilename, lpdwHandle, dwLen, iVar1);\n                if (((iVar2 != 0) &&\n                    (iVar1 = sub.VERSION.dll_VerQueryValueA(iVar1, 0x10012e8, &lplpBuffer, &puLen),  iVar1 != 0)) &&\n                   (puLen != 0)) {\n                    uVar5 = *(lplpBuffer + 0xc);\n                    arg_8h_00 = *(lplpBuffer + 8);\n                    piVar3 = piVar3 + 4;\n                    do {\n                        uVar4 = fcn.01002196(arg_8h_00, uVar5, piVar3[-4], piVar3[-3]);\n                        arg_14h_00 = *extraout_ECX;\n                        *(&var_28h + (uVar4 >> 0x20)) = uVar4;\n                        uVar4 = fcn.01002196(arg_8h_00, uVar5, extraout_ECX[-1], arg_14h_00);\n                        iVar1 = uVar4 >> 0x20;\n                        *(&var_30h + iVar1) = uVar4;\n                        piVar3 = extraout_ECX_00 + 0x18;\n                    } while (iVar1 + 4 < 8);\n                    if (((var_28h < 0) || (0 < var_30h)) && ((var_24h < 0 || (0 < var_2ch)))) {\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(hMem);\n                        goto code_r0x01002558;\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(hMem);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + 0x3c;\n        } while (var_8h < *(arg_8h + 0x7c));\n    }\n    var_10h = 1;\ncode_r0x01002558:\n    *arg_14h = var_8h;\n    if (hMem != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n    }\n    return var_10h;\n}\n",
        "token_count": 988
    },
    "01002589": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10ch\n\nvoid __cdecl fcn.01002589(uint8_t *arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint arg_ch_00;\n    uint8_t *arg_ch_01;\n    uint var_10ch;\n    uint lpszCurrent;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    *arg_ch = 0;\n    if ((arg_8h != NULL) && (*arg_8h != 0)) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x100c4a4, &lpszCurrent, 0x104);\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n        uVar1 = *arg_8h;\n        uVar4 = uVar1;\n        arg_ch_01 = arg_ch;\n        while (uVar1 != 0) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(uVar4);\n            *arg_ch_01 = *arg_8h;\n            if (iVar5 != 0) {\n                arg_ch_01[1] = arg_8h[1];\n            }\n            if (*arg_8h == 0x23) {\n                arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n                cVar3 = (*_sym.imp.USER32.dll_CharUpperA)(*arg_8h);\n                if (cVar3 == 'D') {\n                    fcn.01006666(&lpszCurrent);\n                    iVar5 = (*pcVar2)(&lpszCurrent);\n                    pcVar6 = (*_sym.imp.USER32.dll_CharPrevA)(&lpszCurrent, &lpszCurrent + iVar5);\n                    if ((pcVar6 != NULL) && (*pcVar6 == '\\\\')) {\n                        *pcVar6 = '\\0';\n                    }\n                }\n                else {\n                    cVar3 = (*_sym.imp.USER32.dll_CharUpperA)(*arg_8h);\n                    if (cVar3 != 'E') {\n                        if (*arg_8h == 0x23) goto code_r0x0100268d;\n                        goto code_r0x01002696;\n                    }\n                }\n                arg_ch_00 = fcn.0100168d(arg_10h, arg_ch_01);\n                fcn.010021c4(arg_ch_01, arg_ch_00);\n                iVar5 = (*pcVar2)(arg_ch_01);\n                arg_ch_01 = arg_ch_01 + iVar5;\n            }\n            else {\ncode_r0x0100268d:\n                arg_ch_01 = (*_sym.imp.USER32.dll_CharNextA)(arg_ch_01);\n            }\ncode_r0x01002696:\n            arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n            uVar1 = *arg_8h;\n            uVar4 = arg_8h & 0xffffff00 | uVar1;\n        }\n        *arg_ch_01 = 0;\n    }\n    fcn.010064de(arg_ch);\n    return;\n}\n",
        "token_count": 746
    },
    "01002a96": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01002a96(char *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint hFindFile;\n    uint lpFindFileData;\n    uint var_21ch;\n    uint lpFileName;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        fcn.0100160f(&lpFileName, 0x104, arg_8h);\n        fcn.010021e6(&lpFileName, 0x104, 0x100134c);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(&lpFileName, &lpFindFileData);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcmpA;\n        if (iVar2 != -1) {\n            do {\n                fcn.0100160f(&lpFileName, 0x104, arg_8h);\n                if ((lpFindFileData & 0x10) == 0) {\n                    fcn.010021e6(&lpFileName, 0x104, &var_21ch);\n                    (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(&lpFileName, 0x80);\n                    (*_sym.imp.KERNEL32.dll_DeleteFileA)(&lpFileName);\n                }\n                else {\n                    iVar3 = (*pcVar1)(&var_21ch, 0x1001348);\n                    if ((iVar3 != 0) && (iVar3 = (*pcVar1)(&var_21ch, 0x1001344),  iVar3 != 0)) {\n                        fcn.010021e6(&lpFileName, 0x104, &var_21ch);\n                        fcn.010066cf(&lpFileName, 0x104, 0x1001271);\n                        fcn.01002a96(&lpFileName);\n                    }\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar2, &lpFindFileData);\n            } while (iVar3 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n            (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(arg_8h);\n        }\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 538
    },
    "01002c18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01002c18(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (((arg_ch == 0xb1) && (arg_10h == 0)) && (arg_14h == -2)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_CallWindowProcA)(*0x100c4a0, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "01003072": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01003072(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    fcn.01002c91(*0x100ba50);\n    if (*0x100bc38 != 0) {\n        return -1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(arg_8h * 0x18 + 0x100c4d4), arg_ch, arg_10h, &arg_10h, 0);\n    iVar2 = arg_10h;\n    if (iVar1 == 0) {\n        iVar2 = -1;\n    }\n    else if (((arg_10h != -1) && (*0x100be60 = *0x100be60 + arg_10h,  *0x100b2c4 != 0)) && (*0x100ba4c != 0)) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*0x100ba4c, 0x83a, 0x402, (*0x100be60 * 100) / *0x100be58, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 281
    },
    "01003346": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpString1\n\nvoid fcn.01003346(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uint *lpString1;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_LocalFree;\n    var_4h = *0x100b2d0;\n    puVar3 = *0x100bc40;\n    if (*0x100bc40 != NULL) {\n        do {\n            if ((*0x100c884 == 0) && (*0x100c490 == 0)) {\n                (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(*puVar3, 0x80);\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(*puVar3);\n            }\n            puVar1 = puVar3[1];\n            (*pcVar2)(*puVar3);\n            (*pcVar2)(puVar3);\n            puVar3 = puVar1;\n        } while (puVar1 != NULL);\n    }\n    if (((*0x100c880 != 0) && (*0x100c884 == 0)) && (*0x100c490 == 0)) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, 0x100bc44);\n        if ((*0x100c494 & 0x20) != 0) {\n            fcn.01006666(&lpString1);\n        }\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x1001344);\n        lpString1 = &lpString1;\n        fcn.01002a96(lpString1);\n    }\n    if ((*0x100ba64 != 1) && (*0x100c880 != 0)) {\n        fcn.01001a5b();\n    }\n    *0x100c880 = 0;\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 434
    },
    "01003517": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01003517(char *arg_8h, int32_t *arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    cVar2 = *arg_8h;\n    while ((cVar2 != '\\0' &&\n           ((((cVar2 == ' ' || (cVar2 == '\\t')) || (cVar2 == '\\r')) ||\n            (((cVar2 == '\\n' || (cVar2 == '\\v')) || (cVar2 == '\\f'))))))) {\n        iVar5 = iVar5 + 1;\n        cVar2 = arg_8h[iVar5];\n    }\n    pcVar1 = arg_8h + iVar5;\n    if (*pcVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar1);\n        do {\n            iVar4 = iVar4 + -1;\n            if (iVar4 < 0) break;\n            cVar2 = pcVar1[iVar4];\n        } while (((cVar2 == ' ') || (cVar2 == '\\t')) ||\n                ((cVar2 == '\\r' || (((cVar2 == '\\n' || (cVar2 == '\\v')) || (cVar2 == '\\f'))))));\n        arg_8h[iVar4 + iVar5 + 1] = '\\0';\n        *arg_ch = iVar5;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 361
    },
    "0100359c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10ch\n// WARNING: Variable defined which should be unmapped: lpString\n// WARNING: Variable defined which should be unmapped: var_110h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0100359c(char *arg_8h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint lpString_00;\n    bool bVar9;\n    int32_t var_110h;\n    char *var_10ch;\n    uint lpString;\n    char acStack264 [256];\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    var_10ch = 0x1;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            if (var_10ch == NULL) break;\n            for (; ((((pcVar3 = _sym.imp.USER32.dll_CharUpperA,  cVar4 = *arg_8h,  cVar4 == ' ' || (cVar4 == '\\t')) ||\n                     (cVar4 == '\\r')) || ((cVar4 == '\\n' || (cVar4 == '\\v')))) || (cVar4 == '\\f'));\n                arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h)) {\n            }\n            if (*arg_8h == '\\0') break;\n            uVar7 = 0;\n            bVar9 = false;\n            bVar2 = false;\n            do {\n                if (bVar9) {\n                    if (bVar2) break;\n                }\n                else {\n                    cVar4 = *arg_8h;\n                    if (((cVar4 == ' ') || (cVar4 == '\\t')) ||\n                       ((cVar4 == '\\r' || (((cVar4 == '\\n' || (cVar4 == '\\v')) || (cVar4 == '\\f')))))) break;\n                }\n                bVar1 = bVar2;\n                if (*arg_8h == '\\\"') {\n                    pcVar8 = arg_8h + 1;\n                    if (*pcVar8 == '\\\"') {\n                        if (0x102 < uVar7) goto code_r0x01003a8d;\n                        acStack264[uVar7 - 4] = '\\\"';\n                        uVar7 = uVar7 + 1;\n                        pcVar8 = arg_8h + 2;\n                    }\n                    else {\n                        bVar1 = true;\n                        if (!bVar9) {\n                            bVar1 = bVar2;\n                            bVar9 = true;\n                        }\n                    }\n                }\n                else {\n                    if (0x102 < uVar7) goto code_r0x01003a8d;\n                    acStack264[uVar7 - 4] = *arg_8h;\n                    uVar7 = uVar7 + 1;\n                    pcVar8 = arg_8h + 1;\n                }\n                arg_8h = pcVar8;\n                bVar2 = bVar1;\n            } while (*pcVar8 != '\\0');\n            acStack264[uVar7 - 4] = '\\0';\n            if (bVar2) {\n                var_10ch = NULL;\n                break;\n            }\n            if ((lpString != '/') && (lpString != '-')) goto code_r0x01003a8d;\n            cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(lpString._1_1_);\n            if (cVar4 == '?') {\n                fcn.010019a7();\n                if (*0x100ba54 != 0) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x100ba54);\n                }\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n                goto code_r0x01003a7c;\n            }\n            if (cVar4 == 'C') {\n                if (lpString._2_1_ == '\\0') {\n                    *0x100c884 = 1;\n                }\n                else {\n                    if (lpString._2_1_ != ':') goto code_r0x01003753;\n                    iVar5 = (lpString._3_1_ == '\\\"') + 3;\n                    pcVar8 = acStack264 + ((lpString._3_1_ == '\\\"') - 1);\n                    iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar8);\n                    if ((iVar6 != 0) &&\n                       ((var_10ch = pcVar8,  iVar6 = fcn.0100662b(pcVar8, 0x5b),  iVar6 == 0 ||\n                        (iVar6 = fcn.0100662b(pcVar8, 0x5d),  iVar6 != 0)))) {\n                        var_110h = 0x5d;\n                        iVar6 = fcn.0100662b(pcVar8, 0x5d);\n                        if (((iVar6 == 0) || (iVar6 = fcn.0100662b(pcVar8, 0x5b),  iVar6 != 0)) &&\n                           (var_110h = iVar5,  iVar6 = fcn.01003517(pcVar8, &var_110h),  iVar6 != 0)) {\n                            (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x100caa2, acStack264 + var_110h + iVar5 + -4);\n                            goto code_r0x0100375a;\n                        }\n                    }\ncode_r0x01003a33:\n                    var_10ch = NULL;\n                }\n            }\n            else if (cVar4 == 'D') {\ncode_r0x010038fb:\n                if (lpString._2_1_ != ':') goto code_r0x01003753;\n                bVar9 = lpString._3_1_ == '\\\"';\n                iVar5 = bVar9 + 3;\n                iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenA)(acStack264 + (bVar9 - 1));\n                if ((iVar6 == 0) ||\n                   (var_110h = iVar5,  iVar6 = fcn.01003517(acStack264 + (bVar9 - 1), &var_110h),  iVar6 == 0))\n                goto code_r0x01003a33;\n                cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(lpString._1_1_);\n                if (cVar4 == 'T') {\n                    lpString_00 = 0x100c99e;\n                }\n                else {\n                    lpString_00 = 0x100c89a;\n                }\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString_00, acStack264 + var_110h + iVar5 + -4);\n                var_110h = 0x1001271;\n                fcn.010066cf(lpString_00, 0x104, 0x1001271);\n                iVar5 = fcn.01002c57(lpString_00);\n                if (iVar5 == 0) goto code_r0x01003a8d;\n            }\n            else if (cVar4 == 'N') {\n                if (lpString._2_1_ == '\\0') {\n                    *0x100c88c = 1;\n                }\n                else {\n                    if (lpString._2_1_ != ':') goto code_r0x01003753;\n                    if (lpString._3_1_ != '\\0') {\n                        pcVar8 = &lpString + 3;\n                        do {\n                            cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(*pcVar8);\n                            pcVar8 = pcVar8 + 1;\n                            if (cVar4 == 'E') {\n                                *0x100c88c = 1;\n                            }\n                            else if (cVar4 == 'G') {\n                                *0x100c890 = 1;\n                            }\n                            else if (cVar4 == 'V') {\n                                *0x100c894 = 1;\n                            }\n                            else {\n                                var_10ch = NULL;\n                            }\n                        } while (*pcVar8 != '\\0');\n                    }\n                }\n            }\n            else if (cVar4 == 'Q') {\n                if (lpString._2_1_ != '\\0') {\n                    if (lpString._2_1_ != ':') goto code_r0x01003753;\n                    cVar4 = (*pcVar3)(lpString._3_1_);\n                    if (cVar4 != '1') {\n                        if (cVar4 == 'A') {\n                            *0x100c898 = 1;\n                            goto code_r0x0100375a;\n                        }\n                        if (cVar4 != 'U') goto code_r0x01003753;\n                    }\n                }\n                *0x100c898 = 2;\n            }\n            else if (cVar4 == 'R') {\n                if (lpString._2_1_ == '\\0') {\n                    *0x100c888 = 1;\n                    *0x100c48c = 3;\n                }\n                else if (lpString._2_1_ == ':') {\n                    *0x100c48c = 1;\n                    if (lpString._3_1_ != '\\0') {\n                        pcVar8 = &lpString + 3;\n                        do {\n                            cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(*pcVar8);\n                            pcVar8 = pcVar8 + 1;\n                            if (cVar4 == 'A') {\n                                *0x100c48c = *0x100c48c | 2;\n                                goto code_r0x01003809;\n                            }\n                            if (cVar4 == 'D') {\n                                *0x100cba8 = *0x100cba8 | 0x40;\n                                goto code_r0x0100380f;\n                            }\n                            if (cVar4 == 'I') {\n                                *0x100c48c = *0x100c48c & 0xfffffffd;\ncode_r0x01003809:\n                                *0x100c888 = 1;\n                            }\n                            else {\n                                if (cVar4 == 'N') {\n                                    *0x100c48c = *0x100c48c & 0xfffffffe;\n                                    goto code_r0x01003809;\n                                }\n                                if (cVar4 == 'P') {\n                                    *0x100cba8 = *0x100cba8 | 0x80;\n                                }\n                                else {\n                                    if (cVar4 == 'S') {\n                                        *0x100c48c = *0x100c48c | 4;\n                                        goto code_r0x01003809;\n                                    }\n                                    var_10ch = NULL;\n                                }\n                            }\ncode_r0x0100380f:\n                        } while (*pcVar8 != '\\0');\n                    }\n                }\n                else {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x1001374, &lpString + 1);\n                    if (iVar5 != 0) goto code_r0x01003753;\n                }\n            }\n            else {\n                if (cVar4 == 'T') goto code_r0x010038fb;\ncode_r0x01003753:\n                var_10ch = NULL;\n            }\ncode_r0x0100375a:\n        } while (*arg_8h != '\\0');\n        if ((*0x100c88c != 0) && (*0x100c99e == '\\0')) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x100c4a4, 0x100c99e, 0x104);\n            if (iVar5 == 0) {\ncode_r0x01003a7c:\n                var_10ch = NULL;\n            }\n            else {\n                iVar5 = fcn.01006752(0x100c99e, 0x5c);\n                *(iVar5 + 1) = 0;\n            }\n        }\n    }\ncode_r0x01003a8d:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 2720
    },
    "01003d57": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01003d57(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_ch == 0xf) {\n        if (*0x100ba58 == 0) {\n            *0x100b840 = (*_sym.imp.USER32.dll_SendDlgItemMessageA)(arg_8h, 0x834, 0xb1, 0xffffffff, 0);\n            *0x100ba58 = 1;\n        }\ncode_r0x01003e1d:\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch == 0x10) {\ncode_r0x01003d89:\n            uVar1 = 0;\ncode_r0x01003d8b:\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, uVar1);\n        }\n        else {\n            if (arg_ch == 0x110) {\n                uVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n                fcn.01002d83(arg_8h, uVar1);\n                (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x834, *0x100c49c);\n                (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x100bbb4);\n                (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n                uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x834, fcn.01002c18);\n                fcn.01002bec(uVar1, arg_8h);\n                return 1;\n            }\n            if (arg_ch != 0x111) goto code_r0x01003e1d;\n            if (arg_10h == 6) {\n                uVar1 = 1;\n                goto code_r0x01003d8b;\n            }\n            if (arg_10h == 7) goto code_r0x01003d89;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 474
    },
    "01003ebe": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01003ebe(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t uType, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint hWnd;\n    uint var_240h;\n    uint lpString2;\n    uint lpText;\n    uint var_4h;\n    \n    puVar6 = 0x1001380;\n    puVar7 = &lpText;\n    for (iVar5 = 0xd; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_4h = *0x100b2d0;\n    *puVar7 = *puVar6;\n    if ((*0x100c898 & 1) == 0) {\n        fcn.01002ece(arg_ch, &lpString2, 0x200);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n        if (lpString2 == '\\0') {\n            iVar5 = fcn.010068b3();\n            if ((iVar5 == 0) || (iVar5 = fcn.0100685e(*0x100c4a4, 0x10, 1),  iVar5 == 0)) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = 0x180000;\n            }\n            (*_sym.imp.USER32.dll_MessageBoxA)(arg_8h, &lpText, 0x100bbb4, uVar2 | 0x10010);\n        }\n        else {\n            if (arg_14h == 0) {\n                if (arg_10h == 0) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString2);\n                    iVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar5 + 1);\n                    if (iVar5 == 0) goto code_r0x0100408b;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar5, &lpString2);\n                }\n                else {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_10h);\n                    iVar3 = (*pcVar1)(&lpString2);\n                    iVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar5 + 100 + iVar3);\n                    if (iVar5 == 0) goto code_r0x0100408b;\n                    (*_sym.imp.USER32.dll_wsprintfA)(iVar5, &lpString2, arg_10h);\n                }\n            }\n            else {\n                iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_14h);\n                iVar3 = (*pcVar1)(arg_10h);\n                iVar4 = (*pcVar1)(&lpString2);\n                iVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar5 + iVar3 + 100 + iVar4);\n                if (iVar5 == 0) goto code_r0x0100408b;\n                (*_sym.imp.USER32.dll_wsprintfA)(iVar5, &lpString2, arg_10h, arg_14h);\n            }\n            (*_sym.imp.USER32.dll_MessageBeep)(uType);\n            iVar3 = fcn.010068b3();\n            if ((iVar3 == 0) || (iVar3 = fcn.0100685e(*0x100c4a4, 0x10, 1),  iVar3 == 0)) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = 0x180000;\n            }\n            (*_sym.imp.USER32.dll_MessageBoxA)(arg_8h, iVar5, 0x100bbb4, uVar2 | uType | arg_1ch | 0x10000);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar5);\n        }\n    }\ncode_r0x0100408b:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 987
    },
    "010042a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.010042a4(void)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t var_24h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    \n    puVar3 = &var_24h;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    arg_8h = fcn.01006aa4(fcn.01003275, fcn.0100328c, fcn.010041d8, fcn.01002fe5, fcn.01003072, fcn.01003108, \n                          fcn.01003165, 1, &var_ch);\n    if (arg_8h != 0) {\n        iVar2 = fcn.010041d8(\"*MEMCAB\", 0x8000, 0x180);\n        if ((((iVar2 == -1) || (iVar1 = fcn.01006b3b(arg_8h, iVar2, &var_24h),  iVar1 == 0)) || (var_24h != *0x100bba4))\n           || (((var_14h != 0 || (var_10h != 0)) || (iVar2 = fcn.01003108(iVar2),  iVar2 == -1)))) {\n            arg_8h = 0;\n        }\n        else {\n            iVar2 = fcn.0100735b(arg_8h);\n            arg_8h = iVar2 != 0;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 404
    },
    "0100488c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1a8h\n// WARNING: Variable defined which should be unmapped: var_1a4h\n// WARNING: Variable defined which should be unmapped: var_1a0h\n// WARNING: Variable defined which should be unmapped: lpVersionInformation\n\nvoid __cdecl fcn.0100488c(uint32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint *arg_14h;\n    bool bVar10;\n    bool bVar11;\n    uint var_1b0h;\n    uint uStack432;\n    uint32_t var_1a8h;\n    uint32_t var_1a4h;\n    int32_t var_1a0h;\n    int32_t lpVersionInformation;\n    uint32_t var_198h;\n    uint32_t var_194h;\n    uint32_t var_190h;\n    int32_t var_18ch;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    var_1a4h = arg_8h;\n    var_1a0h = 0;\n    lpVersionInformation = 0x94;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&fcn.0100488c::lpVersionInformation);\n    if (iVar4 == 0) {\n        var_1a0h = 0x4b4;\ncode_r0x010048d7:\n        fcn.01003ebe(0, var_1a0h, 0, 0, 0x10, 0);\n    }\n    else {\n        if (var_18ch == 1) {\n            *0x100ba64 = 0;\n            *0x100b2c4 = 1;\n            *0x100b2c8 = 1;\n        }\n        else {\n            if (var_18ch != 2) {\n                var_1a0h = 0x4ca;\n                goto code_r0x010048d7;\n            }\n            *0x100b2c4 = 1;\n            *0x100b2c8 = 1;\n            *0x100ba64 = 2;\n            if (var_198h < 4) {\n                *0x100ba64 = 1;\n                if ((var_198h < 3) || ((var_198h == 3 && (var_194h < 0x33)))) {\n                    *0x100b2c4 = 0;\n                    *0x100b2c8 = 0;\n                }\n            }\n            else if (4 < var_198h) {\n                *0x100ba64 = 3;\n            }\n        }\n        if ((*0x100c894 == 0) && (arg_8h != 0)) {\n            if (*0x100ba64 == 0) {\n                iVar4 = arg_8h + 0x40;\n            }\n            else {\n                iVar4 = arg_8h + 4;\n            }\n            var_1a8h = 0;\n            do {\n                piVar2 = iVar4 + var_1a8h * 0x18;\n                lpVersionInformation = piVar2[1];\n                var_1a0h = *piVar2;\n                var_1a4h = var_194h;\n                var_1a8h = var_198h;\n                uStack432 = 0x10049bf;\n                uVar5 = fcn.01002196(var_198h, var_194h, var_1a0h, lpVersionInformation);\n                uVar8 = var_1a8h;\n                (&fcn.0100488c::var_1b0h)[var_1a8h] = uVar5;\n                iVar7 = iVar4 + uVar8 * 0x18;\n                uStack432 = *(iVar7 + 0x10);\n                var_1b0h = *(iVar7 + 0xc);\n                iVar6 = fcn.01002196(var_198h, var_194h, var_1b0h, uStack432);\n                uVar8 = var_1a8h;\n                iVar7 = (&fcn.0100488c::var_1b0h)[var_1a8h];\n                *(&stack0xfffffe44 + var_1a8h * 4) = iVar6;\n                if ((iVar7 < 0) || (0 < iVar6)) {\n                    if (uVar8 == 1) goto code_r0x01004b2a;\n                }\n                else {\n                    if (iVar7 == 0) {\n                        if (iVar6 == 0) {\n                            uVar9 = var_190h & 0xffff;\n                            iVar7 = iVar4 + uVar8 * 0x18;\n                            if (*(iVar7 + 8) <= uVar9) {\n                                puVar1 = iVar7 + 0x14;\n                                bVar10 = uVar9 < *puVar1;\n                                bVar11 = uVar9 == *puVar1;\n                                goto code_r0x01004b20;\n                            }\n                        }\n                        else if (*(iVar4 + 8 + uVar8 * 0x18) <= (var_190h & 0xffff)) break;\n                    }\n                    else {\n                        if (iVar6 != 0) break;\n                        puVar1 = iVar4 + 0x14 + uVar8 * 0x18;\n                        bVar10 = (var_190h & 0xffff) < *puVar1;\n                        bVar11 = (var_190h & 0xffff) == *puVar1;\ncode_r0x01004b20:\n                        if (bVar10 || bVar11) break;\n                    }\n                    if (uVar8 != 0) {\ncode_r0x01004b2a:\n                        var_1a0h = 0x54c;\n                        goto code_r0x01004a8d;\n                    }\n                }\n                var_1a8h = uVar8 + 1;\n            } while (var_1a8h < 2);\n            if ((*(var_1a4h + 0x7c) != 0) &&\n               (iVar7 = fcn.01002410(var_1a4h, &fcn.0100488c::var_108h, 0x104, &fcn.0100488c::var_1a8h),  iVar7 == 0)) {\n                var_1a0h = 0x54d;\n                uVar8 = var_1a8h;\ncode_r0x01004a8d:\n                arg_14h = NULL;\n                if (var_1a0h == 0x54d) {\n                    iVar4 = *(var_1a4h + 0x80) + uVar8 * 0x3c + 0x84 + var_1a4h;\n                    arg_14h = &fcn.0100488c::var_108h;\n                }\n                pcVar3 = *(iVar4 + 0x34) + 0x84 + var_1a4h;\n                var_1a4h = fcn.0100216f(*(iVar4 + 0x30));\n                if (((*0x100c898 & 1) == 0) && (*pcVar3 != '\\0')) {\n                    (*_sym.imp.USER32.dll_MessageBeep)(0);\n                    iVar4 = fcn.010068b3();\n                    if ((iVar4 == 0) || (iVar4 = fcn.0100685e(*0x100c4a4, 0x10, 1),  iVar4 == 0)) {\n                        uVar8 = 0;\n                    }\n                    else {\n                        uVar8 = 0x180000;\n                    }\n                    iVar4 = (*_sym.imp.USER32.dll_MessageBoxA)(0, pcVar3, 0x100bbb4, uVar8 | var_1a4h | 0x30);\n                    if ((var_1a4h & 4) == 0) {\n                        if ((var_1a4h & 1) == 0) goto code_r0x01004baa;\n                        bVar10 = iVar4 == 1;\n                    }\n                    else {\n                        bVar10 = iVar4 == 6;\n                    }\n                    if (bVar10) {\n                        var_1a0h = 0;\n                    }\n                }\n                else {\n                    fcn.01003ebe(0, var_1a0h, 0x100bbb4, arg_14h, 0x30, 0);\n                }\n            }\n        }\n    }\ncode_r0x01004baa:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 2021
    },
    "01004faf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01004faf(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0100672a(arg_8h);\n    if (iVar1 != 0) {\n        if ((*0x100bc3c == 0) && ((*0x100c898 & 1) == 0)) {\n            *0x100be64 = arg_8h;\n            iVar1 = fcn.01004819(*0x100c4a4, 0x7d3, *0x100ba4c, fcn.01003e28, 0, 6);\n            if (iVar1 != 6) {\n                if (iVar1 == 7) {\n                    return 0;\n                }\n                if (iVar1 == 0x839) {\n                    *0x100bc3c = 1;\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, 0x80);\n    }\n    return 1;\n}\n",
        "token_count": 230
    },
    "0100502e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_108h\n\nvoid __cdecl fcn.0100502e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *var_108h;\n    uint var_4h;\n    \n    if (*0x100bc38 == 0) {\n        if (arg_8h == 0) {\n            fcn.010032a1(arg_ch);\n        }\n        else if (arg_8h != 1) {\n            if (arg_8h == 2) {\n                if (*0x100ba4c != 0) {\n                    (*_sym.imp.USER32.dll_SetDlgItemTextA)(*0x100ba4c, 0x837, *(arg_ch + 4));\n                }\n                var_108h = &var_108h;\n                iVar1 = fcn.01002efd(var_108h, 0x104, 0x100bc44, *(arg_ch + 4));\n                if ((((iVar1 != 0) && (iVar1 = fcn.01004faf(&var_108h),  iVar1 != 0)) &&\n                    (iVar1 = fcn.010041d8(&var_108h, 0x8302, 0x180),  iVar1 != -1)) &&\n                   (iVar1 = fcn.0100409f(&var_108h),  iVar1 != 0)) {\n                    *0x100be54 = *0x100be54 + 1;\n                }\n            }\n            else if (((arg_8h == 3) && (iVar1 = fcn.01002efd(&var_108h, 0x104, 0x100bc44, *(arg_ch + 4)),  iVar1 != 0))\n                    && (iVar1 = fcn.010031ee(*(arg_ch + 0x14), *(arg_ch + 0x18), *(arg_ch + 0x1a)),  iVar1 != 0)) {\n                fcn.01003108(*(arg_ch + 0x14));\n                uVar2 = fcn.01003255(*(arg_ch + 0x1c));\n                (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(&var_108h, uVar2);\n            }\n        }\n    }\n    else if (arg_8h == 3) {\n        fcn.01003108(*(arg_ch + 0x14));\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 560
    },
    "0100637a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100637a(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    \n    *0x100ba5c = 0;\n    iVar1 = fcn.010053fa(arg_8h, arg_10h);\n    if (iVar1 != 0) {\n        iVar1 = fcn.01006205();\n        fcn.01003346();\n        if (((iVar1 != 0) && (*0x100c89a == '\\0')) && ((*0x100c48c & 1) != 0)) {\n            fcn.01002251(*0x100c48c);\n        }\n    }\n    if (*0x100ba54 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x100ba54, arg_8h, arg_10h, arg_14h);\n    }\n    return *0x100ba5c;\n}\n",
        "token_count": 221
    },
    "0100662b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0100662b(uint16_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        if (*arg_8h == '\\0') {\n            return NULL;\n        }\n        iVar1 = fcn.010065f6(*arg_8h, arg_ch);\n        if (iVar1 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 123
    },
    "01006752": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.01006752(uint16_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    \n    puVar2 = NULL;\n    for (; *arg_8h != '\\0'; arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h)) {\n        iVar1 = fcn.010065f6(*arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            puVar2 = arg_8h;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 136
    },
    "0100766b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100766b(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    \n    arg_8h[0x24] = arg_ch;\n    iVar1 = (*arg_8h[7])(arg_8h[0x21], arg_8h[0x29] * arg_ch + arg_8h[0xb], 0);\n    if (((iVar1 == -1) || (iVar1 = (*arg_8h[4])(arg_8h[0x21], arg_8h[0x11], arg_8h[0x29]),  arg_8h[0x29] != iVar1)) ||\n       (iVar1 = (*arg_8h[7])(arg_8h[0x21], *arg_8h[0x11], 0),  iVar1 == -1)) {\n        arg_ch_00 = 4;\n    }\n    else {\n        *(arg_8h + 0x2c) = *(arg_8h[0x11] + 4);\n        iVar1 = fcn.01007309(*(arg_8h[0x11] + 6), arg_8h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if (arg_8h[10] == 0) {\n            return 1;\n        }\n        arg_8h[0x1f9] = 1;\n        arg_8h[0x1fa] = arg_8h[0xe];\n        *(arg_8h + 0x1fc) = *(arg_8h + 0x29) + -8;\n        if (*(arg_8h + 0x29) + -8 == 0) {\n            arg_8h[0x1fb] = 0;\n        }\n        else {\n            arg_8h[0x1fb] = arg_8h[0x11] + 8;\n        }\n        *(arg_8h + 0x7f2) = arg_ch;\n        iVar1 = (*arg_8h[10])(arg_8h + 0x1f9);\n        if (iVar1 != -1) {\n            return 1;\n        }\n        arg_ch_00 = 0xb;\n    }\n    fcn.01007cde(*arg_8h, arg_ch_00, 0);\n    return 0;\n}\n",
        "token_count": 548
    },
    "01007763": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01007763(int32_t **arg_8h)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint32_t unaff_EBX;\n    uint arg_ch;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0x1c);\n    arg_8h[0x1f0] = arg_8h + 0x3b7;\n    arg_8h[0x1f1] = arg_8h + 0x12e;\n    uVar4 = *(arg_8h + 0x72) + 1;\n    arg_8h[0x1f2] = arg_8h + 0x5b9;\n    arg_8h[0x1f8] = NULL;\n    arg_8h[499] = arg_8h[0xe];\n    *(arg_8h + 0x7da) = uVar1;\n    *(arg_8h + 0x1f7) = uVar4;\n    while( true ) {\n        bVar2 = false;\n        if (((arg_8h[0x21] != 0xffffffff) && (iVar3 = (*arg_8h[6])(arg_8h[0x21]),  iVar3 != 0)) ||\n           ((arg_8h[0x22] != 0xffffffff && (iVar3 = (*arg_8h[6])(arg_8h[0x22]),  iVar3 != 0)))) break;\n        arg_8h[0x22] = 0xffffffff;\n        arg_8h[0x21] = 0xffffffff;\n        iVar3 = (*arg_8h[9])(4, arg_8h + 0x1ef);\n        if (iVar3 == -1) {\n            arg_ch = 0xb;\n            goto code_r0x01007845;\n        }\n        iVar3 = fcn.010073c0(arg_8h, arg_8h + 0x3b7, uVar1, unaff_EBX & 0xffff0000 | uVar4);\n        if ((iVar3 == 0) || (iVar3 = fcn.0100766b(arg_8h, 0),  iVar3 == 0)) {\n            if (**arg_8h == 0xb) {\n                return 0;\n            }\n            bVar2 = true;\n        }\n        arg_8h[0x1f8] = **arg_8h;\n        if (!bVar2) {\n            *(arg_8h + 0xae) = *(arg_8h + 0xae) + 1;\n            do {\n                if (*(arg_8h + 0xae) == 0) {\n                    arg_8h[0x27] = 0x1;\n                    return 1;\n                }\n                *(arg_8h + 0x2b) = *(arg_8h + 0x2b) + -1;\n                *(arg_8h + 0xae) = *(arg_8h + 0xae) + -1;\n                iVar3 = fcn.010072b7(arg_8h);\n            } while (iVar3 != 0);\n            return 0;\n        }\n    }\n    arg_ch = 4;\ncode_r0x01007845:\n    fcn.01007cde(*arg_8h, arg_ch, 0);\n    return 0;\n}\n",
        "token_count": 783
    },
    "0100788d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100788d(uint *arg_8h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = arg_8h;\n    arg_8h[0xc] = arg_8h[0xc] + *(arg_8h[0x12] + 6);\n    if ((*(arg_8h + 0x2c) != 0) || (iVar1 = fcn.01007763(arg_8h),  iVar1 != 0)) {\n        *(arg_8h_00 + 0x2c) = *(arg_8h_00 + 0x2c) + -1;\n        iVar1 = fcn.01006c78(arg_8h_00, 0);\n        if (iVar1 != 0) {\n            if (*(arg_8h_00[0x12] + 6) == 0) {\n                iVar1 = fcn.01007763(arg_8h_00);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                iVar1 = fcn.01006c78(arg_8h_00, *(arg_8h_00[0x12] + 4));\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                *(arg_8h_00 + 0x2c) = *(arg_8h_00 + 0x2c) + -1;\n            }\n            arg_8h = *(arg_8h_00[0x12] + 6);\n            iVar1 = fcn.010071a5(arg_8h_00, &arg_8h);\n            if (iVar1 != 0) {\n                if (arg_8h == *(arg_8h_00[0x12] + 6)) {\n                    return 1;\n                }\n                fcn.01007cde(*arg_8h_00, 7, 0);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 457
    },
    "01007935": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01007935(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_8h + 0x9c) == 0) {\n        if ((arg_ch & 0xfffe) == 0xfffe) {\n            arg_ch = *(arg_8h + 0x6a) - 1;\n        }\n        if (*(arg_8h + 0x90) != arg_ch) {\n            iVar1 = fcn.0100713a(arg_8h);\n            if (((iVar1 == 0) || (iVar1 = fcn.0100766b(arg_8h, arg_ch),  iVar1 == 0)) ||\n               (iVar1 = fcn.0100788d(arg_8h),  iVar1 == 0)) {\n                return 0;\n            }\n            *(arg_8h + 0x30) = 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 221
    },
    "0100799f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100799f(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint arg_ch;\n    \n    arg_8h_00 = arg_8h;\n    uVar5 = arg_8h[0x1d];\n    if (uVar5 == 0) {\ncode_r0x01007a5c:\n        puVar1 = arg_8h_00 + 0x1ef;\n        arg_8h_00[0x1f0] = arg_8h_00 + 0x2d;\n        arg_8h_00[500] = arg_8h_00[0x23];\n        *(arg_8h_00 + 0x1f5) = *(arg_8h_00 + 0x7e);\n        *(arg_8h_00 + 0x7d6) = *(arg_8h_00 + 0x20);\n        *(arg_8h_00 + 0x1f6) = *(arg_8h_00 + 0x82);\n        arg_8h_00[499] = arg_8h_00[0xe];\n        *puVar1 = 0;\n        *(arg_8h_00 + 0x7de) = *(arg_8h_00 + 0x1f);\n        if ((*(arg_8h_00 + 0x1f6) & 0x40) != 0) {\n            *puVar1 = 1;\n            *(arg_8h_00 + 0x1f6) = *(arg_8h_00 + 0x1f6) & 0xffbf;\n        }\n        iVar2 = (*arg_8h_00[9])(3, puVar1);\n        arg_8h_00[0x23] = 0xffffffff;\n        if (iVar2 == -1) {\n            iVar2 = 0;\n            arg_ch = 0xb;\n        }\n        else {\n            if (iVar2 != 0) {\n                return 1;\n            }\n            arg_ch = 8;\n        }\n        fcn.01007cde(*arg_8h_00, arg_ch, iVar2);\n        return 0;\n    }\n    uVar4 = arg_8h[0x1e];\n    if (uVar4 < arg_8h[0xc]) {\n        arg_8h[0x24] = 0xffff;\n    }\n    iVar2 = fcn.01007935(arg_8h, *(arg_8h + 0x1f));\n    while (iVar2 != 0) {\n        if (uVar4 < *(arg_8h[0x12] + 6) + arg_8h[0xc]) {\n            arg_8h = uVar5;\n            if (uVar5 == 0) goto code_r0x01007a5c;\n            goto code_r0x010079f5;\n        }\n        iVar2 = fcn.0100788d(arg_8h);\n    }\n    goto code_r0x01007a40;\n    while( true ) {\n        uVar4 = uVar4 + uVar5;\n        arg_8h = arg_8h - uVar5;\n        if (arg_8h == NULL) goto code_r0x01007a5c;\n        iVar2 = fcn.0100788d(arg_8h_00);\n        if (iVar2 == 0) break;\ncode_r0x010079f5:\n        uVar5 = *(arg_8h_00[0x12] + 6) - (uVar4 - arg_8h_00[0xc]);\n        if (arg_8h < uVar5) {\n            uVar5 = arg_8h;\n        }\n        uVar3 = (*arg_8h_00[5])(arg_8h_00[0x23], arg_8h_00[0x10] + (uVar4 - arg_8h_00[0xc]), uVar5);\n        if (uVar5 != uVar3) {\n            fcn.01007cde(*arg_8h_00, 8, 0);\n            break;\n        }\n    }\ncode_r0x01007a40:\n    iVar2 = arg_8h_00[0x23];\n    if (iVar2 != -1) {\n        (*arg_8h_00[6])(iVar2);\n        arg_8h_00[0x23] = -1;\n    }\n    return 0;\n}\n",
        "token_count": 1055
    },
    "010086b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.010086b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t *in_EDX;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_14h;\n    uint var_10h;\n    uint16_t *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = in_EDX[0xbac];\n    var_1h._0_1_ = *(in_EDX + 0xbad);\n    var_ch = in_EDX[0xac1];\n    puVar2 = in_EDX[0xac2];\n    arg_ch = arg_ch + arg_8h;\n    cVar5 = var_1h;\n    if (arg_8h < arg_ch) {\n        do {\n            if (var_8h >> 0x16 < 0x400) {\n                iVar6 = *(in_EDX + (var_8h >> 0x16) * 2 + 0x18);\n            }\n            else {\n                in_EDX[0xbaf] = 1;\n                iVar6 = 0;\n            }\n            if (iVar6 < 0) {\n                uVar4 = 0x200000;\n                do {\n                    if ((var_8h & uVar4) == 0) {\n                        if (0xa7f < iVar6 * -2) goto code_r0x0100874f;\n                        iVar6 = *(in_EDX + (0x38f - iVar6));\n                    }\n                    else if (iVar6 * -2 + 1U < 0xa80) {\n                        iVar6 = *(in_EDX + iVar6 * -4 + 0xe3e);\n                    }\n                    else {\ncode_r0x0100874f:\n                        iVar6 = 0;\n                        in_EDX[0xbaf] = 1;\n                    }\n                    uVar4 = uVar4 >> 1;\n                } while (iVar6 < 0);\n            }\n            if (in_EDX[0xbaf] == 0) {\n                if (puVar2 <= var_ch) {\n                    return -1;\n                }\n                uVar1 = *(iVar6 + 0xa18 + in_EDX);\n                var_8h = var_8h << (uVar1 & 0x1f);\n                var_1h._0_1_ = cVar5 - uVar1;\n                cVar5 = var_1h;\n                if (var_1h < '\\x01') {\n                    var_8h = var_8h | *var_ch << (-var_1h & 0x1fU);\n                    var_1h._0_1_ = var_1h + '\\x10';\n                    var_ch = var_ch + 1;\n                    cVar5 = var_1h;\n                }\n            }\n            uVar4 = iVar6 - 0x100;\n            if (uVar4 < 0) {\n                *(arg_8h + *in_EDX) = uVar4;\n                *(in_EDX[1] + *in_EDX + arg_8h) = uVar4;\n                arg_8h = arg_8h + 1;\n            }\n            else {\n                uVar7 = uVar4 & 7;\n                if (uVar7 == 7) {\n                    if (var_8h >> 0x18 < 0x100) {\n                        iVar6 = *(in_EDX + (var_8h >> 0x18) * 2 + 0x818);\n                    }\n                    else {\n                        in_EDX[0xbaf] = 1;\n                        iVar6 = 0;\n                    }\n                    if (iVar6 < 0) {\n                        uVar7 = 0x800000;\n                        do {\n                            if ((var_8h & uVar7) == 0) {\n                                if (0x3e3 < iVar6 * -2) goto code_r0x01008839;\n                                iVar6 = *(in_EDX + (0x8cf - iVar6));\n                            }\n                            else if (iVar6 * -2 + 1U < 0x3e4) {\n                                iVar6 = *(in_EDX + iVar6 * -4 + 0x233e);\n                            }\n                            else {\ncode_r0x01008839:\n                                iVar6 = 0;\n                                in_EDX[0xbaf] = 1;\n                            }\n                            uVar7 = uVar7 >> 1;\n                        } while (iVar6 < 0);\n                    }\n                    if (in_EDX[0xbaf] == 0) {\n                        if (puVar2 <= var_ch) {\n                            return -1;\n                        }\n                        uVar1 = *(iVar6 + 0xcb8 + in_EDX);\n                        var_8h = var_8h << (uVar1 & 0x1f);\n                        var_1h._0_1_ = cVar5 - uVar1;\n                        if (var_1h < '\\x01') {\n                            var_8h = var_8h | *var_ch << (-var_1h & 0x1fU);\n                            var_1h._0_1_ = var_1h + '\\x10';\n                            var_ch = var_ch + 1;\n                        }\n                    }\n                    uVar7 = iVar6 + 7;\n                    if (in_EDX[0xbaf] != 0) {\n                        return -1;\n                    }\n                }\n                cVar5 = uVar4 >> 3;\n                if (cVar5 < '\\x03') {\n                    iVar6 = in_EDX[cVar5 + 3];\n                    if (cVar5 != '\\0') {\n                        in_EDX[cVar5 + 3] = in_EDX[3];\n                        goto code_r0x01008954;\n                    }\n                }\n                else {\n                    if (cVar5 < '\\x04') {\n                        iVar6 = 1;\n                    }\n                    else {\n                        iVar6 = cVar5;\n                        uVar4 = var_8h >> (0x20 - *(iVar6 + 0x10014e0) & 0x1f);\n                        cVar5 = var_1h - *(iVar6 + 0x10014e0);\n                        var_8h = var_8h << (*(iVar6 + 0x10014e0) & 0x1f);\n                        puVar3 = var_ch;\n                        var_1h._0_1_ = cVar5;\n                        if (cVar5 < '\\x01') {\n                            var_1h._0_1_ = cVar5 + '\\x10';\n                            var_8h = var_8h | *var_ch << (-cVar5 & 0x1fU);\n                            puVar3 = var_ch + 1;\n                            if (var_1h < '\\x01') {\n                                var_8h = var_8h | var_ch[1] << (-var_1h & 0x1fU);\n                                var_1h._0_1_ = cVar5 + ' ';\n                                puVar3 = var_ch + 2;\n                            }\n                        }\n                        var_ch = puVar3;\n                        iVar6 = uVar4 + *(iVar6 * 4 + 0x1001518);\n                    }\n                    in_EDX[5] = in_EDX[4];\n                    in_EDX[4] = in_EDX[3];\ncode_r0x01008954:\n                    in_EDX[3] = iVar6;\n                }\n                iVar8 = uVar7 + 2;\n                uVar4 = arg_8h - iVar6;\n                do {\n                    *(*in_EDX + arg_8h) = *((uVar4 & in_EDX[2]) + *in_EDX);\n                    if (arg_8h < 0x101) {\n                        *(in_EDX[1] + *in_EDX + arg_8h) = *(*in_EDX + arg_8h);\n                    }\n                    arg_8h = arg_8h + 1;\n                    uVar4 = uVar4 + 1;\n                    iVar8 = iVar8 + -1;\n                    cVar5 = var_1h;\n                } while (0 < iVar8);\n            }\n        } while (arg_8h < arg_ch);\n    }\n    *(in_EDX + 0xbad) = cVar5;\n    in_EDX[0xbac] = var_8h;\n    in_EDX[0xac1] = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 1958
    },
    "010089c7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.010089c7(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint16_t *puVar2;\n    char cVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint var_14h;\n    uint var_10h;\n    uint16_t *var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h._3_1_ = *(arg_8h + 0xbad);\n    var_4h = arg_8h[0xbac];\n    puVar4 = arg_8h[0xac1];\n    puVar2 = arg_8h[0xac2];\n    iVar5 = arg_10h + arg_ch;\n    var_ch = puVar4;\n    if (arg_ch < iVar5) {\n        do {\n            if (var_4h >> 0x16 < 0x400) {\n                iVar7 = *(arg_8h + (var_4h >> 0x16) * 2 + 0x18);\n            }\n            else {\n                arg_8h[0xbaf] = 1;\n                iVar7 = 0;\n            }\n            if (iVar7 < 0) {\n                arg_10h = 0x200000;\n                do {\n                    if ((arg_10h & var_4h) == 0) {\n                        if (0xa7f < iVar7 * -2) goto code_r0x01008a6d;\n                        iVar7 = *(arg_8h + (0x38f - iVar7));\n                    }\n                    else if (iVar7 * -2 + 1U < 0xa80) {\n                        iVar7 = *(arg_8h + iVar7 * -4 + 0xe3e);\n                    }\n                    else {\ncode_r0x01008a6d:\n                        iVar7 = 0;\n                        arg_8h[0xbaf] = 1;\n                    }\n                    arg_10h = arg_10h >> 1;\n                } while (iVar7 < 0);\n            }\n            if ((arg_8h[0xbaf] != 0) || (puVar2 <= puVar4)) {\n                return -1;\n            }\n            uVar1 = *(iVar7 + 0xa18 + arg_8h);\n            var_4h = var_4h << (uVar1 & 0x1f);\n            arg_8h._3_1_ = arg_8h._3_1_ - uVar1;\n            if (arg_8h._3_1_ < '\\x01') {\n                var_4h = var_4h | *puVar4 << (-arg_8h._3_1_ & 0x1fU);\n                puVar4 = puVar4 + 1;\n                arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                var_ch = puVar4;\n            }\n            uVar6 = iVar7 - 0x100;\n            if (uVar6 < 0) {\n                var_8h._0_1_ = uVar6;\n                *(arg_ch + *arg_8h) = var_8h;\n                arg_ch = arg_ch + 1;\n            }\n            else {\n                uVar8 = uVar6 & 7;\n                if (uVar8 == 7) {\n                    if (var_4h >> 0x18 < 0x100) {\n                        iVar7 = *(arg_8h + (var_4h >> 0x18) * 2 + 0x818);\n                    }\n                    else {\n                        arg_8h[0xbaf] = 1;\n                        iVar7 = 0;\n                    }\n                    if (iVar7 < 0) {\n                        uVar8 = 0x800000;\n                        do {\n                            if ((var_4h & uVar8) == 0) {\n                                if (0x3e3 < iVar7 * -2) goto code_r0x01008b5d;\n                                iVar7 = *(arg_8h + (0x8cf - iVar7));\n                            }\n                            else if (iVar7 * -2 + 1U < 0x3e4) {\n                                iVar7 = *(arg_8h + iVar7 * -4 + 0x233e);\n                            }\n                            else {\ncode_r0x01008b5d:\n                                iVar7 = 0;\n                                arg_8h[0xbaf] = 1;\n                            }\n                            uVar8 = uVar8 >> 1;\n                        } while (iVar7 < 0);\n                    }\n                    if (arg_8h[0xbaf] == 0) {\n                        if (puVar2 <= puVar4) {\n                            return -1;\n                        }\n                        uVar1 = *(iVar7 + 0xcb8 + arg_8h);\n                        var_4h = var_4h << (uVar1 & 0x1f);\n                        arg_8h._3_1_ = arg_8h._3_1_ - uVar1;\n                        if (arg_8h._3_1_ < '\\x01') {\n                            var_4h = var_4h | *puVar4 << (-arg_8h._3_1_ & 0x1fU);\n                            puVar4 = puVar4 + 1;\n                            arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                            var_ch = puVar4;\n                        }\n                    }\n                    uVar8 = iVar7 + 7;\n                    if (arg_8h[0xbaf] != 0) {\n                        return -1;\n                    }\n                }\n                cVar3 = uVar6 >> 3;\n                if (cVar3 < '\\x03') {\n                    iVar7 = arg_8h[cVar3 + 3];\n                    if (cVar3 != '\\0') {\n                        arg_8h[cVar3 + 3] = arg_8h[3];\n                        goto code_r0x01008c77;\n                    }\n                }\n                else {\n                    iVar7 = *0x1001524;\n                    if ('\\x03' < cVar3) {\n                        iVar7 = cVar3;\n                        uVar6 = var_4h >> (0x20 - *(iVar7 + 0x10014e0) & 0x1f);\n                        cVar3 = arg_8h._3_1_ - *(iVar7 + 0x10014e0);\n                        var_4h = var_4h << (*(iVar7 + 0x10014e0) & 0x1f);\n                        arg_8h._3_1_ = cVar3;\n                        if (cVar3 < '\\x01') {\n                            arg_8h._3_1_ = cVar3 + '\\x10';\n                            var_4h = var_4h | *puVar4 << (-cVar3 & 0x1fU);\n                            var_ch = puVar4 + 1;\n                            if (arg_8h._3_1_ < '\\x01') {\n                                var_4h = var_4h | *var_ch << (-arg_8h._3_1_ & 0x1fU);\n                                var_ch = puVar4 + 2;\n                                arg_8h._3_1_ = cVar3 + ' ';\n                            }\n                        }\n                        iVar7 = uVar6 + *(iVar7 * 4 + 0x1001518);\n                    }\n                    arg_8h[5] = arg_8h[4];\n                    arg_8h[4] = arg_8h[3];\ncode_r0x01008c77:\n                    arg_8h[3] = iVar7;\n                }\n                iVar9 = uVar8 + 2;\n                uVar6 = arg_ch - iVar7 & arg_8h[2];\n                do {\n                    *(*arg_8h + arg_ch) = *(*arg_8h + uVar6);\n                    arg_ch = arg_ch + 1;\n                    uVar6 = uVar6 + 1;\n                    iVar9 = iVar9 + -1;\n                    puVar4 = var_ch;\n                } while (0 < iVar9);\n            }\n        } while (arg_ch < iVar5);\n    }\n    *(arg_8h + 0xbad) = arg_8h._3_1_;\n    arg_8h[0xbac] = var_4h;\n    arg_8h[0xac1] = puVar4;\n    arg_8h[0xbb0] = arg_8h[2] & arg_ch;\n    return arg_ch - iVar5;\n}\n",
        "token_count": 1986
    },
    "01008cde": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01008cde(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    uVar2 = CONCAT44(arg_8h, arg_ch);\n    if (arg_ch < 0x101) {\n        iVar1 = 0x101 - arg_ch;\n        if (arg_10h <= 0x101 - arg_ch) {\n            iVar1 = arg_10h;\n        }\n        uVar2 = fcn.010086b0(arg_ch, iVar1);\n        arg_10h = arg_10h + (arg_ch - uVar2);\n        *((uVar2 >> 0x20) + 0x2ec0) = uVar2;\n        if (arg_10h < 1) {\n            return arg_10h;\n        }\n    }\n    iVar1 = fcn.010089c7(uVar2 >> 0x20, uVar2, arg_10h);\n    return iVar1;\n}\n",
        "token_count": 234
    },
    "01008d30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.01008d30(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *in_EDX;\n    char cVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = *(in_EDX + 0xbad);\n    puVar3 = in_EDX[0xac2];\n    iVar4 = *in_EDX;\n    var_8h = in_EDX[0xbac];\n    iVar5 = arg_ch + arg_8h;\n    puVar12 = in_EDX[0xac1];\n    if (arg_8h < iVar5) {\n        do {\n            if (var_8h >> 0x16 < 0x400) {\n                iVar10 = *(in_EDX + (var_8h >> 0x16) * 2 + 0x18);\n            }\n            else {\n                in_EDX[0xbaf] = 1;\n                iVar10 = 0;\n            }\n            if (iVar10 < 0) {\n                arg_ch = 0x200000;\n                do {\n                    if ((arg_ch & var_8h) == 0) {\n                        if (0xa7f < iVar10 * -2) goto code_r0x01008dcf;\n                        iVar10 = *(in_EDX + (0x38f - iVar10));\n                    }\n                    else if (iVar10 * -2 + 1U < 0xa80) {\n                        iVar10 = *(in_EDX + iVar10 * -4 + 0xe3e);\n                    }\n                    else {\ncode_r0x01008dcf:\n                        iVar10 = 0;\n                        in_EDX[0xbaf] = 1;\n                    }\n                    arg_ch = arg_ch >> 1;\n                } while (iVar10 < 0);\n            }\n            if (in_EDX[0xbaf] != 0) {\n                return -1;\n            }\n            if (puVar3 <= puVar12) {\n                return -1;\n            }\n            var_8h = var_8h << (*(iVar10 + 0xa18 + in_EDX) & 0x1f);\n            var_1h._0_1_ = var_1h - *(iVar10 + 0xa18 + in_EDX);\n            if (var_1h < '\\x01') {\n                var_8h = var_8h | *puVar12 << (-var_1h & 0x1fU);\n                puVar12 = puVar12 + 1;\n                var_1h._0_1_ = var_1h + '\\x10';\n            }\n            uVar11 = iVar10 - 0x100;\n            if (uVar11 < 0) {\n                *(iVar4 + arg_8h) = uVar11;\n                *(in_EDX[1] + iVar4 + arg_8h) = uVar11;\n                iVar8 = arg_8h + 1;\n            }\n            else {\n                uVar6 = uVar11 & 7;\n                if (uVar6 == 7) {\n                    if (var_8h >> 0x18 < 0x100) {\n                        iVar10 = *(in_EDX + (var_8h >> 0x18) * 2 + 0x818);\n                    }\n                    else {\n                        in_EDX[0xbaf] = 1;\n                        iVar10 = 0;\n                    }\n                    if (iVar10 < 0) {\n                        uVar6 = 0x800000;\n                        do {\n                            if ((var_8h & uVar6) == 0) {\n                                if (0x3e3 < iVar10 * -2) goto code_r0x01008ebb;\n                                iVar10 = *(in_EDX + (0x8cf - iVar10));\n                            }\n                            else if (iVar10 * -2 + 1U < 0x3e4) {\n                                iVar10 = *(in_EDX + iVar10 * -4 + 0x233e);\n                            }\n                            else {\ncode_r0x01008ebb:\n                                iVar10 = 0;\n                                in_EDX[0xbaf] = 1;\n                            }\n                            uVar6 = uVar6 >> 1;\n                        } while (iVar10 < 0);\n                    }\n                    if (in_EDX[0xbaf] == 0) {\n                        if (puVar3 <= puVar12) {\n                            return -1;\n                        }\n                        var_8h = var_8h << (*(iVar10 + 0xcb8 + in_EDX) & 0x1f);\n                        var_1h._0_1_ = var_1h - *(iVar10 + 0xcb8 + in_EDX);\n                        if (var_1h < '\\x01') {\n                            var_8h = var_8h | *puVar12 << (-var_1h & 0x1fU);\n                            puVar12 = puVar12 + 1;\n                            var_1h._0_1_ = var_1h + '\\x10';\n                        }\n                    }\n                    uVar6 = iVar10 + 7;\n                    if (in_EDX[0xbaf] != 0) {\n                        return -1;\n                    }\n                }\n                cVar9 = uVar11 >> 3;\n                if (cVar9 < '\\x03') {\n                    iVar10 = in_EDX[cVar9 + 3];\n                    if (cVar9 != '\\0') {\n                        in_EDX[cVar9 + 3] = in_EDX[3];\n                        goto code_r0x0100907d;\n                    }\n                }\n                else {\n                    iVar8 = cVar9;\n                    uVar1 = *(iVar8 + 0x10014e0);\n                    if (uVar1 < 3) {\n                        if (uVar1 == 0) {\n                            iVar10 = 1;\n                        }\n                        else {\n                            uVar11 = var_8h >> (0x20 - uVar1 & 0x1f);\n                            if (puVar3 <= puVar12) {\n                                return -1;\n                            }\n                            var_8h = var_8h << (*(iVar8 + 0x10014e0) & 0x1f);\n                            var_1h._0_1_ = var_1h - *(iVar8 + 0x10014e0);\n                            if (var_1h < '\\x01') {\n                                var_8h = var_8h | *puVar12 << (-var_1h & 0x1fU);\n                                puVar12 = puVar12 + 1;\n                                var_1h._0_1_ = var_1h + '\\x10';\n                            }\n                            iVar10 = uVar11 + *(iVar8 * 4 + 0x1001518);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 3) {\n                            uVar11 = 0;\n                        }\n                        else {\n                            uVar11 = var_8h >> (0x23 - uVar1 & 0x1f);\n                            if (puVar3 <= puVar12) {\n                                return -1;\n                            }\n                            var_1h._0_1_ = var_1h + ('\\x03' - *(iVar8 + 0x10014e0));\n                            var_8h = var_8h << (*(iVar8 + 0x10014e0) - 3U & 0x1f);\n                            if (var_1h < '\\x01') {\n                                var_8h = var_8h | *puVar12 << (-var_1h & 0x1fU);\n                                puVar12 = puVar12 + 1;\n                                var_1h._0_1_ = var_1h + '\\x10';\n                            }\n                        }\n                        iVar10 = *((var_8h >> 0x19) + 0xdb4 + in_EDX);\n                        if (puVar3 <= puVar12) {\n                            return -1;\n                        }\n                        var_8h = var_8h << (*(iVar10 + 0xe34 + in_EDX) & 0x1f);\n                        var_1h._0_1_ = var_1h - *(iVar10 + 0xe34 + in_EDX);\n                        if (var_1h < '\\x01') {\n                            var_8h = var_8h | *puVar12 << (-var_1h & 0x1fU);\n                            puVar12 = puVar12 + 1;\n                            var_1h._0_1_ = var_1h + '\\x10';\n                        }\n                        iVar10 = *(iVar8 * 4 + 0x1001518) + uVar11 * 8 + iVar10;\n                    }\n                    in_EDX[5] = in_EDX[4];\n                    in_EDX[4] = in_EDX[3];\ncode_r0x0100907d:\n                    in_EDX[3] = iVar10;\n                }\n                iVar7 = uVar6 + 2;\n                iVar8 = arg_8h;\n                arg_8h = arg_8h - iVar10;\n                do {\n                    uVar2 = *((arg_8h & in_EDX[2]) + iVar4);\n                    *(iVar4 + iVar8) = uVar2;\n                    if (iVar8 < 0x101) {\n                        *(in_EDX[1] + iVar4 + iVar8) = uVar2;\n                    }\n                    iVar8 = iVar8 + 1;\n                    arg_8h = arg_8h + 1;\n                    iVar7 = iVar7 + -1;\n                } while (0 < iVar7);\n            }\n            arg_8h = iVar8;\n        } while (iVar8 < iVar5);\n    }\n    *(in_EDX + 0xbad) = var_1h;\n    in_EDX[0xbac] = var_8h;\n    in_EDX[0xac1] = puVar12;\n    return arg_8h;\n}\n",
        "token_count": 2349
    },
    "010090ef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010090ef(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h._3_1_ = *(arg_8h + 0xbad);\n    var_4h = arg_8h[0xbac];\n    puVar2 = arg_8h[0xac2];\n    iVar3 = *arg_8h;\n    arg_10h = arg_10h + arg_ch;\n    puVar10 = arg_8h[0xac1];\n    if (arg_ch < arg_10h) {\n        do {\n            if (var_4h >> 0x16 < 0x400) {\n                iVar5 = *(arg_8h + (var_4h >> 0x16) * 2 + 0x18);\n            }\n            else {\n                arg_8h[0xbaf] = 1;\n                iVar5 = 0;\n            }\n            if (iVar5 < 0) {\n                uVar9 = 0x200000;\n                do {\n                    if ((var_4h & uVar9) == 0) {\n                        if (0xa7f < iVar5 * -2) goto code_r0x01009192;\n                        iVar5 = *(arg_8h + (0x38f - iVar5));\n                    }\n                    else if (iVar5 * -2 + 1U < 0xa80) {\n                        iVar5 = *(arg_8h + iVar5 * -4 + 0xe3e);\n                    }\n                    else {\ncode_r0x01009192:\n                        iVar5 = 0;\n                        arg_8h[0xbaf] = 1;\n                    }\n                    uVar9 = uVar9 >> 1;\n                } while (iVar5 < 0);\n            }\n            if (arg_8h[0xbaf] == 0) {\n                if (puVar2 <= puVar10) {\n                    return -1;\n                }\n                uVar1 = *(iVar5 + 0xa18 + arg_8h);\n                arg_8h._3_1_ = arg_8h._3_1_ - uVar1;\n                var_4h = var_4h << (uVar1 & 0x1f);\n                if (arg_8h._3_1_ < '\\x01') {\n                    var_4h = var_4h | *puVar10 << (-arg_8h._3_1_ & 0x1fU);\n                    puVar10 = puVar10 + 1;\n                    arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                }\n            }\n            uVar9 = iVar5 - 0x100;\n            if (uVar9 < 0) {\n                *(iVar3 + arg_ch) = uVar9;\n                arg_ch = arg_ch + 1;\n            }\n            else {\n                uVar8 = uVar9 & 7;\n                if (uVar8 == 7) {\n                    if (var_4h >> 0x18 < 0x100) {\n                        iVar5 = *(arg_8h + (var_4h >> 0x18) * 2 + 0x818);\n                    }\n                    else {\n                        arg_8h[0xbaf] = 1;\n                        iVar5 = 0;\n                    }\n                    if (iVar5 < 0) {\n                        uVar8 = 0x800000;\n                        do {\n                            if ((var_4h & uVar8) == 0) {\n                                if (0x3e3 < iVar5 * -2) goto code_r0x01009269;\n                                iVar5 = *(arg_8h + (0x8cf - iVar5));\n                            }\n                            else if (iVar5 * -2 + 1U < 0x3e4) {\n                                iVar5 = *(arg_8h + iVar5 * -4 + 0x233e);\n                            }\n                            else {\ncode_r0x01009269:\n                                iVar5 = 0;\n                                arg_8h[0xbaf] = 1;\n                            }\n                            uVar8 = uVar8 >> 1;\n                        } while (iVar5 < 0);\n                    }\n                    if (arg_8h[0xbaf] == 0) {\n                        if (puVar2 <= puVar10) {\n                            return -1;\n                        }\n                        uVar1 = *(iVar5 + 0xcb8 + arg_8h);\n                        var_4h = var_4h << (uVar1 & 0x1f);\n                        arg_8h._3_1_ = arg_8h._3_1_ - uVar1;\n                        if (arg_8h._3_1_ < '\\x01') {\n                            var_4h = var_4h | *puVar10 << (-arg_8h._3_1_ & 0x1fU);\n                            puVar10 = puVar10 + 1;\n                            arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                        }\n                    }\n                    uVar8 = iVar5 + 7;\n                    if (arg_8h[0xbaf] != 0) {\n                        return -1;\n                    }\n                }\n                cVar4 = uVar9 >> 3;\n                if (cVar4 < '\\x03') {\n                    iVar5 = arg_8h[cVar4 + 3];\n                    if (cVar4 != '\\0') {\n                        arg_8h[cVar4 + 3] = arg_8h[3];\n                        goto code_r0x0100941f;\n                    }\n                }\n                else {\n                    iVar6 = cVar4;\n                    uVar1 = *(iVar6 + 0x10014e0);\n                    if (uVar1 < 3) {\n                        if (uVar1 == 0) {\n                            iVar5 = *(iVar6 * 4 + 0x1001518);\n                        }\n                        else {\n                            uVar9 = var_4h >> (0x20 - uVar1 & 0x1f);\n                            if (puVar2 <= puVar10) {\n                                return -1;\n                            }\n                            arg_8h._3_1_ = arg_8h._3_1_ - *(iVar6 + 0x10014e0);\n                            var_4h = var_4h << (*(iVar6 + 0x10014e0) & 0x1f);\n                            if (arg_8h._3_1_ < '\\x01') {\n                                var_4h = var_4h | *puVar10 << (-arg_8h._3_1_ & 0x1fU);\n                                puVar10 = puVar10 + 1;\n                                arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                            }\n                            iVar5 = uVar9 + *(iVar6 * 4 + 0x1001518);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 3) {\n                            uVar9 = 0;\n                        }\n                        else {\n                            uVar9 = var_4h >> (0x23 - uVar1 & 0x1f);\n                            if (puVar2 <= puVar10) {\n                                return -1;\n                            }\n                            var_4h = var_4h << (*(iVar6 + 0x10014e0) - 3U & 0x1f);\n                            arg_8h._3_1_ = arg_8h._3_1_ + ('\\x03' - *(iVar6 + 0x10014e0));\n                            if (arg_8h._3_1_ < '\\x01') {\n                                var_4h = var_4h | *puVar10 << (-arg_8h._3_1_ & 0x1fU);\n                                puVar10 = puVar10 + 1;\n                                arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                            }\n                        }\n                        iVar5 = *((var_4h >> 0x19) + 0xdb4 + arg_8h);\n                        if (puVar2 <= puVar10) {\n                            return -1;\n                        }\n                        arg_8h._3_1_ = arg_8h._3_1_ - *(iVar5 + 0xe34 + arg_8h);\n                        var_4h = var_4h << (*(iVar5 + 0xe34 + arg_8h) & 0x1f);\n                        if (arg_8h._3_1_ < '\\x01') {\n                            var_4h = var_4h | *puVar10 << (-arg_8h._3_1_ & 0x1fU);\n                            puVar10 = puVar10 + 1;\n                            arg_8h._3_1_ = arg_8h._3_1_ + '\\x10';\n                        }\n                        iVar5 = *(iVar6 * 4 + 0x1001518) + uVar9 * 8 + iVar5;\n                    }\n                    arg_8h[5] = arg_8h[4];\n                    arg_8h[4] = arg_8h[3];\ncode_r0x0100941f:\n                    arg_8h[3] = iVar5;\n                }\n                iVar6 = uVar8 + 2;\n                puVar7 = (arg_ch - iVar5 & arg_8h[2]) + iVar3;\n                do {\n                    uVar9 = arg_ch + 1;\n                    *(iVar3 + arg_ch) = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    iVar6 = iVar6 + -1;\n                    arg_ch = uVar9;\n                } while (0 < iVar6);\n            }\n        } while (arg_ch < arg_10h);\n    }\n    *(arg_8h + 0xbad) = arg_8h._3_1_;\n    arg_8h[0xbac] = var_4h;\n    arg_8h[0xac1] = puVar10;\n    arg_8h[0xbb0] = arg_8h[2] & arg_ch;\n    return arg_ch - arg_10h;\n}\n",
        "token_count": 2395
    },
    "0100948e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0100948e(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    uVar3 = CONCAT44(arg_8h, arg_ch);\n    if (arg_ch < 0x101) {\n        iVar1 = 0x101 - arg_ch;\n        if (arg_10h <= 0x101 - arg_ch) {\n            iVar1 = arg_10h;\n        }\n        uVar3 = fcn.01008d30(arg_ch, iVar1);\n        iVar2 = uVar3 >> 0x20;\n        iVar1 = uVar3;\n        if (iVar1 == -1) {\n            *(iVar2 + 0x2ebc) = 1;\n            return -1;\n        }\n        arg_10h = arg_10h + (arg_ch - iVar1);\n        *(iVar2 + 0x2ec0) = iVar1;\n        if (arg_10h < 1) {\n            return arg_10h;\n        }\n    }\n    iVar1 = fcn.010090ef(uVar3 >> 0x20, uVar3, arg_10h);\n    return iVar1;\n}\n",
        "token_count": 285
    },
    "010094f3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010094f3(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    if (*(arg_8h + 0x2b0c) != NULL) {\n        puVar2 = *(arg_8h + 0x2b0c);\n        for (uVar1 = arg_ch >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = *arg_10h;\n            arg_10h = arg_10h + 1;\n            puVar2 = puVar2 + 1;\n        }\n        for (uVar1 = arg_ch & 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = *arg_10h;\n            arg_10h = arg_10h + 1;\n            puVar2 = puVar2 + 1;\n        }\n        if ((*(arg_8h + 0x2ec4) != 0) && (*(arg_8h + 0x2ecc) < 0x8000)) {\n            fcn.01008172(arg_8h, *(arg_8h + 0x2b0c), arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "01009548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01009548(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint var_2e8h;\n    uint32_t var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_d8h;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    iVar8 = 0;\n    do {\n        uVar2 = fcn.01008589(in_ECX, 4);\n        *(&var_1ch + iVar8) = uVar2;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x14);\n    if (*(in_ECX + 0x2ebc) == 0) {\n        fcn.01009982(in_ECX, 0x14, &var_1ch, 8, &var_2d8h, &var_d8h);\n        iVar8 = 0;\n        if (0 < arg_8h) {\n            do {\n                uVar3 = *(in_ECX + 0x2eb0) >> 0x18;\n                if (uVar3 < 0x100) {\n                    uVar7 = *(&var_2d8h + uVar3 * 2);\n                }\n                else {\n                    *(in_ECX + 0x2ebc) = 1;\n                    uVar7 = 0;\n                }\n                if (uVar7 < 0) {\n                    uVar3 = 0x800000;\n                    do {\n                        iVar4 = -uVar7;\n                        if ((*(in_ECX + 0x2eb0) & uVar3) == 0) {\n                            if (0x5d < iVar4 * 2) goto code_r0x0100961b;\n                            uVar7 = *(&var_d8h + iVar4);\n                        }\n                        else if (iVar4 * 2 + 1U < 0x5e) {\n                            uVar7 = *(&var_d8h + iVar4 * 4 + 2);\n                        }\n                        else {\ncode_r0x0100961b:\n                            uVar7 = 0;\n                            *(in_ECX + 0x2ebc) = 1;\n                        }\n                        uVar3 = uVar3 >> 1;\n                    } while (uVar7 < 0);\n                }\n                if ((uVar7 < 0x18) && (-1 < uVar7)) {\n                    if (*(in_ECX + 0x2ebc) != 0) break;\n                    fcn.010084cd(in_ECX, *(&var_1ch + uVar7));\n                }\n                else {\n                    *(in_ECX + 0x2ebc) = 1;\n                }\n                if (*(in_ECX + 0x2ebc) != 0) break;\n                if (uVar7 == 0x11) {\n                    uVar3 = fcn.01008589(in_ECX, 4);\n                    uVar3 = (uVar3 & 0xff) + 4;\ncode_r0x0100967d:\n                    if (arg_8h <= uVar3 + iVar8) {\n                        uVar3 = arg_8h - iVar8;\n                    }\n                    if (0 < uVar3) {\n                        puVar9 = arg_10h + iVar8;\n                        for (uVar6 = uVar3 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                            *puVar9 = 0;\n                            puVar9 = puVar9 + 1;\n                        }\n                        for (uVar6 = uVar3 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                            *puVar9 = 0;\n                            puVar9 = puVar9 + 1;\n                        }\n                        iVar8 = iVar8 + uVar3;\n                    }\ncode_r0x010096b1:\n                    iVar8 = iVar8 + -1;\n                }\n                else {\n                    if (uVar7 == 0x12) {\n                        uVar3 = fcn.01008589(in_ECX, 5);\n                        uVar3 = (uVar3 & 0xff) + 0x14;\n                        goto code_r0x0100967d;\n                    }\n                    if (uVar7 == 0x13) {\n                        uVar3 = fcn.01008589(in_ECX, 1);\n                        iVar4 = (uVar3 & 0xff) + 4;\n                        if (arg_8h <= iVar4 + iVar8) {\n                            iVar4 = arg_8h - iVar8;\n                        }\n                        uVar3 = *(in_ECX + 0x2eb0) >> 0x18;\n                        if (uVar3 < 0x100) {\n                            uVar7 = *(&var_2d8h + uVar3 * 2);\n                        }\n                        else {\n                            uVar7 = 0;\n                            *(in_ECX + 0x2ebc) = 1;\n                        }\n                        if (uVar7 < 0) {\n                            var_2e4h = 0x800000;\n                            do {\n                                iVar5 = -uVar7;\n                                if ((*(in_ECX + 0x2eb0) & var_2e4h) == 0) {\n                                    if (0x5d < iVar5 * 2) goto code_r0x0100977d;\n                                    uVar7 = *(&var_d8h + iVar5);\n                                }\n                                else if (iVar5 * 2 + 1U < 0x5e) {\n                                    uVar7 = *(&var_d8h + iVar5 * 4 + 2);\n                                }\n                                else {\ncode_r0x0100977d:\n                                    uVar7 = 0;\n                                    *(in_ECX + 0x2ebc) = 1;\n                                }\n                                var_2e4h = var_2e4h >> 1;\n                            } while (uVar7 < 0);\n                        }\n                        if ((uVar7 < 0x18) && (-1 < uVar7)) {\n                            if (*(in_ECX + 0x2ebc) != 0) break;\n                            fcn.010084cd(in_ECX, *(&var_1ch + uVar7));\n                        }\n                        else {\n                            *(in_ECX + 0x2ebc) = 1;\n                        }\n                        if (*(in_ECX + 0x2ebc) == 0) {\n                            uVar1 = *(iVar8 + arg_ch);\n                            for (; (0 < iVar4 && (iVar4 = iVar4 + -1,  iVar8 < arg_8h)); iVar8 = iVar8 + 1) {\n                                *(arg_10h + iVar8) = ((uVar1 - uVar7) + 0x11) % 0x11;\n                            }\n                            goto code_r0x010096b1;\n                        }\n                        break;\n                    }\n                    *(arg_10h + iVar8) = ((*(iVar8 + arg_ch) - uVar7) + 0x11) % 0x11;\n                }\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < arg_8h);\n        }\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 1734
    },
    "01009931": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.01009931(int32_t arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    iVar2 = 0;\n    do {\n        uVar1 = fcn.01008589(arg_8h, 3);\n        *(arg_8h + 0xe34 + iVar2) = uVar1;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 8);\n    if (*(arg_8h + 0x2ebc) == 0) {\n        iVar2 = fcn.01009b93(arg_8h, arg_8h + 0xe34, arg_8h + 0xdb4);\n        bVar3 = iVar2 != 0;\n    }\n    else {\n        bVar3 = false;\n    }\n    return bVar3;\n}\n",
        "token_count": 196
    },
    "01001f93": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01001f93(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (arg_8h == 0) {\n        uVar1 = fcn.01001e53();\n    }\n    else if (arg_8h == 1) {\n        uVar1 = fcn.01001f37(\"System\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\FileRenameOperations\");\n    }\n    else if ((1 < arg_8h) && (arg_8h < 4)) {\n        uVar1 = fcn.01001edf(\"System\\\\CurrentControlSet\\\\Control\\\\Session Manager\", \"PendingFileRenameOperations\");\n    }\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "010020a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010020a4(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    *0x100ba5c = 0x70;\n    if (arg_8h == 1) {\n        uVar4 = 0;\n        puVar3 = &var_10h;\n        arg_ch = arg_ch + arg_10h;\n        uVar1 = fcn.0100207f(arg_ch, puVar3);\n        fcn.01003ebe(0, 0x4fa, uVar1, arg_ch, puVar3, uVar4);\n    }\n    else if (arg_8h == 4) {\n        uVar4 = 0;\n        puVar3 = &var_10h;\n        arg_ch = arg_ch + arg_10h;\n        uVar1 = fcn.0100207f(arg_ch, puVar3);\n        fcn.01003ebe(0, 0x4bd, uVar1, arg_ch, puVar3, uVar4);\n    }\n    else if (arg_8h == 2) {\n        puVar3 = &var_10h;\n        uVar1 = fcn.0100207f(arg_10h, puVar3);\n        iVar2 = fcn.01003ebe(0, 0x4cc, uVar1, arg_10h, puVar3, arg_14h);\n        if (iVar2 == 6) {\n            *0x100ba5c = 0;\n        }\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 424
    },
    "01003165": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01003165(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h * 0x18;\n    if (*(iVar1 + 0x100c4c4) != 1) {\n        if (arg_10h == 0) {\n            arg_8h = 0;\n        }\n        else if (arg_10h == 1) {\n            arg_8h = 1;\n        }\n        else if (arg_10h == 2) {\n            arg_8h = 2;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*(iVar1 + 0x100c4d4), arg_ch, 0, arg_8h);\n        if (iVar1 == -1) {\n            return -1;\n        }\n        return iVar1;\n    }\n    if (arg_10h != 0) {\n        if (arg_10h == 1) {\n            *(iVar1 + 0x100c4cc) = *(iVar1 + 0x100c4cc) + arg_ch;\n            goto code_r0x010031a9;\n        }\n        if (arg_10h != 2) {\n            return -1;\n        }\n        arg_ch = *(iVar1 + 0x100c4d0) + arg_ch;\n    }\n    *(iVar1 + 0x100c4cc) = arg_ch;\ncode_r0x010031a9:\n    return *(iVar1 + 0x100c4cc);\n}\n",
        "token_count": 362
    },
    "010031ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.010031ee(int32_t arg_8h, uint wFatDate, uint wFatTime)\n\n{\n    int32_t iVar1;\n    uint lpLocalFileTime;\n    uint lpLastAccessTime;\n    \n    if (((*(arg_8h * 0x18 + 0x100c4c4) != 1) &&\n        (iVar1 = (*_sym.imp.KERNEL32.dll_DosDateTimeToFileTime)(wFatDate, wFatTime, &lpLocalFileTime),  iVar1 != 0)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&lpLocalFileTime, &lpLastAccessTime),  iVar1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFileTime)\n                          (*(arg_8h * 0x18 + 0x100c4d4), &lpLastAccessTime, &lpLastAccessTime, &lpLastAccessTime);\n        return iVar1 != 0;\n    }\n    return false;\n}\n",
        "token_count": 229
    },
    "010041d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010041d8(uint lpString1, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    piVar2 = 0x100c4c0;\n    do {\n        if (*piVar2 == 1) break;\n        piVar2 = piVar2 + 6;\n        iVar5 = iVar5 + 1;\n    } while (piVar2 < 0x100c880);\n    if (iVar5 == 0x28) {\n        fcn.01003ebe(*0x100ba4c, 0x4bb, 0, 0, 0x10, 0);\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(lpString1, \"*MEMCAB\");\n        if (iVar3 == 0) {\n            if (((arg_ch & 0x100) == 0) && ((arg_ch & 0xb) == 0)) {\n                iVar3 = iVar5 * 0x18;\n                *(iVar3 + 0x100c4c8) = *0x100bba0;\n                uVar1 = *0x100bba4;\n                *(iVar3 + 0x100c4c0) = 0;\n                *(iVar3 + 0x100c4c4) = 1;\n                *(iVar3 + 0x100c4d0) = uVar1;\n                *(iVar3 + 0x100c4cc) = 0;\n                return iVar5;\n            }\n        }\n        else {\n            iVar3 = fcn.0100412e(lpString1, arg_ch);\n            iVar4 = iVar5 * 0x18;\n            *(iVar4 + 0x100c4d4) = iVar3;\n            if (iVar3 != -1) {\n                *(iVar4 + 0x100c4c0) = 0;\n                *(iVar4 + 0x100c4c4) = 0;\n                return iVar5;\n            }\n        }\n    }\n    return -1;\n}\n",
        "token_count": 501
    },
    "010068b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_b4h\n// WARNING: Variable defined which should be unmapped: var_b0h\n\nvoid fcn.010068b3(void)\n\n{\n    int32_t iVar1;\n    uint *var_b4h;\n    uint *var_b0h;\n    uint hKey;\n    uint32_t var_a8h;\n    uint lpVersionInformation;\n    int32_t var_a0h;\n    uint32_t var_9ch;\n    int32_t var_94h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_a8h = 0;\n    var_4h = *0x100b2d0;\n    var_b0h = 0xc;\n    if (*0x100b2dc == -2) {\n        *0x100b2dc = 0;\n        lpVersionInformation = 0x94;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n        if ((((iVar1 != 0) && (var_94h == 1)) && (var_a0h == 4)) && (var_9ch < 10)) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x4a);\n            if (iVar1 != 0) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, 0x10014b8, 0, 0x20019, &hKey);\n                if (iVar1 == 0) {\n                    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x1001271, 0, &var_b4h, &var_10h, &var_b0h);\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                    if (iVar1 == 0) {\n                        var_b0h = &var_a8h;\n                        var_b4h = &var_10h;\n                        iVar1 = fcn.0100678f(var_b4h, var_b0h);\n                        if ((iVar1 != 0) && ((var_a8h = var_a8h & 0x3ff,  var_a8h == 1 || (var_a8h == 0xd)))) {\n                            *0x100b2dc = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 552
    },
    "01006f72": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01006f72(uint *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t var_10h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xb2);\n    uVar3 = uVar1 & 0xf;\n    puVar4 = arg_8h + 0x25;\n    *puVar4 = 0x8000;\n    if ((uVar1 & 0xf) == 0) {\n        arg_8h[0x26] = 0x8000;\n    }\n    else {\n        if (uVar3 == 1) {\n            iVar5 = fcn.01003d49(puVar4, 0, 0, arg_8h + 0x26, 0);\n        }\n        else if (uVar3 == 2) {\n            var_4h = arg_8h[8];\n            var_8h = uVar1 >> 8 & 0x1f;\n            iVar5 = fcn.01003d49(puVar4, &var_8h, 0, 0, arg_8h + 0x26, 0, 0, 0, 0, 0, 0);\n        }\n        else {\n            if (uVar3 != 3) {\n                if (uVar3 == 0xf) {\n                    return 1;\n                }\n                iVar5 = 6;\n                goto code_r0x01007117;\n            }\n            var_10h = 1 << (uVar1 >> 8 & 0x1f);\n            iVar5 = fcn.01007d6c(puVar4, &var_10h, 0, 0, arg_8h + 0x26, 0, 0, 0, 0, 0, 0);\n        }\n        if (iVar5 != 0) {\n            iVar5 = 7;\n            goto code_r0x01007117;\n        }\n    }\n    puVar4 = arg_8h + 0x26;\n    iVar5 = (*arg_8h[2])(*puVar4);\n    arg_8h[0xf] = iVar5;\n    if (iVar5 != 0) {\n        iVar5 = (*arg_8h[2])(arg_8h[0x25]);\n        arg_8h[0x10] = iVar5;\n        if (iVar5 != 0) {\n            uVar2 = *(arg_8h + 0xb2) & 0xf;\n            if (uVar2 == 1) {\n                iVar5 = fcn.01003d49(arg_8h + 0x25, arg_8h[2], arg_8h[1], puVar4, arg_8h + 0xd);\n            }\n            else if (uVar2 == 2) {\n                iVar5 = fcn.01003d49(arg_8h + 0x25, &var_8h, arg_8h[2], arg_8h[1], puVar4, arg_8h + 0xd, arg_8h[3], \n                                     arg_8h[4], arg_8h[5], arg_8h[6], arg_8h[7]);\n            }\n            else {\n                if (uVar2 != 3) {\n                    return 1;\n                }\n                iVar5 = fcn.01007d6c(arg_8h + 0x25, &var_10h, arg_8h[2], arg_8h[1], puVar4, arg_8h + 0xd, arg_8h[3], \n                                     arg_8h[4], arg_8h[5], arg_8h[6], arg_8h[7]);\n            }\n            if (iVar5 == 0) {\n                return 1;\n            }\n            iVar5 = (iVar5 != 1) * 2 + 5;\n            (*arg_8h[1])(arg_8h[0xf]);\n            (*arg_8h[1])(arg_8h[0x10]);\n            goto code_r0x01007117;\n        }\n        (*arg_8h[1])(arg_8h[0xf]);\n    }\n    iVar5 = 5;\ncode_r0x01007117:\n    fcn.01007cde(*arg_8h, iVar5, 0);\n    *(arg_8h + 0xb2) = 0xf;\n    return 0;\n}\n",
        "token_count": 1053
    },
    "01008237": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01008237(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        bVar7 = arg_ch == 0;\n        do {\n            if (bVar7 || arg_ch < 0) {\n                iVar1 = arg_8h[0xbb0];\n                if (iVar1 == 0) {\n                    iVar1 = arg_8h[1];\n                }\n                iVar3 = 0x9800;\n                if (var_4h < 0x9800) {\n                    iVar3 = var_4h;\n                }\n                fcn.010094f3(arg_8h, iVar3, (iVar1 - var_4h) + *arg_8h);\n                return var_4h;\n            }\n            if (arg_8h[2999] == 1) {\n                if (arg_8h[0xbae] != 0) {\n                    arg_8h[0xbae] = 0;\n                    iVar1 = fcn.01008589(arg_8h, 1);\n                    if (iVar1 == 0) {\n                        arg_8h[0xbb1] = 0;\n                    }\n                    else {\n                        iVar1 = fcn.01008589(arg_8h, 0x10);\n                        uVar2 = fcn.01008589(arg_8h, 0x10);\n                        arg_8h[0xbb1] = uVar2 | iVar1 << 0x10;\n                    }\n                }\n                if (arg_8h[0xbb6] == 3) {\n                    if ((*(arg_8h + 0xbb4) & 1) != 0) {\n                        uVar2 = arg_8h[0xac1];\n                        if (uVar2 < arg_8h[0xac2]) {\n                            arg_8h[0xac1] = uVar2 + 1;\n                        }\n                    }\n                    arg_8h[0xbb6] = 0;\n                    fcn.01008462(arg_8h);\n                }\n                iVar1 = fcn.01008589(arg_8h, 3);\n                arg_8h[0xbb6] = iVar1;\n                iVar1 = fcn.01008589(arg_8h, 8);\n                iVar3 = fcn.01008589(arg_8h, 8);\n                iVar4 = fcn.01008589(arg_8h, 8);\n                iVar4 = iVar4 + (iVar1 * 0x100 + iVar3) * 0x100;\n                arg_8h[0xbb4] = iVar4;\n                arg_8h[0xbb5] = iVar4;\n                if (arg_8h[0xbb6] == 2) {\n                    fcn.01009931(arg_8h);\n                }\n                iVar1 = arg_8h[0xbb6];\n                if ((iVar1 == 1) || (iVar1 == 2)) {\n                    uVar2 = *(arg_8h + 0x2eb5) * 8 + 0x100;\n                    if (0x29f < uVar2) {\n                        uVar2 = 0x2a0;\n                    }\n                    piVar5 = arg_8h + 0x286;\n                    piVar6 = arg_8h + 0xac5;\n                    for (uVar2 = uVar2 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        *piVar6 = *piVar5;\n                        piVar5 = piVar5 + 1;\n                        piVar6 = piVar6 + 1;\n                    }\n                    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        *piVar6 = *piVar5;\n                        piVar5 = piVar5 + 1;\n                        piVar6 = piVar6 + 1;\n                    }\n                    piVar5 = arg_8h + 0x32e;\n                    piVar6 = arg_8h + 0xb6d;\n                    for (iVar1 = 0x3e; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        *piVar6 = *piVar5;\n                        piVar5 = piVar5 + 1;\n                        piVar6 = piVar6 + 1;\n                    }\n                    *piVar6 = *piVar5;\n                    fcn.01009862(arg_8h);\n                }\n                else if ((iVar1 != 3) || (iVar1 = fcn.01008646(arg_8h),  iVar1 == 0)) {\n                    return -1;\n                }\n                arg_8h[2999] = 2;\n            }\n            for (; (0 < arg_8h[0xbb5] && (0 < arg_ch)); arg_ch = arg_ch - iVar1) {\n                iVar1 = arg_8h[0xbb5];\n                if (arg_ch <= arg_8h[0xbb5]) {\n                    iVar1 = arg_ch;\n                }\n                if (iVar1 == 0) {\n                    return -1;\n                }\n                iVar3 = arg_8h[0xbb6];\n                iVar4 = arg_8h[0xbb0];\n                if (iVar3 == 2) {\n                    iVar3 = fcn.0100948e(arg_8h, iVar4, iVar1);\n                }\n                else if (iVar3 == 1) {\n                    iVar3 = fcn.01008cde(arg_8h, iVar4, iVar1);\n                }\n                else if (iVar3 == 3) {\n                    iVar3 = fcn.010085b5(arg_8h, iVar4, iVar1);\n                }\n                else {\n                    iVar3 = -1;\n                }\n                if (iVar3 != 0) {\n                    return -1;\n                }\n                arg_8h[0xbb5] = arg_8h[0xbb5] - iVar1;\n                var_4h = var_4h + iVar1;\n            }\n            if (arg_8h[0xbb5] == 0) {\n                arg_8h[2999] = 1;\n            }\n            bVar7 = arg_ch == 0;\n        } while (!bVar7);\n        fcn.01008462(arg_8h);\n    } while( true );\n}\n",
        "token_count": 1478
    },
    "01001760": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.01001760(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint pSid2;\n    uint uBytes;\n    uint hObject;\n    int32_t var_10h;\n    uint pIdentifierAuthority;\n    uchar var_8h;\n    uchar var_7h;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    uVar5 = 0;\n    pIdentifierAuthority._0_1_ = 0;\n    pIdentifierAuthority._1_1_ = 0;\n    pIdentifierAuthority._2_1_ = 0;\n    pIdentifierAuthority._3_1_ = 0;\n    var_8h = 0;\n    var_7h = 5;\n    var_10h = 0;\n    if (*0x100b1fc == 2) {\n        iVar2 = fcn.010016b4(&var_10h);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &hObject);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n            pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n            if (iVar2 != 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(hObject, 2, 0, 0, &uBytes);\n                if (((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == 0x7a)) &&\n                   (puVar4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uBytes),  puVar4 != NULL)) {\n                    iVar2 = (*pcVar1)(hObject, 2, puVar4, uBytes, &uBytes);\n                    if ((iVar2 != 0) &&\n                       (iVar2 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                                          (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid2),  iVar2 != 0\n                       )) {\n                        if (*puVar4 != 0) {\n                            puVar6 = puVar4 + 1;\n                            do {\n                                iVar2 = (*_sym.imp.ADVAPI32.dll_EqualSid)(*puVar6, pSid2);\n                                if (iVar2 != 0) {\n                                    *0x100b1fc = 1;\n                                    var_10h = 1;\n                                    break;\n                                }\n                                uVar5 = uVar5 + 1;\n                                puVar6 = puVar6 + 2;\n                            } while (uVar5 < *puVar4);\n                        }\n                        (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid2);\n                    }\n                    (*_sym.imp.KERNEL32.dll_LocalFree)(puVar4);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            }\n        }\n        else if (var_10h != 0) {\n            *0x100b1fc = 1;\n        }\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 764
    },
    "01002d03": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01002d03(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x100c495 & 8) == 0) {\n        iVar1 = fcn.0100221e();\n        if ((iVar1 == 2) || (((arg_8h & 0xff000000) == 0xaa000000 && ((arg_8h & 1) != 0)))) {\n            *0x100ba5c = 0xbc2;\n            return;\n        }\n        if ((*0x100c495 & 2) == 0) {\n            return;\n        }\n    }\n    *0x100ba5c = arg_8h;\n    return;\n}\n",
        "token_count": 161
    },
    "010053fa": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010053fa(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_ch_00;\n    uint arg_10h;\n    uint arg_14h;\n    uint uType;\n    uint arg_1ch;\n    uint var_114h;\n    uint hModule;\n    uint var_10ch;\n    uint lpName;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    *0x100c4a4 = arg_8h;\n    puVar3 = 0x100bba0;\n    for (iVar2 = 0x23f; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = 0x100c880;\n    for (iVar2 = 0xcb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = 0x100ba80;\n    for (iVar2 = 0x41; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_10ch = 0;\n    *0x100be4c = 1;\n    uVar1 = fcn.01002e55(0x100144c, 0x100bbb4, 0x7f);\n    if ((uVar1 == 0) || (0x80 < uVar1)) {\n        arg_1ch = 0;\n        uType = 0x10;\n        arg_14h = 0;\n        arg_10h = 0;\n        arg_ch_00 = 0x4b1;\n    }\n    else {\n        arg_1ch = 0;\n        *0x100ba50 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 1);\n        (*_sym.imp.KERNEL32.dll_SetEvent)(*0x100ba50);\n        uType = 4;\n        arg_14h = 0x100c494;\n        arg_10h = 0x1001440;\n        iVar2 = fcn.01002e55(0x1001440, 0x100c494, 4);\n        if (iVar2 == 0) {\ncode_r0x010054d3:\n            fcn.01003ebe(0, 0x4b1, 0, 0, 0, 0);\n            *0x100ba5c = 0x80070714;\n            goto code_r0x0100565c;\n        }\n        if ((*0x100c494 & 0xc0) != 0) {\n            arg_10h = 0x1001430;\n            iVar2 = fcn.01002e55(0x1001430, &lpName, 0x104);\n            if (iVar2 == 0) goto code_r0x010054d3;\n            *0x100ba54 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 1, &lpName);\n            if ((*0x100ba54 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == 0xb7)) {\n                if ((*0x100c494 & 0x80) == 0) {\n                    arg_10h = 0;\n                    iVar2 = fcn.01003ebe(0, 0x524, 0x100bbb4, 0, 0x20, 4);\n                    if (iVar2 == 6) goto code_r0x01005563;\n                }\n                else {\n                    fcn.01003ebe(0, 0x54b, 0x100bbb4, 0, 0x10, 0);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x100ba54);\n                *0x100ba5c = 0x800700b7;\n                goto code_r0x0100565c;\n            }\n        }\ncode_r0x01005563:\n        *0x100ba60 = 0;\n        iVar2 = fcn.0100359c(arg_ch);\n        if (iVar2 != 0) {\n            if (*0x100c89a == '\\0') {\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(arg_8h, 0x1001424, 10);\n                if (iVar2 != 0) {\n                    var_10ch = (*_sym.imp.KERNEL32.dll_LoadResource)(arg_8h, iVar2);\n                }\n                if (*0x100b2c4 != 0) {\n                    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                }\n                if (((((*0x100c884 == 0) && (iVar2 = fcn.0100488c(var_10ch),  iVar2 != 0)) &&\n                     ((*0x100ba64 == 1 || ((*0x100ba64 == 2 || (*0x100ba64 == 3)))))) && ((*0x100c495 & 1) != 0)) &&\n                   (((*0x100c898 & 1) == 0 && (iVar2 = fcn.01001760(),  iVar2 == 0)))) {\n                    fcn.01004819(*0x100c4a4, 0x7d6, 0, fcn.0100189d, 0x547, 0x83e);\n                }\n            }\n            else {\n                fcn.01002a96(0x100c89a);\n            }\n            goto code_r0x0100565c;\n        }\n        arg_ch_00 = 0x520;\n    }\n    fcn.01003ebe(0, arg_ch_00, arg_10h, arg_14h, uType, arg_1ch);\ncode_r0x0100565c:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 1395
    },
    "0100589b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100589b(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if (arg_ch != 0x10) {\n        if (arg_ch != 0x102) {\n            if (arg_ch == 0x110) {\n                *0x100ba4c = arg_8h;\n                uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n                fcn.01002d83(arg_8h, uVar4);\n                pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n                if (*0x100b2c4 != 0) {\n                    uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x83b, 0x464, 0, 0xbb9);\n                    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n                    (*_sym.imp.USER32.dll_SendMessageA)(uVar4);\n                    uVar4 = (*pcVar2)(arg_8h, 0x83b, 0x465, 0xffffffff, 0xffff0000);\n                    (*pcVar1)(uVar4);\n                }\n                (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x100bbb4);\n                *0x100b43c = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.01005190, 0, 0, 0x100ba48);\n                if (*0x100b43c == 0) {\n                    fcn.01003ebe(arg_8h, 0x4b8, 0, 0, 0x10, 0);\n                    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n                }\n                return 1;\n            }\n            if (arg_ch != 0x111) {\n                if (arg_ch == 0xfa1) {\n                    (*_sym.imp.KERNEL32.dll_TerminateThread)(*0x100b43c, 0);\n                    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, arg_10h);\n                    return 1;\n                }\n                return 0;\n            }\n            if (arg_10h != 2) {\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_ResetEvent)(*0x100ba50);\n            iVar3 = fcn.01003ebe(*0x100ba4c, 0x4b2, 0x1001271, 0, 0x20, 4);\n            if ((iVar3 != 6) && (iVar3 != 1)) {\n                (*_sym.imp.KERNEL32.dll_SetEvent)(*0x100ba50);\n                return 1;\n            }\n            *0x100bc38 = 1;\n            (*_sym.imp.KERNEL32.dll_SetEvent)(*0x100ba50);\n            fcn.01002c91(*0x100b43c);\n            goto code_r0x01005a1f;\n        }\n        if (arg_10h != 0x1b) {\n            return 1;\n        }\n    }\n    *0x100bc38 = 1;\ncode_r0x01005a1f:\n    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n    return 1;\n}\n",
        "token_count": 771
    },
    "01005abc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.01005abc(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_188h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint *var_134h;\n    uint var_130h;\n    uint32_t var_12ch;\n    uint var_128h;\n    int32_t var_124h;\n    int32_t var_120h;\n    uint var_11ch;\n    int32_t var_118h;\n    int32_t var_114h;\n    uint32_t var_110h;\n    uint var_10ch;\n    uint lpString1;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    var_114h = 0;\n    var_120h = 0;\n    var_124h = 0;\n    *0x100ba5c = 0;\n    if ((*0x100c888 == 0) && ((uVar2 = fcn.01002e55(0x100148c, 0x100c48c, 4),  uVar2 == 0 || (4 < uVar2)))) {\n        fcn.01003ebe(0, 0x4b1, 0, 0, 0x10, 0);\n        *0x100ba5c = -0x7ff8f8ec;\n    }\n    else {\n        pcVar1 = _sym.imp.KERNEL32.dll_LocalFree;\n        var_110h = 0;\n        do {\n            puVar5 = &var_188h;\n            for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            var_114h = 0;\n            var_188h = 0x44;\n            if (*0x100caa2 != '\\0') {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpString1, 0x100caa2);\n                goto code_r0x01005c90;\n            }\n            uVar2 = fcn.01002e55(0x1001480, &var_118h, 4);\n            if ((uVar2 == 0) || (4 < uVar2)) {\ncode_r0x01005c5a:\n                fcn.01003ebe(0, 0x4b1, 0, 0, 0x10, 0);\n                *0x100ba5c = -0x7ff8f8ec;\n                goto code_r0x01005e8f;\n            }\n            if (var_118h == 1) {\n                var_158h._0_2_ = 0;\ncode_r0x01005bc2:\n                var_15ch = 1;\n            }\n            else {\n                if (var_118h == 2) {\n                    var_158h._0_2_ = 6;\n                    goto code_r0x01005bc2;\n                }\n                if (var_118h == 3) {\n                    var_158h._0_2_ = 3;\n                    goto code_r0x01005bc2;\n                }\n            }\n            if (var_110h == 0) {\n                if (*0x100c898 != 0) {\n                    if ((*0x100c898 & 1) == 0) {\n                        if ((*0x100c898 & 2) != 0) {\n                            var_11ch = 0x1001470;\n                        }\n                    }\n                    else {\n                        var_11ch = 0x1001478;\n                    }\n                    iVar4 = fcn.01002e55(var_11ch, &lpString1, 0x104);\n                    if (iVar4 == 0) goto code_r0x01005c5a;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpString1, 0x10013d4);\n                    if (iVar4 != 0) {\n                        var_120h = 1;\n                    }\n                }\n                if (var_120h == 0) {\n                    iVar4 = fcn.01002e55(0x1001464, &lpString1, 0x104);\n                    if (iVar4 == 0) goto code_r0x01005c5a;\n                    goto code_r0x01005c90;\n                }\n            }\n            else {\ncode_r0x01005c90:\n                if (var_110h == 1) {\n                    iVar4 = fcn.01002e55(0x1001454, &lpString1, 0x104);\n                    if (iVar4 == 0) goto code_r0x01005c5a;\n                    if ((*0x100caa2 != '\\0') ||\n                       (iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpString1, 0x10013d4),  iVar4 == 0)) break;\n                }\n            }\n            iVar4 = fcn.010026e2(&lpString1, 0x104, &var_10ch, &var_114h);\n            if (iVar4 == 0) goto code_r0x01005e8f;\n            if (((var_124h == 0) && (*0x100ba64 != 1)) && (*0x100c880 != 0)) {\n                if (var_114h == 0) {\n                    var_124h = 1;\n                    fcn.01001aa7();\n                    goto code_r0x01005d2b;\n                }\ncode_r0x01005d37:\n                if (*0x100b2c8 == 0) {\n                    fcn.01003ebe(0, 0x4c7, 0, 0, 0x10, 0);\n                    (*pcVar1)(var_10ch);\n                    *0x100ba5c = -0x7ff8fbd5;\n                }\n                else {\n                    if ((var_114h == 0) || ((*0x100c494 & 4) == 0)) goto code_r0x01005e46;\n                    iVar4 = fcn.01003ccc(0x1001298);\n                    if (iVar4 == 0) {\n                        fcn.01003ebe(0, 0x4c8, 0x1001298, 0, 0x10, 0);\n                    }\n                    else {\n                        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"DoInfInstall\");\n                        if (pcVar3 != NULL) {\n                            var_13ch = var_10ch;\n                            var_134h = &lpString1;\n                            var_130h._0_2_ = *0x100ba64;\n                            var_12ch = *0x100c898;\n                            var_144h = 0;\n                            var_140h = 0x100bbb4;\n                            var_138h = 0x100bc44;\n                            if (*0x100c890 != 0) {\n                                var_12ch = CONCAT12(1, *0x100c898);\n                            }\n                            if ((*0x100c494 & 8) != 0) {\n                                var_12ch = var_12ch | 0x20000;\n                            }\n                            if ((*0x100c494 & 0x10) != 0) {\n                                var_12ch = var_12ch | 0x40000;\n                            }\n                            if ((*0x100cba8 & 0x40) != 0) {\n                                var_12ch = var_12ch | 0x80000;\n                            }\n                            if (*0x100cba8 < '\\0') {\n                                var_12ch = var_12ch | 0x100000;\n                            }\n                            var_128h = *0x100c498;\n                            *0x100ba5c = (*pcVar3)(&var_144h);\n                            if (*0x100ba5c < 0) {\n                                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                                goto code_r0x01005f0f;\n                            }\n                            (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n                            goto code_r0x01005e60;\n                        }\n                        fcn.01003ebe(0, 0x4c9, \"DoInfInstall\", 0, 0x10, 0);\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                    }\n                    (*pcVar1)(var_10ch);\n                    *0x100ba5c = fcn.01003aa1();\n                }\n                goto code_r0x01005e8f;\n            }\ncode_r0x01005d2b:\n            if (var_114h != 0) goto code_r0x01005d37;\ncode_r0x01005e46:\n            iVar4 = fcn.01004cae(var_10ch, &var_188h);\n            if (iVar4 == 0) {\ncode_r0x01005f0f:\n                (*pcVar1)(var_10ch);\n                goto code_r0x01005e8f;\n            }\ncode_r0x01005e60:\n            (*pcVar1)(var_10ch);\n            var_110h = var_110h + 1;\n        } while (var_110h < 2);\n        if (*0x100b330 != 0) {\n            fcn.01001cf4();\n        }\n    }\ncode_r0x01005e8f:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 2207
    },
    "01005f21": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.01005f21(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *arg_ch;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint arg_10h;\n    uint *puVar5;\n    uint uVar6;\n    uint lpFileName;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    iVar2 = fcn.01002e55(0x1001464, 0, 0);\n    arg_ch = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar2 + 1);\n    if (arg_ch == NULL) {\n        fcn.01003ebe(0, 0x4b5, 0, 0, 0x10, 0);\n        *0x100ba5c = fcn.01003aa1();\n    }\n    else {\n        iVar2 = fcn.01002e55(0x1001464, arg_ch, iVar2);\n        if (iVar2 == 0) {\n            fcn.01003ebe(0, 0x4b1, 0, 0, 0x10, 0);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(arg_ch);\n            *0x100ba5c = 0x80070714;\n        }\n        else {\n            uVar6 = 0x10013d4;\n            puVar5 = arg_ch;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg_ch, 0x10013d4);\n            arg_10h = 1;\n            if (iVar2 == 0) {\n                *0x100c490 = 1;\n            }\n            (*_sym.imp.KERNEL32.dll_LocalFree)(arg_ch);\n            if (*0x100c99e == '\\0') {\n                if ((*0x100c884 == 0) && (*0x100c490 == 0)) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104, 0x100bc44);\n                    pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA;\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.010052d4(0x100bc44, 1, 3);\n                        if (iVar2 != 0) goto code_r0x010061f3;\n                        arg_ch = 0x100bc44;\n                        uVar6 = 0x1006052;\n                        iVar2 = fcn.01002025(0x100bc44);\n                        pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA;\n                        if (iVar2 == 0) {\n                            uVar6 = 1;\n                            puVar5 = 0x1;\n                            arg_ch = 0x100bc44;\n                            iVar2 = fcn.010052d4(0x100bc44, 1, 1);\n                            pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyA;\n                            goto joined_r0x01006060;\n                        }\n                    }\n                    do {\n                        (*pcVar1)(&fcn.01005f21::lpFileName, 0x10014a4, arg_ch, puVar5, uVar6);\n                        while (lpFileName < '[') {\n                            iVar2 = (*_sym.imp.KERNEL32.dll_GetDriveTypeA)(&fcn.01005f21::lpFileName);\n                            if (((((iVar2 == 6) || (iVar2 == 3)) &&\n                                 (iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&fcn.01005f21::lpFileName), \n                                 iVar3 != -1)) ||\n                                (((iVar2 == 2 && (lpFileName != 'A')) &&\n                                 ((lpFileName != 'B' &&\n                                  ((uVar4 = fcn.010069ea(&fcn.01005f21::lpFileName),  uVar4 != 0 && (0x18fff < uVar4))))\n                                 )))) && ((iVar2 = fcn.0100456a(&fcn.01005f21::lpFileName, 3, 0),  iVar2 != 0 ||\n                                          ((iVar2 = fcn.01002025(&fcn.01005f21::lpFileName),  iVar2 == 0 &&\n                                           (iVar2 = fcn.0100456a(&fcn.01005f21::lpFileName, 1, 0),  iVar2 != 0)))))) {\n                                iVar2 = fcn.01002025(&fcn.01005f21::lpFileName);\n                                if (iVar2 != 0) {\n                                    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&fcn.01005f21::lpFileName, 0x104);\n                                }\n                                fcn.010066cf(&fcn.01005f21::lpFileName, 0x104, 0x1001494);\n                                iVar2 = fcn.01001ff9(&fcn.01005f21::lpFileName);\n                                if (iVar2 == 0) {\n                                    lpFileName._0_1_ = lpFileName + '\\x01';\n                                    lpFileName._3_1_ = 0;\n                                }\n                                else {\n                                    (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(&fcn.01005f21::lpFileName, 2);\n                                    (*pcVar1)(0x100bc44, &fcn.01005f21::lpFileName);\n                                    iVar2 = fcn.010052d4(0x100bc44, 1, 0);\n                                    if (iVar2 != 0) goto code_r0x010061f3;\n                                }\n                            }\n                            else {\n                                lpFileName._0_1_ = lpFileName + '\\x01';\n                            }\n                        }\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&fcn.01005f21::lpFileName, 0x104);\n                        uVar6 = 4;\n                        puVar5 = 0x3;\n                        arg_ch = &fcn.01005f21::lpFileName;\n                        iVar2 = fcn.0100456a(arg_ch, 3, 4);\njoined_r0x01006060:\n                    } while (iVar2 == 0);\n                }\n                else {\n                    fcn.01004819(*0x100c4a4, 0x7d2, 0, fcn.01005670, 0, 0);\n                }\n            }\n            else {\n                if ((*0x100c99e == '\\\\') && (*0x100c99f == '\\\\')) {\n                    arg_10h = 0;\n                }\n                iVar2 = fcn.010052d4(0x100c99e, 0, arg_10h);\n                if (iVar2 == 0) {\n                    fcn.01003ebe(0, 0x4be, 0, 0, 0x10, 0);\n                }\n            }\n        }\n    }\ncode_r0x010061f3:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 1566
    },
    "01001e13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01001e13(char *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (((arg_8h != NULL) && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h),  2 < iVar1)) &&\n       (((arg_8h[1] == ':' && (arg_8h[2] == '\\\\')) || ((*arg_8h == '\\\\' && (arg_8h[1] == '\\\\')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "01002c57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01002c57(char *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (((arg_8h != NULL) && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h),  2 < iVar1)) &&\n       ((arg_8h[1] == ':' || ((*arg_8h == '\\\\' && (arg_8h[1] == '\\\\')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 113
    },
    "0100412e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0100412e(uint arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_CreateFileA;\n    if ((arg_ch & 8) == 0) {\n        var_4h = 0x80000000;\n        if ((arg_ch & 3) != 0) {\n            var_4h = 0x40000000;\n        }\n        if ((arg_ch & 0x100) == 0) {\n            arg_ch = (-((arg_ch & 0x200) != 0) & 2) + 3;\n        }\n        else if ((arg_ch & 0x400) == 0) {\n            arg_ch = (-((arg_ch & 0x200) != 0) & 0xfffffffe) + 4;\n        }\n        else {\n            arg_ch = 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, var_4h, 0, 0, arg_ch, 0x80, 0);\n        if ((iVar2 == -1) && (arg_ch != 3)) {\n            fcn.01002f6b(arg_8h);\n            iVar2 = (*pcVar1)(arg_8h, var_4h, 0, 0, arg_ch, 0x80, 0);\n        }\n    }\n    else {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 356
    },
    "01008462": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01008462(int32_t arg_8h)\n\n{\n    ushort *puVar1;\n    uchar uVar2;\n    uchar uVar3;\n    ushort *puVar4;\n    ushort uVar5;\n    \n    if (*(arg_8h + 0x2ed8) != 3) {\n        puVar4 = *(arg_8h + 0x2b04);\n        puVar1 = puVar4 + 2;\n        if (puVar1 < *(arg_8h + 0x2b08) || puVar1 == *(arg_8h + 0x2b08)) {\n            uVar2 = *(puVar4 + 3);\n            uVar5 = *puVar4;\n            uVar3 = *(puVar4 + 1);\n            *(arg_8h + 0x2eb4) = 0x10;\n            *(arg_8h + 0x2b04) = puVar1;\n            *(arg_8h + 0x2eb0) = CONCAT31(CONCAT21(uVar5, uVar2), uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "01001e53": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.01001e53(void)\n\n{\n    int32_t iVar1;\n    uint lpPathName;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpPathName, 0x104);\n    if (iVar1 != 0) {\n        fcn.010066cf(&lpPathName, 0x104, 0x10012a4);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, &lpPathName);\n        iVar1 = (*_sym.imp.KERNEL32.dll__lopen)(&lpPathName, 0x40);\n        if (iVar1 != -1) {\n            (*_sym.imp.KERNEL32.dll__llseek)(iVar1, 0, 2);\n            (*_sym.imp.KERNEL32.dll__lclose)(iVar1);\n        }\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 227
    },
    "01001ff9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01001ff9(uint lpPathName)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpPathName);\n    if (uVar1 == 0xffffffff) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(lpPathName, 0);\n    }\n    else {\n        uVar1 = uVar1 & 0x10;\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "010026e2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.010026e2(uint *arg_8h, uint *arg_ch, char **arg_10h, uint *arg_14h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uint uVar8;\n    uint var_620h;\n    uint var_61ch;\n    uint var_618h;\n    uint *var_614h;\n    uint *lpReturnedString;\n    uint var_60ch;\n    uint var_20ch;\n    uint lpszShortPath;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    fcn.0100160f(&var_20ch, 0x104, arg_8h);\n    if (var_20ch == '\\\"') {\n        lpReturnedString = &var_20ch + 1;\n        uVar8 = 0x1001340;\n    }\n    else {\n        lpReturnedString = &var_20ch;\n        uVar8 = 0x100133c;\n    }\n    puVar2 = fcn.01001942(&lpReturnedString, uVar8);\n    puVar4 = lpReturnedString;\n    iVar3 = fcn.01001e13(lpReturnedString);\n    if (iVar3 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpszShortPath, 0x100bc44);\n        fcn.010066cf(&lpszShortPath, 0x104, puVar4);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpszShortPath, puVar4);\n    }\n    iVar3 = fcn.01006752(puVar4, 0x2e);\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n    if ((iVar3 == 0) || (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(iVar3, 0x1001334),  iVar3 != 0)) {\n        iVar3 = fcn.01006752(puVar4, 0x2e);\n        if ((iVar3 == 0) || (iVar3 = (*pcVar1)(iVar3, 0x10012ec),  pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA,  iVar3 != 0)\n           ) {\n            lpReturnedString = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x400);\n            if (lpReturnedString != NULL) {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&lpszShortPath);\n                if ((uVar6 == 0xffffffff) || ((uVar6 & 0x10) != 0)) {\n                    puVar2 = &var_60ch;\n                    pcVar7 = 0x400;\n                    puVar4 = arg_8h;\n                    fcn.0100160f(puVar2, 0x400, arg_8h);\n                    arg_8h = puVar2;\n                }\n                else {\n                    puVar4 = &lpszShortPath;\n                    pcVar7 = 0x400;\n                    arg_8h = &var_60ch;\n                    fcn.0100160f(arg_8h, 0x400, puVar4);\n                    if ((puVar2 != NULL) && (*puVar2 != '\\0')) {\n                        fcn.010021e6(&var_60ch, 0x400, 0x100133c);\n                        arg_8h = &var_60ch;\n                        fcn.010021e6(arg_8h, 0x400, puVar2);\n                    }\n                }\n                fcn.01002589(&var_60ch, lpReturnedString, 0x400);\n                goto code_r0x01002a71;\n            }\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(\"Command.com /c %s\");\n            iVar5 = (*pcVar1)(&lpszShortPath);\n            arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar3 + 8 + iVar5);\n            lpReturnedString = arg_8h;\n            if (arg_8h != NULL) {\n                puVar4 = &lpszShortPath;\n                pcVar7 = \"Command.com /c %s\";\n                (*_sym.imp.USER32.dll_wsprintfA)(arg_8h, \"Command.com /c %s\", puVar4);\ncode_r0x01002a71:\n                *arg_10h = lpReturnedString;\n                goto code_r0x01002a82;\n            }\n        }\ncode_r0x010029da:\n        puVar2 = NULL;\n        uVar8 = 0x4b5;\n    }\n    else {\n        iVar3 = fcn.0100672a(&lpszShortPath);\n        if (iVar3 != 0) {\n            lpReturnedString = puVar2;\n            puVar4 = fcn.01001942(&lpReturnedString, 0x1001330);\n            pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n            (*_sym.imp.KERNEL32.dll_lstrlenA)(0x100b0ac);\n            pcVar7 = lpReturnedString;\n            if (puVar4 != NULL) {\n                if (*puVar4 != '\\0') {\n                    lpReturnedString = puVar4;\n                }\n                fcn.01001942(&lpReturnedString, 0x100132c);\n                pcVar7 = lpReturnedString;\n                if (*lpReturnedString != '\\0') {\n                    (*pcVar1)(lpReturnedString);\n                }\n            }\n            lpReturnedString = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x200);\n            if (lpReturnedString != NULL) {\n                puVar4 = pcVar7;\n                if (*pcVar7 == '\\0') {\n                    puVar4 = 0x100b0ac;\n                }\n                *0x100ba60 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(puVar4, 0x1001324, 0, &lpszShortPath);\n                *arg_14h = 1;\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                                  (0x1001310, 0x1001318, 0x1001271, lpReturnedString, 8, &lpszShortPath);\n                if (iVar3 == 0) {\n                    *0x100c494 = *0x100c494 & 0xfffffffb;\n                    if (*0x100ba64 == 0) {\n                        var_614h = 0x1001304;\n                        (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(&lpszShortPath, &lpszShortPath, 0x104);\n                    }\n                    else {\n                        var_614h = 0x10012f4;\n                    }\n                    if (*pcVar7 == '\\0') {\n                        pcVar7 = 0x100b0ac;\n                    }\n                    puVar4 = &lpszShortPath;\n                    (*_sym.imp.USER32.dll_wsprintfA)(lpReturnedString, 0x100b01c, var_614h, pcVar7, puVar4);\n                    arg_8h = var_614h;\n                }\n                else {\n                    *0x100c494 = *0x100c494 | 4;\n                    if (*pcVar7 == '\\0') {\n                        pcVar7 = 0x100b0ac;\n                    }\n                    fcn.010021c4(arg_8h, arg_ch);\n                    puVar4 = pcVar7;\n                    fcn.010021c4(lpReturnedString, 0x200);\n                    pcVar7 = arg_ch;\n                }\n                goto code_r0x01002a71;\n            }\n            goto code_r0x010029da;\n        }\n        puVar2 = &lpszShortPath;\n        uVar8 = 0x525;\n    }\n    puVar4 = NULL;\n    pcVar7 = 0x10;\n    arg_8h = NULL;\n    fcn.01003ebe(0, uVar8, puVar2, 0, 0x10, 0);\ncode_r0x01002a82:\n    fcn.010064de(arg_8h, pcVar7, puVar4);\n    return;\n}\n",
        "token_count": 1903
    },
    "0100342e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpPathName\n// WARNING: Variable defined which should be unmapped: var_10ch\n\nvoid __cdecl fcn.0100342e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpPathName;\n    uint var_10ch;\n    uint ARG_0;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    iVar3 = 0;\n    do {\n        (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, 0x1001368, iVar3);\n        iVar3 = iVar3 + 1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_ch, arg_8h);\n        fcn.010066cf(arg_ch, arg_10h, &ARG_0);\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(arg_ch);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(arg_ch);\n        pcVar1 = _sym.imp.KERNEL32.dll_CreateDirectoryA;\n        if (iVar2 == -1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(arg_ch, 0);\n            if (iVar3 != 0) {\n                *0x100c880 = 1;\n                var_10ch = 1;\n                goto code_r0x010034fd;\n            }\n            break;\n        }\n    } while (iVar3 < 400);\n    var_10ch = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(arg_8h, 0x1001364, 0, arg_ch);\n    if (iVar3 != 0) {\n        var_10ch = 1;\n        (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_ch);\n        (*pcVar1)(arg_ch, 0);\n    }\ncode_r0x010034fd:\n    fcn.010064de(arg_8h, var_10ch);\n    return;\n}\n",
        "token_count": 473
    },
    "01003bf2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01003bf2(int32_t arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    var_10ch = 1;\n    var_110h = 0;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&var_108h, 0x100bc44);\n    fcn.010066cf(&var_108h, 0x104, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)(&var_108h, 0x40000000, 0, 0, 2, 0x80, 0);\n    if (iVar1 == -1) {\n        *0x100ba5c = 0x80070052;\n        var_10ch = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1, arg_14h, arg_8h, &var_110h, 0);\n        if ((iVar2 == 0) || (arg_8h != var_110h)) {\n            *0x100ba5c = 0x80070052;\n            var_10ch = 0;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 366
    },
    "01003ccc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01003ccc(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint lpLibFileName;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&lpLibFileName, 0x100bc44);\n    fcn.010066cf(&lpLibFileName, 0x104, arg_8h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&lpLibFileName);\n    if ((uVar1 == 0xffffffff) || ((uVar1 & 0x10) != 0)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(arg_8h);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(&lpLibFileName, 0, 8);\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 213
    },
    "010044bd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010044bd(uint lpFileName)\n\n{\n    int32_t iVar1;\n    int32_t lpString;\n    uint32_t uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpFileName);\n    lpString = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar1 + 0x14);\n    if (lpString == 0) {\n        fcn.01003ebe(0, 0x4b5, 0, 0, 0x10, 0);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString, lpFileName);\n        fcn.010066cf(lpString, iVar1 + 0x14, 0x10013e4);\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpString, 0x40000000, 0, 0, 1, 0x4000080, 0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(lpString);\n        if (iVar1 != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpFileName);\n            if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) != 0)) {\n                *0x100ba5c = 0;\n                return 1;\n            }\n        }\n    }\n    *0x100ba5c = fcn.01003aa1();\n    return 0;\n}\n",
        "token_count": 355
    },
    "01004819": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.01004819(uint hModule, uint lpName, uint hWndParent, uint lpDialogFunc, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, lpName, 5);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, iVar1),  iVar1 != 0)) {\n        if (arg_18h == 0) {\n            arg_18h = 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_DialogBoxIndirectParamA)(hModule, iVar1, hWndParent, lpDialogFunc, arg_18h);\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar1);\n        if (iVar2 != -1) {\n            return iVar2;\n        }\n    }\n    fcn.01003ebe(0, 0x4fb, 0, 0, 0x10, 0);\n    return arg_1ch;\n}\n",
        "token_count": 258
    },
    "01005670": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01005670(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_14h;\n    uint uVar2;\n    uint arg_1ch;\n    \n    if (arg_ch != 0x10) {\n        if (arg_ch == 0x110) {\n            uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            fcn.01002d83(arg_8h, uVar2);\n            (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x100bbb4);\n            (*_sym.imp.USER32.dll_SendDlgItemMessageA)(arg_8h, 0x835, 0xc5, 0x103, 0);\n            if (*0x100ba64 != 1) {\n                return 1;\n            }\n            uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x836, 0);\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar2);\n            return 1;\n        }\n        if (arg_ch != 0x111) {\n            return 0;\n        }\n        if (arg_10h == 1) {\n            iVar1 = (*_sym.imp.USER32.dll_GetDlgItemTextA)(arg_8h, 0x835, 0x100bc44, 0x104);\n            if ((iVar1 == 0) || (iVar1 = fcn.01002c57(0x100bc44),  iVar1 == 0)) {\n                arg_1ch = 0;\n                uVar2 = 0x10;\n                arg_14h = 0;\n                arg_10h_00 = 0;\n                arg_ch_00 = 0x4bf;\n            }\n            else {\n                iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x100bc44);\n                if (iVar1 == -1) {\n                    arg_1ch = 0x54a;\n                    uVar2 = arg_8h;\n                    iVar1 = fcn.01003ebe(arg_8h, 0x54a, 0x100bc44, 0, 0x20, 4);\n                    if (iVar1 != 6) {\n                        return 1;\n                    }\n                    arg_14h = 0;\n                    arg_10h_00 = 0x100bc44;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)();\n                    if (iVar1 == 0) {\n                        arg_ch_00 = 0x4cb;\n                        goto code_r0x01005820;\n                    }\n                }\n                fcn.010066cf(0x100bc44, 0x104, 0x1001271);\n                iVar1 = fcn.010044bd(0x100bc44);\n                if (iVar1 != 0) {\n                    if ((*0x100bc44 != '\\\\') || (uVar2 = 0,  *0x100bc45 != '\\\\')) {\n                        uVar2 = 1;\n                    }\n                    iVar1 = fcn.0100456a(0x100bc44, uVar2, 1);\n                    if (iVar1 != 0) {\n                        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 1);\n                    }\n                    return 1;\n                }\n                arg_1ch = 0;\n                uVar2 = 0x10;\n                arg_14h = 0;\n                arg_10h_00 = 0;\n                arg_ch_00 = 0x4be;\n            }\ncode_r0x01005820:\n            fcn.01003ebe(arg_8h, arg_ch_00, arg_10h_00, arg_14h, uVar2, arg_1ch);\n            return 1;\n        }\n        if (arg_10h == 2) {\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n            *0x100ba5c = 0x800704c7;\n            return 1;\n        }\n        if (arg_10h != 0x836) {\n            return 1;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_LoadStringA)(*0x100c4a4, 1000, 0x100b640, 0x200);\n        if (iVar1 == 0) {\n            arg_8h = 0;\n            fcn.01003ebe(0, 0x4b1, 0, 0, 0x10, 0);\n        }\n        else {\n            iVar1 = fcn.01004e73(arg_8h, 0x100b640, 0x100b338);\n            if (iVar1 == 0) {\n                return 1;\n            }\n            iVar1 = (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x835, 0x100b338);\n            if (iVar1 != 0) {\n                return 1;\n            }\n            fcn.01003ebe(arg_8h, 0x4c0, 0, 0, 0x10, 0);\n        }\n    }\n    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n    return 1;\n}\n",
        "token_count": 1206
    },
    "0100672a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0100672a(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpFileName);\n    if (uVar1 == 0xffffffff) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = ~(uVar1 >> 4) & 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "01006bce": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01006bce(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h[0x1f0] = arg_8h + 0x3b7;\n    arg_8h[0x1f1] = arg_8h + 0x12e;\n    arg_8h[0x1f2] = arg_8h + 0x5b9;\n    arg_8h[499] = arg_8h[0xe];\n    *(arg_8h + 0x7da) = *(arg_8h + 0x1c);\n    *(arg_8h + 0x1f7) = *(arg_8h + 0x72);\n    iVar1 = (*arg_8h[9])(0, arg_8h + 0x1ef);\n    if (iVar1 == -1) {\ncode_r0x01006c5b:\n        fcn.01007cde(*arg_8h, 0xb, 0);\n        uVar2 = 0;\n    }\n    else {\n        if (arg_8h[10] != 0) {\n            arg_8h[0x1f9] = 0;\n            arg_8h[0x1fa] = arg_8h[0xe];\n            arg_8h[0x1fb] = arg_8h[0x13];\n            *(arg_8h + 0x1fc) = *(arg_8h + 0x28);\n            *(arg_8h + 0x7f2) = *(arg_8h + 0x1c);\n            arg_8h[0x1fd] = *(arg_8h + 0x72);\n            iVar1 = (*arg_8h[10])(arg_8h + 0x1f9);\n            if (iVar1 == -1) goto code_r0x01006c5b;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 465
    },
    "01006c78": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01006c78(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = (*arg_8h[4])(arg_8h[0x21], arg_8h[0x12], arg_8h[0x2a]);\n    if (((arg_8h[0x2a] == iVar1) &&\n        (uVar2 = *(arg_8h[0x12] + 4) + arg_ch,  uVar2 < arg_8h[0x26] || uVar2 == arg_8h[0x26])) &&\n       (uVar2 = (*arg_8h[4])(arg_8h[0x21], arg_8h[0xf] + arg_ch, *(arg_8h[0x12] + 4)),  *(arg_8h[0x12] + 4) == uVar2)) {\n        if (*arg_8h[0x12] != 0) {\n            uVar3 = fcn.01007d01(arg_8h[0xf] + arg_ch, *(arg_8h[0x12] + 1), 0);\n            iVar1 = fcn.01007d01(arg_8h[0x12] + 4, arg_8h[0x2a] + -4, uVar3);\n            if (iVar1 != *arg_8h[0x12]) goto code_r0x01006d9f;\n        }\n        *(arg_8h[0x12] + 4) = *(arg_8h[0x12] + 4) + arg_ch;\n        if ((arg_ch == 0) && (*(arg_8h[0x12] + 6) != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        if (arg_8h[10] != 0) {\n            arg_8h[0x1f9] = 2;\n            arg_8h[0x1fa] = arg_8h[0xe];\n            *(arg_8h + 0x1fc) = *(arg_8h + 0x2a) + -8;\n            if (*(arg_8h + 0x2a) + -8 == 0) {\n                arg_8h[0x1fb] = 0;\n            }\n            else {\n                arg_8h[0x1fb] = arg_8h[0x12] + 8;\n            }\n            arg_8h[0x1fd] = arg_8h[0xf] + arg_ch;\n            *(arg_8h + 0x1fe) = *(arg_8h[0x12] + 4);\n            arg_8h[0x1ff] = uVar3;\n            *(arg_8h + 0x200) = arg_ch;\n            iVar1 = (*arg_8h[10])(arg_8h + 0x1f9);\n            if (iVar1 == -1) {\n                uVar3 = 0xb;\n                goto code_r0x01006da3;\n            }\n        }\n        uVar3 = 1;\n    }\n    else {\ncode_r0x01006d9f:\n        uVar3 = 4;\ncode_r0x01006da3:\n        fcn.01007cde(*arg_8h, uVar3, 0);\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 813
    },
    "01006db8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01006db8(char *arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = (*arg_10h[7])(arg_10h[0x22], 0, 1);\n    iVar5 = (*arg_10h[4])(arg_10h[0x22], arg_8h, arg_ch);\n    if (0 < iVar5) {\n        cVar2 = arg_8h[arg_ch + -1];\n        arg_8h[arg_ch + -1] = '\\0';\n        pcVar1 = arg_8h + 1;\n        do {\n            cVar3 = *arg_8h;\n            arg_8h = arg_8h + 1;\n        } while (cVar3 != '\\0');\n        if (((arg_8h + (1 - pcVar1) < arg_ch) || (cVar2 == '\\0')) &&\n           (iVar4 = (*arg_10h[7])(arg_10h[0x22], arg_8h + iVar4 + (1 - pcVar1), 0),  iVar4 != -1)) {\n            return 1;\n        }\n    }\n    fcn.01007cde(*arg_10h, 4, 0);\n    return 0;\n}\n",
        "token_count": 325
    },
    "01006e46": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01006e46(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar2 = (*arg_8h[7])(arg_8h[0x22], 0, 1);\n    if (iVar2 == -1) {\n        fcn.01007cde(*arg_8h, 4, 0);\n        uVar3 = 0;\n    }\n    else {\n        *(arg_8h + 0x7de) = *(arg_8h + 0x2b);\n        piVar1 = arg_8h + 0x1ef;\n        *(arg_8h + 0x7da) = *(arg_8h + 0x1c);\n        *piVar1 = iVar2;\n        arg_8h[499] = arg_8h[0xe];\n        iVar4 = (*arg_8h[9])(5, piVar1);\n        if ((iVar4 == -1) ||\n           (((*(arg_8h + 0x2b) = *(arg_8h + 0x7de),  *(arg_8h + 0x7de) != 0 && (*piVar1 != iVar2)) &&\n            (iVar2 = (*arg_8h[7])(arg_8h[0x22], *piVar1, 0),  iVar2 == -1)))) {\n            fcn.01007cde(*arg_8h, 0xb, 0);\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 385
    },
    "0100735b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100735b(int32_t arg_8h)\n\n{\n    fcn.01007309(0xf, arg_8h);\n    if (*(arg_8h + 0x4c) != 0) {\n        (**(arg_8h + 4))(*(arg_8h + 0x4c));\n    }\n    if (*(arg_8h + 0x44) != 0) {\n        (**(arg_8h + 4))(*(arg_8h + 0x44));\n    }\n    if (*(arg_8h + 0x48) != 0) {\n        (**(arg_8h + 4))(*(arg_8h + 0x48));\n    }\n    if (*(arg_8h + 0x88) != -1) {\n        (**(arg_8h + 0x18))(*(arg_8h + 0x88));\n    }\n    if (*(arg_8h + 0x84) != -1) {\n        (**(arg_8h + 0x18))(*(arg_8h + 0x84));\n    }\n    (**(arg_8h + 4))(arg_8h);\n    return 1;\n}\n",
        "token_count": 274
    },
    "010073c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.010073c0(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *arg_10h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_ch_00;\n    int32_t var_24h;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_10h_00 = arg_8h;\n    iVar1 = arg_8h + 0x6ba;\n    fcn.0100160f(iVar1, 0x101, arg_8h + 0x5b9);\n    fcn.010021e6(iVar1, 0x101, arg_ch);\n    iVar1 = (*arg_10h_00[3])(arg_10h_00 + 0x6ba, 0x8000, 0x180);\n    arg_10h_00[0x22] = iVar1;\n    if (iVar1 != -1) {\n        iVar1 = (*arg_10h_00[3])(arg_10h_00 + 0x6ba, 0x8000, 0x180);\n        arg_10h_00[0x21] = iVar1;\n        if (iVar1 != -1) {\n            iVar1 = (*arg_10h_00[4])(arg_10h_00[0x22], &var_24h, 0x24);\n            if ((iVar1 != 0x24) || (var_24h != 0x4643534d)) {\ncode_r0x01007523:\n                uVar2 = 0;\n                arg_ch_00 = 2;\n                goto code_r0x01007656;\n            }\n            if (var_ch != 0x103) {\n                uVar2 = var_ch;\n                arg_ch_00 = 3;\n                goto code_r0x01007656;\n            }\n            if ((arg_14h != -1) && ((arg_10h != var_4h || (arg_14h != var_4h._2_2_)))) {\n                uVar2 = 0;\n                arg_ch_00 = 10;\n                goto code_r0x01007656;\n            }\n            puVar3 = &var_24h;\n            puVar4 = arg_10h_00 + 0x14;\n            for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            arg_8h = NULL;\n            if (((*(arg_10h_00 + 0x6e) & 4) != 0) &&\n               (iVar1 = (*arg_10h_00[4])(arg_10h_00[0x22], &arg_8h, 4),  iVar1 != 4)) goto code_r0x01007523;\n            if (arg_10h_00[0x28] != (arg_8h & 0xffff)) {\n                if (arg_10h_00[0x13] != 0) {\n                    (*arg_10h_00[1])(arg_10h_00[0x13]);\n                    arg_10h_00[0x13] = 0;\n                }\n                uVar2 = arg_8h & 0xffff;\n                arg_10h_00[0x28] = uVar2;\n                if (uVar2 == 0) goto code_r0x01007500;\n                iVar1 = (*arg_10h_00[2])(uVar2);\n                arg_10h_00[0x13] = iVar1;\n                if (iVar1 != 0) goto code_r0x01007500;\ncode_r0x01007570:\n                uVar2 = 0;\n                arg_ch_00 = 5;\n                goto code_r0x01007656;\n            }\ncode_r0x01007500:\n            if ((arg_10h_00[0x28] != 0) &&\n               (iVar1 = (*arg_10h_00[4])(arg_10h_00[0x22], arg_10h_00[0x13], arg_10h_00[0x28]), \n               arg_10h_00[0x28] != iVar1)) goto code_r0x01007523;\n            iVar1 = (arg_8h >> 0x10 & 0xff) + 8;\n            if (arg_10h_00[0x11] == 0) {\n                arg_10h_00[0x29] = iVar1;\n                iVar1 = (*arg_10h_00[2])(iVar1);\n                arg_10h_00[0x11] = iVar1;\n                if (iVar1 == 0) goto code_r0x01007570;\ncode_r0x01007552:\n                iVar1 = (arg_8h >> 0x18) + 8;\n                if (arg_10h_00[0x12] == 0) {\n                    arg_10h_00[0x2a] = iVar1;\n                    iVar1 = (*arg_10h_00[2])(iVar1);\n                    arg_10h_00[0x12] = iVar1;\n                    if (iVar1 == 0) goto code_r0x01007570;\n                }\n                else if (iVar1 != arg_10h_00[0x2a]) goto code_r0x01007580;\n                if ((*(arg_10h_00 + 0x6e) & 1) == 0) {\n                    *(arg_10h_00 + 0x1b5) = 0;\n                    *(arg_10h_00 + 0x2b6) = 0;\n                }\n                else {\n                    iVar1 = fcn.01006db8(arg_10h_00 + 0x1b5, 0x100, arg_10h_00);\n                    if (iVar1 == 0) {\n                        return false;\n                    }\n                    iVar1 = fcn.01006db8(arg_10h_00 + 0x2b6, 0x100, arg_10h_00);\n                    if (iVar1 == 0) {\n                        return false;\n                    }\n                }\n                if ((*(arg_10h_00 + 0x6e) & 2) == 0) {\n                    *(arg_10h_00 + 0x3b7) = 0;\n                    *(arg_10h_00 + 0x12e) = 0;\n                }\n                else {\n                    iVar1 = fcn.01006db8(arg_10h_00 + 0x3b7, 0x100, arg_10h_00);\n                    if (iVar1 == 0) {\n                        return false;\n                    }\n                    iVar1 = fcn.01006db8(arg_10h_00 + 0x12e, 0x100, arg_10h_00);\n                    if (iVar1 == 0) {\n                        return false;\n                    }\n                }\n                iVar1 = (*arg_10h_00[7])(arg_10h_00[0x22], 0, 1);\n                arg_10h_00[0xb] = iVar1;\n                if ((iVar1 != -1) && (iVar1 = (*arg_10h_00[7])(arg_10h_00[0x22], arg_10h_00[0x18]),  iVar1 != -1)) {\n                    *(arg_10h_00 + 0x2b) = *(arg_10h_00 + 0x1b);\n                    iVar1 = fcn.01006bce(arg_10h_00);\n                    return iVar1 != 0;\n                }\n                uVar2 = 0;\n                arg_ch_00 = 4;\n            }\n            else {\n                if (iVar1 == arg_10h_00[0x29]) goto code_r0x01007552;\ncode_r0x01007580:\n                uVar2 = 0;\n                arg_ch_00 = 9;\n            }\n            goto code_r0x01007656;\n        }\n    }\n    uVar2 = 0;\n    arg_ch_00 = 1;\ncode_r0x01007656:\n    fcn.01007cde(*arg_10h_00, arg_ch_00, uVar2);\n    return false;\n}\n",
        "token_count": 1939
    },
    "01007af5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.01007af5(uint *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, code *arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    *(arg_8h + 0xae) = 0;\n    arg_8h[0xe] = arg_20h;\n    arg_8h[9] = arg_18h;\n    arg_8h[10] = arg_1ch;\n    fcn.0100160f(arg_8h + 0x5b9, 0x101, arg_10h);\n    iVar1 = fcn.010073c0(arg_8h, arg_ch, 0, 0xffff);\n    if (iVar1 != 0) {\n        arg_8h[0x27] = 0;\n        arg_8h[0x24] = 0xffff;\n        fcn.0100160f(arg_8h + 0x5b9, 0x101, arg_10h);\n        iVar1 = fcn.01006e46(arg_8h);\n        if (iVar1 != 0) {\n            while (*(arg_8h + 0x2b) != 0) {\n                do {\n                    *(arg_8h + 0x2b) = *(arg_8h + 0x2b) + -1;\n                    iVar1 = fcn.010072b7(arg_8h);\n                    if (iVar1 == 0) goto code_r0x01007ca6;\n                    arg_8h[0x1f0] = arg_8h + 0x2d;\n                    arg_8h[0x1ef] = arg_8h[0x1d];\n                    arg_8h[0x1f1] = arg_8h + 0x1b5;\n                    arg_8h[0x1f2] = arg_8h + 0x2b6;\n                    *(arg_8h + 0x1f5) = *(arg_8h + 0x7e);\n                    *(arg_8h + 0x7d6) = *(arg_8h + 0x20);\n                    *(arg_8h + 0x1f6) = *(arg_8h + 0x82);\n                    arg_8h[499] = arg_8h[0xe];\n                    *(arg_8h + 0x7de) = *(arg_8h + 0x1f);\n                    if ((*(arg_8h + 0x1f) & 0xfffd) == 0xfffd) {\n                        if (arg_8h[0x27] == 0) {\n                            iVar1 = (*arg_18h)(1);\n                            if (iVar1 == -1) goto code_r0x01007c0c;\n                        }\n                        else {\ncode_r0x01007c4b:\n                            iVar1 = (*arg_18h)(2, arg_8h + 0x1ef);\n                            arg_8h[0x23] = iVar1;\n                            if (iVar1 == -1) {\ncode_r0x01007c0c:\n                                fcn.01007cde(*arg_8h, 0xb, 0);\n                                goto code_r0x01007ca6;\n                            }\n                            if (iVar1 == 0) {\n                                if ((*(arg_8h + 0x1f) & 0xfffe) == 0xfffe) {\n                                    *(arg_8h + 0xae) = *(arg_8h + 0xae) + 1;\n                                }\n                            }\n                            else {\n                                iVar1 = fcn.0100799f(arg_8h);\n                                if (iVar1 == 0) goto code_r0x01007ca6;\n                            }\n                        }\n                    }\n                    else if (arg_8h[0x27] == 0) {\n                        if ((*(arg_8h + 0x7de) < *(arg_8h + 0x6a)) || (0xfffb < *(arg_8h + 0x7de)))\n                        goto code_r0x01007c4b;\n                    }\n                    else {\n                        *(arg_8h + 0x2b) = 0;\n                    }\n                } while (*(arg_8h + 0x2b) != 0);\n                iVar1 = fcn.01006e46(arg_8h);\n                if (iVar1 == 0) goto code_r0x01007ca6;\n            }\n            *(arg_8h + 0x2b) = *(arg_8h + 0x2b) + -1;\n            var_4h = 1;\n        }\n    }\ncode_r0x01007ca6:\n    if (arg_8h[0x22] != -1) {\n        (*arg_8h[6])(arg_8h[0x22]);\n    }\n    iVar1 = arg_8h[0x21];\n    if (iVar1 != -1) {\n        (*arg_8h[6])(iVar1);\n    }\n    arg_8h[0x21] = -1;\n    arg_8h[0x22] = 0xffffffff;\n    return var_4h;\n}\n",
        "token_count": 1206
    },
    "01003e28": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01003e28(uint arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint hDC;\n    \n    if (arg_ch == 0x10) {\n        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 2);\n    }\n    else if (arg_ch == 0x110) {\n        hDC = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        fcn.01002d83(arg_8h, hDC);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x100bbb4);\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x838, *0x100be64);\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n    }\n    else {\n        if (arg_ch != 0x111) {\n            return 0;\n        }\n        if (5 < arg_10h) {\n            if (7 < arg_10h) {\n                if (arg_10h != 0x839) {\n                    return 1;\n                }\n                *0x100bc3c = 1;\n            }\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, arg_10h);\n            return 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 303
    },
    "010043ec": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.010043ec(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    uint var_4h;\n    \n    iVar1 = fcn.01002e55(0x10013dc, 0, 0);\n    arg_ch = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar1 + 1);\n    if (arg_ch == 0) {\n        fcn.01003ebe(0, 0x4b5, 0, 0, 0x10, 0);\n        *0x100ba5c = fcn.01003aa1();\n    }\n    else {\n        iVar1 = fcn.01002e55(0x10013dc, arg_ch, iVar1);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg_ch, 0x10013d4);\n            if (iVar1 == 0) {\n                (*_sym.imp.KERNEL32.dll_LocalFree)(arg_ch);\n            }\n            else {\n                iVar1 = fcn.01003ebe(0, 0x3e9, arg_ch, 0, 0x20, 4);\n                (*_sym.imp.KERNEL32.dll_LocalFree)(arg_ch);\n                if (iVar1 != 6) {\n                    *0x100ba5c = 0x800704c7;\n                    return 0;\n                }\n                *0x100ba5c = 0;\n            }\n            return 1;\n        }\n        fcn.01003ebe(0, 0x4b1, 0, 0, 0x10, 0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(arg_ch);\n        *0x100ba5c = 0x80070714;\n    }\n    return 0;\n}\n",
        "token_count": 413
    },
    "01008172": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01008172(int32_t arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    char *pcVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    if (arg_10h < 7) {\n        *(arg_8h + 0x2ec8) = *(arg_8h + 0x2ec8) + arg_10h;\n    }\n    else {\n        uVar3 = *(arg_ch + arg_10h + -6);\n        uVar2 = *(arg_ch + arg_10h + -2);\n        *(arg_ch + arg_10h + -6) = 0xe8e8e8e8;\n        *(arg_ch + arg_10h + -2) = 0xe8e8;\n        uVar1 = *(arg_8h + 0x2ec8) + -10 + arg_10h;\n        pcVar7 = arg_ch;\n        while( true ) {\n            for (; *pcVar7 != -0x18; pcVar7 = pcVar7 + 1) {\n                *(arg_8h + 0x2ec8) = *(arg_8h + 0x2ec8) + 1;\n            }\n            uVar4 = *(arg_8h + 0x2ec8);\n            puVar6 = pcVar7 + 1;\n            if (uVar1 <= uVar4) break;\n            uVar5 = *puVar6;\n            if (uVar5 < *(arg_8h + 0x2ec4)) {\n                *puVar6 = uVar5 - uVar4;\n            }\n            else if (-uVar5 < uVar4 || -uVar4 == uVar5) {\n                *puVar6 = *(arg_8h + 0x2ec4) + uVar5;\n            }\n            pcVar7 = pcVar7 + 5;\n            *(arg_8h + 0x2ec8) = *(arg_8h + 0x2ec8) + 5;\n        }\n        *(arg_8h + 0x2ec8) = uVar1 + 10;\n        *(arg_ch + arg_10h + -6) = uVar3;\n        *(arg_ch + arg_10h + -2) = uVar2;\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 598
    },
    "0100216f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0100216f(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if ((arg_8h & 1) == 0) {\n        uVar1 = -((arg_8h & 2) != 0) & 0x101;\n    }\n    else {\n        uVar1 = 0x104;\n    }\n    return uVar1;\n}\n",
        "token_count": 96
    },
    "0100456a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_320h\n// WARNING: Variable defined which should be unmapped: var_31ch\n// WARNING: Variable defined which should be unmapped: var_324h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0100456a(uint *arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t arg_ch_00;\n    uint32_t arg_10h_00;\n    uint *puVar5;\n    bool bVar6;\n    bool bVar7;\n    uint var_324h;\n    uint32_t var_320h;\n    uint *var_31ch;\n    int32_t var_318h;\n    uint32_t var_314h;\n    uint lpBuffer;\n    uint var_20ch;\n    uint lpString1;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    var_31ch = arg_8h;\n    var_318h = 0;\n    if (arg_ch != 0) {\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)(0x104, &fcn.0100456a::lpBuffer);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryA;\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(arg_8h);\n        if (iVar3 == 0) {\n            var_31ch = NULL;\n            var_320h = 0x10;\n            var_324h = 0;\n            fcn.01003ebe(0, 0x4bc, 0, 0, 0x10, 0);\n            *0x100ba5c = fcn.01003aa1();\n        }\n        else {\n            var_31ch = &fcn.0100456a::var_318h;\n            var_320h = 0;\n            var_324h = 0x10045eb;\n            var_314h = fcn.01006a45(0, var_31ch);\n            if (var_314h == 0) {\n                var_20ch._0_1_ = 0;\n                puVar5 = &fcn.0100456a::var_20ch + 1;\n                for (iVar3 = 0x7f; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                *puVar5 = 0;\n                *(puVar5 + 2) = 0;\n                var_324h = 0x1004610;\n                *0x100ba5c = fcn.01003aa1();\n                var_324h = 0;\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(0, &fcn.0100456a::var_20ch, 0x200);\n                (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar4);\n                uVar4 = 0x4b0;\n            }\n            else {\n                var_324h = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                                  (0, 0, 0, 0, &fcn.0100456a::var_324h, &fcn.0100456a::var_320h, 0);\n                if (iVar3 != 0) {\n                    (*pcVar1)(&fcn.0100456a::lpBuffer);\n                    (*_sym.imp.KERNEL32.dll_lstrcpynA)(&fcn.0100456a::lpString1, arg_8h, 3);\n                    iVar3 = 0x200;\n                    uVar2 = 0;\n                    do {\n                        if (var_318h == iVar3) break;\n                        iVar3 = iVar3 << 1;\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < 8);\n                    if (uVar2 == 8) {\n                        fcn.01003ebe(0, 0x4c5, 0, 0, 0x10, 0);\n                    }\n                    else {\n                        if (((*0x100c494 & 8) == 0) || ((var_320h & 0x8000) == 0)) {\n                            arg_ch_00 = *(uVar2 * 4 + 0x100cbc0);\n                            arg_10h_00 = *0x100c498;\n                        }\n                        else {\n                            arg_ch_00 = *(uVar2 * 4 + 0x100cbc0) << 1;\n                            arg_10h_00 = (*0x100c498 >> 2) + *0x100c498;\n                        }\n                        if (((arg_ch & 1) == 0) || ((arg_ch & 2) == 0)) {\n                            if ((arg_ch & 1) == 0) {\n                                bVar6 = arg_10h_00 < var_314h;\n                                bVar7 = arg_10h_00 == var_314h;\n                            }\n                            else {\n                                bVar6 = arg_ch_00 < var_314h;\n                                bVar7 = arg_ch_00 == var_314h;\n                            }\n                        }\n                        else {\n                            bVar6 = arg_10h_00 + arg_ch_00 < var_314h;\n                            bVar7 = arg_10h_00 + arg_ch_00 == var_314h;\n                        }\n                        if (bVar6 || bVar7) {\n                            *0x100ba5c = 0;\n                        }\n                        else {\n                            fcn.010020a4(arg_10h, arg_ch_00, arg_10h_00, &fcn.0100456a::lpString1);\n                        }\n                    }\n                    goto code_r0x010047a0;\n                }\n                var_20ch._0_1_ = 0;\n                puVar5 = &fcn.0100456a::var_20ch + 1;\n                for (iVar3 = 0x7f; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                *puVar5 = 0;\n                *(puVar5 + 2) = 0;\n                *0x100ba5c = fcn.01003aa1();\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(0, &fcn.0100456a::var_20ch, 0x200, 0);\n                (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar4);\n                uVar4 = 0x4f9;\n            }\n            fcn.01003ebe(0, uVar4, var_31ch, &fcn.0100456a::var_20ch, 0x10, 0);\n            (*pcVar1)(&fcn.0100456a::lpBuffer);\n        }\n    }\ncode_r0x010047a0:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 1631
    },
    "01004cae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hProcess\n// WARNING: Variable defined which should be unmapped: var_218h\n\nvoid __cdecl fcn.01004cae(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *hProcess;\n    uint var_218h;\n    uint32_t lpExitCode;\n    uint var_208h;\n    uint var_204h;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    var_208h = 1;\n    if (arg_8h != 0) {\n        hProcess = NULL;\n        var_218h = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, arg_8h, 0, 0, 0, 0x20, 0, 0, arg_ch, &hProcess);\n        if (iVar2 == 0) {\n            *0x100ba5c = fcn.01003aa1();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(0, &var_204h, 0x200, 0);\n            (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar3);\n            var_218h = 0x10;\n            hProcess = &var_204h;\n            fcn.01003ebe(0, 0x4c4, arg_8h, hProcess, 0x10, 0);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 0xffffffff);\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hProcess, &lpExitCode);\n            if ((((*0x100c888 == 0) && ((*0x100c48c & 1) != 0)) && ((*0x100c48c & 2) == 0)) &&\n               ((lpExitCode & 0xff000000) == 0xaa000000)) {\n                *0x100c48c = lpExitCode;\n            }\n            fcn.01002d03(lpExitCode);\n            pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(var_218h);\n            (*pcVar1)(hProcess);\n            if (((*0x100c495 & 4) == 0) || (-1 < lpExitCode)) goto code_r0x01004dd2;\n        }\n        var_208h = 0;\n    }\ncode_r0x01004dd2:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 608
    },
    "01005190": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.01005190(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar3 = fcn.010032ff();\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (*0x100ba4c != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x100ba4c, 0x842, 0);\n        pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar4);\n        uVar4 = (*pcVar1)(*0x100ba4c, 0x841, 5);\n        (*pcVar2)(uVar4);\n    }\n    iVar3 = fcn.010042a4(*0x100bba0);\n    if (iVar3 == 0) {\n        iVar3 = 0x4ba;\n    }\n    else {\n        iVar3 = fcn.01006aa4(fcn.01003275, fcn.0100328c, fcn.010041d8, fcn.01002fe5, fcn.01003072, fcn.01003108, \n                             fcn.01003165, 1, 0x100bba8);\n        if (iVar3 != 0) {\n            iVar5 = fcn.01007af5(iVar3, \"*MEMCAB\", 0x1001271, 0, fcn.0100502e, 0, 0x100bba0);\n            if (iVar5 == 0) goto code_r0x01005272;\n            iVar3 = fcn.0100735b(iVar3);\n            if (iVar3 != 0) goto code_r0x01005272;\n        }\n        iVar3 = *0x100bba8 + 0x514;\n    }\n    fcn.01003ebe(*0x100ba4c, iVar3, 0, 0, 0x10, 0);\n    iVar5 = 0;\ncode_r0x01005272:\n    if (*0x100bba0 != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(*0x100bba0);\n        *0x100bba0 = 0;\n    }\n    if ((iVar5 == 0) && (*0x100bc38 == 0)) {\n        fcn.01003ebe(0, 0x4f8, 0, 0, 0x10, 0);\n    }\n    if (((*0x100c898 & 1) == 0) && ((*0x100c494 & 1) == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x100ba4c, 0xfa1, iVar5, 0);\n    }\n    return iVar5;\n}\n",
        "token_count": 672
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char *arg_14h;\n    uint uVar3;\n    uint noname_1;\n    uint arg_10h;\n    uint lpStartupInfo;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.0100646b();\n    arg_14h = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    cVar1 = *arg_14h;\n    if (cVar1 != '\\\"') {\n        do {\n            if (cVar1 < '!') goto code_r0x0100641a;\n            arg_14h = arg_14h + 1;\n            cVar1 = *arg_14h;\n        } while( true );\n    }\n    do {\n        arg_14h = arg_14h + 1;\n        if (*arg_14h == '\\0') break;\n    } while (*arg_14h != '\\\"');\n    if (*arg_14h != '\\\"') goto code_r0x0100641a;\n    do {\n        arg_14h = arg_14h + 1;\ncode_r0x0100641a:\n    } while ((*arg_14h != '\\0') && (*arg_14h < '!'));\n    var_18h = 0;\n    (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(&lpStartupInfo);\n    arg_10h = 0;\n    noname_1 = 0;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    uVar3 = fcn.0100637a(uVar3, noname_1, arg_10h, arg_14h);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar3);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 412
    },
    "01006b3b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01006b3b(uint *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_24h;\n    uint var_1ch;\n    uint var_ch;\n    ushort var_8h;\n    uint16_t var_6h;\n    uint var_4h;\n    \n    iVar1 = (*arg_8h[4])(arg_ch, &var_24h, 0x24);\n    if ((iVar1 == 0x24) && (var_24h == 0x4643534d)) {\n        if (var_ch == 0x103) {\n            *arg_10h = var_1ch;\n            *(arg_10h + 1) = var_ch._2_2_;\n            *(arg_10h + 6) = var_8h;\n            *(arg_10h + 2) = var_4h;\n            *(arg_10h + 10) = var_4h._2_2_;\n            arg_10h[3] = var_6h >> 2 & 1;\n            arg_10h[4] = var_6h & 1;\n            arg_10h[5] = var_6h & 2;\n            return 1;\n        }\n        fcn.01007cde(*arg_8h, 3, var_ch);\n    }\n    return 0;\n}\n",
        "token_count": 329
    },
    "01002e55": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01002e55(uint arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindResourceA;\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, arg_8h, 10);\n    uVar3 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, uVar2);\n    if ((uVar3 <= arg_10h) && (arg_ch != NULL)) {\n        if (uVar3 != 0) {\n            uVar2 = (*pcVar1)(0, arg_8h, 10);\n            uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar2);\n            puVar4 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar2);\n            if (puVar4 != NULL) {\n                puVar6 = puVar4;\n                for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                    *arg_ch = *puVar6;\n                    puVar6 = puVar6 + 1;\n                    arg_ch = arg_ch + 1;\n                }\n                for (uVar5 = uVar3 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                    *arg_ch = *puVar6;\n                    puVar6 = puVar6 + 1;\n                    arg_ch = arg_ch + 1;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeResource)(puVar4);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 433
    },
    "01002fe5": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01002fe5(uint32_t arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    iVar1 = arg_8h * 0x18;\n    if (*(iVar1 + 0x100c4c4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(iVar1 + 0x100c4d4), arg_ch, arg_10h, &arg_10h, 0);\n        if (iVar1 == 0) {\n            return 0xffffffff;\n        }\n        return arg_10h;\n    }\n    if (*(iVar1 + 0x100c4c4) == 1) {\n        uVar3 = *(iVar1 + 0x100c4d0) - *(iVar1 + 0x100c4cc);\n        if (arg_10h < uVar3) {\n            uVar3 = arg_10h;\n        }\n        puVar4 = *(iVar1 + 0x100c4c8) + *(iVar1 + 0x100c4cc);\n        for (uVar2 = uVar3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *arg_ch = *puVar4;\n            puVar4 = puVar4 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        for (uVar2 = uVar3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *arg_ch = *puVar4;\n            puVar4 = puVar4 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        *(iVar1 + 0x100c4cc) = *(iVar1 + 0x100c4cc) + uVar3;\n        return uVar3;\n    }\n    return arg_8h;\n}\n",
        "token_count": 460
    },
    "010071a5": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010071a5(uint *arg_8h, uint16_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint uVar11;\n    \n    puVar5 = arg_ch;\n    puVar9 = arg_8h;\n    uVar6 = *(arg_8h + 0xb2) & 0xf;\n    if ((*(arg_8h + 0xb2) & 0xf) == 0) {\n        uVar4 = *(arg_8h[0x12] + 4);\n        if (uVar4 < arg_8h[0x25] || uVar4 == arg_8h[0x25]) {\n            *arg_ch = uVar4;\n            puVar9 = arg_8h[0xf];\n            puVar10 = arg_8h[0x10];\n            for (uVar8 = uVar4 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n                *puVar10 = *puVar9;\n                puVar9 = puVar9 + 1;\n                puVar10 = puVar10 + 1;\n            }\n            for (uVar8 = uVar4 & 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n                *puVar10 = *puVar9;\n                puVar9 = puVar9 + 1;\n                puVar10 = puVar10 + 1;\n            }\n            goto code_r0x0100729a;\n        }\ncode_r0x0100729f:\n        uVar11 = 7;\ncode_r0x010072a2:\n        fcn.01007cde(*puVar9, uVar11, 0);\n        uVar11 = 0;\n    }\n    else {\n        if (uVar6 == 1) {\n            piVar1 = arg_8h + 0x12;\n            puVar10 = arg_8h + 0x10;\n            puVar2 = arg_8h + 0xf;\n            puVar3 = arg_8h + 0xd;\n            arg_8h = arg_8h[0x25];\n            iVar7 = fcn.01003d51(*puVar3, *puVar2, *(*piVar1 + 4), *puVar10, &arg_8h);\n            if (iVar7 != 0) goto code_r0x0100729f;\n            *arg_ch = arg_8h;\n        }\n        else {\n            if (uVar6 != 2) {\n                if (uVar6 == 3) {\n                    piVar1 = arg_8h + 0x12;\n                    puVar10 = arg_8h + 0x10;\n                    puVar2 = arg_8h + 0xf;\n                    puVar3 = arg_8h + 0xd;\n                    arg_8h = *arg_ch;\n                    iVar7 = fcn.01007e2e(*puVar3, *puVar2, *(*piVar1 + 4), *puVar10, &arg_8h);\n                    goto code_r0x010071f9;\n                }\n                uVar11 = 6;\n                goto code_r0x010072a2;\n            }\n            piVar1 = arg_8h + 0x12;\n            puVar10 = arg_8h + 0x10;\n            puVar2 = arg_8h + 0xf;\n            puVar3 = arg_8h + 0xd;\n            arg_8h = *arg_ch;\n            iVar7 = fcn.01003d51(*puVar3, *puVar2, *(*piVar1 + 4), *puVar10, &arg_8h);\ncode_r0x010071f9:\n            if (iVar7 != 0) goto code_r0x0100729f;\n            *puVar5 = arg_8h;\n        }\ncode_r0x0100729a:\n        uVar11 = 1;\n    }\n    return uVar11;\n}\n",
        "token_count": 969
    },
    "01007d01": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01007d01(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    for (uVar2 = arg_ch >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        uVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        arg_10h = arg_10h ^ uVar1;\n    }\n    arg_ch = arg_ch & 3;\n    uVar2 = 0;\n    if (arg_ch != 1) {\n        if (arg_ch != 2) {\n            if (arg_ch != 3) goto code_r0x01007d5f;\n            uVar2 = *arg_8h << 0x10;\n            arg_8h = arg_8h + 1;\n        }\n        uVar2 = uVar2 | *arg_8h << 8;\n        arg_8h = arg_8h + 1;\n    }\n    uVar2 = uVar2 | *arg_8h;\ncode_r0x01007d5f:\n    return uVar2 ^ arg_10h;\n}\n",
        "token_count": 289
    },
    "0100807b": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0100807b(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    uVar1 = *(arg_8h + 0x2eb5) * 8 + 0x100;\n    if (0x29f < uVar1) {\n        uVar1 = 0x2a0;\n    }\n    puVar3 = arg_8h + 0xa18;\n    for (uVar1 = uVar1 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    for (iVar2 = 0; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    uVar1 = *(arg_8h + 0x2eb5) * 8 + 0x100;\n    if (0x29f < uVar1) {\n        uVar1 = 0x2a0;\n    }\n    puVar3 = arg_8h + 0x2b14;\n    for (uVar1 = uVar1 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    for (iVar2 = 0; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puVar3 = arg_8h + 0xcb8;\n    for (iVar2 = 0x3e; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    puVar3 = arg_8h + 0x2db4;\n    for (iVar2 = 0x3e; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    return;\n}\n",
        "token_count": 547
    },
    "01009982": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01009982(uint noname_0, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int16_t iVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int16_t *piVar9;\n    uint32_t uVar10;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    uint32_t *puVar14;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t auStack88 [15];\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    puVar13 = &var_9ch;\n    for (iVar7 = 0x10; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    uVar8 = 0;\n    if (arg_ch != 0) {\n        do {\n            (&var_a0h)[*(uVar8 + arg_10h)] = (&var_a0h)[*(uVar8 + arg_10h)] + 1;\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < arg_ch);\n    }\n    uVar10 = 1;\n    var_58h = 0;\n    uVar8 = uVar10;\n    do {\n        piVar3 = &var_a0h + uVar8;\n        cVar4 = uVar8;\n        piVar1 = &var_5ch + uVar8;\n        uVar8 = uVar8 + 1;\n        (&var_5ch)[uVar8] = (*piVar3 << (0x10U - cVar4 & 0x1f)) + *piVar1;\n    } while (uVar8 < 0x11);\n    if (var_18h != 0x10000) {\n        if (var_18h == 0) {\n            uVar8 = (1 << (arg_14h & 0x1f)) << 1;\n            for (uVar10 = uVar8 >> 2; uVar10 != 0; uVar10 = uVar10 - 1) {\n                *arg_18h = 0;\n                arg_18h = arg_18h + 1;\n            }\n            for (uVar8 = uVar8 & 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n                *arg_18h = 0;\n                arg_18h = arg_18h + 1;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    uVar12 = arg_14h;\n    uVar11 = 0x10 - arg_14h;\n    var_10h = uVar12;\n    uVar8 = uVar12;\n    if (uVar12 != 0) {\n        do {\n            (&var_5ch)[uVar10] = (&var_5ch)[uVar10] >> (uVar11 & 0x1f);\n            uVar10 = uVar10 + 1;\n            *(&stack0xffffff58 + uVar10 * 4) = 1 << (uVar8 - 1 & 0x1f);\n            uVar8 = uVar8 - 1;\n        } while (uVar10 <= uVar12);\n        if (0x10 < uVar10) goto code_r0x01009a69;\n    }\n    iVar7 = 0x10 - uVar10;\n    do {\n        uVar6 = iVar7;\n        uVar10 = uVar10 + 1;\n        iVar7 = iVar7 + -1;\n        *(&stack0xffffff58 + uVar10 * 4) = 1 << (uVar6 & 0x1f);\n    } while (uVar10 < 0x11);\ncode_r0x01009a69:\n    uVar8 = auStack88[uVar12 - 1] >> (uVar11 & 0x1f);\n    var_14h = uVar11;\n    if (uVar8 != 0x10000) {\n        uVar10 = ((1 << (arg_14h & 0x1f)) - uVar8) * 2;\n        puVar13 = arg_18h + uVar8 * 2;\n        for (uVar12 = uVar10 >> 2; uVar12 != 0; uVar12 = uVar12 - 1) {\n            *puVar13 = 0;\n            puVar13 = puVar13 + 1;\n        }\n        for (uVar10 = uVar10 & 3; uVar10 != 0; uVar10 = uVar10 - 1) {\n            *puVar13 = 0;\n            puVar13 = puVar13 + 1;\n        }\n    }\n    var_8h = arg_ch;\n    var_ch = 0;\n    if (0 < arg_ch) {\n        do {\n            uVar8 = var_14h;\n            uVar11 = *(var_ch + arg_10h);\n            if (uVar11 != 0) {\n                puVar2 = &var_5ch + uVar11;\n                uVar10 = *puVar2;\n                uVar12 = (&var_a0h)[uVar11] + uVar10;\n                if (arg_14h < uVar11) {\n                    var_1h._0_1_ = uVar11 - arg_14h;\n                    *puVar2 = uVar12;\n                    iVar7 = uVar10 << (var_10h & 0x1f);\n                    piVar9 = arg_18h + (uVar10 >> (uVar8 & 0x1f)) * 2;\n                    do {\n                        if (*piVar9 == 0) {\n                            *(var_8h * 4 + 2 + arg_1ch) = 0;\n                            *(var_8h * 4 + arg_1ch) = 0;\n                            iVar5 = var_8h;\n                            var_8h = var_8h + 1;\n                            *piVar9 = -iVar5;\n                        }\n                        piVar9 = arg_1ch + *piVar9 * -4;\n                        if (iVar7 < 0) {\n                            piVar9 = piVar9 + 1;\n                        }\n                        iVar7 = iVar7 << 1;\n                        var_1h._0_1_ = var_1h + -1;\n                    } while (var_1h != '\\0');\n                    *piVar9 = var_ch;\n                }\n                else {\n                    if (1 << (var_10h & 0x1f) < uVar12) {\n                        return 0;\n                    }\n                    if (uVar10 < uVar12) {\n                        puVar14 = arg_18h + uVar10 * 2;\n                        for (uVar8 = uVar12 - uVar10 >> 1; uVar8 != 0; uVar8 = uVar8 - 1) {\n                            *puVar14 = var_ch & 0xffff | var_ch << 0x10;\n                            puVar14 = puVar14 + 1;\n                        }\n                        for (uVar8 = (uVar12 - uVar10 & 1) != 0; uVar8 != 0; uVar8 = uVar8 - 1) {\n                            *puVar14 = var_ch & 0xffff;\n                            puVar14 = puVar14 + 2;\n                        }\n                    }\n                    *puVar2 = uVar12;\n                }\n            }\n            var_ch = var_ch + 1;\n        } while (var_ch < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 1864
    },
    "01009b93": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01009b93(uint noname_0, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint16_t uVar10;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint8_t var_4dh;\n    int16_t var_4ch;\n    uint var_4ah;\n    uint var_3ch;\n    uint16_t var_28h;\n    uint var_26h;\n    int16_t var_6h;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    iVar9 = 8;\n    puVar3 = &var_4ah;\n    for (iVar6 = iVar9; puVar7 = arg_ch,  iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    do {\n        (&var_4ch)[*puVar7] = (&var_4ch)[*puVar7] + 1;\n        iVar9 = iVar9 + -1;\n        puVar7 = puVar7 + 1;\n    } while (iVar9 != 0);\n    uVar5 = 0xf;\n    iVar6 = 0;\n    var_26h._0_2_ = 0;\n    iVar9 = 0x10;\n    do {\n        uVar2 = uVar5 & 0x1f;\n        uVar5 = uVar5 - 1;\n        *(&var_26h + iVar6 + 2) = (*(&var_4ah + iVar6) << uVar2) + *(&var_26h + iVar6);\n        iVar6 = iVar6 + 2;\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    if (var_6h == 0) {\n        uVar5 = 6;\n        iVar9 = 7;\n        iVar6 = 0;\n        do {\n            *(&var_26h + iVar6) = *(&var_26h + iVar6) >> 9;\n            uVar2 = uVar5 & 0x1f;\n            uVar5 = uVar5 - 1;\n            iVar9 = iVar9 + -1;\n            *(&var_4ah + iVar6) = 1 << uVar2;\n            iVar6 = iVar6 + 2;\n        } while (iVar9 != 0);\n        uVar5 = 8;\n        puVar3 = &var_3ch;\n        iVar6 = 9;\n        do {\n            uVar2 = uVar5 & 0x1f;\n            uVar5 = uVar5 - 1;\n            *puVar3 = 1 << uVar2;\n            puVar3 = puVar3 + 2;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        puVar3 = arg_10h;\n        for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        var_4dh = 0;\n        do {\n            uVar5 = arg_ch[var_4dh];\n            if (uVar5 != 0) {\n                uVar1 = (&var_28h)[uVar5];\n                uVar10 = (&var_4ch)[uVar5] + uVar1;\n                if (0x80 < uVar10) break;\n                if (uVar1 < uVar10) {\n                    uVar4 = uVar10 - uVar1;\n                    puVar3 = uVar1 + arg_10h;\n                    for (uVar8 = (uVar4 & 0xffff) >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n                        *puVar3 = CONCAT22(CONCAT11(var_4dh, var_4dh), CONCAT11(var_4dh, var_4dh));\n                        puVar3 = puVar3 + 1;\n                    }\n                    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                        *puVar3 = var_4dh;\n                        puVar3 = puVar3 + 1;\n                    }\n                }\n                (&var_28h)[uVar5] = uVar10;\n            }\n            var_4dh = var_4dh + 1;\n        } while (var_4dh < 8);\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 1114
    },
    "0100678f": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0100678f(char *arg_8h, int32_t *arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    pcVar1 = arg_8h;\n    do {\n        cVar2 = *pcVar1;\n        if ((cVar2 < '0') || ('9' < cVar2)) {\n            if ('`' < cVar2) {\n                cVar2 = cVar2 + -0x20;\n            }\n            iVar3 = cVar2 + -0x37;\n            if ((iVar3 < 10) || (0xf < iVar3)) {\n                *arg_ch = iVar4;\n                return pcVar1 != arg_8h;\n            }\n        }\n        else {\n            iVar4 = iVar4 + -3;\n            iVar3 = cVar2;\n        }\n        iVar4 = iVar4 * 0x10 + iVar3;\n        pcVar1 = (*_sym.imp.USER32.dll_CharNextA)(pcVar1);\n    } while( true );\n}\n",
        "token_count": 250
    },
    "01003bb6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01003bb6(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0x200;\n    uVar1 = 0;\n    do {\n        *(uVar1 + 0x100cbc0) = *(uVar1 + 0x100cbc0) + (-(arg_8h % uVar2 != 0) & uVar2) + (arg_8h / uVar2) * uVar2;\n        uVar1 = uVar1 + 4;\n        uVar2 = uVar2 << 1;\n    } while (uVar1 < 0x20);\n    return 1;\n}\n",
        "token_count": 163
    },
    "01008646": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01008646(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    *(arg_8h + 0x2b04) = *(arg_8h + 0x2b04) + -2;\n    if (*(arg_8h + 0x2b04) + 4U < *(arg_8h + 0x2b08)) {\n        puVar2 = arg_8h + 0xc;\n        iVar3 = 3;\n        do {\n            *puVar2 = **(arg_8h + 0x2b04);\n            *(arg_8h + 0x2b04) = *(arg_8h + 0x2b04) + 4;\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 244
    },
    "0100168d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0100168d(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((arg_ch < in_EAX) || (arg_8h < arg_ch - in_EAX)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (in_EAX - arg_ch) + arg_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 107
    },
    "010016b4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.010016b4(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint hLibModule;\n    uint pSid;\n    uint var_10h;\n    uint pIdentifierAuthority;\n    uchar var_8h;\n    uchar var_7h;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    var_10h = 0;\n    pIdentifierAuthority._0_1_ = 0;\n    pIdentifierAuthority._1_1_ = 0;\n    pIdentifierAuthority._2_1_ = 0;\n    pIdentifierAuthority._3_1_ = 0;\n    var_8h = 0;\n    var_7h = 5;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x1001264);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x100124c);\n        if (pcVar2 != NULL) {\n            var_10h = 1;\n            *arg_8h = 0;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                              (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid);\n            if (iVar3 != 0) {\n                (*pcVar2)(0, pSid, arg_8h);\n                (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 412
    },
    "01001cf4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "persist via Run registry key",
            "get common file path",
            "query or enumerate registry value",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.01001cf4(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpcbData;\n    uint hKey;\n    uint lpString;\n    uint lpBuffer;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    if (*0x100b2e0 != '\\0') {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0x2001f, &hKey);\n        if (iVar1 == 0) {\n            lpcbData = 0x238;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x100b2e0, 0, 0, &lpString, &lpcbData);\n            if (iVar1 == 0) {\n                lpBuffer._0_1_ = 0;\n                puVar2 = &lpBuffer + 1;\n                for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                *puVar2 = 0;\n                *(puVar2 + 2) = 0;\n                iVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n                if (iVar1 != 0) {\n                    fcn.010066cf(&lpBuffer, 0x104, 0x1001271);\n                }\n                (*_sym.imp.USER32.dll_wsprintfA)\n                          (&lpString, \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\", &lpBuffer, 0x100bc44);\n                iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString);\n                (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0x100b2e0, 0, 1, &lpString, iVar1 + 1);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 528
    },
    "01003ac7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01003ac7(code *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint hModule;\n    uint var_4h;\n    \n    pcVar3 = _sym.imp.USER32.dll_wsprintfA;\n    var_4h = *0x100b2d0;\n    var_20h = 0;\n    (*_sym.imp.USER32.dll_wsprintfA)(&hModule, 0x1001350, 0);\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, &hModule, 10);\n    do {\n        if (iVar4 == 0) {\ncode_r0x01003ba0:\n            fcn.010064de();\n            return;\n        }\n        uVar5 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, iVar4);\n        puVar6 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar5);\n        if (puVar6 == NULL) {\n            *0x100ba5c = 0x80070714;\n            goto code_r0x01003ba0;\n        }\n        uVar5 = *puVar6;\n        uVar2 = puVar6[1];\n        puVar1 = puVar6 + 2;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar1);\n        iVar4 = (*arg_8h)(uVar5, uVar2, puVar1, iVar4 + 1 + puVar1);\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(puVar6);\n            goto code_r0x01003ba0;\n        }\n        (*_sym.imp.KERNEL32.dll_FreeResource)();\n        var_20h = var_20h + 1;\n        (*pcVar3)(&hModule, 0x1001350, var_20h);\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, &hModule, 10);\n    } while( true );\n}\n",
        "token_count": 519
    },
    "01004e73": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "link function at runtime on Windows",
            "get common file path"
        ],
        "decompiled_code": "\nbool __cdecl fcn.01004e73(uint arg_8h, uint arg_ch, char *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint arg_ch_00;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    code *var_20h;\n    uint var_1ch;\n    int32_t hLibModule;\n    code *var_10h;\n    code *var_ch;\n    code *var_8h;\n    char *var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"SHELL32.DLL\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    hLibModule = iVar2;\n    if (iVar2 == 0) {\n        arg_ch_00 = 0x4c2;\n    }\n    else {\n        var_8h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"SHBrowseForFolder\");\n        if (((var_8h != NULL) && (var_10h = (*pcVar1)(iVar2, 0xc3),  var_10h != NULL)) &&\n           (var_ch = (*pcVar1)(iVar2, \"SHGetPathFromIDList\"),  var_ch != NULL)) {\n            if (*0x100ba80 == '\\0') {\n                (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104, 0x100ba80);\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x100ba80);\n                pcVar1 = _sym.imp.USER32.dll_CharPrevA;\n                var_4h = (*_sym.imp.USER32.dll_CharPrevA)(0x100ba80, iVar2 + 0x100ba80);\n                if ((*var_4h == '\\\\') && (pcVar3 = (*pcVar1)(0x100ba80, var_4h),  *pcVar3 != ':')) {\n                    *var_4h = '\\0';\n                }\n            }\n            var_34h = arg_8h;\n            var_28h = arg_ch;\n            *arg_10h = '\\0';\n            var_30h = 0;\n            var_2ch = 0;\n            var_24h = 1;\n            var_20h = fcn.01002d5a;\n            var_1ch = 0x100ba80;\n            iVar2 = (*var_8h)(&var_34h);\n            if (iVar2 != 0) {\n                (*var_ch)(iVar2, 0x100ba80);\n                if (*0x100ba80 != '\\0') {\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_10h, 0x100ba80);\n                }\n                (*var_10h)(iVar2);\n            }\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n            return *arg_10h != '\\0';\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n        arg_ch_00 = 0x4c1;\n    }\n    fcn.01003ebe(arg_8h, arg_ch_00, 0, 0, 0x10, 0);\n    return false;\n}\n",
        "token_count": 749
    },
    "010052d4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create directory",
            "delete directory",
            "get system information on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpSystemInfo\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.010052d4(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    uint lpSystemInfo;\n    uint lpString2;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    if (arg_ch == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x100bc44, arg_8h);\n    }\n    else {\n        iVar1 = fcn.0100342e(arg_8h, &lpString2, 0x104);\n        if (iVar1 == 0) goto code_r0x010053e6;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x100bc44, &lpString2);\n        if ((*0x100c494 & 0x20) != 0) {\n            (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n            if (lpSystemInfo == 0) {\n                arg_10h_00 = 0x1001408;\n            }\n            else if (lpSystemInfo == 1) {\n                arg_10h_00 = 0x1001410;\n            }\n            else if (lpSystemInfo == 2) {\n                arg_10h_00 = 0x1001418;\n            }\n            else {\n                if (lpSystemInfo != 3) goto code_r0x01005371;\n                arg_10h_00 = 0x1001420;\n            }\n            fcn.010066cf(0x100bc44, 0x104, arg_10h_00);\n        }\ncode_r0x01005371:\n        fcn.010066cf(0x100bc44, 0x104, 0x1001271);\n    }\n    iVar1 = fcn.010044bd(0x100bc44);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x100bc44, 0);\n        if (iVar1 == 0) {\n            *0x100ba5c = fcn.01003aa1();\n            goto code_r0x010053e6;\n        }\n        *0x100c880 = 1;\n    }\n    iVar1 = fcn.0100456a(0x100bc44, arg_10h, 0);\n    if (iVar1 == 0) {\n        if (*0x100c880 != 0) {\n            *0x100c880 = 0;\n            (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(0x100bc44);\n        }\n    }\n    else {\n        *0x100ba5c = 0;\n    }\ncode_r0x010053e6:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 666
    },
    "01006205": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "link function at runtime on Windows",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nvoid fcn.01006205(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint lpLibFileName;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    if (*0x100c898 == 0) {\n        if (*0x100c884 == 0) {\n            iVar1 = fcn.010043ec();\n            if (iVar1 == 0) goto code_r0x0100636a;\n            if (*0x100c898 != 0) goto code_r0x01006247;\n        }\n        iVar1 = fcn.01004bc8();\n        if (iVar1 == 0) goto code_r0x0100636a;\n    }\ncode_r0x01006247:\n    iVar1 = fcn.0100435e();\n    if ((iVar1 != 0) && (iVar1 = fcn.01005f21(),  iVar1 != 0)) {\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpLibFileName, 0x105);\n        fcn.010066cf(&lpLibFileName, 0x105, 0x1001264);\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n        if ((iVar1 != 0) && (pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x10014a8),  pcVar2 != NULL)) {\n            (*pcVar2)(0x100bc44, 0);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n        if (((*0x100c884 != 0) || (*0x100c490 != 0)) || (iVar1 = fcn.010047b3(),  iVar1 != 0)) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x100bc44);\n            if (iVar1 == 0) {\n                fcn.01003ebe(0, 0x4bc, 0, 0, 0x10, 0);\n                *0x100ba5c = fcn.01003aa1();\n            }\n            else if ((*0x100c88c != 0) || (iVar1 = fcn.01005a36(),  iVar1 != 0)) {\n                if ((*0x100cba8 & 0xc0) == 0) {\n                    *0x100bb84 = fcn.01001f93(*0x100ba64);\n                }\n                else {\n                    *0x100bb84 = 0;\n                }\n                if ((((*0x100c884 != 0) || (*0x100c490 != 0)) || (iVar1 = fcn.01005abc(),  iVar1 != 0)) &&\n                   ((*0x100c898 == 0 && (*0x100c884 == 0)))) {\n                    fcn.01004de5();\n                }\n            }\n        }\n    }\ncode_r0x0100636a:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 688
    },
    "010069ea": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010069ea(char *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpTotalNumberOfClusters;\n    uint lpNumberOfFreeClusters;\n    int32_t lpSectorsPerCluster;\n    int32_t lpBytesPerSector;\n    \n    lpSectorsPerCluster = 0;\n    lpBytesPerSector = 0;\n    lpNumberOfFreeClusters = 0;\n    lpTotalNumberOfClusters = 0;\n    if ((*arg_8h != '\\0') &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (arg_8h, &lpSectorsPerCluster, &lpBytesPerSector, &lpNumberOfFreeClusters, \n                           &lpTotalNumberOfClusters),  iVar1 != 0)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpBytesPerSector * lpSectorsPerCluster, lpNumberOfFreeClusters, 0x400);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 227
    },
    "01001aa7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.01001aa7(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpcbData;\n    uint var_21ch;\n    uint32_t var_218h;\n    uint hKey;\n    int32_t hLibModule;\n    uint lpLibFileName;\n    uint lpFilename;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    lpFilename._0_1_ = 0;\n    puVar5 = &lpFilename + 1;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    lpLibFileName._0_1_ = 0;\n    puVar5 = &lpLibFileName + 1;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_218h = 0;\n    iVar4 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0, 0, 0x2001f, 0, &hKey, \n                       &var_21ch);\n    if (iVar4 != 0) goto code_r0x01001ce4;\n    hLibModule = 0;\n    do {\n        (*_sym.imp.USER32.dll_wsprintfA)(0x100b2e0, \"wextract_cleanup%d\", hLibModule);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x100b2e0, 0, 0, 0, &lpcbData);\n        pcVar1 = _sym.imp.KERNEL32.dll_GetSystemDirectoryA;\n        if (iVar4 != 0) break;\n        hLibModule = hLibModule + 1;\n    } while (hLibModule < 200);\n    if (hLibModule == 200) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        *0x100b2e0 = 0;\n        goto code_r0x01001ce4;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpLibFileName, 0x104);\n    fcn.010066cf(&lpLibFileName, 0x104, 0x1001298);\n    hLibModule = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    if (hLibModule == 0) {\ncode_r0x01001c1a:\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x100c4a4, &lpFilename, 0x104);\n        if (iVar4 != 0) goto code_r0x01001c32;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, 0x1001288);\n        var_218h = iVar4 != 0;\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n        if ((iVar4 != 0) == 0) goto code_r0x01001c1a;\n        iVar4 = (*pcVar1)(&lpFilename, 0x104);\n        if (iVar4 != 0) {\n            fcn.010066cf(&lpFilename, 0x104, 0x1001271);\n        }\ncode_r0x01001c32:\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x100bc44);\n        iVar2 = (*pcVar1)(&lpFilename);\n        iVar4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar4 + 0x50 + iVar2);\n        if (iVar4 != 0) {\n            *0x100b330 = var_218h == 0;\n            pcVar3 = \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\";\n            if (var_218h == 0) {\n                pcVar3 = \"%s /D:%s\";\n            }\n            (*_sym.imp.USER32.dll_wsprintfA)(iVar4, pcVar3, &lpFilename, 0x100bc44);\n            iVar2 = (*pcVar1)(iVar4);\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0x100b2e0, 0, 1, iVar4, iVar2 + 1);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar4);\n            goto code_r0x01001ce4;\n        }\n        fcn.01003ebe(0, 0x4b5, 0, 0, 0x10, 0);\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\ncode_r0x01001ce4:\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 1258
    },
    "0100207f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100207f(uint arg_8h, uint ARG_0)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(ARG_0, 0x10012b0, arg_8h);\n    return ARG_0;\n}\n",
        "token_count": 59
    },
    "010021e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010021e6(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_ch;\n    iVar2 = fcn.01001651(arg_8h, arg_ch, &arg_ch);\n    if (-1 < iVar2) {\n        fcn.0100160f(arg_ch + arg_8h, iVar1 - arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "01002d83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01002d83(uint hWnd, uint hDC)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &var_2ch);\n    var_24h = var_24h - var_2ch;\n    var_20h = var_20h - var_28h;\n    (*pcVar1)(hDC, &var_1ch);\n    var_8h = var_10h - var_18h;\n    var_14h = var_14h - var_1ch;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(hWnd);\n    var_4h = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 8);\n    var_ch = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 10);\n    (*_sym.imp.USER32.dll_ReleaseDC)(hWnd, uVar2);\n    var_1ch = (var_14h - var_24h) / 2 + var_1ch;\n    if (var_1ch < 0) {\n        var_1ch = 0;\n    }\n    else if (var_4h < var_1ch + var_24h) {\n        var_1ch = var_4h - var_24h;\n    }\n    var_18h = (var_8h - var_20h) / 2 + var_18h;\n    if (var_18h < 0) {\n        var_18h = 0;\n    }\n    else if (var_ch < var_18h + var_20h) {\n        var_18h = var_ch - var_20h;\n    }\n    (*_sym.imp.USER32.dll_SetWindowPos)(hWnd, 0, var_1ch, var_18h, 0, 0, 5);\n    return;\n}\n",
        "token_count": 540
    },
    "01005a36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.01005a36(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = 0;\n    do {\n        *(uVar1 + 0x100c4c0) = 1;\n        uVar1 = uVar1 + 0x18;\n    } while (uVar1 < 0x3c0);\n    if (((*0x100c898 & 1) == 0) && ((*0x100c494 & 1) == 0)) {\n        iVar2 = fcn.01004819(*0x100c4a4, 0x7d5 - (*0x100b2c4 != 0), 0, fcn.0100589b, 0, 0);\n    }\n    else {\n        iVar2 = fcn.01005190();\n    }\n    if (iVar2 == 0) {\n        *0x100ba5c = 0x8007042b;\n    }\n    else {\n        iVar2 = fcn.01003ac7(fcn.01003bf2);\n        if (iVar2 != 0) {\n            *0x100ba5c = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 281
    },
    "01006666": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01006666(char *lpString)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    pcVar1 = _sym.imp.USER32.dll_CharPrevA;\n    pcVar3 = (*_sym.imp.USER32.dll_CharPrevA)(lpString, lpString + iVar2);\n    do {\n        pcVar3 = (*pcVar1)(lpString, pcVar3);\n        if (pcVar3 <= lpString) {\n            if (*pcVar3 != '\\\\') {\n                return 0;\n            }\n            break;\n        }\n    } while (*pcVar3 != '\\\\');\n    if ((pcVar3 == lpString) || (pcVar4 = (*pcVar1)(lpString, pcVar3),  *pcVar4 == ':')) {\n        pcVar3 = (*_sym.imp.USER32.dll_CharNextA)(pcVar3);\n    }\n    *pcVar3 = '\\0';\n    return 1;\n}\n",
        "token_count": 248
    },
    "010072b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010072b7(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*arg_8h[4])(arg_8h[0x22], arg_8h + 0x1d, 0x10);\n    if ((iVar1 == 0x10) && (iVar1 = fcn.01006db8(arg_8h + 0x2d, 0x100, arg_8h),  iVar1 != 0)) {\n        return 1;\n    }\n    fcn.01007cde(*arg_8h, 4, 0);\n    return 0;\n}\n",
        "token_count": 149
    },
    "01007d6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.01007d6c(int32_t *arg_8h, uint *arg_ch, code *arg_10h, code *arg_14h, int32_t *arg_18h, uint *arg_1ch, uint arg_20h\n            , uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    *arg_18h = *arg_8h + 0x1800;\n    if (arg_1ch == NULL) {\n        return arg_1ch;\n    }\n    *arg_1ch = 0;\n    puVar1 = (*arg_10h)(0x2c);\n    if (puVar1 != NULL) {\n        iVar2 = (*arg_10h)(0x2efc);\n        puVar1[10] = iVar2;\n        if (iVar2 != 0) {\n            puVar1[4] = arg_24h;\n            puVar1[5] = arg_28h;\n            puVar1[6] = arg_2ch;\n            puVar1[7] = arg_30h;\n            puVar1[1] = arg_10h;\n            puVar1[2] = arg_14h;\n            puVar1[3] = arg_20h;\n            puVar1[8] = *arg_8h;\n            puVar1[9] = arg_ch[1];\n            *puVar1 = 0x4349444c;\n            iVar2 = fcn.01007f7f(iVar2, *arg_ch, arg_10h, arg_14h, arg_20h, arg_24h, arg_28h, arg_2ch, arg_30h);\n            if (iVar2 != 0) {\n                *arg_1ch = puVar1;\n            }\n            else {\n                (*arg_14h)(puVar1);\n            }\n            return iVar2 == 0;\n        }\n        (*arg_14h)(puVar1);\n    }\n    return 0x1;\n}\n",
        "token_count": 474
    },
    "01007f1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.01007f1c(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint noname_5, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    \n    *(arg_8h + 0x2b04) = arg_10h;\n    *(arg_8h + 0x2b08) = arg_10h + 4 + arg_14h;\n    *(arg_8h + 0x2b0c) = arg_18h;\n    fcn.010084bd(arg_8h);\n    iVar1 = fcn.01008237(arg_8h, arg_ch);\n    *(arg_8h + 0x2ecc) = *(arg_8h + 0x2ecc) + 1;\n    if (-1 < iVar1) {\n        *arg_20h = iVar1;\n        *(arg_8h + 0x2b10) = *(arg_8h + 0x2b10) + iVar1;\n    }\n    else {\n        *arg_20h = 0;\n    }\n    return -1 >= iVar1;\n}\n",
        "token_count": 278
    },
    "01007ff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.01007ff8(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    *(arg_8h + 0x2eb5) = 4;\n    uVar2 = 4;\n    do {\n        uVar2 = uVar2 + (1 << (*(*(arg_8h + 0x2eb5) + 0x10014e0) & 0x1f));\n        *(arg_8h + 0x2eb5) = *(arg_8h + 0x2eb5) + 1;\n    } while (uVar2 < arg_8h[1]);\n    iVar1 = (*arg_8h[3000])(arg_8h[1] + 0x105);\n    *arg_8h = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 200
    },
    "010084cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010084cd(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    char cVar4;\n    uint16_t *puVar5;\n    \n    *(arg_8h + 0x2eb4) = *(arg_8h + 0x2eb4) - arg_ch;\n    *(arg_8h + 0x2eb0) = *(arg_8h + 0x2eb0) << (arg_ch & 0x1f);\n    cVar1 = *(arg_8h + 0x2eb4);\n    if (cVar1 < '\\x01') {\n        puVar2 = *(arg_8h + 0x2b04);\n        if (puVar2 < *(arg_8h + 0x2b08)) {\n            cVar4 = cVar1 + '\\x10';\n            uVar3 = *puVar2;\n            puVar5 = puVar2 + 1;\n            *(arg_8h + 0x2b04) = puVar5;\n            *(arg_8h + 0x2eb4) = cVar4;\n            *(arg_8h + 0x2eb0) = uVar3 << (-cVar1 & 0x1fU) | *(arg_8h + 0x2eb0);\n            if (cVar4 < '\\x01') {\n                if (puVar5 < *(arg_8h + 0x2b08)) {\n                    uVar3 = *puVar5;\n                    *(arg_8h + 0x2b04) = puVar2 + 2;\n                    *(arg_8h + 0x2eb0) = *(arg_8h + 0x2eb0) | uVar3 << (-cVar4 & 0x1fU);\n                    *(arg_8h + 0x2eb4) = cVar1 + ' ';\n                }\n                else {\n                    *(arg_8h + 0x2ebc) = 1;\n                }\n            }\n        }\n        else {\n            *(arg_8h + 0x2ebc) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 509
    },
    "010085b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010085b5(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = arg_ch;\n    puVar2 = arg_8h[0xac1];\n    uVar1 = arg_ch + arg_10h;\n    uVar4 = arg_ch;\n    if (arg_ch < uVar1) {\n        do {\n            if ((arg_8h[0xac2] <= puVar2) || (arg_8h[1] + 0x105 <= arg_ch)) {\n                return -1;\n            }\n            *(arg_ch + *arg_8h) = *puVar2;\n            arg_ch = arg_ch + 1;\n            puVar2 = puVar2 + 1;\n            uVar4 = arg_ch;\n        } while (arg_ch < uVar1);\n    }\n    arg_8h[0xac1] = puVar2;\n    arg_ch = 0x101;\n    if (uVar1 < 0x102) {\n        arg_ch = uVar1;\n    }\n    for (; uVar3 < arg_ch; uVar3 = uVar3 + 1) {\n        *(arg_8h[1] + *arg_8h + uVar3) = *(*arg_8h + uVar3);\n    }\n    arg_8h[0xbb0] = arg_8h[2] & uVar4;\n    return uVar4 - uVar1;\n}\n",
        "token_count": 365
    },
    "01001edf": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01001edf(uint phkResult, uint lpValueName)\n\n{\n    int32_t iVar1;\n    uint lpcbData;\n    \n    lpcbData = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000002, phkResult, 0, 0x20019, &phkResult);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(phkResult, lpValueName, 0, 0, 0, &lpcbData);\n        if (iVar1 != 0) {\n            lpcbData = 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return lpcbData;\n}\n",
        "token_count": 185
    },
    "01001f37": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01001f37(uint phkResult)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000002, phkResult, 0, 0x20019, &phkResult);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyA)(phkResult, 0, 0, 0, 0, 0, 0, &var_4h, 0, 0, 0, 0);\n        if (iVar1 != 0) {\n            var_4h = 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return var_4h;\n}\n",
        "token_count": 202
    },
    "01002c91": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01002c91(uint pHandles)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    int32_t var_1ch;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    var_4h = 0;\n    do {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_MsgWaitForMultipleObjects)(1, &pHandles, 0, 0xffffffff, 0xff);\n            if (iVar2 == 0) {\n                return;\n            }\n            iVar2 = (*pcVar1)(&lpMsg, 0, 0, 0, 1);\n        } while (iVar2 == 0);\n        do {\n            if (var_1ch == 0x12) {\n                var_4h = 1;\n            }\n            else {\n                (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            }\n            iVar2 = (*pcVar1)(&lpMsg, 0, 0, 0, 1);\n        } while (iVar2 != 0);\n    } while (var_4h == 0);\n    return;\n}\n",
        "token_count": 271
    },
    "01006aa4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.01006aa4(code *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = (*arg_8h)(0x804);\n    if (puVar1 == NULL) {\n        fcn.01007cde(arg_28h, 5, 0);\n        puVar1 = NULL;\n    }\n    else {\n        puVar1[0x22] = 0xffffffff;\n        puVar1[0x21] = 0xffffffff;\n        puVar1[1] = arg_ch;\n        puVar1[3] = arg_10h;\n        puVar1[4] = arg_14h;\n        puVar1[5] = arg_18h;\n        puVar1[6] = arg_1ch;\n        puVar1[7] = arg_20h;\n        puVar1[8] = arg_24h;\n        puVar1[0x12] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x13] = 0;\n        puVar1[2] = arg_8h;\n        *puVar1 = arg_28h;\n        *(puVar1 + 0xb2) = 0xf;\n        puVar1[0x28] = 0xffff;\n        puVar1[0x2a] = 0xffff;\n        puVar1[0x29] = 0xffff;\n    }\n    return puVar1;\n}\n",
        "token_count": 380
    },
    "0100810b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0100810b(int32_t arg_8h)\n\n{\n    *(arg_8h + 0xc) = 1;\n    *(arg_8h + 0x10) = 1;\n    *(arg_8h + 0x14) = 1;\n    *(arg_8h + 0x2ec0) = 0;\n    *(arg_8h + 0x2b10) = 0;\n    *(arg_8h + 0x2edc) = 1;\n    *(arg_8h + 0x2ed4) = 0;\n    *(arg_8h + 0x2ed8) = 0;\n    *(arg_8h + 0x2eb8) = 1;\n    *(arg_8h + 0x2ec4) = 0;\n    *(arg_8h + 0x2ebc) = 0;\n    return;\n}\n",
        "token_count": 215
    },
    "01001651": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01001651(char *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_ch;\n    if (arg_ch != 0) {\n        do {\n            if (*arg_8h == '\\0') break;\n            arg_8h = arg_8h + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (iVar1 != 0) {\n            if (arg_10h == NULL) {\n                return 0;\n            }\n            *arg_10h = arg_ch - iVar1;\n            return 0;\n        }\n    }\n    return 0x80070057;\n}\n",
        "token_count": 168
    },
    "010021c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010021c4(char *noname_0, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    char *in_stack_0000000c;\n    \n    if (0x7fffffff < arg_ch) {\n        return 0x80070057;\n    }\n    uVar1 = 0;\n    if (arg_ch == 0) {\n        uVar1 = 0x80070057;\n    }\n    else {\n        do {\n            if (*in_stack_0000000c == '\\0') break;\n            *noname_0 = *in_stack_0000000c;\n            noname_0 = noname_0 + 1;\n            in_stack_0000000c = in_stack_0000000c + 1;\n            arg_ch = arg_ch - 1;\n        } while (arg_ch != 0);\n        if (arg_ch == 0) {\n            noname_0 = noname_0 + -1;\n            uVar1 = 0x8007007a;\n        }\n        *noname_0 = '\\0';\n    }\n    return uVar1;\n}\n",
        "token_count": 248
    },
    "01002f6b": {
        "rules": [
            "contain loop",
            "create directory"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01002f6b(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar2 = arg_8h;\n    cVar1 = *arg_8h;\n    if (cVar1 != '\\0') {\n        pcVar3 = arg_8h + 1;\n        arg_8h = NULL;\n        if ((*pcVar3 == ':') && (pcVar2[2] == '\\\\')) {\n            pcVar3 = pcVar2 + 3;\n        }\n        else if ((cVar1 == '\\\\') && (*pcVar3 == '\\\\')) {\n            pcVar3 = pcVar2 + 2;\n            arg_8h = 0x2;\n        }\n        for (; *pcVar3 != '\\0'; pcVar3 = (*_sym.imp.USER32.dll_CharNextA)(pcVar3)) {\n            if ((*pcVar3 == '\\\\') && (pcVar3[-1] != ':')) {\n                if (arg_8h == NULL) {\n                    *pcVar3 = '\\0';\n                    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(pcVar2, 0);\n                    *pcVar3 = '\\\\';\n                }\n                else {\n                    arg_8h = arg_8h + -1;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "010066cf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010066cf(uchar *lpString, uint32_t arg_ch, char *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char *pcVar3;\n    uchar *puVar4;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    if (iVar1 + 1U < arg_ch) {\n        puVar4 = lpString + iVar1;\n        if (lpString < puVar4) {\n            pcVar3 = (*_sym.imp.USER32.dll_CharPrevA)(lpString, puVar4);\n            if (*pcVar3 != '\\\\') {\n                *puVar4 = 0x5c;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        *puVar4 = 0;\n        for (; *arg_10h == ' '; arg_10h = arg_10h + 1) {\n        }\n        uVar2 = fcn.010026c0(lpString, arg_ch);\n    }\n    else {\n        uVar2 = 0x8007007a;\n    }\n    return uVar2;\n}\n",
        "token_count": 255
    },
    "010019c3": {
        "rules": [
            "shutdown system",
            "modify access privileges"
        ],
        "decompiled_code": "\nuint fcn.010019c3(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint NewState;\n    uint lpLuid;\n    uint var_8h;\n    uint TokenHandle;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    if (iVar2 == 0) {\n        uVar1 = 0x4f5;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, 0x1001274, &lpLuid);\n        NewState = 1;\n        var_8h = 2;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0, 0, 0);\n        if (iVar2 == 0) {\n            uVar1 = 0x4f6;\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2);\n            if (iVar2 != 0) {\n                return 1;\n            }\n            uVar1 = 0x4f7;\n        }\n    }\n    fcn.01003ebe(0, uVar1, 0, 0, 0x10, 0);\n    return 0;\n}\n",
        "token_count": 320
    },
    "01002025": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01002025(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpBuffer;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpBuffer, 0x104);\n    if (iVar1 == 0) {\n        fcn.01003ebe(0, 0x4f0, 0, 0, 0x10, 0);\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 134
    },
    "010047b3": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.010047b3(void)\n\n{\n    int32_t iVar1;\n    uint lpBuffer;\n    uint var_4h;\n    \n    var_4h = *0x100b2d0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpBuffer, 0x104);\n    if (iVar1 == 0) {\n        fcn.01003ebe(0, 0x4f0, 0, 0, 0x10, 0);\n        *0x100ba5c = fcn.01003aa1();\n    }\n    else {\n        fcn.0100456a(&lpBuffer, 2, 2);\n    }\n    fcn.010064de();\n    return;\n}\n",
        "token_count": 169
    },
    "010032ff": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nbool fcn.010032ff(void)\n\n{\n    uint uVar1;\n    \n    *0x100bba4 = fcn.01002e55(0x100135c, 0, 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, 0x100135c, 10);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar1);\n    *0x100bba0 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar1);\n    return *0x100bba0 != 0;\n}\n",
        "token_count": 137
    },
    "010064de": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_234h\n// WARNING: Variable defined which should be unmapped: var_214h\n// WARNING: Variable defined which should be unmapped: var_238h\n// WARNING: Variable defined which should be unmapped: var_23ch\n\nvoid __fastcall fcn.010064de(uint32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint var_330h;\n    uint var_324h;\n    uint32_t var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint32_t var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint32_t var_218h;\n    uchar *var_214h;\n    uint var_210h;\n    uint *ExceptionInfo;\n    uint *var_4h;\n    \n    if ((param_1 == *0x100b2d0) && ((param_1 & 0xffff0000) == 0)) {\n        return;\n    }\n    var_218h = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x330) * 0x800 | (in_IF & 1) * 0x200 |\n               (in_TF & 1) * 0x100 | (&var_330h < 0) * 0x80 | (*0x10 == 0x334) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&var_330h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x330 | (in_ID & 1) * 0x200000 |\n               (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_2d8h = 0x10001;\n    puVar3 = &var_330h;\n    var_230h = param_2;\n    var_22ch = param_1;\n    var_214h = *0x10;\n    for (iVar2 = 0x14; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_330h = 0xc0000409;\n    ExceptionInfo = &var_330h;\n    var_4h = &var_2d8h;\n    var_2e0h = *0x100b2d0;\n    var_2dch = *0x100b2cc;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(&ExceptionInfo);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x502);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 841
    },
    "01006a45": {
        "rules": [
            "get disk size"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01006a45(uint lpRootPathName, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint lpTotalNumberOfClusters;\n    uint lpNumberOfFreeClusters;\n    int32_t lpSectorsPerCluster;\n    int32_t lpBytesPerSector;\n    \n    lpSectorsPerCluster = 0;\n    lpBytesPerSector = 0;\n    lpNumberOfFreeClusters = 0;\n    lpTotalNumberOfClusters = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                      (lpRootPathName, &lpSectorsPerCluster, &lpBytesPerSector, &lpNumberOfFreeClusters, \n                       &lpTotalNumberOfClusters);\n    if (iVar1 != 0) {\n        iVar1 = lpBytesPerSector * lpSectorsPerCluster;\n        (*_sym.imp.KERNEL32.dll_MulDiv)(iVar1, lpNumberOfFreeClusters, 0x400);\n        if (arg_ch != NULL) {\n            *arg_ch = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 231
    }
}